
./kernel:     file format elf32-littlearm


Disassembly of section .text:

00008000 <_start>:
_start():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:14
	;@	- sem skoci bootloader, prvni na co narazi je "ldr pc, _reset_ptr" -> tedy se chova jako kdyby slo o reset a skoci na zacatek provadeni
	;@	- v cele svoji krase (vsechny "ldr" instrukce) slouzi jako predloha skutecne tabulce vektoru preruseni
	;@ na dany offset procesor skoci, kdyz je vyvolano libovolne preruseni
	;@ ARM nastavuje rovnou registr PC na tuto adresu, tzn. na teto adrese musi byt kodovana 4B instrukce skoku nekam jinam
	;@ oproti tomu napr. x86 (x86_64) obsahuje v tabulce rovnou adresu a procesor nastavuje PC (CS:IP) na adresu kterou najde v tabulce
	ldr pc, _reset_ptr						;@ 0x00 - reset - vyvolano pri resetu procesoru
    8000:	e59ff018 	ldr	pc, [pc, #24]	; 8020 <_reset_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:15
	ldr pc, _undefined_instruction_ptr		;@ 0x04 - undefined instruction - vyjimka, vyvolana pri dekodovani nezname instrukce
    8004:	e59ff018 	ldr	pc, [pc, #24]	; 8024 <_undefined_instruction_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:16
	ldr pc, _software_interrupt_ptr			;@ 0x08 - software interrupt - vyvolano, kdyz procesor provede instrukci swi
    8008:	e59ff018 	ldr	pc, [pc, #24]	; 8028 <_software_interrupt_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:17
	ldr pc, _prefetch_abort_ptr				;@ 0x0C - prefetch abort - vyvolano, kdyz se procesor snazi napr. nacist instrukci z mista, odkud nacist nejde
    800c:	e59ff018 	ldr	pc, [pc, #24]	; 802c <_prefetch_abort_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:18
	ldr pc, _data_abort_ptr					;@ 0x10 - data abort - vyvolano, kdyz se procesor snazi napr. nacist data z mista, odkud nacist nejdou
    8010:	e59ff018 	ldr	pc, [pc, #24]	; 8030 <_data_abort_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:19
	ldr pc, _unused_handler_ptr				;@ 0x14 - unused - ve specifikaci ARM neni uvedeno zadne vyuziti
    8014:	e59ff018 	ldr	pc, [pc, #24]	; 8034 <_unused_handler_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:20
	ldr pc, _irq_ptr						;@ 0x18 - IRQ - hardwarove preruseni (general purpose)
    8018:	e59ff018 	ldr	pc, [pc, #24]	; 8038 <_irq_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
	ldr pc, _fast_interrupt_ptr				;@ 0x1C - fast interrupt request - prioritni IRQ pro vysokorychlostni zalezitosti
    801c:	e59ff018 	ldr	pc, [pc, #24]	; 803c <_fast_interrupt_ptr>

00008020 <_reset_ptr>:
_reset_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8020:	00008040 	andeq	r8, r0, r0, asr #32

00008024 <_undefined_instruction_ptr>:
_undefined_instruction_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8024:	0000eafc 	strdeq	lr, [r0], -ip

00008028 <_software_interrupt_ptr>:
_software_interrupt_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8028:	0000eb00 	andeq	lr, r0, r0, lsl #22

0000802c <_prefetch_abort_ptr>:
_prefetch_abort_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    802c:	0000eb48 	andeq	lr, r0, r8, asr #22

00008030 <_data_abort_ptr>:
_data_abort_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8030:	0000eb4c 	andeq	lr, r0, ip, asr #22

00008034 <_unused_handler_ptr>:
_unused_handler_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8034:	00008040 	andeq	r8, r0, r0, asr #32

00008038 <_irq_ptr>:
_irq_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8038:	0000eb20 	andeq	lr, r0, r0, lsr #22

0000803c <_fast_interrupt_ptr>:
_fast_interrupt_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    803c:	0000d58c 	andeq	sp, r0, ip, lsl #11

00008040 <_reset>:
_reset():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:52


;@ kernel reset vektor - tento kod se vykona pri kazdem resetu zarizeni (i prvnim spusteni)
_reset:
	;@ nacteni tabulky vektoru preruseni do pameti
	mov r0, #0x8000			;@ adresa 0x8000 (_start) do r0
    8040:	e3a00902 	mov	r0, #32768	; 0x8000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:53
    mov r1, #0x0000			;@ adresa 0x0000 (pocatek RAM) do r1 - tam budeme vkladat tabulku vektoru preruseni
    8044:	e3a01000 	mov	r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:57

	;@ Thumb instrukce - nacteni 4B slov z pameti ulozene v r0 (0x8000) do registru r2, 3, ... 9
	;@                 - ulozeni obsahu registru r2, 3, ... 9 do pameti ulozene v registru r1 (0x0000)
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8048:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:58
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:59
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:60
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:63

	;@ baze pro systemove zasobniky
	mov r4, #0x0
    8058:	e3a04000 	mov	r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:66

	;@ nejdrive supervisor mod a jeho stack
    mov r0, #(CPSR_MODE_SVR | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    805c:	e3a000d3 	mov	r0, #211	; 0xd3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:67
    msr cpsr_c, r0
    8060:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:68
	add sp, r4, #0x8000
    8064:	e284d902 	add	sp, r4, #32768	; 0x8000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:71

	;@ na moment se prepneme do IRQ rezimu, nastavime mu stack pointer
	mov r0, #(CPSR_MODE_IRQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8068:	e3a000d2 	mov	r0, #210	; 0xd2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:72
    msr cpsr_c, r0
    806c:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:73
	add sp, r4, #0x7000
    8070:	e284da07 	add	sp, r4, #28672	; 0x7000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:76

	;@ na moment se prepneme do FIQ rezimu, nastavime mu stack pointer
	mov r0, #(CPSR_MODE_FIQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8074:	e3a000d1 	mov	r0, #209	; 0xd1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:77
    msr cpsr_c, r0
    8078:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:78
	add sp, r4, #0x6000
    807c:	e284da06 	add	sp, r4, #24576	; 0x6000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:81

	;@ nakonec system mod a stack
    mov r0, #(CPSR_MODE_SYS | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8080:	e3a000df 	mov	r0, #223	; 0xdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:82
    msr cpsr_c, r0
    8084:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:83
	add sp, r4, #0x5000
    8088:	e284da05 	add	sp, r4, #20480	; 0x5000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:86

	;@ zapneme nezarovnany pristup do pameti (nemusi byt zadouci, ale pro nase potreby je to v poradku)
	mrc p15, #0, r4, c1, c0, #0
    808c:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:87
	orr r4, #0x400000
    8090:	e3844501 	orr	r4, r4, #4194304	; 0x400000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:88
	mcr p15, #0, r4, c1, c0, #0
    8094:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:90

	bl _c_startup			;@ C startup kod (inicializace prostredi)
    8098:	eb001aac 	bl	eb50 <_c_startup>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:91
	bl _cpp_startup			;@ C++ startup kod (volani globalnich konstruktoru, ...)
    809c:	eb001ac5 	bl	ebb8 <_cpp_startup>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:92
	bl _kernel_main			;@ skocime do hlavniho kodu jadra (v C)
    80a0:	eb0015c5 	bl	d7bc <_kernel_main>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:93
	bl _cpp_shutdown		;@ C++ shutdown kod (volani globalnich destruktoru, ...)
    80a4:	eb001ad9 	bl	ec10 <_cpp_shutdown>

000080a8 <hang>:
hang():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:95
hang:
	b hang
    80a8:	eafffffe 	b	80a8 <hang>

000080ac <__cxa_guard_acquire>:
__cxa_guard_acquire():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:11
    extern "C" int __cxa_guard_acquire(__guard*);
    extern "C" void __cxa_guard_release(__guard*);
    extern "C" void __cxa_guard_abort(__guard*);

    extern "C" int __cxa_guard_acquire(__guard* g)
    {
    80ac:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    80b0:	e28db000 	add	fp, sp, #0
    80b4:	e24dd00c 	sub	sp, sp, #12
    80b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:12
        return !*(char*)(g);
    80bc:	e51b3008 	ldr	r3, [fp, #-8]
    80c0:	e5d33000 	ldrb	r3, [r3]
    80c4:	e3530000 	cmp	r3, #0
    80c8:	03a03001 	moveq	r3, #1
    80cc:	13a03000 	movne	r3, #0
    80d0:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:13
    }
    80d4:	e1a00003 	mov	r0, r3
    80d8:	e28bd000 	add	sp, fp, #0
    80dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    80e0:	e12fff1e 	bx	lr

000080e4 <__cxa_guard_release>:
__cxa_guard_release():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:16

    extern "C" void __cxa_guard_release(__guard* g)
    {
    80e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    80e8:	e28db000 	add	fp, sp, #0
    80ec:	e24dd00c 	sub	sp, sp, #12
    80f0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:17
        *(char*)g = 1;
    80f4:	e51b3008 	ldr	r3, [fp, #-8]
    80f8:	e3a02001 	mov	r2, #1
    80fc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:18
    }
    8100:	e320f000 	nop	{0}
    8104:	e28bd000 	add	sp, fp, #0
    8108:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    810c:	e12fff1e 	bx	lr

00008110 <__cxa_guard_abort>:
__cxa_guard_abort():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:21

    extern "C" void __cxa_guard_abort(__guard*)
    {
    8110:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8114:	e28db000 	add	fp, sp, #0
    8118:	e24dd00c 	sub	sp, sp, #12
    811c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:22
    }
    8120:	e320f000 	nop	{0}
    8124:	e28bd000 	add	sp, fp, #0
    8128:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    812c:	e12fff1e 	bx	lr

00008130 <__dso_handle>:
__dso_handle():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:26
}

extern "C" void __dso_handle()
{
    8130:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8134:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:28
    // ignore dtors for now
}
    8138:	e320f000 	nop	{0}
    813c:	e28bd000 	add	sp, fp, #0
    8140:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8144:	e12fff1e 	bx	lr

00008148 <__cxa_atexit>:
__cxa_atexit():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:31

extern "C" void __cxa_atexit()
{
    8148:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    814c:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:33
    // ignore dtors for now
}
    8150:	e320f000 	nop	{0}
    8154:	e28bd000 	add	sp, fp, #0
    8158:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    815c:	e12fff1e 	bx	lr

00008160 <__cxa_pure_virtual>:
__cxa_pure_virtual():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:36

extern "C" void __cxa_pure_virtual()
{
    8160:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8164:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:38
    // pure virtual method called
}
    8168:	e320f000 	nop	{0}
    816c:	e28bd000 	add	sp, fp, #0
    8170:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8174:	e12fff1e 	bx	lr

00008178 <__aeabi_unwind_cpp_pr1>:
__aeabi_unwind_cpp_pr1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:41

extern "C" void __aeabi_unwind_cpp_pr1()
{
    8178:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    817c:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:42 (discriminator 1)
    while (true)
    8180:	eafffffe 	b	8180 <__aeabi_unwind_cpp_pr1+0x8>

00008184 <_ZN13CGPIO_HandlerC1Ej>:
_ZN13CGPIO_HandlerC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:8

#include <stdstring.h>

CGPIO_Handler sGPIO(hal::GPIO_Base);

CGPIO_Handler::CGPIO_Handler(unsigned int gpio_base_addr)
    8184:	e92d4800 	push	{fp, lr}
    8188:	e28db004 	add	fp, sp, #4
    818c:	e24dd008 	sub	sp, sp, #8
    8190:	e50b0008 	str	r0, [fp, #-8]
    8194:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:9
: mGPIO(reinterpret_cast<unsigned int*>(gpio_base_addr))
    8198:	e51b200c 	ldr	r2, [fp, #-12]
    819c:	e51b3008 	ldr	r3, [fp, #-8]
    81a0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:11
{
    bzero(&mPin_Reservations_Read, sizeof(mPin_Reservations_Read));
    81a4:	e51b3008 	ldr	r3, [fp, #-8]
    81a8:	e2833004 	add	r3, r3, #4
    81ac:	e3a01008 	mov	r1, #8
    81b0:	e1a00003 	mov	r0, r3
    81b4:	eb001d95 	bl	f810 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:12
    bzero(&mPin_Reservations_Write, sizeof(mPin_Reservations_Write));
    81b8:	e51b3008 	ldr	r3, [fp, #-8]
    81bc:	e283300c 	add	r3, r3, #12
    81c0:	e3a01008 	mov	r1, #8
    81c4:	e1a00003 	mov	r0, r3
    81c8:	eb001d90 	bl	f810 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:13
}
    81cc:	e51b3008 	ldr	r3, [fp, #-8]
    81d0:	e1a00003 	mov	r0, r3
    81d4:	e24bd004 	sub	sp, fp, #4
    81d8:	e8bd8800 	pop	{fp, pc}

000081dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>:
_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:16

bool CGPIO_Handler::Get_GPFSEL_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    81dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    81e0:	e28db000 	add	fp, sp, #0
    81e4:	e24dd014 	sub	sp, sp, #20
    81e8:	e50b0008 	str	r0, [fp, #-8]
    81ec:	e50b100c 	str	r1, [fp, #-12]
    81f0:	e50b2010 	str	r2, [fp, #-16]
    81f4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:17
    if (pin > hal::GPIO_Pin_Count)
    81f8:	e51b300c 	ldr	r3, [fp, #-12]
    81fc:	e3530036 	cmp	r3, #54	; 0x36
    8200:	9a000001 	bls	820c <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:18
        return false;
    8204:	e3a03000 	mov	r3, #0
    8208:	ea000014 	b	8260 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:20

    reg = pin / 10;
    820c:	e51b300c 	ldr	r3, [fp, #-12]
    8210:	e59f2058 	ldr	r2, [pc, #88]	; 8270 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x94>
    8214:	e0832392 	umull	r2, r3, r2, r3
    8218:	e1a021a3 	lsr	r2, r3, #3
    821c:	e51b3010 	ldr	r3, [fp, #-16]
    8220:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:31
            case 3: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL3); break;
            case 4: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL4); break;
            case 5: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL5); break;
    }*/

    bit_idx = (pin % 10) * 3;
    8224:	e51b100c 	ldr	r1, [fp, #-12]
    8228:	e59f3040 	ldr	r3, [pc, #64]	; 8270 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x94>
    822c:	e0832193 	umull	r2, r3, r3, r1
    8230:	e1a021a3 	lsr	r2, r3, #3
    8234:	e1a03002 	mov	r3, r2
    8238:	e1a03103 	lsl	r3, r3, #2
    823c:	e0833002 	add	r3, r3, r2
    8240:	e1a03083 	lsl	r3, r3, #1
    8244:	e0412003 	sub	r2, r1, r3
    8248:	e1a03002 	mov	r3, r2
    824c:	e1a03083 	lsl	r3, r3, #1
    8250:	e0832002 	add	r2, r3, r2
    8254:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8258:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:33

    return true;
    825c:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:34
}
    8260:	e1a00003 	mov	r0, r3
    8264:	e28bd000 	add	sp, fp, #0
    8268:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    826c:	e12fff1e 	bx	lr
    8270:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd

00008274 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:37

bool CGPIO_Handler::Get_GPCLR_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    8274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8278:	e28db000 	add	fp, sp, #0
    827c:	e24dd014 	sub	sp, sp, #20
    8280:	e50b0008 	str	r0, [fp, #-8]
    8284:	e50b100c 	str	r1, [fp, #-12]
    8288:	e50b2010 	str	r2, [fp, #-16]
    828c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:38
    if (pin > hal::GPIO_Pin_Count)
    8290:	e51b300c 	ldr	r3, [fp, #-12]
    8294:	e3530036 	cmp	r3, #54	; 0x36
    8298:	9a000001 	bls	82a4 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:39
        return false;
    829c:	e3a03000 	mov	r3, #0
    82a0:	ea00000c 	b	82d8 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPCLR0 : hal::GPIO_Reg::GPCLR1);
    82a4:	e51b300c 	ldr	r3, [fp, #-12]
    82a8:	e353001f 	cmp	r3, #31
    82ac:	8a000001 	bhi	82b8 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 1)
    82b0:	e3a0200a 	mov	r2, #10
    82b4:	ea000000 	b	82bc <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 2)
    82b8:	e3a0200b 	mov	r2, #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 4)
    82bc:	e51b3010 	ldr	r3, [fp, #-16]
    82c0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:42 (discriminator 4)
    bit_idx = pin % 32;
    82c4:	e51b300c 	ldr	r3, [fp, #-12]
    82c8:	e203201f 	and	r2, r3, #31
    82cc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    82d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:44 (discriminator 4)

    return true;
    82d4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:45
}
    82d8:	e1a00003 	mov	r0, r3
    82dc:	e28bd000 	add	sp, fp, #0
    82e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    82e4:	e12fff1e 	bx	lr

000082e8 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:48

bool CGPIO_Handler::Get_GPSET_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    82e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    82ec:	e28db000 	add	fp, sp, #0
    82f0:	e24dd014 	sub	sp, sp, #20
    82f4:	e50b0008 	str	r0, [fp, #-8]
    82f8:	e50b100c 	str	r1, [fp, #-12]
    82fc:	e50b2010 	str	r2, [fp, #-16]
    8300:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:49
    if (pin > hal::GPIO_Pin_Count)
    8304:	e51b300c 	ldr	r3, [fp, #-12]
    8308:	e3530036 	cmp	r3, #54	; 0x36
    830c:	9a000001 	bls	8318 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:50
        return false;
    8310:	e3a03000 	mov	r3, #0
    8314:	ea00000c 	b	834c <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPSET0 : hal::GPIO_Reg::GPSET1);
    8318:	e51b300c 	ldr	r3, [fp, #-12]
    831c:	e353001f 	cmp	r3, #31
    8320:	8a000001 	bhi	832c <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 1)
    8324:	e3a02007 	mov	r2, #7
    8328:	ea000000 	b	8330 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 2)
    832c:	e3a02008 	mov	r2, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 4)
    8330:	e51b3010 	ldr	r3, [fp, #-16]
    8334:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:53 (discriminator 4)
    bit_idx = pin % 32;
    8338:	e51b300c 	ldr	r3, [fp, #-12]
    833c:	e203201f 	and	r2, r3, #31
    8340:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8344:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:55 (discriminator 4)

    return true;
    8348:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:56
}
    834c:	e1a00003 	mov	r0, r3
    8350:	e28bd000 	add	sp, fp, #0
    8354:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8358:	e12fff1e 	bx	lr

0000835c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:59

bool CGPIO_Handler::Get_GPLEV_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    835c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8360:	e28db000 	add	fp, sp, #0
    8364:	e24dd014 	sub	sp, sp, #20
    8368:	e50b0008 	str	r0, [fp, #-8]
    836c:	e50b100c 	str	r1, [fp, #-12]
    8370:	e50b2010 	str	r2, [fp, #-16]
    8374:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:60
    if (pin > hal::GPIO_Pin_Count)
    8378:	e51b300c 	ldr	r3, [fp, #-12]
    837c:	e3530036 	cmp	r3, #54	; 0x36
    8380:	9a000001 	bls	838c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:61
        return false;
    8384:	e3a03000 	mov	r3, #0
    8388:	ea00000c 	b	83c0 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPLEV0 : hal::GPIO_Reg::GPLEV1);
    838c:	e51b300c 	ldr	r3, [fp, #-12]
    8390:	e353001f 	cmp	r3, #31
    8394:	8a000001 	bhi	83a0 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 1)
    8398:	e3a0200d 	mov	r2, #13
    839c:	ea000000 	b	83a4 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 2)
    83a0:	e3a0200e 	mov	r2, #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 4)
    83a4:	e51b3010 	ldr	r3, [fp, #-16]
    83a8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:64 (discriminator 4)
    bit_idx = pin % 32;
    83ac:	e51b300c 	ldr	r3, [fp, #-12]
    83b0:	e203201f 	and	r2, r3, #31
    83b4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    83b8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:66 (discriminator 4)

    return true;
    83bc:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:67
}
    83c0:	e1a00003 	mov	r0, r3
    83c4:	e28bd000 	add	sp, fp, #0
    83c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    83cc:	e12fff1e 	bx	lr

000083d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>:
_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:70

void CGPIO_Handler::Set_GPIO_Function(uint32_t pin, NGPIO_Function func)
{
    83d0:	e92d4800 	push	{fp, lr}
    83d4:	e28db004 	add	fp, sp, #4
    83d8:	e24dd020 	sub	sp, sp, #32
    83dc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    83e0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    83e4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:72
    uint32_t reg, bit;
    if (!Get_GPFSEL_Location(pin, reg, bit))
    83e8:	e24b3014 	sub	r3, fp, #20
    83ec:	e24b2010 	sub	r2, fp, #16
    83f0:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    83f4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    83f8:	ebffff77 	bl	81dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>
    83fc:	e1a03000 	mov	r3, r0
    8400:	e2233001 	eor	r3, r3, #1
    8404:	e6ef3073 	uxtb	r3, r3
    8408:	e3530000 	cmp	r3, #0
    840c:	1a00001e 	bne	848c <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:75
        return;

    unsigned int mode = static_cast<unsigned int>(func);
    8410:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    8414:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:77

    unsigned int rd = mGPIO[reg];
    8418:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    841c:	e5932000 	ldr	r2, [r3]
    8420:	e51b3010 	ldr	r3, [fp, #-16]
    8424:	e1a03103 	lsl	r3, r3, #2
    8428:	e0823003 	add	r3, r2, r3
    842c:	e5933000 	ldr	r3, [r3]
    8430:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:78
    rd &= ~(7 << bit);
    8434:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8438:	e3a02007 	mov	r2, #7
    843c:	e1a03312 	lsl	r3, r2, r3
    8440:	e1e03003 	mvn	r3, r3
    8444:	e1a02003 	mov	r2, r3
    8448:	e51b300c 	ldr	r3, [fp, #-12]
    844c:	e0033002 	and	r3, r3, r2
    8450:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:79
    rd |= (mode << bit);
    8454:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8458:	e51b2008 	ldr	r2, [fp, #-8]
    845c:	e1a03312 	lsl	r3, r2, r3
    8460:	e51b200c 	ldr	r2, [fp, #-12]
    8464:	e1823003 	orr	r3, r2, r3
    8468:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:81

    mGPIO[reg] = rd;
    846c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8470:	e5932000 	ldr	r2, [r3]
    8474:	e51b3010 	ldr	r3, [fp, #-16]
    8478:	e1a03103 	lsl	r3, r3, #2
    847c:	e0823003 	add	r3, r2, r3
    8480:	e51b200c 	ldr	r2, [fp, #-12]
    8484:	e5832000 	str	r2, [r3]
    8488:	ea000000 	b	8490 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:73
        return;
    848c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:82
}
    8490:	e24bd004 	sub	sp, fp, #4
    8494:	e8bd8800 	pop	{fp, pc}

00008498 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj>:
_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:85

NGPIO_Function CGPIO_Handler::Get_GPIO_Function(uint32_t pin) const
{
    8498:	e92d4800 	push	{fp, lr}
    849c:	e28db004 	add	fp, sp, #4
    84a0:	e24dd010 	sub	sp, sp, #16
    84a4:	e50b0010 	str	r0, [fp, #-16]
    84a8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:87
    uint32_t reg, bit;
    if (!Get_GPFSEL_Location(pin, reg, bit))
    84ac:	e24b300c 	sub	r3, fp, #12
    84b0:	e24b2008 	sub	r2, fp, #8
    84b4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    84b8:	e51b0010 	ldr	r0, [fp, #-16]
    84bc:	ebffff46 	bl	81dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>
    84c0:	e1a03000 	mov	r3, r0
    84c4:	e2233001 	eor	r3, r3, #1
    84c8:	e6ef3073 	uxtb	r3, r3
    84cc:	e3530000 	cmp	r3, #0
    84d0:	0a000001 	beq	84dc <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:88
        return NGPIO_Function::Unspecified;
    84d4:	e3a03008 	mov	r3, #8
    84d8:	ea000008 	b	8500 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:90

    return static_cast<NGPIO_Function>((mGPIO[reg] >> bit) & 7);
    84dc:	e51b3010 	ldr	r3, [fp, #-16]
    84e0:	e5932000 	ldr	r2, [r3]
    84e4:	e51b3008 	ldr	r3, [fp, #-8]
    84e8:	e1a03103 	lsl	r3, r3, #2
    84ec:	e0823003 	add	r3, r2, r3
    84f0:	e5932000 	ldr	r2, [r3]
    84f4:	e51b300c 	ldr	r3, [fp, #-12]
    84f8:	e1a03332 	lsr	r3, r2, r3
    84fc:	e2033007 	and	r3, r3, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:91 (discriminator 1)
}
    8500:	e1a00003 	mov	r0, r3
    8504:	e24bd004 	sub	sp, fp, #4
    8508:	e8bd8800 	pop	{fp, pc}

0000850c <_ZN13CGPIO_Handler10Set_OutputEjb>:
_ZN13CGPIO_Handler10Set_OutputEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:94

void CGPIO_Handler::Set_Output(uint32_t pin, bool set)
{
    850c:	e92d4800 	push	{fp, lr}
    8510:	e28db004 	add	fp, sp, #4
    8514:	e24dd018 	sub	sp, sp, #24
    8518:	e50b0010 	str	r0, [fp, #-16]
    851c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    8520:	e1a03002 	mov	r3, r2
    8524:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96
    uint32_t reg, bit;
    if (!(set && Get_GPSET_Location(pin, reg, bit)) && !(!set && Get_GPCLR_Location(pin, reg, bit)))
    8528:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    852c:	e2233001 	eor	r3, r3, #1
    8530:	e6ef3073 	uxtb	r3, r3
    8534:	e3530000 	cmp	r3, #0
    8538:	1a000009 	bne	8564 <_ZN13CGPIO_Handler10Set_OutputEjb+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 2)
    853c:	e24b300c 	sub	r3, fp, #12
    8540:	e24b2008 	sub	r2, fp, #8
    8544:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    8548:	e51b0010 	ldr	r0, [fp, #-16]
    854c:	ebffff65 	bl	82e8 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_>
    8550:	e1a03000 	mov	r3, r0
    8554:	e2233001 	eor	r3, r3, #1
    8558:	e6ef3073 	uxtb	r3, r3
    855c:	e3530000 	cmp	r3, #0
    8560:	0a00000e 	beq	85a0 <_ZN13CGPIO_Handler10Set_OutputEjb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 3)
    8564:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    8568:	e3530000 	cmp	r3, #0
    856c:	1a000009 	bne	8598 <_ZN13CGPIO_Handler10Set_OutputEjb+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 6)
    8570:	e24b300c 	sub	r3, fp, #12
    8574:	e24b2008 	sub	r2, fp, #8
    8578:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    857c:	e51b0010 	ldr	r0, [fp, #-16]
    8580:	ebffff3b 	bl	8274 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_>
    8584:	e1a03000 	mov	r3, r0
    8588:	e2233001 	eor	r3, r3, #1
    858c:	e6ef3073 	uxtb	r3, r3
    8590:	e3530000 	cmp	r3, #0
    8594:	0a000001 	beq	85a0 <_ZN13CGPIO_Handler10Set_OutputEjb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 7)
    8598:	e3a03001 	mov	r3, #1
    859c:	ea000000 	b	85a4 <_ZN13CGPIO_Handler10Set_OutputEjb+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 8)
    85a0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 10)
    85a4:	e3530000 	cmp	r3, #0
    85a8:	1a00000a 	bne	85d8 <_ZN13CGPIO_Handler10Set_OutputEjb+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:99
        return;

    mGPIO[reg] = (1 << bit);
    85ac:	e51b300c 	ldr	r3, [fp, #-12]
    85b0:	e3a02001 	mov	r2, #1
    85b4:	e1a01312 	lsl	r1, r2, r3
    85b8:	e51b3010 	ldr	r3, [fp, #-16]
    85bc:	e5932000 	ldr	r2, [r3]
    85c0:	e51b3008 	ldr	r3, [fp, #-8]
    85c4:	e1a03103 	lsl	r3, r3, #2
    85c8:	e0823003 	add	r3, r2, r3
    85cc:	e1a02001 	mov	r2, r1
    85d0:	e5832000 	str	r2, [r3]
    85d4:	ea000000 	b	85dc <_ZN13CGPIO_Handler10Set_OutputEjb+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:97
        return;
    85d8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:100
}
    85dc:	e24bd004 	sub	sp, fp, #4
    85e0:	e8bd8800 	pop	{fp, pc}

000085e4 <_ZN13CGPIO_Handler9Get_InputEj>:
_ZN13CGPIO_Handler9Get_InputEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:103

bool CGPIO_Handler::Get_Input(uint32_t pin)
{
    85e4:	e92d4800 	push	{fp, lr}
    85e8:	e28db004 	add	fp, sp, #4
    85ec:	e24dd010 	sub	sp, sp, #16
    85f0:	e50b0010 	str	r0, [fp, #-16]
    85f4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:105
    uint32_t reg, bit;
    if (!Get_GPLEV_Location(pin, reg, bit))
    85f8:	e24b300c 	sub	r3, fp, #12
    85fc:	e24b2008 	sub	r2, fp, #8
    8600:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    8604:	e51b0010 	ldr	r0, [fp, #-16]
    8608:	ebffff53 	bl	835c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_>
    860c:	e1a03000 	mov	r3, r0
    8610:	e2233001 	eor	r3, r3, #1
    8614:	e6ef3073 	uxtb	r3, r3
    8618:	e3530000 	cmp	r3, #0
    861c:	0a000001 	beq	8628 <_ZN13CGPIO_Handler9Get_InputEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:106
        return false;
    8620:	e3a03000 	mov	r3, #0
    8624:	ea00000c 	b	865c <_ZN13CGPIO_Handler9Get_InputEj+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:108

    return (mGPIO[reg] >> bit) & 0x1;
    8628:	e51b3010 	ldr	r3, [fp, #-16]
    862c:	e5932000 	ldr	r2, [r3]
    8630:	e51b3008 	ldr	r3, [fp, #-8]
    8634:	e1a03103 	lsl	r3, r3, #2
    8638:	e0823003 	add	r3, r2, r3
    863c:	e5932000 	ldr	r2, [r3]
    8640:	e51b300c 	ldr	r3, [fp, #-12]
    8644:	e1a03332 	lsr	r3, r2, r3
    8648:	e2033001 	and	r3, r3, #1
    864c:	e3530000 	cmp	r3, #0
    8650:	13a03001 	movne	r3, #1
    8654:	03a03000 	moveq	r3, #0
    8658:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:109 (discriminator 1)
}
    865c:	e1a00003 	mov	r0, r3
    8660:	e24bd004 	sub	sp, fp, #4
    8664:	e8bd8800 	pop	{fp, pc}

00008668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>:
_ZN13CGPIO_Handler11Reserve_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:112

bool CGPIO_Handler::Reserve_Pin(uint32_t pin, bool read, bool write)
{
    8668:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
    866c:	e28db014 	add	fp, sp, #20
    8670:	e24dd018 	sub	sp, sp, #24
    8674:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    8678:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    867c:	e1a01002 	mov	r1, r2
    8680:	e1a02003 	mov	r2, r3
    8684:	e1a03001 	mov	r3, r1
    8688:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
    868c:	e1a03002 	mov	r3, r2
    8690:	e54b3026 	strb	r3, [fp, #-38]	; 0xffffffda
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:115
    // TODO: zamek, tady by se neco mohlo sejit

    uint32_t bank_idx = pin / 32;
    8694:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8698:	e1a032a3 	lsr	r3, r3, #5
    869c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:116
    uint32_t bit_idx = pin % 32;
    86a0:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    86a4:	e203301f 	and	r3, r3, #31
    86a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118

    if (read && (mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1)
    86ac:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    86b0:	e3530000 	cmp	r3, #0
    86b4:	0a00000b 	beq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118 (discriminator 1)
    86b8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    86bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    86c0:	e1a03103 	lsl	r3, r3, #2
    86c4:	e0823003 	add	r3, r2, r3
    86c8:	e5932004 	ldr	r2, [r3, #4]
    86cc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    86d0:	e1a03332 	lsr	r3, r2, r3
    86d4:	e2033001 	and	r3, r3, #1
    86d8:	e3530000 	cmp	r3, #0
    86dc:	0a000001 	beq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:119
        return false;
    86e0:	e3a03000 	mov	r3, #0
    86e4:	ea000042 	b	87f4 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x18c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121

    if (write && (mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1)
    86e8:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    86ec:	e3530000 	cmp	r3, #0
    86f0:	0a00000c 	beq	8728 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121 (discriminator 1)
    86f4:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    86f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    86fc:	e2833002 	add	r3, r3, #2
    8700:	e1a03103 	lsl	r3, r3, #2
    8704:	e0823003 	add	r3, r2, r3
    8708:	e5932004 	ldr	r2, [r3, #4]
    870c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8710:	e1a03332 	lsr	r3, r2, r3
    8714:	e2033001 	and	r3, r3, #1
    8718:	e3530000 	cmp	r3, #0
    871c:	0a000001 	beq	8728 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:122
        return false;
    8720:	e3a03000 	mov	r3, #0
    8724:	ea000032 	b	87f4 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x18c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:124

    if (read)
    8728:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    872c:	e3530000 	cmp	r3, #0
    8730:	0a000014 	beq	8788 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x120>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:125
        mPin_Reservations_Read[bank_idx] |= 1ULL << bit_idx;
    8734:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8738:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    873c:	e1a03103 	lsl	r3, r3, #2
    8740:	e0823003 	add	r3, r2, r3
    8744:	e5930004 	ldr	r0, [r3, #4]
    8748:	e3a02001 	mov	r2, #1
    874c:	e3a03000 	mov	r3, #0
    8750:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    8754:	e241e020 	sub	lr, r1, #32
    8758:	e261c020 	rsb	ip, r1, #32
    875c:	e1a07113 	lsl	r7, r3, r1
    8760:	e1877e12 	orr	r7, r7, r2, lsl lr
    8764:	e1877c32 	orr	r7, r7, r2, lsr ip
    8768:	e1a06112 	lsl	r6, r2, r1
    876c:	e1a03006 	mov	r3, r6
    8770:	e1802003 	orr	r2, r0, r3
    8774:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    8778:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    877c:	e1a03103 	lsl	r3, r3, #2
    8780:	e0813003 	add	r3, r1, r3
    8784:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:127

    if (write)
    8788:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    878c:	e3530000 	cmp	r3, #0
    8790:	0a000016 	beq	87f0 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x188>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:128
        mPin_Reservations_Write[bank_idx] |= 1ULL << bit_idx;
    8794:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8798:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    879c:	e2833002 	add	r3, r3, #2
    87a0:	e1a03103 	lsl	r3, r3, #2
    87a4:	e0823003 	add	r3, r2, r3
    87a8:	e5930004 	ldr	r0, [r3, #4]
    87ac:	e3a02001 	mov	r2, #1
    87b0:	e3a03000 	mov	r3, #0
    87b4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    87b8:	e241e020 	sub	lr, r1, #32
    87bc:	e261c020 	rsb	ip, r1, #32
    87c0:	e1a05113 	lsl	r5, r3, r1
    87c4:	e1855e12 	orr	r5, r5, r2, lsl lr
    87c8:	e1855c32 	orr	r5, r5, r2, lsr ip
    87cc:	e1a04112 	lsl	r4, r2, r1
    87d0:	e1a03004 	mov	r3, r4
    87d4:	e1802003 	orr	r2, r0, r3
    87d8:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    87dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    87e0:	e2833002 	add	r3, r3, #2
    87e4:	e1a03103 	lsl	r3, r3, #2
    87e8:	e0813003 	add	r3, r1, r3
    87ec:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:130

    return true;
    87f0:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:131
}
    87f4:	e1a00003 	mov	r0, r3
    87f8:	e24bd014 	sub	sp, fp, #20
    87fc:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

00008800 <_ZN13CGPIO_Handler8Free_PinEjbb>:
_ZN13CGPIO_Handler8Free_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:134

bool CGPIO_Handler::Free_Pin(uint32_t pin, bool read, bool write)
{
    8800:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
    8804:	e28db014 	add	fp, sp, #20
    8808:	e24dd018 	sub	sp, sp, #24
    880c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    8810:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    8814:	e1a01002 	mov	r1, r2
    8818:	e1a02003 	mov	r2, r3
    881c:	e1a03001 	mov	r3, r1
    8820:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
    8824:	e1a03002 	mov	r3, r2
    8828:	e54b3026 	strb	r3, [fp, #-38]	; 0xffffffda
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:135
    uint32_t bank_idx = pin / 32;
    882c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8830:	e1a032a3 	lsr	r3, r3, #5
    8834:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:136
    uint32_t bit_idx = pin % 32;
    8838:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    883c:	e203301f 	and	r3, r3, #31
    8840:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138

    if (read && !((mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1))
    8844:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    8848:	e3530000 	cmp	r3, #0
    884c:	0a00000b 	beq	8880 <_ZN13CGPIO_Handler8Free_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138 (discriminator 1)
    8850:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8854:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8858:	e1a03103 	lsl	r3, r3, #2
    885c:	e0823003 	add	r3, r2, r3
    8860:	e5932004 	ldr	r2, [r3, #4]
    8864:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8868:	e1a03332 	lsr	r3, r2, r3
    886c:	e2033001 	and	r3, r3, #1
    8870:	e3530000 	cmp	r3, #0
    8874:	1a000001 	bne	8880 <_ZN13CGPIO_Handler8Free_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:139
        return false;
    8878:	e3a03000 	mov	r3, #0
    887c:	ea000044 	b	8994 <_ZN13CGPIO_Handler8Free_PinEjbb+0x194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141

    if (write && !((mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1))
    8880:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    8884:	e3530000 	cmp	r3, #0
    8888:	0a00000c 	beq	88c0 <_ZN13CGPIO_Handler8Free_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141 (discriminator 1)
    888c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8890:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8894:	e2833002 	add	r3, r3, #2
    8898:	e1a03103 	lsl	r3, r3, #2
    889c:	e0823003 	add	r3, r2, r3
    88a0:	e5932004 	ldr	r2, [r3, #4]
    88a4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    88a8:	e1a03332 	lsr	r3, r2, r3
    88ac:	e2033001 	and	r3, r3, #1
    88b0:	e3530000 	cmp	r3, #0
    88b4:	1a000001 	bne	88c0 <_ZN13CGPIO_Handler8Free_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:142
        return false;
    88b8:	e3a03000 	mov	r3, #0
    88bc:	ea000034 	b	8994 <_ZN13CGPIO_Handler8Free_PinEjbb+0x194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:144

    if (read)
    88c0:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    88c4:	e3530000 	cmp	r3, #0
    88c8:	0a000015 	beq	8924 <_ZN13CGPIO_Handler8Free_PinEjbb+0x124>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:145
        mPin_Reservations_Read[bank_idx] &= ~(1ULL << bit_idx);
    88cc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    88d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    88d4:	e1a03103 	lsl	r3, r3, #2
    88d8:	e0823003 	add	r3, r2, r3
    88dc:	e5930004 	ldr	r0, [r3, #4]
    88e0:	e3a02001 	mov	r2, #1
    88e4:	e3a03000 	mov	r3, #0
    88e8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    88ec:	e241e020 	sub	lr, r1, #32
    88f0:	e261c020 	rsb	ip, r1, #32
    88f4:	e1a07113 	lsl	r7, r3, r1
    88f8:	e1877e12 	orr	r7, r7, r2, lsl lr
    88fc:	e1877c32 	orr	r7, r7, r2, lsr ip
    8900:	e1a06112 	lsl	r6, r2, r1
    8904:	e1a03006 	mov	r3, r6
    8908:	e1e03003 	mvn	r3, r3
    890c:	e0002003 	and	r2, r0, r3
    8910:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    8914:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8918:	e1a03103 	lsl	r3, r3, #2
    891c:	e0813003 	add	r3, r1, r3
    8920:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:147

    if (write)
    8924:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    8928:	e3530000 	cmp	r3, #0
    892c:	0a000017 	beq	8990 <_ZN13CGPIO_Handler8Free_PinEjbb+0x190>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:148
        mPin_Reservations_Write[bank_idx] &= ~(1ULL << bit_idx);
    8930:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8934:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8938:	e2833002 	add	r3, r3, #2
    893c:	e1a03103 	lsl	r3, r3, #2
    8940:	e0823003 	add	r3, r2, r3
    8944:	e5930004 	ldr	r0, [r3, #4]
    8948:	e3a02001 	mov	r2, #1
    894c:	e3a03000 	mov	r3, #0
    8950:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    8954:	e241e020 	sub	lr, r1, #32
    8958:	e261c020 	rsb	ip, r1, #32
    895c:	e1a05113 	lsl	r5, r3, r1
    8960:	e1855e12 	orr	r5, r5, r2, lsl lr
    8964:	e1855c32 	orr	r5, r5, r2, lsr ip
    8968:	e1a04112 	lsl	r4, r2, r1
    896c:	e1a03004 	mov	r3, r4
    8970:	e1e03003 	mvn	r3, r3
    8974:	e0002003 	and	r2, r0, r3
    8978:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    897c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8980:	e2833002 	add	r3, r3, #2
    8984:	e1a03103 	lsl	r3, r3, #2
    8988:	e0813003 	add	r3, r1, r3
    898c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:150

    return true;
    8990:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    8994:	e1a00003 	mov	r0, r3
    8998:	e24bd014 	sub	sp, fp, #20
    899c:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

000089a0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89a0:	e92d4800 	push	{fp, lr}
    89a4:	e28db004 	add	fp, sp, #4
    89a8:	e24dd008 	sub	sp, sp, #8
    89ac:	e50b0008 	str	r0, [fp, #-8]
    89b0:	e50b100c 	str	r1, [fp, #-12]
    89b4:	e51b3008 	ldr	r3, [fp, #-8]
    89b8:	e3530001 	cmp	r3, #1
    89bc:	1a000006 	bne	89dc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151 (discriminator 1)
    89c0:	e51b300c 	ldr	r3, [fp, #-12]
    89c4:	e59f201c 	ldr	r2, [pc, #28]	; 89e8 <_Z41__static_initialization_and_destruction_0ii+0x48>
    89c8:	e1530002 	cmp	r3, r2
    89cc:	1a000002 	bne	89dc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:6
CGPIO_Handler sGPIO(hal::GPIO_Base);
    89d0:	e59f1014 	ldr	r1, [pc, #20]	; 89ec <_Z41__static_initialization_and_destruction_0ii+0x4c>
    89d4:	e59f0014 	ldr	r0, [pc, #20]	; 89f0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    89d8:	ebfffde9 	bl	8184 <_ZN13CGPIO_HandlerC1Ej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    89dc:	e320f000 	nop	{0}
    89e0:	e24bd004 	sub	sp, fp, #4
    89e4:	e8bd8800 	pop	{fp, pc}
    89e8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    89ec:	20200000 	eorcs	r0, r0, r0
    89f0:	00010b5c 	andeq	r0, r1, ip, asr fp

000089f4 <_GLOBAL__sub_I_sGPIO>:
_GLOBAL__sub_I_sGPIO():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89f4:	e92d4800 	push	{fp, lr}
    89f8:	e28db004 	add	fp, sp, #4
    89fc:	e59f1008 	ldr	r1, [pc, #8]	; 8a0c <_GLOBAL__sub_I_sGPIO+0x18>
    8a00:	e3a00001 	mov	r0, #1
    8a04:	ebffffe5 	bl	89a0 <_Z41__static_initialization_and_destruction_0ii>
    8a08:	e8bd8800 	pop	{fp, pc}
    8a0c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

00008a10 <_ZN4CI2CC1Emjj>:
_ZN4CI2CC2Emjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:7

#include <drivers/gpio.h>

CI2C sI2C1(hal::BSC1_Base, 2, 3);

CI2C::CI2C(unsigned long base, uint32_t pin_sda, uint32_t pin_scl)
    8a10:	e92d4800 	push	{fp, lr}
    8a14:	e28db004 	add	fp, sp, #4
    8a18:	e24dd010 	sub	sp, sp, #16
    8a1c:	e50b0008 	str	r0, [fp, #-8]
    8a20:	e50b100c 	str	r1, [fp, #-12]
    8a24:	e50b2010 	str	r2, [fp, #-16]
    8a28:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:11
: mBSC_Base(reinterpret_cast<volatile uint32_t*>(base))
, mOpened(false)
, mSDA_Pin(pin_sda)
, mSCL_Pin(pin_scl)
    8a2c:	e51b200c 	ldr	r2, [fp, #-12]
    8a30:	e51b3008 	ldr	r3, [fp, #-8]
    8a34:	e5832000 	str	r2, [r3]
    8a38:	e51b3008 	ldr	r3, [fp, #-8]
    8a3c:	e3a02000 	mov	r2, #0
    8a40:	e5c32004 	strb	r2, [r3, #4]
    8a44:	e51b3008 	ldr	r3, [fp, #-8]
    8a48:	e51b2010 	ldr	r2, [fp, #-16]
    8a4c:	e5832008 	str	r2, [r3, #8]
    8a50:	e51b3008 	ldr	r3, [fp, #-8]
    8a54:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    8a58:	e583200c 	str	r2, [r3, #12]
    8a5c:	e51b3008 	ldr	r3, [fp, #-8]
    8a60:	e2833010 	add	r3, r3, #16
    8a64:	e1a00003 	mov	r0, r3
    8a68:	eb0001a7 	bl	910c <_ZN16CI2C_TransactionC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:14
{
    //
}
    8a6c:	e51b3008 	ldr	r3, [fp, #-8]
    8a70:	e1a00003 	mov	r0, r3
    8a74:	e24bd004 	sub	sp, fp, #4
    8a78:	e8bd8800 	pop	{fp, pc}

00008a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>:
_ZN4CI2C3RegEN3hal7BSC_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:17

volatile uint32_t& CI2C::Reg(hal::BSC_Reg reg)
{
    8a7c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8a80:	e28db000 	add	fp, sp, #0
    8a84:	e24dd00c 	sub	sp, sp, #12
    8a88:	e50b0008 	str	r0, [fp, #-8]
    8a8c:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:18
    return mBSC_Base[static_cast<uint32_t>(reg)];
    8a90:	e51b3008 	ldr	r3, [fp, #-8]
    8a94:	e5932000 	ldr	r2, [r3]
    8a98:	e51b300c 	ldr	r3, [fp, #-12]
    8a9c:	e1a03103 	lsl	r3, r3, #2
    8aa0:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:19
}
    8aa4:	e1a00003 	mov	r0, r3
    8aa8:	e28bd000 	add	sp, fp, #0
    8aac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8ab0:	e12fff1e 	bx	lr

00008ab4 <_ZN4CI2C10Wait_ReadyEv>:
_ZN4CI2C10Wait_ReadyEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:22

void CI2C::Wait_Ready()
{
    8ab4:	e92d4800 	push	{fp, lr}
    8ab8:	e28db004 	add	fp, sp, #4
    8abc:	e24dd010 	sub	sp, sp, #16
    8ac0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:23
    volatile uint32_t& s = Reg(hal::BSC_Reg::Status);
    8ac4:	e3a01001 	mov	r1, #1
    8ac8:	e51b0010 	ldr	r0, [fp, #-16]
    8acc:	ebffffea 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8ad0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:26

    // pockame, dokud nebude ve status registru zapnuty ready bit
    while (!(s & (1 << 1)))
    8ad4:	e51b3008 	ldr	r3, [fp, #-8]
    8ad8:	e5933000 	ldr	r3, [r3]
    8adc:	e2033002 	and	r3, r3, #2
    8ae0:	e3530000 	cmp	r3, #0
    8ae4:	03a03001 	moveq	r3, #1
    8ae8:	13a03000 	movne	r3, #0
    8aec:	e6ef3073 	uxtb	r3, r3
    8af0:	e3530000 	cmp	r3, #0
    8af4:	0a000000 	beq	8afc <_ZN4CI2C10Wait_ReadyEv+0x48>
    8af8:	eafffff5 	b	8ad4 <_ZN4CI2C10Wait_ReadyEv+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:28
        ;
}
    8afc:	e320f000 	nop	{0}
    8b00:	e24bd004 	sub	sp, fp, #4
    8b04:	e8bd8800 	pop	{fp, pc}

00008b08 <_ZN4CI2C4OpenEv>:
_ZN4CI2C4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:31

bool CI2C::Open()
{
    8b08:	e92d4800 	push	{fp, lr}
    8b0c:	e28db004 	add	fp, sp, #4
    8b10:	e24dd008 	sub	sp, sp, #8
    8b14:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:32
    if (!sGPIO.Reserve_Pin(mSDA_Pin, true, true))
    8b18:	e51b3008 	ldr	r3, [fp, #-8]
    8b1c:	e5931008 	ldr	r1, [r3, #8]
    8b20:	e3a03001 	mov	r3, #1
    8b24:	e3a02001 	mov	r2, #1
    8b28:	e59f00b4 	ldr	r0, [pc, #180]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b2c:	ebfffecd 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8b30:	e1a03000 	mov	r3, r0
    8b34:	e2233001 	eor	r3, r3, #1
    8b38:	e6ef3073 	uxtb	r3, r3
    8b3c:	e3530000 	cmp	r3, #0
    8b40:	0a000001 	beq	8b4c <_ZN4CI2C4OpenEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:33
        return false;
    8b44:	e3a03000 	mov	r3, #0
    8b48:	ea000022 	b	8bd8 <_ZN4CI2C4OpenEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:35

    if (!sGPIO.Reserve_Pin(mSCL_Pin, true, true))
    8b4c:	e51b3008 	ldr	r3, [fp, #-8]
    8b50:	e593100c 	ldr	r1, [r3, #12]
    8b54:	e3a03001 	mov	r3, #1
    8b58:	e3a02001 	mov	r2, #1
    8b5c:	e59f0080 	ldr	r0, [pc, #128]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b60:	ebfffec0 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8b64:	e1a03000 	mov	r3, r0
    8b68:	e2233001 	eor	r3, r3, #1
    8b6c:	e6ef3073 	uxtb	r3, r3
    8b70:	e3530000 	cmp	r3, #0
    8b74:	0a000007 	beq	8b98 <_ZN4CI2C4OpenEv+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:37
    {
        sGPIO.Free_Pin(mSDA_Pin, true, true);
    8b78:	e51b3008 	ldr	r3, [fp, #-8]
    8b7c:	e5931008 	ldr	r1, [r3, #8]
    8b80:	e3a03001 	mov	r3, #1
    8b84:	e3a02001 	mov	r2, #1
    8b88:	e59f0054 	ldr	r0, [pc, #84]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b8c:	ebffff1b 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:38
        return false;
    8b90:	e3a03000 	mov	r3, #0
    8b94:	ea00000f 	b	8bd8 <_ZN4CI2C4OpenEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:43
    }

    // pro jine I2C kanaly se muze lisit cislo alternativni funkce pinu

    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Alt_0);
    8b98:	e51b3008 	ldr	r3, [fp, #-8]
    8b9c:	e5933008 	ldr	r3, [r3, #8]
    8ba0:	e3a02004 	mov	r2, #4
    8ba4:	e1a01003 	mov	r1, r3
    8ba8:	e59f0034 	ldr	r0, [pc, #52]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8bac:	ebfffe07 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:44
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Alt_0);
    8bb0:	e51b3008 	ldr	r3, [fp, #-8]
    8bb4:	e593300c 	ldr	r3, [r3, #12]
    8bb8:	e3a02004 	mov	r2, #4
    8bbc:	e1a01003 	mov	r1, r3
    8bc0:	e59f001c 	ldr	r0, [pc, #28]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8bc4:	ebfffe01 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:46

    mOpened = true;
    8bc8:	e51b3008 	ldr	r3, [fp, #-8]
    8bcc:	e3a02001 	mov	r2, #1
    8bd0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:48

    return true;
    8bd4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:49
}
    8bd8:	e1a00003 	mov	r0, r3
    8bdc:	e24bd004 	sub	sp, fp, #4
    8be0:	e8bd8800 	pop	{fp, pc}
    8be4:	00010b5c 	andeq	r0, r1, ip, asr fp

00008be8 <_ZN4CI2C5CloseEv>:
_ZN4CI2C5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:52

void CI2C::Close()
{
    8be8:	e92d4800 	push	{fp, lr}
    8bec:	e28db004 	add	fp, sp, #4
    8bf0:	e24dd008 	sub	sp, sp, #8
    8bf4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:53
    Reg(hal::BSC_Reg::Control) = 0;
    8bf8:	e3a01000 	mov	r1, #0
    8bfc:	e51b0008 	ldr	r0, [fp, #-8]
    8c00:	ebffff9d 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8c04:	e1a03000 	mov	r3, r0
    8c08:	e3a02000 	mov	r2, #0
    8c0c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:55

    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Input);
    8c10:	e51b3008 	ldr	r3, [fp, #-8]
    8c14:	e5933008 	ldr	r3, [r3, #8]
    8c18:	e3a02000 	mov	r2, #0
    8c1c:	e1a01003 	mov	r1, r3
    8c20:	e59f0060 	ldr	r0, [pc, #96]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c24:	ebfffde9 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:56
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Input);
    8c28:	e51b3008 	ldr	r3, [fp, #-8]
    8c2c:	e593300c 	ldr	r3, [r3, #12]
    8c30:	e3a02000 	mov	r2, #0
    8c34:	e1a01003 	mov	r1, r3
    8c38:	e59f0048 	ldr	r0, [pc, #72]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c3c:	ebfffde3 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:58

    sGPIO.Free_Pin(mSDA_Pin, true, true);
    8c40:	e51b3008 	ldr	r3, [fp, #-8]
    8c44:	e5931008 	ldr	r1, [r3, #8]
    8c48:	e3a03001 	mov	r3, #1
    8c4c:	e3a02001 	mov	r2, #1
    8c50:	e59f0030 	ldr	r0, [pc, #48]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c54:	ebfffee9 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:59
    sGPIO.Free_Pin(mSCL_Pin, true, true);
    8c58:	e51b3008 	ldr	r3, [fp, #-8]
    8c5c:	e593100c 	ldr	r1, [r3, #12]
    8c60:	e3a03001 	mov	r3, #1
    8c64:	e3a02001 	mov	r2, #1
    8c68:	e59f0018 	ldr	r0, [pc, #24]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c6c:	ebfffee3 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:61

    mOpened = false;
    8c70:	e51b3008 	ldr	r3, [fp, #-8]
    8c74:	e3a02000 	mov	r2, #0
    8c78:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:62
}
    8c7c:	e320f000 	nop	{0}
    8c80:	e24bd004 	sub	sp, fp, #4
    8c84:	e8bd8800 	pop	{fp, pc}
    8c88:	00010b5c 	andeq	r0, r1, ip, asr fp

00008c8c <_ZNK4CI2C9Is_OpenedEv>:
_ZNK4CI2C9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:65

bool CI2C::Is_Opened() const
{
    8c8c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8c90:	e28db000 	add	fp, sp, #0
    8c94:	e24dd00c 	sub	sp, sp, #12
    8c98:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:66
    return mOpened;
    8c9c:	e51b3008 	ldr	r3, [fp, #-8]
    8ca0:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:67
}
    8ca4:	e1a00003 	mov	r0, r3
    8ca8:	e28bd000 	add	sp, fp, #0
    8cac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8cb0:	e12fff1e 	bx	lr

00008cb4 <_ZN4CI2C4SendEtPKcj>:
_ZN4CI2C4SendEtPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:70

void CI2C::Send(uint16_t addr, const char* buffer, uint32_t len)
{
    8cb4:	e92d4810 	push	{r4, fp, lr}
    8cb8:	e28db008 	add	fp, sp, #8
    8cbc:	e24dd01c 	sub	sp, sp, #28
    8cc0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    8cc4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    8cc8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    8ccc:	e1a03001 	mov	r3, r1
    8cd0:	e14b31ba 	strh	r3, [fp, #-26]	; 0xffffffe6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8cd4:	e3a01003 	mov	r1, #3
    8cd8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cdc:	ebffff66 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8ce0:	e1a02000 	mov	r2, r0
    8ce4:	e15b31ba 	ldrh	r3, [fp, #-26]	; 0xffffffe6
    8ce8:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:72
    Reg(hal::BSC_Reg::Data_Length) = len;
    8cec:	e3a01002 	mov	r1, #2
    8cf0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cf4:	ebffff60 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8cf8:	e1a02000 	mov	r2, r0
    8cfc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d00:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74

    for (uint32_t i = 0; i < len; i++)
    8d04:	e3a03000 	mov	r3, #0
    8d08:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74 (discriminator 3)
    8d0c:	e51b2010 	ldr	r2, [fp, #-16]
    8d10:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d14:	e1520003 	cmp	r2, r3
    8d18:	2a00000d 	bcs	8d54 <_ZN4CI2C4SendEtPKcj+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:75 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = buffer[i];
    8d1c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8d20:	e51b3010 	ldr	r3, [fp, #-16]
    8d24:	e0823003 	add	r3, r2, r3
    8d28:	e5d34000 	ldrb	r4, [r3]
    8d2c:	e3a01004 	mov	r1, #4
    8d30:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d34:	ebffff50 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d38:	e1a03000 	mov	r3, r0
    8d3c:	e1a02004 	mov	r2, r4
    8d40:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8d44:	e51b3010 	ldr	r3, [fp, #-16]
    8d48:	e2833001 	add	r3, r3, #1
    8d4c:	e50b3010 	str	r3, [fp, #-16]
    8d50:	eaffffed 	b	8d0c <_ZN4CI2C4SendEtPKcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:77

    Reg(hal::BSC_Reg::Status) =
    8d54:	e3a01001 	mov	r1, #1
    8d58:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d5c:	ebffff46 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d60:	e1a03000 	mov	r3, r0
    8d64:	e59f202c 	ldr	r2, [pc, #44]	; 8d98 <_ZN4CI2C4SendEtPKcj+0xe4>
    8d68:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:79
    (1 << 9) | (1 << 8) | (1 << 1);                    // reset "slave clock hold", "slave fail" a "status" bitu
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    8d6c:	e3a01000 	mov	r1, #0
    8d70:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d74:	ebffff40 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d78:	e1a03000 	mov	r3, r0
    8d7c:	e59f2018 	ldr	r2, [pc, #24]	; 8d9c <_ZN4CI2C4SendEtPKcj+0xe8>
    8d80:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:81

    Wait_Ready();
    8d84:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d88:	ebffff49 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:82
}
    8d8c:	e320f000 	nop	{0}
    8d90:	e24bd008 	sub	sp, fp, #8
    8d94:	e8bd8810 	pop	{r4, fp, pc}
    8d98:	00000302 	andeq	r0, r0, r2, lsl #6
    8d9c:	00008080 	andeq	r8, r0, r0, lsl #1

00008da0 <_ZN4CI2C7ReceiveEtPcj>:
_ZN4CI2C7ReceiveEtPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:85

void CI2C::Receive(uint16_t addr, char* buffer, uint32_t len)
{
    8da0:	e92d4800 	push	{fp, lr}
    8da4:	e28db004 	add	fp, sp, #4
    8da8:	e24dd018 	sub	sp, sp, #24
    8dac:	e50b0010 	str	r0, [fp, #-16]
    8db0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    8db4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    8db8:	e1a03001 	mov	r3, r1
    8dbc:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:86
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8dc0:	e3a01003 	mov	r1, #3
    8dc4:	e51b0010 	ldr	r0, [fp, #-16]
    8dc8:	ebffff2b 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8dcc:	e1a02000 	mov	r2, r0
    8dd0:	e15b31b2 	ldrh	r3, [fp, #-18]	; 0xffffffee
    8dd4:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:87
    Reg(hal::BSC_Reg::Data_Length) = len;
    8dd8:	e3a01002 	mov	r1, #2
    8ddc:	e51b0010 	ldr	r0, [fp, #-16]
    8de0:	ebffff25 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8de4:	e1a02000 	mov	r2, r0
    8de8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8dec:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:89

    Reg(hal::BSC_Reg::Status) =
    8df0:	e3a01001 	mov	r1, #1
    8df4:	e51b0010 	ldr	r0, [fp, #-16]
    8df8:	ebffff1f 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8dfc:	e1a03000 	mov	r3, r0
    8e00:	e59f207c 	ldr	r2, [pc, #124]	; 8e84 <_ZN4CI2C7ReceiveEtPcj+0xe4>
    8e04:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:91
    (1 << 9) | (1 << 8) | (1 << 1);             // reset "slave clock hold", "slave fail" a "status" bitu
    Reg(hal::BSC_Reg::Control) =
    8e08:	e3a01000 	mov	r1, #0
    8e0c:	e51b0010 	ldr	r0, [fp, #-16]
    8e10:	ebffff19 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8e14:	e1a03000 	mov	r3, r0
    8e18:	e59f2068 	ldr	r2, [pc, #104]	; 8e88 <_ZN4CI2C7ReceiveEtPcj+0xe8>
    8e1c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:94
    (1 << 15) | (1 << 7) | (1 << 4) | (1 << 0); // zapoceti cteni (enable bsc + clear fifo + start transfer + read)

    Wait_Ready();
    8e20:	e51b0010 	ldr	r0, [fp, #-16]
    8e24:	ebffff22 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96

    for (uint32_t i = 0; i < len; i++)
    8e28:	e3a03000 	mov	r3, #0
    8e2c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96 (discriminator 3)
    8e30:	e51b2008 	ldr	r2, [fp, #-8]
    8e34:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8e38:	e1520003 	cmp	r2, r3
    8e3c:	2a00000d 	bcs	8e78 <_ZN4CI2C7ReceiveEtPcj+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:97 (discriminator 2)
        buffer[i] = Reg(hal::BSC_Reg::Data_FIFO);
    8e40:	e3a01004 	mov	r1, #4
    8e44:	e51b0010 	ldr	r0, [fp, #-16]
    8e48:	ebffff0b 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8e4c:	e1a03000 	mov	r3, r0
    8e50:	e5931000 	ldr	r1, [r3]
    8e54:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    8e58:	e51b3008 	ldr	r3, [fp, #-8]
    8e5c:	e0823003 	add	r3, r2, r3
    8e60:	e6ef2071 	uxtb	r2, r1
    8e64:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8e68:	e51b3008 	ldr	r3, [fp, #-8]
    8e6c:	e2833001 	add	r3, r3, #1
    8e70:	e50b3008 	str	r3, [fp, #-8]
    8e74:	eaffffed 	b	8e30 <_ZN4CI2C7ReceiveEtPcj+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:98
}
    8e78:	e320f000 	nop	{0}
    8e7c:	e24bd004 	sub	sp, fp, #4
    8e80:	e8bd8800 	pop	{fp, pc}
    8e84:	00000302 	andeq	r0, r0, r2, lsl #6
    8e88:	00008091 	muleq	r0, r1, r0

00008e8c <_ZN4CI2C17Begin_TransactionEt>:
_ZN4CI2C17Begin_TransactionEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:101

CI2C_Transaction& CI2C::Begin_Transaction(uint16_t addr)
{
    8e8c:	e92d4800 	push	{fp, lr}
    8e90:	e28db004 	add	fp, sp, #4
    8e94:	e24dd008 	sub	sp, sp, #8
    8e98:	e50b0008 	str	r0, [fp, #-8]
    8e9c:	e1a03001 	mov	r3, r1
    8ea0:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:102
    if (mTransaction.mIn_Progress)
    8ea4:	e51b3008 	ldr	r3, [fp, #-8]
    8ea8:	e5d33010 	ldrb	r3, [r3, #16]
    8eac:	e3530000 	cmp	r3, #0
    8eb0:	0a000002 	beq	8ec0 <_ZN4CI2C17Begin_TransactionEt+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:103
        return mTransaction;
    8eb4:	e51b3008 	ldr	r3, [fp, #-8]
    8eb8:	e2833010 	add	r3, r3, #16
    8ebc:	ea00000d 	b	8ef8 <_ZN4CI2C17Begin_TransactionEt+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:105

    mTransaction.mIn_Progress = true;
    8ec0:	e51b3008 	ldr	r3, [fp, #-8]
    8ec4:	e3a02001 	mov	r2, #1
    8ec8:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:106
    mTransaction.mLength = 0;
    8ecc:	e51b3008 	ldr	r3, [fp, #-8]
    8ed0:	e3a02000 	mov	r2, #0
    8ed4:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:107
    mTransaction.Set_Address(addr);
    8ed8:	e51b3008 	ldr	r3, [fp, #-8]
    8edc:	e2833010 	add	r3, r3, #16
    8ee0:	e15b20ba 	ldrh	r2, [fp, #-10]
    8ee4:	e1a01002 	mov	r1, r2
    8ee8:	e1a00003 	mov	r0, r3
    8eec:	eb000079 	bl	90d8 <_ZN16CI2C_Transaction11Set_AddressEt>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:109

    return mTransaction;
    8ef0:	e51b3008 	ldr	r3, [fp, #-8]
    8ef4:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:110
}
    8ef8:	e1a00003 	mov	r0, r3
    8efc:	e24bd004 	sub	sp, fp, #4
    8f00:	e8bd8800 	pop	{fp, pc}

00008f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>:
_ZN4CI2C15End_TransactionER16CI2C_Transactionb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113

void CI2C::End_Transaction(CI2C_Transaction& transaction, bool commit)
{
    8f04:	e92d4810 	push	{r4, fp, lr}
    8f08:	e28db008 	add	fp, sp, #8
    8f0c:	e24dd01c 	sub	sp, sp, #28
    8f10:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    8f14:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    8f18:	e1a03002 	mov	r3, r2
    8f1c:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:114
    if (!transaction.mIn_Progress)
    8f20:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f24:	e5d33000 	ldrb	r3, [r3]
    8f28:	e2233001 	eor	r3, r3, #1
    8f2c:	e6ef3073 	uxtb	r3, r3
    8f30:	e3530000 	cmp	r3, #0
    8f34:	1a000042 	bne	9044 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:117
        return;

    transaction.mIn_Progress = false;
    8f38:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f3c:	e3a02000 	mov	r2, #0
    8f40:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119

    if (!commit || transaction.mLength == 0)
    8f44:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
    8f48:	e2233001 	eor	r3, r3, #1
    8f4c:	e6ef3073 	uxtb	r3, r3
    8f50:	e3530000 	cmp	r3, #0
    8f54:	1a00003c 	bne	904c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119 (discriminator 1)
    8f58:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f5c:	e593300c 	ldr	r3, [r3, #12]
    8f60:	e3530000 	cmp	r3, #0
    8f64:	0a000038 	beq	904c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:122
        return;

    Reg(hal::BSC_Reg::Slave_Address) = transaction.mAddress;
    8f68:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f6c:	e1d341b0 	ldrh	r4, [r3, #16]
    8f70:	e3a01003 	mov	r1, #3
    8f74:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f78:	ebfffebf 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8f7c:	e1a03000 	mov	r3, r0
    8f80:	e1a02004 	mov	r2, r4
    8f84:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123
    Reg(hal::BSC_Reg::Data_Length) = transaction.mLength;
    8f88:	e3a01002 	mov	r1, #2
    8f8c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f90:	ebfffeb9 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8f94:	e1a02000 	mov	r2, r0
    8f98:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f9c:	e593300c 	ldr	r3, [r3, #12]
    8fa0:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125

    for (volatile int i = 0; i < transaction.mLength; i++)
    8fa4:	e3a03000 	mov	r3, #0
    8fa8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125 (discriminator 3)
    8fac:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8fb0:	e593300c 	ldr	r3, [r3, #12]
    8fb4:	e51b2010 	ldr	r2, [fp, #-16]
    8fb8:	e1530002 	cmp	r3, r2
    8fbc:	83a03001 	movhi	r3, #1
    8fc0:	93a03000 	movls	r3, #0
    8fc4:	e6ef3073 	uxtb	r3, r3
    8fc8:	e3530000 	cmp	r3, #0
    8fcc:	0a00000d 	beq	9008 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x104>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = transaction.mBuffer[i];
    8fd0:	e51b3010 	ldr	r3, [fp, #-16]
    8fd4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    8fd8:	e0823003 	add	r3, r2, r3
    8fdc:	e5d34001 	ldrb	r4, [r3, #1]
    8fe0:	e3a01004 	mov	r1, #4
    8fe4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fe8:	ebfffea3 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8fec:	e1a03000 	mov	r3, r0
    8ff0:	e1a02004 	mov	r2, r4
    8ff4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125 (discriminator 2)
    for (volatile int i = 0; i < transaction.mLength; i++)
    8ff8:	e51b3010 	ldr	r3, [fp, #-16]
    8ffc:	e2833001 	add	r3, r3, #1
    9000:	e50b3010 	str	r3, [fp, #-16]
    9004:	eaffffe8 	b	8fac <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:128

    Reg(hal::BSC_Reg::Status) =
    9008:	e3a01001 	mov	r1, #1
    900c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9010:	ebfffe99 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    9014:	e1a03000 	mov	r3, r0
    9018:	e59f2038 	ldr	r2, [pc, #56]	; 9058 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x154>
    901c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:130
    (1 << 9) | (1 << 8) | (1 << 1);                    // reset "slave clock hold", "slave fail" a "status" bitu
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    9020:	e3a01000 	mov	r1, #0
    9024:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9028:	ebfffe93 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    902c:	e1a03000 	mov	r3, r0
    9030:	e59f2024 	ldr	r2, [pc, #36]	; 905c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x158>
    9034:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:132

    Wait_Ready();
    9038:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    903c:	ebfffe9c 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
    9040:	ea000002 	b	9050 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:115
        return;
    9044:	e320f000 	nop	{0}
    9048:	ea000000 	b	9050 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:120
        return;
    904c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
}
    9050:	e24bd008 	sub	sp, fp, #8
    9054:	e8bd8810 	pop	{r4, fp, pc}
    9058:	00000302 	andeq	r0, r0, r2, lsl #6
    905c:	00008080 	andeq	r8, r0, r0, lsl #1

00009060 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
    9060:	e92d4800 	push	{fp, lr}
    9064:	e28db004 	add	fp, sp, #4
    9068:	e24dd008 	sub	sp, sp, #8
    906c:	e50b0008 	str	r0, [fp, #-8]
    9070:	e50b100c 	str	r1, [fp, #-12]
    9074:	e51b3008 	ldr	r3, [fp, #-8]
    9078:	e3530001 	cmp	r3, #1
    907c:	1a000008 	bne	90a4 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133 (discriminator 1)
    9080:	e51b300c 	ldr	r3, [fp, #-12]
    9084:	e59f2024 	ldr	r2, [pc, #36]	; 90b0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    9088:	e1530002 	cmp	r3, r2
    908c:	1a000004 	bne	90a4 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:5
CI2C sI2C1(hal::BSC1_Base, 2, 3);
    9090:	e3a03003 	mov	r3, #3
    9094:	e3a02002 	mov	r2, #2
    9098:	e59f1014 	ldr	r1, [pc, #20]	; 90b4 <_Z41__static_initialization_and_destruction_0ii+0x54>
    909c:	e59f0014 	ldr	r0, [pc, #20]	; 90b8 <_Z41__static_initialization_and_destruction_0ii+0x58>
    90a0:	ebfffe5a 	bl	8a10 <_ZN4CI2CC1Emjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
}
    90a4:	e320f000 	nop	{0}
    90a8:	e24bd004 	sub	sp, fp, #4
    90ac:	e8bd8800 	pop	{fp, pc}
    90b0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    90b4:	20804000 	addcs	r4, r0, r0
    90b8:	00010b70 	andeq	r0, r1, r0, ror fp

000090bc <_GLOBAL__sub_I_sI2C1>:
_GLOBAL__sub_I_sI2C1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
    90bc:	e92d4800 	push	{fp, lr}
    90c0:	e28db004 	add	fp, sp, #4
    90c4:	e59f1008 	ldr	r1, [pc, #8]	; 90d4 <_GLOBAL__sub_I_sI2C1+0x18>
    90c8:	e3a00001 	mov	r0, #1
    90cc:	ebffffe3 	bl	9060 <_Z41__static_initialization_and_destruction_0ii>
    90d0:	e8bd8800 	pop	{fp, pc}
    90d4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

000090d8 <_ZN16CI2C_Transaction11Set_AddressEt>:
_ZN16CI2C_Transaction11Set_AddressEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:27
    uint16_t mAddress = 0;

public:
    CI2C_Transaction() = default;

    void Set_Address(uint16_t addr)
    90d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    90dc:	e28db000 	add	fp, sp, #0
    90e0:	e24dd00c 	sub	sp, sp, #12
    90e4:	e50b0008 	str	r0, [fp, #-8]
    90e8:	e1a03001 	mov	r3, r1
    90ec:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:29
    {
        mAddress = addr;
    90f0:	e51b3008 	ldr	r3, [fp, #-8]
    90f4:	e15b20ba 	ldrh	r2, [fp, #-10]
    90f8:	e1c321b0 	strh	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:30
    }
    90fc:	e320f000 	nop	{0}
    9100:	e28bd000 	add	sp, fp, #0
    9104:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9108:	e12fff1e 	bx	lr

0000910c <_ZN16CI2C_TransactionC1Ev>:
_ZN16CI2C_TransactionC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:25
    CI2C_Transaction() = default;
    910c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9110:	e28db000 	add	fp, sp, #0
    9114:	e24dd00c 	sub	sp, sp, #12
    9118:	e50b0008 	str	r0, [fp, #-8]
    911c:	e51b3008 	ldr	r3, [fp, #-8]
    9120:	e3a02000 	mov	r2, #0
    9124:	e5c32000 	strb	r2, [r3]
    9128:	e51b3008 	ldr	r3, [fp, #-8]
    912c:	e3a02000 	mov	r2, #0
    9130:	e583200c 	str	r2, [r3, #12]
    9134:	e51b3008 	ldr	r3, [fp, #-8]
    9138:	e3a02000 	mov	r2, #0
    913c:	e1c321b0 	strh	r2, [r3, #16]
    9140:	e51b3008 	ldr	r3, [fp, #-8]
    9144:	e1a00003 	mov	r0, r3
    9148:	e28bd000 	add	sp, fp, #0
    914c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9150:	e12fff1e 	bx	lr

00009154 <_ZN8CMonitorC1Ejjj>:
_ZN8CMonitorC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:5
#include <drivers/monitor.h>

CMonitor sMonitor{ 0x30000000, 80, 25 };

CMonitor::CMonitor(unsigned int monitor_base_addr, unsigned int width, unsigned int height)
    9154:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9158:	e28db000 	add	fp, sp, #0
    915c:	e24dd014 	sub	sp, sp, #20
    9160:	e50b0008 	str	r0, [fp, #-8]
    9164:	e50b100c 	str	r1, [fp, #-12]
    9168:	e50b2010 	str	r2, [fp, #-16]
    916c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:6
: m_monitor{ reinterpret_cast<unsigned char*>(monitor_base_addr) }
    9170:	e51b200c 	ldr	r2, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:10
, m_width{ width }
, m_height{ height }
, m_cursor{ 0, 0 }
, m_number_base{ DEFAULT_NUMBER_BASE }
    9174:	e51b3008 	ldr	r3, [fp, #-8]
    9178:	e5832000 	str	r2, [r3]
    917c:	e51b3008 	ldr	r3, [fp, #-8]
    9180:	e51b2010 	ldr	r2, [fp, #-16]
    9184:	e5832004 	str	r2, [r3, #4]
    9188:	e51b3008 	ldr	r3, [fp, #-8]
    918c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    9190:	e5832008 	str	r2, [r3, #8]
    9194:	e51b3008 	ldr	r3, [fp, #-8]
    9198:	e3a02000 	mov	r2, #0
    919c:	e583200c 	str	r2, [r3, #12]
    91a0:	e51b3008 	ldr	r3, [fp, #-8]
    91a4:	e3a02000 	mov	r2, #0
    91a8:	e5832010 	str	r2, [r3, #16]
    91ac:	e51b3008 	ldr	r3, [fp, #-8]
    91b0:	e3a0200a 	mov	r2, #10
    91b4:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:12
{
}
    91b8:	e51b3008 	ldr	r3, [fp, #-8]
    91bc:	e1a00003 	mov	r0, r3
    91c0:	e28bd000 	add	sp, fp, #0
    91c4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    91c8:	e12fff1e 	bx	lr

000091cc <_ZN8CMonitor5ClearEv>:
_ZN8CMonitor5ClearEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:21
    m_cursor.y = 0;
    m_cursor.y = 0;
}

void CMonitor::Clear()
{
    91cc:	e92d4800 	push	{fp, lr}
    91d0:	e28db004 	add	fp, sp, #4
    91d4:	e24dd010 	sub	sp, sp, #16
    91d8:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:22
    Reset_Cursor();
    91dc:	e51b0010 	ldr	r0, [fp, #-16]
    91e0:	eb00016d 	bl	979c <_ZN8CMonitor12Reset_CursorEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24

    for (unsigned int y = 0; y < m_height; ++y)
    91e4:	e3a03000 	mov	r3, #0
    91e8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 1)
    91ec:	e51b3010 	ldr	r3, [fp, #-16]
    91f0:	e5933008 	ldr	r3, [r3, #8]
    91f4:	e51b2008 	ldr	r2, [fp, #-8]
    91f8:	e1520003 	cmp	r2, r3
    91fc:	2a000019 	bcs	9268 <_ZN8CMonitor5ClearEv+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26
    {
        for (unsigned int x = 0; x < m_width; ++x)
    9200:	e3a03000 	mov	r3, #0
    9204:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 3)
    9208:	e51b3010 	ldr	r3, [fp, #-16]
    920c:	e5933004 	ldr	r3, [r3, #4]
    9210:	e51b200c 	ldr	r2, [fp, #-12]
    9214:	e1520003 	cmp	r2, r3
    9218:	2a00000e 	bcs	9258 <_ZN8CMonitor5ClearEv+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:28 (discriminator 2)
        {
            m_monitor[(y * m_width) + x] = ' ';
    921c:	e51b3010 	ldr	r3, [fp, #-16]
    9220:	e5932000 	ldr	r2, [r3]
    9224:	e51b3010 	ldr	r3, [fp, #-16]
    9228:	e5933004 	ldr	r3, [r3, #4]
    922c:	e51b1008 	ldr	r1, [fp, #-8]
    9230:	e0010391 	mul	r1, r1, r3
    9234:	e51b300c 	ldr	r3, [fp, #-12]
    9238:	e0813003 	add	r3, r1, r3
    923c:	e0823003 	add	r3, r2, r3
    9240:	e3a02020 	mov	r2, #32
    9244:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9248:	e51b300c 	ldr	r3, [fp, #-12]
    924c:	e2833001 	add	r3, r3, #1
    9250:	e50b300c 	str	r3, [fp, #-12]
    9254:	eaffffeb 	b	9208 <_ZN8CMonitor5ClearEv+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 2)
    for (unsigned int y = 0; y < m_height; ++y)
    9258:	e51b3008 	ldr	r3, [fp, #-8]
    925c:	e2833001 	add	r3, r3, #1
    9260:	e50b3008 	str	r3, [fp, #-8]
    9264:	eaffffe0 	b	91ec <_ZN8CMonitor5ClearEv+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:31
        }
    }
}
    9268:	e320f000 	nop	{0}
    926c:	e24bd004 	sub	sp, fp, #4
    9270:	e8bd8800 	pop	{fp, pc}

00009274 <_ZN8CMonitor6ScrollEv>:
_ZN8CMonitor6ScrollEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:49
        m_cursor.y = m_height - 1;
    }
}

void CMonitor::Scroll()
{
    9274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9278:	e28db000 	add	fp, sp, #0
    927c:	e24dd01c 	sub	sp, sp, #28
    9280:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50
    for (unsigned int y = 1; y < m_height; ++y)
    9284:	e3a03001 	mov	r3, #1
    9288:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 1)
    928c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9290:	e5933008 	ldr	r3, [r3, #8]
    9294:	e51b2008 	ldr	r2, [fp, #-8]
    9298:	e1520003 	cmp	r2, r3
    929c:	2a000024 	bcs	9334 <_ZN8CMonitor6ScrollEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52
    {
        for (unsigned int x = 0; x < m_width; ++x)
    92a0:	e3a03000 	mov	r3, #0
    92a4:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 3)
    92a8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92ac:	e5933004 	ldr	r3, [r3, #4]
    92b0:	e51b200c 	ldr	r2, [fp, #-12]
    92b4:	e1520003 	cmp	r2, r3
    92b8:	2a000019 	bcs	9324 <_ZN8CMonitor6ScrollEv+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:54 (discriminator 2)
        {
            m_monitor[((y - 1) * m_width) + x] = m_monitor[(y * m_width) + x];
    92bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92c0:	e5932000 	ldr	r2, [r3]
    92c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92c8:	e5933004 	ldr	r3, [r3, #4]
    92cc:	e51b1008 	ldr	r1, [fp, #-8]
    92d0:	e0010391 	mul	r1, r1, r3
    92d4:	e51b300c 	ldr	r3, [fp, #-12]
    92d8:	e0813003 	add	r3, r1, r3
    92dc:	e0822003 	add	r2, r2, r3
    92e0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92e4:	e5931000 	ldr	r1, [r3]
    92e8:	e51b3008 	ldr	r3, [fp, #-8]
    92ec:	e2433001 	sub	r3, r3, #1
    92f0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    92f4:	e5900004 	ldr	r0, [r0, #4]
    92f8:	e0000390 	mul	r0, r0, r3
    92fc:	e51b300c 	ldr	r3, [fp, #-12]
    9300:	e0803003 	add	r3, r0, r3
    9304:	e0813003 	add	r3, r1, r3
    9308:	e5d22000 	ldrb	r2, [r2]
    930c:	e6ef2072 	uxtb	r2, r2
    9310:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9314:	e51b300c 	ldr	r3, [fp, #-12]
    9318:	e2833001 	add	r3, r3, #1
    931c:	e50b300c 	str	r3, [fp, #-12]
    9320:	eaffffe0 	b	92a8 <_ZN8CMonitor6ScrollEv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 2)
    for (unsigned int y = 1; y < m_height; ++y)
    9324:	e51b3008 	ldr	r3, [fp, #-8]
    9328:	e2833001 	add	r3, r3, #1
    932c:	e50b3008 	str	r3, [fp, #-8]
    9330:	eaffffd5 	b	928c <_ZN8CMonitor6ScrollEv+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58
        }
    }

    for (unsigned int x = 0; x < m_width; ++x)
    9334:	e3a03000 	mov	r3, #0
    9338:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 3)
    933c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9340:	e5933004 	ldr	r3, [r3, #4]
    9344:	e51b2010 	ldr	r2, [fp, #-16]
    9348:	e1520003 	cmp	r2, r3
    934c:	2a000010 	bcs	9394 <_ZN8CMonitor6ScrollEv+0x120>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:60 (discriminator 2)
    {
        m_monitor[((m_height - 1) * m_width) + x] = ' ';
    9350:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9354:	e5932000 	ldr	r2, [r3]
    9358:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    935c:	e5933008 	ldr	r3, [r3, #8]
    9360:	e2433001 	sub	r3, r3, #1
    9364:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    9368:	e5911004 	ldr	r1, [r1, #4]
    936c:	e0010391 	mul	r1, r1, r3
    9370:	e51b3010 	ldr	r3, [fp, #-16]
    9374:	e0813003 	add	r3, r1, r3
    9378:	e0823003 	add	r3, r2, r3
    937c:	e3a02020 	mov	r2, #32
    9380:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 2)
    for (unsigned int x = 0; x < m_width; ++x)
    9384:	e51b3010 	ldr	r3, [fp, #-16]
    9388:	e2833001 	add	r3, r3, #1
    938c:	e50b3010 	str	r3, [fp, #-16]
    9390:	eaffffe9 	b	933c <_ZN8CMonitor6ScrollEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:62
    }
}
    9394:	e320f000 	nop	{0}
    9398:	e28bd000 	add	sp, fp, #0
    939c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    93a0:	e12fff1e 	bx	lr

000093a4 <_ZN8CMonitorlsEc>:
_ZN8CMonitorlsEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:70
{
    m_number_base = DEFAULT_NUMBER_BASE;
}

CMonitor& CMonitor::operator<<(char c)
{
    93a4:	e92d4800 	push	{fp, lr}
    93a8:	e28db004 	add	fp, sp, #4
    93ac:	e24dd008 	sub	sp, sp, #8
    93b0:	e50b0008 	str	r0, [fp, #-8]
    93b4:	e1a03001 	mov	r3, r1
    93b8:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:71
    if (c != '\n')
    93bc:	e55b3009 	ldrb	r3, [fp, #-9]
    93c0:	e353000a 	cmp	r3, #10
    93c4:	0a000012 	beq	9414 <_ZN8CMonitorlsEc+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:73
    {
        m_monitor[(m_cursor.y * m_width) + m_cursor.x] = static_cast<unsigned char>(c);
    93c8:	e51b3008 	ldr	r3, [fp, #-8]
    93cc:	e5932000 	ldr	r2, [r3]
    93d0:	e51b3008 	ldr	r3, [fp, #-8]
    93d4:	e593300c 	ldr	r3, [r3, #12]
    93d8:	e51b1008 	ldr	r1, [fp, #-8]
    93dc:	e5911004 	ldr	r1, [r1, #4]
    93e0:	e0010391 	mul	r1, r1, r3
    93e4:	e51b3008 	ldr	r3, [fp, #-8]
    93e8:	e5933010 	ldr	r3, [r3, #16]
    93ec:	e0813003 	add	r3, r1, r3
    93f0:	e0823003 	add	r3, r2, r3
    93f4:	e55b2009 	ldrb	r2, [fp, #-9]
    93f8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:74
        ++m_cursor.x;
    93fc:	e51b3008 	ldr	r3, [fp, #-8]
    9400:	e5933010 	ldr	r3, [r3, #16]
    9404:	e2832001 	add	r2, r3, #1
    9408:	e51b3008 	ldr	r3, [fp, #-8]
    940c:	e5832010 	str	r2, [r3, #16]
    9410:	ea000007 	b	9434 <_ZN8CMonitorlsEc+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:78
    }
    else
    {
        m_cursor.x = 0;
    9414:	e51b3008 	ldr	r3, [fp, #-8]
    9418:	e3a02000 	mov	r2, #0
    941c:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:79
        ++m_cursor.y;
    9420:	e51b3008 	ldr	r3, [fp, #-8]
    9424:	e593300c 	ldr	r3, [r3, #12]
    9428:	e2832001 	add	r2, r3, #1
    942c:	e51b3008 	ldr	r3, [fp, #-8]
    9430:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:82
    }

    Adjust_Cursor();
    9434:	e51b0008 	ldr	r0, [fp, #-8]
    9438:	eb0000e5 	bl	97d4 <_ZN8CMonitor13Adjust_CursorEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:84

    return *this;
    943c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:85
}
    9440:	e1a00003 	mov	r0, r3
    9444:	e24bd004 	sub	sp, fp, #4
    9448:	e8bd8800 	pop	{fp, pc}

0000944c <_ZN8CMonitorlsEPKc>:
_ZN8CMonitorlsEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:88

CMonitor& CMonitor::operator<<(const char* str)
{
    944c:	e92d4800 	push	{fp, lr}
    9450:	e28db004 	add	fp, sp, #4
    9454:	e24dd010 	sub	sp, sp, #16
    9458:	e50b0010 	str	r0, [fp, #-16]
    945c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    9460:	e3a03000 	mov	r3, #0
    9464:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 3)
    9468:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    946c:	e51b3008 	ldr	r3, [fp, #-8]
    9470:	e0823003 	add	r3, r2, r3
    9474:	e5d33000 	ldrb	r3, [r3]
    9478:	e3530000 	cmp	r3, #0
    947c:	0a00000a 	beq	94ac <_ZN8CMonitorlsEPKc+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:91 (discriminator 2)
    {
        *this << str[i];
    9480:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    9484:	e51b3008 	ldr	r3, [fp, #-8]
    9488:	e0823003 	add	r3, r2, r3
    948c:	e5d33000 	ldrb	r3, [r3]
    9490:	e1a01003 	mov	r1, r3
    9494:	e51b0010 	ldr	r0, [fp, #-16]
    9498:	ebffffc1 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 2)
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    949c:	e51b3008 	ldr	r3, [fp, #-8]
    94a0:	e2833001 	add	r3, r3, #1
    94a4:	e50b3008 	str	r3, [fp, #-8]
    94a8:	eaffffee 	b	9468 <_ZN8CMonitorlsEPKc+0x1c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:94
    }

    Reset_Number_Base();
    94ac:	e51b0010 	ldr	r0, [fp, #-16]
    94b0:	eb0000e9 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:96

    return *this;
    94b4:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:97
}
    94b8:	e1a00003 	mov	r0, r3
    94bc:	e24bd004 	sub	sp, fp, #4
    94c0:	e8bd8800 	pop	{fp, pc}

000094c4 <_ZN8CMonitorlsENS_12NNumber_BaseE>:
_ZN8CMonitorlsENS_12NNumber_BaseE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:100

CMonitor& CMonitor::operator<<(CMonitor::NNumber_Base number_base)
{
    94c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    94c8:	e28db000 	add	fp, sp, #0
    94cc:	e24dd00c 	sub	sp, sp, #12
    94d0:	e50b0008 	str	r0, [fp, #-8]
    94d4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:101
    m_number_base = number_base;
    94d8:	e51b3008 	ldr	r3, [fp, #-8]
    94dc:	e51b200c 	ldr	r2, [fp, #-12]
    94e0:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:103

    return *this;
    94e4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:104
}
    94e8:	e1a00003 	mov	r0, r3
    94ec:	e28bd000 	add	sp, fp, #0
    94f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    94f4:	e12fff1e 	bx	lr

000094f8 <_ZN8CMonitorlsEj>:
_ZN8CMonitorlsEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:107

CMonitor& CMonitor::operator<<(unsigned int num)
{
    94f8:	e92d4800 	push	{fp, lr}
    94fc:	e28db004 	add	fp, sp, #4
    9500:	e24dd008 	sub	sp, sp, #8
    9504:	e50b0008 	str	r0, [fp, #-8]
    9508:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:112
    static constexpr unsigned int BUFFER_SIZE = 16;

    static char s_buffer[BUFFER_SIZE];

    itoa(num, s_buffer, static_cast<unsigned int>(m_number_base));
    950c:	e51b3008 	ldr	r3, [fp, #-8]
    9510:	e5933014 	ldr	r3, [r3, #20]
    9514:	e59f202c 	ldr	r2, [pc, #44]	; 9548 <_ZN8CMonitorlsEj+0x50>
    9518:	e51b100c 	ldr	r1, [fp, #-12]
    951c:	e51b0008 	ldr	r0, [fp, #-8]
    9520:	eb000021 	bl	95ac <_ZN8CMonitor4itoaEjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:113
    *this << s_buffer;
    9524:	e59f101c 	ldr	r1, [pc, #28]	; 9548 <_ZN8CMonitorlsEj+0x50>
    9528:	e51b0008 	ldr	r0, [fp, #-8]
    952c:	ebffffc6 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:114
    Reset_Number_Base();
    9530:	e51b0008 	ldr	r0, [fp, #-8]
    9534:	eb0000c8 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:116

    return *this;
    9538:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:117
}
    953c:	e1a00003 	mov	r0, r3
    9540:	e24bd004 	sub	sp, fp, #4
    9544:	e8bd8800 	pop	{fp, pc}
    9548:	00010bac 	andeq	r0, r1, ip, lsr #23

0000954c <_ZN8CMonitorlsEb>:
_ZN8CMonitorlsEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:120

CMonitor& CMonitor::operator<<(bool value)
{
    954c:	e92d4800 	push	{fp, lr}
    9550:	e28db004 	add	fp, sp, #4
    9554:	e24dd008 	sub	sp, sp, #8
    9558:	e50b0008 	str	r0, [fp, #-8]
    955c:	e1a03001 	mov	r3, r1
    9560:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:121
    if (value)
    9564:	e55b3009 	ldrb	r3, [fp, #-9]
    9568:	e3530000 	cmp	r3, #0
    956c:	0a000003 	beq	9580 <_ZN8CMonitorlsEb+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:123
    {
        *this << "true";
    9570:	e59f102c 	ldr	r1, [pc, #44]	; 95a4 <_ZN8CMonitorlsEb+0x58>
    9574:	e51b0008 	ldr	r0, [fp, #-8]
    9578:	ebffffb3 	bl	944c <_ZN8CMonitorlsEPKc>
    957c:	ea000002 	b	958c <_ZN8CMonitorlsEb+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:127
    }
    else
    {
        *this << "false";
    9580:	e59f1020 	ldr	r1, [pc, #32]	; 95a8 <_ZN8CMonitorlsEb+0x5c>
    9584:	e51b0008 	ldr	r0, [fp, #-8]
    9588:	ebffffaf 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:130
    }

    Reset_Number_Base();
    958c:	e51b0008 	ldr	r0, [fp, #-8]
    9590:	eb0000b1 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:132

    return *this;
    9594:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:133
}
    9598:	e1a00003 	mov	r0, r3
    959c:	e24bd004 	sub	sp, fp, #4
    95a0:	e8bd8800 	pop	{fp, pc}
    95a4:	00010020 	andeq	r0, r1, r0, lsr #32
    95a8:	00010028 	andeq	r0, r1, r8, lsr #32

000095ac <_ZN8CMonitor4itoaEjPcj>:
_ZN8CMonitor4itoaEjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:136

void CMonitor::itoa(unsigned int input, char* output, unsigned int base)
{
    95ac:	e92d4800 	push	{fp, lr}
    95b0:	e28db004 	add	fp, sp, #4
    95b4:	e24dd020 	sub	sp, sp, #32
    95b8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    95bc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    95c0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    95c4:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:137
    int i = 0;
    95c8:	e3a03000 	mov	r3, #0
    95cc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139

    while (input > 0)
    95d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95d4:	e3530000 	cmp	r3, #0
    95d8:	0a000015 	beq	9634 <_ZN8CMonitor4itoaEjPcj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:141
    {
        output[i] = CharConvArr[input % base];
    95dc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95e0:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    95e4:	e1a00003 	mov	r0, r3
    95e8:	eb001a6b 	bl	ff9c <__aeabi_uidivmod>
    95ec:	e1a03001 	mov	r3, r1
    95f0:	e1a02003 	mov	r2, r3
    95f4:	e59f3128 	ldr	r3, [pc, #296]	; 9724 <_ZN8CMonitor4itoaEjPcj+0x178>
    95f8:	e0822003 	add	r2, r2, r3
    95fc:	e51b3008 	ldr	r3, [fp, #-8]
    9600:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    9604:	e0813003 	add	r3, r1, r3
    9608:	e5d22000 	ldrb	r2, [r2]
    960c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:142
        input /= base;
    9610:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    9614:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    9618:	eb0019e4 	bl	fdb0 <__udivsi3>
    961c:	e1a03000 	mov	r3, r0
    9620:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:144

        i++;
    9624:	e51b3008 	ldr	r3, [fp, #-8]
    9628:	e2833001 	add	r3, r3, #1
    962c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    9630:	eaffffe6 	b	95d0 <_ZN8CMonitor4itoaEjPcj+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:147
    }

    if (i == 0)
    9634:	e51b3008 	ldr	r3, [fp, #-8]
    9638:	e3530000 	cmp	r3, #0
    963c:	1a000007 	bne	9660 <_ZN8CMonitor4itoaEjPcj+0xb4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:149
    {
        output[i] = CharConvArr[0];
    9640:	e51b3008 	ldr	r3, [fp, #-8]
    9644:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9648:	e0823003 	add	r3, r2, r3
    964c:	e3a02030 	mov	r2, #48	; 0x30
    9650:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:150
        i++;
    9654:	e51b3008 	ldr	r3, [fp, #-8]
    9658:	e2833001 	add	r3, r3, #1
    965c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:153
    }

    output[i] = '\0';
    9660:	e51b3008 	ldr	r3, [fp, #-8]
    9664:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9668:	e0823003 	add	r3, r2, r3
    966c:	e3a02000 	mov	r2, #0
    9670:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:154
    i--;
    9674:	e51b3008 	ldr	r3, [fp, #-8]
    9678:	e2433001 	sub	r3, r3, #1
    967c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156

    for (int j = 0; j <= (i / 2); j++)
    9680:	e3a03000 	mov	r3, #0
    9684:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 3)
    9688:	e51b3008 	ldr	r3, [fp, #-8]
    968c:	e1a02fa3 	lsr	r2, r3, #31
    9690:	e0823003 	add	r3, r2, r3
    9694:	e1a030c3 	asr	r3, r3, #1
    9698:	e1a02003 	mov	r2, r3
    969c:	e51b300c 	ldr	r3, [fp, #-12]
    96a0:	e1530002 	cmp	r3, r2
    96a4:	ca00001b 	bgt	9718 <_ZN8CMonitor4itoaEjPcj+0x16c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:158 (discriminator 2)
    {
        char c = output[i - j];
    96a8:	e51b2008 	ldr	r2, [fp, #-8]
    96ac:	e51b300c 	ldr	r3, [fp, #-12]
    96b0:	e0423003 	sub	r3, r2, r3
    96b4:	e1a02003 	mov	r2, r3
    96b8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    96bc:	e0833002 	add	r3, r3, r2
    96c0:	e5d33000 	ldrb	r3, [r3]
    96c4:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:159 (discriminator 2)
        output[i - j] = output[j];
    96c8:	e51b300c 	ldr	r3, [fp, #-12]
    96cc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    96d0:	e0822003 	add	r2, r2, r3
    96d4:	e51b1008 	ldr	r1, [fp, #-8]
    96d8:	e51b300c 	ldr	r3, [fp, #-12]
    96dc:	e0413003 	sub	r3, r1, r3
    96e0:	e1a01003 	mov	r1, r3
    96e4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    96e8:	e0833001 	add	r3, r3, r1
    96ec:	e5d22000 	ldrb	r2, [r2]
    96f0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:160 (discriminator 2)
        output[j] = c;
    96f4:	e51b300c 	ldr	r3, [fp, #-12]
    96f8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    96fc:	e0823003 	add	r3, r2, r3
    9700:	e55b200d 	ldrb	r2, [fp, #-13]
    9704:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 2)
    for (int j = 0; j <= (i / 2); j++)
    9708:	e51b300c 	ldr	r3, [fp, #-12]
    970c:	e2833001 	add	r3, r3, #1
    9710:	e50b300c 	str	r3, [fp, #-12]
    9714:	eaffffdb 	b	9688 <_ZN8CMonitor4itoaEjPcj+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    }
}
    9718:	e320f000 	nop	{0}
    971c:	e24bd004 	sub	sp, fp, #4
    9720:	e8bd8800 	pop	{fp, pc}
    9724:	00010030 	andeq	r0, r1, r0, lsr r0

00009728 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9728:	e92d4800 	push	{fp, lr}
    972c:	e28db004 	add	fp, sp, #4
    9730:	e24dd008 	sub	sp, sp, #8
    9734:	e50b0008 	str	r0, [fp, #-8]
    9738:	e50b100c 	str	r1, [fp, #-12]
    973c:	e51b3008 	ldr	r3, [fp, #-8]
    9740:	e3530001 	cmp	r3, #1
    9744:	1a000008 	bne	976c <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162 (discriminator 1)
    9748:	e51b300c 	ldr	r3, [fp, #-12]
    974c:	e59f2024 	ldr	r2, [pc, #36]	; 9778 <_Z41__static_initialization_and_destruction_0ii+0x50>
    9750:	e1530002 	cmp	r3, r2
    9754:	1a000004 	bne	976c <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:3
CMonitor sMonitor{ 0x30000000, 80, 25 };
    9758:	e3a03019 	mov	r3, #25
    975c:	e3a02050 	mov	r2, #80	; 0x50
    9760:	e3a01203 	mov	r1, #805306368	; 0x30000000
    9764:	e59f0010 	ldr	r0, [pc, #16]	; 977c <_Z41__static_initialization_and_destruction_0ii+0x54>
    9768:	ebfffe79 	bl	9154 <_ZN8CMonitorC1Ejjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    976c:	e320f000 	nop	{0}
    9770:	e24bd004 	sub	sp, fp, #4
    9774:	e8bd8800 	pop	{fp, pc}
    9778:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    977c:	00010b94 	muleq	r1, r4, fp

00009780 <_GLOBAL__sub_I_sMonitor>:
_GLOBAL__sub_I_sMonitor():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9780:	e92d4800 	push	{fp, lr}
    9784:	e28db004 	add	fp, sp, #4
    9788:	e59f1008 	ldr	r1, [pc, #8]	; 9798 <_GLOBAL__sub_I_sMonitor+0x18>
    978c:	e3a00001 	mov	r0, #1
    9790:	ebffffe4 	bl	9728 <_Z41__static_initialization_and_destruction_0ii>
    9794:	e8bd8800 	pop	{fp, pc}
    9798:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000979c <_ZN8CMonitor12Reset_CursorEv>:
_ZN8CMonitor12Reset_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:15
{
    979c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    97a0:	e28db000 	add	fp, sp, #0
    97a4:	e24dd00c 	sub	sp, sp, #12
    97a8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:16
    m_cursor.y = 0;
    97ac:	e51b3008 	ldr	r3, [fp, #-8]
    97b0:	e3a02000 	mov	r2, #0
    97b4:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:17
    m_cursor.y = 0;
    97b8:	e51b3008 	ldr	r3, [fp, #-8]
    97bc:	e3a02000 	mov	r2, #0
    97c0:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:18
}
    97c4:	e320f000 	nop	{0}
    97c8:	e28bd000 	add	sp, fp, #0
    97cc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    97d0:	e12fff1e 	bx	lr

000097d4 <_ZN8CMonitor13Adjust_CursorEv>:
_ZN8CMonitor13Adjust_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:34
{
    97d4:	e92d4800 	push	{fp, lr}
    97d8:	e28db004 	add	fp, sp, #4
    97dc:	e24dd008 	sub	sp, sp, #8
    97e0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:35
    if (m_cursor.x >= m_width)
    97e4:	e51b3008 	ldr	r3, [fp, #-8]
    97e8:	e5932010 	ldr	r2, [r3, #16]
    97ec:	e51b3008 	ldr	r3, [fp, #-8]
    97f0:	e5933004 	ldr	r3, [r3, #4]
    97f4:	e1520003 	cmp	r2, r3
    97f8:	3a000007 	bcc	981c <_ZN8CMonitor13Adjust_CursorEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:37
        m_cursor.x = 0;
    97fc:	e51b3008 	ldr	r3, [fp, #-8]
    9800:	e3a02000 	mov	r2, #0
    9804:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:38
        ++m_cursor.y;
    9808:	e51b3008 	ldr	r3, [fp, #-8]
    980c:	e593300c 	ldr	r3, [r3, #12]
    9810:	e2832001 	add	r2, r3, #1
    9814:	e51b3008 	ldr	r3, [fp, #-8]
    9818:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:41
    if (m_cursor.y >= m_height)
    981c:	e51b3008 	ldr	r3, [fp, #-8]
    9820:	e593200c 	ldr	r2, [r3, #12]
    9824:	e51b3008 	ldr	r3, [fp, #-8]
    9828:	e5933008 	ldr	r3, [r3, #8]
    982c:	e1520003 	cmp	r2, r3
    9830:	3a000006 	bcc	9850 <_ZN8CMonitor13Adjust_CursorEv+0x7c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:43
        Scroll();
    9834:	e51b0008 	ldr	r0, [fp, #-8]
    9838:	ebfffe8d 	bl	9274 <_ZN8CMonitor6ScrollEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:44
        m_cursor.y = m_height - 1;
    983c:	e51b3008 	ldr	r3, [fp, #-8]
    9840:	e5933008 	ldr	r3, [r3, #8]
    9844:	e2432001 	sub	r2, r3, #1
    9848:	e51b3008 	ldr	r3, [fp, #-8]
    984c:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:46
}
    9850:	e320f000 	nop	{0}
    9854:	e24bd004 	sub	sp, fp, #4
    9858:	e8bd8800 	pop	{fp, pc}

0000985c <_ZN8CMonitor17Reset_Number_BaseEv>:
_ZN8CMonitor17Reset_Number_BaseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:65
{
    985c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9860:	e28db000 	add	fp, sp, #0
    9864:	e24dd00c 	sub	sp, sp, #12
    9868:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:66
    m_number_base = DEFAULT_NUMBER_BASE;
    986c:	e51b3008 	ldr	r3, [fp, #-8]
    9870:	e3a0200a 	mov	r2, #10
    9874:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:67
}
    9878:	e320f000 	nop	{0}
    987c:	e28bd000 	add	sp, fp, #0
    9880:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9884:	e12fff1e 	bx	lr

00009888 <_ZN16CDisplay_SSD1306C1ER4CI2C>:
_ZN16CDisplay_SSD1306C2ER4CI2C():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:9

#include <drivers/bridges/display_protocol.h>

CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);

CDisplay_SSD1306::CDisplay_SSD1306(CI2C& i2c)
    9888:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    988c:	e28db000 	add	fp, sp, #0
    9890:	e24dd00c 	sub	sp, sp, #12
    9894:	e50b0008 	str	r0, [fp, #-8]
    9898:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:14
: mI2C(i2c)
, mOpened(false)
, mBuffer(nullptr)
, mWidth(0)
, mHeight(0)
    989c:	e51b3008 	ldr	r3, [fp, #-8]
    98a0:	e51b200c 	ldr	r2, [fp, #-12]
    98a4:	e5832000 	str	r2, [r3]
    98a8:	e51b3008 	ldr	r3, [fp, #-8]
    98ac:	e3a02000 	mov	r2, #0
    98b0:	e5c32004 	strb	r2, [r3, #4]
    98b4:	e51b3008 	ldr	r3, [fp, #-8]
    98b8:	e3a02000 	mov	r2, #0
    98bc:	e5832008 	str	r2, [r3, #8]
    98c0:	e51b3008 	ldr	r3, [fp, #-8]
    98c4:	e3a02000 	mov	r2, #0
    98c8:	e583200c 	str	r2, [r3, #12]
    98cc:	e51b3008 	ldr	r3, [fp, #-8]
    98d0:	e3a02000 	mov	r2, #0
    98d4:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:16
{
}
    98d8:	e51b3008 	ldr	r3, [fp, #-8]
    98dc:	e1a00003 	mov	r0, r3
    98e0:	e28bd000 	add	sp, fp, #0
    98e4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    98e8:	e12fff1e 	bx	lr

000098ec <_ZN16CDisplay_SSD13064OpenEii>:
_ZN16CDisplay_SSD13064OpenEii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:19

bool CDisplay_SSD1306::Open(int width, int height)
{
    98ec:	e92d4800 	push	{fp, lr}
    98f0:	e28db004 	add	fp, sp, #4
    98f4:	e24dd0d8 	sub	sp, sp, #216	; 0xd8
    98f8:	e50b00d0 	str	r0, [fp, #-208]	; 0xffffff30
    98fc:	e50b10d4 	str	r1, [fp, #-212]	; 0xffffff2c
    9900:	e50b20d8 	str	r2, [fp, #-216]	; 0xffffff28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:20
    if (!mI2C.Open())
    9904:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9908:	e5933000 	ldr	r3, [r3]
    990c:	e1a00003 	mov	r0, r3
    9910:	ebfffc7c 	bl	8b08 <_ZN4CI2C4OpenEv>
    9914:	e1a03000 	mov	r3, r0
    9918:	e2233001 	eor	r3, r3, #1
    991c:	e6ef3073 	uxtb	r3, r3
    9920:	e3530000 	cmp	r3, #0
    9924:	0a000001 	beq	9930 <_ZN16CDisplay_SSD13064OpenEii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:21
        return false;
    9928:	e3a03000 	mov	r3, #0
    992c:	ea0001b8 	b	a014 <_ZN16CDisplay_SSD13064OpenEii+0x728>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:23

    mOpened = true;
    9930:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9934:	e3a02001 	mov	r2, #1
    9938:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:26

    // zaokrouhlime nahoru na nasobek osmi (na cele stranky)
    if (height % 8 != 0)
    993c:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9940:	e2033007 	and	r3, r3, #7
    9944:	e3530000 	cmp	r3, #0
    9948:	0a000008 	beq	9970 <_ZN16CDisplay_SSD13064OpenEii+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:27
        height += 8 - (height % 8);
    994c:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9950:	e2732000 	rsbs	r2, r3, #0
    9954:	e2033007 	and	r3, r3, #7
    9958:	e2022007 	and	r2, r2, #7
    995c:	52623000 	rsbpl	r3, r2, #0
    9960:	e2633008 	rsb	r3, r3, #8
    9964:	e51b20d8 	ldr	r2, [fp, #-216]	; 0xffffff28
    9968:	e0823003 	add	r3, r2, r3
    996c:	e50b30d8 	str	r3, [fp, #-216]	; 0xffffff28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:29

    mWidth = width;
    9970:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9974:	e51b20d4 	ldr	r2, [fp, #-212]	; 0xffffff2c
    9978:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:30
    mHeight = height;
    997c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9980:	e51b20d8 	ldr	r2, [fp, #-216]	; 0xffffff28
    9984:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:35

    // alokujeme si buffer, ten je velky tak jako displej
    // dalo by se to optimalizovat, napr. primym kreslenim, bufferovanim vyrezu, apod.
    // ale to my ted nepotrebujeme, obzvlast kdyz spotrebujeme max jednotky kB a mame k dispozici >512MB RAM
    mBuffer = new uint8_t[mWidth * mHeight / 8];
    9988:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    998c:	e593300c 	ldr	r3, [r3, #12]
    9990:	e51b20d0 	ldr	r2, [fp, #-208]	; 0xffffff30
    9994:	e5922010 	ldr	r2, [r2, #16]
    9998:	e0030392 	mul	r3, r2, r3
    999c:	e2832007 	add	r2, r3, #7
    99a0:	e3530000 	cmp	r3, #0
    99a4:	b1a03002 	movlt	r3, r2
    99a8:	a1a03003 	movge	r3, r3
    99ac:	e1a031c3 	asr	r3, r3, #3
    99b0:	e1a00003 	mov	r0, r3
    99b4:	eb0018fc 	bl	fdac <_Znaj>
    99b8:	e1a03000 	mov	r3, r0
    99bc:	e1a02003 	mov	r2, r3
    99c0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    99c4:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:40

    // vypneme displej, nastavime clock ratio (z datasheetu, doporucena hodnota), nastavime multiplex ratio (vysku
    // displeje)
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    99c8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    99cc:	e5933000 	ldr	r3, [r3]
    99d0:	e3a0103c 	mov	r1, #60	; 0x3c
    99d4:	e1a00003 	mov	r0, r3
    99d8:	ebfffd2b 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    99dc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:42

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Display_Off << SSD1306_Cmd::Set_Display_Clock_Div_Ratio << 0x80
    99e0:	e3a03000 	mov	r3, #0
    99e4:	e50b30cc 	str	r3, [fp, #-204]	; 0xffffff34
    99e8:	e24b30cc 	sub	r3, fp, #204	; 0xcc
    99ec:	e1a01003 	mov	r1, r3
    99f0:	e51b0008 	ldr	r0, [fp, #-8]
    99f4:	eb00044d 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    99f8:	e1a02000 	mov	r2, r0
    99fc:	e3a030ae 	mov	r3, #174	; 0xae
    9a00:	e50b30c8 	str	r3, [fp, #-200]	; 0xffffff38
    9a04:	e24b30c8 	sub	r3, fp, #200	; 0xc8
    9a08:	e1a01003 	mov	r1, r3
    9a0c:	e1a00002 	mov	r0, r2
    9a10:	eb000446 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9a14:	e1a02000 	mov	r2, r0
    9a18:	e3a030d5 	mov	r3, #213	; 0xd5
    9a1c:	e50b30c4 	str	r3, [fp, #-196]	; 0xffffff3c
    9a20:	e24b30c4 	sub	r3, fp, #196	; 0xc4
    9a24:	e1a01003 	mov	r1, r3
    9a28:	e1a00002 	mov	r0, r2
    9a2c:	eb00043f 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9a30:	e1a02000 	mov	r2, r0
    9a34:	e3a03080 	mov	r3, #128	; 0x80
    9a38:	e50b30c0 	str	r3, [fp, #-192]	; 0xffffff40
    9a3c:	e24b30c0 	sub	r3, fp, #192	; 0xc0
    9a40:	e1a01003 	mov	r1, r3
    9a44:	e1a00002 	mov	r0, r2
    9a48:	eb000454 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9a4c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:43
           << SSD1306_Cmd::Set_Multiplex_Ratio;
    9a50:	e3a030a8 	mov	r3, #168	; 0xa8
    9a54:	e50b30bc 	str	r3, [fp, #-188]	; 0xffffff44
    9a58:	e24b30bc 	sub	r3, fp, #188	; 0xbc
    9a5c:	e1a01003 	mov	r1, r3
    9a60:	e1a00002 	mov	r0, r2
    9a64:	eb000431 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:45

        mI2C.End_Transaction(ta);
    9a68:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9a6c:	e5933000 	ldr	r3, [r3]
    9a70:	e3a02001 	mov	r2, #1
    9a74:	e51b1008 	ldr	r1, [fp, #-8]
    9a78:	e1a00003 	mov	r0, r3
    9a7c:	ebfffd20 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:50
    }

    // pokracovani predchoziho - multiplex ratio
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9a80:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9a84:	e5933000 	ldr	r3, [r3]
    9a88:	e3a0103c 	mov	r1, #60	; 0x3c
    9a8c:	e1a00003 	mov	r0, r3
    9a90:	ebfffcfd 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9a94:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:52

        ta << SSD1306_Cmd::Command_Start << height - 1;
    9a98:	e3a03000 	mov	r3, #0
    9a9c:	e50b30b8 	str	r3, [fp, #-184]	; 0xffffff48
    9aa0:	e24b30b8 	sub	r3, fp, #184	; 0xb8
    9aa4:	e1a01003 	mov	r1, r3
    9aa8:	e51b000c 	ldr	r0, [fp, #-12]
    9aac:	eb00041f 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9ab0:	e1a02000 	mov	r2, r0
    9ab4:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9ab8:	e2433001 	sub	r3, r3, #1
    9abc:	e50b30b4 	str	r3, [fp, #-180]	; 0xffffff4c
    9ac0:	e24b30b4 	sub	r3, fp, #180	; 0xb4
    9ac4:	e1a01003 	mov	r1, r3
    9ac8:	e1a00002 	mov	r0, r2
    9acc:	eb000433 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:54

        mI2C.End_Transaction(ta);
    9ad0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ad4:	e5933000 	ldr	r3, [r3]
    9ad8:	e3a02001 	mov	r2, #1
    9adc:	e51b100c 	ldr	r1, [fp, #-12]
    9ae0:	e1a00003 	mov	r0, r3
    9ae4:	ebfffd06 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:60
    }

    // nastavime display offset (pametovy offset a jeho matching na realnou matici), pocatecni radek a vlastnosti
    // vnitrniho menice (nabojova pumúa)
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ae8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9aec:	e5933000 	ldr	r3, [r3]
    9af0:	e3a0103c 	mov	r1, #60	; 0x3c
    9af4:	e1a00003 	mov	r0, r3
    9af8:	ebfffce3 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9afc:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:62

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Display_Offset << 0x00
    9b00:	e3a03000 	mov	r3, #0
    9b04:	e50b30b0 	str	r3, [fp, #-176]	; 0xffffff50
    9b08:	e24b30b0 	sub	r3, fp, #176	; 0xb0
    9b0c:	e1a01003 	mov	r1, r3
    9b10:	e51b0010 	ldr	r0, [fp, #-16]
    9b14:	eb000405 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9b18:	e1a02000 	mov	r2, r0
    9b1c:	e3a030d3 	mov	r3, #211	; 0xd3
    9b20:	e50b30ac 	str	r3, [fp, #-172]	; 0xffffff54
    9b24:	e24b30ac 	sub	r3, fp, #172	; 0xac
    9b28:	e1a01003 	mov	r1, r3
    9b2c:	e1a00002 	mov	r0, r2
    9b30:	eb0003fe 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9b34:	e1a02000 	mov	r2, r0
    9b38:	e3a03000 	mov	r3, #0
    9b3c:	e50b30a8 	str	r3, [fp, #-168]	; 0xffffff58
    9b40:	e24b30a8 	sub	r3, fp, #168	; 0xa8
    9b44:	e1a01003 	mov	r1, r3
    9b48:	e1a00002 	mov	r0, r2
    9b4c:	eb000413 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9b50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:63
           << (static_cast<uint8_t>(SSD1306_Cmd::Set_Start_Line) | 0x00) // zacatek na radce 0
    9b54:	e3a03040 	mov	r3, #64	; 0x40
    9b58:	e50b30a4 	str	r3, [fp, #-164]	; 0xffffff5c
    9b5c:	e24b30a4 	sub	r3, fp, #164	; 0xa4
    9b60:	e1a01003 	mov	r1, r3
    9b64:	e1a00002 	mov	r0, r2
    9b68:	eb00040c 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9b6c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:64
           << SSD1306_Cmd::Charge_Pump;
    9b70:	e3a0308d 	mov	r3, #141	; 0x8d
    9b74:	e50b30a0 	str	r3, [fp, #-160]	; 0xffffff60
    9b78:	e24b30a0 	sub	r3, fp, #160	; 0xa0
    9b7c:	e1a01003 	mov	r1, r3
    9b80:	e1a00002 	mov	r0, r2
    9b84:	eb0003e9 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:66

        mI2C.End_Transaction(ta);
    9b88:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9b8c:	e5933000 	ldr	r3, [r3]
    9b90:	e3a02001 	mov	r2, #1
    9b94:	e51b1010 	ldr	r1, [fp, #-16]
    9b98:	e1a00003 	mov	r0, r3
    9b9c:	ebfffcd8 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:71
    }

    // pokracovani predchoziho - nabojova pumpa, 0x14 je hodnota z datasheetu pro konkretni displej
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ba0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ba4:	e5933000 	ldr	r3, [r3]
    9ba8:	e3a0103c 	mov	r1, #60	; 0x3c
    9bac:	e1a00003 	mov	r0, r3
    9bb0:	ebfffcb5 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9bb4:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:73

        ta << SSD1306_Cmd::Command_Start << 0x14;
    9bb8:	e3a03000 	mov	r3, #0
    9bbc:	e50b309c 	str	r3, [fp, #-156]	; 0xffffff64
    9bc0:	e24b309c 	sub	r3, fp, #156	; 0x9c
    9bc4:	e1a01003 	mov	r1, r3
    9bc8:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    9bcc:	eb0003d7 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9bd0:	e1a02000 	mov	r2, r0
    9bd4:	e3a03014 	mov	r3, #20
    9bd8:	e50b3098 	str	r3, [fp, #-152]	; 0xffffff68
    9bdc:	e24b3098 	sub	r3, fp, #152	; 0x98
    9be0:	e1a01003 	mov	r1, r3
    9be4:	e1a00002 	mov	r0, r2
    9be8:	eb0003ec 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:75

        mI2C.End_Transaction(ta);
    9bec:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9bf0:	e5933000 	ldr	r3, [r3]
    9bf4:	e3a02001 	mov	r2, #1
    9bf8:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    9bfc:	e1a00003 	mov	r0, r3
    9c00:	ebfffcbf 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:81
    }

    // nastavime mod adresace (0x00 - po sloupcich a po strankach) a segment remapping (to, jak je displej "obraceny")
    // "smer" skenovani vystupu ridiciho obvodu
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9c04:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9c08:	e5933000 	ldr	r3, [r3]
    9c0c:	e3a0103c 	mov	r1, #60	; 0x3c
    9c10:	e1a00003 	mov	r0, r3
    9c14:	ebfffc9c 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9c18:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:83

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Memory_Addr_Mode << 0x00
    9c1c:	e3a03000 	mov	r3, #0
    9c20:	e50b3094 	str	r3, [fp, #-148]	; 0xffffff6c
    9c24:	e24b3094 	sub	r3, fp, #148	; 0x94
    9c28:	e1a01003 	mov	r1, r3
    9c2c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9c30:	eb0003be 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9c34:	e1a02000 	mov	r2, r0
    9c38:	e3a03020 	mov	r3, #32
    9c3c:	e50b3090 	str	r3, [fp, #-144]	; 0xffffff70
    9c40:	e24b3090 	sub	r3, fp, #144	; 0x90
    9c44:	e1a01003 	mov	r1, r3
    9c48:	e1a00002 	mov	r0, r2
    9c4c:	eb0003b7 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9c50:	e1a02000 	mov	r2, r0
    9c54:	e3a03000 	mov	r3, #0
    9c58:	e50b308c 	str	r3, [fp, #-140]	; 0xffffff74
    9c5c:	e24b308c 	sub	r3, fp, #140	; 0x8c
    9c60:	e1a01003 	mov	r1, r3
    9c64:	e1a00002 	mov	r0, r2
    9c68:	eb0003cc 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9c6c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:84
           << (static_cast<uint8_t>(SSD1306_Cmd::Set_Segment_Remap) | 0x01) << SSD1306_Cmd::Com_Scan_Dir_Dec;
    9c70:	e3a030a1 	mov	r3, #161	; 0xa1
    9c74:	e50b3088 	str	r3, [fp, #-136]	; 0xffffff78
    9c78:	e24b3088 	sub	r3, fp, #136	; 0x88
    9c7c:	e1a01003 	mov	r1, r3
    9c80:	e1a00002 	mov	r0, r2
    9c84:	eb0003c5 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9c88:	e1a02000 	mov	r2, r0
    9c8c:	e3a030c8 	mov	r3, #200	; 0xc8
    9c90:	e50b3084 	str	r3, [fp, #-132]	; 0xffffff7c
    9c94:	e24b3084 	sub	r3, fp, #132	; 0x84
    9c98:	e1a01003 	mov	r1, r3
    9c9c:	e1a00002 	mov	r0, r2
    9ca0:	eb0003a2 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:86

        mI2C.End_Transaction(ta);
    9ca4:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ca8:	e5933000 	ldr	r3, [r3]
    9cac:	e3a02001 	mov	r2, #1
    9cb0:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    9cb4:	e1a00003 	mov	r0, r3
    9cb8:	ebfffc91 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:91
    }

    // mapovani na piny ridiciho obvodu
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9cbc:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9cc0:	e5933000 	ldr	r3, [r3]
    9cc4:	e3a0103c 	mov	r1, #60	; 0x3c
    9cc8:	e1a00003 	mov	r0, r3
    9ccc:	ebfffc6e 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9cd0:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:93

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Com_Pins;
    9cd4:	e3a03000 	mov	r3, #0
    9cd8:	e50b3080 	str	r3, [fp, #-128]	; 0xffffff80
    9cdc:	e24b3080 	sub	r3, fp, #128	; 0x80
    9ce0:	e1a01003 	mov	r1, r3
    9ce4:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    9ce8:	eb000390 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9cec:	e1a02000 	mov	r2, r0
    9cf0:	e3a030da 	mov	r3, #218	; 0xda
    9cf4:	e50b307c 	str	r3, [fp, #-124]	; 0xffffff84
    9cf8:	e24b307c 	sub	r3, fp, #124	; 0x7c
    9cfc:	e1a01003 	mov	r1, r3
    9d00:	e1a00002 	mov	r0, r2
    9d04:	eb000389 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:95

        mI2C.End_Transaction(ta);
    9d08:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d0c:	e5933000 	ldr	r3, [r3]
    9d10:	e3a02001 	mov	r2, #1
    9d14:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    9d18:	e1a00003 	mov	r0, r3
    9d1c:	ebfffc78 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:100
    }

    // pokracovani predchoziho - neinvertovany a sekvencni pristup
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d20:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d24:	e5933000 	ldr	r3, [r3]
    9d28:	e3a0103c 	mov	r1, #60	; 0x3c
    9d2c:	e1a00003 	mov	r0, r3
    9d30:	ebfffc55 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9d34:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:102

        ta << SSD1306_Cmd::Command_Start << 0x02;
    9d38:	e3a03000 	mov	r3, #0
    9d3c:	e50b3078 	str	r3, [fp, #-120]	; 0xffffff88
    9d40:	e24b3078 	sub	r3, fp, #120	; 0x78
    9d44:	e1a01003 	mov	r1, r3
    9d48:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d4c:	eb000377 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9d50:	e1a02000 	mov	r2, r0
    9d54:	e3a03002 	mov	r3, #2
    9d58:	e50b3074 	str	r3, [fp, #-116]	; 0xffffff8c
    9d5c:	e24b3074 	sub	r3, fp, #116	; 0x74
    9d60:	e1a01003 	mov	r1, r3
    9d64:	e1a00002 	mov	r0, r2
    9d68:	eb00038c 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:104

        mI2C.End_Transaction(ta);
    9d6c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d70:	e5933000 	ldr	r3, [r3]
    9d74:	e3a02001 	mov	r2, #1
    9d78:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    9d7c:	e1a00003 	mov	r0, r3
    9d80:	ebfffc5f 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:109
    }

    // nastaveni kontrastu displeje
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d84:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d88:	e5933000 	ldr	r3, [r3]
    9d8c:	e3a0103c 	mov	r1, #60	; 0x3c
    9d90:	e1a00003 	mov	r0, r3
    9d94:	ebfffc3c 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9d98:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:111

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Contrast;
    9d9c:	e3a03000 	mov	r3, #0
    9da0:	e50b3070 	str	r3, [fp, #-112]	; 0xffffff90
    9da4:	e24b3070 	sub	r3, fp, #112	; 0x70
    9da8:	e1a01003 	mov	r1, r3
    9dac:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
    9db0:	eb00035e 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9db4:	e1a02000 	mov	r2, r0
    9db8:	e3a03081 	mov	r3, #129	; 0x81
    9dbc:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
    9dc0:	e24b306c 	sub	r3, fp, #108	; 0x6c
    9dc4:	e1a01003 	mov	r1, r3
    9dc8:	e1a00002 	mov	r0, r2
    9dcc:	eb000357 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:113

        mI2C.End_Transaction(ta);
    9dd0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9dd4:	e5933000 	ldr	r3, [r3]
    9dd8:	e3a02001 	mov	r2, #1
    9ddc:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    9de0:	e1a00003 	mov	r0, r3
    9de4:	ebfffc46 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:118
    }

    // pokracovani predchoziho - kontrast nastaven na 0x8F
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9de8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9dec:	e5933000 	ldr	r3, [r3]
    9df0:	e3a0103c 	mov	r1, #60	; 0x3c
    9df4:	e1a00003 	mov	r0, r3
    9df8:	ebfffc23 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9dfc:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:120

        ta << SSD1306_Cmd::Command_Start << 0x8F;
    9e00:	e3a03000 	mov	r3, #0
    9e04:	e50b3068 	str	r3, [fp, #-104]	; 0xffffff98
    9e08:	e24b3068 	sub	r3, fp, #104	; 0x68
    9e0c:	e1a01003 	mov	r1, r3
    9e10:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
    9e14:	eb000345 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9e18:	e1a02000 	mov	r2, r0
    9e1c:	e3a0308f 	mov	r3, #143	; 0x8f
    9e20:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
    9e24:	e24b3064 	sub	r3, fp, #100	; 0x64
    9e28:	e1a01003 	mov	r1, r3
    9e2c:	e1a00002 	mov	r0, r2
    9e30:	eb00035a 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:122

        mI2C.End_Transaction(ta);
    9e34:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e38:	e5933000 	ldr	r3, [r3]
    9e3c:	e3a02001 	mov	r2, #1
    9e40:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
    9e44:	e1a00003 	mov	r0, r3
    9e48:	ebfffc2d 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:127
    }

    // perioda prednabiti
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9e4c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e50:	e5933000 	ldr	r3, [r3]
    9e54:	e3a0103c 	mov	r1, #60	; 0x3c
    9e58:	e1a00003 	mov	r0, r3
    9e5c:	ebfffc0a 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9e60:	e50b002c 	str	r0, [fp, #-44]	; 0xffffffd4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:129

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Precharge_Period;
    9e64:	e3a03000 	mov	r3, #0
    9e68:	e50b3060 	str	r3, [fp, #-96]	; 0xffffffa0
    9e6c:	e24b3060 	sub	r3, fp, #96	; 0x60
    9e70:	e1a01003 	mov	r1, r3
    9e74:	e51b002c 	ldr	r0, [fp, #-44]	; 0xffffffd4
    9e78:	eb00032c 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9e7c:	e1a02000 	mov	r2, r0
    9e80:	e3a030d9 	mov	r3, #217	; 0xd9
    9e84:	e50b305c 	str	r3, [fp, #-92]	; 0xffffffa4
    9e88:	e24b305c 	sub	r3, fp, #92	; 0x5c
    9e8c:	e1a01003 	mov	r1, r3
    9e90:	e1a00002 	mov	r0, r2
    9e94:	eb000325 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:131

        mI2C.End_Transaction(ta);
    9e98:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e9c:	e5933000 	ldr	r3, [r3]
    9ea0:	e3a02001 	mov	r2, #1
    9ea4:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    9ea8:	e1a00003 	mov	r0, r3
    9eac:	ebfffc14 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:136
    }

    // pokracovani predchoziho - pro externi napajeni muze byt tato hodnota kratsi
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9eb0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9eb4:	e5933000 	ldr	r3, [r3]
    9eb8:	e3a0103c 	mov	r1, #60	; 0x3c
    9ebc:	e1a00003 	mov	r0, r3
    9ec0:	ebfffbf1 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9ec4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:138

        ta << SSD1306_Cmd::Command_Start << 0xF1;
    9ec8:	e3a03000 	mov	r3, #0
    9ecc:	e50b3058 	str	r3, [fp, #-88]	; 0xffffffa8
    9ed0:	e24b3058 	sub	r3, fp, #88	; 0x58
    9ed4:	e1a01003 	mov	r1, r3
    9ed8:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    9edc:	eb000313 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9ee0:	e1a02000 	mov	r2, r0
    9ee4:	e3a030f1 	mov	r3, #241	; 0xf1
    9ee8:	e50b3054 	str	r3, [fp, #-84]	; 0xffffffac
    9eec:	e24b3054 	sub	r3, fp, #84	; 0x54
    9ef0:	e1a01003 	mov	r1, r3
    9ef4:	e1a00002 	mov	r0, r2
    9ef8:	eb000328 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:140

        mI2C.End_Transaction(ta);
    9efc:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9f00:	e5933000 	ldr	r3, [r3]
    9f04:	e3a02001 	mov	r2, #1
    9f08:	e51b1030 	ldr	r1, [fp, #-48]	; 0xffffffd0
    9f0c:	e1a00003 	mov	r0, r3
    9f10:	ebfffbfb 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:146
    }

    // finalni aktivace displeje - uroven detekce vstupu, nahozeni panelu, neinvertovane barvy, neskrolujeme, zapneme
    // podsviceni
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9f14:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9f18:	e5933000 	ldr	r3, [r3]
    9f1c:	e3a0103c 	mov	r1, #60	; 0x3c
    9f20:	e1a00003 	mov	r0, r3
    9f24:	ebfffbd8 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9f28:	e50b0034 	str	r0, [fp, #-52]	; 0xffffffcc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:148

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_VCOM_Detect << 0x40 << SSD1306_Cmd::Display_All_On_Resume
    9f2c:	e3a03000 	mov	r3, #0
    9f30:	e50b3050 	str	r3, [fp, #-80]	; 0xffffffb0
    9f34:	e24b3050 	sub	r3, fp, #80	; 0x50
    9f38:	e1a01003 	mov	r1, r3
    9f3c:	e51b0034 	ldr	r0, [fp, #-52]	; 0xffffffcc
    9f40:	eb0002fa 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f44:	e1a02000 	mov	r2, r0
    9f48:	e3a030d8 	mov	r3, #216	; 0xd8
    9f4c:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
    9f50:	e24b304c 	sub	r3, fp, #76	; 0x4c
    9f54:	e1a01003 	mov	r1, r3
    9f58:	e1a00002 	mov	r0, r2
    9f5c:	eb0002f3 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f60:	e1a02000 	mov	r2, r0
    9f64:	e3a03040 	mov	r3, #64	; 0x40
    9f68:	e50b3048 	str	r3, [fp, #-72]	; 0xffffffb8
    9f6c:	e24b3048 	sub	r3, fp, #72	; 0x48
    9f70:	e1a01003 	mov	r1, r3
    9f74:	e1a00002 	mov	r0, r2
    9f78:	eb000308 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9f7c:	e1a02000 	mov	r2, r0
    9f80:	e3a030a4 	mov	r3, #164	; 0xa4
    9f84:	e50b3044 	str	r3, [fp, #-68]	; 0xffffffbc
    9f88:	e24b3044 	sub	r3, fp, #68	; 0x44
    9f8c:	e1a01003 	mov	r1, r3
    9f90:	e1a00002 	mov	r0, r2
    9f94:	eb0002e5 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f98:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:149
           << SSD1306_Cmd::Normal_Display << SSD1306_Cmd::Deactivate_Scroll << SSD1306_Cmd::Display_On;
    9f9c:	e3a030a6 	mov	r3, #166	; 0xa6
    9fa0:	e50b3040 	str	r3, [fp, #-64]	; 0xffffffc0
    9fa4:	e24b3040 	sub	r3, fp, #64	; 0x40
    9fa8:	e1a01003 	mov	r1, r3
    9fac:	e1a00002 	mov	r0, r2
    9fb0:	eb0002de 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9fb4:	e1a02000 	mov	r2, r0
    9fb8:	e3a0302e 	mov	r3, #46	; 0x2e
    9fbc:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    9fc0:	e24b303c 	sub	r3, fp, #60	; 0x3c
    9fc4:	e1a01003 	mov	r1, r3
    9fc8:	e1a00002 	mov	r0, r2
    9fcc:	eb0002d7 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9fd0:	e1a02000 	mov	r2, r0
    9fd4:	e3a030af 	mov	r3, #175	; 0xaf
    9fd8:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    9fdc:	e24b3038 	sub	r3, fp, #56	; 0x38
    9fe0:	e1a01003 	mov	r1, r3
    9fe4:	e1a00002 	mov	r0, r2
    9fe8:	eb0002d0 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:151

        mI2C.End_Transaction(ta);
    9fec:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ff0:	e5933000 	ldr	r3, [r3]
    9ff4:	e3a02001 	mov	r2, #1
    9ff8:	e51b1034 	ldr	r1, [fp, #-52]	; 0xffffffcc
    9ffc:	e1a00003 	mov	r0, r3
    a000:	ebfffbbf 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:154
    }

    Clear();
    a004:	e3a01000 	mov	r1, #0
    a008:	e51b00d0 	ldr	r0, [fp, #-208]	; 0xffffff30
    a00c:	eb000067 	bl	a1b0 <_ZN16CDisplay_SSD13065ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:156

    return true;
    a010:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:157
}
    a014:	e1a00003 	mov	r0, r3
    a018:	e24bd004 	sub	sp, fp, #4
    a01c:	e8bd8800 	pop	{fp, pc}

0000a020 <_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh>:
_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:160

void CDisplay_SSD1306::Send_Command(SSD1306_Cmd cmd, uint8_t lowPart)
{
    a020:	e92d4800 	push	{fp, lr}
    a024:	e28db004 	add	fp, sp, #4
    a028:	e24dd020 	sub	sp, sp, #32
    a02c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    a030:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    a034:	e1a03002 	mov	r3, r2
    a038:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:161
    auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a03c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a040:	e5933000 	ldr	r3, [r3]
    a044:	e3a0103c 	mov	r1, #60	; 0x3c
    a048:	e1a00003 	mov	r0, r3
    a04c:	ebfffb8e 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a050:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:163

    ta << SSD1306_Cmd::Command_Start << (static_cast<uint8_t>(cmd) | lowPart);
    a054:	e3a03000 	mov	r3, #0
    a058:	e50b3010 	str	r3, [fp, #-16]
    a05c:	e24b3010 	sub	r3, fp, #16
    a060:	e1a01003 	mov	r1, r3
    a064:	e51b0008 	ldr	r0, [fp, #-8]
    a068:	eb0002b0 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a06c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a070:	e6ef2073 	uxtb	r2, r3
    a074:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
    a078:	e1823003 	orr	r3, r2, r3
    a07c:	e6ef3073 	uxtb	r3, r3
    a080:	e50b300c 	str	r3, [fp, #-12]
    a084:	e24b300c 	sub	r3, fp, #12
    a088:	e1a01003 	mov	r1, r3
    a08c:	eb0002c3 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:165

    mI2C.End_Transaction(ta);
    a090:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a094:	e5933000 	ldr	r3, [r3]
    a098:	e3a02001 	mov	r2, #1
    a09c:	e51b1008 	ldr	r1, [fp, #-8]
    a0a0:	e1a00003 	mov	r0, r3
    a0a4:	ebfffb96 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:166
}
    a0a8:	e320f000 	nop	{0}
    a0ac:	e24bd004 	sub	sp, fp, #4
    a0b0:	e8bd8800 	pop	{fp, pc}

0000a0b4 <_ZN16CDisplay_SSD13065CloseEv>:
_ZN16CDisplay_SSD13065CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:169

void CDisplay_SSD1306::Close()
{
    a0b4:	e92d4800 	push	{fp, lr}
    a0b8:	e28db004 	add	fp, sp, #4
    a0bc:	e24dd018 	sub	sp, sp, #24
    a0c0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:170
    if (!mOpened)
    a0c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0c8:	e5d33004 	ldrb	r3, [r3, #4]
    a0cc:	e2233001 	eor	r3, r3, #1
    a0d0:	e6ef3073 	uxtb	r3, r3
    a0d4:	e3530000 	cmp	r3, #0
    a0d8:	1a000027 	bne	a17c <_ZN16CDisplay_SSD13065CloseEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:175
        return;

    // posleme prikaz z vypnuti displeje
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a0dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0e0:	e5933000 	ldr	r3, [r3]
    a0e4:	e3a0103c 	mov	r1, #60	; 0x3c
    a0e8:	e1a00003 	mov	r0, r3
    a0ec:	ebfffb66 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a0f0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:177

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Display_Off;
    a0f4:	e3a03000 	mov	r3, #0
    a0f8:	e50b3010 	str	r3, [fp, #-16]
    a0fc:	e24b3010 	sub	r3, fp, #16
    a100:	e1a01003 	mov	r1, r3
    a104:	e51b0008 	ldr	r0, [fp, #-8]
    a108:	eb000288 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a10c:	e1a02000 	mov	r2, r0
    a110:	e3a030ae 	mov	r3, #174	; 0xae
    a114:	e50b300c 	str	r3, [fp, #-12]
    a118:	e24b300c 	sub	r3, fp, #12
    a11c:	e1a01003 	mov	r1, r3
    a120:	e1a00002 	mov	r0, r2
    a124:	eb000281 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:179

        mI2C.End_Transaction(ta);
    a128:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a12c:	e5933000 	ldr	r3, [r3]
    a130:	e3a02001 	mov	r2, #1
    a134:	e51b1008 	ldr	r1, [fp, #-8]
    a138:	e1a00003 	mov	r0, r3
    a13c:	ebfffb70 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:182
    }

    mI2C.Close();
    a140:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a144:	e5933000 	ldr	r3, [r3]
    a148:	e1a00003 	mov	r0, r3
    a14c:	ebfffaa5 	bl	8be8 <_ZN4CI2C5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:184

    delete mBuffer;
    a150:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a154:	e5933008 	ldr	r3, [r3, #8]
    a158:	e3530000 	cmp	r3, #0
    a15c:	0a000002 	beq	a16c <_ZN16CDisplay_SSD13065CloseEv+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:184 (discriminator 1)
    a160:	e3a01001 	mov	r1, #1
    a164:	e1a00003 	mov	r0, r3
    a168:	eb000264 	bl	ab00 <_ZdlPvj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:186

    mOpened = false;
    a16c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a170:	e3a02000 	mov	r2, #0
    a174:	e5c32004 	strb	r2, [r3, #4]
    a178:	ea000000 	b	a180 <_ZN16CDisplay_SSD13065CloseEv+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:171
        return;
    a17c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:187
}
    a180:	e24bd004 	sub	sp, fp, #4
    a184:	e8bd8800 	pop	{fp, pc}

0000a188 <_ZNK16CDisplay_SSD13069Is_OpenedEv>:
_ZNK16CDisplay_SSD13069Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:190

bool CDisplay_SSD1306::Is_Opened() const
{
    a188:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    a18c:	e28db000 	add	fp, sp, #0
    a190:	e24dd00c 	sub	sp, sp, #12
    a194:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:191
    return mOpened;
    a198:	e51b3008 	ldr	r3, [fp, #-8]
    a19c:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:192
}
    a1a0:	e1a00003 	mov	r0, r3
    a1a4:	e28bd000 	add	sp, fp, #0
    a1a8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    a1ac:	e12fff1e 	bx	lr

0000a1b0 <_ZN16CDisplay_SSD13065ClearEb>:
_ZN16CDisplay_SSD13065ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:195

void CDisplay_SSD1306::Clear(bool clearWhite)
{
    a1b0:	e92d4800 	push	{fp, lr}
    a1b4:	e28db004 	add	fp, sp, #4
    a1b8:	e24dd018 	sub	sp, sp, #24
    a1bc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    a1c0:	e1a03001 	mov	r3, r1
    a1c4:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:196
    if (!mOpened)
    a1c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a1cc:	e5d33004 	ldrb	r3, [r3, #4]
    a1d0:	e2233001 	eor	r3, r3, #1
    a1d4:	e6ef3073 	uxtb	r3, r3
    a1d8:	e3530000 	cmp	r3, #0
    a1dc:	1a000024 	bne	a274 <_ZN16CDisplay_SSD13065ClearEb+0xc4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199
        return;

    const uint8_t clearColor = clearWhite ? 0xFF : 0x00;
    a1e0:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
    a1e4:	e3530000 	cmp	r3, #0
    a1e8:	0a000001 	beq	a1f4 <_ZN16CDisplay_SSD13065ClearEb+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199 (discriminator 1)
    a1ec:	e3a030ff 	mov	r3, #255	; 0xff
    a1f0:	ea000000 	b	a1f8 <_ZN16CDisplay_SSD13065ClearEb+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199 (discriminator 2)
    a1f4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199 (discriminator 4)
    a1f8:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201 (discriminator 4)

    const int maxIdx = mWidth * (mHeight / 8);
    a1fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a200:	e593200c 	ldr	r2, [r3, #12]
    a204:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a208:	e5933010 	ldr	r3, [r3, #16]
    a20c:	e2831007 	add	r1, r3, #7
    a210:	e3530000 	cmp	r3, #0
    a214:	b1a03001 	movlt	r3, r1
    a218:	a1a03003 	movge	r3, r3
    a21c:	e1a031c3 	asr	r3, r3, #3
    a220:	e0030293 	mul	r3, r3, r2
    a224:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203 (discriminator 4)

    for (int i = 0; i < maxIdx; i++)
    a228:	e3a03000 	mov	r3, #0
    a22c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203 (discriminator 3)
    a230:	e51b2008 	ldr	r2, [fp, #-8]
    a234:	e51b3010 	ldr	r3, [fp, #-16]
    a238:	e1520003 	cmp	r2, r3
    a23c:	aa000009 	bge	a268 <_ZN16CDisplay_SSD13065ClearEb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:204 (discriminator 2)
        mBuffer[i] = clearColor;
    a240:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a244:	e5932008 	ldr	r2, [r3, #8]
    a248:	e51b3008 	ldr	r3, [fp, #-8]
    a24c:	e0823003 	add	r3, r2, r3
    a250:	e55b2009 	ldrb	r2, [fp, #-9]
    a254:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203 (discriminator 2)
    for (int i = 0; i < maxIdx; i++)
    a258:	e51b3008 	ldr	r3, [fp, #-8]
    a25c:	e2833001 	add	r3, r3, #1
    a260:	e50b3008 	str	r3, [fp, #-8]
    a264:	eafffff1 	b	a230 <_ZN16CDisplay_SSD13065ClearEb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:206

    Flip();
    a268:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    a26c:	eb000055 	bl	a3c8 <_ZN16CDisplay_SSD13064FlipEv>
    a270:	ea000000 	b	a278 <_ZN16CDisplay_SSD13065ClearEb+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:197
        return;
    a274:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:207
}
    a278:	e24bd004 	sub	sp, fp, #4
    a27c:	e8bd8800 	pop	{fp, pc}

0000a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>:
_ZN16CDisplay_SSD13069Set_PixelEjjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:210

void CDisplay_SSD1306::Set_Pixel(uint32_t x, uint32_t y, bool set)
{
    a280:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    a284:	e28db000 	add	fp, sp, #0
    a288:	e24dd014 	sub	sp, sp, #20
    a28c:	e50b0008 	str	r0, [fp, #-8]
    a290:	e50b100c 	str	r1, [fp, #-12]
    a294:	e50b2010 	str	r2, [fp, #-16]
    a298:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:211
    if (!mOpened)
    a29c:	e51b3008 	ldr	r3, [fp, #-8]
    a2a0:	e5d33004 	ldrb	r3, [r3, #4]
    a2a4:	e2233001 	eor	r3, r3, #1
    a2a8:	e6ef3073 	uxtb	r3, r3
    a2ac:	e3530000 	cmp	r3, #0
    a2b0:	1a000040 	bne	a3b8 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:214
        return;

    if (set)
    a2b4:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    a2b8:	e3530000 	cmp	r3, #0
    a2bc:	0a00001d 	beq	a338 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:215
        mBuffer[x + (y / 8) * mWidth] |= (1 << (y & 7));
    a2c0:	e51b3008 	ldr	r3, [fp, #-8]
    a2c4:	e5931008 	ldr	r1, [r3, #8]
    a2c8:	e51b3010 	ldr	r3, [fp, #-16]
    a2cc:	e1a031a3 	lsr	r3, r3, #3
    a2d0:	e51b2008 	ldr	r2, [fp, #-8]
    a2d4:	e592200c 	ldr	r2, [r2, #12]
    a2d8:	e0000392 	mul	r0, r2, r3
    a2dc:	e51b200c 	ldr	r2, [fp, #-12]
    a2e0:	e0802002 	add	r2, r0, r2
    a2e4:	e0812002 	add	r2, r1, r2
    a2e8:	e5d22000 	ldrb	r2, [r2]
    a2ec:	e6af1072 	sxtb	r1, r2
    a2f0:	e51b2010 	ldr	r2, [fp, #-16]
    a2f4:	e2022007 	and	r2, r2, #7
    a2f8:	e3a00001 	mov	r0, #1
    a2fc:	e1a02210 	lsl	r2, r0, r2
    a300:	e6af2072 	sxtb	r2, r2
    a304:	e1812002 	orr	r2, r1, r2
    a308:	e6af0072 	sxtb	r0, r2
    a30c:	e51b2008 	ldr	r2, [fp, #-8]
    a310:	e5922008 	ldr	r2, [r2, #8]
    a314:	e51b1008 	ldr	r1, [fp, #-8]
    a318:	e591100c 	ldr	r1, [r1, #12]
    a31c:	e0010391 	mul	r1, r1, r3
    a320:	e51b300c 	ldr	r3, [fp, #-12]
    a324:	e0813003 	add	r3, r1, r3
    a328:	e0823003 	add	r3, r2, r3
    a32c:	e6ef2070 	uxtb	r2, r0
    a330:	e5c32000 	strb	r2, [r3]
    a334:	ea000020 	b	a3bc <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:217
    else
        mBuffer[x + (y / 8) * mWidth] &= ~(1 << (y & 7));
    a338:	e51b3008 	ldr	r3, [fp, #-8]
    a33c:	e5931008 	ldr	r1, [r3, #8]
    a340:	e51b3010 	ldr	r3, [fp, #-16]
    a344:	e1a031a3 	lsr	r3, r3, #3
    a348:	e51b2008 	ldr	r2, [fp, #-8]
    a34c:	e592200c 	ldr	r2, [r2, #12]
    a350:	e0000392 	mul	r0, r2, r3
    a354:	e51b200c 	ldr	r2, [fp, #-12]
    a358:	e0802002 	add	r2, r0, r2
    a35c:	e0812002 	add	r2, r1, r2
    a360:	e5d22000 	ldrb	r2, [r2]
    a364:	e6af1072 	sxtb	r1, r2
    a368:	e51b2010 	ldr	r2, [fp, #-16]
    a36c:	e2022007 	and	r2, r2, #7
    a370:	e3a00001 	mov	r0, #1
    a374:	e1a02210 	lsl	r2, r0, r2
    a378:	e6af2072 	sxtb	r2, r2
    a37c:	e1e02002 	mvn	r2, r2
    a380:	e6af2072 	sxtb	r2, r2
    a384:	e0022001 	and	r2, r2, r1
    a388:	e6af0072 	sxtb	r0, r2
    a38c:	e51b2008 	ldr	r2, [fp, #-8]
    a390:	e5922008 	ldr	r2, [r2, #8]
    a394:	e51b1008 	ldr	r1, [fp, #-8]
    a398:	e591100c 	ldr	r1, [r1, #12]
    a39c:	e0010391 	mul	r1, r1, r3
    a3a0:	e51b300c 	ldr	r3, [fp, #-12]
    a3a4:	e0813003 	add	r3, r1, r3
    a3a8:	e0823003 	add	r3, r2, r3
    a3ac:	e6ef2070 	uxtb	r2, r0
    a3b0:	e5c32000 	strb	r2, [r3]
    a3b4:	ea000000 	b	a3bc <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:212
        return;
    a3b8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:218
}
    a3bc:	e28bd000 	add	sp, fp, #0
    a3c0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    a3c4:	e12fff1e 	bx	lr

0000a3c8 <_ZN16CDisplay_SSD13064FlipEv>:
_ZN16CDisplay_SSD13064FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:221

void CDisplay_SSD1306::Flip()
{
    a3c8:	e92d4800 	push	{fp, lr}
    a3cc:	e28db004 	add	fp, sp, #4
    a3d0:	e24dd040 	sub	sp, sp, #64	; 0x40
    a3d4:	e50b0040 	str	r0, [fp, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:222
    if (!mOpened)
    a3d8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a3dc:	e5d33004 	ldrb	r3, [r3, #4]
    a3e0:	e2233001 	eor	r3, r3, #1
    a3e4:	e6ef3073 	uxtb	r3, r3
    a3e8:	e3530000 	cmp	r3, #0
    a3ec:	1a000078 	bne	a5d4 <_ZN16CDisplay_SSD13064FlipEv+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:229

    int i;

    // nastavime kurzor na levy horni roh
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a3f0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a3f4:	e5933000 	ldr	r3, [r3]
    a3f8:	e3a0103c 	mov	r1, #60	; 0x3c
    a3fc:	e1a00003 	mov	r0, r3
    a400:	ebfffaa1 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a404:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:231

        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Page_Addr << 0x00 << 0xFF << SSD1306_Cmd::Set_Column_Addr
    a408:	e3a03000 	mov	r3, #0
    a40c:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    a410:	e24b303c 	sub	r3, fp, #60	; 0x3c
    a414:	e1a01003 	mov	r1, r3
    a418:	e51b0010 	ldr	r0, [fp, #-16]
    a41c:	eb0001c3 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a420:	e1a02000 	mov	r2, r0
    a424:	e3a03022 	mov	r3, #34	; 0x22
    a428:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    a42c:	e24b3038 	sub	r3, fp, #56	; 0x38
    a430:	e1a01003 	mov	r1, r3
    a434:	e1a00002 	mov	r0, r2
    a438:	eb0001bc 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a43c:	e1a02000 	mov	r2, r0
    a440:	e3a03000 	mov	r3, #0
    a444:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    a448:	e24b3034 	sub	r3, fp, #52	; 0x34
    a44c:	e1a01003 	mov	r1, r3
    a450:	e1a00002 	mov	r0, r2
    a454:	eb0001d1 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a458:	e1a02000 	mov	r2, r0
    a45c:	e3a030ff 	mov	r3, #255	; 0xff
    a460:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
    a464:	e24b3030 	sub	r3, fp, #48	; 0x30
    a468:	e1a01003 	mov	r1, r3
    a46c:	e1a00002 	mov	r0, r2
    a470:	eb0001ca 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a474:	e1a02000 	mov	r2, r0
    a478:	e3a03021 	mov	r3, #33	; 0x21
    a47c:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    a480:	e24b302c 	sub	r3, fp, #44	; 0x2c
    a484:	e1a01003 	mov	r1, r3
    a488:	e1a00002 	mov	r0, r2
    a48c:	eb0001a7 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a490:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:232
           << 0x00 << mWidth - 1;
    a494:	e3a03000 	mov	r3, #0
    a498:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    a49c:	e24b3028 	sub	r3, fp, #40	; 0x28
    a4a0:	e1a01003 	mov	r1, r3
    a4a4:	e1a00002 	mov	r0, r2
    a4a8:	eb0001bc 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a4ac:	e1a02000 	mov	r2, r0
    a4b0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4b4:	e593300c 	ldr	r3, [r3, #12]
    a4b8:	e2433001 	sub	r3, r3, #1
    a4bc:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    a4c0:	e24b3024 	sub	r3, fp, #36	; 0x24
    a4c4:	e1a01003 	mov	r1, r3
    a4c8:	e1a00002 	mov	r0, r2
    a4cc:	eb0001b3 	bl	aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:234

        mI2C.End_Transaction(ta);
    a4d0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4d4:	e5933000 	ldr	r3, [r3]
    a4d8:	e3a02001 	mov	r2, #1
    a4dc:	e51b1010 	ldr	r1, [fp, #-16]
    a4e0:	e1a00003 	mov	r0, r3
    a4e4:	ebfffa86 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:238
    }

    // budeme posilat pixely po balikach 4 sloupcu (po 8 pixelech)
    constexpr int PktSize = 4;
    a4e8:	e3a03004 	mov	r3, #4
    a4ec:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:240

    const int maxIdx = mWidth * (mHeight / 8);
    a4f0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4f4:	e593200c 	ldr	r2, [r3, #12]
    a4f8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4fc:	e5933010 	ldr	r3, [r3, #16]
    a500:	e2831007 	add	r1, r3, #7
    a504:	e3530000 	cmp	r3, #0
    a508:	b1a03001 	movlt	r3, r1
    a50c:	a1a03003 	movge	r3, r3
    a510:	e1a031c3 	asr	r3, r3, #3
    a514:	e0030293 	mul	r3, r3, r2
    a518:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:242

    for (int i = 0; i < maxIdx; i += PktSize)
    a51c:	e3a03000 	mov	r3, #0
    a520:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:242 (discriminator 1)
    a524:	e51b2008 	ldr	r2, [fp, #-8]
    a528:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a52c:	e1520003 	cmp	r2, r3
    a530:	aa000028 	bge	a5d8 <_ZN16CDisplay_SSD13064FlipEv+0x210>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:244
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a534:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a538:	e5933000 	ldr	r3, [r3]
    a53c:	e3a0103c 	mov	r1, #60	; 0x3c
    a540:	e1a00003 	mov	r0, r3
    a544:	ebfffa50 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a548:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:246

        ta << SSD1306_Cmd::Data_Continue;
    a54c:	e3a03040 	mov	r3, #64	; 0x40
    a550:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    a554:	e24b3020 	sub	r3, fp, #32
    a558:	e1a01003 	mov	r1, r3
    a55c:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    a560:	eb000172 	bl	ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:247
        for (int j = 0; j < PktSize; j++)
    a564:	e3a03000 	mov	r3, #0
    a568:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:247 (discriminator 3)
    a56c:	e51b300c 	ldr	r3, [fp, #-12]
    a570:	e3530003 	cmp	r3, #3
    a574:	ca00000c 	bgt	a5ac <_ZN16CDisplay_SSD13064FlipEv+0x1e4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:249 (discriminator 2)
        {
            ta << mBuffer[i + j];
    a578:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a57c:	e5933008 	ldr	r3, [r3, #8]
    a580:	e51b1008 	ldr	r1, [fp, #-8]
    a584:	e51b200c 	ldr	r2, [fp, #-12]
    a588:	e0812002 	add	r2, r1, r2
    a58c:	e0833002 	add	r3, r3, r2
    a590:	e1a01003 	mov	r1, r3
    a594:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    a598:	eb00019c 	bl	ac10 <_ZN16CI2C_TransactionlsIhEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:247 (discriminator 2)
        for (int j = 0; j < PktSize; j++)
    a59c:	e51b300c 	ldr	r3, [fp, #-12]
    a5a0:	e2833001 	add	r3, r3, #1
    a5a4:	e50b300c 	str	r3, [fp, #-12]
    a5a8:	eaffffef 	b	a56c <_ZN16CDisplay_SSD13064FlipEv+0x1a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:253 (discriminator 2)
            // sMonitor << "Sending " << static_cast<unsigned int>(mBuffer[i + j]) << '\n';
        }

        mI2C.End_Transaction(ta);
    a5ac:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a5b0:	e5933000 	ldr	r3, [r3]
    a5b4:	e3a02001 	mov	r2, #1
    a5b8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    a5bc:	e1a00003 	mov	r0, r3
    a5c0:	ebfffa4f 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:242 (discriminator 2)
    for (int i = 0; i < maxIdx; i += PktSize)
    a5c4:	e51b3008 	ldr	r3, [fp, #-8]
    a5c8:	e2833004 	add	r3, r3, #4
    a5cc:	e50b3008 	str	r3, [fp, #-8]
    a5d0:	eaffffd3 	b	a524 <_ZN16CDisplay_SSD13064FlipEv+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:223
        return;
    a5d4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:255
    }
}
    a5d8:	e24bd004 	sub	sp, fp, #4
    a5dc:	e8bd8800 	pop	{fp, pc}

0000a5e0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj>:
_ZN16CDisplay_SSD130624Process_External_CommandEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:258

void CDisplay_SSD1306::Process_External_Command(const char* input, uint32_t length)
{
    a5e0:	e92d4800 	push	{fp, lr}
    a5e4:	e28db004 	add	fp, sp, #4
    a5e8:	e24dd040 	sub	sp, sp, #64	; 0x40
    a5ec:	e50b0038 	str	r0, [fp, #-56]	; 0xffffffc8
    a5f0:	e50b103c 	str	r1, [fp, #-60]	; 0xffffffc4
    a5f4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:259
    if (length <= 0)
    a5f8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a5fc:	e3530000 	cmp	r3, #0
    a600:	0a000115 	beq	aa5c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x47c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:262
        return;

    NDisplay_Command cmd = static_cast<NDisplay_Command>(input[0]);
    a604:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a608:	e5d33000 	ldrb	r3, [r3]
    a60c:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264

    switch (cmd)
    a610:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    a614:	e3530004 	cmp	r3, #4
    a618:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    a61c:	ea000119 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
    a620:	0000aa88 	andeq	sl, r0, r8, lsl #21
    a624:	0000a634 	andeq	sl, r0, r4, lsr r6
    a628:	0000a640 	andeq	sl, r0, r0, asr #12
    a62c:	0000a67c 	andeq	sl, r0, ip, ror r6
    a630:	0000a730 	andeq	sl, r0, r0, lsr r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:272
            // sMonitor << "External CMD: NOP\n";
            break;

        case NDisplay_Command::Flip:
            // sMonitor << "External CMD: Flip\n";
            Flip();
    a634:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a638:	ebffff62 	bl	a3c8 <_ZN16CDisplay_SSD13064FlipEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:273
            break;
    a63c:	ea000111 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:278

        case NDisplay_Command::Clear: {
            //  sMonitor << "External CMD: Clear\n";

            if (length != sizeof(TDisplay_Clear_Packet))
    a640:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a644:	e3530002 	cmp	r3, #2
    a648:	1a000105 	bne	aa64 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x484>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:281
                return;

            const TDisplay_Clear_Packet* pkt = reinterpret_cast<const TDisplay_Clear_Packet*>(input);
    a64c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a650:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:283

            Clear((pkt->clearSet != 0));
    a654:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    a658:	e5d33001 	ldrb	r3, [r3, #1]
    a65c:	e3530000 	cmp	r3, #0
    a660:	13a03001 	movne	r3, #1
    a664:	03a03000 	moveq	r3, #0
    a668:	e6ef3073 	uxtb	r3, r3
    a66c:	e1a01003 	mov	r1, r3
    a670:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a674:	ebfffecd 	bl	a1b0 <_ZN16CDisplay_SSD13065ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:285

            break;
    a678:	ea000102 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:291
        }

        case NDisplay_Command::Draw_Pixel_Array: {
            // sMonitor << "External CMD: Draw_Pixel_Array\n";

            if (length < sizeof(TDisplay_Draw_Pixel_Array_Packet))
    a67c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a680:	e3530007 	cmp	r3, #7
    a684:	9a0000f8 	bls	aa6c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x48c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:294
                return;

            const TDisplay_Draw_Pixel_Array_Packet* pkt =
    a688:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a68c:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:297
            reinterpret_cast<const TDisplay_Draw_Pixel_Array_Packet*>(input);

            const TDisplay_Pixel_Spec* ptr = &pkt->first;
    a690:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    a694:	e2833003 	add	r3, r3, #3
    a698:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299

            for (uint16_t i = 0; i < pkt->count; i++)
    a69c:	e3a03000 	mov	r3, #0
    a6a0:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299 (discriminator 3)
    a6a4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    a6a8:	e5d32001 	ldrb	r2, [r3, #1]
    a6ac:	e5d33002 	ldrb	r3, [r3, #2]
    a6b0:	e1a03403 	lsl	r3, r3, #8
    a6b4:	e1833002 	orr	r3, r3, r2
    a6b8:	e6ff3073 	uxth	r3, r3
    a6bc:	e15b20b6 	ldrh	r2, [fp, #-6]
    a6c0:	e1520003 	cmp	r2, r3
    a6c4:	2a0000ea 	bcs	aa74 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x494>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:300 (discriminator 2)
                Set_Pixel(ptr->x, ptr->y, (ptr->set != 0));
    a6c8:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    a6cc:	e5d32000 	ldrb	r2, [r3]
    a6d0:	e5d33001 	ldrb	r3, [r3, #1]
    a6d4:	e1a03403 	lsl	r3, r3, #8
    a6d8:	e1833002 	orr	r3, r3, r2
    a6dc:	e6ff3073 	uxth	r3, r3
    a6e0:	e1a01003 	mov	r1, r3
    a6e4:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    a6e8:	e5d32002 	ldrb	r2, [r3, #2]
    a6ec:	e5d33003 	ldrb	r3, [r3, #3]
    a6f0:	e1a03403 	lsl	r3, r3, #8
    a6f4:	e1833002 	orr	r3, r3, r2
    a6f8:	e6ff3073 	uxth	r3, r3
    a6fc:	e1a02003 	mov	r2, r3
    a700:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    a704:	e5d33004 	ldrb	r3, [r3, #4]
    a708:	e3530000 	cmp	r3, #0
    a70c:	13a03001 	movne	r3, #1
    a710:	03a03000 	moveq	r3, #0
    a714:	e6ef3073 	uxtb	r3, r3
    a718:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a71c:	ebfffed7 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299 (discriminator 2)
            for (uint16_t i = 0; i < pkt->count; i++)
    a720:	e15b30b6 	ldrh	r3, [fp, #-6]
    a724:	e2833001 	add	r3, r3, #1
    a728:	e14b30b6 	strh	r3, [fp, #-6]
    a72c:	eaffffdc 	b	a6a4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0xc4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:308
        }

        case NDisplay_Command::Draw_Pixel_Array_To_Rect: {
            // sMonitor << "External CMD: Draw_Pixel_Array_To_Rect\n";

            if (length < sizeof(TDisplay_Pixels_To_Rect))
    a730:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a734:	e353000a 	cmp	r3, #10
    a738:	9a0000cf 	bls	aa7c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x49c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:311
                return;

            const TDisplay_Pixels_To_Rect* pkt = reinterpret_cast<const TDisplay_Pixels_To_Rect*>(input);
    a73c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a740:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:313

            const uint8_t* data = &pkt->first;
    a744:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a748:	e283300a 	add	r3, r3, #10
    a74c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:317

            // sMonitor << "pkt->vflip = " << (pkt->vflip == 0) << '\n';

            if (pkt->vflip == 0)
    a750:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a754:	e5d33009 	ldrb	r3, [r3, #9]
    a758:	e3530000 	cmp	r3, #0
    a75c:	1a000066 	bne	a8fc <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x31c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:319
            {
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a760:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a764:	e5d32001 	ldrb	r2, [r3, #1]
    a768:	e5d33002 	ldrb	r3, [r3, #2]
    a76c:	e1a03403 	lsl	r3, r3, #8
    a770:	e1833002 	orr	r3, r3, r2
    a774:	e14b30b8 	strh	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:319 (discriminator 1)
    a778:	e15b20b8 	ldrh	r2, [fp, #-8]
    a77c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a780:	e5d31001 	ldrb	r1, [r3, #1]
    a784:	e5d33002 	ldrb	r3, [r3, #2]
    a788:	e1a03403 	lsl	r3, r3, #8
    a78c:	e1833001 	orr	r3, r3, r1
    a790:	e6ff3073 	uxth	r3, r3
    a794:	e1a00003 	mov	r0, r3
    a798:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a79c:	e5d31005 	ldrb	r1, [r3, #5]
    a7a0:	e5d33006 	ldrb	r3, [r3, #6]
    a7a4:	e1a03403 	lsl	r3, r3, #8
    a7a8:	e1833001 	orr	r3, r3, r1
    a7ac:	e6ff3073 	uxth	r3, r3
    a7b0:	e0803003 	add	r3, r0, r3
    a7b4:	e1520003 	cmp	r2, r3
    a7b8:	aa0000b1 	bge	aa84 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:321
                {
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a7bc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a7c0:	e5d32003 	ldrb	r2, [r3, #3]
    a7c4:	e5d33004 	ldrb	r3, [r3, #4]
    a7c8:	e1a03403 	lsl	r3, r3, #8
    a7cc:	e1833002 	orr	r3, r3, r2
    a7d0:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:321 (discriminator 3)
    a7d4:	e15b20ba 	ldrh	r2, [fp, #-10]
    a7d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a7dc:	e5d31003 	ldrb	r1, [r3, #3]
    a7e0:	e5d33004 	ldrb	r3, [r3, #4]
    a7e4:	e1a03403 	lsl	r3, r3, #8
    a7e8:	e1833001 	orr	r3, r3, r1
    a7ec:	e6ff3073 	uxth	r3, r3
    a7f0:	e1a00003 	mov	r0, r3
    a7f4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a7f8:	e5d31007 	ldrb	r1, [r3, #7]
    a7fc:	e5d33008 	ldrb	r3, [r3, #8]
    a800:	e1a03403 	lsl	r3, r3, #8
    a804:	e1833001 	orr	r3, r3, r1
    a808:	e6ff3073 	uxth	r3, r3
    a80c:	e0803003 	add	r3, r0, r3
    a810:	e1520003 	cmp	r2, r3
    a814:	aa000034 	bge	a8ec <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x30c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:323 (discriminator 2)
                    {
                        const uint16_t pos = ((y - pkt->y1) * pkt->w + (x - pkt->x1));
    a818:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a81c:	e5d32003 	ldrb	r2, [r3, #3]
    a820:	e5d33004 	ldrb	r3, [r3, #4]
    a824:	e1a03403 	lsl	r3, r3, #8
    a828:	e1833002 	orr	r3, r3, r2
    a82c:	e6ff3073 	uxth	r3, r3
    a830:	e15b20ba 	ldrh	r2, [fp, #-10]
    a834:	e0423003 	sub	r3, r2, r3
    a838:	e6ff2073 	uxth	r2, r3
    a83c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a840:	e5d31005 	ldrb	r1, [r3, #5]
    a844:	e5d33006 	ldrb	r3, [r3, #6]
    a848:	e1a03403 	lsl	r3, r3, #8
    a84c:	e1833001 	orr	r3, r3, r1
    a850:	e6ff3073 	uxth	r3, r3
    a854:	e1630382 	smulbb	r3, r2, r3
    a858:	e6ff2073 	uxth	r2, r3
    a85c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a860:	e5d31001 	ldrb	r1, [r3, #1]
    a864:	e5d33002 	ldrb	r3, [r3, #2]
    a868:	e1a03403 	lsl	r3, r3, #8
    a86c:	e1833001 	orr	r3, r3, r1
    a870:	e6ff3073 	uxth	r3, r3
    a874:	e15b10b8 	ldrh	r1, [fp, #-8]
    a878:	e0413003 	sub	r3, r1, r3
    a87c:	e6ff3073 	uxth	r3, r3
    a880:	e0823003 	add	r3, r2, r3
    a884:	e14b32b8 	strh	r3, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:325 (discriminator 2)

                        Set_Pixel(x, y, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a888:	e15b10b8 	ldrh	r1, [fp, #-8]
    a88c:	e15b20ba 	ldrh	r2, [fp, #-10]
    a890:	e15b32b8 	ldrh	r3, [fp, #-40]	; 0xffffffd8
    a894:	e1a031a3 	lsr	r3, r3, #3
    a898:	e6ff3073 	uxth	r3, r3
    a89c:	e1a00003 	mov	r0, r3
    a8a0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    a8a4:	e0833000 	add	r3, r3, r0
    a8a8:	e5d33000 	ldrb	r3, [r3]
    a8ac:	e1a00003 	mov	r0, r3
    a8b0:	e15b32b8 	ldrh	r3, [fp, #-40]	; 0xffffffd8
    a8b4:	e1e03003 	mvn	r3, r3
    a8b8:	e2033007 	and	r3, r3, #7
    a8bc:	e1a03350 	asr	r3, r0, r3
    a8c0:	e2033001 	and	r3, r3, #1
    a8c4:	e3530000 	cmp	r3, #0
    a8c8:	13a03001 	movne	r3, #1
    a8cc:	03a03000 	moveq	r3, #0
    a8d0:	e6ef3073 	uxtb	r3, r3
    a8d4:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a8d8:	ebfffe68 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:321 (discriminator 2)
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a8dc:	e15b30ba 	ldrh	r3, [fp, #-10]
    a8e0:	e2833001 	add	r3, r3, #1
    a8e4:	e14b30ba 	strh	r3, [fp, #-10]
    a8e8:	eaffffb9 	b	a7d4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1f4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:319 (discriminator 2)
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a8ec:	e15b30b8 	ldrh	r3, [fp, #-8]
    a8f0:	e2833001 	add	r3, r3, #1
    a8f4:	e14b30b8 	strh	r3, [fp, #-8]
    a8f8:	eaffff9e 	b	a778 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x198>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343
                {
                    sMonitor << static_cast<unsigned int>(data[i]) << " ";
                }
                sMonitor << "\n";*/

                for (uint32_t x = 0; x < pkt->w; x++)
    a8fc:	e3a03000 	mov	r3, #0
    a900:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 1)
    a904:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a908:	e5d32005 	ldrb	r2, [r3, #5]
    a90c:	e5d33006 	ldrb	r3, [r3, #6]
    a910:	e1a03403 	lsl	r3, r3, #8
    a914:	e1833002 	orr	r3, r3, r2
    a918:	e6ff3073 	uxth	r3, r3
    a91c:	e1a02003 	mov	r2, r3
    a920:	e51b3010 	ldr	r3, [fp, #-16]
    a924:	e1530002 	cmp	r3, r2
    a928:	2a000055 	bcs	aa84 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345
                {
                    for (uint32_t y = 0; y < pkt->h; y++)
    a92c:	e3a03000 	mov	r3, #0
    a930:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 3)
    a934:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a938:	e5d32007 	ldrb	r2, [r3, #7]
    a93c:	e5d33008 	ldrb	r3, [r3, #8]
    a940:	e1a03403 	lsl	r3, r3, #8
    a944:	e1833002 	orr	r3, r3, r2
    a948:	e6ff3073 	uxth	r3, r3
    a94c:	e1a02003 	mov	r2, r3
    a950:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a954:	e1530002 	cmp	r3, r2
    a958:	2a00003b 	bcs	aa4c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x46c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:347 (discriminator 2)
                    {
                        const uint32_t pos = (x * pkt->h + y);
    a95c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a960:	e5d32007 	ldrb	r2, [r3, #7]
    a964:	e5d33008 	ldrb	r3, [r3, #8]
    a968:	e1a03403 	lsl	r3, r3, #8
    a96c:	e1833002 	orr	r3, r3, r2
    a970:	e6ff3073 	uxth	r3, r3
    a974:	e1a02003 	mov	r2, r3
    a978:	e51b3010 	ldr	r3, [fp, #-16]
    a97c:	e0030293 	mul	r3, r3, r2
    a980:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    a984:	e0823003 	add	r3, r2, r3
    a988:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:354 (discriminator 2)
                        // sMonitor << "x = " << static_cast<unsigned int>(x) << "; y = " << static_cast<unsigned
                        // int>(y) << '\n'; sMonitor << "pos = " << static_cast<unsigned int>(pos) << '\n'; sMonitor <<
                        // "[a; b] = [" << static_cast<unsigned int>(pos / 8) << "; " << static_cast<unsigned int>(7 -
                        // (pos % 8)) << "]\n";

                        const bool set = ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0;
    a98c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    a990:	e1a031a3 	lsr	r3, r3, #3
    a994:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    a998:	e0823003 	add	r3, r2, r3
    a99c:	e5d33000 	ldrb	r3, [r3]
    a9a0:	e1a02003 	mov	r2, r3
    a9a4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    a9a8:	e1e03003 	mvn	r3, r3
    a9ac:	e2033007 	and	r3, r3, #7
    a9b0:	e1a03352 	asr	r3, r2, r3
    a9b4:	e2033001 	and	r3, r3, #1
    a9b8:	e3530000 	cmp	r3, #0
    a9bc:	13a03001 	movne	r3, #1
    a9c0:	03a03000 	moveq	r3, #0
    a9c4:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358 (discriminator 2)
                        // sMonitor << "[" << static_cast<unsigned int>((pkt->h - y) + pkt->y1) << "; " <<
                        // static_cast<unsigned int>(x + pkt->x1) << "] = " << set << "\n";

                        Set_Pixel(x + pkt->x1, (pkt->h - y) + pkt->y1, set);
    a9c8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a9cc:	e5d32001 	ldrb	r2, [r3, #1]
    a9d0:	e5d33002 	ldrb	r3, [r3, #2]
    a9d4:	e1a03403 	lsl	r3, r3, #8
    a9d8:	e1833002 	orr	r3, r3, r2
    a9dc:	e6ff3073 	uxth	r3, r3
    a9e0:	e1a02003 	mov	r2, r3
    a9e4:	e51b3010 	ldr	r3, [fp, #-16]
    a9e8:	e0820003 	add	r0, r2, r3
    a9ec:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a9f0:	e5d32007 	ldrb	r2, [r3, #7]
    a9f4:	e5d33008 	ldrb	r3, [r3, #8]
    a9f8:	e1a03403 	lsl	r3, r3, #8
    a9fc:	e1833002 	orr	r3, r3, r2
    aa00:	e6ff3073 	uxth	r3, r3
    aa04:	e1a02003 	mov	r2, r3
    aa08:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    aa0c:	e0422003 	sub	r2, r2, r3
    aa10:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa14:	e5d31003 	ldrb	r1, [r3, #3]
    aa18:	e5d33004 	ldrb	r3, [r3, #4]
    aa1c:	e1a03403 	lsl	r3, r3, #8
    aa20:	e1833001 	orr	r3, r3, r1
    aa24:	e6ff3073 	uxth	r3, r3
    aa28:	e0822003 	add	r2, r2, r3
    aa2c:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    aa30:	e1a01000 	mov	r1, r0
    aa34:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    aa38:	ebfffe10 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 2)
                    for (uint32_t y = 0; y < pkt->h; y++)
    aa3c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    aa40:	e2833001 	add	r3, r3, #1
    aa44:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    aa48:	eaffffb9 	b	a934 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x354>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 2)
                for (uint32_t x = 0; x < pkt->w; x++)
    aa4c:	e51b3010 	ldr	r3, [fp, #-16]
    aa50:	e2833001 	add	r3, r3, #1
    aa54:	e50b3010 	str	r3, [fp, #-16]
    aa58:	eaffffa9 	b	a904 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x324>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:260
        return;
    aa5c:	e320f000 	nop	{0}
    aa60:	ea000008 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:279
                return;
    aa64:	e320f000 	nop	{0}
    aa68:	ea000006 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:292
                return;
    aa6c:	e320f000 	nop	{0}
    aa70:	ea000004 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:302
            break;
    aa74:	e320f000 	nop	{0}
    aa78:	ea000002 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:309
                return;
    aa7c:	e320f000 	nop	{0}
    aa80:	ea000000 	b	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:363
                    }
                }
            }

            break;
    aa84:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
        }
    }
}
    aa88:	e24bd004 	sub	sp, fp, #4
    aa8c:	e8bd8800 	pop	{fp, pc}

0000aa90 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
    aa90:	e92d4800 	push	{fp, lr}
    aa94:	e28db004 	add	fp, sp, #4
    aa98:	e24dd008 	sub	sp, sp, #8
    aa9c:	e50b0008 	str	r0, [fp, #-8]
    aaa0:	e50b100c 	str	r1, [fp, #-12]
    aaa4:	e51b3008 	ldr	r3, [fp, #-8]
    aaa8:	e3530001 	cmp	r3, #1
    aaac:	1a000006 	bne	aacc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366 (discriminator 1)
    aab0:	e51b300c 	ldr	r3, [fp, #-12]
    aab4:	e59f201c 	ldr	r2, [pc, #28]	; aad8 <_Z41__static_initialization_and_destruction_0ii+0x48>
    aab8:	e1530002 	cmp	r3, r2
    aabc:	1a000002 	bne	aacc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:7
CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);
    aac0:	e59f1014 	ldr	r1, [pc, #20]	; aadc <_Z41__static_initialization_and_destruction_0ii+0x4c>
    aac4:	e59f0014 	ldr	r0, [pc, #20]	; aae0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    aac8:	ebfffb6e 	bl	9888 <_ZN16CDisplay_SSD1306C1ER4CI2C>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
}
    aacc:	e320f000 	nop	{0}
    aad0:	e24bd004 	sub	sp, fp, #4
    aad4:	e8bd8800 	pop	{fp, pc}
    aad8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    aadc:	00010b70 	andeq	r0, r1, r0, ror fp
    aae0:	00010bbc 			; <UNDEFINED> instruction: 0x00010bbc

0000aae4 <_GLOBAL__sub_I_sDisplay_SSD1306>:
_GLOBAL__sub_I_sDisplay_SSD1306():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
    aae4:	e92d4800 	push	{fp, lr}
    aae8:	e28db004 	add	fp, sp, #4
    aaec:	e59f1008 	ldr	r1, [pc, #8]	; aafc <_GLOBAL__sub_I_sDisplay_SSD1306+0x18>
    aaf0:	e3a00001 	mov	r0, #1
    aaf4:	ebffffe5 	bl	aa90 <_Z41__static_initialization_and_destruction_0ii>
    aaf8:	e8bd8800 	pop	{fp, pc}
    aafc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000ab00 <_ZdlPvj>:
_ZdlPvj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:62
{
    sKernelMem.Free(p);
}

inline void operator delete(void* p, uint32_t)
{
    ab00:	e92d4800 	push	{fp, lr}
    ab04:	e28db004 	add	fp, sp, #4
    ab08:	e24dd008 	sub	sp, sp, #8
    ab0c:	e50b0008 	str	r0, [fp, #-8]
    ab10:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:63
    sKernelMem.Free(p);
    ab14:	e51b1008 	ldr	r1, [fp, #-8]
    ab18:	e59f000c 	ldr	r0, [pc, #12]	; ab2c <_ZdlPvj+0x2c>
    ab1c:	eb000bc3 	bl	da30 <_ZN20CKernel_Heap_Manager4FreeEPv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:64
}
    ab20:	e320f000 	nop	{0}
    ab24:	e24bd004 	sub	sp, fp, #4
    ab28:	e8bd8800 	pop	{fp, pc}
    ab2c:	00010c90 	muleq	r1, r0, ip

0000ab30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>:
_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:34

    // vlozeni znaku do bufferu
    template<typename T>
    CI2C_Transaction& operator<<(const T& chr)
    ab30:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ab34:	e28db000 	add	fp, sp, #0
    ab38:	e24dd00c 	sub	sp, sp, #12
    ab3c:	e50b0008 	str	r0, [fp, #-8]
    ab40:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
    {
        if (mLength >= I2C_Transaction_Max_Size)
    ab44:	e51b3008 	ldr	r3, [fp, #-8]
    ab48:	e593300c 	ldr	r3, [r3, #12]
    ab4c:	e3530007 	cmp	r3, #7
    ab50:	9a000001 	bls	ab5c <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:37
            return *this;
    ab54:	e51b3008 	ldr	r3, [fp, #-8]
    ab58:	ea00000c 	b	ab90 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:39

        mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ab5c:	e51b300c 	ldr	r3, [fp, #-12]
    ab60:	e5930000 	ldr	r0, [r3]
    ab64:	e51b3008 	ldr	r3, [fp, #-8]
    ab68:	e593300c 	ldr	r3, [r3, #12]
    ab6c:	e2831001 	add	r1, r3, #1
    ab70:	e51b2008 	ldr	r2, [fp, #-8]
    ab74:	e582100c 	str	r1, [r2, #12]
    ab78:	e6ef1070 	uxtb	r1, r0
    ab7c:	e51b2008 	ldr	r2, [fp, #-8]
    ab80:	e0823003 	add	r3, r2, r3
    ab84:	e1a02001 	mov	r2, r1
    ab88:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41

        return *this;
    ab8c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:42
    }
    ab90:	e1a00003 	mov	r0, r3
    ab94:	e28bd000 	add	sp, fp, #0
    ab98:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ab9c:	e12fff1e 	bx	lr

0000aba0 <_ZN16CI2C_TransactionlsIiEERS_RKT_>:
_ZN16CI2C_TransactionlsIiEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:34
    CI2C_Transaction& operator<<(const T& chr)
    aba0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    aba4:	e28db000 	add	fp, sp, #0
    aba8:	e24dd00c 	sub	sp, sp, #12
    abac:	e50b0008 	str	r0, [fp, #-8]
    abb0:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
        if (mLength >= I2C_Transaction_Max_Size)
    abb4:	e51b3008 	ldr	r3, [fp, #-8]
    abb8:	e593300c 	ldr	r3, [r3, #12]
    abbc:	e3530007 	cmp	r3, #7
    abc0:	9a000001 	bls	abcc <_ZN16CI2C_TransactionlsIiEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:37
            return *this;
    abc4:	e51b3008 	ldr	r3, [fp, #-8]
    abc8:	ea00000c 	b	ac00 <_ZN16CI2C_TransactionlsIiEERS_RKT_+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:39
        mBuffer[mLength++] = static_cast<uint8_t>(chr);
    abcc:	e51b300c 	ldr	r3, [fp, #-12]
    abd0:	e5930000 	ldr	r0, [r3]
    abd4:	e51b3008 	ldr	r3, [fp, #-8]
    abd8:	e593300c 	ldr	r3, [r3, #12]
    abdc:	e2831001 	add	r1, r3, #1
    abe0:	e51b2008 	ldr	r2, [fp, #-8]
    abe4:	e582100c 	str	r1, [r2, #12]
    abe8:	e6ef1070 	uxtb	r1, r0
    abec:	e51b2008 	ldr	r2, [fp, #-8]
    abf0:	e0823003 	add	r3, r2, r3
    abf4:	e1a02001 	mov	r2, r1
    abf8:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        return *this;
    abfc:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:42
    }
    ac00:	e1a00003 	mov	r0, r3
    ac04:	e28bd000 	add	sp, fp, #0
    ac08:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ac0c:	e12fff1e 	bx	lr

0000ac10 <_ZN16CI2C_TransactionlsIhEERS_RKT_>:
_ZN16CI2C_TransactionlsIhEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:34
    CI2C_Transaction& operator<<(const T& chr)
    ac10:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ac14:	e28db000 	add	fp, sp, #0
    ac18:	e24dd00c 	sub	sp, sp, #12
    ac1c:	e50b0008 	str	r0, [fp, #-8]
    ac20:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
        if (mLength >= I2C_Transaction_Max_Size)
    ac24:	e51b3008 	ldr	r3, [fp, #-8]
    ac28:	e593300c 	ldr	r3, [r3, #12]
    ac2c:	e3530007 	cmp	r3, #7
    ac30:	9a000001 	bls	ac3c <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:37
            return *this;
    ac34:	e51b3008 	ldr	r3, [fp, #-8]
    ac38:	ea00000b 	b	ac6c <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:39
        mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ac3c:	e51b3008 	ldr	r3, [fp, #-8]
    ac40:	e593300c 	ldr	r3, [r3, #12]
    ac44:	e2831001 	add	r1, r3, #1
    ac48:	e51b2008 	ldr	r2, [fp, #-8]
    ac4c:	e582100c 	str	r1, [r2, #12]
    ac50:	e51b200c 	ldr	r2, [fp, #-12]
    ac54:	e5d21000 	ldrb	r1, [r2]
    ac58:	e51b2008 	ldr	r2, [fp, #-8]
    ac5c:	e0823003 	add	r3, r2, r3
    ac60:	e1a02001 	mov	r2, r1
    ac64:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        return *this;
    ac68:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:42
    }
    ac6c:	e1a00003 	mov	r0, r3
    ac70:	e28bd000 	add	sp, fp, #0
    ac74:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ac78:	e12fff1e 	bx	lr

0000ac7c <_ZN16CSegment_DisplayC1Ev>:
_ZN16CSegment_DisplayC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:124
    0,          // }
    0,          // ~
    0,          // DEL
};

CSegment_Display::CSegment_Display()
    ac7c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ac80:	e28db000 	add	fp, sp, #0
    ac84:	e24dd00c 	sub	sp, sp, #12
    ac88:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:126
: mOpened(false)
, mOutput('\0')
    ac8c:	e51b3008 	ldr	r3, [fp, #-8]
    ac90:	e3a02000 	mov	r2, #0
    ac94:	e5c32000 	strb	r2, [r3]
    ac98:	e51b3008 	ldr	r3, [fp, #-8]
    ac9c:	e3a02000 	mov	r2, #0
    aca0:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:129
{
    //
}
    aca4:	e51b3008 	ldr	r3, [fp, #-8]
    aca8:	e1a00003 	mov	r0, r3
    acac:	e28bd000 	add	sp, fp, #0
    acb0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    acb4:	e12fff1e 	bx	lr

0000acb8 <_ZN16CSegment_Display4OpenEv>:
_ZN16CSegment_Display4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:132

bool CSegment_Display::Open()
{
    acb8:	e92d4800 	push	{fp, lr}
    acbc:	e28db004 	add	fp, sp, #4
    acc0:	e24dd008 	sub	sp, sp, #8
    acc4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:133
    if (mOpened)
    acc8:	e51b3008 	ldr	r3, [fp, #-8]
    accc:	e5d33000 	ldrb	r3, [r3]
    acd0:	e3530000 	cmp	r3, #0
    acd4:	0a000001 	beq	ace0 <_ZN16CSegment_Display4OpenEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:134
        return false;
    acd8:	e3a03000 	mov	r3, #0
    acdc:	ea00000c 	b	ad14 <_ZN16CSegment_Display4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:136

    if (!sShift_Register.Open())
    ace0:	e59f0038 	ldr	r0, [pc, #56]	; ad20 <_ZN16CSegment_Display4OpenEv+0x68>
    ace4:	eb000092 	bl	af34 <_ZN15CShift_Register4OpenEv>
    ace8:	e1a03000 	mov	r3, r0
    acec:	e2233001 	eor	r3, r3, #1
    acf0:	e6ef3073 	uxtb	r3, r3
    acf4:	e3530000 	cmp	r3, #0
    acf8:	0a000001 	beq	ad04 <_ZN16CSegment_Display4OpenEv+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:137
        return false;
    acfc:	e3a03000 	mov	r3, #0
    ad00:	ea000003 	b	ad14 <_ZN16CSegment_Display4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:139

    mOpened = true;
    ad04:	e51b3008 	ldr	r3, [fp, #-8]
    ad08:	e3a02001 	mov	r2, #1
    ad0c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:141

    return true;
    ad10:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:142
}
    ad14:	e1a00003 	mov	r0, r3
    ad18:	e24bd004 	sub	sp, fp, #4
    ad1c:	e8bd8800 	pop	{fp, pc}
    ad20:	00010bd4 	ldrdeq	r0, [r1], -r4

0000ad24 <_ZN16CSegment_Display5CloseEv>:
_ZN16CSegment_Display5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:145

void CSegment_Display::Close()
{
    ad24:	e92d4800 	push	{fp, lr}
    ad28:	e28db004 	add	fp, sp, #4
    ad2c:	e24dd008 	sub	sp, sp, #8
    ad30:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:146
    if (!mOpened)
    ad34:	e51b3008 	ldr	r3, [fp, #-8]
    ad38:	e5d33000 	ldrb	r3, [r3]
    ad3c:	e2233001 	eor	r3, r3, #1
    ad40:	e6ef3073 	uxtb	r3, r3
    ad44:	e3530000 	cmp	r3, #0
    ad48:	1a000005 	bne	ad64 <_ZN16CSegment_Display5CloseEv+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:149
        return;

    sShift_Register.Close();
    ad4c:	e59f001c 	ldr	r0, [pc, #28]	; ad70 <_ZN16CSegment_Display5CloseEv+0x4c>
    ad50:	eb0000d4 	bl	b0a8 <_ZN15CShift_Register5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:151

    mOpened = false;
    ad54:	e51b3008 	ldr	r3, [fp, #-8]
    ad58:	e3a02000 	mov	r2, #0
    ad5c:	e5c32000 	strb	r2, [r3]
    ad60:	ea000000 	b	ad68 <_ZN16CSegment_Display5CloseEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:147
        return;
    ad64:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:152
}
    ad68:	e24bd004 	sub	sp, fp, #4
    ad6c:	e8bd8800 	pop	{fp, pc}
    ad70:	00010bd4 	ldrdeq	r0, [r1], -r4

0000ad74 <_ZNK16CSegment_Display9Is_OpenedEv>:
_ZNK16CSegment_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:155

bool CSegment_Display::Is_Opened() const
{
    ad74:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ad78:	e28db000 	add	fp, sp, #0
    ad7c:	e24dd00c 	sub	sp, sp, #12
    ad80:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:156
    return mOpened;
    ad84:	e51b3008 	ldr	r3, [fp, #-8]
    ad88:	e5d33000 	ldrb	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:157
}
    ad8c:	e1a00003 	mov	r0, r3
    ad90:	e28bd000 	add	sp, fp, #0
    ad94:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ad98:	e12fff1e 	bx	lr

0000ad9c <_ZN16CSegment_Display5WriteEc>:
_ZN16CSegment_Display5WriteEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:160

void CSegment_Display::Write(char c)
{
    ad9c:	e92d4800 	push	{fp, lr}
    ada0:	e28db004 	add	fp, sp, #4
    ada4:	e24dd010 	sub	sp, sp, #16
    ada8:	e50b0010 	str	r0, [fp, #-16]
    adac:	e1a03001 	mov	r3, r1
    adb0:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:161
    if (!mOpened)
    adb4:	e51b3010 	ldr	r3, [fp, #-16]
    adb8:	e5d33000 	ldrb	r3, [r3]
    adbc:	e2233001 	eor	r3, r3, #1
    adc0:	e6ef3073 	uxtb	r3, r3
    adc4:	e3530000 	cmp	r3, #0
    adc8:	1a000011 	bne	ae14 <_ZN16CSegment_Display5WriteEc+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:164
        return;

    uint8_t idx = static_cast<uint8_t>(c);
    adcc:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    add0:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167

    // jen tisknutelne zakladni znaky
    if (idx < 32 || idx >= 128)
    add4:	e55b3005 	ldrb	r3, [fp, #-5]
    add8:	e353001f 	cmp	r3, #31
    addc:	9a00000e 	bls	ae1c <_ZN16CSegment_Display5WriteEc+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167 (discriminator 1)
    ade0:	e15b30d5 	ldrsb	r3, [fp, #-5]
    ade4:	e3530000 	cmp	r3, #0
    ade8:	ba00000b 	blt	ae1c <_ZN16CSegment_Display5WriteEc+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:171
        return;

    // segmenty jsou invertovane (spolecna katoda), takze tam kde je 0 bude segment svitit
    sShift_Register.Shift_In(static_cast<uint8_t>(~(mCharacter_Map[idx - 32])));
    adec:	e55b3005 	ldrb	r3, [fp, #-5]
    adf0:	e2433020 	sub	r3, r3, #32
    adf4:	e59f202c 	ldr	r2, [pc, #44]	; ae28 <_ZN16CSegment_Display5WriteEc+0x8c>
    adf8:	e7d23003 	ldrb	r3, [r2, r3]
    adfc:	e1e03003 	mvn	r3, r3
    ae00:	e6ef3073 	uxtb	r3, r3
    ae04:	e1a01003 	mov	r1, r3
    ae08:	e59f001c 	ldr	r0, [pc, #28]	; ae2c <_ZN16CSegment_Display5WriteEc+0x90>
    ae0c:	eb00012e 	bl	b2cc <_ZN15CShift_Register8Shift_InEh>
    ae10:	ea000002 	b	ae20 <_ZN16CSegment_Display5WriteEc+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:162
        return;
    ae14:	e320f000 	nop	{0}
    ae18:	ea000000 	b	ae20 <_ZN16CSegment_Display5WriteEc+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:168
        return;
    ae1c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:172
}
    ae20:	e24bd004 	sub	sp, fp, #4
    ae24:	e8bd8800 	pop	{fp, pc}
    ae28:	000100a4 	andeq	r0, r1, r4, lsr #1
    ae2c:	00010bd4 	ldrdeq	r0, [r1], -r4

0000ae30 <_ZNK16CSegment_Display4ReadEv>:
_ZNK16CSegment_Display4ReadEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:175

char CSegment_Display::Read() const
{
    ae30:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ae34:	e28db000 	add	fp, sp, #0
    ae38:	e24dd00c 	sub	sp, sp, #12
    ae3c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:176
    if (!mOpened)
    ae40:	e51b3008 	ldr	r3, [fp, #-8]
    ae44:	e5d33000 	ldrb	r3, [r3]
    ae48:	e2233001 	eor	r3, r3, #1
    ae4c:	e6ef3073 	uxtb	r3, r3
    ae50:	e3530000 	cmp	r3, #0
    ae54:	0a000001 	beq	ae60 <_ZNK16CSegment_Display4ReadEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:177
        return '\0';
    ae58:	e3a03000 	mov	r3, #0
    ae5c:	ea000001 	b	ae68 <_ZNK16CSegment_Display4ReadEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:179

    return mOutput;
    ae60:	e51b3008 	ldr	r3, [fp, #-8]
    ae64:	e5d33001 	ldrb	r3, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae68:	e1a00003 	mov	r0, r3
    ae6c:	e28bd000 	add	sp, fp, #0
    ae70:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ae74:	e12fff1e 	bx	lr

0000ae78 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae78:	e92d4800 	push	{fp, lr}
    ae7c:	e28db004 	add	fp, sp, #4
    ae80:	e24dd008 	sub	sp, sp, #8
    ae84:	e50b0008 	str	r0, [fp, #-8]
    ae88:	e50b100c 	str	r1, [fp, #-12]
    ae8c:	e51b3008 	ldr	r3, [fp, #-8]
    ae90:	e3530001 	cmp	r3, #1
    ae94:	1a000005 	bne	aeb0 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180 (discriminator 1)
    ae98:	e51b300c 	ldr	r3, [fp, #-12]
    ae9c:	e59f2018 	ldr	r2, [pc, #24]	; aebc <_Z41__static_initialization_and_destruction_0ii+0x44>
    aea0:	e1530002 	cmp	r3, r2
    aea4:	1a000001 	bne	aeb0 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    aea8:	e59f0010 	ldr	r0, [pc, #16]	; aec0 <_Z41__static_initialization_and_destruction_0ii+0x48>
    aeac:	ebffff72 	bl	ac7c <_ZN16CSegment_DisplayC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aeb0:	e320f000 	nop	{0}
    aeb4:	e24bd004 	sub	sp, fp, #4
    aeb8:	e8bd8800 	pop	{fp, pc}
    aebc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    aec0:	00010bd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000aec4 <_GLOBAL__sub_I_sSegment_Display>:
_GLOBAL__sub_I_sSegment_Display():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aec4:	e92d4800 	push	{fp, lr}
    aec8:	e28db004 	add	fp, sp, #4
    aecc:	e59f1008 	ldr	r1, [pc, #8]	; aedc <_GLOBAL__sub_I_sSegment_Display+0x18>
    aed0:	e3a00001 	mov	r0, #1
    aed4:	ebffffe7 	bl	ae78 <_Z41__static_initialization_and_destruction_0ii>
    aed8:	e8bd8800 	pop	{fp, pc}
    aedc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000aee0 <_ZN15CShift_RegisterC1Ejjj>:
_ZN15CShift_RegisterC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:7

// na tvrdo definujeme, ze jsme shift registr pripojili sem - volitelne muzeme pak oddelit do nejake HAL vrstvy pro dany
// header
CShift_Register sShift_Register(2, 3, 4);

CShift_Register::CShift_Register(uint32_t latchPin, uint32_t dataPin, uint32_t clockPin)
    aee0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    aee4:	e28db000 	add	fp, sp, #0
    aee8:	e24dd014 	sub	sp, sp, #20
    aeec:	e50b0008 	str	r0, [fp, #-8]
    aef0:	e50b100c 	str	r1, [fp, #-12]
    aef4:	e50b2010 	str	r2, [fp, #-16]
    aef8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:10
: mLatch_Pin(latchPin)
, mData_Pin(dataPin)
, mClock_Pin(clockPin)
    aefc:	e51b3008 	ldr	r3, [fp, #-8]
    af00:	e51b200c 	ldr	r2, [fp, #-12]
    af04:	e5832000 	str	r2, [r3]
    af08:	e51b3008 	ldr	r3, [fp, #-8]
    af0c:	e51b2010 	ldr	r2, [fp, #-16]
    af10:	e5832004 	str	r2, [r3, #4]
    af14:	e51b3008 	ldr	r3, [fp, #-8]
    af18:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    af1c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:13
{
    //
}
    af20:	e51b3008 	ldr	r3, [fp, #-8]
    af24:	e1a00003 	mov	r0, r3
    af28:	e28bd000 	add	sp, fp, #0
    af2c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    af30:	e12fff1e 	bx	lr

0000af34 <_ZN15CShift_Register4OpenEv>:
_ZN15CShift_Register4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:16

bool CShift_Register::Open()
{
    af34:	e92d4800 	push	{fp, lr}
    af38:	e28db004 	add	fp, sp, #4
    af3c:	e24dd008 	sub	sp, sp, #8
    af40:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:17
    if (mOpened)
    af44:	e51b3008 	ldr	r3, [fp, #-8]
    af48:	e5d3300c 	ldrb	r3, [r3, #12]
    af4c:	e3530000 	cmp	r3, #0
    af50:	0a000001 	beq	af5c <_ZN15CShift_Register4OpenEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:18
        return false;
    af54:	e3a03000 	mov	r3, #0
    af58:	ea00004e 	b	b098 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:22

    // rezervujeme vsechny piny pro shift registr

    if (!sGPIO.Reserve_Pin(mLatch_Pin, true, true))
    af5c:	e51b3008 	ldr	r3, [fp, #-8]
    af60:	e5931000 	ldr	r1, [r3]
    af64:	e3a03001 	mov	r3, #1
    af68:	e3a02001 	mov	r2, #1
    af6c:	e59f0130 	ldr	r0, [pc, #304]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    af70:	ebfff5bc 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    af74:	e1a03000 	mov	r3, r0
    af78:	e2233001 	eor	r3, r3, #1
    af7c:	e6ef3073 	uxtb	r3, r3
    af80:	e3530000 	cmp	r3, #0
    af84:	0a000001 	beq	af90 <_ZN15CShift_Register4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:23
        return false;
    af88:	e3a03000 	mov	r3, #0
    af8c:	ea000041 	b	b098 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:25

    if (!sGPIO.Reserve_Pin(mData_Pin, true, true))
    af90:	e51b3008 	ldr	r3, [fp, #-8]
    af94:	e5931004 	ldr	r1, [r3, #4]
    af98:	e3a03001 	mov	r3, #1
    af9c:	e3a02001 	mov	r2, #1
    afa0:	e59f00fc 	ldr	r0, [pc, #252]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    afa4:	ebfff5af 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    afa8:	e1a03000 	mov	r3, r0
    afac:	e2233001 	eor	r3, r3, #1
    afb0:	e6ef3073 	uxtb	r3, r3
    afb4:	e3530000 	cmp	r3, #0
    afb8:	0a000007 	beq	afdc <_ZN15CShift_Register4OpenEv+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:27
    {
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    afbc:	e51b3008 	ldr	r3, [fp, #-8]
    afc0:	e5931000 	ldr	r1, [r3]
    afc4:	e3a03001 	mov	r3, #1
    afc8:	e3a02001 	mov	r2, #1
    afcc:	e59f00d0 	ldr	r0, [pc, #208]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    afd0:	ebfff60a 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:28
        return false;
    afd4:	e3a03000 	mov	r3, #0
    afd8:	ea00002e 	b	b098 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:31
    }

    if (!sGPIO.Reserve_Pin(mClock_Pin, true, true))
    afdc:	e51b3008 	ldr	r3, [fp, #-8]
    afe0:	e5931008 	ldr	r1, [r3, #8]
    afe4:	e3a03001 	mov	r3, #1
    afe8:	e3a02001 	mov	r2, #1
    afec:	e59f00b0 	ldr	r0, [pc, #176]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    aff0:	ebfff59c 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    aff4:	e1a03000 	mov	r3, r0
    aff8:	e2233001 	eor	r3, r3, #1
    affc:	e6ef3073 	uxtb	r3, r3
    b000:	e3530000 	cmp	r3, #0
    b004:	0a00000d 	beq	b040 <_ZN15CShift_Register4OpenEv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:33
    {
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b008:	e51b3008 	ldr	r3, [fp, #-8]
    b00c:	e5931000 	ldr	r1, [r3]
    b010:	e3a03001 	mov	r3, #1
    b014:	e3a02001 	mov	r2, #1
    b018:	e59f0084 	ldr	r0, [pc, #132]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    b01c:	ebfff5f7 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:34
        sGPIO.Free_Pin(mData_Pin, true, true);
    b020:	e51b3008 	ldr	r3, [fp, #-8]
    b024:	e5931004 	ldr	r1, [r3, #4]
    b028:	e3a03001 	mov	r3, #1
    b02c:	e3a02001 	mov	r2, #1
    b030:	e59f006c 	ldr	r0, [pc, #108]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    b034:	ebfff5f1 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:35
        return false;
    b038:	e3a03000 	mov	r3, #0
    b03c:	ea000015 	b	b098 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:39
    }

    // vsechny jsou vystupni
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Output);
    b040:	e51b3008 	ldr	r3, [fp, #-8]
    b044:	e5933000 	ldr	r3, [r3]
    b048:	e3a02001 	mov	r2, #1
    b04c:	e1a01003 	mov	r1, r3
    b050:	e59f004c 	ldr	r0, [pc, #76]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    b054:	ebfff4dd 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:40
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Output);
    b058:	e51b3008 	ldr	r3, [fp, #-8]
    b05c:	e5933004 	ldr	r3, [r3, #4]
    b060:	e3a02001 	mov	r2, #1
    b064:	e1a01003 	mov	r1, r3
    b068:	e59f0034 	ldr	r0, [pc, #52]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    b06c:	ebfff4d7 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:41
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Output);
    b070:	e51b3008 	ldr	r3, [fp, #-8]
    b074:	e5933008 	ldr	r3, [r3, #8]
    b078:	e3a02001 	mov	r2, #1
    b07c:	e1a01003 	mov	r1, r3
    b080:	e59f001c 	ldr	r0, [pc, #28]	; b0a4 <_ZN15CShift_Register4OpenEv+0x170>
    b084:	ebfff4d1 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:43

    mOpened = true;
    b088:	e51b3008 	ldr	r3, [fp, #-8]
    b08c:	e3a02001 	mov	r2, #1
    b090:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:45

    return true;
    b094:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:46
}
    b098:	e1a00003 	mov	r0, r3
    b09c:	e24bd004 	sub	sp, fp, #4
    b0a0:	e8bd8800 	pop	{fp, pc}
    b0a4:	00010b5c 	andeq	r0, r1, ip, asr fp

0000b0a8 <_ZN15CShift_Register5CloseEv>:
_ZN15CShift_Register5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:49

void CShift_Register::Close()
{
    b0a8:	e92d4800 	push	{fp, lr}
    b0ac:	e28db004 	add	fp, sp, #4
    b0b0:	e24dd008 	sub	sp, sp, #8
    b0b4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:50
    if (!mOpened)
    b0b8:	e51b3008 	ldr	r3, [fp, #-8]
    b0bc:	e5d3300c 	ldrb	r3, [r3, #12]
    b0c0:	e2233001 	eor	r3, r3, #1
    b0c4:	e6ef3073 	uxtb	r3, r3
    b0c8:	e3530000 	cmp	r3, #0
    b0cc:	1a000027 	bne	b170 <_ZN15CShift_Register5CloseEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:54
        return;

    // prepneme piny na vstupni (setreni energii)
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Input);
    b0d0:	e51b3008 	ldr	r3, [fp, #-8]
    b0d4:	e5933000 	ldr	r3, [r3]
    b0d8:	e3a02000 	mov	r2, #0
    b0dc:	e1a01003 	mov	r1, r3
    b0e0:	e59f0094 	ldr	r0, [pc, #148]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
    b0e4:	ebfff4b9 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:55
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Input);
    b0e8:	e51b3008 	ldr	r3, [fp, #-8]
    b0ec:	e5933004 	ldr	r3, [r3, #4]
    b0f0:	e3a02000 	mov	r2, #0
    b0f4:	e1a01003 	mov	r1, r3
    b0f8:	e59f007c 	ldr	r0, [pc, #124]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
    b0fc:	ebfff4b3 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:56
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Input);
    b100:	e51b3008 	ldr	r3, [fp, #-8]
    b104:	e5933008 	ldr	r3, [r3, #8]
    b108:	e3a02000 	mov	r2, #0
    b10c:	e1a01003 	mov	r1, r3
    b110:	e59f0064 	ldr	r0, [pc, #100]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
    b114:	ebfff4ad 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:59

    // a vratime je
    sGPIO.Free_Pin(mLatch_Pin, true, true);
    b118:	e51b3008 	ldr	r3, [fp, #-8]
    b11c:	e5931000 	ldr	r1, [r3]
    b120:	e3a03001 	mov	r3, #1
    b124:	e3a02001 	mov	r2, #1
    b128:	e59f004c 	ldr	r0, [pc, #76]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
    b12c:	ebfff5b3 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:60
    sGPIO.Free_Pin(mData_Pin, true, true);
    b130:	e51b3008 	ldr	r3, [fp, #-8]
    b134:	e5931004 	ldr	r1, [r3, #4]
    b138:	e3a03001 	mov	r3, #1
    b13c:	e3a02001 	mov	r2, #1
    b140:	e59f0034 	ldr	r0, [pc, #52]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
    b144:	ebfff5ad 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:61
    sGPIO.Free_Pin(mClock_Pin, true, true);
    b148:	e51b3008 	ldr	r3, [fp, #-8]
    b14c:	e5931008 	ldr	r1, [r3, #8]
    b150:	e3a03001 	mov	r3, #1
    b154:	e3a02001 	mov	r2, #1
    b158:	e59f001c 	ldr	r0, [pc, #28]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
    b15c:	ebfff5a7 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:63

    mOpened = false;
    b160:	e51b3008 	ldr	r3, [fp, #-8]
    b164:	e3a02000 	mov	r2, #0
    b168:	e5c3200c 	strb	r2, [r3, #12]
    b16c:	ea000000 	b	b174 <_ZN15CShift_Register5CloseEv+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:51
        return;
    b170:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:64
}
    b174:	e24bd004 	sub	sp, fp, #4
    b178:	e8bd8800 	pop	{fp, pc}
    b17c:	00010b5c 	andeq	r0, r1, ip, asr fp

0000b180 <_ZNK15CShift_Register9Is_OpenedEv>:
_ZNK15CShift_Register9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:67

bool CShift_Register::Is_Opened() const
{
    b180:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b184:	e28db000 	add	fp, sp, #0
    b188:	e24dd00c 	sub	sp, sp, #12
    b18c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:68
    return mOpened;
    b190:	e51b3008 	ldr	r3, [fp, #-8]
    b194:	e5d3300c 	ldrb	r3, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:69
}
    b198:	e1a00003 	mov	r0, r3
    b19c:	e28bd000 	add	sp, fp, #0
    b1a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b1a4:	e12fff1e 	bx	lr

0000b1a8 <_ZN15CShift_Register8Shift_InEb>:
_ZN15CShift_Register8Shift_InEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:72

void CShift_Register::Shift_In(bool bit)
{
    b1a8:	e92d4800 	push	{fp, lr}
    b1ac:	e28db004 	add	fp, sp, #4
    b1b0:	e24dd010 	sub	sp, sp, #16
    b1b4:	e50b0010 	str	r0, [fp, #-16]
    b1b8:	e1a03001 	mov	r3, r1
    b1bc:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:73
    if (!mOpened)
    b1c0:	e51b3010 	ldr	r3, [fp, #-16]
    b1c4:	e5d3300c 	ldrb	r3, [r3, #12]
    b1c8:	e2233001 	eor	r3, r3, #1
    b1cc:	e6ef3073 	uxtb	r3, r3
    b1d0:	e3530000 	cmp	r3, #0
    b1d4:	1a000038 	bne	b2bc <_ZN15CShift_Register8Shift_InEb+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:79
        return;

    volatile int i;

    // budeme nahravat bity do banku
    sGPIO.Set_Output(mLatch_Pin, false);
    b1d8:	e51b3010 	ldr	r3, [fp, #-16]
    b1dc:	e5933000 	ldr	r3, [r3]
    b1e0:	e3a02000 	mov	r2, #0
    b1e4:	e1a01003 	mov	r1, r3
    b1e8:	e59f00d8 	ldr	r0, [pc, #216]	; b2c8 <_ZN15CShift_Register8Shift_InEb+0x120>
    b1ec:	ebfff4c6 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:82

    // nastavime bit
    sGPIO.Set_Output(mData_Pin, bit);
    b1f0:	e51b3010 	ldr	r3, [fp, #-16]
    b1f4:	e5933004 	ldr	r3, [r3, #4]
    b1f8:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
    b1fc:	e1a01003 	mov	r1, r3
    b200:	e59f00c0 	ldr	r0, [pc, #192]	; b2c8 <_ZN15CShift_Register8Shift_InEb+0x120>
    b204:	ebfff4c0 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:84
    // clock -> shift registr nasune bit ze vstupu do banku
    sGPIO.Set_Output(mClock_Pin, true);
    b208:	e51b3010 	ldr	r3, [fp, #-16]
    b20c:	e5933008 	ldr	r3, [r3, #8]
    b210:	e3a02001 	mov	r2, #1
    b214:	e1a01003 	mov	r1, r3
    b218:	e59f00a8 	ldr	r0, [pc, #168]	; b2c8 <_ZN15CShift_Register8Shift_InEb+0x120>
    b21c:	ebfff4ba 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87

    // pockat par milisekund
    for (i = 0; i < 0x10; i++)
    b220:	e3a03000 	mov	r3, #0
    b224:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 3)
    b228:	e51b3008 	ldr	r3, [fp, #-8]
    b22c:	e353000f 	cmp	r3, #15
    b230:	d3a03001 	movle	r3, #1
    b234:	c3a03000 	movgt	r3, #0
    b238:	e6ef3073 	uxtb	r3, r3
    b23c:	e3530000 	cmp	r3, #0
    b240:	0a000003 	beq	b254 <_ZN15CShift_Register8Shift_InEb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 2)
    b244:	e51b3008 	ldr	r3, [fp, #-8]
    b248:	e2833001 	add	r3, r3, #1
    b24c:	e50b3008 	str	r3, [fp, #-8]
    b250:	eafffff4 	b	b228 <_ZN15CShift_Register8Shift_InEb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:91
        ;

    // vratit clock zpatky
    sGPIO.Set_Output(mClock_Pin, false);
    b254:	e51b3010 	ldr	r3, [fp, #-16]
    b258:	e5933008 	ldr	r3, [r3, #8]
    b25c:	e3a02000 	mov	r2, #0
    b260:	e1a01003 	mov	r1, r3
    b264:	e59f005c 	ldr	r0, [pc, #92]	; b2c8 <_ZN15CShift_Register8Shift_InEb+0x120>
    b268:	ebfff4a7 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94

    // pockat par milisekund
    for (i = 0; i < 0x10; i++)
    b26c:	e3a03000 	mov	r3, #0
    b270:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 3)
    b274:	e51b3008 	ldr	r3, [fp, #-8]
    b278:	e353000f 	cmp	r3, #15
    b27c:	d3a03001 	movle	r3, #1
    b280:	c3a03000 	movgt	r3, #0
    b284:	e6ef3073 	uxtb	r3, r3
    b288:	e3530000 	cmp	r3, #0
    b28c:	0a000003 	beq	b2a0 <_ZN15CShift_Register8Shift_InEb+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 2)
    b290:	e51b3008 	ldr	r3, [fp, #-8]
    b294:	e2833001 	add	r3, r3, #1
    b298:	e50b3008 	str	r3, [fp, #-8]
    b29c:	eafffff4 	b	b274 <_ZN15CShift_Register8Shift_InEb+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:98
        ;

    // propiseme bank do vystupu
    sGPIO.Set_Output(mLatch_Pin, true);
    b2a0:	e51b3010 	ldr	r3, [fp, #-16]
    b2a4:	e5933000 	ldr	r3, [r3]
    b2a8:	e3a02001 	mov	r2, #1
    b2ac:	e1a01003 	mov	r1, r3
    b2b0:	e59f0010 	ldr	r0, [pc, #16]	; b2c8 <_ZN15CShift_Register8Shift_InEb+0x120>
    b2b4:	ebfff494 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
    b2b8:	ea000000 	b	b2c0 <_ZN15CShift_Register8Shift_InEb+0x118>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:74
        return;
    b2bc:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:99
}
    b2c0:	e24bd004 	sub	sp, fp, #4
    b2c4:	e8bd8800 	pop	{fp, pc}
    b2c8:	00010b5c 	andeq	r0, r1, ip, asr fp

0000b2cc <_ZN15CShift_Register8Shift_InEh>:
_ZN15CShift_Register8Shift_InEh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:102

void CShift_Register::Shift_In(uint8_t byte)
{
    b2cc:	e92d4800 	push	{fp, lr}
    b2d0:	e28db004 	add	fp, sp, #4
    b2d4:	e24dd010 	sub	sp, sp, #16
    b2d8:	e50b0010 	str	r0, [fp, #-16]
    b2dc:	e1a03001 	mov	r3, r1
    b2e0:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:103
    if (!mOpened)
    b2e4:	e51b3010 	ldr	r3, [fp, #-16]
    b2e8:	e5d3300c 	ldrb	r3, [r3, #12]
    b2ec:	e2233001 	eor	r3, r3, #1
    b2f0:	e6ef3073 	uxtb	r3, r3
    b2f4:	e3530000 	cmp	r3, #0
    b2f8:	1a000048 	bne	b420 <_ZN15CShift_Register8Shift_InEh+0x154>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:109
        return;

    volatile int i;

    // zapisovat do banku
    sGPIO.Set_Output(mLatch_Pin, false);
    b2fc:	e51b3010 	ldr	r3, [fp, #-16]
    b300:	e5933000 	ldr	r3, [r3]
    b304:	e3a02000 	mov	r2, #0
    b308:	e1a01003 	mov	r1, r3
    b30c:	e59f0118 	ldr	r0, [pc, #280]	; b42c <_ZN15CShift_Register8Shift_InEh+0x160>
    b310:	ebfff47d 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112

    // nasuneme bity od nejvyssiho po nejnizsi (aby na vystupu byly v poradi)
    for (int j = 7; j >= 0; j--)
    b314:	e3a03007 	mov	r3, #7
    b318:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 1)
    b31c:	e51b3008 	ldr	r3, [fp, #-8]
    b320:	e3530000 	cmp	r3, #0
    b324:	ba000036 	blt	b404 <_ZN15CShift_Register8Shift_InEh+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:114
    {
        sGPIO.Set_Output(mData_Pin, ((byte >> j) & 0x1));
    b328:	e51b3010 	ldr	r3, [fp, #-16]
    b32c:	e5931004 	ldr	r1, [r3, #4]
    b330:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
    b334:	e51b3008 	ldr	r3, [fp, #-8]
    b338:	e1a03352 	asr	r3, r2, r3
    b33c:	e2033001 	and	r3, r3, #1
    b340:	e3530000 	cmp	r3, #0
    b344:	13a03001 	movne	r3, #1
    b348:	03a03000 	moveq	r3, #0
    b34c:	e6ef3073 	uxtb	r3, r3
    b350:	e1a02003 	mov	r2, r3
    b354:	e59f00d0 	ldr	r0, [pc, #208]	; b42c <_ZN15CShift_Register8Shift_InEh+0x160>
    b358:	ebfff46b 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:115
        sGPIO.Set_Output(mClock_Pin, true);
    b35c:	e51b3010 	ldr	r3, [fp, #-16]
    b360:	e5933008 	ldr	r3, [r3, #8]
    b364:	e3a02001 	mov	r2, #1
    b368:	e1a01003 	mov	r1, r3
    b36c:	e59f00b8 	ldr	r0, [pc, #184]	; b42c <_ZN15CShift_Register8Shift_InEh+0x160>
    b370:	ebfff465 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117

        for (i = 0; i < 0x10; i++)
    b374:	e3a03000 	mov	r3, #0
    b378:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 3)
    b37c:	e51b300c 	ldr	r3, [fp, #-12]
    b380:	e353000f 	cmp	r3, #15
    b384:	d3a03001 	movle	r3, #1
    b388:	c3a03000 	movgt	r3, #0
    b38c:	e6ef3073 	uxtb	r3, r3
    b390:	e3530000 	cmp	r3, #0
    b394:	0a000003 	beq	b3a8 <_ZN15CShift_Register8Shift_InEh+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 2)
    b398:	e51b300c 	ldr	r3, [fp, #-12]
    b39c:	e2833001 	add	r3, r3, #1
    b3a0:	e50b300c 	str	r3, [fp, #-12]
    b3a4:	eafffff4 	b	b37c <_ZN15CShift_Register8Shift_InEh+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:120
            ;

        sGPIO.Set_Output(mClock_Pin, false);
    b3a8:	e51b3010 	ldr	r3, [fp, #-16]
    b3ac:	e5933008 	ldr	r3, [r3, #8]
    b3b0:	e3a02000 	mov	r2, #0
    b3b4:	e1a01003 	mov	r1, r3
    b3b8:	e59f006c 	ldr	r0, [pc, #108]	; b42c <_ZN15CShift_Register8Shift_InEh+0x160>
    b3bc:	ebfff452 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122

        for (i = 0; i < 0x10; i++)
    b3c0:	e3a03000 	mov	r3, #0
    b3c4:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 3)
    b3c8:	e51b300c 	ldr	r3, [fp, #-12]
    b3cc:	e353000f 	cmp	r3, #15
    b3d0:	d3a03001 	movle	r3, #1
    b3d4:	c3a03000 	movgt	r3, #0
    b3d8:	e6ef3073 	uxtb	r3, r3
    b3dc:	e3530000 	cmp	r3, #0
    b3e0:	0a000003 	beq	b3f4 <_ZN15CShift_Register8Shift_InEh+0x128>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 2)
    b3e4:	e51b300c 	ldr	r3, [fp, #-12]
    b3e8:	e2833001 	add	r3, r3, #1
    b3ec:	e50b300c 	str	r3, [fp, #-12]
    b3f0:	eafffff4 	b	b3c8 <_ZN15CShift_Register8Shift_InEh+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 2)
    for (int j = 7; j >= 0; j--)
    b3f4:	e51b3008 	ldr	r3, [fp, #-8]
    b3f8:	e2433001 	sub	r3, r3, #1
    b3fc:	e50b3008 	str	r3, [fp, #-8]
    b400:	eaffffc5 	b	b31c <_ZN15CShift_Register8Shift_InEh+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:127
            ;
    }

    // propiseme bank na vystup
    sGPIO.Set_Output(mLatch_Pin, true);
    b404:	e51b3010 	ldr	r3, [fp, #-16]
    b408:	e5933000 	ldr	r3, [r3]
    b40c:	e3a02001 	mov	r2, #1
    b410:	e1a01003 	mov	r1, r3
    b414:	e59f0010 	ldr	r0, [pc, #16]	; b42c <_ZN15CShift_Register8Shift_InEh+0x160>
    b418:	ebfff43b 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
    b41c:	ea000000 	b	b424 <_ZN15CShift_Register8Shift_InEh+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:104
        return;
    b420:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b424:	e24bd004 	sub	sp, fp, #4
    b428:	e8bd8800 	pop	{fp, pc}
    b42c:	00010b5c 	andeq	r0, r1, ip, asr fp

0000b430 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b430:	e92d4800 	push	{fp, lr}
    b434:	e28db004 	add	fp, sp, #4
    b438:	e24dd008 	sub	sp, sp, #8
    b43c:	e50b0008 	str	r0, [fp, #-8]
    b440:	e50b100c 	str	r1, [fp, #-12]
    b444:	e51b3008 	ldr	r3, [fp, #-8]
    b448:	e3530001 	cmp	r3, #1
    b44c:	1a000008 	bne	b474 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128 (discriminator 1)
    b450:	e51b300c 	ldr	r3, [fp, #-12]
    b454:	e59f2024 	ldr	r2, [pc, #36]	; b480 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b458:	e1530002 	cmp	r3, r2
    b45c:	1a000004 	bne	b474 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:5
CShift_Register sShift_Register(2, 3, 4);
    b460:	e3a03004 	mov	r3, #4
    b464:	e3a02003 	mov	r2, #3
    b468:	e3a01002 	mov	r1, #2
    b46c:	e59f0010 	ldr	r0, [pc, #16]	; b484 <_Z41__static_initialization_and_destruction_0ii+0x54>
    b470:	ebfffe9a 	bl	aee0 <_ZN15CShift_RegisterC1Ejjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b474:	e320f000 	nop	{0}
    b478:	e24bd004 	sub	sp, fp, #4
    b47c:	e8bd8800 	pop	{fp, pc}
    b480:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b484:	00010bd4 	ldrdeq	r0, [r1], -r4

0000b488 <_GLOBAL__sub_I_sShift_Register>:
_GLOBAL__sub_I_sShift_Register():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b488:	e92d4800 	push	{fp, lr}
    b48c:	e28db004 	add	fp, sp, #4
    b490:	e59f1008 	ldr	r1, [pc, #8]	; b4a0 <_GLOBAL__sub_I_sShift_Register+0x18>
    b494:	e3a00001 	mov	r0, #1
    b498:	ebffffe4 	bl	b430 <_Z41__static_initialization_and_destruction_0ii>
    b49c:	e8bd8800 	pop	{fp, pc}
    b4a0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b4a4 <_ZN6CTimerC1Em>:
_ZN6CTimerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:26
    uint16_t unused_4 : 10;
};

#pragma pack(pop)

CTimer::CTimer(unsigned long timer_reg_base)
    b4a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b4a8:	e28db000 	add	fp, sp, #0
    b4ac:	e24dd00c 	sub	sp, sp, #12
    b4b0:	e50b0008 	str	r0, [fp, #-8]
    b4b4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:27
: mTimer_Regs(reinterpret_cast<unsigned int*>(timer_reg_base))
    b4b8:	e51b200c 	ldr	r2, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:28
, mCallback(nullptr)
    b4bc:	e51b3008 	ldr	r3, [fp, #-8]
    b4c0:	e5832000 	str	r2, [r3]
    b4c4:	e51b3008 	ldr	r3, [fp, #-8]
    b4c8:	e3a02000 	mov	r2, #0
    b4cc:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:31
{
    //
}
    b4d0:	e51b3008 	ldr	r3, [fp, #-8]
    b4d4:	e1a00003 	mov	r0, r3
    b4d8:	e28bd000 	add	sp, fp, #0
    b4dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b4e0:	e12fff1e 	bx	lr

0000b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>:
_ZN6CTimer4RegsEN3hal9Timer_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:34

volatile unsigned int& CTimer::Regs(hal::Timer_Reg reg)
{
    b4e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b4e8:	e28db000 	add	fp, sp, #0
    b4ec:	e24dd00c 	sub	sp, sp, #12
    b4f0:	e50b0008 	str	r0, [fp, #-8]
    b4f4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:35
    return mTimer_Regs[static_cast<unsigned int>(reg)];
    b4f8:	e51b3008 	ldr	r3, [fp, #-8]
    b4fc:	e5932000 	ldr	r2, [r3]
    b500:	e51b300c 	ldr	r3, [fp, #-12]
    b504:	e1a03103 	lsl	r3, r3, #2
    b508:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:36
}
    b50c:	e1a00003 	mov	r0, r3
    b510:	e28bd000 	add	sp, fp, #0
    b514:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b518:	e12fff1e 	bx	lr

0000b51c <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler>:
_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:39

void CTimer::Enable(TTimer_Callback callback, unsigned int delay, NTimer_Prescaler prescaler)
{
    b51c:	e92d4810 	push	{r4, fp, lr}
    b520:	e28db008 	add	fp, sp, #8
    b524:	e24dd01c 	sub	sp, sp, #28
    b528:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    b52c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    b530:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    b534:	e54b3021 	strb	r3, [fp, #-33]	; 0xffffffdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:40
    Regs(hal::Timer_Reg::Load) = delay;
    b538:	e3a01000 	mov	r1, #0
    b53c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b540:	ebffffe7 	bl	b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b544:	e1a02000 	mov	r2, r0
    b548:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    b54c:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:43

    TTimer_Ctl_Flags reg;
    reg.counter_32b = 1;
    b550:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b554:	e3833002 	orr	r3, r3, #2
    b558:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:44
    reg.interrupt_enabled = 1;
    b55c:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b560:	e3833020 	orr	r3, r3, #32
    b564:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:45
    reg.timer_enabled = 1;
    b568:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b56c:	e3833080 	orr	r3, r3, #128	; 0x80
    b570:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:46
    reg.prescaler = static_cast<uint8_t>(prescaler);
    b574:	e55b3021 	ldrb	r3, [fp, #-33]	; 0xffffffdf
    b578:	e2033003 	and	r3, r3, #3
    b57c:	e6ef3073 	uxtb	r3, r3
    b580:	e55b2014 	ldrb	r2, [fp, #-20]	; 0xffffffec
    b584:	e2033003 	and	r3, r3, #3
    b588:	e3c2200c 	bic	r2, r2, #12
    b58c:	e1a03103 	lsl	r3, r3, #2
    b590:	e1833002 	orr	r3, r3, r2
    b594:	e1a02003 	mov	r2, r3
    b598:	e54b2014 	strb	r2, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:48

    Regs(hal::Timer_Reg::Control) = *reinterpret_cast<unsigned int*>(&reg);
    b59c:	e24b4014 	sub	r4, fp, #20
    b5a0:	e3a01002 	mov	r1, #2
    b5a4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b5a8:	ebffffcd 	bl	b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b5ac:	e1a02000 	mov	r2, r0
    b5b0:	e5943000 	ldr	r3, [r4]
    b5b4:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:50

    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b5b8:	e3a01003 	mov	r1, #3
    b5bc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b5c0:	ebffffc7 	bl	b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b5c4:	e1a03000 	mov	r3, r0
    b5c8:	e3a02001 	mov	r2, #1
    b5cc:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:52

    mCallback = callback;
    b5d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    b5d4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    b5d8:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:53
}
    b5dc:	e320f000 	nop	{0}
    b5e0:	e24bd008 	sub	sp, fp, #8
    b5e4:	e8bd8810 	pop	{r4, fp, pc}

0000b5e8 <_ZN6CTimer7DisableEv>:
_ZN6CTimer7DisableEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:56

void CTimer::Disable()
{
    b5e8:	e92d4800 	push	{fp, lr}
    b5ec:	e28db004 	add	fp, sp, #4
    b5f0:	e24dd010 	sub	sp, sp, #16
    b5f4:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:57
    volatile TTimer_Ctl_Flags& reg = reinterpret_cast<volatile TTimer_Ctl_Flags&>(Regs(hal::Timer_Reg::Control));
    b5f8:	e3a01002 	mov	r1, #2
    b5fc:	e51b0010 	ldr	r0, [fp, #-16]
    b600:	ebffffb7 	bl	b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b604:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:59

    reg.interrupt_enabled = 0;
    b608:	e51b2008 	ldr	r2, [fp, #-8]
    b60c:	e5d23000 	ldrb	r3, [r2]
    b610:	e3c33020 	bic	r3, r3, #32
    b614:	e5c23000 	strb	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:60
    reg.timer_enabled = 0;
    b618:	e51b2008 	ldr	r2, [fp, #-8]
    b61c:	e5d23000 	ldrb	r3, [r2]
    b620:	e3c33080 	bic	r3, r3, #128	; 0x80
    b624:	e5c23000 	strb	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:61
}
    b628:	e320f000 	nop	{0}
    b62c:	e24bd004 	sub	sp, fp, #4
    b630:	e8bd8800 	pop	{fp, pc}

0000b634 <_ZN6CTimer12IRQ_CallbackEv>:
_ZN6CTimer12IRQ_CallbackEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:64

void CTimer::IRQ_Callback()
{
    b634:	e92d4800 	push	{fp, lr}
    b638:	e28db004 	add	fp, sp, #4
    b63c:	e24dd008 	sub	sp, sp, #8
    b640:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:65
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b644:	e3a01003 	mov	r1, #3
    b648:	e51b0008 	ldr	r0, [fp, #-8]
    b64c:	ebffffa4 	bl	b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b650:	e1a03000 	mov	r3, r0
    b654:	e3a02001 	mov	r2, #1
    b658:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:67

    if (mCallback)
    b65c:	e51b3008 	ldr	r3, [fp, #-8]
    b660:	e5933004 	ldr	r3, [r3, #4]
    b664:	e3530000 	cmp	r3, #0
    b668:	0a000002 	beq	b678 <_ZN6CTimer12IRQ_CallbackEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:68
        mCallback();
    b66c:	e51b3008 	ldr	r3, [fp, #-8]
    b670:	e5933004 	ldr	r3, [r3, #4]
    b674:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:69
}
    b678:	e320f000 	nop	{0}
    b67c:	e24bd004 	sub	sp, fp, #4
    b680:	e8bd8800 	pop	{fp, pc}

0000b684 <_ZN6CTimer20Is_Timer_IRQ_PendingEv>:
_ZN6CTimer20Is_Timer_IRQ_PendingEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:72

bool CTimer::Is_Timer_IRQ_Pending()
{
    b684:	e92d4800 	push	{fp, lr}
    b688:	e28db004 	add	fp, sp, #4
    b68c:	e24dd008 	sub	sp, sp, #8
    b690:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:73
    return Regs(hal::Timer_Reg::IRQ_Masked);
    b694:	e3a01005 	mov	r1, #5
    b698:	e51b0008 	ldr	r0, [fp, #-8]
    b69c:	ebffff90 	bl	b4e4 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b6a0:	e1a03000 	mov	r3, r0
    b6a4:	e5933000 	ldr	r3, [r3]
    b6a8:	e3530000 	cmp	r3, #0
    b6ac:	13a03001 	movne	r3, #1
    b6b0:	03a03000 	moveq	r3, #0
    b6b4:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b6b8:	e1a00003 	mov	r0, r3
    b6bc:	e24bd004 	sub	sp, fp, #4
    b6c0:	e8bd8800 	pop	{fp, pc}

0000b6c4 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b6c4:	e92d4800 	push	{fp, lr}
    b6c8:	e28db004 	add	fp, sp, #4
    b6cc:	e24dd008 	sub	sp, sp, #8
    b6d0:	e50b0008 	str	r0, [fp, #-8]
    b6d4:	e50b100c 	str	r1, [fp, #-12]
    b6d8:	e51b3008 	ldr	r3, [fp, #-8]
    b6dc:	e3530001 	cmp	r3, #1
    b6e0:	1a000006 	bne	b700 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74 (discriminator 1)
    b6e4:	e51b300c 	ldr	r3, [fp, #-12]
    b6e8:	e59f201c 	ldr	r2, [pc, #28]	; b70c <_Z41__static_initialization_and_destruction_0ii+0x48>
    b6ec:	e1530002 	cmp	r3, r2
    b6f0:	1a000002 	bne	b700 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:4
CTimer sTimer(hal::Timer_Base);
    b6f4:	e59f1014 	ldr	r1, [pc, #20]	; b710 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    b6f8:	e59f0014 	ldr	r0, [pc, #20]	; b714 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b6fc:	ebffff68 	bl	b4a4 <_ZN6CTimerC1Em>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b700:	e320f000 	nop	{0}
    b704:	e24bd004 	sub	sp, fp, #4
    b708:	e8bd8800 	pop	{fp, pc}
    b70c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b710:	2000b400 	andcs	fp, r0, r0, lsl #8
    b714:	00010be4 	andeq	r0, r1, r4, ror #23

0000b718 <_GLOBAL__sub_I_sTimer>:
_GLOBAL__sub_I_sTimer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b718:	e92d4800 	push	{fp, lr}
    b71c:	e28db004 	add	fp, sp, #4
    b720:	e59f1008 	ldr	r1, [pc, #8]	; b730 <_GLOBAL__sub_I_sTimer+0x18>
    b724:	e3a00001 	mov	r0, #1
    b728:	ebffffe5 	bl	b6c4 <_Z41__static_initialization_and_destruction_0ii>
    b72c:	e8bd8800 	pop	{fp, pc}
    b730:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b734 <_ZN5CTRNGC1Ej>:
_ZN5CTRNGC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:8
CTRNG sTRNG(hal::TRNG_Base);

// tolik cisel ze zacatku generovani bude zahozeno - jsou "mene nahodna"
constexpr uint32_t TRNG_Warmup_Count = 0x40000;

CTRNG::CTRNG(uint32_t trng_reg_base)
    b734:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b738:	e28db000 	add	fp, sp, #0
    b73c:	e24dd00c 	sub	sp, sp, #12
    b740:	e50b0008 	str	r0, [fp, #-8]
    b744:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:10
: mTrng_Regs(reinterpret_cast<volatile unsigned int* const>(trng_reg_base))
, mOpened(0)
    b748:	e51b200c 	ldr	r2, [fp, #-12]
    b74c:	e51b3008 	ldr	r3, [fp, #-8]
    b750:	e5832000 	str	r2, [r3]
    b754:	e51b3008 	ldr	r3, [fp, #-8]
    b758:	e3a02000 	mov	r2, #0
    b75c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:13
{
    //
}
    b760:	e51b3008 	ldr	r3, [fp, #-8]
    b764:	e1a00003 	mov	r0, r3
    b768:	e28bd000 	add	sp, fp, #0
    b76c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b770:	e12fff1e 	bx	lr

0000b774 <_ZN5CTRNG4OpenEb>:
_ZN5CTRNG4OpenEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:16

bool CTRNG::Open(bool exclusive)
{
    b774:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b778:	e28db000 	add	fp, sp, #0
    b77c:	e24dd00c 	sub	sp, sp, #12
    b780:	e50b0008 	str	r0, [fp, #-8]
    b784:	e1a03001 	mov	r3, r1
    b788:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19
    // TODO: zamek

    if (mOpened && exclusive)
    b78c:	e51b3008 	ldr	r3, [fp, #-8]
    b790:	e5933004 	ldr	r3, [r3, #4]
    b794:	e3530000 	cmp	r3, #0
    b798:	0a000004 	beq	b7b0 <_ZN5CTRNG4OpenEb+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19 (discriminator 1)
    b79c:	e55b3009 	ldrb	r3, [fp, #-9]
    b7a0:	e3530000 	cmp	r3, #0
    b7a4:	0a000001 	beq	b7b0 <_ZN5CTRNG4OpenEb+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:20
        return false;
    b7a8:	e3a03000 	mov	r3, #0
    b7ac:	ea000026 	b	b84c <_ZN5CTRNG4OpenEb+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:22

    mOpened++;
    b7b0:	e51b3008 	ldr	r3, [fp, #-8]
    b7b4:	e5933004 	ldr	r3, [r3, #4]
    b7b8:	e2832001 	add	r2, r3, #1
    b7bc:	e51b3008 	ldr	r3, [fp, #-8]
    b7c0:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:24

    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] = TRNG_Warmup_Count;
    b7c4:	e51b3008 	ldr	r3, [fp, #-8]
    b7c8:	e5933000 	ldr	r3, [r3]
    b7cc:	e2833004 	add	r3, r3, #4
    b7d0:	e3a02701 	mov	r2, #262144	; 0x40000
    b7d4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:25
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Int_Mask)] |=
    b7d8:	e51b3008 	ldr	r3, [fp, #-8]
    b7dc:	e5933000 	ldr	r3, [r3]
    b7e0:	e2833010 	add	r3, r3, #16
    b7e4:	e5932000 	ldr	r2, [r3]
    b7e8:	e51b3008 	ldr	r3, [fp, #-8]
    b7ec:	e5933000 	ldr	r3, [r3]
    b7f0:	e2833010 	add	r3, r3, #16
    b7f4:	e3822001 	orr	r2, r2, #1
    b7f8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:27
    1; // vypneme preruseni pro TRNG (tak ho pouzivat nechceme)
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] |= 1; // zapneme TRNG
    b7fc:	e51b3008 	ldr	r3, [fp, #-8]
    b800:	e5933000 	ldr	r3, [r3]
    b804:	e5932000 	ldr	r2, [r3]
    b808:	e51b3008 	ldr	r3, [fp, #-8]
    b80c:	e5933000 	ldr	r3, [r3]
    b810:	e3822001 	orr	r2, r2, #1
    b814:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:30

    // pockame, dokud TRNG nenageneruje warmup cisla (ty co zahazujeme)
    while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    b818:	e51b3008 	ldr	r3, [fp, #-8]
    b81c:	e5933000 	ldr	r3, [r3]
    b820:	e2833004 	add	r3, r3, #4
    b824:	e5933000 	ldr	r3, [r3]
    b828:	e1a03c23 	lsr	r3, r3, #24
    b82c:	e3530000 	cmp	r3, #0
    b830:	03a03001 	moveq	r3, #1
    b834:	13a03000 	movne	r3, #0
    b838:	e6ef3073 	uxtb	r3, r3
    b83c:	e3530000 	cmp	r3, #0
    b840:	0a000000 	beq	b848 <_ZN5CTRNG4OpenEb+0xd4>
    b844:	eafffff3 	b	b818 <_ZN5CTRNG4OpenEb+0xa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:33
        ;

    return true;
    b848:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:34
}
    b84c:	e1a00003 	mov	r0, r3
    b850:	e28bd000 	add	sp, fp, #0
    b854:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b858:	e12fff1e 	bx	lr

0000b85c <_ZN5CTRNG5CloseEv>:
_ZN5CTRNG5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:37

void CTRNG::Close()
{
    b85c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b860:	e28db000 	add	fp, sp, #0
    b864:	e24dd00c 	sub	sp, sp, #12
    b868:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:38
    if (!mOpened)
    b86c:	e51b3008 	ldr	r3, [fp, #-8]
    b870:	e5933004 	ldr	r3, [r3, #4]
    b874:	e3530000 	cmp	r3, #0
    b878:	0a00000d 	beq	b8b4 <_ZN5CTRNG5CloseEv+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:41
        return;

    mOpened--;
    b87c:	e51b3008 	ldr	r3, [fp, #-8]
    b880:	e5933004 	ldr	r3, [r3, #4]
    b884:	e2432001 	sub	r2, r3, #1
    b888:	e51b3008 	ldr	r3, [fp, #-8]
    b88c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:43

    if (mOpened == 0)
    b890:	e51b3008 	ldr	r3, [fp, #-8]
    b894:	e5933004 	ldr	r3, [r3, #4]
    b898:	e3530000 	cmp	r3, #0
    b89c:	1a000005 	bne	b8b8 <_ZN5CTRNG5CloseEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:44
        mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] = 0;
    b8a0:	e51b3008 	ldr	r3, [fp, #-8]
    b8a4:	e5933000 	ldr	r3, [r3]
    b8a8:	e3a02000 	mov	r2, #0
    b8ac:	e5832000 	str	r2, [r3]
    b8b0:	ea000000 	b	b8b8 <_ZN5CTRNG5CloseEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:39
        return;
    b8b4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:45
}
    b8b8:	e28bd000 	add	sp, fp, #0
    b8bc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b8c0:	e12fff1e 	bx	lr

0000b8c4 <_ZNK5CTRNG9Is_OpenedEv>:
_ZNK5CTRNG9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:48

bool CTRNG::Is_Opened() const
{
    b8c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b8c8:	e28db000 	add	fp, sp, #0
    b8cc:	e24dd00c 	sub	sp, sp, #12
    b8d0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:49
    return (mOpened > 0);
    b8d4:	e51b3008 	ldr	r3, [fp, #-8]
    b8d8:	e5933004 	ldr	r3, [r3, #4]
    b8dc:	e3530000 	cmp	r3, #0
    b8e0:	13a03001 	movne	r3, #1
    b8e4:	03a03000 	moveq	r3, #0
    b8e8:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:50
}
    b8ec:	e1a00003 	mov	r0, r3
    b8f0:	e28bd000 	add	sp, fp, #0
    b8f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b8f8:	e12fff1e 	bx	lr

0000b8fc <_ZN5CTRNG17Get_Random_NumberEv>:
_ZN5CTRNG17Get_Random_NumberEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:53

uint32_t CTRNG::Get_Random_Number()
{
    b8fc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b900:	e28db000 	add	fp, sp, #0
    b904:	e24dd00c 	sub	sp, sp, #12
    b908:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:54
    if (mOpened == 0)
    b90c:	e51b3008 	ldr	r3, [fp, #-8]
    b910:	e5933004 	ldr	r3, [r3, #4]
    b914:	e3530000 	cmp	r3, #0
    b918:	1a000001 	bne	b924 <_ZN5CTRNG17Get_Random_NumberEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:55
        return 4; // https://xkcd.com/221/
    b91c:	e3a03004 	mov	r3, #4
    b920:	ea000003 	b	b934 <_ZN5CTRNG17Get_Random_NumberEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:61

    // az budeme umet blokovat procesy, tak tady by melo byt opet cekani na entropii:
    // while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    //    ;

    return mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Data)];
    b924:	e51b3008 	ldr	r3, [fp, #-8]
    b928:	e5933000 	ldr	r3, [r3]
    b92c:	e2833008 	add	r3, r3, #8
    b930:	e5933000 	ldr	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b934:	e1a00003 	mov	r0, r3
    b938:	e28bd000 	add	sp, fp, #0
    b93c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b940:	e12fff1e 	bx	lr

0000b944 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b944:	e92d4800 	push	{fp, lr}
    b948:	e28db004 	add	fp, sp, #4
    b94c:	e24dd008 	sub	sp, sp, #8
    b950:	e50b0008 	str	r0, [fp, #-8]
    b954:	e50b100c 	str	r1, [fp, #-12]
    b958:	e51b3008 	ldr	r3, [fp, #-8]
    b95c:	e3530001 	cmp	r3, #1
    b960:	1a000006 	bne	b980 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62 (discriminator 1)
    b964:	e51b300c 	ldr	r3, [fp, #-12]
    b968:	e59f201c 	ldr	r2, [pc, #28]	; b98c <_Z41__static_initialization_and_destruction_0ii+0x48>
    b96c:	e1530002 	cmp	r3, r2
    b970:	1a000002 	bne	b980 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:3
CTRNG sTRNG(hal::TRNG_Base);
    b974:	e59f1014 	ldr	r1, [pc, #20]	; b990 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    b978:	e59f0014 	ldr	r0, [pc, #20]	; b994 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b97c:	ebffff6c 	bl	b734 <_ZN5CTRNGC1Ej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b980:	e320f000 	nop	{0}
    b984:	e24bd004 	sub	sp, fp, #4
    b988:	e8bd8800 	pop	{fp, pc}
    b98c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b990:	20104000 	andscs	r4, r0, r0
    b994:	00010bec 	andeq	r0, r1, ip, ror #23

0000b998 <_GLOBAL__sub_I_sTRNG>:
_GLOBAL__sub_I_sTRNG():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b998:	e92d4800 	push	{fp, lr}
    b99c:	e28db004 	add	fp, sp, #4
    b9a0:	e59f1008 	ldr	r1, [pc, #8]	; b9b0 <_GLOBAL__sub_I_sTRNG+0x18>
    b9a4:	e3a00001 	mov	r0, #1
    b9a8:	ebffffe5 	bl	b944 <_Z41__static_initialization_and_destruction_0ii>
    b9ac:	e8bd8800 	pop	{fp, pc}
    b9b0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b9b4 <_ZN11CFilesystemC1Ev>:
_ZN11CFilesystemC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:10

#include <stdstring.h>

CFilesystem sFilesystem;

CFilesystem::CFilesystem()
    b9b4:	e92d4800 	push	{fp, lr}
    b9b8:	e28db004 	add	fp, sp, #4
    b9bc:	e24dd008 	sub	sp, sp, #8
    b9c0:	e50b0008 	str	r0, [fp, #-8]
    b9c4:	e51b3008 	ldr	r3, [fp, #-8]
    b9c8:	e1a00003 	mov	r0, r3
    b9cc:	eb00020f 	bl	c210 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    b9d0:	e51b3008 	ldr	r3, [fp, #-8]
    b9d4:	e2833024 	add	r3, r3, #36	; 0x24
    b9d8:	e1a00003 	mov	r0, r3
    b9dc:	eb00020b 	bl	c210 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    b9e0:	e51b3008 	ldr	r3, [fp, #-8]
    b9e4:	e2833048 	add	r3, r3, #72	; 0x48
    b9e8:	e1a00003 	mov	r0, r3
    b9ec:	eb000207 	bl	c210 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    b9f0:	e51b3008 	ldr	r3, [fp, #-8]
    b9f4:	e283306c 	add	r3, r3, #108	; 0x6c
    b9f8:	e1a00003 	mov	r0, r3
    b9fc:	eb000203 	bl	c210 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:14
{
    // inicializujeme zakladni strukturu (tedy vlastne obsah root adresare)

    mRoot.parent = nullptr;
    ba00:	e51b3008 	ldr	r3, [fp, #-8]
    ba04:	e3a02000 	mov	r2, #0
    ba08:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:15
    mRoot.next = nullptr;
    ba0c:	e51b3008 	ldr	r3, [fp, #-8]
    ba10:	e3a02000 	mov	r2, #0
    ba14:	e5832020 	str	r2, [r3, #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:16
    mRoot.children = &mRoot_Dev;
    ba18:	e51b3008 	ldr	r3, [fp, #-8]
    ba1c:	e2832024 	add	r2, r3, #36	; 0x24
    ba20:	e51b3008 	ldr	r3, [fp, #-8]
    ba24:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:17
    mRoot.isDirectory = true;
    ba28:	e51b3008 	ldr	r3, [fp, #-8]
    ba2c:	e3a02001 	mov	r2, #1
    ba30:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:18
    mRoot.driver_idx = NoFilesystemDriver;
    ba34:	e51b3008 	ldr	r3, [fp, #-8]
    ba38:	e3e02000 	mvn	r2, #0
    ba3c:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:19
    mRoot.name[0] = '\0';
    ba40:	e51b3008 	ldr	r3, [fp, #-8]
    ba44:	e3a02000 	mov	r2, #0
    ba48:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:21

    mRoot_Dev.parent = &mRoot;
    ba4c:	e51b2008 	ldr	r2, [fp, #-8]
    ba50:	e51b3008 	ldr	r3, [fp, #-8]
    ba54:	e583203c 	str	r2, [r3, #60]	; 0x3c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:22
    mRoot_Dev.children = nullptr;
    ba58:	e51b3008 	ldr	r3, [fp, #-8]
    ba5c:	e3a02000 	mov	r2, #0
    ba60:	e5832040 	str	r2, [r3, #64]	; 0x40
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:23
    mRoot_Dev.next = &mRoot_Sys;
    ba64:	e51b3008 	ldr	r3, [fp, #-8]
    ba68:	e2832048 	add	r2, r3, #72	; 0x48
    ba6c:	e51b3008 	ldr	r3, [fp, #-8]
    ba70:	e5832044 	str	r2, [r3, #68]	; 0x44
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:24
    mRoot_Dev.isDirectory = true;
    ba74:	e51b3008 	ldr	r3, [fp, #-8]
    ba78:	e3a02001 	mov	r2, #1
    ba7c:	e5c32034 	strb	r2, [r3, #52]	; 0x34
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:25
    mRoot_Dev.driver_idx = NoFilesystemDriver;
    ba80:	e51b3008 	ldr	r3, [fp, #-8]
    ba84:	e3e02000 	mvn	r2, #0
    ba88:	e5832038 	str	r2, [r3, #56]	; 0x38
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:26
    strncpy(mRoot_Dev.name, "DEV", 4);
    ba8c:	e51b3008 	ldr	r3, [fp, #-8]
    ba90:	e2833024 	add	r3, r3, #36	; 0x24
    ba94:	e3a02004 	mov	r2, #4
    ba98:	e59f10c0 	ldr	r1, [pc, #192]	; bb60 <_ZN11CFilesystemC1Ev+0x1ac>
    ba9c:	e1a00003 	mov	r0, r3
    baa0:	eb000eea 	bl	f650 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:28

    mRoot_Sys.parent = &mRoot;
    baa4:	e51b2008 	ldr	r2, [fp, #-8]
    baa8:	e51b3008 	ldr	r3, [fp, #-8]
    baac:	e5832060 	str	r2, [r3, #96]	; 0x60
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:29
    mRoot_Sys.children = nullptr;
    bab0:	e51b3008 	ldr	r3, [fp, #-8]
    bab4:	e3a02000 	mov	r2, #0
    bab8:	e5832064 	str	r2, [r3, #100]	; 0x64
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:30
    mRoot_Sys.next = &mRoot_Mnt;
    babc:	e51b3008 	ldr	r3, [fp, #-8]
    bac0:	e283206c 	add	r2, r3, #108	; 0x6c
    bac4:	e51b3008 	ldr	r3, [fp, #-8]
    bac8:	e5832068 	str	r2, [r3, #104]	; 0x68
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:31
    mRoot_Sys.isDirectory = true;
    bacc:	e51b3008 	ldr	r3, [fp, #-8]
    bad0:	e3a02001 	mov	r2, #1
    bad4:	e5c32058 	strb	r2, [r3, #88]	; 0x58
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:32
    mRoot_Sys.driver_idx = NoFilesystemDriver;
    bad8:	e51b3008 	ldr	r3, [fp, #-8]
    badc:	e3e02000 	mvn	r2, #0
    bae0:	e583205c 	str	r2, [r3, #92]	; 0x5c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:33
    strncpy(mRoot_Sys.name, "SYS", 4);
    bae4:	e51b3008 	ldr	r3, [fp, #-8]
    bae8:	e2833048 	add	r3, r3, #72	; 0x48
    baec:	e3a02004 	mov	r2, #4
    baf0:	e59f106c 	ldr	r1, [pc, #108]	; bb64 <_ZN11CFilesystemC1Ev+0x1b0>
    baf4:	e1a00003 	mov	r0, r3
    baf8:	eb000ed4 	bl	f650 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:35

    mRoot_Mnt.parent = &mRoot;
    bafc:	e51b2008 	ldr	r2, [fp, #-8]
    bb00:	e51b3008 	ldr	r3, [fp, #-8]
    bb04:	e5832084 	str	r2, [r3, #132]	; 0x84
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:36
    mRoot_Mnt.children = nullptr;
    bb08:	e51b3008 	ldr	r3, [fp, #-8]
    bb0c:	e3a02000 	mov	r2, #0
    bb10:	e5832088 	str	r2, [r3, #136]	; 0x88
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:37
    mRoot_Mnt.next = nullptr;
    bb14:	e51b3008 	ldr	r3, [fp, #-8]
    bb18:	e3a02000 	mov	r2, #0
    bb1c:	e583208c 	str	r2, [r3, #140]	; 0x8c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:38
    mRoot_Mnt.isDirectory = true;
    bb20:	e51b3008 	ldr	r3, [fp, #-8]
    bb24:	e3a02001 	mov	r2, #1
    bb28:	e5c3207c 	strb	r2, [r3, #124]	; 0x7c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:39
    mRoot_Mnt.driver_idx = NoFilesystemDriver;
    bb2c:	e51b3008 	ldr	r3, [fp, #-8]
    bb30:	e3e02000 	mvn	r2, #0
    bb34:	e5832080 	str	r2, [r3, #128]	; 0x80
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:40
    strncpy(mRoot_Mnt.name, "MNT", 4);
    bb38:	e51b3008 	ldr	r3, [fp, #-8]
    bb3c:	e283306c 	add	r3, r3, #108	; 0x6c
    bb40:	e3a02004 	mov	r2, #4
    bb44:	e59f101c 	ldr	r1, [pc, #28]	; bb68 <_ZN11CFilesystemC1Ev+0x1b4>
    bb48:	e1a00003 	mov	r0, r3
    bb4c:	eb000ebf 	bl	f650 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:41
}
    bb50:	e51b3008 	ldr	r3, [fp, #-8]
    bb54:	e1a00003 	mov	r0, r3
    bb58:	e24bd004 	sub	sp, fp, #4
    bb5c:	e8bd8800 	pop	{fp, pc}
    bb60:	0001019c 	muleq	r1, ip, r1
    bb64:	000101a0 	andeq	r0, r1, r0, lsr #3
    bb68:	000101a4 	andeq	r0, r1, r4, lsr #3

0000bb6c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>:
_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:44

CFilesystem::TFS_Tree_Node* CFilesystem::TFS_Tree_Node::Find_Child(const char* name)
{
    bb6c:	e92d4800 	push	{fp, lr}
    bb70:	e28db004 	add	fp, sp, #4
    bb74:	e24dd010 	sub	sp, sp, #16
    bb78:	e50b0010 	str	r0, [fp, #-16]
    bb7c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:45
    TFS_Tree_Node* child = children;
    bb80:	e51b3010 	ldr	r3, [fp, #-16]
    bb84:	e593301c 	ldr	r3, [r3, #28]
    bb88:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47

    while (child != nullptr)
    bb8c:	e51b3008 	ldr	r3, [fp, #-8]
    bb90:	e3530000 	cmp	r3, #0
    bb94:	0a000011 	beq	bbe0 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:49
    {
        if (strncmp(child->name, name, MaxFilenameLength) == 0)
    bb98:	e51b3008 	ldr	r3, [fp, #-8]
    bb9c:	e3a02010 	mov	r2, #16
    bba0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    bba4:	e1a00003 	mov	r0, r3
    bba8:	eb000ed8 	bl	f710 <_Z7strncmpPKcS0_i>
    bbac:	e1a03000 	mov	r3, r0
    bbb0:	e3530000 	cmp	r3, #0
    bbb4:	03a03001 	moveq	r3, #1
    bbb8:	13a03000 	movne	r3, #0
    bbbc:	e6ef3073 	uxtb	r3, r3
    bbc0:	e3530000 	cmp	r3, #0
    bbc4:	0a000001 	beq	bbd0 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:50
            return child;
    bbc8:	e51b3008 	ldr	r3, [fp, #-8]
    bbcc:	ea000004 	b	bbe4 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:52

        child = child->next;
    bbd0:	e51b3008 	ldr	r3, [fp, #-8]
    bbd4:	e5933020 	ldr	r3, [r3, #32]
    bbd8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bbdc:	eaffffea 	b	bb8c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:55
    }

    return nullptr;
    bbe0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:56
}
    bbe4:	e1a00003 	mov	r0, r3
    bbe8:	e24bd004 	sub	sp, fp, #4
    bbec:	e8bd8800 	pop	{fp, pc}

0000bbf0 <_ZN11CFilesystem10InitializeEv>:
_ZN11CFilesystem10InitializeEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:59

void CFilesystem::Initialize()
{
    bbf0:	e92d4800 	push	{fp, lr}
    bbf4:	e28db004 	add	fp, sp, #4
    bbf8:	e24dd030 	sub	sp, sp, #48	; 0x30
    bbfc:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:60
    sMonitor << "Initializing the FS\n";
    bc00:	e59f1310 	ldr	r1, [pc, #784]	; bf18 <_ZN11CFilesystem10InitializeEv+0x328>
    bc04:	e59f0310 	ldr	r0, [pc, #784]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    bc08:	ebfff60f 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67
    char tmpName[MaxFilenameLength];
    const char* mpPtr;

    int i, j;

    for (i = 0; i < gFS_Drivers_Count; i++)
    bc0c:	e3a03000 	mov	r3, #0
    bc10:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 1)
    bc14:	e51b200c 	ldr	r2, [fp, #-12]
    bc18:	e59f3300 	ldr	r3, [pc, #768]	; bf20 <_ZN11CFilesystem10InitializeEv+0x330>
    bc1c:	e5933000 	ldr	r3, [r3]
    bc20:	e1520003 	cmp	r2, r3
    bc24:	2a0000b4 	bcs	befc <_ZN11CFilesystem10InitializeEv+0x30c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:69
    {
        const TFS_Driver* ptr = &gFS_Drivers[i];
    bc28:	e51b200c 	ldr	r2, [fp, #-12]
    bc2c:	e1a03002 	mov	r3, r2
    bc30:	e1a03083 	lsl	r3, r3, #1
    bc34:	e0833002 	add	r3, r3, r2
    bc38:	e1a03183 	lsl	r3, r3, #3
    bc3c:	e59f22e0 	ldr	r2, [pc, #736]	; bf24 <_ZN11CFilesystem10InitializeEv+0x334>
    bc40:	e0833002 	add	r3, r3, r2
    bc44:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:71

        mpPtr = ptr->mountPoint;
    bc48:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bc4c:	e5933010 	ldr	r3, [r3, #16]
    bc50:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:73

        sMonitor << "mount point = " << mpPtr << "\n";
    bc54:	e59f12cc 	ldr	r1, [pc, #716]	; bf28 <_ZN11CFilesystem10InitializeEv+0x338>
    bc58:	e59f02bc 	ldr	r0, [pc, #700]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    bc5c:	ebfff5fa 	bl	944c <_ZN8CMonitorlsEPKc>
    bc60:	e1a03000 	mov	r3, r0
    bc64:	e51b1008 	ldr	r1, [fp, #-8]
    bc68:	e1a00003 	mov	r0, r3
    bc6c:	ebfff5f6 	bl	944c <_ZN8CMonitorlsEPKc>
    bc70:	e1a03000 	mov	r3, r0
    bc74:	e59f12b0 	ldr	r1, [pc, #688]	; bf2c <_ZN11CFilesystem10InitializeEv+0x33c>
    bc78:	e1a00003 	mov	r0, r3
    bc7c:	ebfff5f2 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:75

        TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bc80:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    bc84:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    bc88:	e3a03000 	mov	r3, #0
    bc8c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77

        while (mpPtr[0] != '\0')
    bc90:	e51b3008 	ldr	r3, [fp, #-8]
    bc94:	e5d33000 	ldrb	r3, [r3]
    bc98:	e3530000 	cmp	r3, #0
    bc9c:	0a000083 	beq	beb0 <_ZN11CFilesystem10InitializeEv+0x2c0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79
        {
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bca0:	e3a03000 	mov	r3, #0
    bca4:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 1)
    bca8:	e51b3010 	ldr	r3, [fp, #-16]
    bcac:	e353007f 	cmp	r3, #127	; 0x7f
    bcb0:	8a00001e 	bhi	bd30 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 2)
    bcb4:	e51b3010 	ldr	r3, [fp, #-16]
    bcb8:	e51b2008 	ldr	r2, [fp, #-8]
    bcbc:	e0823003 	add	r3, r2, r3
    bcc0:	e5d33000 	ldrb	r3, [r3]
    bcc4:	e3530000 	cmp	r3, #0
    bcc8:	0a000018 	beq	bd30 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81
            {
                if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bccc:	e51b3010 	ldr	r3, [fp, #-16]
    bcd0:	e51b2008 	ldr	r2, [fp, #-8]
    bcd4:	e0823003 	add	r3, r2, r3
    bcd8:	e5d33000 	ldrb	r3, [r3]
    bcdc:	e353003a 	cmp	r3, #58	; 0x3a
    bce0:	0a000012 	beq	bd30 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81 (discriminator 1)
    bce4:	e51b3010 	ldr	r3, [fp, #-16]
    bce8:	e51b2008 	ldr	r2, [fp, #-8]
    bcec:	e0823003 	add	r3, r2, r3
    bcf0:	e5d33000 	ldrb	r3, [r3]
    bcf4:	e353002f 	cmp	r3, #47	; 0x2f
    bcf8:	0a00000c 	beq	bd30 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:84 (discriminator 3)
                    break;

                tmpName[j] = mpPtr[j];
    bcfc:	e51b3010 	ldr	r3, [fp, #-16]
    bd00:	e51b2008 	ldr	r2, [fp, #-8]
    bd04:	e0823003 	add	r3, r2, r3
    bd08:	e5d31000 	ldrb	r1, [r3]
    bd0c:	e24b202c 	sub	r2, fp, #44	; 0x2c
    bd10:	e51b3010 	ldr	r3, [fp, #-16]
    bd14:	e0823003 	add	r3, r2, r3
    bd18:	e1a02001 	mov	r2, r1
    bd1c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 3)
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bd20:	e51b3010 	ldr	r3, [fp, #-16]
    bd24:	e2833001 	add	r3, r3, #1
    bd28:	e50b3010 	str	r3, [fp, #-16]
    bd2c:	eaffffdd 	b	bca8 <_ZN11CFilesystem10InitializeEv+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:87
            }

            tmpName[j] = '\0';
    bd30:	e24b202c 	sub	r2, fp, #44	; 0x2c
    bd34:	e51b3010 	ldr	r3, [fp, #-16]
    bd38:	e0823003 	add	r3, r2, r3
    bd3c:	e3a02000 	mov	r2, #0
    bd40:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:89

            mpPtr += j;
    bd44:	e51b3010 	ldr	r3, [fp, #-16]
    bd48:	e51b2008 	ldr	r2, [fp, #-8]
    bd4c:	e0823003 	add	r3, r2, r3
    bd50:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:90
            if (mpPtr[0] != '\0')
    bd54:	e51b3008 	ldr	r3, [fp, #-8]
    bd58:	e5d33000 	ldrb	r3, [r3]
    bd5c:	e3530000 	cmp	r3, #0
    bd60:	0a000002 	beq	bd70 <_ZN11CFilesystem10InitializeEv+0x180>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:92
            {
                mpPtr += 1;
    bd64:	e51b3008 	ldr	r3, [fp, #-8]
    bd68:	e2833001 	add	r3, r3, #1
    bd6c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:95
            }

            sMonitor << "finding child = " << tmpName << '\n';
    bd70:	e59f11b8 	ldr	r1, [pc, #440]	; bf30 <_ZN11CFilesystem10InitializeEv+0x340>
    bd74:	e59f01a0 	ldr	r0, [pc, #416]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    bd78:	ebfff5b3 	bl	944c <_ZN8CMonitorlsEPKc>
    bd7c:	e1a02000 	mov	r2, r0
    bd80:	e24b302c 	sub	r3, fp, #44	; 0x2c
    bd84:	e1a01003 	mov	r1, r3
    bd88:	e1a00002 	mov	r0, r2
    bd8c:	ebfff5ae 	bl	944c <_ZN8CMonitorlsEPKc>
    bd90:	e1a03000 	mov	r3, r0
    bd94:	e3a0100a 	mov	r1, #10
    bd98:	e1a00003 	mov	r0, r3
    bd9c:	ebfff580 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:97

            tmpNode = node->Find_Child(tmpName);
    bda0:	e24b302c 	sub	r3, fp, #44	; 0x2c
    bda4:	e1a01003 	mov	r1, r3
    bda8:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    bdac:	ebffff6e 	bl	bb6c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>
    bdb0:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:99
            // uzel jsme nasli - pouzijeme ho pro dalsi prohledavani
            if (tmpNode)
    bdb4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bdb8:	e3530000 	cmp	r3, #0
    bdbc:	0a00000e 	beq	bdfc <_ZN11CFilesystem10InitializeEv+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:101
            {
                node = tmpNode;
    bdc0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bdc4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:102
                sMonitor << "child " << tmpName << " was found\n";
    bdc8:	e59f1164 	ldr	r1, [pc, #356]	; bf34 <_ZN11CFilesystem10InitializeEv+0x344>
    bdcc:	e59f0148 	ldr	r0, [pc, #328]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    bdd0:	ebfff59d 	bl	944c <_ZN8CMonitorlsEPKc>
    bdd4:	e1a02000 	mov	r2, r0
    bdd8:	e24b302c 	sub	r3, fp, #44	; 0x2c
    bddc:	e1a01003 	mov	r1, r3
    bde0:	e1a00002 	mov	r0, r2
    bde4:	ebfff598 	bl	944c <_ZN8CMonitorlsEPKc>
    bde8:	e1a03000 	mov	r3, r0
    bdec:	e59f1144 	ldr	r1, [pc, #324]	; bf38 <_ZN11CFilesystem10InitializeEv+0x348>
    bdf0:	e1a00003 	mov	r0, r3
    bdf4:	ebfff594 	bl	944c <_ZN8CMonitorlsEPKc>
    bdf8:	eaffffa4 	b	bc90 <_ZN11CFilesystem10InitializeEv+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:107
            }
            // uzel jsme nenasli - vytvorime ho a pouzijeme ho pro dalsi prohledavani
            else
            {
                tmpNode = sKernelMem.Alloc<TFS_Tree_Node>();
    bdfc:	e59f0138 	ldr	r0, [pc, #312]	; bf3c <_ZN11CFilesystem10InitializeEv+0x34c>
    be00:	eb000111 	bl	c24c <_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v>
    be04:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:108
                strncpy(tmpNode->name, tmpName, MaxFilenameLength);
    be08:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be0c:	e24b102c 	sub	r1, fp, #44	; 0x2c
    be10:	e3a02010 	mov	r2, #16
    be14:	e1a00003 	mov	r0, r3
    be18:	eb000e0c 	bl	f650 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:109
                tmpNode->parent = node;
    be1c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be20:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    be24:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:110
                tmpNode->children = nullptr;
    be28:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be2c:	e3a02000 	mov	r2, #0
    be30:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:111
                tmpNode->driver_idx = NoFilesystemDriver; // zatim - mozna se neco dole zmeni
    be34:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be38:	e3e02000 	mvn	r2, #0
    be3c:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:112
                tmpNode->isDirectory = true;
    be40:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be44:	e3a02001 	mov	r2, #1
    be48:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:113
                tmpNode->next = node->children;
    be4c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    be50:	e593201c 	ldr	r2, [r3, #28]
    be54:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be58:	e5832020 	str	r2, [r3, #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:114
                node->children = tmpNode;
    be5c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    be60:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    be64:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:116

                node = tmpNode;
    be68:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be6c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:118

                sMonitor << "child was not found\n";
    be70:	e59f10c8 	ldr	r1, [pc, #200]	; bf40 <_ZN11CFilesystem10InitializeEv+0x350>
    be74:	e59f00a0 	ldr	r0, [pc, #160]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    be78:	ebfff573 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:119
                sMonitor << "creating: " << node->name << "\n";
    be7c:	e59f10c0 	ldr	r1, [pc, #192]	; bf44 <_ZN11CFilesystem10InitializeEv+0x354>
    be80:	e59f0094 	ldr	r0, [pc, #148]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    be84:	ebfff570 	bl	944c <_ZN8CMonitorlsEPKc>
    be88:	e1a02000 	mov	r2, r0
    be8c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    be90:	e1a01003 	mov	r1, r3
    be94:	e1a00002 	mov	r0, r2
    be98:	ebfff56b 	bl	944c <_ZN8CMonitorlsEPKc>
    be9c:	e1a03000 	mov	r3, r0
    bea0:	e59f1084 	ldr	r1, [pc, #132]	; bf2c <_ZN11CFilesystem10InitializeEv+0x33c>
    bea4:	e1a00003 	mov	r0, r3
    bea8:	ebfff567 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    beac:	eaffff77 	b	bc90 <_ZN11CFilesystem10InitializeEv+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:126
        }

        // 'node' obsahuje uzel posledniho clanku mountpointu - tedy vlastni mountpoint

        // mountpoint nesmi byt uz zabrany
        if (node->driver_idx != NoFilesystemDriver)
    beb0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    beb4:	e5933014 	ldr	r3, [r3, #20]
    beb8:	e3730001 	cmn	r3, #1
    bebc:	1a000012 	bne	bf0c <_ZN11CFilesystem10InitializeEv+0x31c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:129 (discriminator 2)
            return;

        node->driver_idx = i; // timto predavame veskere manipulace driveru
    bec0:	e51b200c 	ldr	r2, [fp, #-12]
    bec4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    bec8:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:132 (discriminator 2)

        // dame driveru vedet, ze jsme ho zaregistrovali
        ptr->driver->On_Register();
    becc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bed0:	e5932014 	ldr	r2, [r3, #20]
    bed4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bed8:	e5933014 	ldr	r3, [r3, #20]
    bedc:	e5933000 	ldr	r3, [r3]
    bee0:	e5933000 	ldr	r3, [r3]
    bee4:	e1a00002 	mov	r0, r2
    bee8:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 2)
    for (i = 0; i < gFS_Drivers_Count; i++)
    beec:	e51b300c 	ldr	r3, [fp, #-12]
    bef0:	e2833001 	add	r3, r3, #1
    bef4:	e50b300c 	str	r3, [fp, #-12]
    bef8:	eaffff45 	b	bc14 <_ZN11CFilesystem10InitializeEv+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:135
    }

    sMonitor << "Finished FS initialization\n\n";
    befc:	e59f1044 	ldr	r1, [pc, #68]	; bf48 <_ZN11CFilesystem10InitializeEv+0x358>
    bf00:	e59f0014 	ldr	r0, [pc, #20]	; bf1c <_ZN11CFilesystem10InitializeEv+0x32c>
    bf04:	ebfff550 	bl	944c <_ZN8CMonitorlsEPKc>
    bf08:	ea000000 	b	bf10 <_ZN11CFilesystem10InitializeEv+0x320>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:127
            return;
    bf0c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:136
}
    bf10:	e24bd004 	sub	sp, fp, #4
    bf14:	e8bd8800 	pop	{fp, pc}
    bf18:	000101a8 	andeq	r0, r1, r8, lsr #3
    bf1c:	00010b94 	muleq	r1, r4, fp
    bf20:	0001037c 	andeq	r0, r1, ip, ror r3
    bf24:	000102ec 	andeq	r0, r1, ip, ror #5
    bf28:	000101c0 	andeq	r0, r1, r0, asr #3
    bf2c:	000101d0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    bf30:	000101d4 	ldrdeq	r0, [r1], -r4
    bf34:	000101e8 	andeq	r0, r1, r8, ror #3
    bf38:	000101f0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    bf3c:	00010c90 	muleq	r1, r0, ip
    bf40:	000101fc 	strdeq	r0, [r1], -ip
    bf44:	00010214 	andeq	r0, r1, r4, lsl r2
    bf48:	00010220 	andeq	r0, r1, r0, lsr #4

0000bf4c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode>:
_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:139

IFile* CFilesystem::Open(const char* path, NFile_Open_Mode mode)
{
    bf4c:	e92d4800 	push	{fp, lr}
    bf50:	e28db004 	add	fp, sp, #4
    bf54:	e24dd030 	sub	sp, sp, #48	; 0x30
    bf58:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    bf5c:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
    bf60:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:142
    char tmpName[MaxFilenameLength];
    const char* mpPtr;
    sMonitor << "opening file: " << path << "\n";
    bf64:	e59f1228 	ldr	r1, [pc, #552]	; c194 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x248>
    bf68:	e59f0228 	ldr	r0, [pc, #552]	; c198 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x24c>
    bf6c:	ebfff536 	bl	944c <_ZN8CMonitorlsEPKc>
    bf70:	e1a03000 	mov	r3, r0
    bf74:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    bf78:	e1a00003 	mov	r0, r3
    bf7c:	ebfff532 	bl	944c <_ZN8CMonitorlsEPKc>
    bf80:	e1a03000 	mov	r3, r0
    bf84:	e59f1210 	ldr	r1, [pc, #528]	; c19c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    bf88:	e1a00003 	mov	r0, r3
    bf8c:	ebfff52e 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:146

    int j;

    mpPtr = path;
    bf90:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    bf94:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:148

    TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bf98:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    bf9c:	e50b3010 	str	r3, [fp, #-16]
    bfa0:	e3a03000 	mov	r3, #0
    bfa4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150

    while (mpPtr[0] != '\0')
    bfa8:	e51b3008 	ldr	r3, [fp, #-8]
    bfac:	e5d33000 	ldrb	r3, [r3]
    bfb0:	e3530000 	cmp	r3, #0
    bfb4:	0a000067 	beq	c158 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152
    {
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bfb8:	e3a03000 	mov	r3, #0
    bfbc:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 1)
    bfc0:	e51b300c 	ldr	r3, [fp, #-12]
    bfc4:	e353007f 	cmp	r3, #127	; 0x7f
    bfc8:	8a00001e 	bhi	c048 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 2)
    bfcc:	e51b300c 	ldr	r3, [fp, #-12]
    bfd0:	e51b2008 	ldr	r2, [fp, #-8]
    bfd4:	e0823003 	add	r3, r2, r3
    bfd8:	e5d33000 	ldrb	r3, [r3]
    bfdc:	e3530000 	cmp	r3, #0
    bfe0:	0a000018 	beq	c048 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154
        {
            if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bfe4:	e51b300c 	ldr	r3, [fp, #-12]
    bfe8:	e51b2008 	ldr	r2, [fp, #-8]
    bfec:	e0823003 	add	r3, r2, r3
    bff0:	e5d33000 	ldrb	r3, [r3]
    bff4:	e353003a 	cmp	r3, #58	; 0x3a
    bff8:	0a000012 	beq	c048 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154 (discriminator 1)
    bffc:	e51b300c 	ldr	r3, [fp, #-12]
    c000:	e51b2008 	ldr	r2, [fp, #-8]
    c004:	e0823003 	add	r3, r2, r3
    c008:	e5d33000 	ldrb	r3, [r3]
    c00c:	e353002f 	cmp	r3, #47	; 0x2f
    c010:	0a00000c 	beq	c048 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:157 (discriminator 3)
                break;

            tmpName[j] = mpPtr[j];
    c014:	e51b300c 	ldr	r3, [fp, #-12]
    c018:	e51b2008 	ldr	r2, [fp, #-8]
    c01c:	e0823003 	add	r3, r2, r3
    c020:	e5d31000 	ldrb	r1, [r3]
    c024:	e24b2024 	sub	r2, fp, #36	; 0x24
    c028:	e51b300c 	ldr	r3, [fp, #-12]
    c02c:	e0823003 	add	r3, r2, r3
    c030:	e1a02001 	mov	r2, r1
    c034:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 3)
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c038:	e51b300c 	ldr	r3, [fp, #-12]
    c03c:	e2833001 	add	r3, r3, #1
    c040:	e50b300c 	str	r3, [fp, #-12]
    c044:	eaffffdd 	b	bfc0 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:160
        }

        tmpName[j] = '\0';
    c048:	e24b2024 	sub	r2, fp, #36	; 0x24
    c04c:	e51b300c 	ldr	r3, [fp, #-12]
    c050:	e0823003 	add	r3, r2, r3
    c054:	e3a02000 	mov	r2, #0
    c058:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:162

        mpPtr += j;
    c05c:	e51b300c 	ldr	r3, [fp, #-12]
    c060:	e51b2008 	ldr	r2, [fp, #-8]
    c064:	e0823003 	add	r3, r2, r3
    c068:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:163
        if (mpPtr[0] != '\0')
    c06c:	e51b3008 	ldr	r3, [fp, #-8]
    c070:	e5d33000 	ldrb	r3, [r3]
    c074:	e3530000 	cmp	r3, #0
    c078:	0a000002 	beq	c088 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:165
        {
            mpPtr += 1;
    c07c:	e51b3008 	ldr	r3, [fp, #-8]
    c080:	e2833001 	add	r3, r3, #1
    c084:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:168
        }

        tmpNode = node->Find_Child(tmpName);
    c088:	e24b3024 	sub	r3, fp, #36	; 0x24
    c08c:	e1a01003 	mov	r1, r3
    c090:	e51b0010 	ldr	r0, [fp, #-16]
    c094:	ebfffeb4 	bl	bb6c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>
    c098:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:169
        if (tmpNode)
    c09c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0a0:	e3530000 	cmp	r3, #0
    c0a4:	0a000001 	beq	c0b0 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:170
            node = tmpNode;
    c0a8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0ac:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:172

        if (tmpNode->driver_idx != NoFilesystemDriver)
    c0b0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0b4:	e5933014 	ldr	r3, [r3, #20]
    c0b8:	e3730001 	cmn	r3, #1
    c0bc:	0a00001d 	beq	c138 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x1ec>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:174
        {
            return gFS_Drivers[tmpNode->driver_idx].driver->Open_File(mpPtr, mode);
    c0c0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0c4:	e5932014 	ldr	r2, [r3, #20]
    c0c8:	e59f10d0 	ldr	r1, [pc, #208]	; c1a0 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x254>
    c0cc:	e1a03002 	mov	r3, r2
    c0d0:	e1a03083 	lsl	r3, r3, #1
    c0d4:	e0833002 	add	r3, r3, r2
    c0d8:	e1a03183 	lsl	r3, r3, #3
    c0dc:	e0813003 	add	r3, r1, r3
    c0e0:	e2833014 	add	r3, r3, #20
    c0e4:	e5930000 	ldr	r0, [r3]
    c0e8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0ec:	e5932014 	ldr	r2, [r3, #20]
    c0f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0f4:	e5932014 	ldr	r2, [r3, #20]
    c0f8:	e59f10a0 	ldr	r1, [pc, #160]	; c1a0 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x254>
    c0fc:	e1a03002 	mov	r3, r2
    c100:	e1a03083 	lsl	r3, r3, #1
    c104:	e0833002 	add	r3, r3, r2
    c108:	e1a03183 	lsl	r3, r3, #3
    c10c:	e0813003 	add	r3, r1, r3
    c110:	e2833014 	add	r3, r3, #20
    c114:	e5933000 	ldr	r3, [r3]
    c118:	e5933000 	ldr	r3, [r3]
    c11c:	e2833004 	add	r3, r3, #4
    c120:	e5933000 	ldr	r3, [r3]
    c124:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
    c128:	e51b1008 	ldr	r1, [fp, #-8]
    c12c:	e12fff33 	blx	r3
    c130:	e1a03000 	mov	r3, r0
    c134:	ea000013 	b	c188 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x23c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:176
        }
        else if (!tmpNode->isDirectory)
    c138:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c13c:	e5d33010 	ldrb	r3, [r3, #16]
    c140:	e2233001 	eor	r3, r3, #1
    c144:	e6ef3073 	uxtb	r3, r3
    c148:	e3530000 	cmp	r3, #0
    c14c:	1a000000 	bne	c154 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x208>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    c150:	eaffff94 	b	bfa8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:177
            break;
    c154:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:180
    }

    sMonitor << "failed to open: " << path << "\n";
    c158:	e59f1044 	ldr	r1, [pc, #68]	; c1a4 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x258>
    c15c:	e59f0034 	ldr	r0, [pc, #52]	; c198 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x24c>
    c160:	ebfff4b9 	bl	944c <_ZN8CMonitorlsEPKc>
    c164:	e1a03000 	mov	r3, r0
    c168:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    c16c:	e1a00003 	mov	r0, r3
    c170:	ebfff4b5 	bl	944c <_ZN8CMonitorlsEPKc>
    c174:	e1a03000 	mov	r3, r0
    c178:	e59f101c 	ldr	r1, [pc, #28]	; c19c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    c17c:	e1a00003 	mov	r0, r3
    c180:	ebfff4b1 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:183

    // zadny filesystem se tohoto uzlu "neujal" -> soubor neexistuje
    return nullptr;
    c184:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
}
    c188:	e1a00003 	mov	r0, r3
    c18c:	e24bd004 	sub	sp, fp, #4
    c190:	e8bd8800 	pop	{fp, pc}
    c194:	00010240 	andeq	r0, r1, r0, asr #4
    c198:	00010b94 	muleq	r1, r4, fp
    c19c:	000101d0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    c1a0:	000102ec 	andeq	r0, r1, ip, ror #5
    c1a4:	00010250 	andeq	r0, r1, r0, asr r2

0000c1a8 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c1a8:	e92d4800 	push	{fp, lr}
    c1ac:	e28db004 	add	fp, sp, #4
    c1b0:	e24dd008 	sub	sp, sp, #8
    c1b4:	e50b0008 	str	r0, [fp, #-8]
    c1b8:	e50b100c 	str	r1, [fp, #-12]
    c1bc:	e51b3008 	ldr	r3, [fp, #-8]
    c1c0:	e3530001 	cmp	r3, #1
    c1c4:	1a000005 	bne	c1e0 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
    c1c8:	e51b300c 	ldr	r3, [fp, #-12]
    c1cc:	e59f2018 	ldr	r2, [pc, #24]	; c1ec <_Z41__static_initialization_and_destruction_0ii+0x44>
    c1d0:	e1530002 	cmp	r3, r2
    c1d4:	1a000001 	bne	c1e0 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:8
CFilesystem sFilesystem;
    c1d8:	e59f0010 	ldr	r0, [pc, #16]	; c1f0 <_Z41__static_initialization_and_destruction_0ii+0x48>
    c1dc:	ebfffdf4 	bl	b9b4 <_ZN11CFilesystemC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
}
    c1e0:	e320f000 	nop	{0}
    c1e4:	e24bd004 	sub	sp, fp, #4
    c1e8:	e8bd8800 	pop	{fp, pc}
    c1ec:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    c1f0:	00010bf4 	strdeq	r0, [r1], -r4

0000c1f4 <_GLOBAL__sub_I_sFilesystem>:
_GLOBAL__sub_I_sFilesystem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c1f4:	e92d4800 	push	{fp, lr}
    c1f8:	e28db004 	add	fp, sp, #4
    c1fc:	e59f1008 	ldr	r1, [pc, #8]	; c20c <_GLOBAL__sub_I_sFilesystem+0x18>
    c200:	e3a00001 	mov	r0, #1
    c204:	ebffffe7 	bl	c1a8 <_Z41__static_initialization_and_destruction_0ii>
    c208:	e8bd8800 	pop	{fp, pc}
    c20c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000c210 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>:
_ZN11CFilesystem13TFS_Tree_NodeC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:80

class CFilesystem
{
private:
    // uzel filesystemu, ktery neni spravovan zadnym FS driverem
    struct TFS_Tree_Node
    c210:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c214:	e28db000 	add	fp, sp, #0
    c218:	e24dd00c 	sub	sp, sp, #12
    c21c:	e50b0008 	str	r0, [fp, #-8]
    c220:	e51b3008 	ldr	r3, [fp, #-8]
    c224:	e3a02000 	mov	r2, #0
    c228:	e5c32010 	strb	r2, [r3, #16]
    c22c:	e51b3008 	ldr	r3, [fp, #-8]
    c230:	e3e02000 	mvn	r2, #0
    c234:	e5832014 	str	r2, [r3, #20]
    c238:	e51b3008 	ldr	r3, [fp, #-8]
    c23c:	e1a00003 	mov	r0, r3
    c240:	e28bd000 	add	sp, fp, #0
    c244:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c248:	e12fff1e 	bx	lr

0000c24c <_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    c24c:	e92d4800 	push	{fp, lr}
    c250:	e28db004 	add	fp, sp, #4
    c254:	e24dd008 	sub	sp, sp, #8
    c258:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    c25c:	e3a01024 	mov	r1, #36	; 0x24
    c260:	e51b0008 	ldr	r0, [fp, #-8]
    c264:	eb00059e 	bl	d8e4 <_ZN20CKernel_Heap_Manager5AllocEj>
    c268:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    c26c:	e1a00003 	mov	r0, r3
    c270:	e24bd004 	sub	sp, fp, #4
    c274:	e8bd8800 	pop	{fp, pc}

0000c278 <_ZN5IFile4ReadEPcj>:
_ZN5IFile4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:43
    virtual uint32_t Read(char* buffer, uint32_t num)
    c278:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c27c:	e28db000 	add	fp, sp, #0
    c280:	e24dd014 	sub	sp, sp, #20
    c284:	e50b0008 	str	r0, [fp, #-8]
    c288:	e50b100c 	str	r1, [fp, #-12]
    c28c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:45
        return 0;
    c290:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:46
    };
    c294:	e1a00003 	mov	r0, r3
    c298:	e28bd000 	add	sp, fp, #0
    c29c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2a0:	e12fff1e 	bx	lr

0000c2a4 <_ZN5IFile5WriteEPKcj>:
_ZN5IFile5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:49
    virtual uint32_t Write(const char* buffer, uint32_t num)
    c2a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2a8:	e28db000 	add	fp, sp, #0
    c2ac:	e24dd014 	sub	sp, sp, #20
    c2b0:	e50b0008 	str	r0, [fp, #-8]
    c2b4:	e50b100c 	str	r1, [fp, #-12]
    c2b8:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:51
        return 0;
    c2bc:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:52
    };
    c2c0:	e1a00003 	mov	r0, r3
    c2c4:	e28bd000 	add	sp, fp, #0
    c2c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2cc:	e12fff1e 	bx	lr

0000c2d0 <_ZN5IFile5CloseEv>:
_ZN5IFile5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:54
    virtual bool Close()
    c2d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2d4:	e28db000 	add	fp, sp, #0
    c2d8:	e24dd00c 	sub	sp, sp, #12
    c2dc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:56
        return true;
    c2e0:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:57
    };
    c2e4:	e1a00003 	mov	r0, r3
    c2e8:	e28bd000 	add	sp, fp, #0
    c2ec:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2f0:	e12fff1e 	bx	lr

0000c2f4 <_ZN5IFile5IOCtlE16NIOCtl_OperationPv>:
_ZN5IFile5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr)
    c2f4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2f8:	e28db000 	add	fp, sp, #0
    c2fc:	e24dd014 	sub	sp, sp, #20
    c300:	e50b0008 	str	r0, [fp, #-8]
    c304:	e50b100c 	str	r1, [fp, #-12]
    c308:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:61
        return false;
    c30c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:62
    };
    c310:	e1a00003 	mov	r0, r3
    c314:	e28bd000 	add	sp, fp, #0
    c318:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c31c:	e12fff1e 	bx	lr

0000c320 <_Znwj>:
_Znwj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:42
{
    c320:	e92d4800 	push	{fp, lr}
    c324:	e28db004 	add	fp, sp, #4
    c328:	e24dd008 	sub	sp, sp, #8
    c32c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:43
    return sKernelMem.Alloc(size);
    c330:	e51b1008 	ldr	r1, [fp, #-8]
    c334:	e59f0010 	ldr	r0, [pc, #16]	; c34c <_Znwj+0x2c>
    c338:	eb000569 	bl	d8e4 <_ZN20CKernel_Heap_Manager5AllocEj>
    c33c:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:44
}
    c340:	e1a00003 	mov	r0, r3
    c344:	e24bd004 	sub	sp, fp, #4
    c348:	e8bd8800 	pop	{fp, pc}
    c34c:	00010c90 	muleq	r1, r0, ip

0000c350 <_ZN5IFileC1Ev>:
_ZN5IFileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:36
class IFile
    c350:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c354:	e28db000 	add	fp, sp, #0
    c358:	e24dd00c 	sub	sp, sp, #12
    c35c:	e50b0008 	str	r0, [fp, #-8]
    c360:	e59f2018 	ldr	r2, [pc, #24]	; c380 <_ZN5IFileC1Ev+0x30>
    c364:	e51b3008 	ldr	r3, [fp, #-8]
    c368:	e5832000 	str	r2, [r3]
    c36c:	e51b3008 	ldr	r3, [fp, #-8]
    c370:	e1a00003 	mov	r0, r3
    c374:	e28bd000 	add	sp, fp, #0
    c378:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c37c:	e12fff1e 	bx	lr
    c380:	00010adc 	ldrdeq	r0, [r1], -ip

0000c384 <_ZN5IFileD1Ev>:
_ZN5IFileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    virtual ~IFile() = default;
    c384:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c388:	e28db000 	add	fp, sp, #0
    c38c:	e24dd00c 	sub	sp, sp, #12
    c390:	e50b0008 	str	r0, [fp, #-8]
    c394:	e59f2018 	ldr	r2, [pc, #24]	; c3b4 <_ZN5IFileD1Ev+0x30>
    c398:	e51b3008 	ldr	r3, [fp, #-8]
    c39c:	e5832000 	str	r2, [r3]
    c3a0:	e51b3008 	ldr	r3, [fp, #-8]
    c3a4:	e1a00003 	mov	r0, r3
    c3a8:	e28bd000 	add	sp, fp, #0
    c3ac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c3b0:	e12fff1e 	bx	lr
    c3b4:	00010adc 	ldrdeq	r0, [r1], -ip

0000c3b8 <_ZN5IFileD0Ev>:
_ZN5IFileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    c3b8:	e92d4800 	push	{fp, lr}
    c3bc:	e28db004 	add	fp, sp, #4
    c3c0:	e24dd008 	sub	sp, sp, #8
    c3c4:	e50b0008 	str	r0, [fp, #-8]
    c3c8:	e51b0008 	ldr	r0, [fp, #-8]
    c3cc:	ebffffec 	bl	c384 <_ZN5IFileD1Ev>
    c3d0:	e3a01004 	mov	r1, #4
    c3d4:	e51b0008 	ldr	r0, [fp, #-8]
    c3d8:	ebfff9c8 	bl	ab00 <_ZdlPvj>
    c3dc:	e51b3008 	ldr	r3, [fp, #-8]
    c3e0:	e1a00003 	mov	r0, r3
    c3e4:	e24bd004 	sub	sp, fp, #4
    c3e8:	e8bd8800 	pop	{fp, pc}

0000c3ec <_ZN10CGPIO_FileC1Eibb>:
_ZN10CGPIO_FileC2Eibb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:21
    bool mRead;
    // byl pin rezervovan pro zapis?
    bool mWrite;

public:
    CGPIO_File(int pinNo, bool read, bool write)
    c3ec:	e92d4800 	push	{fp, lr}
    c3f0:	e28db004 	add	fp, sp, #4
    c3f4:	e24dd010 	sub	sp, sp, #16
    c3f8:	e50b0008 	str	r0, [fp, #-8]
    c3fc:	e50b100c 	str	r1, [fp, #-12]
    c400:	e1a01002 	mov	r1, r2
    c404:	e1a02003 	mov	r2, r3
    c408:	e1a03001 	mov	r3, r1
    c40c:	e54b300d 	strb	r3, [fp, #-13]
    c410:	e1a03002 	mov	r3, r2
    c414:	e54b300e 	strb	r3, [fp, #-14]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:24
    : mPinNo(pinNo)
    , mRead(read)
    , mWrite(write)
    c418:	e51b3008 	ldr	r3, [fp, #-8]
    c41c:	e1a00003 	mov	r0, r3
    c420:	ebffffca 	bl	c350 <_ZN5IFileC1Ev>
    c424:	e59f2038 	ldr	r2, [pc, #56]	; c464 <_ZN10CGPIO_FileC1Eibb+0x78>
    c428:	e51b3008 	ldr	r3, [fp, #-8]
    c42c:	e5832000 	str	r2, [r3]
    c430:	e51b3008 	ldr	r3, [fp, #-8]
    c434:	e51b200c 	ldr	r2, [fp, #-12]
    c438:	e5832004 	str	r2, [r3, #4]
    c43c:	e51b3008 	ldr	r3, [fp, #-8]
    c440:	e55b200d 	ldrb	r2, [fp, #-13]
    c444:	e5c32008 	strb	r2, [r3, #8]
    c448:	e51b3008 	ldr	r3, [fp, #-8]
    c44c:	e55b200e 	ldrb	r2, [fp, #-14]
    c450:	e5c32009 	strb	r2, [r3, #9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:27
    {
        //
    }
    c454:	e51b3008 	ldr	r3, [fp, #-8]
    c458:	e1a00003 	mov	r0, r3
    c45c:	e24bd004 	sub	sp, fp, #4
    c460:	e8bd8800 	pop	{fp, pc}
    c464:	00010abc 			; <UNDEFINED> instruction: 0x00010abc

0000c468 <_ZN10CGPIO_FileD1Ev>:
_ZN10CGPIO_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29

    ~CGPIO_File()
    c468:	e92d4800 	push	{fp, lr}
    c46c:	e28db004 	add	fp, sp, #4
    c470:	e24dd008 	sub	sp, sp, #8
    c474:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c478:	e59f2028 	ldr	r2, [pc, #40]	; c4a8 <_ZN10CGPIO_FileD1Ev+0x40>
    c47c:	e51b3008 	ldr	r3, [fp, #-8]
    c480:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:32
        // pokud jeste je otevreny, zavreme
        Close();
    c484:	e51b0008 	ldr	r0, [fp, #-8]
    c488:	eb000053 	bl	c5dc <_ZN10CGPIO_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c48c:	e51b3008 	ldr	r3, [fp, #-8]
    c490:	e1a00003 	mov	r0, r3
    c494:	ebffffba 	bl	c384 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c498:	e51b3008 	ldr	r3, [fp, #-8]
    c49c:	e1a00003 	mov	r0, r3
    c4a0:	e24bd004 	sub	sp, fp, #4
    c4a4:	e8bd8800 	pop	{fp, pc}
    c4a8:	00010abc 			; <UNDEFINED> instruction: 0x00010abc

0000c4ac <_ZN10CGPIO_FileD0Ev>:
_ZN10CGPIO_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c4ac:	e92d4800 	push	{fp, lr}
    c4b0:	e28db004 	add	fp, sp, #4
    c4b4:	e24dd008 	sub	sp, sp, #8
    c4b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c4bc:	e51b0008 	ldr	r0, [fp, #-8]
    c4c0:	ebffffe8 	bl	c468 <_ZN10CGPIO_FileD1Ev>
    c4c4:	e3a0100c 	mov	r1, #12
    c4c8:	e51b0008 	ldr	r0, [fp, #-8]
    c4cc:	ebfff98b 	bl	ab00 <_ZdlPvj>
    c4d0:	e51b3008 	ldr	r3, [fp, #-8]
    c4d4:	e1a00003 	mov	r0, r3
    c4d8:	e24bd004 	sub	sp, fp, #4
    c4dc:	e8bd8800 	pop	{fp, pc}

0000c4e0 <_ZN10CGPIO_File4ReadEPcj>:
_ZN10CGPIO_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:35

    virtual uint32_t Read(char* buffer, uint32_t num) override
    c4e0:	e92d4800 	push	{fp, lr}
    c4e4:	e28db004 	add	fp, sp, #4
    c4e8:	e24dd010 	sub	sp, sp, #16
    c4ec:	e50b0008 	str	r0, [fp, #-8]
    c4f0:	e50b100c 	str	r1, [fp, #-12]
    c4f4:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37
    {
        if (num > 0 && buffer != nullptr)
    c4f8:	e51b3010 	ldr	r3, [fp, #-16]
    c4fc:	e3530000 	cmp	r3, #0
    c500:	0a000011 	beq	c54c <_ZN10CGPIO_File4ReadEPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37 (discriminator 1)
    c504:	e51b300c 	ldr	r3, [fp, #-12]
    c508:	e3530000 	cmp	r3, #0
    c50c:	0a00000e 	beq	c54c <_ZN10CGPIO_File4ReadEPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40
        {
            // na prvni pozici v bufferu precteme bud znak 1 nebo 0 podle stavu digitalniho pinu
            buffer[0] = sGPIO.Get_Input(mPinNo) ? '1' : '0';
    c510:	e51b3008 	ldr	r3, [fp, #-8]
    c514:	e5933004 	ldr	r3, [r3, #4]
    c518:	e1a01003 	mov	r1, r3
    c51c:	e59f0038 	ldr	r0, [pc, #56]	; c55c <_ZN10CGPIO_File4ReadEPcj+0x7c>
    c520:	ebfff02f 	bl	85e4 <_ZN13CGPIO_Handler9Get_InputEj>
    c524:	e1a03000 	mov	r3, r0
    c528:	e3530000 	cmp	r3, #0
    c52c:	0a000001 	beq	c538 <_ZN10CGPIO_File4ReadEPcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 1)
    c530:	e3a02031 	mov	r2, #49	; 0x31
    c534:	ea000000 	b	c53c <_ZN10CGPIO_File4ReadEPcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 2)
    c538:	e3a02030 	mov	r2, #48	; 0x30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 4)
    c53c:	e51b300c 	ldr	r3, [fp, #-12]
    c540:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:41 (discriminator 4)
            return 1;
    c544:	e3a03001 	mov	r3, #1
    c548:	ea000000 	b	c550 <_ZN10CGPIO_File4ReadEPcj+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:44
        }

        return 0;
    c54c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:45
    }
    c550:	e1a00003 	mov	r0, r3
    c554:	e24bd004 	sub	sp, fp, #4
    c558:	e8bd8800 	pop	{fp, pc}
    c55c:	00010b5c 	andeq	r0, r1, ip, asr fp

0000c560 <_ZN10CGPIO_File5WriteEPKcj>:
_ZN10CGPIO_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:47

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c560:	e92d4800 	push	{fp, lr}
    c564:	e28db004 	add	fp, sp, #4
    c568:	e24dd010 	sub	sp, sp, #16
    c56c:	e50b0008 	str	r0, [fp, #-8]
    c570:	e50b100c 	str	r1, [fp, #-12]
    c574:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49
    {
        if (num > 0 && buffer != nullptr)
    c578:	e51b3010 	ldr	r3, [fp, #-16]
    c57c:	e3530000 	cmp	r3, #0
    c580:	0a000010 	beq	c5c8 <_ZN10CGPIO_File5WriteEPKcj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49 (discriminator 1)
    c584:	e51b300c 	ldr	r3, [fp, #-12]
    c588:	e3530000 	cmp	r3, #0
    c58c:	0a00000d 	beq	c5c8 <_ZN10CGPIO_File5WriteEPKcj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:52
        {
            // podle prvniho znaku zapiseme bud hodnotu HIGH (true) nebo LOW (false)
            sGPIO.Set_Output(mPinNo, (buffer[0] != '0'));
    c590:	e51b3008 	ldr	r3, [fp, #-8]
    c594:	e5933004 	ldr	r3, [r3, #4]
    c598:	e1a01003 	mov	r1, r3
    c59c:	e51b300c 	ldr	r3, [fp, #-12]
    c5a0:	e5d33000 	ldrb	r3, [r3]
    c5a4:	e3530030 	cmp	r3, #48	; 0x30
    c5a8:	13a03001 	movne	r3, #1
    c5ac:	03a03000 	moveq	r3, #0
    c5b0:	e6ef3073 	uxtb	r3, r3
    c5b4:	e1a02003 	mov	r2, r3
    c5b8:	e59f0018 	ldr	r0, [pc, #24]	; c5d8 <_ZN10CGPIO_File5WriteEPKcj+0x78>
    c5bc:	ebffefd2 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:53
            return 1;
    c5c0:	e3a03001 	mov	r3, #1
    c5c4:	ea000000 	b	c5cc <_ZN10CGPIO_File5WriteEPKcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:56
        }

        return 0;
    c5c8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:57
    }
    c5cc:	e1a00003 	mov	r0, r3
    c5d0:	e24bd004 	sub	sp, fp, #4
    c5d4:	e8bd8800 	pop	{fp, pc}
    c5d8:	00010b5c 	andeq	r0, r1, ip, asr fp

0000c5dc <_ZN10CGPIO_File5CloseEv>:
_ZN10CGPIO_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:59

    virtual bool Close() override
    c5dc:	e92d4800 	push	{fp, lr}
    c5e0:	e28db004 	add	fp, sp, #4
    c5e4:	e24dd008 	sub	sp, sp, #8
    c5e8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61
    {
        if (!mRead && !mWrite)
    c5ec:	e51b3008 	ldr	r3, [fp, #-8]
    c5f0:	e5d33008 	ldrb	r3, [r3, #8]
    c5f4:	e2233001 	eor	r3, r3, #1
    c5f8:	e6ef3073 	uxtb	r3, r3
    c5fc:	e3530000 	cmp	r3, #0
    c600:	0a000007 	beq	c624 <_ZN10CGPIO_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61 (discriminator 1)
    c604:	e51b3008 	ldr	r3, [fp, #-8]
    c608:	e5d33009 	ldrb	r3, [r3, #9]
    c60c:	e2233001 	eor	r3, r3, #1
    c610:	e6ef3073 	uxtb	r3, r3
    c614:	e3530000 	cmp	r3, #0
    c618:	0a000001 	beq	c624 <_ZN10CGPIO_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:62
            return false;
    c61c:	e3a03000 	mov	r3, #0
    c620:	ea000010 	b	c668 <_ZN10CGPIO_File5CloseEv+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:65

        // uvolnime pin
        sGPIO.Free_Pin(mPinNo, mRead, mWrite);
    c624:	e51b3008 	ldr	r3, [fp, #-8]
    c628:	e5933004 	ldr	r3, [r3, #4]
    c62c:	e1a01003 	mov	r1, r3
    c630:	e51b3008 	ldr	r3, [fp, #-8]
    c634:	e5d32008 	ldrb	r2, [r3, #8]
    c638:	e51b3008 	ldr	r3, [fp, #-8]
    c63c:	e5d33009 	ldrb	r3, [r3, #9]
    c640:	e59f002c 	ldr	r0, [pc, #44]	; c674 <_ZN10CGPIO_File5CloseEv+0x98>
    c644:	ebfff06d 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:66
        mRead = mWrite = false;
    c648:	e51b3008 	ldr	r3, [fp, #-8]
    c64c:	e3a02000 	mov	r2, #0
    c650:	e5c32009 	strb	r2, [r3, #9]
    c654:	e51b3008 	ldr	r3, [fp, #-8]
    c658:	e5d32009 	ldrb	r2, [r3, #9]
    c65c:	e51b3008 	ldr	r3, [fp, #-8]
    c660:	e5c32008 	strb	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:68

        return true;
    c664:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:69
    }
    c668:	e1a00003 	mov	r0, r3
    c66c:	e24bd004 	sub	sp, fp, #4
    c670:	e8bd8800 	pop	{fp, pc}
    c674:	00010b5c 	andeq	r0, r1, ip, asr fp

0000c678 <_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv>:
_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:71

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c678:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c67c:	e28db000 	add	fp, sp, #0
    c680:	e24dd014 	sub	sp, sp, #20
    c684:	e50b0008 	str	r0, [fp, #-8]
    c688:	e50b100c 	str	r1, [fp, #-12]
    c68c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:74
    {
        // GPIO (zatim?) neumime nijak nastavovat
        return false;
    c690:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:75
    }
    c694:	e1a00003 	mov	r0, r3
    c698:	e28bd000 	add	sp, fp, #0
    c69c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c6a0:	e12fff1e 	bx	lr

0000c6a4 <_ZN15CGPIO_FS_Driver11On_RegisterEv>:
_ZN15CGPIO_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:82

// driver pro filesystem pro GPIO piny
class CGPIO_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    c6a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c6a8:	e28db000 	add	fp, sp, #0
    c6ac:	e24dd00c 	sub	sp, sp, #12
    c6b0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:85
    {
        //
    }
    c6b4:	e320f000 	nop	{0}
    c6b8:	e28bd000 	add	sp, fp, #0
    c6bc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c6c0:	e12fff1e 	bx	lr

0000c6c4 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:87

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    c6c4:	e92d4810 	push	{r4, fp, lr}
    c6c8:	e28db008 	add	fp, sp, #8
    c6cc:	e24dd01c 	sub	sp, sp, #28
    c6d0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    c6d4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    c6d8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89
    {
        if (mode != NFile_Open_Mode::Read_Only && mode != NFile_Open_Mode::Write_Only)
    c6dc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c6e0:	e3530000 	cmp	r3, #0
    c6e4:	0a000004 	beq	c6fc <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89 (discriminator 1)
    c6e8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c6ec:	e3530001 	cmp	r3, #1
    c6f0:	0a000001 	beq	c6fc <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:90
            return nullptr;
    c6f4:	e3a03000 	mov	r3, #0
    c6f8:	ea000043 	b	c80c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:94

        // tento driver ocekava na vstupu jen jednu jedinou uroven v 'path', a tou je cislo, tedy index GPIO pinu

        int gpionum = atoi(path);
    c6fc:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    c700:	eb000bab 	bl	f5b4 <_Z4atoiPKc>
    c704:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95
        if (gpionum < 0 || gpionum >= hal::GPIO_Pin_Count)
    c708:	e51b3010 	ldr	r3, [fp, #-16]
    c70c:	e3530000 	cmp	r3, #0
    c710:	ba000002 	blt	c720 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95 (discriminator 1)
    c714:	e51b3010 	ldr	r3, [fp, #-16]
    c718:	e3530035 	cmp	r3, #53	; 0x35
    c71c:	9a000001 	bls	c728 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:96
            return nullptr;
    c720:	e3a03000 	mov	r3, #0
    c724:	ea000038 	b	c80c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:98

        if (mode == NFile_Open_Mode::Read_Only)
    c728:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c72c:	e3530000 	cmp	r3, #0
    c730:	1a000011 	bne	c77c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:100
        {
            if (!sGPIO.Reserve_Pin(gpionum, true, false))
    c734:	e51b1010 	ldr	r1, [fp, #-16]
    c738:	e3a03000 	mov	r3, #0
    c73c:	e3a02001 	mov	r2, #1
    c740:	e59f00d0 	ldr	r0, [pc, #208]	; c818 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c744:	ebffefc7 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    c748:	e1a03000 	mov	r3, r0
    c74c:	e2233001 	eor	r3, r3, #1
    c750:	e6ef3073 	uxtb	r3, r3
    c754:	e3530000 	cmp	r3, #0
    c758:	0a000001 	beq	c764 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:101
                return nullptr;
    c75c:	e3a03000 	mov	r3, #0
    c760:	ea000029 	b	c80c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:103

            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Input);
    c764:	e51b3010 	ldr	r3, [fp, #-16]
    c768:	e3a02000 	mov	r2, #0
    c76c:	e1a01003 	mov	r1, r3
    c770:	e59f00a0 	ldr	r0, [pc, #160]	; c818 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c774:	ebffef15 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
    c778:	ea000010 	b	c7c0 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:107
        }
        else
        {
            if (!sGPIO.Reserve_Pin(gpionum, false, true))
    c77c:	e51b1010 	ldr	r1, [fp, #-16]
    c780:	e3a03001 	mov	r3, #1
    c784:	e3a02000 	mov	r2, #0
    c788:	e59f0088 	ldr	r0, [pc, #136]	; c818 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c78c:	ebffefb5 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    c790:	e1a03000 	mov	r3, r0
    c794:	e2233001 	eor	r3, r3, #1
    c798:	e6ef3073 	uxtb	r3, r3
    c79c:	e3530000 	cmp	r3, #0
    c7a0:	0a000001 	beq	c7ac <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xe8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:108
                return nullptr;
    c7a4:	e3a03000 	mov	r3, #0
    c7a8:	ea000017 	b	c80c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:110

            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Output);
    c7ac:	e51b3010 	ldr	r3, [fp, #-16]
    c7b0:	e3a02001 	mov	r2, #1
    c7b4:	e1a01003 	mov	r1, r3
    c7b8:	e59f0058 	ldr	r0, [pc, #88]	; c818 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c7bc:	ebffef03 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:114
        }

        CGPIO_File* f =
        new CGPIO_File(gpionum, mode == NFile_Open_Mode::Read_Only, mode == NFile_Open_Mode::Write_Only);
    c7c0:	e3a0000c 	mov	r0, #12
    c7c4:	ebfffed5 	bl	c320 <_Znwj>
    c7c8:	e1a03000 	mov	r3, r0
    c7cc:	e1a04003 	mov	r4, r3
    c7d0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7d4:	e3530000 	cmp	r3, #0
    c7d8:	03a03001 	moveq	r3, #1
    c7dc:	13a03000 	movne	r3, #0
    c7e0:	e6ef2073 	uxtb	r2, r3
    c7e4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7e8:	e3530001 	cmp	r3, #1
    c7ec:	03a03001 	moveq	r3, #1
    c7f0:	13a03000 	movne	r3, #0
    c7f4:	e6ef3073 	uxtb	r3, r3
    c7f8:	e51b1010 	ldr	r1, [fp, #-16]
    c7fc:	e1a00004 	mov	r0, r4
    c800:	ebfffef9 	bl	c3ec <_ZN10CGPIO_FileC1Eibb>
    c804:	e50b4014 	str	r4, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:116

        return f;
    c808:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:117
    }
    c80c:	e1a00003 	mov	r0, r3
    c810:	e24bd008 	sub	sp, fp, #8
    c814:	e8bd8810 	pop	{r4, fp, pc}
    c818:	00010b5c 	andeq	r0, r1, ip, asr fp

0000c81c <_ZN13CMonitor_FileC1Ei>:
_ZN13CMonitor_FileC2Ei():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:15
{
private:
    int mChannel;

public:
    CMonitor_File(int channel)
    c81c:	e92d4800 	push	{fp, lr}
    c820:	e28db004 	add	fp, sp, #4
    c824:	e24dd008 	sub	sp, sp, #8
    c828:	e50b0008 	str	r0, [fp, #-8]
    c82c:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:16
    : mChannel(channel)
    c830:	e51b3008 	ldr	r3, [fp, #-8]
    c834:	e1a00003 	mov	r0, r3
    c838:	ebfffec4 	bl	c350 <_ZN5IFileC1Ev>
    c83c:	e59f2020 	ldr	r2, [pc, #32]	; c864 <_ZN13CMonitor_FileC1Ei+0x48>
    c840:	e51b3008 	ldr	r3, [fp, #-8]
    c844:	e5832000 	str	r2, [r3]
    c848:	e51b3008 	ldr	r3, [fp, #-8]
    c84c:	e51b200c 	ldr	r2, [fp, #-12]
    c850:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:18
    {
    }
    c854:	e51b3008 	ldr	r3, [fp, #-8]
    c858:	e1a00003 	mov	r0, r3
    c85c:	e24bd004 	sub	sp, fp, #4
    c860:	e8bd8800 	pop	{fp, pc}
    c864:	00010a8c 	andeq	r0, r1, ip, lsl #21

0000c868 <_ZN13CMonitor_FileD1Ev>:
_ZN13CMonitor_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20

    ~CMonitor_File()
    c868:	e92d4800 	push	{fp, lr}
    c86c:	e28db004 	add	fp, sp, #4
    c870:	e24dd008 	sub	sp, sp, #8
    c874:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c878:	e59f2028 	ldr	r2, [pc, #40]	; c8a8 <_ZN13CMonitor_FileD1Ev+0x40>
    c87c:	e51b3008 	ldr	r3, [fp, #-8]
    c880:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:22
        Close();
    c884:	e51b0008 	ldr	r0, [fp, #-8]
    c888:	eb000039 	bl	c974 <_ZN13CMonitor_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c88c:	e51b3008 	ldr	r3, [fp, #-8]
    c890:	e1a00003 	mov	r0, r3
    c894:	ebfffeba 	bl	c384 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c898:	e51b3008 	ldr	r3, [fp, #-8]
    c89c:	e1a00003 	mov	r0, r3
    c8a0:	e24bd004 	sub	sp, fp, #4
    c8a4:	e8bd8800 	pop	{fp, pc}
    c8a8:	00010a8c 	andeq	r0, r1, ip, lsl #21

0000c8ac <_ZN13CMonitor_FileD0Ev>:
_ZN13CMonitor_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c8ac:	e92d4800 	push	{fp, lr}
    c8b0:	e28db004 	add	fp, sp, #4
    c8b4:	e24dd008 	sub	sp, sp, #8
    c8b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c8bc:	e51b0008 	ldr	r0, [fp, #-8]
    c8c0:	ebffffe8 	bl	c868 <_ZN13CMonitor_FileD1Ev>
    c8c4:	e3a01008 	mov	r1, #8
    c8c8:	e51b0008 	ldr	r0, [fp, #-8]
    c8cc:	ebfff88b 	bl	ab00 <_ZdlPvj>
    c8d0:	e51b3008 	ldr	r3, [fp, #-8]
    c8d4:	e1a00003 	mov	r0, r3
    c8d8:	e24bd004 	sub	sp, fp, #4
    c8dc:	e8bd8800 	pop	{fp, pc}

0000c8e0 <_ZN13CMonitor_File4ReadEPcj>:
_ZN13CMonitor_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:25

    virtual uint32_t Read(char* buffer, uint32_t num) override
    c8e0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c8e4:	e28db000 	add	fp, sp, #0
    c8e8:	e24dd014 	sub	sp, sp, #20
    c8ec:	e50b0008 	str	r0, [fp, #-8]
    c8f0:	e50b100c 	str	r1, [fp, #-12]
    c8f4:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:27
    {
        return 0;
    c8f8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:28
    }
    c8fc:	e1a00003 	mov	r0, r3
    c900:	e28bd000 	add	sp, fp, #0
    c904:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c908:	e12fff1e 	bx	lr

0000c90c <_ZN13CMonitor_File5WriteEPKcj>:
_ZN13CMonitor_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:30

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c90c:	e92d4800 	push	{fp, lr}
    c910:	e28db004 	add	fp, sp, #4
    c914:	e24dd010 	sub	sp, sp, #16
    c918:	e50b0008 	str	r0, [fp, #-8]
    c91c:	e50b100c 	str	r1, [fp, #-12]
    c920:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32
    {
        if (num > 0 && buffer != nullptr)
    c924:	e51b3010 	ldr	r3, [fp, #-16]
    c928:	e3530000 	cmp	r3, #0
    c92c:	0a00000b 	beq	c960 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32 (discriminator 1)
    c930:	e51b300c 	ldr	r3, [fp, #-12]
    c934:	e3530000 	cmp	r3, #0
    c938:	0a000008 	beq	c960 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:34
        {
            if (mChannel == 0)
    c93c:	e51b3008 	ldr	r3, [fp, #-8]
    c940:	e5933004 	ldr	r3, [r3, #4]
    c944:	e3530000 	cmp	r3, #0
    c948:	1a000004 	bne	c960 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:36
            {
                sMonitor << buffer;
    c94c:	e51b100c 	ldr	r1, [fp, #-12]
    c950:	e59f0018 	ldr	r0, [pc, #24]	; c970 <_ZN13CMonitor_File5WriteEPKcj+0x64>
    c954:	ebfff2bc 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:37
                return num;
    c958:	e51b3010 	ldr	r3, [fp, #-16]
    c95c:	ea000000 	b	c964 <_ZN13CMonitor_File5WriteEPKcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:41
            }
        }

        return 0;
    c960:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:42
    }
    c964:	e1a00003 	mov	r0, r3
    c968:	e24bd004 	sub	sp, fp, #4
    c96c:	e8bd8800 	pop	{fp, pc}
    c970:	00010b94 	muleq	r1, r4, fp

0000c974 <_ZN13CMonitor_File5CloseEv>:
_ZN13CMonitor_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:44

    virtual bool Close() override
    c974:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c978:	e28db000 	add	fp, sp, #0
    c97c:	e24dd00c 	sub	sp, sp, #12
    c980:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:46
    {
        if (mChannel < 0)
    c984:	e51b3008 	ldr	r3, [fp, #-8]
    c988:	e5933004 	ldr	r3, [r3, #4]
    c98c:	e3530000 	cmp	r3, #0
    c990:	aa000001 	bge	c99c <_ZN13CMonitor_File5CloseEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:47
            return false;
    c994:	e3a03000 	mov	r3, #0
    c998:	ea000003 	b	c9ac <_ZN13CMonitor_File5CloseEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:53

        if (mChannel == 0)
        {
        }

        mChannel = -1;
    c99c:	e51b3008 	ldr	r3, [fp, #-8]
    c9a0:	e3e02000 	mvn	r2, #0
    c9a4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:55

        return true;
    c9a8:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:56
    }
    c9ac:	e1a00003 	mov	r0, r3
    c9b0:	e28bd000 	add	sp, fp, #0
    c9b4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c9b8:	e12fff1e 	bx	lr

0000c9bc <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv>:
_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:58

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c9bc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c9c0:	e28db000 	add	fp, sp, #0
    c9c4:	e24dd014 	sub	sp, sp, #20
    c9c8:	e50b0008 	str	r0, [fp, #-8]
    c9cc:	e50b100c 	str	r1, [fp, #-12]
    c9d0:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:60
    {
        if (mChannel == 0)
    c9d4:	e51b3008 	ldr	r3, [fp, #-8]
    c9d8:	e5933004 	ldr	r3, [r3, #4]
    c9dc:	e3530000 	cmp	r3, #0
    c9e0:	1a000001 	bne	c9ec <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:62
        {
            return true;
    c9e4:	e3a03001 	mov	r3, #1
    c9e8:	ea000000 	b	c9f0 <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:65
        }

        return false;
    c9ec:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:66
    }
    c9f0:	e1a00003 	mov	r0, r3
    c9f4:	e28bd000 	add	sp, fp, #0
    c9f8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c9fc:	e12fff1e 	bx	lr

0000ca00 <_ZN18CMonitor_FS_Driver11On_RegisterEv>:
_ZN18CMonitor_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:72
};

class CMonitor_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    ca00:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ca04:	e28db000 	add	fp, sp, #0
    ca08:	e24dd00c 	sub	sp, sp, #12
    ca0c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:74
    {
    }
    ca10:	e320f000 	nop	{0}
    ca14:	e28bd000 	add	sp, fp, #0
    ca18:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ca1c:	e12fff1e 	bx	lr

0000ca20 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:76

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    ca20:	e92d4810 	push	{r4, fp, lr}
    ca24:	e28db008 	add	fp, sp, #8
    ca28:	e24dd01c 	sub	sp, sp, #28
    ca2c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    ca30:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    ca34:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:78
    {
        int channel = atoi(path);
    ca38:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    ca3c:	eb000adc 	bl	f5b4 <_Z4atoiPKc>
    ca40:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:79
        if (channel != 0)
    ca44:	e51b3010 	ldr	r3, [fp, #-16]
    ca48:	e3530000 	cmp	r3, #0
    ca4c:	0a000001 	beq	ca58 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:80
            return nullptr;
    ca50:	e3a03000 	mov	r3, #0
    ca54:	ea000008 	b	ca7c <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:82

        CMonitor_File* f = new CMonitor_File(channel);
    ca58:	e3a00008 	mov	r0, #8
    ca5c:	ebfffe2f 	bl	c320 <_Znwj>
    ca60:	e1a03000 	mov	r3, r0
    ca64:	e1a04003 	mov	r4, r3
    ca68:	e51b1010 	ldr	r1, [fp, #-16]
    ca6c:	e1a00004 	mov	r0, r4
    ca70:	ebffff69 	bl	c81c <_ZN13CMonitor_FileC1Ei>
    ca74:	e50b4014 	str	r4, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:84

        return f;
    ca78:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:85
    }
    ca7c:	e1a00003 	mov	r0, r3
    ca80:	e24bd008 	sub	sp, fp, #8
    ca84:	e8bd8810 	pop	{r4, fp, pc}

0000ca88 <_ZN21CSegment_Display_FileC1Ev>:
_ZN21CSegment_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:16
{
private:
    bool mOpened;

public:
    CSegment_Display_File()
    ca88:	e92d4800 	push	{fp, lr}
    ca8c:	e28db004 	add	fp, sp, #4
    ca90:	e24dd008 	sub	sp, sp, #8
    ca94:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:17
    : mOpened(true)
    ca98:	e51b3008 	ldr	r3, [fp, #-8]
    ca9c:	e1a00003 	mov	r0, r3
    caa0:	ebfffe2a 	bl	c350 <_ZN5IFileC1Ev>
    caa4:	e59f2020 	ldr	r2, [pc, #32]	; cacc <_ZN21CSegment_Display_FileC1Ev+0x44>
    caa8:	e51b3008 	ldr	r3, [fp, #-8]
    caac:	e5832000 	str	r2, [r3]
    cab0:	e51b3008 	ldr	r3, [fp, #-8]
    cab4:	e3a02001 	mov	r2, #1
    cab8:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:20
    {
        //
    }
    cabc:	e51b3008 	ldr	r3, [fp, #-8]
    cac0:	e1a00003 	mov	r0, r3
    cac4:	e24bd004 	sub	sp, fp, #4
    cac8:	e8bd8800 	pop	{fp, pc}
    cacc:	00010a5c 	andeq	r0, r1, ip, asr sl

0000cad0 <_ZN21CSegment_Display_FileD1Ev>:
_ZN21CSegment_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22

    ~CSegment_Display_File()
    cad0:	e92d4800 	push	{fp, lr}
    cad4:	e28db004 	add	fp, sp, #4
    cad8:	e24dd008 	sub	sp, sp, #8
    cadc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cae0:	e59f2028 	ldr	r2, [pc, #40]	; cb10 <_ZN21CSegment_Display_FileD1Ev+0x40>
    cae4:	e51b3008 	ldr	r3, [fp, #-8]
    cae8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:24
        Close();
    caec:	e51b0008 	ldr	r0, [fp, #-8]
    caf0:	eb000046 	bl	cc10 <_ZN21CSegment_Display_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    caf4:	e51b3008 	ldr	r3, [fp, #-8]
    caf8:	e1a00003 	mov	r0, r3
    cafc:	ebfffe20 	bl	c384 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cb00:	e51b3008 	ldr	r3, [fp, #-8]
    cb04:	e1a00003 	mov	r0, r3
    cb08:	e24bd004 	sub	sp, fp, #4
    cb0c:	e8bd8800 	pop	{fp, pc}
    cb10:	00010a5c 	andeq	r0, r1, ip, asr sl

0000cb14 <_ZN21CSegment_Display_FileD0Ev>:
_ZN21CSegment_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cb14:	e92d4800 	push	{fp, lr}
    cb18:	e28db004 	add	fp, sp, #4
    cb1c:	e24dd008 	sub	sp, sp, #8
    cb20:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cb24:	e51b0008 	ldr	r0, [fp, #-8]
    cb28:	ebffffe8 	bl	cad0 <_ZN21CSegment_Display_FileD1Ev>
    cb2c:	e3a01008 	mov	r1, #8
    cb30:	e51b0008 	ldr	r0, [fp, #-8]
    cb34:	ebfff7f1 	bl	ab00 <_ZdlPvj>
    cb38:	e51b3008 	ldr	r3, [fp, #-8]
    cb3c:	e1a00003 	mov	r0, r3
    cb40:	e24bd004 	sub	sp, fp, #4
    cb44:	e8bd8800 	pop	{fp, pc}

0000cb48 <_ZN21CSegment_Display_File4ReadEPcj>:
_ZN21CSegment_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:27

    virtual uint32_t Read(char* buffer, uint32_t num) override
    cb48:	e92d4800 	push	{fp, lr}
    cb4c:	e28db004 	add	fp, sp, #4
    cb50:	e24dd010 	sub	sp, sp, #16
    cb54:	e50b0008 	str	r0, [fp, #-8]
    cb58:	e50b100c 	str	r1, [fp, #-12]
    cb5c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:30
    {
        // jen precteme posledni zapsany znak
        if (num > 0)
    cb60:	e51b3010 	ldr	r3, [fp, #-16]
    cb64:	e3530000 	cmp	r3, #0
    cb68:	0a000007 	beq	cb8c <_ZN21CSegment_Display_File4ReadEPcj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:32
        {
            buffer[0] = sSegment_Display.Read();
    cb6c:	e59f0028 	ldr	r0, [pc, #40]	; cb9c <_ZN21CSegment_Display_File4ReadEPcj+0x54>
    cb70:	ebfff8ae 	bl	ae30 <_ZNK16CSegment_Display4ReadEv>
    cb74:	e1a03000 	mov	r3, r0
    cb78:	e1a02003 	mov	r2, r3
    cb7c:	e51b300c 	ldr	r3, [fp, #-12]
    cb80:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:33
            return 1;
    cb84:	e3a03001 	mov	r3, #1
    cb88:	ea000000 	b	cb90 <_ZN21CSegment_Display_File4ReadEPcj+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:36
        }

        return 0;
    cb8c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:37
    }
    cb90:	e1a00003 	mov	r0, r3
    cb94:	e24bd004 	sub	sp, fp, #4
    cb98:	e8bd8800 	pop	{fp, pc}
    cb9c:	00010bd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000cba0 <_ZN21CSegment_Display_File5WriteEPKcj>:
_ZN21CSegment_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:39

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    cba0:	e92d4800 	push	{fp, lr}
    cba4:	e28db004 	add	fp, sp, #4
    cba8:	e24dd018 	sub	sp, sp, #24
    cbac:	e50b0010 	str	r0, [fp, #-16]
    cbb0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    cbb4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42
    {
        // zapiseme vsechny znaky ze vstupu
        for (uint32_t i = 0; i < num; i++)
    cbb8:	e3a03000 	mov	r3, #0
    cbbc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 3)
    cbc0:	e51b2008 	ldr	r2, [fp, #-8]
    cbc4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbc8:	e1520003 	cmp	r2, r3
    cbcc:	2a00000a 	bcs	cbfc <_ZN21CSegment_Display_File5WriteEPKcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:43 (discriminator 2)
            sSegment_Display.Write(buffer[i]);
    cbd0:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    cbd4:	e51b3008 	ldr	r3, [fp, #-8]
    cbd8:	e0823003 	add	r3, r2, r3
    cbdc:	e5d33000 	ldrb	r3, [r3]
    cbe0:	e1a01003 	mov	r1, r3
    cbe4:	e59f0020 	ldr	r0, [pc, #32]	; cc0c <_ZN21CSegment_Display_File5WriteEPKcj+0x6c>
    cbe8:	ebfff86b 	bl	ad9c <_ZN16CSegment_Display5WriteEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cbec:	e51b3008 	ldr	r3, [fp, #-8]
    cbf0:	e2833001 	add	r3, r3, #1
    cbf4:	e50b3008 	str	r3, [fp, #-8]
    cbf8:	eafffff0 	b	cbc0 <_ZN21CSegment_Display_File5WriteEPKcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:45

        return num;
    cbfc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:46
    }
    cc00:	e1a00003 	mov	r0, r3
    cc04:	e24bd004 	sub	sp, fp, #4
    cc08:	e8bd8800 	pop	{fp, pc}
    cc0c:	00010bd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000cc10 <_ZN21CSegment_Display_File5CloseEv>:
_ZN21CSegment_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:48

    virtual bool Close() override
    cc10:	e92d4800 	push	{fp, lr}
    cc14:	e28db004 	add	fp, sp, #4
    cc18:	e24dd008 	sub	sp, sp, #8
    cc1c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:50
    {
        if (!mOpened)
    cc20:	e51b3008 	ldr	r3, [fp, #-8]
    cc24:	e5d33004 	ldrb	r3, [r3, #4]
    cc28:	e2233001 	eor	r3, r3, #1
    cc2c:	e6ef3073 	uxtb	r3, r3
    cc30:	e3530000 	cmp	r3, #0
    cc34:	0a000001 	beq	cc40 <_ZN21CSegment_Display_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:51
            return false;
    cc38:	e3a03000 	mov	r3, #0
    cc3c:	ea000005 	b	cc58 <_ZN21CSegment_Display_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:53

        sSegment_Display.Close();
    cc40:	e59f001c 	ldr	r0, [pc, #28]	; cc64 <_ZN21CSegment_Display_File5CloseEv+0x54>
    cc44:	ebfff836 	bl	ad24 <_ZN16CSegment_Display5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:54
        mOpened = false;
    cc48:	e51b3008 	ldr	r3, [fp, #-8]
    cc4c:	e3a02000 	mov	r2, #0
    cc50:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:56

        return true;
    cc54:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:57
    }
    cc58:	e1a00003 	mov	r0, r3
    cc5c:	e24bd004 	sub	sp, fp, #4
    cc60:	e8bd8800 	pop	{fp, pc}
    cc64:	00010bd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000cc68 <_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv>:
_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:59

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cc68:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cc6c:	e28db000 	add	fp, sp, #0
    cc70:	e24dd014 	sub	sp, sp, #20
    cc74:	e50b0008 	str	r0, [fp, #-8]
    cc78:	e50b100c 	str	r1, [fp, #-12]
    cc7c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:61
    {
        return false;
    cc80:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:62
    }
    cc84:	e1a00003 	mov	r0, r3
    cc88:	e28bd000 	add	sp, fp, #0
    cc8c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cc90:	e12fff1e 	bx	lr

0000cc94 <_ZN26CSegment_Display_FS_Driver11On_RegisterEv>:
_ZN26CSegment_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:68
};

class CSegment_Display_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    cc94:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cc98:	e28db000 	add	fp, sp, #0
    cc9c:	e24dd00c 	sub	sp, sp, #12
    cca0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:71
    {
        //
    }
    cca4:	e320f000 	nop	{0}
    cca8:	e28bd000 	add	sp, fp, #0
    ccac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ccb0:	e12fff1e 	bx	lr

0000ccb4 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:73

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    ccb4:	e92d4810 	push	{r4, fp, lr}
    ccb8:	e28db008 	add	fp, sp, #8
    ccbc:	e24dd01c 	sub	sp, sp, #28
    ccc0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    ccc4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    ccc8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:77
    {
        // segmentovy displej je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sSegment_Display.Open())
    cccc:	e59f0048 	ldr	r0, [pc, #72]	; cd1c <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x68>
    ccd0:	ebfff7f8 	bl	acb8 <_ZN16CSegment_Display4OpenEv>
    ccd4:	e1a03000 	mov	r3, r0
    ccd8:	e2233001 	eor	r3, r3, #1
    ccdc:	e6ef3073 	uxtb	r3, r3
    cce0:	e3530000 	cmp	r3, #0
    cce4:	0a000001 	beq	ccf0 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:78
            return nullptr;
    cce8:	e3a03000 	mov	r3, #0
    ccec:	ea000007 	b	cd10 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:80

        CSegment_Display_File* f = new CSegment_Display_File();
    ccf0:	e3a00008 	mov	r0, #8
    ccf4:	ebfffd89 	bl	c320 <_Znwj>
    ccf8:	e1a03000 	mov	r3, r0
    ccfc:	e1a04003 	mov	r4, r3
    cd00:	e1a00004 	mov	r0, r4
    cd04:	ebffff5f 	bl	ca88 <_ZN21CSegment_Display_FileC1Ev>
    cd08:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:82

        return f;
    cd0c:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:83
    }
    cd10:	e1a00003 	mov	r0, r3
    cd14:	e24bd008 	sub	sp, fp, #8
    cd18:	e8bd8810 	pop	{r4, fp, pc}
    cd1c:	00010bd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000cd20 <_ZN20CShift_Register_FileC1Ev>:
_ZN20CShift_Register_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:16
{
private:
    bool mOpened;

public:
    CShift_Register_File()
    cd20:	e92d4800 	push	{fp, lr}
    cd24:	e28db004 	add	fp, sp, #4
    cd28:	e24dd008 	sub	sp, sp, #8
    cd2c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:17
    : mOpened(true)
    cd30:	e51b3008 	ldr	r3, [fp, #-8]
    cd34:	e1a00003 	mov	r0, r3
    cd38:	ebfffd84 	bl	c350 <_ZN5IFileC1Ev>
    cd3c:	e59f2020 	ldr	r2, [pc, #32]	; cd64 <_ZN20CShift_Register_FileC1Ev+0x44>
    cd40:	e51b3008 	ldr	r3, [fp, #-8]
    cd44:	e5832000 	str	r2, [r3]
    cd48:	e51b3008 	ldr	r3, [fp, #-8]
    cd4c:	e3a02001 	mov	r2, #1
    cd50:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:20
    {
        //
    }
    cd54:	e51b3008 	ldr	r3, [fp, #-8]
    cd58:	e1a00003 	mov	r0, r3
    cd5c:	e24bd004 	sub	sp, fp, #4
    cd60:	e8bd8800 	pop	{fp, pc}
    cd64:	00010a2c 	andeq	r0, r1, ip, lsr #20

0000cd68 <_ZN20CShift_Register_FileD1Ev>:
_ZN20CShift_Register_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22

    ~CShift_Register_File()
    cd68:	e92d4800 	push	{fp, lr}
    cd6c:	e28db004 	add	fp, sp, #4
    cd70:	e24dd008 	sub	sp, sp, #8
    cd74:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    cd78:	e59f2028 	ldr	r2, [pc, #40]	; cda8 <_ZN20CShift_Register_FileD1Ev+0x40>
    cd7c:	e51b3008 	ldr	r3, [fp, #-8]
    cd80:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:24
        Close();
    cd84:	e51b0008 	ldr	r0, [fp, #-8]
    cd88:	eb00003b 	bl	ce7c <_ZN20CShift_Register_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    cd8c:	e51b3008 	ldr	r3, [fp, #-8]
    cd90:	e1a00003 	mov	r0, r3
    cd94:	ebfffd7a 	bl	c384 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    cd98:	e51b3008 	ldr	r3, [fp, #-8]
    cd9c:	e1a00003 	mov	r0, r3
    cda0:	e24bd004 	sub	sp, fp, #4
    cda4:	e8bd8800 	pop	{fp, pc}
    cda8:	00010a2c 	andeq	r0, r1, ip, lsr #20

0000cdac <_ZN20CShift_Register_FileD0Ev>:
_ZN20CShift_Register_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    cdac:	e92d4800 	push	{fp, lr}
    cdb0:	e28db004 	add	fp, sp, #4
    cdb4:	e24dd008 	sub	sp, sp, #8
    cdb8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    cdbc:	e51b0008 	ldr	r0, [fp, #-8]
    cdc0:	ebffffe8 	bl	cd68 <_ZN20CShift_Register_FileD1Ev>
    cdc4:	e3a01008 	mov	r1, #8
    cdc8:	e51b0008 	ldr	r0, [fp, #-8]
    cdcc:	ebfff74b 	bl	ab00 <_ZdlPvj>
    cdd0:	e51b3008 	ldr	r3, [fp, #-8]
    cdd4:	e1a00003 	mov	r0, r3
    cdd8:	e24bd004 	sub	sp, fp, #4
    cddc:	e8bd8800 	pop	{fp, pc}

0000cde0 <_ZN20CShift_Register_File4ReadEPcj>:
_ZN20CShift_Register_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:27

    virtual uint32_t Read(char* buffer, uint32_t num) override
    cde0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cde4:	e28db000 	add	fp, sp, #0
    cde8:	e24dd014 	sub	sp, sp, #20
    cdec:	e50b0008 	str	r0, [fp, #-8]
    cdf0:	e50b100c 	str	r1, [fp, #-12]
    cdf4:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:31
    {
        // neumime cist z posuvneho registru (samozrejme by to bylo mozne, jen ho tak nemame zapojeny)

        return 0;
    cdf8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:32
    }
    cdfc:	e1a00003 	mov	r0, r3
    ce00:	e28bd000 	add	sp, fp, #0
    ce04:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ce08:	e12fff1e 	bx	lr

0000ce0c <_ZN20CShift_Register_File5WriteEPKcj>:
_ZN20CShift_Register_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:34

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    ce0c:	e92d4800 	push	{fp, lr}
    ce10:	e28db004 	add	fp, sp, #4
    ce14:	e24dd018 	sub	sp, sp, #24
    ce18:	e50b0010 	str	r0, [fp, #-16]
    ce1c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    ce20:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38
    {
        // umime jen znakovy pristup v tomto druhu souboru (tedy neumime nasouvat jednotlive bity)
        // teoreticky muze mit shift registr vice nez 8 bitu, tak proste nasuneme vsechno ze vstupu
        for (uint32_t i = 0; i < num; i++)
    ce24:	e3a03000 	mov	r3, #0
    ce28:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 3)
    ce2c:	e51b2008 	ldr	r2, [fp, #-8]
    ce30:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ce34:	e1520003 	cmp	r2, r3
    ce38:	2a00000a 	bcs	ce68 <_ZN20CShift_Register_File5WriteEPKcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:39 (discriminator 2)
            sShift_Register.Shift_In(static_cast<uint8_t>(buffer[i]));
    ce3c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    ce40:	e51b3008 	ldr	r3, [fp, #-8]
    ce44:	e0823003 	add	r3, r2, r3
    ce48:	e5d33000 	ldrb	r3, [r3]
    ce4c:	e1a01003 	mov	r1, r3
    ce50:	e59f0020 	ldr	r0, [pc, #32]	; ce78 <_ZN20CShift_Register_File5WriteEPKcj+0x6c>
    ce54:	ebfff91c 	bl	b2cc <_ZN15CShift_Register8Shift_InEh>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    ce58:	e51b3008 	ldr	r3, [fp, #-8]
    ce5c:	e2833001 	add	r3, r3, #1
    ce60:	e50b3008 	str	r3, [fp, #-8]
    ce64:	eafffff0 	b	ce2c <_ZN20CShift_Register_File5WriteEPKcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:41

        return num;
    ce68:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:42
    }
    ce6c:	e1a00003 	mov	r0, r3
    ce70:	e24bd004 	sub	sp, fp, #4
    ce74:	e8bd8800 	pop	{fp, pc}
    ce78:	00010bd4 	ldrdeq	r0, [r1], -r4

0000ce7c <_ZN20CShift_Register_File5CloseEv>:
_ZN20CShift_Register_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:44

    virtual bool Close() override
    ce7c:	e92d4800 	push	{fp, lr}
    ce80:	e28db004 	add	fp, sp, #4
    ce84:	e24dd008 	sub	sp, sp, #8
    ce88:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:46
    {
        if (!mOpened)
    ce8c:	e51b3008 	ldr	r3, [fp, #-8]
    ce90:	e5d33004 	ldrb	r3, [r3, #4]
    ce94:	e2233001 	eor	r3, r3, #1
    ce98:	e6ef3073 	uxtb	r3, r3
    ce9c:	e3530000 	cmp	r3, #0
    cea0:	0a000001 	beq	ceac <_ZN20CShift_Register_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:47
            return false;
    cea4:	e3a03000 	mov	r3, #0
    cea8:	ea000005 	b	cec4 <_ZN20CShift_Register_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:49

        sShift_Register.Close();
    ceac:	e59f001c 	ldr	r0, [pc, #28]	; ced0 <_ZN20CShift_Register_File5CloseEv+0x54>
    ceb0:	ebfff87c 	bl	b0a8 <_ZN15CShift_Register5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:50
        mOpened = false;
    ceb4:	e51b3008 	ldr	r3, [fp, #-8]
    ceb8:	e3a02000 	mov	r2, #0
    cebc:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:52

        return true;
    cec0:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:53
    }
    cec4:	e1a00003 	mov	r0, r3
    cec8:	e24bd004 	sub	sp, fp, #4
    cecc:	e8bd8800 	pop	{fp, pc}
    ced0:	00010bd4 	ldrdeq	r0, [r1], -r4

0000ced4 <_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv>:
_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:55

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    ced4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ced8:	e28db000 	add	fp, sp, #0
    cedc:	e24dd014 	sub	sp, sp, #20
    cee0:	e50b0008 	str	r0, [fp, #-8]
    cee4:	e50b100c 	str	r1, [fp, #-12]
    cee8:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:57
    {
        return false;
    ceec:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:58
    }
    cef0:	e1a00003 	mov	r0, r3
    cef4:	e28bd000 	add	sp, fp, #0
    cef8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cefc:	e12fff1e 	bx	lr

0000cf00 <_ZN25CShift_Register_FS_Driver11On_RegisterEv>:
_ZN25CShift_Register_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:64
};

class CShift_Register_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    cf00:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cf04:	e28db000 	add	fp, sp, #0
    cf08:	e24dd00c 	sub	sp, sp, #12
    cf0c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:67
    {
        //
    }
    cf10:	e320f000 	nop	{0}
    cf14:	e28bd000 	add	sp, fp, #0
    cf18:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cf1c:	e12fff1e 	bx	lr

0000cf20 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:69

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cf20:	e92d4810 	push	{r4, fp, lr}
    cf24:	e28db008 	add	fp, sp, #8
    cf28:	e24dd01c 	sub	sp, sp, #28
    cf2c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    cf30:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    cf34:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:73
    {
        // shift register je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sShift_Register.Open())
    cf38:	e59f0048 	ldr	r0, [pc, #72]	; cf88 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x68>
    cf3c:	ebfff7fc 	bl	af34 <_ZN15CShift_Register4OpenEv>
    cf40:	e1a03000 	mov	r3, r0
    cf44:	e2233001 	eor	r3, r3, #1
    cf48:	e6ef3073 	uxtb	r3, r3
    cf4c:	e3530000 	cmp	r3, #0
    cf50:	0a000001 	beq	cf5c <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:74
            return nullptr;
    cf54:	e3a03000 	mov	r3, #0
    cf58:	ea000007 	b	cf7c <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:76

        CShift_Register_File* f = new CShift_Register_File();
    cf5c:	e3a00008 	mov	r0, #8
    cf60:	ebfffcee 	bl	c320 <_Znwj>
    cf64:	e1a03000 	mov	r3, r0
    cf68:	e1a04003 	mov	r4, r3
    cf6c:	e1a00004 	mov	r0, r4
    cf70:	ebffff6a 	bl	cd20 <_ZN20CShift_Register_FileC1Ev>
    cf74:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:78

        return f;
    cf78:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:79
    }
    cf7c:	e1a00003 	mov	r0, r3
    cf80:	e24bd008 	sub	sp, fp, #8
    cf84:	e8bd8810 	pop	{r4, fp, pc}
    cf88:	00010bd4 	ldrdeq	r0, [r1], -r4

0000cf8c <_ZN10CTRNG_FileC1Ev>:
_ZN10CTRNG_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:16
{
private:
    bool mOpened;

public:
    CTRNG_File()
    cf8c:	e92d4800 	push	{fp, lr}
    cf90:	e28db004 	add	fp, sp, #4
    cf94:	e24dd008 	sub	sp, sp, #8
    cf98:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:17
    {
    cf9c:	e51b3008 	ldr	r3, [fp, #-8]
    cfa0:	e1a00003 	mov	r0, r3
    cfa4:	ebfffce9 	bl	c350 <_ZN5IFileC1Ev>
    cfa8:	e59f2014 	ldr	r2, [pc, #20]	; cfc4 <_ZN10CTRNG_FileC1Ev+0x38>
    cfac:	e51b3008 	ldr	r3, [fp, #-8]
    cfb0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:19
        //
    }
    cfb4:	e51b3008 	ldr	r3, [fp, #-8]
    cfb8:	e1a00003 	mov	r0, r3
    cfbc:	e24bd004 	sub	sp, fp, #4
    cfc0:	e8bd8800 	pop	{fp, pc}
    cfc4:	000109fc 	strdeq	r0, [r1], -ip

0000cfc8 <_ZN10CTRNG_FileD1Ev>:
_ZN10CTRNG_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21

    ~CTRNG_File()
    cfc8:	e92d4800 	push	{fp, lr}
    cfcc:	e28db004 	add	fp, sp, #4
    cfd0:	e24dd008 	sub	sp, sp, #8
    cfd4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    cfd8:	e59f2028 	ldr	r2, [pc, #40]	; d008 <_ZN10CTRNG_FileD1Ev+0x40>
    cfdc:	e51b3008 	ldr	r3, [fp, #-8]
    cfe0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:23
        Close();
    cfe4:	e51b0008 	ldr	r0, [fp, #-8]
    cfe8:	eb000059 	bl	d154 <_ZN10CTRNG_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    cfec:	e51b3008 	ldr	r3, [fp, #-8]
    cff0:	e1a00003 	mov	r0, r3
    cff4:	ebfffce2 	bl	c384 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    cff8:	e51b3008 	ldr	r3, [fp, #-8]
    cffc:	e1a00003 	mov	r0, r3
    d000:	e24bd004 	sub	sp, fp, #4
    d004:	e8bd8800 	pop	{fp, pc}
    d008:	000109fc 	strdeq	r0, [r1], -ip

0000d00c <_ZN10CTRNG_FileD0Ev>:
_ZN10CTRNG_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21
    ~CTRNG_File()
    d00c:	e92d4800 	push	{fp, lr}
    d010:	e28db004 	add	fp, sp, #4
    d014:	e24dd008 	sub	sp, sp, #8
    d018:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    d01c:	e51b0008 	ldr	r0, [fp, #-8]
    d020:	ebffffe8 	bl	cfc8 <_ZN10CTRNG_FileD1Ev>
    d024:	e3a01008 	mov	r1, #8
    d028:	e51b0008 	ldr	r0, [fp, #-8]
    d02c:	ebfff6b3 	bl	ab00 <_ZdlPvj>
    d030:	e51b3008 	ldr	r3, [fp, #-8]
    d034:	e1a00003 	mov	r0, r3
    d038:	e24bd004 	sub	sp, fp, #4
    d03c:	e8bd8800 	pop	{fp, pc}

0000d040 <_ZN10CTRNG_File4ReadEPcj>:
_ZN10CTRNG_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:26

    virtual uint32_t Read(char* buffer, uint32_t num) override
    d040:	e92d4810 	push	{r4, fp, lr}
    d044:	e28db008 	add	fp, sp, #8
    d048:	e24dd024 	sub	sp, sp, #36	; 0x24
    d04c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    d050:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    d054:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:28
    {
        const uint32_t wcount = num / 4;
    d058:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    d05c:	e1a03123 	lsr	r3, r3, #2
    d060:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:29
        uint32_t* wbuf = reinterpret_cast<uint32_t*>(buffer);
    d064:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    d068:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30
        for (int i = 0; i < wcount; i++)
    d06c:	e3a03000 	mov	r3, #0
    d070:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 3)
    d074:	e51b3010 	ldr	r3, [fp, #-16]
    d078:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    d07c:	e1520003 	cmp	r2, r3
    d080:	9a00000b 	bls	d0b4 <_ZN10CTRNG_File4ReadEPcj+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:31 (discriminator 2)
            wbuf[i] = sTRNG.Get_Random_Number();
    d084:	e51b3010 	ldr	r3, [fp, #-16]
    d088:	e1a03103 	lsl	r3, r3, #2
    d08c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    d090:	e0824003 	add	r4, r2, r3
    d094:	e59f0088 	ldr	r0, [pc, #136]	; d124 <_ZN10CTRNG_File4ReadEPcj+0xe4>
    d098:	ebfffa17 	bl	b8fc <_ZN5CTRNG17Get_Random_NumberEv>
    d09c:	e1a03000 	mov	r3, r0
    d0a0:	e5843000 	str	r3, [r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 2)
        for (int i = 0; i < wcount; i++)
    d0a4:	e51b3010 	ldr	r3, [fp, #-16]
    d0a8:	e2833001 	add	r3, r3, #1
    d0ac:	e50b3010 	str	r3, [fp, #-16]
    d0b0:	eaffffef 	b	d074 <_ZN10CTRNG_File4ReadEPcj+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:33

        if (wcount * 4 != num)
    d0b4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    d0b8:	e1a03103 	lsl	r3, r3, #2
    d0bc:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
    d0c0:	e1520003 	cmp	r2, r3
    d0c4:	0a000012 	beq	d114 <_ZN10CTRNG_File4ReadEPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37
        {
            // tohle by se dalo vyresit jednim generovanim a posunem na pozici, ale pro ted staci takhle
            // ted tomu trochu "krademe" entropii
            for (int i = wcount * 4; i < num; i++)
    d0c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    d0cc:	e1a03103 	lsl	r3, r3, #2
    d0d0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 3)
    d0d4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d0d8:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
    d0dc:	e1520003 	cmp	r2, r3
    d0e0:	9a00000b 	bls	d114 <_ZN10CTRNG_File4ReadEPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:38 (discriminator 2)
                buffer[i] = static_cast<uint8_t>(sTRNG.Get_Random_Number());
    d0e4:	e59f0038 	ldr	r0, [pc, #56]	; d124 <_ZN10CTRNG_File4ReadEPcj+0xe4>
    d0e8:	ebfffa03 	bl	b8fc <_ZN5CTRNG17Get_Random_NumberEv>
    d0ec:	e1a01000 	mov	r1, r0
    d0f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d0f4:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
    d0f8:	e0823003 	add	r3, r2, r3
    d0fc:	e6ef2071 	uxtb	r2, r1
    d100:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 2)
            for (int i = wcount * 4; i < num; i++)
    d104:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d108:	e2833001 	add	r3, r3, #1
    d10c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    d110:	eaffffef 	b	d0d4 <_ZN10CTRNG_File4ReadEPcj+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:41
        }

        return 0;
    d114:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:42
    }
    d118:	e1a00003 	mov	r0, r3
    d11c:	e24bd008 	sub	sp, fp, #8
    d120:	e8bd8810 	pop	{r4, fp, pc}
    d124:	00010bec 	andeq	r0, r1, ip, ror #23

0000d128 <_ZN10CTRNG_File5WriteEPKcj>:
_ZN10CTRNG_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:44

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    d128:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d12c:	e28db000 	add	fp, sp, #0
    d130:	e24dd014 	sub	sp, sp, #20
    d134:	e50b0008 	str	r0, [fp, #-8]
    d138:	e50b100c 	str	r1, [fp, #-12]
    d13c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:48
    {
        // do TRNG nelze zapisovat

        return 0;
    d140:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:49
    }
    d144:	e1a00003 	mov	r0, r3
    d148:	e28bd000 	add	sp, fp, #0
    d14c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d150:	e12fff1e 	bx	lr

0000d154 <_ZN10CTRNG_File5CloseEv>:
_ZN10CTRNG_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:51

    virtual bool Close() override
    d154:	e92d4800 	push	{fp, lr}
    d158:	e28db004 	add	fp, sp, #4
    d15c:	e24dd008 	sub	sp, sp, #8
    d160:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:53
    {
        if (!mOpened)
    d164:	e51b3008 	ldr	r3, [fp, #-8]
    d168:	e5d33004 	ldrb	r3, [r3, #4]
    d16c:	e2233001 	eor	r3, r3, #1
    d170:	e6ef3073 	uxtb	r3, r3
    d174:	e3530000 	cmp	r3, #0
    d178:	0a000001 	beq	d184 <_ZN10CTRNG_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:54
            return false;
    d17c:	e3a03000 	mov	r3, #0
    d180:	ea000005 	b	d19c <_ZN10CTRNG_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:56

        sTRNG.Close();
    d184:	e59f001c 	ldr	r0, [pc, #28]	; d1a8 <_ZN10CTRNG_File5CloseEv+0x54>
    d188:	ebfff9b3 	bl	b85c <_ZN5CTRNG5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:57
        mOpened = false;
    d18c:	e51b3008 	ldr	r3, [fp, #-8]
    d190:	e3a02000 	mov	r2, #0
    d194:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:59

        return true;
    d198:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:60
    }
    d19c:	e1a00003 	mov	r0, r3
    d1a0:	e24bd004 	sub	sp, fp, #4
    d1a4:	e8bd8800 	pop	{fp, pc}
    d1a8:	00010bec 	andeq	r0, r1, ip, ror #23

0000d1ac <_ZN10CTRNG_File5IOCtlE16NIOCtl_OperationPv>:
_ZN10CTRNG_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:62

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    d1ac:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d1b0:	e28db000 	add	fp, sp, #0
    d1b4:	e24dd014 	sub	sp, sp, #20
    d1b8:	e50b0008 	str	r0, [fp, #-8]
    d1bc:	e50b100c 	str	r1, [fp, #-12]
    d1c0:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:64
    {
        return false;
    d1c4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:65
    }
    d1c8:	e1a00003 	mov	r0, r3
    d1cc:	e28bd000 	add	sp, fp, #0
    d1d0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d1d4:	e12fff1e 	bx	lr

0000d1d8 <_ZN15CTRNG_FS_Driver11On_RegisterEv>:
_ZN15CTRNG_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:71
};

class CTRNG_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    d1d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d1dc:	e28db000 	add	fp, sp, #0
    d1e0:	e24dd00c 	sub	sp, sp, #12
    d1e4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:74
    {
        //
    }
    d1e8:	e320f000 	nop	{0}
    d1ec:	e28bd000 	add	sp, fp, #0
    d1f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d1f4:	e12fff1e 	bx	lr

0000d1f8 <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:76

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    d1f8:	e92d4810 	push	{r4, fp, lr}
    d1fc:	e28db008 	add	fp, sp, #8
    d200:	e24dd01c 	sub	sp, sp, #28
    d204:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d208:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    d20c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:80
    {
        // TRNG je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sTRNG.Open(mode == NFile_Open_Mode::Read_Write)) // read_write povazujeme za "exkluzivni" mod
    d210:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    d214:	e3530002 	cmp	r3, #2
    d218:	03a03001 	moveq	r3, #1
    d21c:	13a03000 	movne	r3, #0
    d220:	e6ef3073 	uxtb	r3, r3
    d224:	e1a01003 	mov	r1, r3
    d228:	e59f0048 	ldr	r0, [pc, #72]	; d278 <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x80>
    d22c:	ebfff950 	bl	b774 <_ZN5CTRNG4OpenEb>
    d230:	e1a03000 	mov	r3, r0
    d234:	e2233001 	eor	r3, r3, #1
    d238:	e6ef3073 	uxtb	r3, r3
    d23c:	e3530000 	cmp	r3, #0
    d240:	0a000001 	beq	d24c <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:81
            return nullptr;
    d244:	e3a03000 	mov	r3, #0
    d248:	ea000007 	b	d26c <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:83

        CTRNG_File* f = new CTRNG_File();
    d24c:	e3a00008 	mov	r0, #8
    d250:	ebfffc32 	bl	c320 <_Znwj>
    d254:	e1a03000 	mov	r3, r0
    d258:	e1a04003 	mov	r4, r3
    d25c:	e1a00004 	mov	r0, r4
    d260:	ebffff49 	bl	cf8c <_ZN10CTRNG_FileC1Ev>
    d264:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:85

        return f;
    d268:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:86
    }
    d26c:	e1a00003 	mov	r0, r3
    d270:	e24bd008 	sub	sp, fp, #8
    d274:	e8bd8810 	pop	{r4, fp, pc}
    d278:	00010bec 	andeq	r0, r1, ip, ror #23

0000d27c <_ZN18COLED_Display_FileC1Ev>:
_ZN18COLED_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:17
{
private:
    bool mOpened;

public:
    COLED_Display_File()
    d27c:	e92d4800 	push	{fp, lr}
    d280:	e28db004 	add	fp, sp, #4
    d284:	e24dd008 	sub	sp, sp, #8
    d288:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:18
    : mOpened(true)
    d28c:	e51b3008 	ldr	r3, [fp, #-8]
    d290:	e1a00003 	mov	r0, r3
    d294:	ebfffc2d 	bl	c350 <_ZN5IFileC1Ev>
    d298:	e59f2020 	ldr	r2, [pc, #32]	; d2c0 <_ZN18COLED_Display_FileC1Ev+0x44>
    d29c:	e51b3008 	ldr	r3, [fp, #-8]
    d2a0:	e5832000 	str	r2, [r3]
    d2a4:	e51b3008 	ldr	r3, [fp, #-8]
    d2a8:	e3a02001 	mov	r2, #1
    d2ac:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:21
    {
        //
    }
    d2b0:	e51b3008 	ldr	r3, [fp, #-8]
    d2b4:	e1a00003 	mov	r0, r3
    d2b8:	e24bd004 	sub	sp, fp, #4
    d2bc:	e8bd8800 	pop	{fp, pc}
    d2c0:	000109cc 	andeq	r0, r1, ip, asr #19

0000d2c4 <_ZN18COLED_Display_FileD1Ev>:
_ZN18COLED_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:23

    ~COLED_Display_File()
    d2c4:	e92d4800 	push	{fp, lr}
    d2c8:	e28db004 	add	fp, sp, #4
    d2cc:	e24dd008 	sub	sp, sp, #8
    d2d0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:24
    {
    d2d4:	e59f2028 	ldr	r2, [pc, #40]	; d304 <_ZN18COLED_Display_FileD1Ev+0x40>
    d2d8:	e51b3008 	ldr	r3, [fp, #-8]
    d2dc:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:25
        Close();
    d2e0:	e51b0008 	ldr	r0, [fp, #-8]
    d2e4:	eb00002e 	bl	d3a4 <_ZN18COLED_Display_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:24
    {
    d2e8:	e51b3008 	ldr	r3, [fp, #-8]
    d2ec:	e1a00003 	mov	r0, r3
    d2f0:	ebfffc23 	bl	c384 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:26
    }
    d2f4:	e51b3008 	ldr	r3, [fp, #-8]
    d2f8:	e1a00003 	mov	r0, r3
    d2fc:	e24bd004 	sub	sp, fp, #4
    d300:	e8bd8800 	pop	{fp, pc}
    d304:	000109cc 	andeq	r0, r1, ip, asr #19

0000d308 <_ZN18COLED_Display_FileD0Ev>:
_ZN18COLED_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:23
    ~COLED_Display_File()
    d308:	e92d4800 	push	{fp, lr}
    d30c:	e28db004 	add	fp, sp, #4
    d310:	e24dd008 	sub	sp, sp, #8
    d314:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:26
    }
    d318:	e51b0008 	ldr	r0, [fp, #-8]
    d31c:	ebffffe8 	bl	d2c4 <_ZN18COLED_Display_FileD1Ev>
    d320:	e3a01008 	mov	r1, #8
    d324:	e51b0008 	ldr	r0, [fp, #-8]
    d328:	ebfff5f4 	bl	ab00 <_ZdlPvj>
    d32c:	e51b3008 	ldr	r3, [fp, #-8]
    d330:	e1a00003 	mov	r0, r3
    d334:	e24bd004 	sub	sp, fp, #4
    d338:	e8bd8800 	pop	{fp, pc}

0000d33c <_ZN18COLED_Display_File4ReadEPcj>:
_ZN18COLED_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:28

    virtual uint32_t Read(char* buffer, uint32_t num) override
    d33c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d340:	e28db000 	add	fp, sp, #0
    d344:	e24dd014 	sub	sp, sp, #20
    d348:	e50b0008 	str	r0, [fp, #-8]
    d34c:	e50b100c 	str	r1, [fp, #-12]
    d350:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:32
    {
        // neumime cist zatim - maximalne pro odezvy v ramci protokolu, ale to pro ted neni dulezite

        return 0;
    d354:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:33
    }
    d358:	e1a00003 	mov	r0, r3
    d35c:	e28bd000 	add	sp, fp, #0
    d360:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d364:	e12fff1e 	bx	lr

0000d368 <_ZN18COLED_Display_File5WriteEPKcj>:
_ZN18COLED_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:35

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    d368:	e92d4800 	push	{fp, lr}
    d36c:	e28db004 	add	fp, sp, #4
    d370:	e24dd010 	sub	sp, sp, #16
    d374:	e50b0008 	str	r0, [fp, #-8]
    d378:	e50b100c 	str	r1, [fp, #-12]
    d37c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:37
    {
        sDisplay_SSD1306.Process_External_Command(buffer, num);
    d380:	e51b2010 	ldr	r2, [fp, #-16]
    d384:	e51b100c 	ldr	r1, [fp, #-12]
    d388:	e59f0010 	ldr	r0, [pc, #16]	; d3a0 <_ZN18COLED_Display_File5WriteEPKcj+0x38>
    d38c:	ebfff493 	bl	a5e0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:39

        return num;
    d390:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:40
    }
    d394:	e1a00003 	mov	r0, r3
    d398:	e24bd004 	sub	sp, fp, #4
    d39c:	e8bd8800 	pop	{fp, pc}
    d3a0:	00010bbc 			; <UNDEFINED> instruction: 0x00010bbc

0000d3a4 <_ZN18COLED_Display_File5CloseEv>:
_ZN18COLED_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:42

    virtual bool Close() override
    d3a4:	e92d4800 	push	{fp, lr}
    d3a8:	e28db004 	add	fp, sp, #4
    d3ac:	e24dd008 	sub	sp, sp, #8
    d3b0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:44
    {
        if (!mOpened)
    d3b4:	e51b3008 	ldr	r3, [fp, #-8]
    d3b8:	e5d33004 	ldrb	r3, [r3, #4]
    d3bc:	e2233001 	eor	r3, r3, #1
    d3c0:	e6ef3073 	uxtb	r3, r3
    d3c4:	e3530000 	cmp	r3, #0
    d3c8:	0a000001 	beq	d3d4 <_ZN18COLED_Display_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:45
            return false;
    d3cc:	e3a03000 	mov	r3, #0
    d3d0:	ea000005 	b	d3ec <_ZN18COLED_Display_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:47

        sDisplay_SSD1306.Close();
    d3d4:	e59f001c 	ldr	r0, [pc, #28]	; d3f8 <_ZN18COLED_Display_File5CloseEv+0x54>
    d3d8:	ebfff335 	bl	a0b4 <_ZN16CDisplay_SSD13065CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:48
        mOpened = false;
    d3dc:	e51b3008 	ldr	r3, [fp, #-8]
    d3e0:	e3a02000 	mov	r2, #0
    d3e4:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:50

        return true;
    d3e8:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:51
    }
    d3ec:	e1a00003 	mov	r0, r3
    d3f0:	e24bd004 	sub	sp, fp, #4
    d3f4:	e8bd8800 	pop	{fp, pc}
    d3f8:	00010bbc 			; <UNDEFINED> instruction: 0x00010bbc

0000d3fc <_ZN18COLED_Display_File5IOCtlE16NIOCtl_OperationPv>:
_ZN18COLED_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:53

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    d3fc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d400:	e28db000 	add	fp, sp, #0
    d404:	e24dd014 	sub	sp, sp, #20
    d408:	e50b0008 	str	r0, [fp, #-8]
    d40c:	e50b100c 	str	r1, [fp, #-12]
    d410:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:55
    {
        return false;
    d414:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:56
    }
    d418:	e1a00003 	mov	r0, r3
    d41c:	e28bd000 	add	sp, fp, #0
    d420:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d424:	e12fff1e 	bx	lr

0000d428 <_ZN23COLED_Display_FS_Driver11On_RegisterEv>:
_ZN23COLED_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:62
};

class COLED_Display_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    d428:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d42c:	e28db000 	add	fp, sp, #0
    d430:	e24dd00c 	sub	sp, sp, #12
    d434:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:65
    {
        //
    }
    d438:	e320f000 	nop	{0}
    d43c:	e28bd000 	add	sp, fp, #0
    d440:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d444:	e12fff1e 	bx	lr

0000d448 <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:67

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    d448:	e92d4810 	push	{r4, fp, lr}
    d44c:	e28db008 	add	fp, sp, #8
    d450:	e24dd01c 	sub	sp, sp, #28
    d454:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d458:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    d45c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:71
    {
        // OLED displej je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sDisplay_SSD1306.Open(128, 32)) // velikost by se dala nastavovat jinudy, napr. ioctl nebo protokolem; pro
    d460:	e3a02020 	mov	r2, #32
    d464:	e3a01080 	mov	r1, #128	; 0x80
    d468:	e59f0048 	ldr	r0, [pc, #72]	; d4b8 <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x70>
    d46c:	ebfff11e 	bl	98ec <_ZN16CDisplay_SSD13064OpenEii>
    d470:	e1a03000 	mov	r3, r0
    d474:	e2233001 	eor	r3, r3, #1
    d478:	e6ef3073 	uxtb	r3, r3
    d47c:	e3530000 	cmp	r3, #0
    d480:	0a000001 	beq	d48c <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:73
                                             // jednoduchost to zkratime takhle
            return nullptr;
    d484:	e3a03000 	mov	r3, #0
    d488:	ea000007 	b	d4ac <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:75

        COLED_Display_File* f = new COLED_Display_File();
    d48c:	e3a00008 	mov	r0, #8
    d490:	ebfffba2 	bl	c320 <_Znwj>
    d494:	e1a03000 	mov	r3, r0
    d498:	e1a04003 	mov	r4, r3
    d49c:	e1a00004 	mov	r0, r4
    d4a0:	ebffff75 	bl	d27c <_ZN18COLED_Display_FileC1Ev>
    d4a4:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:77

        return f;
    d4a8:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:78
    }
    d4ac:	e1a00003 	mov	r0, r3
    d4b0:	e24bd008 	sub	sp, fp, #8
    d4b4:	e8bd8810 	pop	{r4, fp, pc}
    d4b8:	00010bbc 			; <UNDEFINED> instruction: 0x00010bbc

0000d4bc <_internal_software_interrupt_handler>:
_internal_software_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:19

extern "C" TSWI_Result* _internal_software_interrupt_handler(uint32_t register r0,
                                                             uint32_t register r1,
                                                             uint32_t register r2,
                                                             uint32_t register /*r3*/ service_identifier)
{
    d4bc:	e92d4800 	push	{fp, lr}
    d4c0:	e28db004 	add	fp, sp, #4
    d4c4:	e24dd010 	sub	sp, sp, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:21
    // facility jsou horni 2 bity, zbytek je cislo sluzby v dane facility
    NSWI_Facility facility = static_cast<NSWI_Facility>(service_identifier >> 6);
    d4c8:	e1a0c323 	lsr	ip, r3, #6
    d4cc:	e50bc008 	str	ip, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:23

    switch (facility)
    d4d0:	e51bc008 	ldr	ip, [fp, #-8]
    d4d4:	e35c0000 	cmp	ip, #0
    d4d8:	0a000003 	beq	d4ec <_internal_software_interrupt_handler+0x30>
    d4dc:	e51bc008 	ldr	ip, [fp, #-8]
    d4e0:	e35c0001 	cmp	ip, #1
    d4e4:	0a00000b 	beq	d518 <_internal_software_interrupt_handler+0x5c>
    d4e8:	ea000015 	b	d544 <_internal_software_interrupt_handler+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:26
    {
        case NSWI_Facility::Process:
            sProcessMgr.Handle_Process_SWI(static_cast<NSWI_Process_Service>(service_identifier & 0x3F),
    d4ec:	e203303f 	and	r3, r3, #63	; 0x3f
    d4f0:	e1a0c003 	mov	ip, r3
    d4f4:	e59f3058 	ldr	r3, [pc, #88]	; d554 <_internal_software_interrupt_handler+0x98>
    d4f8:	e58d3004 	str	r3, [sp, #4]
    d4fc:	e58d2000 	str	r2, [sp]
    d500:	e1a03001 	mov	r3, r1
    d504:	e1a02000 	mov	r2, r0
    d508:	e1a0100c 	mov	r1, ip
    d50c:	e59f0044 	ldr	r0, [pc, #68]	; d558 <_internal_software_interrupt_handler+0x9c>
    d510:	eb000423 	bl	e5a4 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:31
                                           r0,
                                           r1,
                                           r2,
                                           _SWI_Result);
            break;
    d514:	ea00000a 	b	d544 <_internal_software_interrupt_handler+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:33
        case NSWI_Facility::Filesystem:
            sProcessMgr.Handle_Filesystem_SWI(static_cast<NSWI_Filesystem_Service>(service_identifier & 0x3F),
    d518:	e203303f 	and	r3, r3, #63	; 0x3f
    d51c:	e1a0c003 	mov	ip, r3
    d520:	e59f302c 	ldr	r3, [pc, #44]	; d554 <_internal_software_interrupt_handler+0x98>
    d524:	e58d3004 	str	r3, [sp, #4]
    d528:	e58d2000 	str	r2, [sp]
    d52c:	e1a03001 	mov	r3, r1
    d530:	e1a02000 	mov	r2, r0
    d534:	e1a0100c 	mov	r1, ip
    d538:	e59f0018 	ldr	r0, [pc, #24]	; d558 <_internal_software_interrupt_handler+0x9c>
    d53c:	eb000431 	bl	e608 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:38
                                              r0,
                                              r1,
                                              r2,
                                              _SWI_Result);
            break;
    d540:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:41
    }

    return &_SWI_Result;
    d544:	e59f3008 	ldr	r3, [pc, #8]	; d554 <_internal_software_interrupt_handler+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:42
}
    d548:	e1a00003 	mov	r0, r3
    d54c:	e24bd004 	sub	sp, fp, #4
    d550:	e8bd8800 	pop	{fp, pc}
    d554:	00010c88 	andeq	r0, r1, r8, lsl #25
    d558:	00011c94 	muleq	r1, r4, ip

0000d55c <_internal_irq_handler>:
_internal_irq_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:45

extern "C" void _internal_irq_handler()
{
    d55c:	e92d4800 	push	{fp, lr}
    d560:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:50
    // jelikoz ARM nerozlisuje zdroje IRQ implicitne, ani nezarucuje, ze se navzajen nemaskuji, musime
    // projit vsechny mozne zdroje a podivat se (poll), zda nebylo vyvolano preruseni

    // casovac
    if (sTimer.Is_Timer_IRQ_Pending())
    d564:	e59f001c 	ldr	r0, [pc, #28]	; d588 <_internal_irq_handler+0x2c>
    d568:	ebfff845 	bl	b684 <_ZN6CTimer20Is_Timer_IRQ_PendingEv>
    d56c:	e1a03000 	mov	r3, r0
    d570:	e3530000 	cmp	r3, #0
    d574:	0a000001 	beq	d580 <_internal_irq_handler+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:51
        sTimer.IRQ_Callback();
    d578:	e59f0008 	ldr	r0, [pc, #8]	; d588 <_internal_irq_handler+0x2c>
    d57c:	ebfff82c 	bl	b634 <_ZN6CTimer12IRQ_CallbackEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:52
}
    d580:	e320f000 	nop	{0}
    d584:	e8bd8800 	pop	{fp, pc}
    d588:	00010be4 	andeq	r0, r1, r4, ror #23

0000d58c <fast_interrupt_handler>:
fast_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:55

extern "C" void __attribute__((interrupt("FIQ"))) fast_interrupt_handler()
{
    d58c:	e24db004 	sub	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:57
    // zatim nepouzivame
}
    d590:	e320f000 	nop	{0}
    d594:	e28bd004 	add	sp, fp, #4
    d598:	e25ef004 	subs	pc, lr, #4

0000d59c <_ZN21CInterrupt_ControllerC1Em>:
_ZN21CInterrupt_ControllerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:61

// implementace controlleru

CInterrupt_Controller::CInterrupt_Controller(unsigned long base)
    d59c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d5a0:	e28db000 	add	fp, sp, #0
    d5a4:	e24dd00c 	sub	sp, sp, #12
    d5a8:	e50b0008 	str	r0, [fp, #-8]
    d5ac:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:62
: mInterrupt_Regs(reinterpret_cast<unsigned int*>(base))
    d5b0:	e51b200c 	ldr	r2, [fp, #-12]
    d5b4:	e51b3008 	ldr	r3, [fp, #-8]
    d5b8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:65
{
    //
}
    d5bc:	e51b3008 	ldr	r3, [fp, #-8]
    d5c0:	e1a00003 	mov	r0, r3
    d5c4:	e28bd000 	add	sp, fp, #0
    d5c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d5cc:	e12fff1e 	bx	lr

0000d5d0 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>:
_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:68

volatile unsigned int& CInterrupt_Controller::Regs(hal::Interrupt_Controller_Reg reg)
{
    d5d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d5d4:	e28db000 	add	fp, sp, #0
    d5d8:	e24dd00c 	sub	sp, sp, #12
    d5dc:	e50b0008 	str	r0, [fp, #-8]
    d5e0:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:69
    return mInterrupt_Regs[static_cast<unsigned int>(reg)];
    d5e4:	e51b3008 	ldr	r3, [fp, #-8]
    d5e8:	e5932000 	ldr	r2, [r3]
    d5ec:	e51b300c 	ldr	r3, [fp, #-12]
    d5f0:	e1a03103 	lsl	r3, r3, #2
    d5f4:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:70
}
    d5f8:	e1a00003 	mov	r0, r3
    d5fc:	e28bd000 	add	sp, fp, #0
    d600:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d604:	e12fff1e 	bx	lr

0000d608 <_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE>:
_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:73

void CInterrupt_Controller::Enable_Basic_IRQ(hal::IRQ_Basic_Source source_idx)
{
    d608:	e92d4810 	push	{r4, fp, lr}
    d60c:	e28db008 	add	fp, sp, #8
    d610:	e24dd00c 	sub	sp, sp, #12
    d614:	e50b0010 	str	r0, [fp, #-16]
    d618:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:74
    Regs(hal::Interrupt_Controller_Reg::IRQ_Basic_Enable) = (1 << static_cast<unsigned int>(source_idx));
    d61c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d620:	e3a02001 	mov	r2, #1
    d624:	e1a04312 	lsl	r4, r2, r3
    d628:	e3a01006 	mov	r1, #6
    d62c:	e51b0010 	ldr	r0, [fp, #-16]
    d630:	ebffffe6 	bl	d5d0 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d634:	e1a03000 	mov	r3, r0
    d638:	e1a02004 	mov	r2, r4
    d63c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:75
}
    d640:	e320f000 	nop	{0}
    d644:	e24bd008 	sub	sp, fp, #8
    d648:	e8bd8810 	pop	{r4, fp, pc}

0000d64c <_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE>:
_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:78

void CInterrupt_Controller::Disable_Basic_IRQ(hal::IRQ_Basic_Source source_idx)
{
    d64c:	e92d4810 	push	{r4, fp, lr}
    d650:	e28db008 	add	fp, sp, #8
    d654:	e24dd00c 	sub	sp, sp, #12
    d658:	e50b0010 	str	r0, [fp, #-16]
    d65c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:79
    Regs(hal::Interrupt_Controller_Reg::IRQ_Basic_Disable) = (1 << static_cast<unsigned int>(source_idx));
    d660:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d664:	e3a02001 	mov	r2, #1
    d668:	e1a04312 	lsl	r4, r2, r3
    d66c:	e3a01009 	mov	r1, #9
    d670:	e51b0010 	ldr	r0, [fp, #-16]
    d674:	ebffffd5 	bl	d5d0 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d678:	e1a03000 	mov	r3, r0
    d67c:	e1a02004 	mov	r2, r4
    d680:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:80
}
    d684:	e320f000 	nop	{0}
    d688:	e24bd008 	sub	sp, fp, #8
    d68c:	e8bd8810 	pop	{r4, fp, pc}

0000d690 <_ZN21CInterrupt_Controller10Enable_IRQEN3hal10IRQ_SourceE>:
_ZN21CInterrupt_Controller10Enable_IRQEN3hal10IRQ_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:83

void CInterrupt_Controller::Enable_IRQ(hal::IRQ_Source source_idx)
{
    d690:	e92d4810 	push	{r4, fp, lr}
    d694:	e28db008 	add	fp, sp, #8
    d698:	e24dd014 	sub	sp, sp, #20
    d69c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d6a0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:84
    const unsigned int idx_base = static_cast<unsigned int>(source_idx);
    d6a4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    d6a8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:87

    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    (1 << (idx_base % 32));
    d6ac:	e51b3010 	ldr	r3, [fp, #-16]
    d6b0:	e203301f 	and	r3, r3, #31
    d6b4:	e3a02001 	mov	r2, #1
    d6b8:	e1a04312 	lsl	r4, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:86
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    d6bc:	e3a01004 	mov	r1, #4
    d6c0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    d6c4:	ebffffc1 	bl	d5d0 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d6c8:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:87
    (1 << (idx_base % 32));
    d6cc:	e1a02004 	mov	r2, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:86
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    d6d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:88
}
    d6d4:	e320f000 	nop	{0}
    d6d8:	e24bd008 	sub	sp, fp, #8
    d6dc:	e8bd8810 	pop	{r4, fp, pc}

0000d6e0 <_ZN21CInterrupt_Controller11Disable_IRQEN3hal10IRQ_SourceE>:
_ZN21CInterrupt_Controller11Disable_IRQEN3hal10IRQ_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:91

void CInterrupt_Controller::Disable_IRQ(hal::IRQ_Source source_idx)
{
    d6e0:	e92d4810 	push	{r4, fp, lr}
    d6e4:	e28db008 	add	fp, sp, #8
    d6e8:	e24dd014 	sub	sp, sp, #20
    d6ec:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d6f0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:92
    const unsigned int idx_base = static_cast<unsigned int>(source_idx);
    d6f4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    d6f8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:95

    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    (1 << (idx_base % 32));
    d6fc:	e51b3010 	ldr	r3, [fp, #-16]
    d700:	e203301f 	and	r3, r3, #31
    d704:	e3a02001 	mov	r2, #1
    d708:	e1a04312 	lsl	r4, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:94
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    d70c:	e3a01007 	mov	r1, #7
    d710:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    d714:	ebffffad 	bl	d5d0 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d718:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:95
    (1 << (idx_base % 32));
    d71c:	e1a02004 	mov	r2, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:94
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    d720:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
}
    d724:	e320f000 	nop	{0}
    d728:	e24bd008 	sub	sp, fp, #8
    d72c:	e8bd8810 	pop	{r4, fp, pc}

0000d730 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
    d730:	e92d4800 	push	{fp, lr}
    d734:	e28db004 	add	fp, sp, #4
    d738:	e24dd008 	sub	sp, sp, #8
    d73c:	e50b0008 	str	r0, [fp, #-8]
    d740:	e50b100c 	str	r1, [fp, #-12]
    d744:	e51b3008 	ldr	r3, [fp, #-8]
    d748:	e3530001 	cmp	r3, #1
    d74c:	1a000006 	bne	d76c <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96 (discriminator 1)
    d750:	e51b300c 	ldr	r3, [fp, #-12]
    d754:	e59f201c 	ldr	r2, [pc, #28]	; d778 <_Z41__static_initialization_and_destruction_0ii+0x48>
    d758:	e1530002 	cmp	r3, r2
    d75c:	1a000002 	bne	d76c <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:9
CInterrupt_Controller sInterruptCtl(hal::Interrupt_Controller_Base);
    d760:	e59f1014 	ldr	r1, [pc, #20]	; d77c <_Z41__static_initialization_and_destruction_0ii+0x4c>
    d764:	e59f0014 	ldr	r0, [pc, #20]	; d780 <_Z41__static_initialization_and_destruction_0ii+0x50>
    d768:	ebffff8b 	bl	d59c <_ZN21CInterrupt_ControllerC1Em>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
}
    d76c:	e320f000 	nop	{0}
    d770:	e24bd004 	sub	sp, fp, #4
    d774:	e8bd8800 	pop	{fp, pc}
    d778:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    d77c:	2000b200 	andcs	fp, r0, r0, lsl #4
    d780:	00010c84 	andeq	r0, r1, r4, lsl #25

0000d784 <_GLOBAL__sub_I_sInterruptCtl>:
_GLOBAL__sub_I_sInterruptCtl():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
    d784:	e92d4800 	push	{fp, lr}
    d788:	e28db004 	add	fp, sp, #4
    d78c:	e59f1008 	ldr	r1, [pc, #8]	; d79c <_GLOBAL__sub_I_sInterruptCtl+0x18>
    d790:	e3a00001 	mov	r0, #1
    d794:	ebffffe5 	bl	d730 <_Z41__static_initialization_and_destruction_0ii>
    d798:	e8bd8800 	pop	{fp, pc}
    d79c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000d7a0 <Timer_Callback>:
Timer_Callback():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:22

// externi funkce pro povoleni IRQ
extern "C" void enable_irq();

extern "C" void Timer_Callback()
{
    d7a0:	e92d4800 	push	{fp, lr}
    d7a4:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:23
    sProcessMgr.Schedule();
    d7a8:	e59f0008 	ldr	r0, [pc, #8]	; d7b8 <Timer_Callback+0x18>
    d7ac:	eb000291 	bl	e1f8 <_ZN16CProcess_Manager8ScheduleEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:24
}
    d7b0:	e320f000 	nop	{0}
    d7b4:	e8bd8800 	pop	{fp, pc}
    d7b8:	00011c94 	muleq	r1, r4, ip

0000d7bc <_kernel_main>:
_kernel_main():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:35
extern void Process_4();
extern void Process_5();
extern void Process_6();

extern "C" int _kernel_main(void)
{
    d7bc:	e92d4800 	push	{fp, lr}
    d7c0:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:46

    sUART0.Write("Welcome to KIV/OS RPiOS kernel\r\n");
    sUART0.Close();
    */

    sMonitor.Clear();
    d7c4:	e59f005c 	ldr	r0, [pc, #92]	; d828 <_kernel_main+0x6c>
    d7c8:	ebffee7f 	bl	91cc <_ZN8CMonitor5ClearEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:49

    // inicializace souboroveho systemu
    sFilesystem.Initialize();
    d7cc:	e59f0058 	ldr	r0, [pc, #88]	; d82c <_kernel_main+0x70>
    d7d0:	ebfff906 	bl	bbf0 <_ZN11CFilesystem10InitializeEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:54

    // vytvoreni hlavniho procesu
    // sProcessMgr.Create_Main_Process();

    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_1));
    d7d4:	e59f3054 	ldr	r3, [pc, #84]	; d830 <_kernel_main+0x74>
    d7d8:	e1a01003 	mov	r1, r3
    d7dc:	e59f0050 	ldr	r0, [pc, #80]	; d834 <_kernel_main+0x78>
    d7e0:	eb000204 	bl	dff8 <_ZN16CProcess_Manager14Create_ProcessEm>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:61
    /*sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_2));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_3));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_4));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_5));*/

    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_6));
    d7e4:	e59f304c 	ldr	r3, [pc, #76]	; d838 <_kernel_main+0x7c>
    d7e8:	e1a01003 	mov	r1, r3
    d7ec:	e59f0040 	ldr	r0, [pc, #64]	; d834 <_kernel_main+0x78>
    d7f0:	eb000200 	bl	dff8 <_ZN16CProcess_Manager14Create_ProcessEm>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:64

    // zatim zakazeme IRQ casovace
    sInterruptCtl.Disable_Basic_IRQ(hal::IRQ_Basic_Source::Timer);
    d7f4:	e3a01000 	mov	r1, #0
    d7f8:	e59f003c 	ldr	r0, [pc, #60]	; d83c <_kernel_main+0x80>
    d7fc:	ebffff92 	bl	d64c <_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:67

    // nastavime casovac - v callbacku se provadi planovani procesu
    sTimer.Enable(Timer_Callback, 0x20, NTimer_Prescaler::Prescaler_256);
    d800:	e3a03002 	mov	r3, #2
    d804:	e3a02020 	mov	r2, #32
    d808:	e59f1030 	ldr	r1, [pc, #48]	; d840 <_kernel_main+0x84>
    d80c:	e59f0030 	ldr	r0, [pc, #48]	; d844 <_kernel_main+0x88>
    d810:	ebfff741 	bl	b51c <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:70

    // povolime IRQ casovace
    sInterruptCtl.Enable_Basic_IRQ(hal::IRQ_Basic_Source::Timer);
    d814:	e3a01000 	mov	r1, #0
    d818:	e59f001c 	ldr	r0, [pc, #28]	; d83c <_kernel_main+0x80>
    d81c:	ebffff79 	bl	d608 <_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:73

    // povolime IRQ a od tohoto momentu je vse v rukou planovace
    enable_irq();
    d820:	eb0004b0 	bl	eae8 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:76 (discriminator 1)

    // nekonecna smycka - tadyodsud se CPU uz nedostane jinak, nez treba prerusenim
    while (1)
    d824:	eafffffe 	b	d824 <_kernel_main+0x68>
    d828:	00010b94 	muleq	r1, r4, fp
    d82c:	00010bf4 	strdeq	r0, [r1], -r4
    d830:	0000ec68 	andeq	lr, r0, r8, ror #24
    d834:	00011c94 	muleq	r1, r4, ip
    d838:	0000f164 	andeq	pc, r0, r4, ror #2
    d83c:	00010c84 	andeq	r0, r1, r4, lsl #25
    d840:	0000d7a0 	andeq	sp, r0, r0, lsr #15
    d844:	00010be4 	andeq	r0, r1, r4, ror #23

0000d848 <_ZN20CKernel_Heap_ManagerC1Ev>:
_ZN20CKernel_Heap_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:6
#include <memory/kernel_heap.h>
#include <memory/pages.h>

CKernel_Heap_Manager sKernelMem;

CKernel_Heap_Manager::CKernel_Heap_Manager()
    d848:	e92d4800 	push	{fp, lr}
    d84c:	e28db004 	add	fp, sp, #4
    d850:	e24dd008 	sub	sp, sp, #8
    d854:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:10
{
    // na zacatku si alokujeme jednu stranku dopredu, protoze je temer jiste, ze budeme docela brzy potrebovat nejakou
    // pamet
    mFirst = Alloc_Next_Page();
    d858:	e51b0008 	ldr	r0, [fp, #-8]
    d85c:	eb000006 	bl	d87c <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv>
    d860:	e1a02000 	mov	r2, r0
    d864:	e51b3008 	ldr	r3, [fp, #-8]
    d868:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:11
}
    d86c:	e51b3008 	ldr	r3, [fp, #-8]
    d870:	e1a00003 	mov	r0, r3
    d874:	e24bd004 	sub	sp, fp, #4
    d878:	e8bd8800 	pop	{fp, pc}

0000d87c <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv>:
_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:14

TKernel_Heap_Chunk_Header* CKernel_Heap_Manager::Alloc_Next_Page()
{
    d87c:	e92d4800 	push	{fp, lr}
    d880:	e28db004 	add	fp, sp, #4
    d884:	e24dd010 	sub	sp, sp, #16
    d888:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:15
    TKernel_Heap_Chunk_Header* chunk = reinterpret_cast<TKernel_Heap_Chunk_Header*>(sPage_Manager.Alloc_Page());
    d88c:	e59f0048 	ldr	r0, [pc, #72]	; d8dc <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv+0x60>
    d890:	eb00010f 	bl	dcd4 <_ZN13CPage_Manager10Alloc_PageEv>
    d894:	e1a03000 	mov	r3, r0
    d898:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:16
    chunk->prev = nullptr;
    d89c:	e51b3008 	ldr	r3, [fp, #-8]
    d8a0:	e3a02000 	mov	r2, #0
    d8a4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:17
    chunk->next = nullptr;
    d8a8:	e51b3008 	ldr	r3, [fp, #-8]
    d8ac:	e3a02000 	mov	r2, #0
    d8b0:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:18
    chunk->size =
    d8b4:	e51b3008 	ldr	r3, [fp, #-8]
    d8b8:	e59f2020 	ldr	r2, [pc, #32]	; d8e0 <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv+0x64>
    d8bc:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:20
    mem::PageSize - sizeof(TKernel_Heap_Chunk_Header); // z alokovane stranky musime ubrat velikost hlavicky
    chunk->is_free = true;
    d8c0:	e51b3008 	ldr	r3, [fp, #-8]
    d8c4:	e3a02001 	mov	r2, #1
    d8c8:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:22

    return chunk;
    d8cc:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:23
}
    d8d0:	e1a00003 	mov	r0, r3
    d8d4:	e24bd004 	sub	sp, fp, #4
    d8d8:	e8bd8800 	pop	{fp, pc}
    d8dc:	00010c94 	muleq	r1, r4, ip
    d8e0:	00003ff0 	strdeq	r3, [r0], -r0

0000d8e4 <_ZN20CKernel_Heap_Manager5AllocEj>:
_ZN20CKernel_Heap_Manager5AllocEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:26

void* CKernel_Heap_Manager::Alloc(uint32_t size)
{
    d8e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d8e8:	e28db000 	add	fp, sp, #0
    d8ec:	e24dd014 	sub	sp, sp, #20
    d8f0:	e50b0010 	str	r0, [fp, #-16]
    d8f4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:27
    TKernel_Heap_Chunk_Header* chunk = mFirst;
    d8f8:	e51b3010 	ldr	r3, [fp, #-16]
    d8fc:	e5933000 	ldr	r3, [r3]
    d900:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31

    // potrebujeme najit prvni blok, ktery je volny a zaroven alespon tak velky, jak potrebujeme (pro ted pouzivame
    // proste first-fit)
    while (chunk != nullptr && (!chunk->is_free || chunk->size < size))
    d904:	e51b3008 	ldr	r3, [fp, #-8]
    d908:	e3530000 	cmp	r3, #0
    d90c:	0a00000c 	beq	d944 <_ZN20CKernel_Heap_Manager5AllocEj+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31 (discriminator 1)
    d910:	e51b3008 	ldr	r3, [fp, #-8]
    d914:	e5d3300c 	ldrb	r3, [r3, #12]
    d918:	e3530000 	cmp	r3, #0
    d91c:	0a000004 	beq	d934 <_ZN20CKernel_Heap_Manager5AllocEj+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31 (discriminator 2)
    d920:	e51b3008 	ldr	r3, [fp, #-8]
    d924:	e5933008 	ldr	r3, [r3, #8]
    d928:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    d92c:	e1520003 	cmp	r2, r3
    d930:	9a000003 	bls	d944 <_ZN20CKernel_Heap_Manager5AllocEj+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:33
    {
        chunk = chunk->next;
    d934:	e51b3008 	ldr	r3, [fp, #-8]
    d938:	e5933004 	ldr	r3, [r3, #4]
    d93c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31
    while (chunk != nullptr && (!chunk->is_free || chunk->size < size))
    d940:	eaffffef 	b	d904 <_ZN20CKernel_Heap_Manager5AllocEj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:36
    }

    if (!chunk)
    d944:	e51b3008 	ldr	r3, [fp, #-8]
    d948:	e3530000 	cmp	r3, #0
    d94c:	1a000001 	bne	d958 <_ZN20CKernel_Heap_Manager5AllocEj+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:40
    {
        // TODO: tady by se hodila alokace dalsi stranky (Alloc_Next_Page) a navazani na predchozi chunk
        // pro ted nechme byt, vic jak 4kB snad v tomto prikladu potrebovat nebudeme
        return nullptr;
    d950:	e3a03000 	mov	r3, #0
    d954:	ea000031 	b	da20 <_ZN20CKernel_Heap_Manager5AllocEj+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:46
    }

    // pokud je pozadovane misto uz tak velke, jak potrebujeme, tak je to snadne - jen ho oznacime za alokovane a
    // vratime vzdy zarovname tak, aby se do dalsiho potencialniho bloku vesla alespon hlavicka dalsiho bloku a nejaky
    // overlap (alespon jeden bajt)
    if (chunk->size >= size && chunk->size <= size + sizeof(TKernel_Heap_Chunk_Header) + 1)
    d958:	e51b3008 	ldr	r3, [fp, #-8]
    d95c:	e5933008 	ldr	r3, [r3, #8]
    d960:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    d964:	e1520003 	cmp	r2, r3
    d968:	8a00000b 	bhi	d99c <_ZN20CKernel_Heap_Manager5AllocEj+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:46 (discriminator 1)
    d96c:	e51b3008 	ldr	r3, [fp, #-8]
    d970:	e5932008 	ldr	r2, [r3, #8]
    d974:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d978:	e2833011 	add	r3, r3, #17
    d97c:	e1520003 	cmp	r2, r3
    d980:	8a000005 	bhi	d99c <_ZN20CKernel_Heap_Manager5AllocEj+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:48
    {
        chunk->is_free = false;
    d984:	e51b3008 	ldr	r3, [fp, #-8]
    d988:	e3a02000 	mov	r2, #0
    d98c:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:50
        return reinterpret_cast<uint8_t*>(chunk) +
               sizeof(TKernel_Heap_Chunk_Header); // vracime az pouzitelnou pamet, tedy to co nasleduje po hlavicce
    d990:	e51b3008 	ldr	r3, [fp, #-8]
    d994:	e2833010 	add	r3, r3, #16
    d998:	ea000020 	b	da20 <_ZN20CKernel_Heap_Manager5AllocEj+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:57

    // pokud je vetsi, musime blok rozdelit
    // to, ze se tam vejde dalsi hlavicka jsme garantovali prekryvem, viz vyse

    TKernel_Heap_Chunk_Header* hdr2 = reinterpret_cast<TKernel_Heap_Chunk_Header*>(
    reinterpret_cast<uint8_t*>(chunk) + sizeof(TKernel_Heap_Chunk_Header) + size);
    d99c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d9a0:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:56
    TKernel_Heap_Chunk_Header* hdr2 = reinterpret_cast<TKernel_Heap_Chunk_Header*>(
    d9a4:	e51b2008 	ldr	r2, [fp, #-8]
    d9a8:	e0823003 	add	r3, r2, r3
    d9ac:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:59

    hdr2->size = chunk->size - size - sizeof(TKernel_Heap_Chunk_Header);
    d9b0:	e51b3008 	ldr	r3, [fp, #-8]
    d9b4:	e5932008 	ldr	r2, [r3, #8]
    d9b8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d9bc:	e0423003 	sub	r3, r2, r3
    d9c0:	e2432010 	sub	r2, r3, #16
    d9c4:	e51b300c 	ldr	r3, [fp, #-12]
    d9c8:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:61

    hdr2->prev = chunk;
    d9cc:	e51b300c 	ldr	r3, [fp, #-12]
    d9d0:	e51b2008 	ldr	r2, [fp, #-8]
    d9d4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:62
    hdr2->next = chunk->next;
    d9d8:	e51b3008 	ldr	r3, [fp, #-8]
    d9dc:	e5932004 	ldr	r2, [r3, #4]
    d9e0:	e51b300c 	ldr	r3, [fp, #-12]
    d9e4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:63
    hdr2->is_free = true;
    d9e8:	e51b300c 	ldr	r3, [fp, #-12]
    d9ec:	e3a02001 	mov	r2, #1
    d9f0:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:64
    chunk->next = hdr2;
    d9f4:	e51b3008 	ldr	r3, [fp, #-8]
    d9f8:	e51b200c 	ldr	r2, [fp, #-12]
    d9fc:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:66

    chunk->size = size;
    da00:	e51b3008 	ldr	r3, [fp, #-8]
    da04:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    da08:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:67
    chunk->is_free = false;
    da0c:	e51b3008 	ldr	r3, [fp, #-8]
    da10:	e3a02000 	mov	r2, #0
    da14:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:70

    return reinterpret_cast<uint8_t*>(chunk) +
           sizeof(TKernel_Heap_Chunk_Header); // vracime az pouzitelnou pamet, tedy to co nasleduje po hlavicce
    da18:	e51b3008 	ldr	r3, [fp, #-8]
    da1c:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:71
}
    da20:	e1a00003 	mov	r0, r3
    da24:	e28bd000 	add	sp, fp, #0
    da28:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    da2c:	e12fff1e 	bx	lr

0000da30 <_ZN20CKernel_Heap_Manager4FreeEPv>:
_ZN20CKernel_Heap_Manager4FreeEPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:74

void CKernel_Heap_Manager::Free(void* mem)
{
    da30:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    da34:	e28db000 	add	fp, sp, #0
    da38:	e24dd014 	sub	sp, sp, #20
    da3c:	e50b0010 	str	r0, [fp, #-16]
    da40:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:75
    TKernel_Heap_Chunk_Header* chunk =
    da44:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    da48:	e2433010 	sub	r3, r3, #16
    da4c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:78
    reinterpret_cast<TKernel_Heap_Chunk_Header*>(reinterpret_cast<uint8_t*>(mem) - sizeof(TKernel_Heap_Chunk_Header));

    chunk->is_free = true;
    da50:	e51b3008 	ldr	r3, [fp, #-8]
    da54:	e3a02001 	mov	r2, #1
    da58:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:81

    // pokud je dalsi blok volny, spojme tento a dalsi blok do jednoho
    if (chunk->next && chunk->next->is_free)
    da5c:	e51b3008 	ldr	r3, [fp, #-8]
    da60:	e5933004 	ldr	r3, [r3, #4]
    da64:	e3530000 	cmp	r3, #0
    da68:	0a000016 	beq	dac8 <_ZN20CKernel_Heap_Manager4FreeEPv+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:81 (discriminator 1)
    da6c:	e51b3008 	ldr	r3, [fp, #-8]
    da70:	e5933004 	ldr	r3, [r3, #4]
    da74:	e5d3300c 	ldrb	r3, [r3, #12]
    da78:	e3530000 	cmp	r3, #0
    da7c:	0a000011 	beq	dac8 <_ZN20CKernel_Heap_Manager4FreeEPv+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:83
    {
        chunk->size += chunk->next->size + sizeof(TKernel_Heap_Chunk_Header); // zvetsit soucasny
    da80:	e51b3008 	ldr	r3, [fp, #-8]
    da84:	e5932008 	ldr	r2, [r3, #8]
    da88:	e51b3008 	ldr	r3, [fp, #-8]
    da8c:	e5933004 	ldr	r3, [r3, #4]
    da90:	e5933008 	ldr	r3, [r3, #8]
    da94:	e0823003 	add	r3, r2, r3
    da98:	e2832010 	add	r2, r3, #16
    da9c:	e51b3008 	ldr	r3, [fp, #-8]
    daa0:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:84
        chunk->next = chunk->next->next; // navazat nasledujici nasledujiciho jako dalsi
    daa4:	e51b3008 	ldr	r3, [fp, #-8]
    daa8:	e5933004 	ldr	r3, [r3, #4]
    daac:	e5932004 	ldr	r2, [r3, #4]
    dab0:	e51b3008 	ldr	r3, [fp, #-8]
    dab4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:85
        chunk->next->prev = chunk;       // nasledujicimu nastavit predchozi na sebe
    dab8:	e51b3008 	ldr	r3, [fp, #-8]
    dabc:	e5933004 	ldr	r3, [r3, #4]
    dac0:	e51b2008 	ldr	r2, [fp, #-8]
    dac4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:89
    }

    // pokud je predchozi blok volny, spojme predchozi a tento blok do jednoho
    if (chunk->prev && chunk->prev->is_free)
    dac8:	e51b3008 	ldr	r3, [fp, #-8]
    dacc:	e5933000 	ldr	r3, [r3]
    dad0:	e3530000 	cmp	r3, #0
    dad4:	0a000018 	beq	db3c <_ZN20CKernel_Heap_Manager4FreeEPv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:89 (discriminator 1)
    dad8:	e51b3008 	ldr	r3, [fp, #-8]
    dadc:	e5933000 	ldr	r3, [r3]
    dae0:	e5d3300c 	ldrb	r3, [r3, #12]
    dae4:	e3530000 	cmp	r3, #0
    dae8:	0a000013 	beq	db3c <_ZN20CKernel_Heap_Manager4FreeEPv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:91
    {
        chunk->prev->size += chunk->size + sizeof(TKernel_Heap_Chunk_Header);
    daec:	e51b3008 	ldr	r3, [fp, #-8]
    daf0:	e5933000 	ldr	r3, [r3]
    daf4:	e5932008 	ldr	r2, [r3, #8]
    daf8:	e51b3008 	ldr	r3, [fp, #-8]
    dafc:	e5933008 	ldr	r3, [r3, #8]
    db00:	e0822003 	add	r2, r2, r3
    db04:	e51b3008 	ldr	r3, [fp, #-8]
    db08:	e5933000 	ldr	r3, [r3]
    db0c:	e2822010 	add	r2, r2, #16
    db10:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:92
        chunk->prev->next = chunk->next;
    db14:	e51b3008 	ldr	r3, [fp, #-8]
    db18:	e5933000 	ldr	r3, [r3]
    db1c:	e51b2008 	ldr	r2, [fp, #-8]
    db20:	e5922004 	ldr	r2, [r2, #4]
    db24:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:93
        chunk->next->prev = chunk->prev;
    db28:	e51b3008 	ldr	r3, [fp, #-8]
    db2c:	e5933004 	ldr	r3, [r3, #4]
    db30:	e51b2008 	ldr	r2, [fp, #-8]
    db34:	e5922000 	ldr	r2, [r2]
    db38:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    }
    db3c:	e320f000 	nop	{0}
    db40:	e28bd000 	add	sp, fp, #0
    db44:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    db48:	e12fff1e 	bx	lr

0000db4c <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    db4c:	e92d4800 	push	{fp, lr}
    db50:	e28db004 	add	fp, sp, #4
    db54:	e24dd008 	sub	sp, sp, #8
    db58:	e50b0008 	str	r0, [fp, #-8]
    db5c:	e50b100c 	str	r1, [fp, #-12]
    db60:	e51b3008 	ldr	r3, [fp, #-8]
    db64:	e3530001 	cmp	r3, #1
    db68:	1a000005 	bne	db84 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95 (discriminator 1)
    db6c:	e51b300c 	ldr	r3, [fp, #-12]
    db70:	e59f2018 	ldr	r2, [pc, #24]	; db90 <_Z41__static_initialization_and_destruction_0ii+0x44>
    db74:	e1530002 	cmp	r3, r2
    db78:	1a000001 	bne	db84 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:4
CKernel_Heap_Manager sKernelMem;
    db7c:	e59f0010 	ldr	r0, [pc, #16]	; db94 <_Z41__static_initialization_and_destruction_0ii+0x48>
    db80:	ebffff30 	bl	d848 <_ZN20CKernel_Heap_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    db84:	e320f000 	nop	{0}
    db88:	e24bd004 	sub	sp, fp, #4
    db8c:	e8bd8800 	pop	{fp, pc}
    db90:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    db94:	00010c90 	muleq	r1, r0, ip

0000db98 <_GLOBAL__sub_I_sKernelMem>:
_GLOBAL__sub_I_sKernelMem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    db98:	e92d4800 	push	{fp, lr}
    db9c:	e28db004 	add	fp, sp, #4
    dba0:	e59f1008 	ldr	r1, [pc, #8]	; dbb0 <_GLOBAL__sub_I_sKernelMem+0x18>
    dba4:	e3a00001 	mov	r0, #1
    dba8:	ebffffe7 	bl	db4c <_Z41__static_initialization_and_destruction_0ii>
    dbac:	e8bd8800 	pop	{fp, pc}
    dbb0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000dbb4 <_ZN13CPage_ManagerC1Ev>:
_ZN13CPage_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:5
#include <memory/pages.h>

CPage_Manager sPage_Manager;

CPage_Manager::CPage_Manager()
    dbb4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dbb8:	e28db000 	add	fp, sp, #0
    dbbc:	e24dd014 	sub	sp, sp, #20
    dbc0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8
{
    // zadna stranka neni alokovana
    for (int i = 0; i < sizeof(mPage_Bitmap); i++)
    dbc4:	e3a03000 	mov	r3, #0
    dbc8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8 (discriminator 3)
    dbcc:	e51b3008 	ldr	r3, [fp, #-8]
    dbd0:	e59f203c 	ldr	r2, [pc, #60]	; dc14 <_ZN13CPage_ManagerC1Ev+0x60>
    dbd4:	e1530002 	cmp	r3, r2
    dbd8:	8a000008 	bhi	dc00 <_ZN13CPage_ManagerC1Ev+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:9 (discriminator 2)
        mPage_Bitmap[i] = 0;
    dbdc:	e51b2010 	ldr	r2, [fp, #-16]
    dbe0:	e51b3008 	ldr	r3, [fp, #-8]
    dbe4:	e0823003 	add	r3, r2, r3
    dbe8:	e3a02000 	mov	r2, #0
    dbec:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8 (discriminator 2)
    for (int i = 0; i < sizeof(mPage_Bitmap); i++)
    dbf0:	e51b3008 	ldr	r3, [fp, #-8]
    dbf4:	e2833001 	add	r3, r3, #1
    dbf8:	e50b3008 	str	r3, [fp, #-8]
    dbfc:	eafffff2 	b	dbcc <_ZN13CPage_ManagerC1Ev+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:12

    // nutno dodat, ze strankovatelna pamet implicitne nezahrnuje pamet, kam se nahralo jadro
}
    dc00:	e51b3010 	ldr	r3, [fp, #-16]
    dc04:	e1a00003 	mov	r0, r3
    dc08:	e28bd000 	add	sp, fp, #0
    dc0c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dc10:	e12fff1e 	bx	lr
    dc14:	00000ffe 	strdeq	r0, [r0], -lr

0000dc18 <_ZN13CPage_Manager4MarkEjb>:
_ZN13CPage_Manager4MarkEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:15

void CPage_Manager::Mark(uint32_t page_idx, bool used)
{
    dc18:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dc1c:	e28db000 	add	fp, sp, #0
    dc20:	e24dd014 	sub	sp, sp, #20
    dc24:	e50b0008 	str	r0, [fp, #-8]
    dc28:	e50b100c 	str	r1, [fp, #-12]
    dc2c:	e1a03002 	mov	r3, r2
    dc30:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:16
    if (used)
    dc34:	e55b300d 	ldrb	r3, [fp, #-13]
    dc38:	e3530000 	cmp	r3, #0
    dc3c:	0a00000f 	beq	dc80 <_ZN13CPage_Manager4MarkEjb+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:17
        mPage_Bitmap[page_idx / 8] |= 1 << (page_idx % 8);
    dc40:	e51b300c 	ldr	r3, [fp, #-12]
    dc44:	e1a031a3 	lsr	r3, r3, #3
    dc48:	e51b2008 	ldr	r2, [fp, #-8]
    dc4c:	e7d22003 	ldrb	r2, [r2, r3]
    dc50:	e6af1072 	sxtb	r1, r2
    dc54:	e51b200c 	ldr	r2, [fp, #-12]
    dc58:	e2022007 	and	r2, r2, #7
    dc5c:	e3a00001 	mov	r0, #1
    dc60:	e1a02210 	lsl	r2, r0, r2
    dc64:	e6af2072 	sxtb	r2, r2
    dc68:	e1812002 	orr	r2, r1, r2
    dc6c:	e6af2072 	sxtb	r2, r2
    dc70:	e6ef1072 	uxtb	r1, r2
    dc74:	e51b2008 	ldr	r2, [fp, #-8]
    dc78:	e7c21003 	strb	r1, [r2, r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:20
    else
        mPage_Bitmap[page_idx / 8] &= ~(1 << (page_idx % 8));
}
    dc7c:	ea000010 	b	dcc4 <_ZN13CPage_Manager4MarkEjb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:19
        mPage_Bitmap[page_idx / 8] &= ~(1 << (page_idx % 8));
    dc80:	e51b300c 	ldr	r3, [fp, #-12]
    dc84:	e1a031a3 	lsr	r3, r3, #3
    dc88:	e51b2008 	ldr	r2, [fp, #-8]
    dc8c:	e7d22003 	ldrb	r2, [r2, r3]
    dc90:	e6af1072 	sxtb	r1, r2
    dc94:	e51b200c 	ldr	r2, [fp, #-12]
    dc98:	e2022007 	and	r2, r2, #7
    dc9c:	e3a00001 	mov	r0, #1
    dca0:	e1a02210 	lsl	r2, r0, r2
    dca4:	e6af2072 	sxtb	r2, r2
    dca8:	e1e02002 	mvn	r2, r2
    dcac:	e6af2072 	sxtb	r2, r2
    dcb0:	e0022001 	and	r2, r2, r1
    dcb4:	e6af2072 	sxtb	r2, r2
    dcb8:	e6ef1072 	uxtb	r1, r2
    dcbc:	e51b2008 	ldr	r2, [fp, #-8]
    dcc0:	e7c21003 	strb	r1, [r2, r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:20
}
    dcc4:	e320f000 	nop	{0}
    dcc8:	e28bd000 	add	sp, fp, #0
    dccc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dcd0:	e12fff1e 	bx	lr

0000dcd4 <_ZN13CPage_Manager10Alloc_PageEv>:
_ZN13CPage_Manager10Alloc_PageEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:23

uint32_t CPage_Manager::Alloc_Page()
{
    dcd4:	e92d4800 	push	{fp, lr}
    dcd8:	e28db004 	add	fp, sp, #4
    dcdc:	e24dd018 	sub	sp, sp, #24
    dce0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30
    // to je samozrejme O(n) a pro prakticke pouziti ne uplne dobre, ale k tomuto problemu az jindy

    uint32_t i, j;

    // projdeme vsechny stranky
    for (i = 0; i < mem::PageCount; i++)
    dce4:	e3a03000 	mov	r3, #0
    dce8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30 (discriminator 1)
    dcec:	e51b3008 	ldr	r3, [fp, #-8]
    dcf0:	e59f20bc 	ldr	r2, [pc, #188]	; ddb4 <_ZN13CPage_Manager10Alloc_PageEv+0xe0>
    dcf4:	e1530002 	cmp	r3, r2
    dcf8:	8a000029 	bhi	dda4 <_ZN13CPage_Manager10Alloc_PageEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:33
    {
        // je v dane osmici volna nejaka stranka? (0xFF = vse obsazeno)
        if (mPage_Bitmap[i] != 0xFF)
    dcfc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    dd00:	e51b3008 	ldr	r3, [fp, #-8]
    dd04:	e0823003 	add	r3, r2, r3
    dd08:	e5d33000 	ldrb	r3, [r3]
    dd0c:	e35300ff 	cmp	r3, #255	; 0xff
    dd10:	0a00001f 	beq	dd94 <_ZN13CPage_Manager10Alloc_PageEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36
        {
            // projdeme vsechny bity a najdeme ten co je volny
            for (j = 0; j < 8; j++)
    dd14:	e3a03000 	mov	r3, #0
    dd18:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36 (discriminator 1)
    dd1c:	e51b300c 	ldr	r3, [fp, #-12]
    dd20:	e3530007 	cmp	r3, #7
    dd24:	8a00001a 	bhi	dd94 <_ZN13CPage_Manager10Alloc_PageEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:38
            {
                if ((mPage_Bitmap[i] & (1 << j)) == 0)
    dd28:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    dd2c:	e51b3008 	ldr	r3, [fp, #-8]
    dd30:	e0823003 	add	r3, r2, r3
    dd34:	e5d33000 	ldrb	r3, [r3]
    dd38:	e1a02003 	mov	r2, r3
    dd3c:	e51b300c 	ldr	r3, [fp, #-12]
    dd40:	e1a03352 	asr	r3, r2, r3
    dd44:	e2033001 	and	r3, r3, #1
    dd48:	e3530000 	cmp	r3, #0
    dd4c:	1a00000c 	bne	dd84 <_ZN13CPage_Manager10Alloc_PageEv+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:41
                {
                    // oznacime
                    const uint32_t page_idx = i * 8 + j;
    dd50:	e51b3008 	ldr	r3, [fp, #-8]
    dd54:	e1a03183 	lsl	r3, r3, #3
    dd58:	e51b200c 	ldr	r2, [fp, #-12]
    dd5c:	e0823003 	add	r3, r2, r3
    dd60:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:42
                    Mark(page_idx, true);
    dd64:	e3a02001 	mov	r2, #1
    dd68:	e51b1010 	ldr	r1, [fp, #-16]
    dd6c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    dd70:	ebffffa8 	bl	dc18 <_ZN13CPage_Manager4MarkEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:43
                    return mem::LowMemory + page_idx * mem::PageSize;
    dd74:	e51b3010 	ldr	r3, [fp, #-16]
    dd78:	e2833008 	add	r3, r3, #8
    dd7c:	e1a03703 	lsl	r3, r3, #14
    dd80:	ea000008 	b	dda8 <_ZN13CPage_Manager10Alloc_PageEv+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36 (discriminator 2)
            for (j = 0; j < 8; j++)
    dd84:	e51b300c 	ldr	r3, [fp, #-12]
    dd88:	e2833001 	add	r3, r3, #1
    dd8c:	e50b300c 	str	r3, [fp, #-12]
    dd90:	eaffffe1 	b	dd1c <_ZN13CPage_Manager10Alloc_PageEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30 (discriminator 2)
    for (i = 0; i < mem::PageCount; i++)
    dd94:	e51b3008 	ldr	r3, [fp, #-8]
    dd98:	e2833001 	add	r3, r3, #1
    dd9c:	e50b3008 	str	r3, [fp, #-8]
    dda0:	eaffffd1 	b	dcec <_ZN13CPage_Manager10Alloc_PageEv+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:49
                }
            }
        }
    }

    return 0;
    dda4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:50
}
    dda8:	e1a00003 	mov	r0, r3
    ddac:	e24bd004 	sub	sp, fp, #4
    ddb0:	e8bd8800 	pop	{fp, pc}
    ddb4:	00007ff7 	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>

0000ddb8 <_ZN13CPage_Manager9Free_PageEj>:
_ZN13CPage_Manager9Free_PageEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:53

void CPage_Manager::Free_Page(uint32_t fa)
{
    ddb8:	e92d4800 	push	{fp, lr}
    ddbc:	e28db004 	add	fp, sp, #4
    ddc0:	e24dd008 	sub	sp, sp, #8
    ddc4:	e50b0008 	str	r0, [fp, #-8]
    ddc8:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:56
    // pro vyssi bezpecnost v nejakych safe systemech lze tady data stranky premazavat napr. nulami po dealokaci

    Mark(fa / mem::PageSize, false);
    ddcc:	e51b300c 	ldr	r3, [fp, #-12]
    ddd0:	e1a03723 	lsr	r3, r3, #14
    ddd4:	e3a02000 	mov	r2, #0
    ddd8:	e1a01003 	mov	r1, r3
    dddc:	e51b0008 	ldr	r0, [fp, #-8]
    dde0:	ebffff8c 	bl	dc18 <_ZN13CPage_Manager4MarkEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
}
    dde4:	e320f000 	nop	{0}
    dde8:	e24bd004 	sub	sp, fp, #4
    ddec:	e8bd8800 	pop	{fp, pc}

0000ddf0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
    ddf0:	e92d4800 	push	{fp, lr}
    ddf4:	e28db004 	add	fp, sp, #4
    ddf8:	e24dd008 	sub	sp, sp, #8
    ddfc:	e50b0008 	str	r0, [fp, #-8]
    de00:	e50b100c 	str	r1, [fp, #-12]
    de04:	e51b3008 	ldr	r3, [fp, #-8]
    de08:	e3530001 	cmp	r3, #1
    de0c:	1a000005 	bne	de28 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57 (discriminator 1)
    de10:	e51b300c 	ldr	r3, [fp, #-12]
    de14:	e59f2018 	ldr	r2, [pc, #24]	; de34 <_Z41__static_initialization_and_destruction_0ii+0x44>
    de18:	e1530002 	cmp	r3, r2
    de1c:	1a000001 	bne	de28 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:3
CPage_Manager sPage_Manager;
    de20:	e59f0010 	ldr	r0, [pc, #16]	; de38 <_Z41__static_initialization_and_destruction_0ii+0x48>
    de24:	ebffff62 	bl	dbb4 <_ZN13CPage_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
}
    de28:	e320f000 	nop	{0}
    de2c:	e24bd004 	sub	sp, fp, #4
    de30:	e8bd8800 	pop	{fp, pc}
    de34:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    de38:	00010c94 	muleq	r1, r4, ip

0000de3c <_GLOBAL__sub_I_sPage_Manager>:
_GLOBAL__sub_I_sPage_Manager():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
    de3c:	e92d4800 	push	{fp, lr}
    de40:	e28db004 	add	fp, sp, #4
    de44:	e59f1008 	ldr	r1, [pc, #8]	; de54 <_GLOBAL__sub_I_sPage_Manager+0x18>
    de48:	e3a00001 	mov	r0, #1
    de4c:	ebffffe7 	bl	ddf0 <_Z41__static_initialization_and_destruction_0ii>
    de50:	e8bd8800 	pop	{fp, pc}
    de54:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000de58 <_ZN16CProcess_ManagerC1Ev>:
_ZN16CProcess_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:20
    void context_switch_first(TCPU_Context* ctx_to, TCPU_Context* ctx_from);
};

CProcess_Manager sProcessMgr;

CProcess_Manager::CProcess_Manager()
    de58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    de5c:	e28db000 	add	fp, sp, #0
    de60:	e24dd00c 	sub	sp, sp, #12
    de64:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:23
: mLast_PID(0)
, mProcess_List_Head(nullptr)
, mCurrent_Task_Node(nullptr)
    de68:	e51b3008 	ldr	r3, [fp, #-8]
    de6c:	e3a02000 	mov	r2, #0
    de70:	e5832000 	str	r2, [r3]
    de74:	e51b3008 	ldr	r3, [fp, #-8]
    de78:	e3a02000 	mov	r2, #0
    de7c:	e5832004 	str	r2, [r3, #4]
    de80:	e51b3008 	ldr	r3, [fp, #-8]
    de84:	e3a02000 	mov	r2, #0
    de88:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:26
{
    //
}
    de8c:	e51b3008 	ldr	r3, [fp, #-8]
    de90:	e1a00003 	mov	r0, r3
    de94:	e28bd000 	add	sp, fp, #0
    de98:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    de9c:	e12fff1e 	bx	lr

0000dea0 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>:
_ZNK16CProcess_Manager19Get_Current_ProcessEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29

TTask_Struct* CProcess_Manager::Get_Current_Process() const
{
    dea0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dea4:	e28db000 	add	fp, sp, #0
    dea8:	e24dd00c 	sub	sp, sp, #12
    deac:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:30
    return mCurrent_Task_Node ? mCurrent_Task_Node->task : nullptr;
    deb0:	e51b3008 	ldr	r3, [fp, #-8]
    deb4:	e5933008 	ldr	r3, [r3, #8]
    deb8:	e3530000 	cmp	r3, #0
    debc:	0a000003 	beq	ded0 <_ZNK16CProcess_Manager19Get_Current_ProcessEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:30 (discriminator 1)
    dec0:	e51b3008 	ldr	r3, [fp, #-8]
    dec4:	e5933008 	ldr	r3, [r3, #8]
    dec8:	e5933008 	ldr	r3, [r3, #8]
    decc:	ea000000 	b	ded4 <_ZNK16CProcess_Manager19Get_Current_ProcessEv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:30 (discriminator 2)
    ded0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:31 (discriminator 5)
}
    ded4:	e1a00003 	mov	r0, r3
    ded8:	e28bd000 	add	sp, fp, #0
    dedc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dee0:	e12fff1e 	bx	lr

0000dee4 <_ZN16CProcess_Manager19Create_Main_ProcessEv>:
_ZN16CProcess_Manager19Create_Main_ProcessEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:34

void CProcess_Manager::Create_Main_Process()
{
    dee4:	e92d4800 	push	{fp, lr}
    dee8:	e28db004 	add	fp, sp, #4
    deec:	e24dd018 	sub	sp, sp, #24
    def0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:35
    CProcess_List_Node* procnode = sKernelMem.Alloc<CProcess_List_Node>();
    def4:	e59f00f8 	ldr	r0, [pc, #248]	; dff4 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0x110>
    def8:	eb0002cb 	bl	ea2c <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>
    defc:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:37

    procnode->next = mProcess_List_Head;
    df00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    df04:	e5932004 	ldr	r2, [r3, #4]
    df08:	e51b300c 	ldr	r3, [fp, #-12]
    df0c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:38
    procnode->prev = nullptr;
    df10:	e51b300c 	ldr	r3, [fp, #-12]
    df14:	e3a02000 	mov	r2, #0
    df18:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:39
    mProcess_List_Head->prev = procnode;
    df1c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    df20:	e5933004 	ldr	r3, [r3, #4]
    df24:	e51b200c 	ldr	r2, [fp, #-12]
    df28:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:41

    procnode->task = sKernelMem.Alloc<TTask_Struct>();
    df2c:	e59f00c0 	ldr	r0, [pc, #192]	; dff4 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0x110>
    df30:	eb0002c8 	bl	ea58 <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>
    df34:	e1a02000 	mov	r2, r0
    df38:	e51b300c 	ldr	r3, [fp, #-12]
    df3c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:43

    auto* task = procnode->task;
    df40:	e51b300c 	ldr	r3, [fp, #-12]
    df44:	e5933008 	ldr	r3, [r3, #8]
    df48:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:45

    task->pid = ++mLast_PID;
    df4c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    df50:	e5933000 	ldr	r3, [r3]
    df54:	e2832001 	add	r2, r3, #1
    df58:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    df5c:	e5832000 	str	r2, [r3]
    df60:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    df64:	e5932000 	ldr	r2, [r3]
    df68:	e51b3010 	ldr	r3, [fp, #-16]
    df6c:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:46
    task->sched_static_priority =
    df70:	e51b3010 	ldr	r3, [fp, #-16]
    df74:	e3a02005 	mov	r2, #5
    df78:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:48
    5; // TODO: pro ted je to jen hardcoded hodnota, do budoucna urcite bude nutne dovolit specifikovat
    task->sched_counter = task->sched_static_priority;
    df7c:	e51b3010 	ldr	r3, [fp, #-16]
    df80:	e5932018 	ldr	r2, [r3, #24]
    df84:	e51b3010 	ldr	r3, [fp, #-16]
    df88:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:49
    task->state = NTask_State::Running;
    df8c:	e51b3010 	ldr	r3, [fp, #-16]
    df90:	e3a02002 	mov	r2, #2
    df94:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:51

    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    df98:	e3a03000 	mov	r3, #0
    df9c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:51 (discriminator 3)
    dfa0:	e51b3008 	ldr	r3, [fp, #-8]
    dfa4:	e353000f 	cmp	r3, #15
    dfa8:	8a00000a 	bhi	dfd8 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0xf4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:52 (discriminator 2)
        task->opened_files[i] = nullptr;
    dfac:	e51b2010 	ldr	r2, [fp, #-16]
    dfb0:	e51b3008 	ldr	r3, [fp, #-8]
    dfb4:	e2833006 	add	r3, r3, #6
    dfb8:	e1a03103 	lsl	r3, r3, #2
    dfbc:	e0823003 	add	r3, r2, r3
    dfc0:	e3a02000 	mov	r2, #0
    dfc4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:51 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    dfc8:	e51b3008 	ldr	r3, [fp, #-8]
    dfcc:	e2833001 	add	r3, r3, #1
    dfd0:	e50b3008 	str	r3, [fp, #-8]
    dfd4:	eafffff1 	b	dfa0 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:54

    mCurrent_Task_Node = mProcess_List_Head;
    dfd8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dfdc:	e5932004 	ldr	r2, [r3, #4]
    dfe0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dfe4:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:55
}
    dfe8:	e320f000 	nop	{0}
    dfec:	e24bd004 	sub	sp, fp, #4
    dff0:	e8bd8800 	pop	{fp, pc}
    dff4:	00010c90 	muleq	r1, r0, ip

0000dff8 <_ZN16CProcess_Manager14Create_ProcessEm>:
_ZN16CProcess_Manager14Create_ProcessEm():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:58

uint32_t CProcess_Manager::Create_Process(unsigned long funcptr)
{
    dff8:	e92d4800 	push	{fp, lr}
    dffc:	e28db004 	add	fp, sp, #4
    e000:	e24dd018 	sub	sp, sp, #24
    e004:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    e008:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:59
    CProcess_List_Node* procnode = sKernelMem.Alloc<CProcess_List_Node>();
    e00c:	e59f01c4 	ldr	r0, [pc, #452]	; e1d8 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e0>
    e010:	eb000285 	bl	ea2c <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>
    e014:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:61

    procnode->next = mProcess_List_Head;
    e018:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e01c:	e5932004 	ldr	r2, [r3, #4]
    e020:	e51b300c 	ldr	r3, [fp, #-12]
    e024:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:62
    procnode->prev = nullptr;
    e028:	e51b300c 	ldr	r3, [fp, #-12]
    e02c:	e3a02000 	mov	r2, #0
    e030:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:63
    mProcess_List_Head->prev = procnode;
    e034:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e038:	e5933004 	ldr	r3, [r3, #4]
    e03c:	e51b200c 	ldr	r2, [fp, #-12]
    e040:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:64
    mProcess_List_Head = procnode;
    e044:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e048:	e51b200c 	ldr	r2, [fp, #-12]
    e04c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:66

    if (mCurrent_Task_Node == nullptr)
    e050:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e054:	e5933008 	ldr	r3, [r3, #8]
    e058:	e3530000 	cmp	r3, #0
    e05c:	1a000002 	bne	e06c <_ZN16CProcess_Manager14Create_ProcessEm+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:68
    {
        mCurrent_Task_Node = procnode;
    e060:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e064:	e51b200c 	ldr	r2, [fp, #-12]
    e068:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:71
    }

    procnode->task = sKernelMem.Alloc<TTask_Struct>();
    e06c:	e59f0164 	ldr	r0, [pc, #356]	; e1d8 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e0>
    e070:	eb000278 	bl	ea58 <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>
    e074:	e1a02000 	mov	r2, r0
    e078:	e51b300c 	ldr	r3, [fp, #-12]
    e07c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:73

    auto* task = procnode->task;
    e080:	e51b300c 	ldr	r3, [fp, #-12]
    e084:	e5933008 	ldr	r3, [r3, #8]
    e088:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:75

    task->pid = ++mLast_PID;
    e08c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e090:	e5933000 	ldr	r3, [r3]
    e094:	e2832001 	add	r2, r3, #1
    e098:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e09c:	e5832000 	str	r2, [r3]
    e0a0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e0a4:	e5932000 	ldr	r2, [r3]
    e0a8:	e51b3010 	ldr	r3, [fp, #-16]
    e0ac:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:76
    task->sched_static_priority =
    e0b0:	e51b3010 	ldr	r3, [fp, #-16]
    e0b4:	e3a02005 	mov	r2, #5
    e0b8:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:78
    5; // TODO: pro ted je to jen hardcoded hodnota, do budoucna urcite bude nutne dovolit specifikovat
    task->sched_counter = task->sched_static_priority;
    e0bc:	e51b3010 	ldr	r3, [fp, #-16]
    e0c0:	e5932018 	ldr	r2, [r3, #24]
    e0c4:	e51b3010 	ldr	r3, [fp, #-16]
    e0c8:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:79
    task->state = NTask_State::New;
    e0cc:	e51b3010 	ldr	r3, [fp, #-16]
    e0d0:	e3a02000 	mov	r2, #0
    e0d4:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:81

    task->cpu_context.lr = funcptr;
    e0d8:	e51b3010 	ldr	r3, [fp, #-16]
    e0dc:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    e0e0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:82
    task->cpu_context.pc = reinterpret_cast<unsigned long>(&process_bootstrap);
    e0e4:	e59f20f0 	ldr	r2, [pc, #240]	; e1dc <_ZN16CProcess_Manager14Create_ProcessEm+0x1e4>
    e0e8:	e51b3010 	ldr	r3, [fp, #-16]
    e0ec:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:83
    task->cpu_context.sp = static_cast<unsigned long>(sPage_Manager.Alloc_Page()) + mem::PageSize;
    e0f0:	e59f00e8 	ldr	r0, [pc, #232]	; e1e0 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e8>
    e0f4:	ebfffef6 	bl	dcd4 <_ZN13CPage_Manager10Alloc_PageEv>
    e0f8:	e1a03000 	mov	r3, r0
    e0fc:	e2832901 	add	r2, r3, #16384	; 0x4000
    e100:	e51b3010 	ldr	r3, [fp, #-16]
    e104:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:85

    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e108:	e3a03000 	mov	r3, #0
    e10c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:85 (discriminator 3)
    e110:	e51b3008 	ldr	r3, [fp, #-8]
    e114:	e353000f 	cmp	r3, #15
    e118:	8a00000a 	bhi	e148 <_ZN16CProcess_Manager14Create_ProcessEm+0x150>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:86 (discriminator 2)
        task->opened_files[i] = nullptr;
    e11c:	e51b2010 	ldr	r2, [fp, #-16]
    e120:	e51b3008 	ldr	r3, [fp, #-8]
    e124:	e2833006 	add	r3, r3, #6
    e128:	e1a03103 	lsl	r3, r3, #2
    e12c:	e0823003 	add	r3, r2, r3
    e130:	e3a02000 	mov	r2, #0
    e134:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:85 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e138:	e51b3008 	ldr	r3, [fp, #-8]
    e13c:	e2833001 	add	r3, r3, #1
    e140:	e50b3008 	str	r3, [fp, #-8]
    e144:	eafffff1 	b	e110 <_ZN16CProcess_Manager14Create_ProcessEm+0x118>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:88

    sMonitor << "Created process with pid " << (unsigned int)task->pid << " ("
    e148:	e59f1094 	ldr	r1, [pc, #148]	; e1e4 <_ZN16CProcess_Manager14Create_ProcessEm+0x1ec>
    e14c:	e59f0094 	ldr	r0, [pc, #148]	; e1e8 <_ZN16CProcess_Manager14Create_ProcessEm+0x1f0>
    e150:	ebffecbd 	bl	944c <_ZN8CMonitorlsEPKc>
    e154:	e1a02000 	mov	r2, r0
    e158:	e51b3010 	ldr	r3, [fp, #-16]
    e15c:	e593300c 	ldr	r3, [r3, #12]
    e160:	e1a01003 	mov	r1, r3
    e164:	e1a00002 	mov	r0, r2
    e168:	ebffece2 	bl	94f8 <_ZN8CMonitorlsEj>
    e16c:	e1a03000 	mov	r3, r0
    e170:	e59f1074 	ldr	r1, [pc, #116]	; e1ec <_ZN16CProcess_Manager14Create_ProcessEm+0x1f4>
    e174:	e1a00003 	mov	r0, r3
    e178:	ebffecb3 	bl	944c <_ZN8CMonitorlsEPKc>
    e17c:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:89
             << "SP = 0x" << CMonitor::NNumber_Base::HEX << (unsigned int)task->cpu_context.sp << ")\n";
    e180:	e59f1068 	ldr	r1, [pc, #104]	; e1f0 <_ZN16CProcess_Manager14Create_ProcessEm+0x1f8>
    e184:	e1a00003 	mov	r0, r3
    e188:	ebffecaf 	bl	944c <_ZN8CMonitorlsEPKc>
    e18c:	e1a03000 	mov	r3, r0
    e190:	e3a01010 	mov	r1, #16
    e194:	e1a00003 	mov	r0, r3
    e198:	ebffecc9 	bl	94c4 <_ZN8CMonitorlsENS_12NNumber_BaseE>
    e19c:	e1a02000 	mov	r2, r0
    e1a0:	e51b3010 	ldr	r3, [fp, #-16]
    e1a4:	e5933004 	ldr	r3, [r3, #4]
    e1a8:	e1a01003 	mov	r1, r3
    e1ac:	e1a00002 	mov	r0, r2
    e1b0:	ebffecd0 	bl	94f8 <_ZN8CMonitorlsEj>
    e1b4:	e1a03000 	mov	r3, r0
    e1b8:	e59f1034 	ldr	r1, [pc, #52]	; e1f4 <_ZN16CProcess_Manager14Create_ProcessEm+0x1fc>
    e1bc:	e1a00003 	mov	r0, r3
    e1c0:	ebffeca1 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:91

    return task->pid;
    e1c4:	e51b3010 	ldr	r3, [fp, #-16]
    e1c8:	e593300c 	ldr	r3, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:92
}
    e1cc:	e1a00003 	mov	r0, r3
    e1d0:	e24bd004 	sub	sp, fp, #4
    e1d4:	e8bd8800 	pop	{fp, pc}
    e1d8:	00010c90 	muleq	r1, r0, ip
    e1dc:	0000ea84 	andeq	lr, r0, r4, lsl #21
    e1e0:	00010c94 	muleq	r1, r4, ip
    e1e4:	000104f4 	strdeq	r0, [r1], -r4
    e1e8:	00010b94 	muleq	r1, r4, fp
    e1ec:	00010510 	andeq	r0, r1, r0, lsl r5
    e1f0:	00010514 	andeq	r0, r1, r4, lsl r5
    e1f4:	0001051c 	andeq	r0, r1, ip, lsl r5

0000e1f8 <_ZN16CProcess_Manager8ScheduleEv>:
_ZN16CProcess_Manager8ScheduleEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:95

void CProcess_Manager::Schedule()
{
    e1f8:	e92d4800 	push	{fp, lr}
    e1fc:	e28db004 	add	fp, sp, #4
    e200:	e24dd010 	sub	sp, sp, #16
    e204:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:97
    // je nejaky proces naplanovany?
    if (mCurrent_Task_Node)
    e208:	e51b3010 	ldr	r3, [fp, #-16]
    e20c:	e5933008 	ldr	r3, [r3, #8]
    e210:	e3530000 	cmp	r3, #0
    e214:	0a000011 	beq	e260 <_ZN16CProcess_Manager8ScheduleEv+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:100
    {
        // snizime citac planovace
        mCurrent_Task_Node->task->sched_counter--;
    e218:	e51b3010 	ldr	r3, [fp, #-16]
    e21c:	e5933008 	ldr	r3, [r3, #8]
    e220:	e5933008 	ldr	r3, [r3, #8]
    e224:	e5932014 	ldr	r2, [r3, #20]
    e228:	e2422001 	sub	r2, r2, #1
    e22c:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:103
        // pokud je citac vetsi nez 0, zatim nebudeme preplanovavat (a zaroven je proces stale ve stavu Running -
        // nezablokoval se nad necim)
        if (mCurrent_Task_Node->task->sched_counter > 0 && mCurrent_Task_Node->task->state == NTask_State::Running)
    e230:	e51b3010 	ldr	r3, [fp, #-16]
    e234:	e5933008 	ldr	r3, [r3, #8]
    e238:	e5933008 	ldr	r3, [r3, #8]
    e23c:	e5933014 	ldr	r3, [r3, #20]
    e240:	e3530000 	cmp	r3, #0
    e244:	0a000005 	beq	e260 <_ZN16CProcess_Manager8ScheduleEv+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:103 (discriminator 1)
    e248:	e51b3010 	ldr	r3, [fp, #-16]
    e24c:	e5933008 	ldr	r3, [r3, #8]
    e250:	e5933008 	ldr	r3, [r3, #8]
    e254:	e5933010 	ldr	r3, [r3, #16]
    e258:	e3530002 	cmp	r3, #2
    e25c:	0a00003c 	beq	e354 <_ZN16CProcess_Manager8ScheduleEv+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:110
    }

    // najdeme dalsi proces na planovani

    // vybereme dalsi proces v rade
    CProcess_List_Node* next = mCurrent_Task_Node ? mCurrent_Task_Node->next : mProcess_List_Head;
    e260:	e51b3010 	ldr	r3, [fp, #-16]
    e264:	e5933008 	ldr	r3, [r3, #8]
    e268:	e3530000 	cmp	r3, #0
    e26c:	0a000003 	beq	e280 <_ZN16CProcess_Manager8ScheduleEv+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:110 (discriminator 1)
    e270:	e51b3010 	ldr	r3, [fp, #-16]
    e274:	e5933008 	ldr	r3, [r3, #8]
    e278:	e5933004 	ldr	r3, [r3, #4]
    e27c:	ea000001 	b	e288 <_ZN16CProcess_Manager8ScheduleEv+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:110 (discriminator 2)
    e280:	e51b3010 	ldr	r3, [fp, #-16]
    e284:	e5933004 	ldr	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:110 (discriminator 4)
    e288:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:111 (discriminator 4)
    if (!next)
    e28c:	e51b3008 	ldr	r3, [fp, #-8]
    e290:	e3530000 	cmp	r3, #0
    e294:	1a000002 	bne	e2a4 <_ZN16CProcess_Manager8ScheduleEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:112
        next = mProcess_List_Head;
    e298:	e51b3010 	ldr	r3, [fp, #-16]
    e29c:	e5933004 	ldr	r3, [r3, #4]
    e2a0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:116

    // proces k naplanovani musi bud byt ve stavu runnable (jiz nekdy bezel a muze bezet znovu) nebo running (pak jde o
    // stavajici proces) a nebo new (novy proces, ktery jeste nebyl planovany)
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e2a4:	e51b3008 	ldr	r3, [fp, #-8]
    e2a8:	e5933008 	ldr	r3, [r3, #8]
    e2ac:	e5933010 	ldr	r3, [r3, #16]
    e2b0:	e3530001 	cmp	r3, #1
    e2b4:	0a000014 	beq	e30c <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:116 (discriminator 1)
    e2b8:	e51b3008 	ldr	r3, [fp, #-8]
    e2bc:	e5933008 	ldr	r3, [r3, #8]
    e2c0:	e5933010 	ldr	r3, [r3, #16]
    e2c4:	e3530002 	cmp	r3, #2
    e2c8:	0a00000f 	beq	e30c <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:117 (discriminator 2)
           next->task->state != NTask_State::New)
    e2cc:	e51b3008 	ldr	r3, [fp, #-8]
    e2d0:	e5933008 	ldr	r3, [r3, #8]
    e2d4:	e5933010 	ldr	r3, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:116 (discriminator 2)
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e2d8:	e3530000 	cmp	r3, #0
    e2dc:	0a00000a 	beq	e30c <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:119
    {
        if (!next)
    e2e0:	e51b3008 	ldr	r3, [fp, #-8]
    e2e4:	e3530000 	cmp	r3, #0
    e2e8:	1a000003 	bne	e2fc <_ZN16CProcess_Manager8ScheduleEv+0x104>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:121
        {
            next = mCurrent_Task_Node;
    e2ec:	e51b3010 	ldr	r3, [fp, #-16]
    e2f0:	e5933008 	ldr	r3, [r3, #8]
    e2f4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:122
            break;
    e2f8:	ea000003 	b	e30c <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:125
        }
        else
            next = next->next;
    e2fc:	e51b3008 	ldr	r3, [fp, #-8]
    e300:	e5933004 	ldr	r3, [r3, #4]
    e304:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:116
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e308:	eaffffe5 	b	e2a4 <_ZN16CProcess_Manager8ScheduleEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:129
    }

    // stavajici proces je jediny planovatelny - nemusime nic preplanovavat
    if (next == mCurrent_Task_Node)
    e30c:	e51b3010 	ldr	r3, [fp, #-16]
    e310:	e5933008 	ldr	r3, [r3, #8]
    e314:	e51b2008 	ldr	r2, [fp, #-8]
    e318:	e1520003 	cmp	r2, r3
    e31c:	1a000008 	bne	e344 <_ZN16CProcess_Manager8ScheduleEv+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:132
    {
        // nastavime mu zase zpatky jeho pridel casovych kvant a vracime se
        mCurrent_Task_Node->task->sched_counter = mCurrent_Task_Node->task->sched_static_priority;
    e320:	e51b3010 	ldr	r3, [fp, #-16]
    e324:	e5933008 	ldr	r3, [r3, #8]
    e328:	e5932008 	ldr	r2, [r3, #8]
    e32c:	e51b3010 	ldr	r3, [fp, #-16]
    e330:	e5933008 	ldr	r3, [r3, #8]
    e334:	e5933008 	ldr	r3, [r3, #8]
    e338:	e5922018 	ldr	r2, [r2, #24]
    e33c:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:133
        return;
    e340:	ea000004 	b	e358 <_ZN16CProcess_Manager8ScheduleEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:136
    }

    Switch_To(next);
    e344:	e51b1008 	ldr	r1, [fp, #-8]
    e348:	e51b0010 	ldr	r0, [fp, #-16]
    e34c:	eb000003 	bl	e360 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node>
    e350:	ea000000 	b	e358 <_ZN16CProcess_Manager8ScheduleEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:104
            return;
    e354:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:137
}
    e358:	e24bd004 	sub	sp, fp, #4
    e35c:	e8bd8800 	pop	{fp, pc}

0000e360 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node>:
_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:140

void CProcess_Manager::Switch_To(CProcess_List_Node* node)
{
    e360:	e92d4800 	push	{fp, lr}
    e364:	e28db004 	add	fp, sp, #4
    e368:	e24dd010 	sub	sp, sp, #16
    e36c:	e50b0010 	str	r0, [fp, #-16]
    e370:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:143
    // pokud je stavajici proces ve stavu Running (muze teoreticky byt jeste Blocked), vratime ho do stavu Runnable
    // Blocked prehazovat nebudeme ze zjevnych duvodu
    if (mCurrent_Task_Node->task->state == NTask_State::Running)
    e374:	e51b3010 	ldr	r3, [fp, #-16]
    e378:	e5933008 	ldr	r3, [r3, #8]
    e37c:	e5933008 	ldr	r3, [r3, #8]
    e380:	e5933010 	ldr	r3, [r3, #16]
    e384:	e3530002 	cmp	r3, #2
    e388:	1a000004 	bne	e3a0 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:144
        mCurrent_Task_Node->task->state = NTask_State::Runnable;
    e38c:	e51b3010 	ldr	r3, [fp, #-16]
    e390:	e5933008 	ldr	r3, [r3, #8]
    e394:	e5933008 	ldr	r3, [r3, #8]
    e398:	e3a02001 	mov	r2, #1
    e39c:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:147

    // projistotu vynulujeme prideleny pocet casovych kvant
    mCurrent_Task_Node->task->sched_counter = 0;
    e3a0:	e51b3010 	ldr	r3, [fp, #-16]
    e3a4:	e5933008 	ldr	r3, [r3, #8]
    e3a8:	e5933008 	ldr	r3, [r3, #8]
    e3ac:	e3a02000 	mov	r2, #0
    e3b0:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:149

    TCPU_Context* old = &mCurrent_Task_Node->task->cpu_context;
    e3b4:	e51b3010 	ldr	r3, [fp, #-16]
    e3b8:	e5933008 	ldr	r3, [r3, #8]
    e3bc:	e5933008 	ldr	r3, [r3, #8]
    e3c0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:150
    bool is_first_time = (node->task->state == NTask_State::New);
    e3c4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e3c8:	e5933008 	ldr	r3, [r3, #8]
    e3cc:	e5933010 	ldr	r3, [r3, #16]
    e3d0:	e3530000 	cmp	r3, #0
    e3d4:	03a03001 	moveq	r3, #1
    e3d8:	13a03000 	movne	r3, #0
    e3dc:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:153

    // prehodime na novy proces, pridelime casova kvanta a nastavime proces do stavu Running
    mCurrent_Task_Node = node;
    e3e0:	e51b3010 	ldr	r3, [fp, #-16]
    e3e4:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    e3e8:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:154
    mCurrent_Task_Node->task->sched_counter = mCurrent_Task_Node->task->sched_static_priority;
    e3ec:	e51b3010 	ldr	r3, [fp, #-16]
    e3f0:	e5933008 	ldr	r3, [r3, #8]
    e3f4:	e5932008 	ldr	r2, [r3, #8]
    e3f8:	e51b3010 	ldr	r3, [fp, #-16]
    e3fc:	e5933008 	ldr	r3, [r3, #8]
    e400:	e5933008 	ldr	r3, [r3, #8]
    e404:	e5922018 	ldr	r2, [r2, #24]
    e408:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:155
    mCurrent_Task_Node->task->state = NTask_State::Running;
    e40c:	e51b3010 	ldr	r3, [fp, #-16]
    e410:	e5933008 	ldr	r3, [r3, #8]
    e414:	e5933008 	ldr	r3, [r3, #8]
    e418:	e3a02002 	mov	r2, #2
    e41c:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:158

    // pokud je to poprve, co je proces planovany, musime to vzit jeste pres malou odbocku ("bootstrap")
    if (is_first_time)
    e420:	e55b3009 	ldrb	r3, [fp, #-9]
    e424:	e3530000 	cmp	r3, #0
    e428:	0a000005 	beq	e444 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0xe4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:159
        context_switch_first(&node->task->cpu_context, old);
    e42c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e430:	e5933008 	ldr	r3, [r3, #8]
    e434:	e51b1008 	ldr	r1, [fp, #-8]
    e438:	e1a00003 	mov	r0, r3
    e43c:	eb00019b 	bl	eab0 <context_switch_first>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:162
    else
        context_switch(&node->task->cpu_context, old);
}
    e440:	ea000004 	b	e458 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:161
        context_switch(&node->task->cpu_context, old);
    e444:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e448:	e5933008 	ldr	r3, [r3, #8]
    e44c:	e51b1008 	ldr	r1, [fp, #-8]
    e450:	e1a00003 	mov	r0, r3
    e454:	eb00018c 	bl	ea8c <context_switch>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:162
}
    e458:	e320f000 	nop	{0}
    e45c:	e24bd004 	sub	sp, fp, #4
    e460:	e8bd8800 	pop	{fp, pc}

0000e464 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile>:
_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:165

uint32_t CProcess_Manager::Map_File_To_Current(IFile* file)
{
    e464:	e92d4800 	push	{fp, lr}
    e468:	e28db004 	add	fp, sp, #4
    e46c:	e24dd010 	sub	sp, sp, #16
    e470:	e50b0010 	str	r0, [fp, #-16]
    e474:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:168
    // TODO: zamek

    TTask_Struct* current = Get_Current_Process();
    e478:	e51b0010 	ldr	r0, [fp, #-16]
    e47c:	ebfffe87 	bl	dea0 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>
    e480:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:169
    if (!current)
    e484:	e51b300c 	ldr	r3, [fp, #-12]
    e488:	e3530000 	cmp	r3, #0
    e48c:	1a000001 	bne	e498 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:170
        return Invalid_Handle;
    e490:	e3e03000 	mvn	r3, #0
    e494:	ea00001a 	b	e504 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:173

    // najdeme volny slot, pokud je
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e498:	e3a03000 	mov	r3, #0
    e49c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:173 (discriminator 1)
    e4a0:	e51b3008 	ldr	r3, [fp, #-8]
    e4a4:	e353000f 	cmp	r3, #15
    e4a8:	8a000014 	bhi	e500 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:176
    {
        // volny slot - namapujeme soubor a vracime handle (index do tabulky)
        if (current->opened_files[i] == nullptr)
    e4ac:	e51b200c 	ldr	r2, [fp, #-12]
    e4b0:	e51b3008 	ldr	r3, [fp, #-8]
    e4b4:	e2833006 	add	r3, r3, #6
    e4b8:	e1a03103 	lsl	r3, r3, #2
    e4bc:	e0823003 	add	r3, r2, r3
    e4c0:	e5933004 	ldr	r3, [r3, #4]
    e4c4:	e3530000 	cmp	r3, #0
    e4c8:	1a000008 	bne	e4f0 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:178
        {
            current->opened_files[i] = file;
    e4cc:	e51b200c 	ldr	r2, [fp, #-12]
    e4d0:	e51b3008 	ldr	r3, [fp, #-8]
    e4d4:	e2833006 	add	r3, r3, #6
    e4d8:	e1a03103 	lsl	r3, r3, #2
    e4dc:	e0823003 	add	r3, r2, r3
    e4e0:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    e4e4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:179
            return i;
    e4e8:	e51b3008 	ldr	r3, [fp, #-8]
    e4ec:	ea000004 	b	e504 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:173 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e4f0:	e51b3008 	ldr	r3, [fp, #-8]
    e4f4:	e2833001 	add	r3, r3, #1
    e4f8:	e50b3008 	str	r3, [fp, #-8]
    e4fc:	eaffffe7 	b	e4a0 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:184
        }
    }

    // nenasli jsme - vracime neplatny handle (vnejsi kod nejspis bude chtit soubor zase zavrit)
    return Invalid_Handle;
    e500:	e3e03000 	mvn	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:185
}
    e504:	e1a00003 	mov	r0, r3
    e508:	e24bd004 	sub	sp, fp, #4
    e50c:	e8bd8800 	pop	{fp, pc}

0000e510 <_ZN16CProcess_Manager18Unmap_File_CurrentEj>:
_ZN16CProcess_Manager18Unmap_File_CurrentEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:188

bool CProcess_Manager::Unmap_File_Current(uint32_t handle)
{
    e510:	e92d4800 	push	{fp, lr}
    e514:	e28db004 	add	fp, sp, #4
    e518:	e24dd010 	sub	sp, sp, #16
    e51c:	e50b0010 	str	r0, [fp, #-16]
    e520:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:189
    TTask_Struct* current = Get_Current_Process();
    e524:	e51b0010 	ldr	r0, [fp, #-16]
    e528:	ebfffe5c 	bl	dea0 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>
    e52c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:190
    if (!current || handle >= Max_Process_Opened_Files)
    e530:	e51b3008 	ldr	r3, [fp, #-8]
    e534:	e3530000 	cmp	r3, #0
    e538:	0a000002 	beq	e548 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:190 (discriminator 1)
    e53c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e540:	e353000f 	cmp	r3, #15
    e544:	9a000001 	bls	e550 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:191
        return false;
    e548:	e3a03000 	mov	r3, #0
    e54c:	ea000011 	b	e598 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:193

    if (!current->opened_files[handle])
    e550:	e51b2008 	ldr	r2, [fp, #-8]
    e554:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e558:	e2833006 	add	r3, r3, #6
    e55c:	e1a03103 	lsl	r3, r3, #2
    e560:	e0823003 	add	r3, r2, r3
    e564:	e5933004 	ldr	r3, [r3, #4]
    e568:	e3530000 	cmp	r3, #0
    e56c:	1a000001 	bne	e578 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:194
        return false;
    e570:	e3a03000 	mov	r3, #0
    e574:	ea000007 	b	e598 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:196

    current->opened_files[handle] = nullptr;
    e578:	e51b2008 	ldr	r2, [fp, #-8]
    e57c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e580:	e2833006 	add	r3, r3, #6
    e584:	e1a03103 	lsl	r3, r3, #2
    e588:	e0823003 	add	r3, r2, r3
    e58c:	e3a02000 	mov	r2, #0
    e590:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:197
    return true;
    e594:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:198
}
    e598:	e1a00003 	mov	r0, r3
    e59c:	e24bd004 	sub	sp, fp, #4
    e5a0:	e8bd8800 	pop	{fp, pc}

0000e5a4 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result>:
_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:202

void CProcess_Manager::Handle_Process_SWI(
NSWI_Process_Service svc_idx, uint32_t r0, uint32_t r1, uint32_t r2, TSWI_Result& target)
{
    e5a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    e5a8:	e28db000 	add	fp, sp, #0
    e5ac:	e24dd014 	sub	sp, sp, #20
    e5b0:	e50b0008 	str	r0, [fp, #-8]
    e5b4:	e50b100c 	str	r1, [fp, #-12]
    e5b8:	e50b2010 	str	r2, [fp, #-16]
    e5bc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:204
    // TODO: signalizace chyby
    if (!mCurrent_Task_Node)
    e5c0:	e51b3008 	ldr	r3, [fp, #-8]
    e5c4:	e5933008 	ldr	r3, [r3, #8]
    e5c8:	e3530000 	cmp	r3, #0
    e5cc:	0a000009 	beq	e5f8 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:207
        return;

    switch (svc_idx)
    e5d0:	e51b300c 	ldr	r3, [fp, #-12]
    e5d4:	e3530000 	cmp	r3, #0
    e5d8:	1a000007 	bne	e5fc <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:210
    {
        case NSWI_Process_Service::Get_PID:
            target.r0 = mCurrent_Task_Node->task->pid;
    e5dc:	e51b3008 	ldr	r3, [fp, #-8]
    e5e0:	e5933008 	ldr	r3, [r3, #8]
    e5e4:	e5933008 	ldr	r3, [r3, #8]
    e5e8:	e593200c 	ldr	r2, [r3, #12]
    e5ec:	e59b3008 	ldr	r3, [fp, #8]
    e5f0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:211
            break;
    e5f4:	ea000000 	b	e5fc <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:205
        return;
    e5f8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:213
    }
}
    e5fc:	e28bd000 	add	sp, fp, #0
    e600:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    e604:	e12fff1e 	bx	lr

0000e608 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result>:
_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:217

void CProcess_Manager::Handle_Filesystem_SWI(
NSWI_Filesystem_Service svc_idx, uint32_t r0, uint32_t r1, uint32_t r2, TSWI_Result& target)
{
    e608:	e92d4800 	push	{fp, lr}
    e60c:	e28db004 	add	fp, sp, #4
    e610:	e24dd018 	sub	sp, sp, #24
    e614:	e50b0010 	str	r0, [fp, #-16]
    e618:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    e61c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    e620:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:219
    // TODO: signalizace chyby
    if (!mCurrent_Task_Node)
    e624:	e51b3010 	ldr	r3, [fp, #-16]
    e628:	e5933008 	ldr	r3, [r3, #8]
    e62c:	e3530000 	cmp	r3, #0
    e630:	0a0000d3 	beq	e984 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x37c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:222
        return;

    switch (svc_idx)
    e634:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e638:	e3530004 	cmp	r3, #4
    e63c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    e640:	ea0000dc 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
    e644:	0000e658 	andeq	lr, r0, r8, asr r6
    e648:	0000e6ec 	andeq	lr, r0, ip, ror #13
    e64c:	0000e794 	muleq	r0, r4, r7
    e650:	0000e83c 	andeq	lr, r0, ip, lsr r8
    e654:	0000e8e4 	andeq	lr, r0, r4, ror #17
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:225
    {
        case NSWI_Filesystem_Service::Open: {
            target.r0 = Invalid_Handle;
    e658:	e59b3008 	ldr	r3, [fp, #8]
    e65c:	e3e02000 	mvn	r2, #0
    e660:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:227

            IFile* f = sFilesystem.Open(reinterpret_cast<const char*>(r0), static_cast<NFile_Open_Mode>(r1));
    e664:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e668:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    e66c:	e1a01003 	mov	r1, r3
    e670:	e59f0348 	ldr	r0, [pc, #840]	; e9c0 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b8>
    e674:	ebfff634 	bl	bf4c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode>
    e678:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:228
            if (!f)
    e67c:	e51b3008 	ldr	r3, [fp, #-8]
    e680:	e3530000 	cmp	r3, #0
    e684:	0a0000c0 	beq	e98c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x384>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:231
                return;

            target.r0 = Map_File_To_Current(f);
    e688:	e51b1008 	ldr	r1, [fp, #-8]
    e68c:	e51b0010 	ldr	r0, [fp, #-16]
    e690:	ebffff73 	bl	e464 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile>
    e694:	e1a02000 	mov	r2, r0
    e698:	e59b3008 	ldr	r3, [fp, #8]
    e69c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:234

            // nepodarilo se namapovat, napr. proto, ze jsme dosahli limitu otevrenych souboru
            if (target.r0 == Invalid_Handle)
    e6a0:	e59b3008 	ldr	r3, [fp, #8]
    e6a4:	e5933000 	ldr	r3, [r3]
    e6a8:	e3730001 	cmn	r3, #1
    e6ac:	1a0000b8 	bne	e994 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:236
            {
                f->Close();
    e6b0:	e51b3008 	ldr	r3, [fp, #-8]
    e6b4:	e5933000 	ldr	r3, [r3]
    e6b8:	e2833010 	add	r3, r3, #16
    e6bc:	e5933000 	ldr	r3, [r3]
    e6c0:	e51b0008 	ldr	r0, [fp, #-8]
    e6c4:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:237
                delete f;
    e6c8:	e51b3008 	ldr	r3, [fp, #-8]
    e6cc:	e3530000 	cmp	r3, #0
    e6d0:	0a0000af 	beq	e994 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:237 (discriminator 1)
    e6d4:	e5932000 	ldr	r2, [r3]
    e6d8:	e2822004 	add	r2, r2, #4
    e6dc:	e5922000 	ldr	r2, [r2]
    e6e0:	e1a00003 	mov	r0, r3
    e6e4:	e12fff32 	blx	r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:239 (discriminator 1)
            }
            break;
    e6e8:	ea0000a9 	b	e994 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:242
        }
        case NSWI_Filesystem_Service::Read: {
            target.r0 = 0;
    e6ec:	e59b3008 	ldr	r3, [fp, #8]
    e6f0:	e3a02000 	mov	r2, #0
    e6f4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:244

            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e6f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e6fc:	e3530010 	cmp	r3, #16
    e700:	8a0000a5 	bhi	e99c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x394>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:244 (discriminator 1)
    e704:	e51b3010 	ldr	r3, [fp, #-16]
    e708:	e5933008 	ldr	r3, [r3, #8]
    e70c:	e5932008 	ldr	r2, [r3, #8]
    e710:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e714:	e2833006 	add	r3, r3, #6
    e718:	e1a03103 	lsl	r3, r3, #2
    e71c:	e0823003 	add	r3, r2, r3
    e720:	e5933004 	ldr	r3, [r3, #4]
    e724:	e3530000 	cmp	r3, #0
    e728:	0a00009b 	beq	e99c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x394>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:247
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Read(reinterpret_cast<char*>(r1), r2);
    e72c:	e51b3010 	ldr	r3, [fp, #-16]
    e730:	e5933008 	ldr	r3, [r3, #8]
    e734:	e5932008 	ldr	r2, [r3, #8]
    e738:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e73c:	e2833006 	add	r3, r3, #6
    e740:	e1a03103 	lsl	r3, r3, #2
    e744:	e0823003 	add	r3, r2, r3
    e748:	e5930004 	ldr	r0, [r3, #4]
    e74c:	e51b3010 	ldr	r3, [fp, #-16]
    e750:	e5933008 	ldr	r3, [r3, #8]
    e754:	e5932008 	ldr	r2, [r3, #8]
    e758:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e75c:	e2833006 	add	r3, r3, #6
    e760:	e1a03103 	lsl	r3, r3, #2
    e764:	e0823003 	add	r3, r2, r3
    e768:	e5933004 	ldr	r3, [r3, #4]
    e76c:	e5933000 	ldr	r3, [r3]
    e770:	e2833008 	add	r3, r3, #8
    e774:	e5933000 	ldr	r3, [r3]
    e778:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e77c:	e59b2004 	ldr	r2, [fp, #4]
    e780:	e12fff33 	blx	r3
    e784:	e1a02000 	mov	r2, r0
    e788:	e59b3008 	ldr	r3, [fp, #8]
    e78c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:248
            break;
    e790:	ea000088 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:251
        }
        case NSWI_Filesystem_Service::Write: {
            target.r0 = 0;
    e794:	e59b3008 	ldr	r3, [fp, #8]
    e798:	e3a02000 	mov	r2, #0
    e79c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:253

            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e7a0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e7a4:	e3530010 	cmp	r3, #16
    e7a8:	8a00007d 	bhi	e9a4 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:253 (discriminator 1)
    e7ac:	e51b3010 	ldr	r3, [fp, #-16]
    e7b0:	e5933008 	ldr	r3, [r3, #8]
    e7b4:	e5932008 	ldr	r2, [r3, #8]
    e7b8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e7bc:	e2833006 	add	r3, r3, #6
    e7c0:	e1a03103 	lsl	r3, r3, #2
    e7c4:	e0823003 	add	r3, r2, r3
    e7c8:	e5933004 	ldr	r3, [r3, #4]
    e7cc:	e3530000 	cmp	r3, #0
    e7d0:	0a000073 	beq	e9a4 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:256
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Write(reinterpret_cast<const char*>(r1), r2);
    e7d4:	e51b3010 	ldr	r3, [fp, #-16]
    e7d8:	e5933008 	ldr	r3, [r3, #8]
    e7dc:	e5932008 	ldr	r2, [r3, #8]
    e7e0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e7e4:	e2833006 	add	r3, r3, #6
    e7e8:	e1a03103 	lsl	r3, r3, #2
    e7ec:	e0823003 	add	r3, r2, r3
    e7f0:	e5930004 	ldr	r0, [r3, #4]
    e7f4:	e51b3010 	ldr	r3, [fp, #-16]
    e7f8:	e5933008 	ldr	r3, [r3, #8]
    e7fc:	e5932008 	ldr	r2, [r3, #8]
    e800:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e804:	e2833006 	add	r3, r3, #6
    e808:	e1a03103 	lsl	r3, r3, #2
    e80c:	e0823003 	add	r3, r2, r3
    e810:	e5933004 	ldr	r3, [r3, #4]
    e814:	e5933000 	ldr	r3, [r3]
    e818:	e283300c 	add	r3, r3, #12
    e81c:	e5933000 	ldr	r3, [r3]
    e820:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e824:	e59b2004 	ldr	r2, [fp, #4]
    e828:	e12fff33 	blx	r3
    e82c:	e1a02000 	mov	r2, r0
    e830:	e59b3008 	ldr	r3, [fp, #8]
    e834:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:257
            break;
    e838:	ea00005e 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:260
        }
        case NSWI_Filesystem_Service::Close: {
            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e83c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e840:	e3530010 	cmp	r3, #16
    e844:	8a000058 	bhi	e9ac <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:260 (discriminator 1)
    e848:	e51b3010 	ldr	r3, [fp, #-16]
    e84c:	e5933008 	ldr	r3, [r3, #8]
    e850:	e5932008 	ldr	r2, [r3, #8]
    e854:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e858:	e2833006 	add	r3, r3, #6
    e85c:	e1a03103 	lsl	r3, r3, #2
    e860:	e0823003 	add	r3, r2, r3
    e864:	e5933004 	ldr	r3, [r3, #4]
    e868:	e3530000 	cmp	r3, #0
    e86c:	0a00004e 	beq	e9ac <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:263
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Close();
    e870:	e51b3010 	ldr	r3, [fp, #-16]
    e874:	e5933008 	ldr	r3, [r3, #8]
    e878:	e5932008 	ldr	r2, [r3, #8]
    e87c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e880:	e2833006 	add	r3, r3, #6
    e884:	e1a03103 	lsl	r3, r3, #2
    e888:	e0823003 	add	r3, r2, r3
    e88c:	e5931004 	ldr	r1, [r3, #4]
    e890:	e51b3010 	ldr	r3, [fp, #-16]
    e894:	e5933008 	ldr	r3, [r3, #8]
    e898:	e5932008 	ldr	r2, [r3, #8]
    e89c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e8a0:	e2833006 	add	r3, r3, #6
    e8a4:	e1a03103 	lsl	r3, r3, #2
    e8a8:	e0823003 	add	r3, r2, r3
    e8ac:	e5933004 	ldr	r3, [r3, #4]
    e8b0:	e5933000 	ldr	r3, [r3]
    e8b4:	e2833010 	add	r3, r3, #16
    e8b8:	e5933000 	ldr	r3, [r3]
    e8bc:	e1a00001 	mov	r0, r1
    e8c0:	e12fff33 	blx	r3
    e8c4:	e1a03000 	mov	r3, r0
    e8c8:	e1a02003 	mov	r2, r3
    e8cc:	e59b3008 	ldr	r3, [fp, #8]
    e8d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:264
            Unmap_File_Current(r0);
    e8d4:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    e8d8:	e51b0010 	ldr	r0, [fp, #-16]
    e8dc:	ebffff0b 	bl	e510 <_ZN16CProcess_Manager18Unmap_File_CurrentEj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:266

            break;
    e8e0:	ea000034 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:269
        }
        case NSWI_Filesystem_Service::IOCtl: {
            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e8e4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e8e8:	e3530010 	cmp	r3, #16
    e8ec:	8a000030 	bhi	e9b4 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:269 (discriminator 1)
    e8f0:	e51b3010 	ldr	r3, [fp, #-16]
    e8f4:	e5933008 	ldr	r3, [r3, #8]
    e8f8:	e5932008 	ldr	r2, [r3, #8]
    e8fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e900:	e2833006 	add	r3, r3, #6
    e904:	e1a03103 	lsl	r3, r3, #2
    e908:	e0823003 	add	r3, r2, r3
    e90c:	e5933004 	ldr	r3, [r3, #4]
    e910:	e3530000 	cmp	r3, #0
    e914:	0a000026 	beq	e9b4 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:272
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->IOCtl(static_cast<NIOCtl_Operation>(r1),
    e918:	e51b3010 	ldr	r3, [fp, #-16]
    e91c:	e5933008 	ldr	r3, [r3, #8]
    e920:	e5932008 	ldr	r2, [r3, #8]
    e924:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e928:	e2833006 	add	r3, r3, #6
    e92c:	e1a03103 	lsl	r3, r3, #2
    e930:	e0823003 	add	r3, r2, r3
    e934:	e5930004 	ldr	r0, [r3, #4]
    e938:	e51b3010 	ldr	r3, [fp, #-16]
    e93c:	e5933008 	ldr	r3, [r3, #8]
    e940:	e5932008 	ldr	r2, [r3, #8]
    e944:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e948:	e2833006 	add	r3, r3, #6
    e94c:	e1a03103 	lsl	r3, r3, #2
    e950:	e0823003 	add	r3, r2, r3
    e954:	e5933004 	ldr	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:273
                                                                          reinterpret_cast<void*>(r2));
    e958:	e5933000 	ldr	r3, [r3]
    e95c:	e2833014 	add	r3, r3, #20
    e960:	e5933000 	ldr	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:272
            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->IOCtl(static_cast<NIOCtl_Operation>(r1),
    e964:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e968:	e59b2004 	ldr	r2, [fp, #4]
    e96c:	e12fff33 	blx	r3
    e970:	e1a03000 	mov	r3, r0
    e974:	e1a02003 	mov	r2, r3
    e978:	e59b3008 	ldr	r3, [fp, #8]
    e97c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:274
            break;
    e980:	ea00000c 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:220
        return;
    e984:	e320f000 	nop	{0}
    e988:	ea00000a 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:229
                return;
    e98c:	e320f000 	nop	{0}
    e990:	ea000008 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:239
            break;
    e994:	e320f000 	nop	{0}
    e998:	ea000006 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:245
                return;
    e99c:	e320f000 	nop	{0}
    e9a0:	ea000004 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:254
                return;
    e9a4:	e320f000 	nop	{0}
    e9a8:	ea000002 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:261
                return;
    e9ac:	e320f000 	nop	{0}
    e9b0:	ea000000 	b	e9b8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:270
                return;
    e9b4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:277
        }
    }
}
    e9b8:	e24bd004 	sub	sp, fp, #4
    e9bc:	e8bd8800 	pop	{fp, pc}
    e9c0:	00010bf4 	strdeq	r0, [r1], -r4

0000e9c4 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:277
    e9c4:	e92d4800 	push	{fp, lr}
    e9c8:	e28db004 	add	fp, sp, #4
    e9cc:	e24dd008 	sub	sp, sp, #8
    e9d0:	e50b0008 	str	r0, [fp, #-8]
    e9d4:	e50b100c 	str	r1, [fp, #-12]
    e9d8:	e51b3008 	ldr	r3, [fp, #-8]
    e9dc:	e3530001 	cmp	r3, #1
    e9e0:	1a000005 	bne	e9fc <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:277 (discriminator 1)
    e9e4:	e51b300c 	ldr	r3, [fp, #-12]
    e9e8:	e59f2018 	ldr	r2, [pc, #24]	; ea08 <_Z41__static_initialization_and_destruction_0ii+0x44>
    e9ec:	e1530002 	cmp	r3, r2
    e9f0:	1a000001 	bne	e9fc <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:18
CProcess_Manager sProcessMgr;
    e9f4:	e59f0010 	ldr	r0, [pc, #16]	; ea0c <_Z41__static_initialization_and_destruction_0ii+0x48>
    e9f8:	ebfffd16 	bl	de58 <_ZN16CProcess_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:277
}
    e9fc:	e320f000 	nop	{0}
    ea00:	e24bd004 	sub	sp, fp, #4
    ea04:	e8bd8800 	pop	{fp, pc}
    ea08:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    ea0c:	00011c94 	muleq	r1, r4, ip

0000ea10 <_GLOBAL__sub_I_sProcessMgr>:
_GLOBAL__sub_I_sProcessMgr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:277
    ea10:	e92d4800 	push	{fp, lr}
    ea14:	e28db004 	add	fp, sp, #4
    ea18:	e59f1008 	ldr	r1, [pc, #8]	; ea28 <_GLOBAL__sub_I_sProcessMgr+0x18>
    ea1c:	e3a00001 	mov	r0, #1
    ea20:	ebffffe7 	bl	e9c4 <_Z41__static_initialization_and_destruction_0ii>
    ea24:	e8bd8800 	pop	{fp, pc}
    ea28:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000ea2c <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    ea2c:	e92d4800 	push	{fp, lr}
    ea30:	e28db004 	add	fp, sp, #4
    ea34:	e24dd008 	sub	sp, sp, #8
    ea38:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    ea3c:	e3a0100c 	mov	r1, #12
    ea40:	e51b0008 	ldr	r0, [fp, #-8]
    ea44:	ebfffba6 	bl	d8e4 <_ZN20CKernel_Heap_Manager5AllocEj>
    ea48:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    ea4c:	e1a00003 	mov	r0, r3
    ea50:	e24bd004 	sub	sp, fp, #4
    ea54:	e8bd8800 	pop	{fp, pc}

0000ea58 <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    ea58:	e92d4800 	push	{fp, lr}
    ea5c:	e28db004 	add	fp, sp, #4
    ea60:	e24dd008 	sub	sp, sp, #8
    ea64:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    ea68:	e3a0105c 	mov	r1, #92	; 0x5c
    ea6c:	e51b0008 	ldr	r0, [fp, #-8]
    ea70:	ebfffb9b 	bl	d8e4 <_ZN20CKernel_Heap_Manager5AllocEj>
    ea74:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    ea78:	e1a00003 	mov	r0, r3
    ea7c:	e24bd004 	sub	sp, fp, #4
    ea80:	e8bd8800 	pop	{fp, pc}

0000ea84 <process_bootstrap>:
process_bootstrap():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:5
.global process_bootstrap
;@ Process bootstrapping - kernelovy "obal" procesu
;@ Vyzaduje na zasobniku pushnutou hodnotu vstupniho bodu procesu
process_bootstrap:
    add lr, pc, #8      ;@ ulozime do lr hodnotu PC+8, abychom se korektne vratili na instrukci po nasledujici
    ea84:	e28fe008 	add	lr, pc, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:6
    pop {pc}            ;@ vyzvedneme si ulozenou hodnotu cile
    ea88:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000ea8c <context_switch>:
context_switch():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:14
.global context_switch
;@ Prepnuti procesu ze soucasneho na jiny, ktery jiz byl planovany
;@ r0 - novy proces
;@ r1 - stary proces
context_switch:
	mrs r12, cpsr           ;@ ulozit CPU state do r12
    ea8c:	e10fc000 	mrs	ip, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:15
	push {r14}              ;@ push LR
    ea90:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:16
	push {r0}               ;@ push SP
    ea94:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:17
	push {r0-r12}           ;@ push registru
    ea98:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:18
	str sp, [r1, #4]        ;@ ulozit SP stareho procesu
    ea9c:	e581d004 	str	sp, [r1, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:20

	ldr sp, [r0, #4]        ;@ nacist SP noveho procesu
    eaa0:	e590d004 	ldr	sp, [r0, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:21
	pop {r0-r12}            ;@ obnovit registry noveho procesu
    eaa4:	e8bd1fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:22
	msr cpsr_c, r12         ;@ obnovit CPU state
    eaa8:	e121f00c 	msr	CPSR_c, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:23
	pop {lr, pc}            ;@ navrat do kontextu provadeni noveho procesu
    eaac:	e8bdc000 	pop	{lr, pc}

0000eab0 <context_switch_first>:
context_switch_first():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:30
.global context_switch_first
;@ Prepnuti procesu ze soucasneho na jiny, ktery jeste nebyl planovany
;@ r0 - novy proces
;@ r1 - stary proces
context_switch_first:
	mrs r12, cpsr           ;@ ulozit CPU state do r12
    eab0:	e10fc000 	mrs	ip, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:31
	push {r14}              ;@ push LR
    eab4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:32
	push {r13}              ;@ push SP
    eab8:	e92d2000 	stmfd	sp!, {sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:33
	push {r0-r12}           ;@ push registru
    eabc:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:34
	str sp, [r1, #4]        ;@ ulozit SP stareho procesu
    eac0:	e581d004 	str	sp, [r1, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:36

    ldr r3, [r0, #0]        ;@ "budouci" PC do r3 (entry point procesu)
    eac4:	e5903000 	ldr	r3, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:37
    ldr r2, [r0, #8]        ;@ "vstupni" PC do r2 (bootstrap procesu v kernelu)
    eac8:	e5902008 	ldr	r2, [r0, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:38
    ldr sp, [r0, #4]        ;@ nacteme stack pointer procesu
    eacc:	e590d004 	ldr	sp, [r0, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:39
    push {r3}               ;@ budouci navratova adresa -> do zasobniku, bootstrap si ji tamodsud vyzvedne
    ead0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:40
    push {r2}               ;@ pushneme si i bootstrap adresu, abychom ji mohli obnovit do PC
    ead4:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:41
    cpsie i                 ;@ povolime preruseni (v budoucich switchich uz bude flaga ulozena v cpsr/spsr)
    ead8:	f1080080 	cpsie	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:42
    pop {pc}                ;@ vybereme ze zasobniku novou hodnotu PC (PC procesu)
    eadc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000eae0 <disable_irq>:
disable_irq():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:102
;@ tady budou ostatni symboly, ktere nevyzaduji zadne specialni misto
.section .text

.global disable_irq
disable_irq:
    cpsid i
    eae0:	f10c0080 	cpsid	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:103
    bx lr
    eae4:	e12fff1e 	bx	lr

0000eae8 <enable_irq>:
enable_irq():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:107

.global enable_irq
enable_irq:
    mrs r0, cpsr		;@ presun ridiciho registru (CPSR) do general purpose registru (R0)
    eae8:	e10f0000 	mrs	r0, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:108
    bic r0, r0, #0x80	;@ vypne bit 7 v registru r0 ("IRQ mask bit")
    eaec:	e3c00080 	bic	r0, r0, #128	; 0x80
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:109
    msr cpsr_c, r0		;@ nacteme upraveny general purpose (R0) registr do ridiciho (CPSR)
    eaf0:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:110
    cpsie i				;@ povoli preruseni
    eaf4:	f1080080 	cpsie	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:111
    bx lr
    eaf8:	e12fff1e 	bx	lr

0000eafc <undefined_instruction_handler>:
undefined_instruction_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:114

undefined_instruction_handler:
	b hang
    eafc:	eaffe569 	b	80a8 <hang>

0000eb00 <software_interrupt_handler>:
software_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:118

.global _internal_software_interrupt_handler
software_interrupt_handler:
	stmfd sp!,{r2-r12,lr}		;@ ulozime na zasobnik stav
    eb00:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:122

	;@ tady budeme mozna chtit prepinat do SYS rezimu v budoucnu

	ldr r3,[lr,#-4]				;@ do registru r3 nacteme instrukci, ktera vyvolala preruseni (lr = navratova adresa, -4 proto, ze ukazuje na nasledujici instrukci)
    eb04:	e51e3004 	ldr	r3, [lr, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:123
    bic r3,r3,#0xff000000		;@ vymaskujeme parametr (dolnich 24 bitu) a nechame ho v r3
    eb08:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:124
	bl _internal_software_interrupt_handler		;@ zavolame nas interni handler
    eb0c:	ebfffa6a 	bl	d4bc <_internal_software_interrupt_handler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:125
	mov r2, r0					;@ ten vraci pointer na result kontejner v r0, presuneme do r2 - potrebujeme obsah dostat do r0 a r1
    eb10:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:126
	ldr r0, [r2, #0]			;@ nacteme navratove hodnoty do registru
    eb14:	e5920000 	ldr	r0, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:127
	ldr r1, [r2, #4]
    eb18:	e5921004 	ldr	r1, [r2, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:128
	ldmfd sp!, {r2-r12,pc}^		;@ obnovime ze zasobniku stav (jen puvodni lr nacteme do pc)
    eb1c:	e8fd9ffc 	ldm	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

0000eb20 <irq_handler>:
irq_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:133


.global _internal_irq_handler
irq_handler:
	sub lr, lr, #4
    eb20:	e24ee004 	sub	lr, lr, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:134
	srsdb #CPSR_MODE_SYS!		;@ ekvivalent k push lr a msr+push spsr
    eb24:	f96d051f 	srsdb	sp!, #31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:135
	cpsid if, #CPSR_MODE_SYS	;@ prechod do SYS modu + zakazeme preruseni
    eb28:	f10e00df 	cpsid	if,#31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:136
	push {r0-r4, r12, lr}		;@ ulozime callee-saved registry
    eb2c:	e92d501f 	push	{r0, r1, r2, r3, r4, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:138

	and r4, sp, #7
    eb30:	e20d4007 	and	r4, sp, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:139
	sub sp, sp, r4
    eb34:	e04dd004 	sub	sp, sp, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:141

	bl _internal_irq_handler	;@ zavolame handler IRQ
    eb38:	ebfffa87 	bl	d55c <_internal_irq_handler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:143

	add sp, sp, r4
    eb3c:	e08dd004 	add	sp, sp, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:145

	pop {r0-r4, r12, lr}		;@ obnovime callee-saved registry
    eb40:	e8bd501f 	pop	{r0, r1, r2, r3, r4, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:146
	rfeia sp!					;@ vracime se do puvodniho stavu (ktery ulozila instrukce srsdb)
    eb44:	f8bd0a00 	rfeia	sp!

0000eb48 <prefetch_abort_handler>:
prefetch_abort_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:151

prefetch_abort_handler:
	;@ tady pak muzeme osetrit, kdyz program zasahne do mista, ktere nema mapovane ve svem virtualnim adr. prostoru
	;@ a treba vyvolat nasi obdobu segfaultu
	b hang
    eb48:	eaffe556 	b	80a8 <hang>

0000eb4c <data_abort_handler>:
data_abort_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:156

data_abort_handler:
	;@ tady pak muzeme osetrit, kdyz program zasahne do mista, ktere nema mapovane ve svem virtualnim adr. prostoru
	;@ a treba vyvolat nasi obdobu segfaultu
	b hang
    eb4c:	eaffe555 	b	80a8 <hang>

0000eb50 <_c_startup>:
_c_startup():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:21
extern "C" dtor_ptr __DTOR_LIST__[0];
// konec pole destruktoru
extern "C" dtor_ptr __DTOR_END__[0];

extern "C" int _c_startup(void)
{
    eb50:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    eb54:	e28db000 	add	fp, sp, #0
    eb58:	e24dd00c 	sub	sp, sp, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25
    int* i;

    // vynulujeme .bss sekci
    for (i = (int*)_bss_start; i < (int*)_bss_end; i++)
    eb5c:	e59f304c 	ldr	r3, [pc, #76]	; ebb0 <_c_startup+0x60>
    eb60:	e5933000 	ldr	r3, [r3]
    eb64:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25 (discriminator 3)
    eb68:	e59f3044 	ldr	r3, [pc, #68]	; ebb4 <_c_startup+0x64>
    eb6c:	e5933000 	ldr	r3, [r3]
    eb70:	e1a02003 	mov	r2, r3
    eb74:	e51b3008 	ldr	r3, [fp, #-8]
    eb78:	e1530002 	cmp	r3, r2
    eb7c:	2a000006 	bcs	eb9c <_c_startup+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:26 (discriminator 2)
        *i = 0;
    eb80:	e51b3008 	ldr	r3, [fp, #-8]
    eb84:	e3a02000 	mov	r2, #0
    eb88:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25 (discriminator 2)
    for (i = (int*)_bss_start; i < (int*)_bss_end; i++)
    eb8c:	e51b3008 	ldr	r3, [fp, #-8]
    eb90:	e2833004 	add	r3, r3, #4
    eb94:	e50b3008 	str	r3, [fp, #-8]
    eb98:	eafffff2 	b	eb68 <_c_startup+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:28

    return 0;
    eb9c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:29
}
    eba0:	e1a00003 	mov	r0, r3
    eba4:	e28bd000 	add	sp, fp, #0
    eba8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ebac:	e12fff1e 	bx	lr
    ebb0:	00010b5c 	andeq	r0, r1, ip, asr fp
    ebb4:	00011cb0 			; <UNDEFINED> instruction: 0x00011cb0

0000ebb8 <_cpp_startup>:
_cpp_startup():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:32

extern "C" int _cpp_startup(void)
{
    ebb8:	e92d4800 	push	{fp, lr}
    ebbc:	e28db004 	add	fp, sp, #4
    ebc0:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37
    ctor_ptr* fnptr;

    // zavolame konstruktory globalnich C++ trid
    // v poli __CTOR_LIST__ jsou ukazatele na vygenerovane stuby volani konstruktoru
    for (fnptr = __CTOR_LIST__; fnptr < __CTOR_END__; fnptr++)
    ebc4:	e59f303c 	ldr	r3, [pc, #60]	; ec08 <_cpp_startup+0x50>
    ebc8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37 (discriminator 3)
    ebcc:	e51b3008 	ldr	r3, [fp, #-8]
    ebd0:	e59f2034 	ldr	r2, [pc, #52]	; ec0c <_cpp_startup+0x54>
    ebd4:	e1530002 	cmp	r3, r2
    ebd8:	2a000006 	bcs	ebf8 <_cpp_startup+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:38 (discriminator 2)
        (*fnptr)();
    ebdc:	e51b3008 	ldr	r3, [fp, #-8]
    ebe0:	e5933000 	ldr	r3, [r3]
    ebe4:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37 (discriminator 2)
    for (fnptr = __CTOR_LIST__; fnptr < __CTOR_END__; fnptr++)
    ebe8:	e51b3008 	ldr	r3, [fp, #-8]
    ebec:	e2833004 	add	r3, r3, #4
    ebf0:	e50b3008 	str	r3, [fp, #-8]
    ebf4:	eafffff4 	b	ebcc <_cpp_startup+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:40

    return 0;
    ebf8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:41
}
    ebfc:	e1a00003 	mov	r0, r3
    ec00:	e24bd004 	sub	sp, fp, #4
    ec04:	e8bd8800 	pop	{fp, pc}
    ec08:	00010afc 	strdeq	r0, [r1], -ip
    ec0c:	00010b30 	andeq	r0, r1, r0, lsr fp

0000ec10 <_cpp_shutdown>:
_cpp_shutdown():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:44

extern "C" int _cpp_shutdown(void)
{
    ec10:	e92d4800 	push	{fp, lr}
    ec14:	e28db004 	add	fp, sp, #4
    ec18:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48
    dtor_ptr* fnptr;

    // zavolame destruktory globalnich C++ trid
    for (fnptr = __DTOR_LIST__; fnptr < __DTOR_END__; fnptr++)
    ec1c:	e59f303c 	ldr	r3, [pc, #60]	; ec60 <_cpp_shutdown+0x50>
    ec20:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48 (discriminator 3)
    ec24:	e51b3008 	ldr	r3, [fp, #-8]
    ec28:	e59f2034 	ldr	r2, [pc, #52]	; ec64 <_cpp_shutdown+0x54>
    ec2c:	e1530002 	cmp	r3, r2
    ec30:	2a000006 	bcs	ec50 <_cpp_shutdown+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:49 (discriminator 2)
        (*fnptr)();
    ec34:	e51b3008 	ldr	r3, [fp, #-8]
    ec38:	e5933000 	ldr	r3, [r3]
    ec3c:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48 (discriminator 2)
    for (fnptr = __DTOR_LIST__; fnptr < __DTOR_END__; fnptr++)
    ec40:	e51b3008 	ldr	r3, [fp, #-8]
    ec44:	e2833004 	add	r3, r3, #4
    ec48:	e50b3008 	str	r3, [fp, #-8]
    ec4c:	eafffff4 	b	ec24 <_cpp_shutdown+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:51

    return 0;
    ec50:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:52
}
    ec54:	e1a00003 	mov	r0, r3
    ec58:	e24bd004 	sub	sp, fp, #4
    ec5c:	e8bd8800 	pop	{fp, pc}
    ec60:	00010b30 	andeq	r0, r1, r0, lsr fp
    ec64:	00010b30 	andeq	r0, r1, r0, lsr fp

0000ec68 <_Z9Process_1v>:
_Z9Process_1v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:13

extern "C" void enable_irq();
extern "C" void disable_irq();

void Process_1()
{
    ec68:	e92d4800 	push	{fp, lr}
    ec6c:	e28db004 	add	fp, sp, #4
    ec70:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:16
    volatile int i;

    uint32_t f = open("DEV:gpio/18", NFile_Open_Mode::Write_Only);
    ec74:	e3a01001 	mov	r1, #1
    ec78:	e59f00c0 	ldr	r0, [pc, #192]	; ed40 <_Z9Process_1v+0xd8>
    ec7c:	eb000197 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    ec80:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:18

    disable_irq();
    ec84:	ebffff95 	bl	eae0 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:19
    sMonitor << "process 1 file descriptor = " << f << "\n";
    ec88:	e59f10b4 	ldr	r1, [pc, #180]	; ed44 <_Z9Process_1v+0xdc>
    ec8c:	e59f00b4 	ldr	r0, [pc, #180]	; ed48 <_Z9Process_1v+0xe0>
    ec90:	ebffe9ed 	bl	944c <_ZN8CMonitorlsEPKc>
    ec94:	e1a03000 	mov	r3, r0
    ec98:	e51b1008 	ldr	r1, [fp, #-8]
    ec9c:	e1a00003 	mov	r0, r3
    eca0:	ebffea14 	bl	94f8 <_ZN8CMonitorlsEj>
    eca4:	e1a03000 	mov	r3, r0
    eca8:	e59f109c 	ldr	r1, [pc, #156]	; ed4c <_Z9Process_1v+0xe4>
    ecac:	e1a00003 	mov	r0, r3
    ecb0:	ebffe9e5 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:20
    enable_irq();
    ecb4:	ebffff8b 	bl	eae8 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:24

    while (true)
    {
        write(f, "1", 1);
    ecb8:	e3a02001 	mov	r2, #1
    ecbc:	e59f108c 	ldr	r1, [pc, #140]	; ed50 <_Z9Process_1v+0xe8>
    ecc0:	e51b0008 	ldr	r0, [fp, #-8]
    ecc4:	eb0001aa 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:26

        for (i = 0; i < 0x400; i++)
    ecc8:	e3a03000 	mov	r3, #0
    eccc:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:26 (discriminator 3)
    ecd0:	e51b300c 	ldr	r3, [fp, #-12]
    ecd4:	e3530b01 	cmp	r3, #1024	; 0x400
    ecd8:	b3a03001 	movlt	r3, #1
    ecdc:	a3a03000 	movge	r3, #0
    ece0:	e6ef3073 	uxtb	r3, r3
    ece4:	e3530000 	cmp	r3, #0
    ece8:	0a000003 	beq	ecfc <_Z9Process_1v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:26 (discriminator 2)
    ecec:	e51b300c 	ldr	r3, [fp, #-12]
    ecf0:	e2833001 	add	r3, r3, #1
    ecf4:	e50b300c 	str	r3, [fp, #-12]
    ecf8:	eafffff4 	b	ecd0 <_Z9Process_1v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:29
            ;

        write(f, "0", 1);
    ecfc:	e3a02001 	mov	r2, #1
    ed00:	e59f104c 	ldr	r1, [pc, #76]	; ed54 <_Z9Process_1v+0xec>
    ed04:	e51b0008 	ldr	r0, [fp, #-8]
    ed08:	eb000199 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:31

        for (i = 0; i < 0x400; i++)
    ed0c:	e3a03000 	mov	r3, #0
    ed10:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:31 (discriminator 3)
    ed14:	e51b300c 	ldr	r3, [fp, #-12]
    ed18:	e3530b01 	cmp	r3, #1024	; 0x400
    ed1c:	b3a03001 	movlt	r3, #1
    ed20:	a3a03000 	movge	r3, #0
    ed24:	e6ef3073 	uxtb	r3, r3
    ed28:	e3530000 	cmp	r3, #0
    ed2c:	0affffe1 	beq	ecb8 <_Z9Process_1v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:31 (discriminator 2)
    ed30:	e51b300c 	ldr	r3, [fp, #-12]
    ed34:	e2833001 	add	r3, r3, #1
    ed38:	e50b300c 	str	r3, [fp, #-12]
    ed3c:	eafffff4 	b	ed14 <_Z9Process_1v+0xac>
    ed40:	00010530 	andeq	r0, r1, r0, lsr r5
    ed44:	0001053c 	andeq	r0, r1, ip, lsr r5
    ed48:	00010b94 	muleq	r1, r4, fp
    ed4c:	0001055c 	andeq	r0, r1, ip, asr r5
    ed50:	00010560 	andeq	r0, r1, r0, ror #10
    ed54:	00010564 	andeq	r0, r1, r4, ror #10

0000ed58 <_Z9Process_2v>:
_Z9Process_2v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:39

    close(f);
}

void Process_2()
{
    ed58:	e92d4800 	push	{fp, lr}
    ed5c:	e28db004 	add	fp, sp, #4
    ed60:	e24dd028 	sub	sp, sp, #40	; 0x28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:42
    volatile int i;

    const char* msg = "Hello!\n";
    ed64:	e59f3110 	ldr	r3, [pc, #272]	; ee7c <_Z9Process_2v+0x124>
    ed68:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:44

    uint32_t f = open("DEV:monitor/0", NFile_Open_Mode::Read_Write);
    ed6c:	e3a01002 	mov	r1, #2
    ed70:	e59f0108 	ldr	r0, [pc, #264]	; ee80 <_Z9Process_2v+0x128>
    ed74:	eb000159 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    ed78:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:45
    uint32_t rndf = open("DEV:trng", NFile_Open_Mode::Read_Only);
    ed7c:	e3a01000 	mov	r1, #0
    ed80:	e59f00fc 	ldr	r0, [pc, #252]	; ee84 <_Z9Process_2v+0x12c>
    ed84:	eb000155 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    ed88:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:47

    disable_irq();
    ed8c:	ebffff53 	bl	eae0 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:48
    sMonitor << "process 2 file descriptor (f) = " << f << "\n";
    ed90:	e59f10f0 	ldr	r1, [pc, #240]	; ee88 <_Z9Process_2v+0x130>
    ed94:	e59f00f0 	ldr	r0, [pc, #240]	; ee8c <_Z9Process_2v+0x134>
    ed98:	ebffe9ab 	bl	944c <_ZN8CMonitorlsEPKc>
    ed9c:	e1a03000 	mov	r3, r0
    eda0:	e51b100c 	ldr	r1, [fp, #-12]
    eda4:	e1a00003 	mov	r0, r3
    eda8:	ebffe9d2 	bl	94f8 <_ZN8CMonitorlsEj>
    edac:	e1a03000 	mov	r3, r0
    edb0:	e59f10d8 	ldr	r1, [pc, #216]	; ee90 <_Z9Process_2v+0x138>
    edb4:	e1a00003 	mov	r0, r3
    edb8:	ebffe9a3 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:49
    sMonitor << "process 2 file descriptor (rndf)= " << rndf << "\n";
    edbc:	e59f10d0 	ldr	r1, [pc, #208]	; ee94 <_Z9Process_2v+0x13c>
    edc0:	e59f00c4 	ldr	r0, [pc, #196]	; ee8c <_Z9Process_2v+0x134>
    edc4:	ebffe9a0 	bl	944c <_ZN8CMonitorlsEPKc>
    edc8:	e1a03000 	mov	r3, r0
    edcc:	e51b1010 	ldr	r1, [fp, #-16]
    edd0:	e1a00003 	mov	r0, r3
    edd4:	ebffe9c7 	bl	94f8 <_ZN8CMonitorlsEj>
    edd8:	e1a03000 	mov	r3, r0
    eddc:	e59f10ac 	ldr	r1, [pc, #172]	; ee90 <_Z9Process_2v+0x138>
    ede0:	e1a00003 	mov	r0, r3
    ede4:	ebffe998 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:50
    enable_irq();
    ede8:	ebffff3e 	bl	eae8 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:57
    uint32_t rdbuf;
    char numbuf[16];

    while (true)
    {
        read(rndf, reinterpret_cast<char*>(&rdbuf), 4);
    edec:	e24b3018 	sub	r3, fp, #24
    edf0:	e3a02004 	mov	r2, #4
    edf4:	e1a01003 	mov	r1, r3
    edf8:	e51b0010 	ldr	r0, [fp, #-16]
    edfc:	eb000148 	bl	f324 <_Z4readjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:59

        bzero(numbuf, 16);
    ee00:	e24b3028 	sub	r3, fp, #40	; 0x28
    ee04:	e3a01010 	mov	r1, #16
    ee08:	e1a00003 	mov	r0, r3
    ee0c:	eb00027f 	bl	f810 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:60
        itoa(rdbuf, numbuf, 10);
    ee10:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ee14:	e24b1028 	sub	r1, fp, #40	; 0x28
    ee18:	e3a0200a 	mov	r2, #10
    ee1c:	e1a00003 	mov	r0, r3
    ee20:	eb000186 	bl	f440 <_Z4itoajPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:62

        write(f, numbuf, strlen(numbuf));
    ee24:	e24b3028 	sub	r3, fp, #40	; 0x28
    ee28:	e1a00003 	mov	r0, r3
    ee2c:	eb000262 	bl	f7bc <_Z6strlenPKc>
    ee30:	e1a03000 	mov	r3, r0
    ee34:	e1a02003 	mov	r2, r3
    ee38:	e24b3028 	sub	r3, fp, #40	; 0x28
    ee3c:	e1a01003 	mov	r1, r3
    ee40:	e51b000c 	ldr	r0, [fp, #-12]
    ee44:	eb00014a 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:64

        for (i = 0; i < 0x800; i++)
    ee48:	e3a03000 	mov	r3, #0
    ee4c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:64 (discriminator 3)
    ee50:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ee54:	e3530b02 	cmp	r3, #2048	; 0x800
    ee58:	b3a03001 	movlt	r3, #1
    ee5c:	a3a03000 	movge	r3, #0
    ee60:	e6ef3073 	uxtb	r3, r3
    ee64:	e3530000 	cmp	r3, #0
    ee68:	0affffdf 	beq	edec <_Z9Process_2v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:64 (discriminator 2)
    ee6c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ee70:	e2833001 	add	r3, r3, #1
    ee74:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    ee78:	eafffff4 	b	ee50 <_Z9Process_2v+0xf8>
    ee7c:	00010568 	andeq	r0, r1, r8, ror #10
    ee80:	00010570 	andeq	r0, r1, r0, ror r5
    ee84:	00010580 	andeq	r0, r1, r0, lsl #11
    ee88:	0001058c 	andeq	r0, r1, ip, lsl #11
    ee8c:	00010b94 	muleq	r1, r4, fp
    ee90:	0001055c 	andeq	r0, r1, ip, asr r5
    ee94:	000105b0 			; <UNDEFINED> instruction: 0x000105b0

0000ee98 <_Z9Process_3v>:
_Z9Process_3v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:73
    close(f);
    close(rndf);
}

void Process_3()
{
    ee98:	e92d4800 	push	{fp, lr}
    ee9c:	e28db004 	add	fp, sp, #4
    eea0:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:76
    volatile int i;

    uint32_t f = open("DEV:gpio/19", NFile_Open_Mode::Write_Only);
    eea4:	e3a01001 	mov	r1, #1
    eea8:	e59f00c0 	ldr	r0, [pc, #192]	; ef70 <_Z9Process_3v+0xd8>
    eeac:	eb00010b 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    eeb0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:78

    disable_irq();
    eeb4:	ebffff09 	bl	eae0 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:79
    sMonitor << "process 3 file descriptor = " << f << "\n";
    eeb8:	e59f10b4 	ldr	r1, [pc, #180]	; ef74 <_Z9Process_3v+0xdc>
    eebc:	e59f00b4 	ldr	r0, [pc, #180]	; ef78 <_Z9Process_3v+0xe0>
    eec0:	ebffe961 	bl	944c <_ZN8CMonitorlsEPKc>
    eec4:	e1a03000 	mov	r3, r0
    eec8:	e51b1008 	ldr	r1, [fp, #-8]
    eecc:	e1a00003 	mov	r0, r3
    eed0:	ebffe988 	bl	94f8 <_ZN8CMonitorlsEj>
    eed4:	e1a03000 	mov	r3, r0
    eed8:	e59f109c 	ldr	r1, [pc, #156]	; ef7c <_Z9Process_3v+0xe4>
    eedc:	e1a00003 	mov	r0, r3
    eee0:	ebffe959 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:80
    enable_irq();
    eee4:	ebfffeff 	bl	eae8 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:84

    while (true)
    {
        write(f, "1", 1);
    eee8:	e3a02001 	mov	r2, #1
    eeec:	e59f108c 	ldr	r1, [pc, #140]	; ef80 <_Z9Process_3v+0xe8>
    eef0:	e51b0008 	ldr	r0, [fp, #-8]
    eef4:	eb00011e 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:86

        for (i = 0; i < 0x800; i++)
    eef8:	e3a03000 	mov	r3, #0
    eefc:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:86 (discriminator 3)
    ef00:	e51b300c 	ldr	r3, [fp, #-12]
    ef04:	e3530b02 	cmp	r3, #2048	; 0x800
    ef08:	b3a03001 	movlt	r3, #1
    ef0c:	a3a03000 	movge	r3, #0
    ef10:	e6ef3073 	uxtb	r3, r3
    ef14:	e3530000 	cmp	r3, #0
    ef18:	0a000003 	beq	ef2c <_Z9Process_3v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:86 (discriminator 2)
    ef1c:	e51b300c 	ldr	r3, [fp, #-12]
    ef20:	e2833001 	add	r3, r3, #1
    ef24:	e50b300c 	str	r3, [fp, #-12]
    ef28:	eafffff4 	b	ef00 <_Z9Process_3v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:89
            ;

        write(f, "0", 1);
    ef2c:	e3a02001 	mov	r2, #1
    ef30:	e59f104c 	ldr	r1, [pc, #76]	; ef84 <_Z9Process_3v+0xec>
    ef34:	e51b0008 	ldr	r0, [fp, #-8]
    ef38:	eb00010d 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:91

        for (i = 0; i < 0x800; i++)
    ef3c:	e3a03000 	mov	r3, #0
    ef40:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:91 (discriminator 3)
    ef44:	e51b300c 	ldr	r3, [fp, #-12]
    ef48:	e3530b02 	cmp	r3, #2048	; 0x800
    ef4c:	b3a03001 	movlt	r3, #1
    ef50:	a3a03000 	movge	r3, #0
    ef54:	e6ef3073 	uxtb	r3, r3
    ef58:	e3530000 	cmp	r3, #0
    ef5c:	0affffe1 	beq	eee8 <_Z9Process_3v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:91 (discriminator 2)
    ef60:	e51b300c 	ldr	r3, [fp, #-12]
    ef64:	e2833001 	add	r3, r3, #1
    ef68:	e50b300c 	str	r3, [fp, #-12]
    ef6c:	eafffff4 	b	ef44 <_Z9Process_3v+0xac>
    ef70:	000105d4 	ldrdeq	r0, [r1], -r4
    ef74:	000105e0 	andeq	r0, r1, r0, ror #11
    ef78:	00010b94 	muleq	r1, r4, fp
    ef7c:	0001055c 	andeq	r0, r1, ip, asr r5
    ef80:	00010560 	andeq	r0, r1, r0, ror #10
    ef84:	00010564 	andeq	r0, r1, r4, ror #10

0000ef88 <_Z9Process_4v>:
_Z9Process_4v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:99

    close(f);
}

void Process_4()
{
    ef88:	e92d4800 	push	{fp, lr}
    ef8c:	e28db004 	add	fp, sp, #4
    ef90:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:102
    volatile int i;

    uint32_t f = open("DEV:gpio/20", NFile_Open_Mode::Write_Only);
    ef94:	e3a01001 	mov	r1, #1
    ef98:	e59f00c0 	ldr	r0, [pc, #192]	; f060 <_Z9Process_4v+0xd8>
    ef9c:	eb0000cf 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    efa0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:104

    disable_irq();
    efa4:	ebfffecd 	bl	eae0 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:105
    sMonitor << "process 4 file descriptor = " << f << "\n";
    efa8:	e59f10b4 	ldr	r1, [pc, #180]	; f064 <_Z9Process_4v+0xdc>
    efac:	e59f00b4 	ldr	r0, [pc, #180]	; f068 <_Z9Process_4v+0xe0>
    efb0:	ebffe925 	bl	944c <_ZN8CMonitorlsEPKc>
    efb4:	e1a03000 	mov	r3, r0
    efb8:	e51b1008 	ldr	r1, [fp, #-8]
    efbc:	e1a00003 	mov	r0, r3
    efc0:	ebffe94c 	bl	94f8 <_ZN8CMonitorlsEj>
    efc4:	e1a03000 	mov	r3, r0
    efc8:	e59f109c 	ldr	r1, [pc, #156]	; f06c <_Z9Process_4v+0xe4>
    efcc:	e1a00003 	mov	r0, r3
    efd0:	ebffe91d 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:106
    enable_irq();
    efd4:	ebfffec3 	bl	eae8 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:110

    while (true)
    {
        write(f, "1", 1);
    efd8:	e3a02001 	mov	r2, #1
    efdc:	e59f108c 	ldr	r1, [pc, #140]	; f070 <_Z9Process_4v+0xe8>
    efe0:	e51b0008 	ldr	r0, [fp, #-8]
    efe4:	eb0000e2 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:112

        for (i = 0; i < 0x1600; i++)
    efe8:	e3a03000 	mov	r3, #0
    efec:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:112 (discriminator 3)
    eff0:	e51b300c 	ldr	r3, [fp, #-12]
    eff4:	e3530c16 	cmp	r3, #5632	; 0x1600
    eff8:	b3a03001 	movlt	r3, #1
    effc:	a3a03000 	movge	r3, #0
    f000:	e6ef3073 	uxtb	r3, r3
    f004:	e3530000 	cmp	r3, #0
    f008:	0a000003 	beq	f01c <_Z9Process_4v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:112 (discriminator 2)
    f00c:	e51b300c 	ldr	r3, [fp, #-12]
    f010:	e2833001 	add	r3, r3, #1
    f014:	e50b300c 	str	r3, [fp, #-12]
    f018:	eafffff4 	b	eff0 <_Z9Process_4v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:115
            ;

        write(f, "0", 1);
    f01c:	e3a02001 	mov	r2, #1
    f020:	e59f104c 	ldr	r1, [pc, #76]	; f074 <_Z9Process_4v+0xec>
    f024:	e51b0008 	ldr	r0, [fp, #-8]
    f028:	eb0000d1 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:117

        for (i = 0; i < 0x1600; i++)
    f02c:	e3a03000 	mov	r3, #0
    f030:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:117 (discriminator 3)
    f034:	e51b300c 	ldr	r3, [fp, #-12]
    f038:	e3530c16 	cmp	r3, #5632	; 0x1600
    f03c:	b3a03001 	movlt	r3, #1
    f040:	a3a03000 	movge	r3, #0
    f044:	e6ef3073 	uxtb	r3, r3
    f048:	e3530000 	cmp	r3, #0
    f04c:	0affffe1 	beq	efd8 <_Z9Process_4v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:117 (discriminator 2)
    f050:	e51b300c 	ldr	r3, [fp, #-12]
    f054:	e2833001 	add	r3, r3, #1
    f058:	e50b300c 	str	r3, [fp, #-12]
    f05c:	eafffff4 	b	f034 <_Z9Process_4v+0xac>
    f060:	00010600 	andeq	r0, r1, r0, lsl #12
    f064:	0001060c 	andeq	r0, r1, ip, lsl #12
    f068:	00010b94 	muleq	r1, r4, fp
    f06c:	0001055c 	andeq	r0, r1, ip, asr r5
    f070:	00010560 	andeq	r0, r1, r0, ror #10
    f074:	00010564 	andeq	r0, r1, r4, ror #10

0000f078 <_Z9Process_5v>:
_Z9Process_5v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:125

    close(f);
}

void Process_5()
{
    f078:	e92d4800 	push	{fp, lr}
    f07c:	e28db004 	add	fp, sp, #4
    f080:	e24dd010 	sub	sp, sp, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:128
    volatile int i;

    uint32_t f = open("DEV:segd", NFile_Open_Mode::Write_Only);
    f084:	e3a01001 	mov	r1, #1
    f088:	e59f00c0 	ldr	r0, [pc, #192]	; f150 <_Z9Process_5v+0xd8>
    f08c:	eb000093 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    f090:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:129
    write(f, "4", 1);
    f094:	e3a02001 	mov	r2, #1
    f098:	e59f10b4 	ldr	r1, [pc, #180]	; f154 <_Z9Process_5v+0xdc>
    f09c:	e51b0008 	ldr	r0, [fp, #-8]
    f0a0:	eb0000b3 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:131

    disable_irq();
    f0a4:	ebfffe8d 	bl	eae0 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:132
    sMonitor << "process 5 file descriptor = " << f << "\n";
    f0a8:	e59f10a8 	ldr	r1, [pc, #168]	; f158 <_Z9Process_5v+0xe0>
    f0ac:	e59f00a8 	ldr	r0, [pc, #168]	; f15c <_Z9Process_5v+0xe4>
    f0b0:	ebffe8e5 	bl	944c <_ZN8CMonitorlsEPKc>
    f0b4:	e1a03000 	mov	r3, r0
    f0b8:	e51b1008 	ldr	r1, [fp, #-8]
    f0bc:	e1a00003 	mov	r0, r3
    f0c0:	ebffe90c 	bl	94f8 <_ZN8CMonitorlsEj>
    f0c4:	e1a03000 	mov	r3, r0
    f0c8:	e59f1090 	ldr	r1, [pc, #144]	; f160 <_Z9Process_5v+0xe8>
    f0cc:	e1a00003 	mov	r0, r3
    f0d0:	ebffe8dd 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:133
    enable_irq();
    f0d4:	ebfffe83 	bl	eae8 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:135

    char message[] = "0";
    f0d8:	e3a03030 	mov	r3, #48	; 0x30
    f0dc:	e14b31b0 	strh	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:139

    while (true)
    {
        if (message[0] == '9')
    f0e0:	e55b3010 	ldrb	r3, [fp, #-16]
    f0e4:	e3530039 	cmp	r3, #57	; 0x39
    f0e8:	1a000002 	bne	f0f8 <_Z9Process_5v+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:141
        {
            message[0] = '0';
    f0ec:	e3a03030 	mov	r3, #48	; 0x30
    f0f0:	e54b3010 	strb	r3, [fp, #-16]
    f0f4:	ea000003 	b	f108 <_Z9Process_5v+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:145
        }
        else
        {
            ++message[0];
    f0f8:	e55b3010 	ldrb	r3, [fp, #-16]
    f0fc:	e2833001 	add	r3, r3, #1
    f100:	e6ef3073 	uxtb	r3, r3
    f104:	e54b3010 	strb	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:148
        }

        write(f, message, 1);
    f108:	e24b3010 	sub	r3, fp, #16
    f10c:	e3a02001 	mov	r2, #1
    f110:	e1a01003 	mov	r1, r3
    f114:	e51b0008 	ldr	r0, [fp, #-8]
    f118:	eb000095 	bl	f374 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:150

        for (i = 0; i < 0x1600; i++)
    f11c:	e3a03000 	mov	r3, #0
    f120:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:150 (discriminator 3)
    f124:	e51b300c 	ldr	r3, [fp, #-12]
    f128:	e3530c16 	cmp	r3, #5632	; 0x1600
    f12c:	b3a03001 	movlt	r3, #1
    f130:	a3a03000 	movge	r3, #0
    f134:	e6ef3073 	uxtb	r3, r3
    f138:	e3530000 	cmp	r3, #0
    f13c:	0affffe7 	beq	f0e0 <_Z9Process_5v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:150 (discriminator 2)
    f140:	e51b300c 	ldr	r3, [fp, #-12]
    f144:	e2833001 	add	r3, r3, #1
    f148:	e50b300c 	str	r3, [fp, #-12]
    f14c:	eafffff4 	b	f124 <_Z9Process_5v+0xac>
    f150:	0001062c 	andeq	r0, r1, ip, lsr #12
    f154:	00010638 	andeq	r0, r1, r8, lsr r6
    f158:	0001063c 	andeq	r0, r1, ip, lsr r6
    f15c:	00010b94 	muleq	r1, r4, fp
    f160:	0001055c 	andeq	r0, r1, ip, asr r5

0000f164 <_Z9Process_6v>:
_Z9Process_6v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:164
    "One CPU rules them all.",         "My favourite sport is ARM wrestling",
    "Old MacDonald had a farm, EIGRP",
};

void Process_6()
{
    f164:	e92d4800 	push	{fp, lr}
    f168:	e28db004 	add	fp, sp, #4
    f16c:	e24dd018 	sub	sp, sp, #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:176
    {
    }*/

    volatile int i;

    COLED_Display disp("DEV:oled");
    f170:	e24b3018 	sub	r3, fp, #24
    f174:	e59f1124 	ldr	r1, [pc, #292]	; f2a0 <_Z9Process_6v+0x13c>
    f178:	e1a00003 	mov	r0, r3
    f17c:	eb0001dd 	bl	f8f8 <_ZN13COLED_DisplayC1EPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:177
    disp.Clear(false);
    f180:	e24b3018 	sub	r3, fp, #24
    f184:	e3a01000 	mov	r1, #0
    f188:	e1a00003 	mov	r0, r3
    f18c:	eb000210 	bl	f9d4 <_ZN13COLED_Display5ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:178
    disp.Put_String(10, 10, "KIV-RTOS init...");
    f190:	e24b0018 	sub	r0, fp, #24
    f194:	e59f3108 	ldr	r3, [pc, #264]	; f2a4 <_Z9Process_6v+0x140>
    f198:	e3a0200a 	mov	r2, #10
    f19c:	e3a0100a 	mov	r1, #10
    f1a0:	eb0002d5 	bl	fcfc <_ZN13COLED_Display10Put_StringEttPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:179
    disp.Flip();
    f1a4:	e24b3018 	sub	r3, fp, #24
    f1a8:	e1a00003 	mov	r0, r3
    f1ac:	eb0002bc 	bl	fca4 <_ZN13COLED_Display4FlipEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:181

    uint32_t trng_file = open("DEV:trng", NFile_Open_Mode::Read_Only);
    f1b0:	e3a01000 	mov	r1, #0
    f1b4:	e59f00ec 	ldr	r0, [pc, #236]	; f2a8 <_Z9Process_6v+0x144>
    f1b8:	eb000048 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    f1bc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:182
    uint32_t num = 0;
    f1c0:	e3a03000 	mov	r3, #0
    f1c4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:184

    for (i = 0; i < 0x3200; i++)
    f1c8:	e3a03000 	mov	r3, #0
    f1cc:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:184 (discriminator 3)
    f1d0:	e51b3010 	ldr	r3, [fp, #-16]
    f1d4:	e3530c32 	cmp	r3, #12800	; 0x3200
    f1d8:	b3a03001 	movlt	r3, #1
    f1dc:	a3a03000 	movge	r3, #0
    f1e0:	e6ef3073 	uxtb	r3, r3
    f1e4:	e3530000 	cmp	r3, #0
    f1e8:	0a000003 	beq	f1fc <_Z9Process_6v+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:184 (discriminator 2)
    f1ec:	e51b3010 	ldr	r3, [fp, #-16]
    f1f0:	e2833001 	add	r3, r3, #1
    f1f4:	e50b3010 	str	r3, [fp, #-16]
    f1f8:	eafffff4 	b	f1d0 <_Z9Process_6v+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:190
        ;

    while (true)
    {
        // ziskame si nahodne cislo a vybereme podle toho zpravu
        read(trng_file, reinterpret_cast<char*>(&num), sizeof(num));
    f1fc:	e24b301c 	sub	r3, fp, #28
    f200:	e3a02004 	mov	r2, #4
    f204:	e1a01003 	mov	r1, r3
    f208:	e51b0008 	ldr	r0, [fp, #-8]
    f20c:	eb000044 	bl	f324 <_Z4readjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:191
        const char* msg = messages[num % (sizeof(messages) / sizeof(const char*))];
    f210:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    f214:	e59f3090 	ldr	r3, [pc, #144]	; f2ac <_Z9Process_6v+0x148>
    f218:	e0832193 	umull	r2, r3, r3, r1
    f21c:	e1a02123 	lsr	r2, r3, #2
    f220:	e1a03002 	mov	r3, r2
    f224:	e1a03103 	lsl	r3, r3, #2
    f228:	e0833002 	add	r3, r3, r2
    f22c:	e0412003 	sub	r2, r1, r3
    f230:	e59f3078 	ldr	r3, [pc, #120]	; f2b0 <_Z9Process_6v+0x14c>
    f234:	e7933102 	ldr	r3, [r3, r2, lsl #2]
    f238:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:193

        disp.Clear(false);
    f23c:	e24b3018 	sub	r3, fp, #24
    f240:	e3a01000 	mov	r1, #0
    f244:	e1a00003 	mov	r0, r3
    f248:	eb0001e1 	bl	f9d4 <_ZN13COLED_Display5ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:194
        disp.Put_String(0, 0, msg);
    f24c:	e24b0018 	sub	r0, fp, #24
    f250:	e51b300c 	ldr	r3, [fp, #-12]
    f254:	e3a02000 	mov	r2, #0
    f258:	e3a01000 	mov	r1, #0
    f25c:	eb0002a6 	bl	fcfc <_ZN13COLED_Display10Put_StringEttPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:195
        disp.Flip();
    f260:	e24b3018 	sub	r3, fp, #24
    f264:	e1a00003 	mov	r0, r3
    f268:	eb00028d 	bl	fca4 <_ZN13COLED_Display4FlipEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:197

        for (i = 0; i < 0x3200; i++)
    f26c:	e3a03000 	mov	r3, #0
    f270:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:197 (discriminator 3)
    f274:	e51b3010 	ldr	r3, [fp, #-16]
    f278:	e3530c32 	cmp	r3, #12800	; 0x3200
    f27c:	b3a03001 	movlt	r3, #1
    f280:	a3a03000 	movge	r3, #0
    f284:	e6ef3073 	uxtb	r3, r3
    f288:	e3530000 	cmp	r3, #0
    f28c:	0affffda 	beq	f1fc <_Z9Process_6v+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:197 (discriminator 2)
    f290:	e51b3010 	ldr	r3, [fp, #-16]
    f294:	e2833001 	add	r3, r3, #1
    f298:	e50b3010 	str	r3, [fp, #-16]
    f29c:	eafffff4 	b	f274 <_Z9Process_6v+0x110>
    f2a0:	000106e8 	andeq	r0, r1, r8, ror #13
    f2a4:	000106f4 	strdeq	r0, [r1], -r4
    f2a8:	00010580 	andeq	r0, r1, r0, lsl #11
    f2ac:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
    f2b0:	00010b48 	andeq	r0, r1, r8, asr #22

0000f2b4 <_Z6getpidv>:
_Z6getpidv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:4
#include <stdfile.h>

uint32_t getpid()
{
    f2b4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f2b8:	e28db000 	add	fp, sp, #0
    f2bc:	e24dd00c 	sub	sp, sp, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:7
    uint32_t pid;

    asm volatile("swi 0");
    f2c0:	ef000000 	svc	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:8
    asm volatile("mov %0, r0" : "=r"(pid));
    f2c4:	e1a03000 	mov	r3, r0
    f2c8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:10

    return pid;
    f2cc:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:11
}
    f2d0:	e1a00003 	mov	r0, r3
    f2d4:	e28bd000 	add	sp, fp, #0
    f2d8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f2dc:	e12fff1e 	bx	lr

0000f2e0 <_Z4openPKc15NFile_Open_Mode>:
_Z4openPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:14

uint32_t open(const char* filename, NFile_Open_Mode mode)
{
    f2e0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f2e4:	e28db000 	add	fp, sp, #0
    f2e8:	e24dd014 	sub	sp, sp, #20
    f2ec:	e50b0010 	str	r0, [fp, #-16]
    f2f0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:17
    uint32_t file;

    asm volatile("mov r0, %0" : : "r"(filename));
    f2f4:	e51b3010 	ldr	r3, [fp, #-16]
    f2f8:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:18
    asm volatile("mov r1, %0" : : "r"(mode));
    f2fc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f300:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:19
    asm volatile("swi 64");
    f304:	ef000040 	svc	0x00000040
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:20
    asm volatile("mov %0, r0" : "=r"(file));
    f308:	e1a03000 	mov	r3, r0
    f30c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:22

    return file;
    f310:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:23
}
    f314:	e1a00003 	mov	r0, r3
    f318:	e28bd000 	add	sp, fp, #0
    f31c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f320:	e12fff1e 	bx	lr

0000f324 <_Z4readjPcj>:
_Z4readjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:26

uint32_t read(uint32_t file, char* const buffer, uint32_t size)
{
    f324:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f328:	e28db000 	add	fp, sp, #0
    f32c:	e24dd01c 	sub	sp, sp, #28
    f330:	e50b0010 	str	r0, [fp, #-16]
    f334:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f338:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:29
    uint32_t rdnum;

    asm volatile("mov r0, %0" : : "r"(file));
    f33c:	e51b3010 	ldr	r3, [fp, #-16]
    f340:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:30
    asm volatile("mov r1, %0" : : "r"(buffer));
    f344:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f348:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:31
    asm volatile("mov r2, %0" : : "r"(size));
    f34c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f350:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:32
    asm volatile("swi 65");
    f354:	ef000041 	svc	0x00000041
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:33
    asm volatile("mov %0, r0" : "=r"(rdnum));
    f358:	e1a03000 	mov	r3, r0
    f35c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:35

    return rdnum;
    f360:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:36
}
    f364:	e1a00003 	mov	r0, r3
    f368:	e28bd000 	add	sp, fp, #0
    f36c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f370:	e12fff1e 	bx	lr

0000f374 <_Z5writejPKcj>:
_Z5writejPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:39

uint32_t write(uint32_t file, const char* buffer, uint32_t size)
{
    f374:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f378:	e28db000 	add	fp, sp, #0
    f37c:	e24dd01c 	sub	sp, sp, #28
    f380:	e50b0010 	str	r0, [fp, #-16]
    f384:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f388:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:42
    uint32_t wrnum;

    asm volatile("mov r0, %0" : : "r"(file));
    f38c:	e51b3010 	ldr	r3, [fp, #-16]
    f390:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:43
    asm volatile("mov r1, %0" : : "r"(buffer));
    f394:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f398:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:44
    asm volatile("mov r2, %0" : : "r"(size));
    f39c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f3a0:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:45
    asm volatile("swi 66");
    f3a4:	ef000042 	svc	0x00000042
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:46
    asm volatile("mov %0, r0" : "=r"(wrnum));
    f3a8:	e1a03000 	mov	r3, r0
    f3ac:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:48

    return wrnum;
    f3b0:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:49
}
    f3b4:	e1a00003 	mov	r0, r3
    f3b8:	e28bd000 	add	sp, fp, #0
    f3bc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f3c0:	e12fff1e 	bx	lr

0000f3c4 <_Z5closej>:
_Z5closej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:52

void close(uint32_t file)
{
    f3c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f3c8:	e28db000 	add	fp, sp, #0
    f3cc:	e24dd00c 	sub	sp, sp, #12
    f3d0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:53
    asm volatile("mov r0, %0" : : "r"(file));
    f3d4:	e51b3008 	ldr	r3, [fp, #-8]
    f3d8:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:54
    asm volatile("swi 67");
    f3dc:	ef000043 	svc	0x00000043
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:55
}
    f3e0:	e320f000 	nop	{0}
    f3e4:	e28bd000 	add	sp, fp, #0
    f3e8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f3ec:	e12fff1e 	bx	lr

0000f3f0 <_Z5ioctlj16NIOCtl_OperationPv>:
_Z5ioctlj16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:58

uint32_t ioctl(uint32_t file, NIOCtl_Operation operation, void* param)
{
    f3f0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f3f4:	e28db000 	add	fp, sp, #0
    f3f8:	e24dd01c 	sub	sp, sp, #28
    f3fc:	e50b0010 	str	r0, [fp, #-16]
    f400:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f404:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:61
    uint32_t retcode;

    asm volatile("mov r0, %0" : : "r"(file));
    f408:	e51b3010 	ldr	r3, [fp, #-16]
    f40c:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:62
    asm volatile("mov r1, %0" : : "r"(operation));
    f410:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f414:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:63
    asm volatile("mov r2, %0" : : "r"(param));
    f418:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f41c:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:64
    asm volatile("swi 68");
    f420:	ef000044 	svc	0x00000044
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:65
    asm volatile("mov %0, r0" : "=r"(retcode));
    f424:	e1a03000 	mov	r3, r0
    f428:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:67

    return retcode;
    f42c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:68
}
    f430:	e1a00003 	mov	r0, r3
    f434:	e28bd000 	add	sp, fp, #0
    f438:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f43c:	e12fff1e 	bx	lr

0000f440 <_Z4itoajPcj>:
_Z4itoajPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:9
{
    const char CharConvArr[] = "0123456789ABCDEF";
}

void itoa(unsigned int input, char* output, unsigned int base)
{
    f440:	e92d4800 	push	{fp, lr}
    f444:	e28db004 	add	fp, sp, #4
    f448:	e24dd020 	sub	sp, sp, #32
    f44c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    f450:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    f454:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:10
    int i = 0;
    f458:	e3a03000 	mov	r3, #0
    f45c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:12

    while (input > 0)
    f460:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f464:	e3530000 	cmp	r3, #0
    f468:	0a000014 	beq	f4c0 <_Z4itoajPcj+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:14
    {
        output[i] = CharConvArr[input % base];
    f46c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f470:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    f474:	e1a00003 	mov	r0, r3
    f478:	eb0002c7 	bl	ff9c <__aeabi_uidivmod>
    f47c:	e1a03001 	mov	r3, r1
    f480:	e1a01003 	mov	r1, r3
    f484:	e51b3008 	ldr	r3, [fp, #-8]
    f488:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f48c:	e0823003 	add	r3, r2, r3
    f490:	e59f2118 	ldr	r2, [pc, #280]	; f5b0 <_Z4itoajPcj+0x170>
    f494:	e7d22001 	ldrb	r2, [r2, r1]
    f498:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:15
        input /= base;
    f49c:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    f4a0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    f4a4:	eb000241 	bl	fdb0 <__udivsi3>
    f4a8:	e1a03000 	mov	r3, r0
    f4ac:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:16
        i++;
    f4b0:	e51b3008 	ldr	r3, [fp, #-8]
    f4b4:	e2833001 	add	r3, r3, #1
    f4b8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:12
    while (input > 0)
    f4bc:	eaffffe7 	b	f460 <_Z4itoajPcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:19
    }

    if (i == 0)
    f4c0:	e51b3008 	ldr	r3, [fp, #-8]
    f4c4:	e3530000 	cmp	r3, #0
    f4c8:	1a000007 	bne	f4ec <_Z4itoajPcj+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:21
    {
        output[i] = CharConvArr[0];
    f4cc:	e51b3008 	ldr	r3, [fp, #-8]
    f4d0:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f4d4:	e0823003 	add	r3, r2, r3
    f4d8:	e3a02030 	mov	r2, #48	; 0x30
    f4dc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:22
        i++;
    f4e0:	e51b3008 	ldr	r3, [fp, #-8]
    f4e4:	e2833001 	add	r3, r3, #1
    f4e8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:25
    }

    output[i] = '\0';
    f4ec:	e51b3008 	ldr	r3, [fp, #-8]
    f4f0:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f4f4:	e0823003 	add	r3, r2, r3
    f4f8:	e3a02000 	mov	r2, #0
    f4fc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:26
    i--;
    f500:	e51b3008 	ldr	r3, [fp, #-8]
    f504:	e2433001 	sub	r3, r3, #1
    f508:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28

    for (int j = 0; j <= i / 2; j++)
    f50c:	e3a03000 	mov	r3, #0
    f510:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28 (discriminator 3)
    f514:	e51b3008 	ldr	r3, [fp, #-8]
    f518:	e1a02fa3 	lsr	r2, r3, #31
    f51c:	e0823003 	add	r3, r2, r3
    f520:	e1a030c3 	asr	r3, r3, #1
    f524:	e1a02003 	mov	r2, r3
    f528:	e51b300c 	ldr	r3, [fp, #-12]
    f52c:	e1530002 	cmp	r3, r2
    f530:	ca00001b 	bgt	f5a4 <_Z4itoajPcj+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:30 (discriminator 2)
    {
        char c = output[i - j];
    f534:	e51b2008 	ldr	r2, [fp, #-8]
    f538:	e51b300c 	ldr	r3, [fp, #-12]
    f53c:	e0423003 	sub	r3, r2, r3
    f540:	e1a02003 	mov	r2, r3
    f544:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f548:	e0833002 	add	r3, r3, r2
    f54c:	e5d33000 	ldrb	r3, [r3]
    f550:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:31 (discriminator 2)
        output[i - j] = output[j];
    f554:	e51b300c 	ldr	r3, [fp, #-12]
    f558:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f55c:	e0822003 	add	r2, r2, r3
    f560:	e51b1008 	ldr	r1, [fp, #-8]
    f564:	e51b300c 	ldr	r3, [fp, #-12]
    f568:	e0413003 	sub	r3, r1, r3
    f56c:	e1a01003 	mov	r1, r3
    f570:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f574:	e0833001 	add	r3, r3, r1
    f578:	e5d22000 	ldrb	r2, [r2]
    f57c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:32 (discriminator 2)
        output[j] = c;
    f580:	e51b300c 	ldr	r3, [fp, #-12]
    f584:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f588:	e0823003 	add	r3, r2, r3
    f58c:	e55b200d 	ldrb	r2, [fp, #-13]
    f590:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28 (discriminator 2)
    for (int j = 0; j <= i / 2; j++)
    f594:	e51b300c 	ldr	r3, [fp, #-12]
    f598:	e2833001 	add	r3, r3, #1
    f59c:	e50b300c 	str	r3, [fp, #-12]
    f5a0:	eaffffdb 	b	f514 <_Z4itoajPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:34
    }
}
    f5a4:	e320f000 	nop	{0}
    f5a8:	e24bd004 	sub	sp, fp, #4
    f5ac:	e8bd8800 	pop	{fp, pc}
    f5b0:	00010718 	andeq	r0, r1, r8, lsl r7

0000f5b4 <_Z4atoiPKc>:
_Z4atoiPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:37

int atoi(const char* input)
{
    f5b4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f5b8:	e28db000 	add	fp, sp, #0
    f5bc:	e24dd014 	sub	sp, sp, #20
    f5c0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:38
    int output = 0;
    f5c4:	e3a03000 	mov	r3, #0
    f5c8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:40

    while (*input != '\0')
    f5cc:	e51b3010 	ldr	r3, [fp, #-16]
    f5d0:	e5d33000 	ldrb	r3, [r3]
    f5d4:	e3530000 	cmp	r3, #0
    f5d8:	0a000017 	beq	f63c <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:42
    {
        output *= 10;
    f5dc:	e51b2008 	ldr	r2, [fp, #-8]
    f5e0:	e1a03002 	mov	r3, r2
    f5e4:	e1a03103 	lsl	r3, r3, #2
    f5e8:	e0833002 	add	r3, r3, r2
    f5ec:	e1a03083 	lsl	r3, r3, #1
    f5f0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:43
        if (*input > '9' || *input < '0')
    f5f4:	e51b3010 	ldr	r3, [fp, #-16]
    f5f8:	e5d33000 	ldrb	r3, [r3]
    f5fc:	e3530039 	cmp	r3, #57	; 0x39
    f600:	8a00000d 	bhi	f63c <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:43 (discriminator 1)
    f604:	e51b3010 	ldr	r3, [fp, #-16]
    f608:	e5d33000 	ldrb	r3, [r3]
    f60c:	e353002f 	cmp	r3, #47	; 0x2f
    f610:	9a000009 	bls	f63c <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:46
            break;

        output += *input - '0';
    f614:	e51b3010 	ldr	r3, [fp, #-16]
    f618:	e5d33000 	ldrb	r3, [r3]
    f61c:	e2433030 	sub	r3, r3, #48	; 0x30
    f620:	e51b2008 	ldr	r2, [fp, #-8]
    f624:	e0823003 	add	r3, r2, r3
    f628:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:48

        input++;
    f62c:	e51b3010 	ldr	r3, [fp, #-16]
    f630:	e2833001 	add	r3, r3, #1
    f634:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:40
    while (*input != '\0')
    f638:	eaffffe3 	b	f5cc <_Z4atoiPKc+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:51
    }

    return output;
    f63c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:52
}
    f640:	e1a00003 	mov	r0, r3
    f644:	e28bd000 	add	sp, fp, #0
    f648:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f64c:	e12fff1e 	bx	lr

0000f650 <_Z7strncpyPcPKci>:
_Z7strncpyPcPKci():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:55

char* strncpy(char* dest, const char* src, int num)
{
    f650:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f654:	e28db000 	add	fp, sp, #0
    f658:	e24dd01c 	sub	sp, sp, #28
    f65c:	e50b0010 	str	r0, [fp, #-16]
    f660:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f664:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58
    int i;

    for (i = 0; i < num && src[i] != '\0'; i++)
    f668:	e3a03000 	mov	r3, #0
    f66c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 4)
    f670:	e51b2008 	ldr	r2, [fp, #-8]
    f674:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f678:	e1520003 	cmp	r2, r3
    f67c:	aa000011 	bge	f6c8 <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 2)
    f680:	e51b3008 	ldr	r3, [fp, #-8]
    f684:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    f688:	e0823003 	add	r3, r2, r3
    f68c:	e5d33000 	ldrb	r3, [r3]
    f690:	e3530000 	cmp	r3, #0
    f694:	0a00000b 	beq	f6c8 <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:59 (discriminator 3)
        dest[i] = src[i];
    f698:	e51b3008 	ldr	r3, [fp, #-8]
    f69c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    f6a0:	e0822003 	add	r2, r2, r3
    f6a4:	e51b3008 	ldr	r3, [fp, #-8]
    f6a8:	e51b1010 	ldr	r1, [fp, #-16]
    f6ac:	e0813003 	add	r3, r1, r3
    f6b0:	e5d22000 	ldrb	r2, [r2]
    f6b4:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 3)
    for (i = 0; i < num && src[i] != '\0'; i++)
    f6b8:	e51b3008 	ldr	r3, [fp, #-8]
    f6bc:	e2833001 	add	r3, r3, #1
    f6c0:	e50b3008 	str	r3, [fp, #-8]
    f6c4:	eaffffe9 	b	f670 <_Z7strncpyPcPKci+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:60 (discriminator 2)
    for (; i < num; i++)
    f6c8:	e51b2008 	ldr	r2, [fp, #-8]
    f6cc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f6d0:	e1520003 	cmp	r2, r3
    f6d4:	aa000008 	bge	f6fc <_Z7strncpyPcPKci+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:61 (discriminator 1)
        dest[i] = '\0';
    f6d8:	e51b3008 	ldr	r3, [fp, #-8]
    f6dc:	e51b2010 	ldr	r2, [fp, #-16]
    f6e0:	e0823003 	add	r3, r2, r3
    f6e4:	e3a02000 	mov	r2, #0
    f6e8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:60 (discriminator 1)
    for (; i < num; i++)
    f6ec:	e51b3008 	ldr	r3, [fp, #-8]
    f6f0:	e2833001 	add	r3, r3, #1
    f6f4:	e50b3008 	str	r3, [fp, #-8]
    f6f8:	eafffff2 	b	f6c8 <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:63

    return dest;
    f6fc:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:64
}
    f700:	e1a00003 	mov	r0, r3
    f704:	e28bd000 	add	sp, fp, #0
    f708:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f70c:	e12fff1e 	bx	lr

0000f710 <_Z7strncmpPKcS0_i>:
_Z7strncmpPKcS0_i():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:67

int strncmp(const char* s1, const char* s2, int num)
{
    f710:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f714:	e28db000 	add	fp, sp, #0
    f718:	e24dd01c 	sub	sp, sp, #28
    f71c:	e50b0010 	str	r0, [fp, #-16]
    f720:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f724:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:69
    unsigned char u1, u2;
    while (num-- > 0)
    f728:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f72c:	e2432001 	sub	r2, r3, #1
    f730:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    f734:	e3530000 	cmp	r3, #0
    f738:	c3a03001 	movgt	r3, #1
    f73c:	d3a03000 	movle	r3, #0
    f740:	e6ef3073 	uxtb	r3, r3
    f744:	e3530000 	cmp	r3, #0
    f748:	0a000016 	beq	f7a8 <_Z7strncmpPKcS0_i+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:71
    {
        u1 = (unsigned char)*s1++;
    f74c:	e51b3010 	ldr	r3, [fp, #-16]
    f750:	e2832001 	add	r2, r3, #1
    f754:	e50b2010 	str	r2, [fp, #-16]
    f758:	e5d33000 	ldrb	r3, [r3]
    f75c:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:72
        u2 = (unsigned char)*s2++;
    f760:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f764:	e2832001 	add	r2, r3, #1
    f768:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    f76c:	e5d33000 	ldrb	r3, [r3]
    f770:	e54b3006 	strb	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:73
        if (u1 != u2)
    f774:	e55b2005 	ldrb	r2, [fp, #-5]
    f778:	e55b3006 	ldrb	r3, [fp, #-6]
    f77c:	e1520003 	cmp	r2, r3
    f780:	0a000003 	beq	f794 <_Z7strncmpPKcS0_i+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:74
            return u1 - u2;
    f784:	e55b2005 	ldrb	r2, [fp, #-5]
    f788:	e55b3006 	ldrb	r3, [fp, #-6]
    f78c:	e0423003 	sub	r3, r2, r3
    f790:	ea000005 	b	f7ac <_Z7strncmpPKcS0_i+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:75
        if (u1 == '\0')
    f794:	e55b3005 	ldrb	r3, [fp, #-5]
    f798:	e3530000 	cmp	r3, #0
    f79c:	1affffe1 	bne	f728 <_Z7strncmpPKcS0_i+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:76
            return 0;
    f7a0:	e3a03000 	mov	r3, #0
    f7a4:	ea000000 	b	f7ac <_Z7strncmpPKcS0_i+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:79
    }

    return 0;
    f7a8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:80
}
    f7ac:	e1a00003 	mov	r0, r3
    f7b0:	e28bd000 	add	sp, fp, #0
    f7b4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f7b8:	e12fff1e 	bx	lr

0000f7bc <_Z6strlenPKc>:
_Z6strlenPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:83

int strlen(const char* s)
{
    f7bc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f7c0:	e28db000 	add	fp, sp, #0
    f7c4:	e24dd014 	sub	sp, sp, #20
    f7c8:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:84
    int i = 0;
    f7cc:	e3a03000 	mov	r3, #0
    f7d0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:86

    while (s[i] != '\0')
    f7d4:	e51b3008 	ldr	r3, [fp, #-8]
    f7d8:	e51b2010 	ldr	r2, [fp, #-16]
    f7dc:	e0823003 	add	r3, r2, r3
    f7e0:	e5d33000 	ldrb	r3, [r3]
    f7e4:	e3530000 	cmp	r3, #0
    f7e8:	0a000003 	beq	f7fc <_Z6strlenPKc+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:87
        i++;
    f7ec:	e51b3008 	ldr	r3, [fp, #-8]
    f7f0:	e2833001 	add	r3, r3, #1
    f7f4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:86
    while (s[i] != '\0')
    f7f8:	eafffff5 	b	f7d4 <_Z6strlenPKc+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:89

    return i;
    f7fc:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:90
}
    f800:	e1a00003 	mov	r0, r3
    f804:	e28bd000 	add	sp, fp, #0
    f808:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f80c:	e12fff1e 	bx	lr

0000f810 <_Z5bzeroPvi>:
_Z5bzeroPvi():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:93

void bzero(void* memory, int length)
{
    f810:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f814:	e28db000 	add	fp, sp, #0
    f818:	e24dd014 	sub	sp, sp, #20
    f81c:	e50b0010 	str	r0, [fp, #-16]
    f820:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:94
    char* mem = reinterpret_cast<char*>(memory);
    f824:	e51b3010 	ldr	r3, [fp, #-16]
    f828:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96

    for (int i = 0; i < length; i++)
    f82c:	e3a03000 	mov	r3, #0
    f830:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96 (discriminator 3)
    f834:	e51b2008 	ldr	r2, [fp, #-8]
    f838:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f83c:	e1520003 	cmp	r2, r3
    f840:	aa000008 	bge	f868 <_Z5bzeroPvi+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:97 (discriminator 2)
        mem[i] = 0;
    f844:	e51b3008 	ldr	r3, [fp, #-8]
    f848:	e51b200c 	ldr	r2, [fp, #-12]
    f84c:	e0823003 	add	r3, r2, r3
    f850:	e3a02000 	mov	r2, #0
    f854:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96 (discriminator 2)
    for (int i = 0; i < length; i++)
    f858:	e51b3008 	ldr	r3, [fp, #-8]
    f85c:	e2833001 	add	r3, r3, #1
    f860:	e50b3008 	str	r3, [fp, #-8]
    f864:	eafffff2 	b	f834 <_Z5bzeroPvi+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:98
}
    f868:	e320f000 	nop	{0}
    f86c:	e28bd000 	add	sp, fp, #0
    f870:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f874:	e12fff1e 	bx	lr

0000f878 <_Z6memcpyPKvPvi>:
_Z6memcpyPKvPvi():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:101

void memcpy(const void* src, void* dst, int num)
{
    f878:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f87c:	e28db000 	add	fp, sp, #0
    f880:	e24dd024 	sub	sp, sp, #36	; 0x24
    f884:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    f888:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    f88c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:102
    const char* memsrc = reinterpret_cast<const char*>(src);
    f890:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f894:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:103
    char* memdst = reinterpret_cast<char*>(dst);
    f898:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f89c:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105

    for (int i = 0; i < num; i++)
    f8a0:	e3a03000 	mov	r3, #0
    f8a4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105 (discriminator 3)
    f8a8:	e51b2008 	ldr	r2, [fp, #-8]
    f8ac:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    f8b0:	e1520003 	cmp	r2, r3
    f8b4:	aa00000b 	bge	f8e8 <_Z6memcpyPKvPvi+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:106 (discriminator 2)
        memdst[i] = memsrc[i];
    f8b8:	e51b3008 	ldr	r3, [fp, #-8]
    f8bc:	e51b200c 	ldr	r2, [fp, #-12]
    f8c0:	e0822003 	add	r2, r2, r3
    f8c4:	e51b3008 	ldr	r3, [fp, #-8]
    f8c8:	e51b1010 	ldr	r1, [fp, #-16]
    f8cc:	e0813003 	add	r3, r1, r3
    f8d0:	e5d22000 	ldrb	r2, [r2]
    f8d4:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105 (discriminator 2)
    for (int i = 0; i < num; i++)
    f8d8:	e51b3008 	ldr	r3, [fp, #-8]
    f8dc:	e2833001 	add	r3, r3, #1
    f8e0:	e50b3008 	str	r3, [fp, #-8]
    f8e4:	eaffffef 	b	f8a8 <_Z6memcpyPKvPvi+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:107
}
    f8e8:	e320f000 	nop	{0}
    f8ec:	e28bd000 	add	sp, fp, #0
    f8f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f8f4:	e12fff1e 	bx	lr

0000f8f8 <_ZN13COLED_DisplayC1EPKc>:
_ZN13COLED_DisplayC2EPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:11
#include <drivers/bridges/display_protocol.h>

// tento soubor includujeme jen odtud
#include "oled_font.h"

COLED_Display::COLED_Display(const char* path)
    f8f8:	e92d4800 	push	{fp, lr}
    f8fc:	e28db004 	add	fp, sp, #4
    f900:	e24dd008 	sub	sp, sp, #8
    f904:	e50b0008 	str	r0, [fp, #-8]
    f908:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:12
: mHandle{ open(path, NFile_Open_Mode::Write_Only) }
    f90c:	e3a01001 	mov	r1, #1
    f910:	e51b000c 	ldr	r0, [fp, #-12]
    f914:	ebfffe71 	bl	f2e0 <_Z4openPKc15NFile_Open_Mode>
    f918:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:13
, mOpened(false)
    f91c:	e51b3008 	ldr	r3, [fp, #-8]
    f920:	e5832000 	str	r2, [r3]
    f924:	e51b3008 	ldr	r3, [fp, #-8]
    f928:	e3a02000 	mov	r2, #0
    f92c:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:16
{
    // nastavime priznak dle toho, co vrati open
    mOpened = (mHandle != static_cast<uint32_t>(-1));
    f930:	e51b3008 	ldr	r3, [fp, #-8]
    f934:	e5933000 	ldr	r3, [r3]
    f938:	e3730001 	cmn	r3, #1
    f93c:	13a03001 	movne	r3, #1
    f940:	03a03000 	moveq	r3, #0
    f944:	e6ef2073 	uxtb	r2, r3
    f948:	e51b3008 	ldr	r3, [fp, #-8]
    f94c:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:17
}
    f950:	e51b3008 	ldr	r3, [fp, #-8]
    f954:	e1a00003 	mov	r0, r3
    f958:	e24bd004 	sub	sp, fp, #4
    f95c:	e8bd8800 	pop	{fp, pc}

0000f960 <_ZN13COLED_DisplayD1Ev>:
_ZN13COLED_DisplayD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:19

COLED_Display::~COLED_Display()
    f960:	e92d4800 	push	{fp, lr}
    f964:	e28db004 	add	fp, sp, #4
    f968:	e24dd008 	sub	sp, sp, #8
    f96c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:22
{
    // pokud byl displej otevreny, zavreme
    if (mOpened)
    f970:	e51b3008 	ldr	r3, [fp, #-8]
    f974:	e5d33004 	ldrb	r3, [r3, #4]
    f978:	e3530000 	cmp	r3, #0
    f97c:	0a000006 	beq	f99c <_ZN13COLED_DisplayD1Ev+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:24
    {
        mOpened = false;
    f980:	e51b3008 	ldr	r3, [fp, #-8]
    f984:	e3a02000 	mov	r2, #0
    f988:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:25
        close(mHandle);
    f98c:	e51b3008 	ldr	r3, [fp, #-8]
    f990:	e5933000 	ldr	r3, [r3]
    f994:	e1a00003 	mov	r0, r3
    f998:	ebfffe89 	bl	f3c4 <_Z5closej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:27
    }
}
    f99c:	e51b3008 	ldr	r3, [fp, #-8]
    f9a0:	e1a00003 	mov	r0, r3
    f9a4:	e24bd004 	sub	sp, fp, #4
    f9a8:	e8bd8800 	pop	{fp, pc}

0000f9ac <_ZNK13COLED_Display9Is_OpenedEv>:
_ZNK13COLED_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:30

bool COLED_Display::Is_Opened() const
{
    f9ac:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f9b0:	e28db000 	add	fp, sp, #0
    f9b4:	e24dd00c 	sub	sp, sp, #12
    f9b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:31
    return mOpened;
    f9bc:	e51b3008 	ldr	r3, [fp, #-8]
    f9c0:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:32
}
    f9c4:	e1a00003 	mov	r0, r3
    f9c8:	e28bd000 	add	sp, fp, #0
    f9cc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f9d0:	e12fff1e 	bx	lr

0000f9d4 <_ZN13COLED_Display5ClearEb>:
_ZN13COLED_Display5ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:35

void COLED_Display::Clear(bool clearSet)
{
    f9d4:	e92d4800 	push	{fp, lr}
    f9d8:	e28db004 	add	fp, sp, #4
    f9dc:	e24dd010 	sub	sp, sp, #16
    f9e0:	e50b0010 	str	r0, [fp, #-16]
    f9e4:	e1a03001 	mov	r3, r1
    f9e8:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:36
    if (!mOpened)
    f9ec:	e51b3010 	ldr	r3, [fp, #-16]
    f9f0:	e5d33004 	ldrb	r3, [r3, #4]
    f9f4:	e2233001 	eor	r3, r3, #1
    f9f8:	e6ef3073 	uxtb	r3, r3
    f9fc:	e3530000 	cmp	r3, #0
    fa00:	1a00000f 	bne	fa44 <_ZN13COLED_Display5ClearEb+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:40
        return;

    TDisplay_Clear_Packet pkt;
    pkt.header.cmd = NDisplay_Command::Clear;
    fa04:	e3a03002 	mov	r3, #2
    fa08:	e54b3008 	strb	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:41
    pkt.clearSet = clearSet ? 1 : 0;
    fa0c:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    fa10:	e3530000 	cmp	r3, #0
    fa14:	0a000001 	beq	fa20 <_ZN13COLED_Display5ClearEb+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:41 (discriminator 1)
    fa18:	e3a03001 	mov	r3, #1
    fa1c:	ea000000 	b	fa24 <_ZN13COLED_Display5ClearEb+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:41 (discriminator 2)
    fa20:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:41 (discriminator 4)
    fa24:	e54b3007 	strb	r3, [fp, #-7]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:42 (discriminator 4)
    write(mHandle, reinterpret_cast<char*>(&pkt), sizeof(pkt));
    fa28:	e51b3010 	ldr	r3, [fp, #-16]
    fa2c:	e5933000 	ldr	r3, [r3]
    fa30:	e24b1008 	sub	r1, fp, #8
    fa34:	e3a02002 	mov	r2, #2
    fa38:	e1a00003 	mov	r0, r3
    fa3c:	ebfffe4c 	bl	f374 <_Z5writejPKcj>
    fa40:	ea000000 	b	fa48 <_ZN13COLED_Display5ClearEb+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:37
        return;
    fa44:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:43
}
    fa48:	e24bd004 	sub	sp, fp, #4
    fa4c:	e8bd8800 	pop	{fp, pc}

0000fa50 <_ZN13COLED_Display9Set_PixelEttb>:
_ZN13COLED_Display9Set_PixelEttb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:46

void COLED_Display::Set_Pixel(uint16_t x, uint16_t y, bool set)
{
    fa50:	e92d4800 	push	{fp, lr}
    fa54:	e28db004 	add	fp, sp, #4
    fa58:	e24dd018 	sub	sp, sp, #24
    fa5c:	e50b0010 	str	r0, [fp, #-16]
    fa60:	e1a00001 	mov	r0, r1
    fa64:	e1a01002 	mov	r1, r2
    fa68:	e1a02003 	mov	r2, r3
    fa6c:	e1a03000 	mov	r3, r0
    fa70:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
    fa74:	e1a03001 	mov	r3, r1
    fa78:	e14b31b4 	strh	r3, [fp, #-20]	; 0xffffffec
    fa7c:	e1a03002 	mov	r3, r2
    fa80:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:47
    if (!mOpened)
    fa84:	e51b3010 	ldr	r3, [fp, #-16]
    fa88:	e5d33004 	ldrb	r3, [r3, #4]
    fa8c:	e2233001 	eor	r3, r3, #1
    fa90:	e6ef3073 	uxtb	r3, r3
    fa94:	e3530000 	cmp	r3, #0
    fa98:	1a000024 	bne	fb30 <_ZN13COLED_Display9Set_PixelEttb+0xe0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:52
        return;

    // nehospodarny zpusob, jak nastavit pixely, ale pro ted staci
    TDisplay_Draw_Pixel_Array_Packet pkt;
    pkt.header.cmd = NDisplay_Command::Draw_Pixel_Array;
    fa9c:	e3a03003 	mov	r3, #3
    faa0:	e54b300c 	strb	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:53
    pkt.count = 1;
    faa4:	e3a03000 	mov	r3, #0
    faa8:	e3833001 	orr	r3, r3, #1
    faac:	e54b300b 	strb	r3, [fp, #-11]
    fab0:	e3a03000 	mov	r3, #0
    fab4:	e54b300a 	strb	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:54
    pkt.first.x = x;
    fab8:	e55b3012 	ldrb	r3, [fp, #-18]	; 0xffffffee
    fabc:	e3a02000 	mov	r2, #0
    fac0:	e1823003 	orr	r3, r2, r3
    fac4:	e54b3009 	strb	r3, [fp, #-9]
    fac8:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    facc:	e3a02000 	mov	r2, #0
    fad0:	e1823003 	orr	r3, r2, r3
    fad4:	e54b3008 	strb	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:55
    pkt.first.y = y;
    fad8:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    fadc:	e3a02000 	mov	r2, #0
    fae0:	e1823003 	orr	r3, r2, r3
    fae4:	e54b3007 	strb	r3, [fp, #-7]
    fae8:	e55b3013 	ldrb	r3, [fp, #-19]	; 0xffffffed
    faec:	e3a02000 	mov	r2, #0
    faf0:	e1823003 	orr	r3, r2, r3
    faf4:	e54b3006 	strb	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:56
    pkt.first.set = set ? 1 : 0;
    faf8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    fafc:	e3530000 	cmp	r3, #0
    fb00:	0a000001 	beq	fb0c <_ZN13COLED_Display9Set_PixelEttb+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:56 (discriminator 1)
    fb04:	e3a03001 	mov	r3, #1
    fb08:	ea000000 	b	fb10 <_ZN13COLED_Display9Set_PixelEttb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:56 (discriminator 2)
    fb0c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:56 (discriminator 4)
    fb10:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:57 (discriminator 4)
    write(mHandle, reinterpret_cast<char*>(&pkt), sizeof(pkt));
    fb14:	e51b3010 	ldr	r3, [fp, #-16]
    fb18:	e5933000 	ldr	r3, [r3]
    fb1c:	e24b100c 	sub	r1, fp, #12
    fb20:	e3a02008 	mov	r2, #8
    fb24:	e1a00003 	mov	r0, r3
    fb28:	ebfffe11 	bl	f374 <_Z5writejPKcj>
    fb2c:	ea000000 	b	fb34 <_ZN13COLED_Display9Set_PixelEttb+0xe4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:48
        return;
    fb30:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:58
}
    fb34:	e24bd004 	sub	sp, fp, #4
    fb38:	e8bd8800 	pop	{fp, pc}

0000fb3c <_ZN13COLED_Display8Put_CharEttc>:
_ZN13COLED_Display8Put_CharEttc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:61

void COLED_Display::Put_Char(uint16_t x, uint16_t y, char c)
{
    fb3c:	e92d4800 	push	{fp, lr}
    fb40:	e28db004 	add	fp, sp, #4
    fb44:	e24dd028 	sub	sp, sp, #40	; 0x28
    fb48:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    fb4c:	e1a00001 	mov	r0, r1
    fb50:	e1a01002 	mov	r1, r2
    fb54:	e1a02003 	mov	r2, r3
    fb58:	e1a03000 	mov	r3, r0
    fb5c:	e14b32b2 	strh	r3, [fp, #-34]	; 0xffffffde
    fb60:	e1a03001 	mov	r3, r1
    fb64:	e14b32b4 	strh	r3, [fp, #-36]	; 0xffffffdc
    fb68:	e1a03002 	mov	r3, r2
    fb6c:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:62
    if (!mOpened)
    fb70:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    fb74:	e5d33004 	ldrb	r3, [r3, #4]
    fb78:	e2233001 	eor	r3, r3, #1
    fb7c:	e6ef3073 	uxtb	r3, r3
    fb80:	e3530000 	cmp	r3, #0
    fb84:	1a000040 	bne	fc8c <_ZN13COLED_Display8Put_CharEttc+0x150>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:66
        return;

    // umime jen nektere znaky
    if (c < OLED_Font::Char_Begin || c >= OLED_Font::Char_End)
    fb88:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    fb8c:	e353001f 	cmp	r3, #31
    fb90:	9a00003f 	bls	fc94 <_ZN13COLED_Display8Put_CharEttc+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:66 (discriminator 1)
    fb94:	e15b32d5 	ldrsb	r3, [fp, #-37]	; 0xffffffdb
    fb98:	e3530000 	cmp	r3, #0
    fb9c:	ba00003c 	blt	fc94 <_ZN13COLED_Display8Put_CharEttc+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:71
        return;

    char buf[sizeof(TDisplay_Pixels_To_Rect) + OLED_Font::Char_Width];

    TDisplay_Pixels_To_Rect* ptr = reinterpret_cast<TDisplay_Pixels_To_Rect*>(buf);
    fba0:	e24b301c 	sub	r3, fp, #28
    fba4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:72
    ptr->header.cmd = NDisplay_Command::Draw_Pixel_Array_To_Rect;
    fba8:	e51b3008 	ldr	r3, [fp, #-8]
    fbac:	e3a02004 	mov	r2, #4
    fbb0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:73
    ptr->w = OLED_Font::Char_Width;
    fbb4:	e51b3008 	ldr	r3, [fp, #-8]
    fbb8:	e3a02000 	mov	r2, #0
    fbbc:	e3822006 	orr	r2, r2, #6
    fbc0:	e5c32005 	strb	r2, [r3, #5]
    fbc4:	e3a02000 	mov	r2, #0
    fbc8:	e5c32006 	strb	r2, [r3, #6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:74
    ptr->h = OLED_Font::Char_Height;
    fbcc:	e51b3008 	ldr	r3, [fp, #-8]
    fbd0:	e3a02000 	mov	r2, #0
    fbd4:	e3822008 	orr	r2, r2, #8
    fbd8:	e5c32007 	strb	r2, [r3, #7]
    fbdc:	e3a02000 	mov	r2, #0
    fbe0:	e5c32008 	strb	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:75
    ptr->x1 = x;
    fbe4:	e51b3008 	ldr	r3, [fp, #-8]
    fbe8:	e55b2022 	ldrb	r2, [fp, #-34]	; 0xffffffde
    fbec:	e3a01000 	mov	r1, #0
    fbf0:	e1812002 	orr	r2, r1, r2
    fbf4:	e5c32001 	strb	r2, [r3, #1]
    fbf8:	e55b2021 	ldrb	r2, [fp, #-33]	; 0xffffffdf
    fbfc:	e3a01000 	mov	r1, #0
    fc00:	e1812002 	orr	r2, r1, r2
    fc04:	e5c32002 	strb	r2, [r3, #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:76
    ptr->y1 = y;
    fc08:	e51b3008 	ldr	r3, [fp, #-8]
    fc0c:	e55b2024 	ldrb	r2, [fp, #-36]	; 0xffffffdc
    fc10:	e3a01000 	mov	r1, #0
    fc14:	e1812002 	orr	r2, r1, r2
    fc18:	e5c32003 	strb	r2, [r3, #3]
    fc1c:	e55b2023 	ldrb	r2, [fp, #-35]	; 0xffffffdd
    fc20:	e3a01000 	mov	r1, #0
    fc24:	e1812002 	orr	r2, r1, r2
    fc28:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:77
    ptr->vflip = OLED_Font::Flip_Chars ? 1 : 0;
    fc2c:	e51b3008 	ldr	r3, [fp, #-8]
    fc30:	e3a02001 	mov	r2, #1
    fc34:	e5c32009 	strb	r2, [r3, #9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:79

    memcpy(&OLED_Font::OLED_Font_Default[OLED_Font::Char_Width * (((uint16_t)c) - OLED_Font::Char_Begin)],
    fc38:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    fc3c:	e2432020 	sub	r2, r3, #32
    fc40:	e1a03002 	mov	r3, r2
    fc44:	e1a03083 	lsl	r3, r3, #1
    fc48:	e0833002 	add	r3, r3, r2
    fc4c:	e1a03083 	lsl	r3, r3, #1
    fc50:	e1a02003 	mov	r2, r3
    fc54:	e59f3044 	ldr	r3, [pc, #68]	; fca0 <_ZN13COLED_Display8Put_CharEttc+0x164>
    fc58:	e0820003 	add	r0, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:80
           &ptr->first,
    fc5c:	e51b3008 	ldr	r3, [fp, #-8]
    fc60:	e283300a 	add	r3, r3, #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:79
    memcpy(&OLED_Font::OLED_Font_Default[OLED_Font::Char_Width * (((uint16_t)c) - OLED_Font::Char_Begin)],
    fc64:	e3a02006 	mov	r2, #6
    fc68:	e1a01003 	mov	r1, r3
    fc6c:	ebffff01 	bl	f878 <_Z6memcpyPKvPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:90
    for (uint16_t i = 0; i < OLED_Font::Char_Width; ++i)
    {
        sMonitor << static_cast<unsigned int>(memdst[i]) << '\n';
    }*/

    write(mHandle, buf, sizeof(buf));
    fc70:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    fc74:	e5933000 	ldr	r3, [r3]
    fc78:	e24b101c 	sub	r1, fp, #28
    fc7c:	e3a02011 	mov	r2, #17
    fc80:	e1a00003 	mov	r0, r3
    fc84:	ebfffdba 	bl	f374 <_Z5writejPKcj>
    fc88:	ea000002 	b	fc98 <_ZN13COLED_Display8Put_CharEttc+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:63
        return;
    fc8c:	e320f000 	nop	{0}
    fc90:	ea000000 	b	fc98 <_ZN13COLED_Display8Put_CharEttc+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:67
        return;
    fc94:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:91
}
    fc98:	e24bd004 	sub	sp, fp, #4
    fc9c:	e8bd8800 	pop	{fp, pc}
    fca0:	00010774 	andeq	r0, r1, r4, ror r7

0000fca4 <_ZN13COLED_Display4FlipEv>:
_ZN13COLED_Display4FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:94

void COLED_Display::Flip()
{
    fca4:	e92d4800 	push	{fp, lr}
    fca8:	e28db004 	add	fp, sp, #4
    fcac:	e24dd010 	sub	sp, sp, #16
    fcb0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:95
    if (!mOpened)
    fcb4:	e51b3010 	ldr	r3, [fp, #-16]
    fcb8:	e5d33004 	ldrb	r3, [r3, #4]
    fcbc:	e2233001 	eor	r3, r3, #1
    fcc0:	e6ef3073 	uxtb	r3, r3
    fcc4:	e3530000 	cmp	r3, #0
    fcc8:	1a000008 	bne	fcf0 <_ZN13COLED_Display4FlipEv+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:99
        return;

    TDisplay_NonParametric_Packet pkt;
    pkt.header.cmd = NDisplay_Command::Flip;
    fccc:	e3a03001 	mov	r3, #1
    fcd0:	e54b3008 	strb	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:101

    write(mHandle, reinterpret_cast<char*>(&pkt), sizeof(pkt));
    fcd4:	e51b3010 	ldr	r3, [fp, #-16]
    fcd8:	e5933000 	ldr	r3, [r3]
    fcdc:	e24b1008 	sub	r1, fp, #8
    fce0:	e3a02001 	mov	r2, #1
    fce4:	e1a00003 	mov	r0, r3
    fce8:	ebfffda1 	bl	f374 <_Z5writejPKcj>
    fcec:	ea000000 	b	fcf4 <_ZN13COLED_Display4FlipEv+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:96
        return;
    fcf0:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:102
}
    fcf4:	e24bd004 	sub	sp, fp, #4
    fcf8:	e8bd8800 	pop	{fp, pc}

0000fcfc <_ZN13COLED_Display10Put_StringEttPKc>:
_ZN13COLED_Display10Put_StringEttPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:105

void COLED_Display::Put_String(uint16_t x, uint16_t y, const char* str)
{
    fcfc:	e92d4800 	push	{fp, lr}
    fd00:	e28db004 	add	fp, sp, #4
    fd04:	e24dd018 	sub	sp, sp, #24
    fd08:	e50b0010 	str	r0, [fp, #-16]
    fd0c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    fd10:	e1a03001 	mov	r3, r1
    fd14:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
    fd18:	e1a03002 	mov	r3, r2
    fd1c:	e14b31b4 	strh	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:106
    if (!mOpened)
    fd20:	e51b3010 	ldr	r3, [fp, #-16]
    fd24:	e5d33004 	ldrb	r3, [r3, #4]
    fd28:	e2233001 	eor	r3, r3, #1
    fd2c:	e6ef3073 	uxtb	r3, r3
    fd30:	e3530000 	cmp	r3, #0
    fd34:	1a000019 	bne	fda0 <_ZN13COLED_Display10Put_StringEttPKc+0xa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:109
        return;

    uint16_t xi = x;
    fd38:	e15b31b2 	ldrh	r3, [fp, #-18]	; 0xffffffee
    fd3c:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:110
    const char* ptr = str;
    fd40:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    fd44:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:112
    // dokud nedojdeme na konec retezce nebo dokud nejsme 64 znaku daleko (limit, kdyby nahodou se neco pokazilo)
    while (*ptr != '\0' && ptr - str < 64)
    fd48:	e51b300c 	ldr	r3, [fp, #-12]
    fd4c:	e5d33000 	ldrb	r3, [r3]
    fd50:	e3530000 	cmp	r3, #0
    fd54:	0a000012 	beq	fda4 <_ZN13COLED_Display10Put_StringEttPKc+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:112 (discriminator 1)
    fd58:	e51b200c 	ldr	r2, [fp, #-12]
    fd5c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    fd60:	e0423003 	sub	r3, r2, r3
    fd64:	e353003f 	cmp	r3, #63	; 0x3f
    fd68:	ca00000d 	bgt	fda4 <_ZN13COLED_Display10Put_StringEttPKc+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:114
    {
        Put_Char(xi, y, *ptr);
    fd6c:	e51b300c 	ldr	r3, [fp, #-12]
    fd70:	e5d33000 	ldrb	r3, [r3]
    fd74:	e15b21b4 	ldrh	r2, [fp, #-20]	; 0xffffffec
    fd78:	e15b10b6 	ldrh	r1, [fp, #-6]
    fd7c:	e51b0010 	ldr	r0, [fp, #-16]
    fd80:	ebffff6d 	bl	fb3c <_ZN13COLED_Display8Put_CharEttc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:115
        xi += OLED_Font::Char_Width;
    fd84:	e15b30b6 	ldrh	r3, [fp, #-6]
    fd88:	e2833006 	add	r3, r3, #6
    fd8c:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:116
        ptr++;
    fd90:	e51b300c 	ldr	r3, [fp, #-12]
    fd94:	e2833001 	add	r3, r3, #1
    fd98:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:112
    while (*ptr != '\0' && ptr - str < 64)
    fd9c:	eaffffe9 	b	fd48 <_ZN13COLED_Display10Put_StringEttPKc+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:107
        return;
    fda0:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:118
    }
}
    fda4:	e24bd004 	sub	sp, fp, #4
    fda8:	e8bd8800 	pop	{fp, pc}

0000fdac <_Znaj>:
_Znaj():
/build/libstdc++-arm-none-eabi-gDiE7C/libstdc++-arm-none-eabi-17/build/arm/v5te/hard/libstdc++/libsupc++/../../../../../../src/libstdc++-v3/libsupc++/new_opv.cc:32
    fdac:	eafff15b 	b	c320 <_Znwj>

0000fdb0 <__udivsi3>:
__udivsi3():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1104
    fdb0:	e2512001 	subs	r2, r1, #1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1106
    fdb4:	012fff1e 	bxeq	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1107
    fdb8:	3a000074 	bcc	ff90 <__udivsi3+0x1e0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1108
    fdbc:	e1500001 	cmp	r0, r1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1109
    fdc0:	9a00006b 	bls	ff74 <__udivsi3+0x1c4>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1110
    fdc4:	e1110002 	tst	r1, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1111
    fdc8:	0a00006c 	beq	ff80 <__udivsi3+0x1d0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1113
    fdcc:	e16f3f10 	clz	r3, r0
    fdd0:	e16f2f11 	clz	r2, r1
    fdd4:	e0423003 	sub	r3, r2, r3
    fdd8:	e273301f 	rsbs	r3, r3, #31
    fddc:	10833083 	addne	r3, r3, r3, lsl #1
    fde0:	e3a02000 	mov	r2, #0
    fde4:	108ff103 	addne	pc, pc, r3, lsl #2
    fde8:	e1a00000 	nop			; (mov r0, r0)
    fdec:	e1500f81 	cmp	r0, r1, lsl #31
    fdf0:	e0a22002 	adc	r2, r2, r2
    fdf4:	20400f81 	subcs	r0, r0, r1, lsl #31
    fdf8:	e1500f01 	cmp	r0, r1, lsl #30
    fdfc:	e0a22002 	adc	r2, r2, r2
    fe00:	20400f01 	subcs	r0, r0, r1, lsl #30
    fe04:	e1500e81 	cmp	r0, r1, lsl #29
    fe08:	e0a22002 	adc	r2, r2, r2
    fe0c:	20400e81 	subcs	r0, r0, r1, lsl #29
    fe10:	e1500e01 	cmp	r0, r1, lsl #28
    fe14:	e0a22002 	adc	r2, r2, r2
    fe18:	20400e01 	subcs	r0, r0, r1, lsl #28
    fe1c:	e1500d81 	cmp	r0, r1, lsl #27
    fe20:	e0a22002 	adc	r2, r2, r2
    fe24:	20400d81 	subcs	r0, r0, r1, lsl #27
    fe28:	e1500d01 	cmp	r0, r1, lsl #26
    fe2c:	e0a22002 	adc	r2, r2, r2
    fe30:	20400d01 	subcs	r0, r0, r1, lsl #26
    fe34:	e1500c81 	cmp	r0, r1, lsl #25
    fe38:	e0a22002 	adc	r2, r2, r2
    fe3c:	20400c81 	subcs	r0, r0, r1, lsl #25
    fe40:	e1500c01 	cmp	r0, r1, lsl #24
    fe44:	e0a22002 	adc	r2, r2, r2
    fe48:	20400c01 	subcs	r0, r0, r1, lsl #24
    fe4c:	e1500b81 	cmp	r0, r1, lsl #23
    fe50:	e0a22002 	adc	r2, r2, r2
    fe54:	20400b81 	subcs	r0, r0, r1, lsl #23
    fe58:	e1500b01 	cmp	r0, r1, lsl #22
    fe5c:	e0a22002 	adc	r2, r2, r2
    fe60:	20400b01 	subcs	r0, r0, r1, lsl #22
    fe64:	e1500a81 	cmp	r0, r1, lsl #21
    fe68:	e0a22002 	adc	r2, r2, r2
    fe6c:	20400a81 	subcs	r0, r0, r1, lsl #21
    fe70:	e1500a01 	cmp	r0, r1, lsl #20
    fe74:	e0a22002 	adc	r2, r2, r2
    fe78:	20400a01 	subcs	r0, r0, r1, lsl #20
    fe7c:	e1500981 	cmp	r0, r1, lsl #19
    fe80:	e0a22002 	adc	r2, r2, r2
    fe84:	20400981 	subcs	r0, r0, r1, lsl #19
    fe88:	e1500901 	cmp	r0, r1, lsl #18
    fe8c:	e0a22002 	adc	r2, r2, r2
    fe90:	20400901 	subcs	r0, r0, r1, lsl #18
    fe94:	e1500881 	cmp	r0, r1, lsl #17
    fe98:	e0a22002 	adc	r2, r2, r2
    fe9c:	20400881 	subcs	r0, r0, r1, lsl #17
    fea0:	e1500801 	cmp	r0, r1, lsl #16
    fea4:	e0a22002 	adc	r2, r2, r2
    fea8:	20400801 	subcs	r0, r0, r1, lsl #16
    feac:	e1500781 	cmp	r0, r1, lsl #15
    feb0:	e0a22002 	adc	r2, r2, r2
    feb4:	20400781 	subcs	r0, r0, r1, lsl #15
    feb8:	e1500701 	cmp	r0, r1, lsl #14
    febc:	e0a22002 	adc	r2, r2, r2
    fec0:	20400701 	subcs	r0, r0, r1, lsl #14
    fec4:	e1500681 	cmp	r0, r1, lsl #13
    fec8:	e0a22002 	adc	r2, r2, r2
    fecc:	20400681 	subcs	r0, r0, r1, lsl #13
    fed0:	e1500601 	cmp	r0, r1, lsl #12
    fed4:	e0a22002 	adc	r2, r2, r2
    fed8:	20400601 	subcs	r0, r0, r1, lsl #12
    fedc:	e1500581 	cmp	r0, r1, lsl #11
    fee0:	e0a22002 	adc	r2, r2, r2
    fee4:	20400581 	subcs	r0, r0, r1, lsl #11
    fee8:	e1500501 	cmp	r0, r1, lsl #10
    feec:	e0a22002 	adc	r2, r2, r2
    fef0:	20400501 	subcs	r0, r0, r1, lsl #10
    fef4:	e1500481 	cmp	r0, r1, lsl #9
    fef8:	e0a22002 	adc	r2, r2, r2
    fefc:	20400481 	subcs	r0, r0, r1, lsl #9
    ff00:	e1500401 	cmp	r0, r1, lsl #8
    ff04:	e0a22002 	adc	r2, r2, r2
    ff08:	20400401 	subcs	r0, r0, r1, lsl #8
    ff0c:	e1500381 	cmp	r0, r1, lsl #7
    ff10:	e0a22002 	adc	r2, r2, r2
    ff14:	20400381 	subcs	r0, r0, r1, lsl #7
    ff18:	e1500301 	cmp	r0, r1, lsl #6
    ff1c:	e0a22002 	adc	r2, r2, r2
    ff20:	20400301 	subcs	r0, r0, r1, lsl #6
    ff24:	e1500281 	cmp	r0, r1, lsl #5
    ff28:	e0a22002 	adc	r2, r2, r2
    ff2c:	20400281 	subcs	r0, r0, r1, lsl #5
    ff30:	e1500201 	cmp	r0, r1, lsl #4
    ff34:	e0a22002 	adc	r2, r2, r2
    ff38:	20400201 	subcs	r0, r0, r1, lsl #4
    ff3c:	e1500181 	cmp	r0, r1, lsl #3
    ff40:	e0a22002 	adc	r2, r2, r2
    ff44:	20400181 	subcs	r0, r0, r1, lsl #3
    ff48:	e1500101 	cmp	r0, r1, lsl #2
    ff4c:	e0a22002 	adc	r2, r2, r2
    ff50:	20400101 	subcs	r0, r0, r1, lsl #2
    ff54:	e1500081 	cmp	r0, r1, lsl #1
    ff58:	e0a22002 	adc	r2, r2, r2
    ff5c:	20400081 	subcs	r0, r0, r1, lsl #1
    ff60:	e1500001 	cmp	r0, r1
    ff64:	e0a22002 	adc	r2, r2, r2
    ff68:	20400001 	subcs	r0, r0, r1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1115
    ff6c:	e1a00002 	mov	r0, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1116
    ff70:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1119
    ff74:	03a00001 	moveq	r0, #1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1120
    ff78:	13a00000 	movne	r0, #0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1121
    ff7c:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1123
    ff80:	e16f2f11 	clz	r2, r1
    ff84:	e262201f 	rsb	r2, r2, #31
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1125
    ff88:	e1a00230 	lsr	r0, r0, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1126
    ff8c:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1130
    ff90:	e3500000 	cmp	r0, #0
    ff94:	13e00000 	mvnne	r0, #0
    ff98:	ea000007 	b	ffbc <__aeabi_idiv0>

0000ff9c <__aeabi_uidivmod>:
__aeabi_uidivmod():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1161
    ff9c:	e3510000 	cmp	r1, #0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1162
    ffa0:	0afffffa 	beq	ff90 <__udivsi3+0x1e0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1163
    ffa4:	e92d4003 	push	{r0, r1, lr}
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1164
    ffa8:	ebffff80 	bl	fdb0 <__udivsi3>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1165
    ffac:	e8bd4006 	pop	{r1, r2, lr}
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1166
    ffb0:	e0030092 	mul	r3, r2, r0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1167
    ffb4:	e0411003 	sub	r1, r1, r3
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1168
    ffb8:	e12fff1e 	bx	lr

0000ffbc <__aeabi_idiv0>:
__aeabi_ldiv0():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1466
    ffbc:	e12fff1e 	bx	lr

Disassembly of section .rodata:

0000ffc0 <_ZN3halL18Default_Clock_RateE>:
    ffc0:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000ffc4 <_ZN3halL15Peripheral_BaseE>:
    ffc4:	20000000 	andcs	r0, r0, r0

0000ffc8 <_ZN3halL9GPIO_BaseE>:
    ffc8:	20200000 	eorcs	r0, r0, r0

0000ffcc <_ZN3halL14GPIO_Pin_CountE>:
    ffcc:	00000036 	andeq	r0, r0, r6, lsr r0

0000ffd0 <_ZN3halL8AUX_BaseE>:
    ffd0:	20215000 	eorcs	r5, r1, r0

0000ffd4 <_ZN3halL25Interrupt_Controller_BaseE>:
    ffd4:	2000b200 	andcs	fp, r0, r0, lsl #4

0000ffd8 <_ZN3halL10Timer_BaseE>:
    ffd8:	2000b400 	andcs	fp, r0, r0, lsl #8

0000ffdc <_ZN3halL9TRNG_BaseE>:
    ffdc:	20104000 	andscs	r4, r0, r0

0000ffe0 <_ZN3halL9BSC0_BaseE>:
    ffe0:	20205000 	eorcs	r5, r0, r0

0000ffe4 <_ZN3halL9BSC1_BaseE>:
    ffe4:	20804000 	addcs	r4, r0, r0

0000ffe8 <_ZN3halL9BSC2_BaseE>:
    ffe8:	20805000 	addcs	r5, r0, r0

0000ffec <_ZN3halL18Default_Clock_RateE>:
    ffec:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fff0 <_ZN3halL15Peripheral_BaseE>:
    fff0:	20000000 	andcs	r0, r0, r0

0000fff4 <_ZN3halL9GPIO_BaseE>:
    fff4:	20200000 	eorcs	r0, r0, r0

0000fff8 <_ZN3halL14GPIO_Pin_CountE>:
    fff8:	00000036 	andeq	r0, r0, r6, lsr r0

0000fffc <_ZN3halL8AUX_BaseE>:
    fffc:	20215000 	eorcs	r5, r1, r0

00010000 <_ZN3halL25Interrupt_Controller_BaseE>:
   10000:	2000b200 	andcs	fp, r0, r0, lsl #4

00010004 <_ZN3halL10Timer_BaseE>:
   10004:	2000b400 	andcs	fp, r0, r0, lsl #8

00010008 <_ZN3halL9TRNG_BaseE>:
   10008:	20104000 	andscs	r4, r0, r0

0001000c <_ZN3halL9BSC0_BaseE>:
   1000c:	20205000 	eorcs	r5, r0, r0

00010010 <_ZN3halL9BSC1_BaseE>:
   10010:	20804000 	addcs	r4, r0, r0

00010014 <_ZN3halL9BSC2_BaseE>:
   10014:	20805000 	addcs	r5, r0, r0

00010018 <_ZL24I2C_Transaction_Max_Size>:
   10018:	00000008 	andeq	r0, r0, r8

0001001c <_ZZN8CMonitorlsEjE11BUFFER_SIZE>:
   1001c:	00000010 	andeq	r0, r0, r0, lsl r0
   10020:	65757274 	ldrbvs	r7, [r5, #-628]!	; 0xfffffd8c
   10024:	00000000 	andeq	r0, r0, r0
   10028:	736c6166 	cmnvc	ip, #-2147483623	; 0x80000019
   1002c:	00000065 	andeq	r0, r0, r5, rrx
   10030:	33323130 	teqcc	r2, #48, 2
   10034:	37363534 			; <UNDEFINED> instruction: 0x37363534
   10038:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
   1003c:	46454443 	strbmi	r4, [r5], -r3, asr #8
   10040:	00000000 	andeq	r0, r0, r0

00010044 <_ZN3halL18Default_Clock_RateE>:
   10044:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010048 <_ZN3halL15Peripheral_BaseE>:
   10048:	20000000 	andcs	r0, r0, r0

0001004c <_ZN3halL9GPIO_BaseE>:
   1004c:	20200000 	eorcs	r0, r0, r0

00010050 <_ZN3halL14GPIO_Pin_CountE>:
   10050:	00000036 	andeq	r0, r0, r6, lsr r0

00010054 <_ZN3halL8AUX_BaseE>:
   10054:	20215000 	eorcs	r5, r1, r0

00010058 <_ZN3halL25Interrupt_Controller_BaseE>:
   10058:	2000b200 	andcs	fp, r0, r0, lsl #4

0001005c <_ZN3halL10Timer_BaseE>:
   1005c:	2000b400 	andcs	fp, r0, r0, lsl #8

00010060 <_ZN3halL9TRNG_BaseE>:
   10060:	20104000 	andscs	r4, r0, r0

00010064 <_ZN3halL9BSC0_BaseE>:
   10064:	20205000 	eorcs	r5, r0, r0

00010068 <_ZN3halL9BSC1_BaseE>:
   10068:	20804000 	addcs	r4, r0, r0

0001006c <_ZN3halL9BSC2_BaseE>:
   1006c:	20805000 	addcs	r5, r0, r0

00010070 <_ZL24I2C_Transaction_Max_Size>:
   10070:	00000008 	andeq	r0, r0, r8

00010074 <_ZL21SSD1306_Slave_Address>:
   10074:	0000003c 	andeq	r0, r0, ip, lsr r0

00010078 <_ZN3halL18Default_Clock_RateE>:
   10078:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0001007c <_ZN3halL15Peripheral_BaseE>:
   1007c:	20000000 	andcs	r0, r0, r0

00010080 <_ZN3halL9GPIO_BaseE>:
   10080:	20200000 	eorcs	r0, r0, r0

00010084 <_ZN3halL14GPIO_Pin_CountE>:
   10084:	00000036 	andeq	r0, r0, r6, lsr r0

00010088 <_ZN3halL8AUX_BaseE>:
   10088:	20215000 	eorcs	r5, r1, r0

0001008c <_ZN3halL25Interrupt_Controller_BaseE>:
   1008c:	2000b200 	andcs	fp, r0, r0, lsl #4

00010090 <_ZN3halL10Timer_BaseE>:
   10090:	2000b400 	andcs	fp, r0, r0, lsl #8

00010094 <_ZN3halL9TRNG_BaseE>:
   10094:	20104000 	andscs	r4, r0, r0

00010098 <_ZN3halL9BSC0_BaseE>:
   10098:	20205000 	eorcs	r5, r0, r0

0001009c <_ZN3halL9BSC1_BaseE>:
   1009c:	20804000 	addcs	r4, r0, r0

000100a0 <_ZN3halL9BSC2_BaseE>:
   100a0:	20805000 	addcs	r5, r0, r0

000100a4 <_ZN16CSegment_Display14mCharacter_MapE>:
   100a4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
   100b4:	9dd914de 	cfldrdls	mvd1, [r9, #888]	; 0x378
   100b8:	94cf8f17 	strbls	r8, [pc], #3863	; 100c0 <_ZN16CSegment_Display14mCharacter_MapE+0x1c>
   100bc:	00009fdf 	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
	...

00010104 <_ZN3halL18Default_Clock_RateE>:
   10104:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010108 <_ZN3halL15Peripheral_BaseE>:
   10108:	20000000 	andcs	r0, r0, r0

0001010c <_ZN3halL9GPIO_BaseE>:
   1010c:	20200000 	eorcs	r0, r0, r0

00010110 <_ZN3halL14GPIO_Pin_CountE>:
   10110:	00000036 	andeq	r0, r0, r6, lsr r0

00010114 <_ZN3halL8AUX_BaseE>:
   10114:	20215000 	eorcs	r5, r1, r0

00010118 <_ZN3halL25Interrupt_Controller_BaseE>:
   10118:	2000b200 	andcs	fp, r0, r0, lsl #4

0001011c <_ZN3halL10Timer_BaseE>:
   1011c:	2000b400 	andcs	fp, r0, r0, lsl #8

00010120 <_ZN3halL9TRNG_BaseE>:
   10120:	20104000 	andscs	r4, r0, r0

00010124 <_ZN3halL9BSC0_BaseE>:
   10124:	20205000 	eorcs	r5, r0, r0

00010128 <_ZN3halL9BSC1_BaseE>:
   10128:	20804000 	addcs	r4, r0, r0

0001012c <_ZN3halL9BSC2_BaseE>:
   1012c:	20805000 	addcs	r5, r0, r0

00010130 <_ZN3halL18Default_Clock_RateE>:
   10130:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010134 <_ZN3halL15Peripheral_BaseE>:
   10134:	20000000 	andcs	r0, r0, r0

00010138 <_ZN3halL9GPIO_BaseE>:
   10138:	20200000 	eorcs	r0, r0, r0

0001013c <_ZN3halL14GPIO_Pin_CountE>:
   1013c:	00000036 	andeq	r0, r0, r6, lsr r0

00010140 <_ZN3halL8AUX_BaseE>:
   10140:	20215000 	eorcs	r5, r1, r0

00010144 <_ZN3halL25Interrupt_Controller_BaseE>:
   10144:	2000b200 	andcs	fp, r0, r0, lsl #4

00010148 <_ZN3halL10Timer_BaseE>:
   10148:	2000b400 	andcs	fp, r0, r0, lsl #8

0001014c <_ZN3halL9TRNG_BaseE>:
   1014c:	20104000 	andscs	r4, r0, r0

00010150 <_ZN3halL9BSC0_BaseE>:
   10150:	20205000 	eorcs	r5, r0, r0

00010154 <_ZN3halL9BSC1_BaseE>:
   10154:	20804000 	addcs	r4, r0, r0

00010158 <_ZN3halL9BSC2_BaseE>:
   10158:	20805000 	addcs	r5, r0, r0

0001015c <_ZN3halL18Default_Clock_RateE>:
   1015c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010160 <_ZN3halL15Peripheral_BaseE>:
   10160:	20000000 	andcs	r0, r0, r0

00010164 <_ZN3halL9GPIO_BaseE>:
   10164:	20200000 	eorcs	r0, r0, r0

00010168 <_ZN3halL14GPIO_Pin_CountE>:
   10168:	00000036 	andeq	r0, r0, r6, lsr r0

0001016c <_ZN3halL8AUX_BaseE>:
   1016c:	20215000 	eorcs	r5, r1, r0

00010170 <_ZN3halL25Interrupt_Controller_BaseE>:
   10170:	2000b200 	andcs	fp, r0, r0, lsl #4

00010174 <_ZN3halL10Timer_BaseE>:
   10174:	2000b400 	andcs	fp, r0, r0, lsl #8

00010178 <_ZN3halL9TRNG_BaseE>:
   10178:	20104000 	andscs	r4, r0, r0

0001017c <_ZN3halL9BSC0_BaseE>:
   1017c:	20205000 	eorcs	r5, r0, r0

00010180 <_ZN3halL9BSC1_BaseE>:
   10180:	20804000 	addcs	r4, r0, r0

00010184 <_ZN3halL9BSC2_BaseE>:
   10184:	20805000 	addcs	r5, r0, r0

00010188 <_ZL17TRNG_Warmup_Count>:
   10188:	00040000 	andeq	r0, r4, r0

0001018c <_ZL21MaxFSDriverNameLength>:
   1018c:	00000010 	andeq	r0, r0, r0, lsl r0

00010190 <_ZL17MaxFilenameLength>:
   10190:	00000010 	andeq	r0, r0, r0, lsl r0

00010194 <_ZL13MaxPathLength>:
   10194:	00000080 	andeq	r0, r0, r0, lsl #1

00010198 <_ZL18NoFilesystemDriver>:
   10198:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   1019c:	00564544 	subseq	r4, r6, r4, asr #10
   101a0:	00535953 	subseq	r5, r3, r3, asr r9
   101a4:	00544e4d 	subseq	r4, r4, sp, asr #28
   101a8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
   101ac:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
   101b0:	676e697a 			; <UNDEFINED> instruction: 0x676e697a
   101b4:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
   101b8:	0a534620 	beq	14e1a40 <_bss_end+0x14cfd90>
   101bc:	00000000 	andeq	r0, r0, r0
   101c0:	6e756f6d 	cdpvs	15, 7, cr6, cr5, cr13, {3}
   101c4:	6f702074 	svcvs	0x00702074
   101c8:	20746e69 	rsbscs	r6, r4, r9, ror #28
   101cc:	0000203d 	andeq	r2, r0, sp, lsr r0
   101d0:	0000000a 	andeq	r0, r0, sl
   101d4:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
   101d8:	20676e69 	rsbcs	r6, r7, r9, ror #28
   101dc:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
   101e0:	203d2064 	eorscs	r2, sp, r4, rrx
   101e4:	00000000 	andeq	r0, r0, r0
   101e8:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
   101ec:	00002064 	andeq	r2, r0, r4, rrx
   101f0:	73617720 	cmnvc	r1, #32, 14	; 0x800000
   101f4:	756f6620 	strbvc	r6, [pc, #-1568]!	; fbdc <_ZN13COLED_Display8Put_CharEttc+0xa0>
   101f8:	000a646e 	andeq	r6, sl, lr, ror #8
   101fc:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
   10200:	61772064 	cmnvs	r7, r4, rrx
   10204:	6f6e2073 	svcvs	0x006e2073
   10208:	6f662074 	svcvs	0x00662074
   1020c:	0a646e75 	beq	192bbe8 <_bss_end+0x1919f38>
   10210:	00000000 	andeq	r0, r0, r0
   10214:	61657263 	cmnvs	r5, r3, ror #4
   10218:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
   1021c:	0000203a 	andeq	r2, r0, sl, lsr r0
   10220:	696e6946 	stmdbvs	lr!, {r1, r2, r6, r8, fp, sp, lr}^
   10224:	64656873 	strbtvs	r6, [r5], #-2163	; 0xfffff78d
   10228:	20534620 	subscs	r4, r3, r0, lsr #12
   1022c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
   10230:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
   10234:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
   10238:	0a0a6e6f 	beq	2abbfc <_bss_end+0x299f4c>
   1023c:	00000000 	andeq	r0, r0, r0
   10240:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
   10244:	20676e69 	rsbcs	r6, r7, r9, ror #28
   10248:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
   1024c:	0000203a 	andeq	r2, r0, sl, lsr r0
   10250:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
   10254:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   10258:	706f206f 	rsbvc	r2, pc, pc, rrx
   1025c:	203a6e65 	eorscs	r6, sl, r5, ror #28
   10260:	00000000 	andeq	r0, r0, r0

00010264 <_ZL21MaxFSDriverNameLength>:
   10264:	00000010 	andeq	r0, r0, r0, lsl r0

00010268 <_ZL17MaxFilenameLength>:
   10268:	00000010 	andeq	r0, r0, r0, lsl r0

0001026c <_ZL13MaxPathLength>:
   1026c:	00000080 	andeq	r0, r0, r0, lsl #1

00010270 <_ZL18NoFilesystemDriver>:
   10270:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010274 <_ZN3halL18Default_Clock_RateE>:
   10274:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010278 <_ZN3halL15Peripheral_BaseE>:
   10278:	20000000 	andcs	r0, r0, r0

0001027c <_ZN3halL9GPIO_BaseE>:
   1027c:	20200000 	eorcs	r0, r0, r0

00010280 <_ZN3halL14GPIO_Pin_CountE>:
   10280:	00000036 	andeq	r0, r0, r6, lsr r0

00010284 <_ZN3halL8AUX_BaseE>:
   10284:	20215000 	eorcs	r5, r1, r0

00010288 <_ZN3halL25Interrupt_Controller_BaseE>:
   10288:	2000b200 	andcs	fp, r0, r0, lsl #4

0001028c <_ZN3halL10Timer_BaseE>:
   1028c:	2000b400 	andcs	fp, r0, r0, lsl #8

00010290 <_ZN3halL9TRNG_BaseE>:
   10290:	20104000 	andscs	r4, r0, r0

00010294 <_ZN3halL9BSC0_BaseE>:
   10294:	20205000 	eorcs	r5, r0, r0

00010298 <_ZN3halL9BSC1_BaseE>:
   10298:	20804000 	addcs	r4, r0, r0

0001029c <_ZN3halL9BSC2_BaseE>:
   1029c:	20805000 	addcs	r5, r0, r0

000102a0 <_ZL24I2C_Transaction_Max_Size>:
   102a0:	00000008 	andeq	r0, r0, r8

000102a4 <_ZL21SSD1306_Slave_Address>:
   102a4:	0000003c 	andeq	r0, r0, ip, lsr r0
   102a8:	3a564544 	bcc	15a17c0 <_bss_end+0x158fb10>
   102ac:	6f697067 	svcvs	0x00697067
   102b0:	00000000 	andeq	r0, r0, r0
   102b4:	3a564544 	bcc	15a17cc <_bss_end+0x158fb1c>
   102b8:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
   102bc:	00726f74 	rsbseq	r6, r2, r4, ror pc
   102c0:	3a564544 	bcc	15a17d8 <_bss_end+0x158fb28>
   102c4:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
   102c8:	00000000 	andeq	r0, r0, r0
   102cc:	3a564544 	bcc	15a17e4 <_bss_end+0x158fb34>
   102d0:	00007273 	andeq	r7, r0, r3, ror r2
   102d4:	3a564544 	bcc	15a17ec <_bss_end+0x158fb3c>
   102d8:	64676573 	strbtvs	r6, [r7], #-1395	; 0xfffffa8d
   102dc:	00000000 	andeq	r0, r0, r0
   102e0:	3a564544 	bcc	15a17f8 <_bss_end+0x158fb48>
   102e4:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
   102e8:	00000000 	andeq	r0, r0, r0

000102ec <_ZN11CFilesystem11gFS_DriversE>:
   102ec:	4f495047 	svcmi	0x00495047
   102f0:	0053465f 	subseq	r4, r3, pc, asr r6
	...
   102fc:	000102a8 	andeq	r0, r1, r8, lsr #5
   10300:	00010b30 	andeq	r0, r1, r0, lsr fp
   10304:	494e4f4d 	stmdbmi	lr, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
   10308:	5f524f54 	svcpl	0x00524f54
   1030c:	00005346 	andeq	r5, r0, r6, asr #6
   10310:	00000000 	andeq	r0, r0, r0
   10314:	000102b4 			; <UNDEFINED> instruction: 0x000102b4
   10318:	00010b34 	andeq	r0, r1, r4, lsr fp
   1031c:	474e5254 	smlsldmi	r5, lr, r4, r2
   10320:	0053465f 	subseq	r4, r3, pc, asr r6
	...
   1032c:	000102c0 	andeq	r0, r1, r0, asr #5
   10330:	00010b40 	andeq	r0, r1, r0, asr #22
   10334:	66696853 			; <UNDEFINED> instruction: 0x66696853
   10338:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
   1033c:	53465f67 	movtpl	r5, #28519	; 0x6f67
   10340:	00000000 	andeq	r0, r0, r0
   10344:	000102cc 	andeq	r0, r1, ip, asr #5
   10348:	00010b3c 	andeq	r0, r1, ip, lsr fp
   1034c:	67655337 			; <UNDEFINED> instruction: 0x67655337
   10350:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
   10354:	53465f70 	movtpl	r5, #28528	; 0x6f70
   10358:	00000000 	andeq	r0, r0, r0
   1035c:	000102d4 	ldrdeq	r0, [r1], -r4
   10360:	00010b38 	andeq	r0, r1, r8, lsr fp
   10364:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
   10368:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
   1036c:	53465f70 	movtpl	r5, #28528	; 0x6f70
   10370:	00000000 	andeq	r0, r0, r0
   10374:	000102e0 	andeq	r0, r1, r0, ror #5
   10378:	00010b44 	andeq	r0, r1, r4, asr #22

0001037c <_ZN11CFilesystem17gFS_Drivers_CountE>:
   1037c:	00000006 	andeq	r0, r0, r6

00010380 <_ZN3halL18Default_Clock_RateE>:
   10380:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010384 <_ZN3halL15Peripheral_BaseE>:
   10384:	20000000 	andcs	r0, r0, r0

00010388 <_ZN3halL9GPIO_BaseE>:
   10388:	20200000 	eorcs	r0, r0, r0

0001038c <_ZN3halL14GPIO_Pin_CountE>:
   1038c:	00000036 	andeq	r0, r0, r6, lsr r0

00010390 <_ZN3halL8AUX_BaseE>:
   10390:	20215000 	eorcs	r5, r1, r0

00010394 <_ZN3halL25Interrupt_Controller_BaseE>:
   10394:	2000b200 	andcs	fp, r0, r0, lsl #4

00010398 <_ZN3halL10Timer_BaseE>:
   10398:	2000b400 	andcs	fp, r0, r0, lsl #8

0001039c <_ZN3halL9TRNG_BaseE>:
   1039c:	20104000 	andscs	r4, r0, r0

000103a0 <_ZN3halL9BSC0_BaseE>:
   103a0:	20205000 	eorcs	r5, r0, r0

000103a4 <_ZN3halL9BSC1_BaseE>:
   103a4:	20804000 	addcs	r4, r0, r0

000103a8 <_ZN3halL9BSC2_BaseE>:
   103a8:	20805000 	addcs	r5, r0, r0

000103ac <_ZL24Max_Process_Opened_Files>:
   103ac:	00000010 	andeq	r0, r0, r0, lsl r0

000103b0 <_ZL21MaxFSDriverNameLength>:
   103b0:	00000010 	andeq	r0, r0, r0, lsl r0

000103b4 <_ZL17MaxFilenameLength>:
   103b4:	00000010 	andeq	r0, r0, r0, lsl r0

000103b8 <_ZL13MaxPathLength>:
   103b8:	00000080 	andeq	r0, r0, r0, lsl #1

000103bc <_ZL18NoFilesystemDriver>:
   103bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000103c0 <_ZL14Invalid_Handle>:
   103c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000103c4 <_ZN3halL18Default_Clock_RateE>:
   103c4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000103c8 <_ZN3halL15Peripheral_BaseE>:
   103c8:	20000000 	andcs	r0, r0, r0

000103cc <_ZN3halL9GPIO_BaseE>:
   103cc:	20200000 	eorcs	r0, r0, r0

000103d0 <_ZN3halL14GPIO_Pin_CountE>:
   103d0:	00000036 	andeq	r0, r0, r6, lsr r0

000103d4 <_ZN3halL8AUX_BaseE>:
   103d4:	20215000 	eorcs	r5, r1, r0

000103d8 <_ZN3halL25Interrupt_Controller_BaseE>:
   103d8:	2000b200 	andcs	fp, r0, r0, lsl #4

000103dc <_ZN3halL10Timer_BaseE>:
   103dc:	2000b400 	andcs	fp, r0, r0, lsl #8

000103e0 <_ZN3halL9TRNG_BaseE>:
   103e0:	20104000 	andscs	r4, r0, r0

000103e4 <_ZN3halL9BSC0_BaseE>:
   103e4:	20205000 	eorcs	r5, r0, r0

000103e8 <_ZN3halL9BSC1_BaseE>:
   103e8:	20804000 	addcs	r4, r0, r0

000103ec <_ZN3halL9BSC2_BaseE>:
   103ec:	20805000 	addcs	r5, r0, r0

000103f0 <_ZN3memL9LowMemoryE>:
   103f0:	00020000 	andeq	r0, r2, r0

000103f4 <_ZN3memL10HighMemoryE>:
   103f4:	20000000 	andcs	r0, r0, r0

000103f8 <_ZN3memL8PageSizeE>:
   103f8:	00004000 	andeq	r4, r0, r0

000103fc <_ZN3memL16PagingMemorySizeE>:
   103fc:	1ffe0000 	svcne	0x00fe0000

00010400 <_ZN3memL9PageCountE>:
   10400:	00007ff8 	strdeq	r7, [r0], -r8

00010404 <_ZL24Max_Process_Opened_Files>:
   10404:	00000010 	andeq	r0, r0, r0, lsl r0

00010408 <_ZL21MaxFSDriverNameLength>:
   10408:	00000010 	andeq	r0, r0, r0, lsl r0

0001040c <_ZL17MaxFilenameLength>:
   1040c:	00000010 	andeq	r0, r0, r0, lsl r0

00010410 <_ZL13MaxPathLength>:
   10410:	00000080 	andeq	r0, r0, r0, lsl #1

00010414 <_ZL18NoFilesystemDriver>:
   10414:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010418 <_ZL14Invalid_Handle>:
   10418:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0001041c <_ZN3halL18Default_Clock_RateE>:
   1041c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010420 <_ZN3halL15Peripheral_BaseE>:
   10420:	20000000 	andcs	r0, r0, r0

00010424 <_ZN3halL9GPIO_BaseE>:
   10424:	20200000 	eorcs	r0, r0, r0

00010428 <_ZN3halL14GPIO_Pin_CountE>:
   10428:	00000036 	andeq	r0, r0, r6, lsr r0

0001042c <_ZN3halL8AUX_BaseE>:
   1042c:	20215000 	eorcs	r5, r1, r0

00010430 <_ZN3halL25Interrupt_Controller_BaseE>:
   10430:	2000b200 	andcs	fp, r0, r0, lsl #4

00010434 <_ZN3halL10Timer_BaseE>:
   10434:	2000b400 	andcs	fp, r0, r0, lsl #8

00010438 <_ZN3halL9TRNG_BaseE>:
   10438:	20104000 	andscs	r4, r0, r0

0001043c <_ZN3halL9BSC0_BaseE>:
   1043c:	20205000 	eorcs	r5, r0, r0

00010440 <_ZN3halL9BSC1_BaseE>:
   10440:	20804000 	addcs	r4, r0, r0

00010444 <_ZN3halL9BSC2_BaseE>:
   10444:	20805000 	addcs	r5, r0, r0

00010448 <_ZN3memL9LowMemoryE>:
   10448:	00020000 	andeq	r0, r2, r0

0001044c <_ZN3memL10HighMemoryE>:
   1044c:	20000000 	andcs	r0, r0, r0

00010450 <_ZN3memL8PageSizeE>:
   10450:	00004000 	andeq	r4, r0, r0

00010454 <_ZN3memL16PagingMemorySizeE>:
   10454:	1ffe0000 	svcne	0x00fe0000

00010458 <_ZN3memL9PageCountE>:
   10458:	00007ff8 	strdeq	r7, [r0], -r8

0001045c <_ZN3halL18Default_Clock_RateE>:
   1045c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010460 <_ZN3halL15Peripheral_BaseE>:
   10460:	20000000 	andcs	r0, r0, r0

00010464 <_ZN3halL9GPIO_BaseE>:
   10464:	20200000 	eorcs	r0, r0, r0

00010468 <_ZN3halL14GPIO_Pin_CountE>:
   10468:	00000036 	andeq	r0, r0, r6, lsr r0

0001046c <_ZN3halL8AUX_BaseE>:
   1046c:	20215000 	eorcs	r5, r1, r0

00010470 <_ZN3halL25Interrupt_Controller_BaseE>:
   10470:	2000b200 	andcs	fp, r0, r0, lsl #4

00010474 <_ZN3halL10Timer_BaseE>:
   10474:	2000b400 	andcs	fp, r0, r0, lsl #8

00010478 <_ZN3halL9TRNG_BaseE>:
   10478:	20104000 	andscs	r4, r0, r0

0001047c <_ZN3halL9BSC0_BaseE>:
   1047c:	20205000 	eorcs	r5, r0, r0

00010480 <_ZN3halL9BSC1_BaseE>:
   10480:	20804000 	addcs	r4, r0, r0

00010484 <_ZN3halL9BSC2_BaseE>:
   10484:	20805000 	addcs	r5, r0, r0

00010488 <_ZN3memL9LowMemoryE>:
   10488:	00020000 	andeq	r0, r2, r0

0001048c <_ZN3memL10HighMemoryE>:
   1048c:	20000000 	andcs	r0, r0, r0

00010490 <_ZN3memL8PageSizeE>:
   10490:	00004000 	andeq	r4, r0, r0

00010494 <_ZN3memL16PagingMemorySizeE>:
   10494:	1ffe0000 	svcne	0x00fe0000

00010498 <_ZN3memL9PageCountE>:
   10498:	00007ff8 	strdeq	r7, [r0], -r8

0001049c <_ZL24Max_Process_Opened_Files>:
   1049c:	00000010 	andeq	r0, r0, r0, lsl r0

000104a0 <_ZL21MaxFSDriverNameLength>:
   104a0:	00000010 	andeq	r0, r0, r0, lsl r0

000104a4 <_ZL17MaxFilenameLength>:
   104a4:	00000010 	andeq	r0, r0, r0, lsl r0

000104a8 <_ZL13MaxPathLength>:
   104a8:	00000080 	andeq	r0, r0, r0, lsl #1

000104ac <_ZL18NoFilesystemDriver>:
   104ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000104b0 <_ZL14Invalid_Handle>:
   104b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000104b4 <_ZN3halL18Default_Clock_RateE>:
   104b4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000104b8 <_ZN3halL15Peripheral_BaseE>:
   104b8:	20000000 	andcs	r0, r0, r0

000104bc <_ZN3halL9GPIO_BaseE>:
   104bc:	20200000 	eorcs	r0, r0, r0

000104c0 <_ZN3halL14GPIO_Pin_CountE>:
   104c0:	00000036 	andeq	r0, r0, r6, lsr r0

000104c4 <_ZN3halL8AUX_BaseE>:
   104c4:	20215000 	eorcs	r5, r1, r0

000104c8 <_ZN3halL25Interrupt_Controller_BaseE>:
   104c8:	2000b200 	andcs	fp, r0, r0, lsl #4

000104cc <_ZN3halL10Timer_BaseE>:
   104cc:	2000b400 	andcs	fp, r0, r0, lsl #8

000104d0 <_ZN3halL9TRNG_BaseE>:
   104d0:	20104000 	andscs	r4, r0, r0

000104d4 <_ZN3halL9BSC0_BaseE>:
   104d4:	20205000 	eorcs	r5, r0, r0

000104d8 <_ZN3halL9BSC1_BaseE>:
   104d8:	20804000 	addcs	r4, r0, r0

000104dc <_ZN3halL9BSC2_BaseE>:
   104dc:	20805000 	addcs	r5, r0, r0

000104e0 <_ZN3memL9LowMemoryE>:
   104e0:	00020000 	andeq	r0, r2, r0

000104e4 <_ZN3memL10HighMemoryE>:
   104e4:	20000000 	andcs	r0, r0, r0

000104e8 <_ZN3memL8PageSizeE>:
   104e8:	00004000 	andeq	r4, r0, r0

000104ec <_ZN3memL16PagingMemorySizeE>:
   104ec:	1ffe0000 	svcne	0x00fe0000

000104f0 <_ZN3memL9PageCountE>:
   104f0:	00007ff8 	strdeq	r7, [r0], -r8
   104f4:	61657243 	cmnvs	r5, r3, asr #4
   104f8:	20646574 	rsbcs	r6, r4, r4, ror r5
   104fc:	636f7270 	cmnvs	pc, #112, 4
   10500:	20737365 	rsbscs	r7, r3, r5, ror #6
   10504:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
   10508:	64697020 	strbtvs	r7, [r9], #-32	; 0xffffffe0
   1050c:	00000020 	andeq	r0, r0, r0, lsr #32
   10510:	00002820 	andeq	r2, r0, r0, lsr #16
   10514:	3d205053 	stccc	0, cr5, [r0, #-332]!	; 0xfffffeb4
   10518:	00783020 	rsbseq	r3, r8, r0, lsr #32
   1051c:	00000a29 	andeq	r0, r0, r9, lsr #20

00010520 <_ZL21MaxFSDriverNameLength>:
   10520:	00000010 	andeq	r0, r0, r0, lsl r0

00010524 <_ZL17MaxFilenameLength>:
   10524:	00000010 	andeq	r0, r0, r0, lsl r0

00010528 <_ZL13MaxPathLength>:
   10528:	00000080 	andeq	r0, r0, r0, lsl #1

0001052c <_ZL18NoFilesystemDriver>:
   1052c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   10530:	3a564544 	bcc	15a1a48 <_bss_end+0x158fd98>
   10534:	6f697067 	svcvs	0x00697067
   10538:	0038312f 	eorseq	r3, r8, pc, lsr #2
   1053c:	636f7270 	cmnvs	pc, #112, 4
   10540:	20737365 	rsbscs	r7, r3, r5, ror #6
   10544:	69662031 	stmdbvs	r6!, {r0, r4, r5, sp}^
   10548:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   1054c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   10550:	6f747069 	svcvs	0x00747069
   10554:	203d2072 	eorscs	r2, sp, r2, ror r0
   10558:	00000000 	andeq	r0, r0, r0
   1055c:	0000000a 	andeq	r0, r0, sl
   10560:	00000031 	andeq	r0, r0, r1, lsr r0
   10564:	00000030 	andeq	r0, r0, r0, lsr r0
   10568:	6c6c6548 	cfstr64vs	mvdx6, [ip], #-288	; 0xfffffee0
   1056c:	000a216f 	andeq	r2, sl, pc, ror #2
   10570:	3a564544 	bcc	15a1a88 <_bss_end+0x158fdd8>
   10574:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
   10578:	2f726f74 	svccs	0x00726f74
   1057c:	00000030 	andeq	r0, r0, r0, lsr r0
   10580:	3a564544 	bcc	15a1a98 <_bss_end+0x158fde8>
   10584:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
   10588:	00000000 	andeq	r0, r0, r0
   1058c:	636f7270 	cmnvs	pc, #112, 4
   10590:	20737365 	rsbscs	r7, r3, r5, ror #6
   10594:	69662032 	stmdbvs	r6!, {r1, r4, r5, sp}^
   10598:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   1059c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   105a0:	6f747069 	svcvs	0x00747069
   105a4:	66282072 			; <UNDEFINED> instruction: 0x66282072
   105a8:	203d2029 	eorscs	r2, sp, r9, lsr #32
   105ac:	00000000 	andeq	r0, r0, r0
   105b0:	636f7270 	cmnvs	pc, #112, 4
   105b4:	20737365 	rsbscs	r7, r3, r5, ror #6
   105b8:	69662032 	stmdbvs	r6!, {r1, r4, r5, sp}^
   105bc:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   105c0:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   105c4:	6f747069 	svcvs	0x00747069
   105c8:	72282072 	eorvc	r2, r8, #114	; 0x72
   105cc:	2966646e 	stmdbcs	r6!, {r1, r2, r3, r5, r6, sl, sp, lr}^
   105d0:	0000203d 	andeq	r2, r0, sp, lsr r0
   105d4:	3a564544 	bcc	15a1aec <_bss_end+0x158fe3c>
   105d8:	6f697067 	svcvs	0x00697067
   105dc:	0039312f 	eorseq	r3, r9, pc, lsr #2
   105e0:	636f7270 	cmnvs	pc, #112, 4
   105e4:	20737365 	rsbscs	r7, r3, r5, ror #6
   105e8:	69662033 	stmdbvs	r6!, {r0, r1, r4, r5, sp}^
   105ec:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   105f0:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   105f4:	6f747069 	svcvs	0x00747069
   105f8:	203d2072 	eorscs	r2, sp, r2, ror r0
   105fc:	00000000 	andeq	r0, r0, r0
   10600:	3a564544 	bcc	15a1b18 <_bss_end+0x158fe68>
   10604:	6f697067 	svcvs	0x00697067
   10608:	0030322f 	eorseq	r3, r0, pc, lsr #4
   1060c:	636f7270 	cmnvs	pc, #112, 4
   10610:	20737365 	rsbscs	r7, r3, r5, ror #6
   10614:	69662034 	stmdbvs	r6!, {r2, r4, r5, sp}^
   10618:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   1061c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   10620:	6f747069 	svcvs	0x00747069
   10624:	203d2072 	eorscs	r2, sp, r2, ror r0
   10628:	00000000 	andeq	r0, r0, r0
   1062c:	3a564544 	bcc	15a1b44 <_bss_end+0x158fe94>
   10630:	64676573 	strbtvs	r6, [r7], #-1395	; 0xfffffa8d
   10634:	00000000 	andeq	r0, r0, r0
   10638:	00000034 	andeq	r0, r0, r4, lsr r0
   1063c:	636f7270 	cmnvs	pc, #112, 4
   10640:	20737365 	rsbscs	r7, r3, r5, ror #6
   10644:	69662035 	stmdbvs	r6!, {r0, r2, r4, r5, sp}^
   10648:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   1064c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   10650:	6f747069 	svcvs	0x00747069
   10654:	203d2072 	eorscs	r2, sp, r2, ror r0
   10658:	00000000 	andeq	r0, r0, r0
   1065c:	6c622049 	stclvs	0, cr2, [r2], #-292	; 0xfffffedc
   10660:	2c6b6e69 	stclcs	14, cr6, [fp], #-420	; 0xfffffe5c
   10664:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
   10668:	6f666572 	svcvs	0x00666572
   1066c:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
   10670:	2e6d6120 	powcsep	f6, f5, f0
   10674:	00000000 	andeq	r0, r0, r0
   10678:	65732049 	ldrbvs	r2, [r3, #-73]!	; 0xffffffb7
   1067c:	65642065 	strbvs	r2, [r4, #-101]!	; 0xffffff9b
   10680:	70206461 	eorvc	r6, r0, r1, ror #8
   10684:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
   10688:	00002e73 	andeq	r2, r0, r3, ror lr
   1068c:	20656e4f 	rsbcs	r6, r5, pc, asr #28
   10690:	20555043 	subscs	r5, r5, r3, asr #32
   10694:	656c7572 	strbvs	r7, [ip, #-1394]!	; 0xfffffa8e
   10698:	68742073 	ldmdavs	r4!, {r0, r1, r4, r5, r6, sp}^
   1069c:	61206d65 			; <UNDEFINED> instruction: 0x61206d65
   106a0:	002e6c6c 	eoreq	r6, lr, ip, ror #24
   106a4:	6620794d 	strtvs	r7, [r0], -sp, asr #18
   106a8:	756f7661 	strbvc	r7, [pc, #-1633]!	; 1004f <_ZN3halL9GPIO_BaseE+0x3>
   106ac:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
   106b0:	6f707320 	svcvs	0x00707320
   106b4:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
   106b8:	52412073 	subpl	r2, r1, #115	; 0x73
   106bc:	7277204d 	rsbsvc	r2, r7, #77	; 0x4d
   106c0:	6c747365 	ldclvs	3, cr7, [r4], #-404	; 0xfffffe6c
   106c4:	00676e69 	rsbeq	r6, r7, r9, ror #28
   106c8:	20646c4f 	rsbcs	r6, r4, pc, asr #24
   106cc:	4463614d 	strbtmi	r6, [r3], #-333	; 0xfffffeb3
   106d0:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
   106d4:	61682064 	cmnvs	r8, r4, rrx
   106d8:	20612064 	rsbcs	r2, r1, r4, rrx
   106dc:	6d726166 	ldfvse	f6, [r2, #-408]!	; 0xfffffe68
   106e0:	4945202c 	stmdbmi	r5, {r2, r3, r5, sp}^
   106e4:	00505247 	subseq	r5, r0, r7, asr #4
   106e8:	3a564544 	bcc	15a1c00 <_bss_end+0x158ff50>
   106ec:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
   106f0:	00000000 	andeq	r0, r0, r0
   106f4:	2d56494b 	vldrcs.16	s9, [r6, #-150]	; 0xffffff6a	; <UNPREDICTABLE>
   106f8:	534f5452 	movtpl	r5, #62546	; 0xf452
   106fc:	696e6920 	stmdbvs	lr!, {r5, r8, fp, sp, lr}^
   10700:	2e2e2e74 	mcrcs	14, 1, r2, cr14, cr4, {3}
   10704:	00000000 	andeq	r0, r0, r0

00010708 <_ZL21MaxFSDriverNameLength>:
   10708:	00000010 	andeq	r0, r0, r0, lsl r0

0001070c <_ZL17MaxFilenameLength>:
   1070c:	00000010 	andeq	r0, r0, r0, lsl r0

00010710 <_ZL13MaxPathLength>:
   10710:	00000080 	andeq	r0, r0, r0, lsl #1

00010714 <_ZL18NoFilesystemDriver>:
   10714:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010718 <_ZN12_GLOBAL__N_1L11CharConvArrE>:
   10718:	33323130 	teqcc	r2, #48, 2
   1071c:	37363534 			; <UNDEFINED> instruction: 0x37363534
   10720:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
   10724:	46454443 	strbmi	r4, [r5], -r3, asr #8
   10728:	00000000 	andeq	r0, r0, r0

0001072c <_ZL21MaxFSDriverNameLength>:
   1072c:	00000010 	andeq	r0, r0, r0, lsl r0

00010730 <_ZL17MaxFilenameLength>:
   10730:	00000010 	andeq	r0, r0, r0, lsl r0

00010734 <_ZL13MaxPathLength>:
   10734:	00000080 	andeq	r0, r0, r0, lsl #1

00010738 <_ZL18NoFilesystemDriver>:
   10738:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0001073c <_ZN3halL18Default_Clock_RateE>:
   1073c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010740 <_ZN3halL15Peripheral_BaseE>:
   10740:	20000000 	andcs	r0, r0, r0

00010744 <_ZN3halL9GPIO_BaseE>:
   10744:	20200000 	eorcs	r0, r0, r0

00010748 <_ZN3halL14GPIO_Pin_CountE>:
   10748:	00000036 	andeq	r0, r0, r6, lsr r0

0001074c <_ZN3halL8AUX_BaseE>:
   1074c:	20215000 	eorcs	r5, r1, r0

00010750 <_ZN3halL25Interrupt_Controller_BaseE>:
   10750:	2000b200 	andcs	fp, r0, r0, lsl #4

00010754 <_ZN3halL10Timer_BaseE>:
   10754:	2000b400 	andcs	fp, r0, r0, lsl #8

00010758 <_ZN3halL9TRNG_BaseE>:
   10758:	20104000 	andscs	r4, r0, r0

0001075c <_ZN3halL9BSC0_BaseE>:
   1075c:	20205000 	eorcs	r5, r0, r0

00010760 <_ZN3halL9BSC1_BaseE>:
   10760:	20804000 	addcs	r4, r0, r0

00010764 <_ZN3halL9BSC2_BaseE>:
   10764:	20805000 	addcs	r5, r0, r0

00010768 <_ZN9OLED_FontL10Char_WidthE>:
   10768:	 	andeq	r0, r8, r6

0001076a <_ZN9OLED_FontL11Char_HeightE>:
   1076a:	 	eoreq	r0, r0, r8

0001076c <_ZN9OLED_FontL10Char_BeginE>:
   1076c:	 	addeq	r0, r0, r0, lsr #32

0001076e <_ZN9OLED_FontL8Char_EndE>:
   1076e:	 	andeq	r0, r1, r0, lsl #1

00010770 <_ZN9OLED_FontL10Flip_CharsE>:
   10770:	00000001 	andeq	r0, r0, r1

00010774 <_ZN9OLED_FontL17OLED_Font_DefaultE>:
	...
   1077c:	00002f00 	andeq	r2, r0, r0, lsl #30
   10780:	00070000 	andeq	r0, r7, r0
   10784:	14000007 	strne	r0, [r0], #-7
   10788:	147f147f 	ldrbtne	r1, [pc], #-1151	; 10790 <_ZN9OLED_FontL17OLED_Font_DefaultE+0x1c>
   1078c:	7f2a2400 	svcvc	0x002a2400
   10790:	2300122a 	movwcs	r1, #554	; 0x22a
   10794:	62640813 	rsbvs	r0, r4, #1245184	; 0x130000
   10798:	55493600 	strbpl	r3, [r9, #-1536]	; 0xfffffa00
   1079c:	00005022 	andeq	r5, r0, r2, lsr #32
   107a0:	00000305 	andeq	r0, r0, r5, lsl #6
   107a4:	221c0000 	andscs	r0, ip, #0
   107a8:	00000041 	andeq	r0, r0, r1, asr #32
   107ac:	001c2241 	andseq	r2, ip, r1, asr #4
   107b0:	3e081400 	cfcpyscc	mvf1, mvf8
   107b4:	08001408 	stmdaeq	r0, {r3, sl, ip}
   107b8:	08083e08 	stmdaeq	r8, {r3, r9, sl, fp, ip, sp}
   107bc:	a0000000 	andge	r0, r0, r0
   107c0:	08000060 	stmdaeq	r0, {r5, r6}
   107c4:	08080808 	stmdaeq	r8, {r3, fp}
   107c8:	60600000 	rsbvs	r0, r0, r0
   107cc:	20000000 	andcs	r0, r0, r0
   107d0:	02040810 	andeq	r0, r4, #16, 16	; 0x100000
   107d4:	49513e00 	ldmdbmi	r1, {r9, sl, fp, ip, sp}^
   107d8:	00003e45 	andeq	r3, r0, r5, asr #28
   107dc:	00407f42 	subeq	r7, r0, r2, asr #30
   107e0:	51614200 	cmnpl	r1, r0, lsl #4
   107e4:	21004649 	tstcs	r0, r9, asr #12
   107e8:	314b4541 	cmpcc	fp, r1, asr #10
   107ec:	12141800 	andsne	r1, r4, #0, 16
   107f0:	2700107f 	smlsdxcs	r0, pc, r0, r1	; <UNPREDICTABLE>
   107f4:	39454545 	stmdbcc	r5, {r0, r2, r6, r8, sl, lr}^
   107f8:	494a3c00 	stmdbmi	sl, {sl, fp, ip, sp}^
   107fc:	01003049 	tsteq	r0, r9, asr #32
   10800:	03050971 	movweq	r0, #22897	; 0x5971
   10804:	49493600 	stmdbmi	r9, {r9, sl, ip, sp}^
   10808:	06003649 	streq	r3, [r0], -r9, asr #12
   1080c:	1e294949 	vnmulne.f16	s8, s18, s18	; <UNPREDICTABLE>
   10810:	36360000 	ldrtcc	r0, [r6], -r0
   10814:	00000000 	andeq	r0, r0, r0
   10818:	00003656 	andeq	r3, r0, r6, asr r6
   1081c:	22140800 	andscs	r0, r4, #0, 16
   10820:	14000041 	strne	r0, [r0], #-65	; 0xffffffbf
   10824:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
   10828:	22410000 	subcs	r0, r1, #0
   1082c:	02000814 	andeq	r0, r0, #20, 16	; 0x140000
   10830:	06095101 	streq	r5, [r9], -r1, lsl #2
   10834:	59493200 	stmdbpl	r9, {r9, ip, sp}^
   10838:	7c003e51 	stcvc	14, cr3, [r0], {81}	; 0x51
   1083c:	7c121112 	ldfvcs	f1, [r2], {18}
   10840:	49497f00 	stmdbmi	r9, {r8, r9, sl, fp, ip, sp, lr}^
   10844:	3e003649 	cfmadd32cc	mvax2, mvfx3, mvfx0, mvfx9
   10848:	22414141 	subcs	r4, r1, #1073741840	; 0x40000010
   1084c:	41417f00 	cmpmi	r1, r0, lsl #30
   10850:	7f001c22 	svcvc	0x00001c22
   10854:	41494949 	cmpmi	r9, r9, asr #18
   10858:	09097f00 	stmdbeq	r9, {r8, r9, sl, fp, ip, sp, lr}
   1085c:	3e000109 	adfccs	f0, f0, #1.0
   10860:	7a494941 	bvc	1262d6c <_bss_end+0x12510bc>
   10864:	08087f00 	stmdaeq	r8, {r8, r9, sl, fp, ip, sp, lr}
   10868:	00007f08 	andeq	r7, r0, r8, lsl #30
   1086c:	00417f41 	subeq	r7, r1, r1, asr #30
   10870:	41402000 	mrsmi	r2, (UNDEF: 64)
   10874:	7f00013f 	svcvc	0x0000013f
   10878:	41221408 			; <UNDEFINED> instruction: 0x41221408
   1087c:	40407f00 	submi	r7, r0, r0, lsl #30
   10880:	7f004040 	svcvc	0x00004040
   10884:	7f020c02 	svcvc	0x00020c02
   10888:	08047f00 	stmdaeq	r4, {r8, r9, sl, fp, ip, sp, lr}
   1088c:	3e007f10 	mcrcc	15, 0, r7, cr0, cr0, {0}
   10890:	3e414141 	dvfccsm	f4, f1, f1
   10894:	09097f00 	stmdbeq	r9, {r8, r9, sl, fp, ip, sp, lr}
   10898:	3e000609 	cfmadd32cc	mvax0, mvfx0, mvfx0, mvfx9
   1089c:	5e215141 	sufplsm	f5, f1, f1
   108a0:	19097f00 	stmdbne	r9, {r8, r9, sl, fp, ip, sp, lr}
   108a4:	46004629 	strmi	r4, [r0], -r9, lsr #12
   108a8:	31494949 	cmpcc	r9, r9, asr #18
   108ac:	7f010100 	svcvc	0x00010100
   108b0:	3f000101 	svccc	0x00000101
   108b4:	3f404040 	svccc	0x00404040
   108b8:	40201f00 	eormi	r1, r0, r0, lsl #30
   108bc:	3f001f20 	svccc	0x00001f20
   108c0:	3f403840 	svccc	0x00403840
   108c4:	08146300 	ldmdaeq	r4, {r8, r9, sp, lr}
   108c8:	07006314 	smladeq	r0, r4, r3, r6
   108cc:	07087008 	streq	r7, [r8, -r8]
   108d0:	49516100 	ldmdbmi	r1, {r8, sp, lr}^
   108d4:	00004345 	andeq	r4, r0, r5, asr #6
   108d8:	0041417f 	subeq	r4, r1, pc, ror r1
   108dc:	552a5500 	strpl	r5, [sl, #-1280]!	; 0xfffffb00
   108e0:	0000552a 	andeq	r5, r0, sl, lsr #10
   108e4:	007f4141 	rsbseq	r4, pc, r1, asr #2
   108e8:	01020400 	tsteq	r2, r0, lsl #8
   108ec:	40000402 	andmi	r0, r0, r2, lsl #8
   108f0:	40404040 	submi	r4, r0, r0, asr #32
   108f4:	02010000 	andeq	r0, r1, #0
   108f8:	20000004 	andcs	r0, r0, r4
   108fc:	78545454 	ldmdavc	r4, {r2, r4, r6, sl, ip, lr}^
   10900:	44487f00 	strbmi	r7, [r8], #-3840	; 0xfffff100
   10904:	38003844 	stmdacc	r0, {r2, r6, fp, ip, sp}
   10908:	20444444 	subcs	r4, r4, r4, asr #8
   1090c:	44443800 	strbmi	r3, [r4], #-2048	; 0xfffff800
   10910:	38007f48 	stmdacc	r0, {r3, r6, r8, r9, sl, fp, ip, sp, lr}
   10914:	18545454 	ldmdane	r4, {r2, r4, r6, sl, ip, lr}^
   10918:	097e0800 	ldmdbeq	lr!, {fp}^
   1091c:	18000201 	stmdane	r0, {r0, r9}
   10920:	7ca4a4a4 	cfstrsvc	mvf10, [r4], #656	; 0x290
   10924:	04087f00 	streq	r7, [r8], #-3840	; 0xfffff100
   10928:	00007804 	andeq	r7, r0, r4, lsl #16
   1092c:	00407d44 	subeq	r7, r0, r4, asr #26
   10930:	84804000 	strhi	r4, [r0], #0
   10934:	7f00007d 	svcvc	0x0000007d
   10938:	00442810 	subeq	r2, r4, r0, lsl r8
   1093c:	7f410000 	svcvc	0x00410000
   10940:	7c000040 	stcvc	0, cr0, [r0], {64}	; 0x40
   10944:	78041804 	stmdavc	r4, {r2, fp, ip}
   10948:	04087c00 	streq	r7, [r8], #-3072	; 0xfffff400
   1094c:	38007804 	stmdacc	r0, {r2, fp, ip, sp, lr}
   10950:	38444444 	stmdacc	r4, {r2, r6, sl, lr}^
   10954:	2424fc00 	strtcs	pc, [r4], #-3072	; 0xfffff400
   10958:	18001824 	stmdane	r0, {r2, r5, fp, ip}
   1095c:	fc182424 	ldc2	4, cr2, [r8], {36}	; 0x24
   10960:	04087c00 	streq	r7, [r8], #-3072	; 0xfffff400
   10964:	48000804 	stmdami	r0, {r2, fp}
   10968:	20545454 	subscs	r5, r4, r4, asr r4
   1096c:	443f0400 	ldrtmi	r0, [pc], #-1024	; 10974 <_ZN9OLED_FontL17OLED_Font_DefaultE+0x200>
   10970:	3c002040 	stccc	0, cr2, [r0], {64}	; 0x40
   10974:	7c204040 	stcvc	0, cr4, [r0], #-256	; 0xffffff00
   10978:	40201c00 	eormi	r1, r0, r0, lsl #24
   1097c:	3c001c20 	stccc	12, cr1, [r0], {32}
   10980:	3c403040 	mcrrcc	0, 4, r3, r0, cr0
   10984:	10284400 	eorne	r4, r8, r0, lsl #8
   10988:	1c004428 	cfstrsne	mvf4, [r0], {40}	; 0x28
   1098c:	7ca0a0a0 	stcvc	0, cr10, [r0], #640	; 0x280
   10990:	54644400 	strbtpl	r4, [r4], #-1024	; 0xfffffc00
   10994:	0000444c 	andeq	r4, r0, ip, asr #8
   10998:	00007708 	andeq	r7, r0, r8, lsl #14
   1099c:	7f000000 	svcvc	0x00000000
   109a0:	00000000 	andeq	r0, r0, r0
   109a4:	00000877 	andeq	r0, r0, r7, ror r8
   109a8:	10081000 	andne	r1, r8, r0
   109ac:	00000008 	andeq	r0, r0, r8
   109b0:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata._ZTV23COLED_Display_FS_Driver:

000109b4 <_ZTV23COLED_Display_FS_Driver>:
	...
   109bc:	0000d428 	andeq	sp, r0, r8, lsr #8
   109c0:	0000d448 	andeq	sp, r0, r8, asr #8

Disassembly of section .rodata._ZTV18COLED_Display_File:

000109c4 <_ZTV18COLED_Display_File>:
	...
   109cc:	0000d2c4 	andeq	sp, r0, r4, asr #5
   109d0:	0000d308 	andeq	sp, r0, r8, lsl #6
   109d4:	0000d33c 	andeq	sp, r0, ip, lsr r3
   109d8:	0000d368 	andeq	sp, r0, r8, ror #6
   109dc:	0000d3a4 	andeq	sp, r0, r4, lsr #7
   109e0:	0000d3fc 	strdeq	sp, [r0], -ip

Disassembly of section .rodata._ZTV15CTRNG_FS_Driver:

000109e4 <_ZTV15CTRNG_FS_Driver>:
	...
   109ec:	0000d1d8 	ldrdeq	sp, [r0], -r8
   109f0:	0000d1f8 	strdeq	sp, [r0], -r8

Disassembly of section .rodata._ZTV10CTRNG_File:

000109f4 <_ZTV10CTRNG_File>:
	...
   109fc:	0000cfc8 	andeq	ip, r0, r8, asr #31
   10a00:	0000d00c 	andeq	sp, r0, ip
   10a04:	0000d040 	andeq	sp, r0, r0, asr #32
   10a08:	0000d128 	andeq	sp, r0, r8, lsr #2
   10a0c:	0000d154 	andeq	sp, r0, r4, asr r1
   10a10:	0000d1ac 	andeq	sp, r0, ip, lsr #3

Disassembly of section .rodata._ZTV25CShift_Register_FS_Driver:

00010a14 <_ZTV25CShift_Register_FS_Driver>:
	...
   10a1c:	0000cf00 	andeq	ip, r0, r0, lsl #30
   10a20:	0000cf20 	andeq	ip, r0, r0, lsr #30

Disassembly of section .rodata._ZTV20CShift_Register_File:

00010a24 <_ZTV20CShift_Register_File>:
	...
   10a2c:	0000cd68 	andeq	ip, r0, r8, ror #26
   10a30:	0000cdac 	andeq	ip, r0, ip, lsr #27
   10a34:	0000cde0 	andeq	ip, r0, r0, ror #27
   10a38:	0000ce0c 	andeq	ip, r0, ip, lsl #28
   10a3c:	0000ce7c 	andeq	ip, r0, ip, ror lr
   10a40:	0000ced4 	ldrdeq	ip, [r0], -r4

Disassembly of section .rodata._ZTV26CSegment_Display_FS_Driver:

00010a44 <_ZTV26CSegment_Display_FS_Driver>:
	...
   10a4c:	0000cc94 	muleq	r0, r4, ip
   10a50:	0000ccb4 			; <UNDEFINED> instruction: 0x0000ccb4

Disassembly of section .rodata._ZTV21CSegment_Display_File:

00010a54 <_ZTV21CSegment_Display_File>:
	...
   10a5c:	0000cad0 	ldrdeq	ip, [r0], -r0
   10a60:	0000cb14 	andeq	ip, r0, r4, lsl fp
   10a64:	0000cb48 	andeq	ip, r0, r8, asr #22
   10a68:	0000cba0 	andeq	ip, r0, r0, lsr #23
   10a6c:	0000cc10 	andeq	ip, r0, r0, lsl ip
   10a70:	0000cc68 	andeq	ip, r0, r8, ror #24

Disassembly of section .rodata._ZTV18CMonitor_FS_Driver:

00010a74 <_ZTV18CMonitor_FS_Driver>:
	...
   10a7c:	0000ca00 	andeq	ip, r0, r0, lsl #20
   10a80:	0000ca20 	andeq	ip, r0, r0, lsr #20

Disassembly of section .rodata._ZTV13CMonitor_File:

00010a84 <_ZTV13CMonitor_File>:
	...
   10a8c:	0000c868 	andeq	ip, r0, r8, ror #16
   10a90:	0000c8ac 	andeq	ip, r0, ip, lsr #17
   10a94:	0000c8e0 	andeq	ip, r0, r0, ror #17
   10a98:	0000c90c 	andeq	ip, r0, ip, lsl #18
   10a9c:	0000c974 	andeq	ip, r0, r4, ror r9
   10aa0:	0000c9bc 			; <UNDEFINED> instruction: 0x0000c9bc

Disassembly of section .rodata._ZTV15CGPIO_FS_Driver:

00010aa4 <_ZTV15CGPIO_FS_Driver>:
	...
   10aac:	0000c6a4 	andeq	ip, r0, r4, lsr #13
   10ab0:	0000c6c4 	andeq	ip, r0, r4, asr #13

Disassembly of section .rodata._ZTV10CGPIO_File:

00010ab4 <_ZTV10CGPIO_File>:
	...
   10abc:	0000c468 	andeq	ip, r0, r8, ror #8
   10ac0:	0000c4ac 	andeq	ip, r0, ip, lsr #9
   10ac4:	0000c4e0 	andeq	ip, r0, r0, ror #9
   10ac8:	0000c560 	andeq	ip, r0, r0, ror #10
   10acc:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   10ad0:	0000c678 	andeq	ip, r0, r8, ror r6

Disassembly of section .rodata._ZTV5IFile:

00010ad4 <_ZTV5IFile>:
	...
   10adc:	0000c384 	andeq	ip, r0, r4, lsl #7
   10ae0:	0000c3b8 			; <UNDEFINED> instruction: 0x0000c3b8
   10ae4:	0000c278 	andeq	ip, r0, r8, ror r2
   10ae8:	0000c2a4 	andeq	ip, r0, r4, lsr #5
   10aec:	0000c2d0 	ldrdeq	ip, [r0], -r0
   10af0:	0000c2f4 	strdeq	ip, [r0], -r4

Disassembly of section .ARM.exidx.text._Znaj:

00010af4 <.ARM.exidx.text._Znaj>:
   10af4:	7ffff2b8 	svcvc	0x00fff2b8
   10af8:	00000001 	andeq	r0, r0, r1

Disassembly of section .data:

00010afc <__CTOR_LIST__>:
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/libgcc2.c:2355
   10afc:	000089f4 	strdeq	r8, [r0], -r4
   10b00:	000090bc 	strheq	r9, [r0], -ip
   10b04:	00009780 	andeq	r9, r0, r0, lsl #15
   10b08:	0000aae4 	andeq	sl, r0, r4, ror #21
   10b0c:	0000aec4 	andeq	sl, r0, r4, asr #29
   10b10:	0000b488 	andeq	fp, r0, r8, lsl #9
   10b14:	0000b718 	andeq	fp, r0, r8, lsl r7
   10b18:	0000b998 	muleq	r0, r8, r9
   10b1c:	0000c1f4 	strdeq	ip, [r0], -r4
   10b20:	0000d784 	andeq	sp, r0, r4, lsl #15
   10b24:	0000db98 	muleq	r0, r8, fp
   10b28:	0000de3c 	andeq	sp, r0, ip, lsr lr
   10b2c:	0000ea10 	andeq	lr, r0, r0, lsl sl

00010b30 <__DTOR_LIST__>:
__DTOR_END__():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:120
};

CGPIO_FS_Driver fsGPIO_FS_Driver;
   10b30:	00010aac 	andeq	r0, r1, ip, lsr #21

00010b34 <fsMonitor_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:88
};

CMonitor_FS_Driver fsMonitor_FS_Driver;
   10b34:	00010a7c 	andeq	r0, r1, ip, ror sl

00010b38 <fsSegment_Display_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:86
};

CSegment_Display_FS_Driver fsSegment_Display_FS_Driver;
   10b38:	00010a4c 	andeq	r0, r1, ip, asr #20

00010b3c <fsShift_Register_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:82
};

CShift_Register_FS_Driver fsShift_Register_FS_Driver;
   10b3c:	00010a1c 	andeq	r0, r1, ip, lsl sl

00010b40 <fsTRNG_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:89
};

CTRNG_FS_Driver fsTRNG_FS_Driver;
   10b40:	000109ec 	andeq	r0, r1, ip, ror #19

00010b44 <fsOLED_Display_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:81
};

COLED_Display_FS_Driver fsOLED_Display_FS_Driver;
   10b44:	000109bc 			; <UNDEFINED> instruction: 0x000109bc

00010b48 <messages>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:157
const char* messages[] = {
   10b48:	0001065c 	andeq	r0, r1, ip, asr r6
   10b4c:	00010678 	andeq	r0, r1, r8, ror r6
   10b50:	0001068c 	andeq	r0, r1, ip, lsl #13
   10b54:	000106a4 	andeq	r0, r1, r4, lsr #13
   10b58:	000106c8 	andeq	r0, r1, r8, asr #13

Disassembly of section .bss:

00010b5c <sGPIO>:
	...

00010b70 <sI2C1>:
	...

00010b94 <sMonitor>:
	...

00010bac <_ZZN8CMonitorlsEjE8s_buffer>:
	...

00010bbc <sDisplay_SSD1306>:
	...

00010bd0 <sSegment_Display>:
_ZZN8CMonitorlsEjE8s_buffer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
   10bd0:	00000000 	andeq	r0, r0, r0

00010bd4 <sShift_Register>:
	...

00010be4 <sTimer>:
	...

00010bec <sTRNG>:
	...

00010bf4 <sFilesystem>:
	...

00010c84 <sInterruptCtl>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:9
CInterrupt_Controller sInterruptCtl(hal::Interrupt_Controller_Base);
   10c84:	00000000 	andeq	r0, r0, r0

00010c88 <_ZL11_SWI_Result>:
	...

00010c90 <sKernelMem>:
_ZL11_SWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:4
CKernel_Heap_Manager sKernelMem;
   10c90:	00000000 	andeq	r0, r0, r0

00010c94 <sPage_Manager>:
	...

00011c94 <sProcessMgr>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000126 	andeq	r0, r0, r6, lsr #2
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000014 	andeq	r0, r0, r4, lsl r0
      10:	00011204 	andeq	r1, r1, r4, lsl #4
      14:	0000c500 	andeq	ip, r0, r0, lsl #10
      18:	0080ac00 	addeq	sl, r0, r0, lsl #24
      1c:	0000d800 	andeq	sp, r0, r0, lsl #16
      20:	00000000 	andeq	r0, r0, r0
      24:	01a60200 			; <UNDEFINED> instruction: 0x01a60200
      28:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
      2c:	00817811 	addeq	r7, r1, r1, lsl r8
      30:	00000c00 	andeq	r0, r0, r0, lsl #24
      34:	029c0100 	addseq	r0, ip, #0, 2
      38:	00000193 	muleq	r0, r3, r1
      3c:	60112301 	andsvs	r2, r1, r1, lsl #6
      40:	18000081 	stmdane	r0, {r0, r7}
      44:	01000000 	mrseq	r0, (UNDEF: 0)
      48:	0167029c 			; <UNDEFINED> instruction: 0x0167029c
      4c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
      50:	00814811 	addeq	r4, r1, r1, lsl r8
      54:	00001800 	andeq	r1, r0, r0, lsl #16
      58:	029c0100 	addseq	r0, ip, #0, 2
      5c:	0000015a 	andeq	r0, r0, sl, asr r1
      60:	30111901 	andscc	r1, r1, r1, lsl #18
      64:	18000081 	stmdane	r0, {r0, r7}
      68:	01000000 	mrseq	r0, (UNDEF: 0)
      6c:	0188039c 			; <UNDEFINED> instruction: 0x0188039c
      70:	00020000 	andeq	r0, r2, r0
      74:	000000bb 	strheq	r0, [r0], -fp
      78:	00010004 	andeq	r0, r1, r4
      7c:	15140100 	ldrne	r0, [r4, #-256]	; 0xffffff00
      80:	0000008a 	andeq	r0, r0, sl, lsl #1
      84:	0000bb05 	andeq	fp, r0, r5, lsl #22
      88:	bd060000 	stclt	0, cr0, [r6, #-0]
      8c:	01000001 	tsteq	r0, r1
      90:	00c11f04 	sbceq	r1, r1, r4, lsl #30
      94:	00040000 	andeq	r0, r4, r0
      98:	01000000 	mrseq	r0, (UNDEF: 0)
      9c:	00a8150f 	adceq	r1, r8, pc, lsl #10
      a0:	bb050000 	bllt	1400a8 <_bss_end+0x12e3f8>
      a4:	00000000 	andeq	r0, r0, r0
      a8:	00017407 	andeq	r7, r1, r7, lsl #8
      ac:	140a0100 	strne	r0, [sl], #-256	; 0xffffff00
      b0:	00000105 	andeq	r0, r0, r5, lsl #2
      b4:	0000bb05 	andeq	fp, r0, r5, lsl #22
      b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      bc:	00008a04 	andeq	r8, r0, r4, lsl #20
      c0:	05080900 	streq	r0, [r8, #-2304]	; 0xfffff700
      c4:	000001c5 	andeq	r0, r0, r5, asr #3
      c8:	0000780a 	andeq	r7, r0, sl, lsl #16
      cc:	00811000 	addeq	r1, r1, r0
      d0:	00002000 	andeq	r2, r0, r0
      d4:	e49c0100 	ldr	r0, [ip], #256	; 0x100
      d8:	0b000000 	bleq	e0 <CPSR_IRQ_INHIBIT+0x60>
      dc:	000000bb 	strheq	r0, [r0], -fp
      e0:	00749102 	rsbseq	r9, r4, r2, lsl #2
      e4:	0000960a 	andeq	r9, r0, sl, lsl #12
      e8:	0080e400 	addeq	lr, r0, r0, lsl #8
      ec:	00002c00 	andeq	r2, r0, r0, lsl #24
      f0:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
      f4:	0c000001 	stceq	0, cr0, [r0], {1}
      f8:	0f010067 	svceq	0x00010067
      fc:	0000bb32 	andeq	fp, r0, r2, lsr fp
     100:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     104:	05040d00 	streq	r0, [r4, #-3328]	; 0xfffff300
     108:	00746e69 	rsbseq	r6, r4, r9, ror #28
     10c:	0000a80e 	andeq	sl, r0, lr, lsl #16
     110:	0080ac00 	addeq	sl, r0, r0, lsl #24
     114:	00003800 	andeq	r3, r0, r0, lsl #16
     118:	0c9c0100 	ldfeqs	f0, [ip], {0}
     11c:	0a010067 	beq	402c0 <_bss_end+0x2e610>
     120:	0000bb31 	andeq	fp, r0, r1, lsr fp
     124:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     128:	09150000 	ldmdbeq	r5, {}	; <UNPREDICTABLE>
     12c:	00040000 	andeq	r0, r4, r0
     130:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     134:	00140104 	andseq	r0, r4, r4, lsl #2
     138:	5c040000 	stcpl	0, cr0, [r4], {-0}
     13c:	c5000006 	strgt	r0, [r0, #-6]
     140:	84000000 	strhi	r0, [r0], #-0
     144:	8c000081 	stchi	0, cr0, [r0], {129}	; 0x81
     148:	a9000008 	stmdbge	r0, {r3}
     14c:	02000000 	andeq	r0, r0, #0
     150:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
     154:	02020000 	andeq	r0, r2, #0
     158:	00059905 	andeq	r9, r5, r5, lsl #18
     15c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
     160:	00746e69 	rsbseq	r6, r4, r9, ror #28
     164:	6a080102 	bvs	200574 <_bss_end+0x1ee8c4>
     168:	02000005 	andeq	r0, r0, #5
     16c:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
     170:	e4040000 	str	r0, [r4], #-0
     174:	04000005 	streq	r0, [r0], #-5
     178:	00590709 	subseq	r0, r9, r9, lsl #14
     17c:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
     180:	02000000 	andeq	r0, r0, #0
     184:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
     188:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
     18c:	06000000 	streq	r0, [r0], -r0
     190:	00000059 	andeq	r0, r0, r9, asr r0
     194:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
     198:	0b050200 	bleq	1409a0 <_bss_end+0x12ecf0>
     19c:	000001e5 	andeq	r0, r0, r5, ror #3
     1a0:	00048708 	andeq	r8, r4, r8, lsl #14
     1a4:	1c070200 	sfmne	f0, 4, [r7], {-0}
     1a8:	00000060 	andeq	r0, r0, r0, rrx
     1ac:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
     1b0:	0005cc08 	andeq	ip, r5, r8, lsl #24
     1b4:	1d0a0200 	sfmne	f0, 4, [sl, #-0]
     1b8:	000001f1 	strdeq	r0, [r0], -r1
     1bc:	20000000 	andcs	r0, r0, r0
     1c0:	00045208 	andeq	r5, r4, r8, lsl #4
     1c4:	1d0d0200 	sfmne	f0, 4, [sp, #-0]
     1c8:	000001f1 	strdeq	r0, [r0], -r1
     1cc:	20200000 	eorcs	r0, r0, r0
     1d0:	00058a09 	andeq	r8, r5, r9, lsl #20
     1d4:	18100200 	ldmdane	r0, {r9}
     1d8:	00000054 	andeq	r0, r0, r4, asr r0
     1dc:	03f90a36 	mvnseq	r0, #221184	; 0x36000
     1e0:	04050000 	streq	r0, [r5], #-0
     1e4:	00000033 	andeq	r0, r0, r3, lsr r0
     1e8:	74101302 	ldrvc	r1, [r0], #-770	; 0xfffffcfe
     1ec:	0b000001 	bleq	1f8 <CPSR_IRQ_INHIBIT+0x178>
     1f0:	0000037c 	andeq	r0, r0, ip, ror r3
     1f4:	03840b00 	orreq	r0, r4, #0, 22
     1f8:	0b010000 	bleq	40200 <_bss_end+0x2e550>
     1fc:	0000038c 	andeq	r0, r0, ip, lsl #7
     200:	03940b02 	orrseq	r0, r4, #2048	; 0x800
     204:	0b030000 	bleq	c020c <_bss_end+0xae55c>
     208:	0000039c 	muleq	r0, ip, r3
     20c:	03a40b04 			; <UNDEFINED> instruction: 0x03a40b04
     210:	0b050000 	bleq	140218 <_bss_end+0x12e568>
     214:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     218:	02f70b07 	rscseq	r0, r7, #7168	; 0x1c00
     21c:	0b080000 	bleq	200224 <_bss_end+0x1ee574>
     220:	00000408 	andeq	r0, r0, r8, lsl #8
     224:	040f0b0a 	streq	r0, [pc], #-2826	; 22c <CPSR_IRQ_INHIBIT+0x1ac>
     228:	0b0b0000 	bleq	2c0230 <_bss_end+0x2ae580>
     22c:	0000031e 	andeq	r0, r0, lr, lsl r3
     230:	03250b0d 			; <UNDEFINED> instruction: 0x03250b0d
     234:	0b0e0000 	bleq	38023c <_bss_end+0x36e58c>
     238:	00000640 	andeq	r0, r0, r0, asr #12
     23c:	06470b10 			; <UNDEFINED> instruction: 0x06470b10
     240:	0b110000 	bleq	440248 <_bss_end+0x42e598>
     244:	00000479 	andeq	r0, r0, r9, ror r4
     248:	04800b13 	streq	r0, [r0], #2835	; 0xb13
     24c:	0b140000 	bleq	500254 <_bss_end+0x4ee5a4>
     250:	0000064e 	andeq	r0, r0, lr, asr #12
     254:	06550b16 			; <UNDEFINED> instruction: 0x06550b16
     258:	0b170000 	bleq	5c0260 <_bss_end+0x5ae5b0>
     25c:	0000055c 	andeq	r0, r0, ip, asr r5
     260:	05630b19 	strbeq	r0, [r3, #-2841]!	; 0xfffff4e7
     264:	0b1a0000 	bleq	68026c <_bss_end+0x66e5bc>
     268:	000002e2 	andeq	r0, r0, r2, ror #5
     26c:	02e90b1c 	rsceq	r0, r9, #28, 22	; 0x7000
     270:	0b1d0000 	bleq	740278 <_bss_end+0x72e5c8>
     274:	00000509 	andeq	r0, r0, r9, lsl #10
     278:	05110b1f 	ldreq	r0, [r1, #-2847]	; 0xfffff4e1
     27c:	0b200000 	bleq	800284 <_bss_end+0x7ee5d4>
     280:	000006dc 	ldrdeq	r0, [r0], -ip
     284:	06e40b22 	strbteq	r0, [r4], r2, lsr #22
     288:	0b230000 	bleq	8c0290 <_bss_end+0x8ae5e0>
     28c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
     290:	029c0b25 	addseq	r0, ip, #37888	; 0x9400
     294:	0b260000 	bleq	98029c <_bss_end+0x96e5ec>
     298:	000002a6 	andeq	r0, r0, r6, lsr #5
     29c:	73080027 	movwvc	r0, #32807	; 0x8027
     2a0:	02000003 	andeq	r0, r0, #3
     2a4:	01f11d42 	mvnseq	r1, r2, asr #26
     2a8:	50000000 	andpl	r0, r0, r0
     2ac:	4a082021 	bmi	208338 <_bss_end+0x1f6688>
     2b0:	02000003 	andeq	r0, r0, #3
     2b4:	01f11d71 	mvnseq	r1, r1, ror sp
     2b8:	b2000000 	andlt	r0, r0, #0
     2bc:	b6082000 	strlt	r2, [r8], -r0
     2c0:	02000002 	andeq	r0, r0, #2
     2c4:	01f11da4 	mvnseq	r1, r4, lsr #27
     2c8:	b4000000 	strlt	r0, [r0], #-0
     2cc:	64082000 	strvs	r2, [r8], #-0
     2d0:	02000003 	andeq	r0, r0, #3
     2d4:	01f11db3 	ldrheq	r1, [r1, #211]!	; 0xd3
     2d8:	40000000 	andmi	r0, r0, r0
     2dc:	31082010 	tstcc	r8, r0, lsl r0
     2e0:	02000003 	andeq	r0, r0, #3
     2e4:	01f11dbe 	ldrheq	r1, [r1, #222]!	; 0xde
     2e8:	50000000 	andpl	r0, r0, r0
     2ec:	ef082020 	svc	0x00082020
     2f0:	02000003 	andeq	r0, r0, #3
     2f4:	01f11dbf 	ldrheq	r1, [r1, #223]!	; 0xdf
     2f8:	40000000 	andmi	r0, r0, r0
     2fc:	5c082080 	stcpl	0, cr2, [r8], {128}	; 0x80
     300:	02000004 	andeq	r0, r0, #4
     304:	01f11dc0 	mvnseq	r1, r0, asr #27
     308:	50000000 	andpl	r0, r0, r0
     30c:	0c002080 	stceq	0, cr2, [r0], {128}	; 0x80
     310:	00000076 	andeq	r0, r0, r6, ror r0
     314:	91070402 	tstls	r7, r2, lsl #8
     318:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
     31c:	000001ea 	andeq	r0, r0, sl, ror #3
     320:	0000860c 	andeq	r8, r0, ip, lsl #12
     324:	00960c00 	addseq	r0, r6, r0, lsl #24
     328:	a60c0000 	strge	r0, [ip], -r0
     32c:	0c000000 	stceq	0, cr0, [r0], {-0}
     330:	00000174 	andeq	r0, r0, r4, ror r1
     334:	0001840c 	andeq	r8, r1, ip, lsl #8
     338:	01940c00 	orrseq	r0, r4, r0, lsl #24
     33c:	a40c0000 	strge	r0, [ip], #-0
     340:	0c000001 	stceq	0, cr0, [r0], {1}
     344:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
     348:	0001c40c 	andeq	ip, r1, ip, lsl #8
     34c:	01d40c00 	bicseq	r0, r4, r0, lsl #24
     350:	4d0a0000 	stcmi	0, cr0, [sl, #-0]
     354:	07000005 	streq	r0, [r0, -r5]
     358:	00005904 	andeq	r5, r0, r4, lsl #18
     35c:	0c070300 	stceq	3, cr0, [r7], {-0}
     360:	00000271 	andeq	r0, r0, r1, ror r2
     364:	0002dc0b 	andeq	sp, r2, fp, lsl #24
     368:	1d0b0000 	stcne	0, cr0, [fp, #-0]
     36c:	01000005 	tsteq	r0, r5
     370:	0002150b 	andeq	r1, r2, fp, lsl #10
     374:	0f0b0200 	svceq	0x000b0200
     378:	03000002 	movweq	r0, #2
     37c:	0001f70b 	andeq	pc, r1, fp, lsl #14
     380:	fd0b0400 	stc2	4, cr0, [fp, #-0]
     384:	05000001 	streq	r0, [r0, #-1]
     388:	0002030b 	andeq	r0, r2, fp, lsl #6
     38c:	090b0600 	stmdbeq	fp, {r9, sl}
     390:	07000002 	streq	r0, [r0, -r2]
     394:	0007280b 	andeq	r2, r7, fp, lsl #16
     398:	0d000800 	stceq	8, cr0, [r0, #-0]
     39c:	0000071a 	andeq	r0, r0, sl, lsl r7
     3a0:	071b0314 			; <UNDEFINED> instruction: 0x071b0314
     3a4:	0000046c 	andeq	r0, r0, ip, ror #8
     3a8:	0004020e 	andeq	r0, r4, lr, lsl #4
     3ac:	221f0300 	andscs	r0, pc, #0, 6
     3b0:	00000477 	andeq	r0, r0, r7, ror r4
     3b4:	02c10e00 	sbceq	r0, r1, #0, 28
     3b8:	22030000 	andcs	r0, r3, #0
     3bc:	00047c0e 	andeq	r7, r4, lr, lsl #24
     3c0:	f10e0400 			; <UNDEFINED> instruction: 0xf10e0400
     3c4:	03000004 	movweq	r0, #4
     3c8:	047c0e24 	ldrbteq	r0, [ip], #-3620	; 0xfffff1dc
     3cc:	0f0c0000 	svceq	0x000c0000
     3d0:	0000043e 	andeq	r0, r0, lr, lsr r4
     3d4:	ac0a2803 	stcge	8, cr2, [sl], {3}
     3d8:	8c000003 	stchi	0, cr0, [r0], {3}
     3dc:	02000004 	andeq	r0, r0, #4
     3e0:	000002be 			; <UNDEFINED> instruction: 0x000002be
     3e4:	000002d3 	ldrdeq	r0, [r0], -r3
     3e8:	00049310 	andeq	r9, r4, r0, lsl r3
     3ec:	00481100 	subeq	r1, r8, r0, lsl #2
     3f0:	9e110000 	cdpls	0, 1, cr0, cr1, cr0, {0}
     3f4:	11000004 	tstne	r0, r4
     3f8:	0000049e 	muleq	r0, lr, r4
     3fc:	04de0f00 	ldrbeq	r0, [lr], #3840	; 0xf00
     400:	2a030000 	bcs	c0408 <_bss_end+0xae758>
     404:	0004af0a 	andeq	sl, r4, sl, lsl #30
     408:	00048c00 	andeq	r8, r4, r0, lsl #24
     40c:	02ec0200 	rsceq	r0, ip, #0, 4
     410:	03010000 	movweq	r0, #4096	; 0x1000
     414:	93100000 	tstls	r0, #0
     418:	11000004 	tstne	r0, r4
     41c:	00000048 	andeq	r0, r0, r8, asr #32
     420:	00049e11 	andeq	r9, r4, r1, lsl lr
     424:	049e1100 	ldreq	r1, [lr], #256	; 0x100
     428:	0f000000 	svceq	0x00000000
     42c:	0000062d 	andeq	r0, r0, sp, lsr #12
     430:	ad0a2c03 	stcge	12, cr2, [sl, #-12]
     434:	8c000006 	stchi	0, cr0, [r0], {6}
     438:	02000004 	andeq	r0, r0, #4
     43c:	0000031a 	andeq	r0, r0, sl, lsl r3
     440:	0000032f 	andeq	r0, r0, pc, lsr #6
     444:	00049310 	andeq	r9, r4, r0, lsl r3
     448:	00481100 	subeq	r1, r8, r0, lsl #2
     44c:	9e110000 	cdpls	0, 1, cr0, cr1, cr0, {0}
     450:	11000004 	tstne	r0, r4
     454:	0000049e 	muleq	r0, lr, r4
     458:	04660f00 	strbteq	r0, [r6], #-3840	; 0xfffff100
     45c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     460:	0005fe0a 	andeq	pc, r5, sl, lsl #28
     464:	00048c00 	andeq	r8, r4, r0, lsl #24
     468:	03480200 	movteq	r0, #33280	; 0x8200
     46c:	035d0000 	cmpeq	sp, #0
     470:	93100000 	tstls	r0, #0
     474:	11000004 	tstne	r0, r4
     478:	00000048 	andeq	r0, r0, r8, asr #32
     47c:	00049e11 	andeq	r9, r4, r1, lsl lr
     480:	049e1100 	ldreq	r1, [lr], #256	; 0x100
     484:	0f000000 	svceq	0x00000000
     488:	0000071a 	andeq	r0, r0, sl, lsl r7
     48c:	b5053103 	strlt	r3, [r5, #-259]	; 0xfffffefd
     490:	a4000005 	strge	r0, [r0], #-5
     494:	01000004 	tsteq	r0, r4
     498:	00000376 	andeq	r0, r0, r6, ror r3
     49c:	00000381 	andeq	r0, r0, r1, lsl #7
     4a0:	0004a410 	andeq	sl, r4, r0, lsl r4
     4a4:	00591100 	subseq	r1, r9, r0, lsl #2
     4a8:	12000000 	andne	r0, r0, #0
     4ac:	0000028a 	andeq	r0, r0, sl, lsl #5
     4b0:	240a3403 	strcs	r3, [sl], #-1027	; 0xfffffbfd
     4b4:	01000005 	tsteq	r0, r5
     4b8:	00000396 	muleq	r0, r6, r3
     4bc:	000003a6 	andeq	r0, r0, r6, lsr #7
     4c0:	0004a410 	andeq	sl, r4, r0, lsl r4
     4c4:	00481100 	subeq	r1, r8, r0, lsl #2
     4c8:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
     4cc:	00000002 	andeq	r0, r0, r2
     4d0:	0005780f 	andeq	r7, r5, pc, lsl #16
     4d4:	14360300 	ldrtne	r0, [r6], #-768	; 0xfffffd00
     4d8:	000006ec 	andeq	r0, r0, ip, ror #13
     4dc:	00000228 	andeq	r0, r0, r8, lsr #4
     4e0:	0003bf01 	andeq	fp, r3, r1, lsl #30
     4e4:	0003ca00 	andeq	ip, r3, r0, lsl #20
     4e8:	04931000 	ldreq	r1, [r3], #0
     4ec:	48110000 	ldmdami	r1, {}	; <UNPREDICTABLE>
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00051912 	andeq	r1, r5, r2, lsl r9
     4f8:	0a390300 	beq	e41100 <_bss_end+0xe2f450>
     4fc:	00000416 	andeq	r0, r0, r6, lsl r4
     500:	0003df01 	andeq	sp, r3, r1, lsl #30
     504:	0003ef00 	andeq	lr, r3, r0, lsl #30
     508:	04a41000 	strteq	r1, [r4], #0
     50c:	48110000 	ldmdami	r1, {}	; <UNPREDICTABLE>
     510:	11000000 	mrsne	r0, (UNDEF: 0)
     514:	0000048c 	andeq	r0, r0, ip, lsl #9
     518:	02d80f00 	sbcseq	r0, r8, #0, 30
     51c:	3c030000 	stccc	0, cr0, [r3], {-0}
     520:	00026b0a 	andeq	r6, r2, sl, lsl #22
     524:	00048c00 	andeq	r8, r4, r0, lsl #24
     528:	04080100 	streq	r0, [r8], #-256	; 0xffffff00
     52c:	04130000 	ldreq	r0, [r3], #-0
     530:	a4100000 	ldrge	r0, [r0], #-0
     534:	11000004 	tstne	r0, r4
     538:	00000048 	andeq	r0, r0, r8, asr #32
     53c:	05ed0f00 	strbeq	r0, [sp, #3840]!	; 0xf00
     540:	3f030000 	svccc	0x00030000
     544:	0001d30a 	andeq	sp, r1, sl, lsl #6
     548:	00048c00 	andeq	r8, r4, r0, lsl #24
     54c:	042c0100 	strteq	r0, [ip], #-256	; 0xffffff00
     550:	04410000 	strbeq	r0, [r1], #-0
     554:	a4100000 	ldrge	r0, [r0], #-0
     558:	11000004 	tstne	r0, r4
     55c:	00000048 	andeq	r0, r0, r8, asr #32
     560:	00048c11 	andeq	r8, r4, r1, lsl ip
     564:	048c1100 	streq	r1, [ip], #256	; 0x100
     568:	13000000 	movwne	r0, #0
     56c:	000005a3 	andeq	r0, r0, r3, lsr #11
     570:	fe0a4103 	cdp2	1, 0, cr4, cr10, cr3, {0}
     574:	8c000002 	stchi	0, cr0, [r0], {2}
     578:	01000004 	tsteq	r0, r4
     57c:	00000456 	andeq	r0, r0, r6, asr r4
     580:	0004a410 	andeq	sl, r4, r0, lsl r4
     584:	00481100 	subeq	r1, r8, r0, lsl #2
     588:	8c110000 	ldchi	0, cr0, [r1], {-0}
     58c:	11000004 	tstne	r0, r4
     590:	0000048c 	andeq	r0, r0, ip, lsl #9
     594:	71050000 	mrsvc	r0, (UNDEF: 5)
     598:	14000002 	strne	r0, [r0], #-2
     59c:	00006504 	andeq	r6, r0, r4, lsl #10
     5a0:	04710500 	ldrbteq	r0, [r1], #-1280	; 0xfffffb00
     5a4:	48150000 	ldmdami	r5, {}	; <UNPREDICTABLE>
     5a8:	8c000000 	stchi	0, cr0, [r0], {-0}
     5ac:	16000004 	strne	r0, [r0], -r4
     5b0:	00000059 	andeq	r0, r0, r9, asr r0
     5b4:	01020001 	tsteq	r2, r1
     5b8:	00454d02 	subeq	r4, r5, r2, lsl #26
     5bc:	6c041400 	cfstrsvs	mvf1, [r4], {-0}
     5c0:	05000004 	streq	r0, [r0, #-4]
     5c4:	00000493 	muleq	r0, r3, r4
     5c8:	00480417 	subeq	r0, r8, r7, lsl r4
     5cc:	04140000 	ldreq	r0, [r4], #-0
     5d0:	00000271 	andeq	r0, r0, r1, ror r2
     5d4:	0004a405 	andeq	sl, r4, r5, lsl #8
     5d8:	04a91800 	strteq	r1, [r9], #2048	; 0x800
     5dc:	45030000 	strmi	r0, [r3, #-0]
     5e0:	00027116 	andeq	r7, r2, r6, lsl r1
     5e4:	04af1900 	strteq	r1, [pc], #2304	; 5ec <CPSR_IRQ_INHIBIT+0x56c>
     5e8:	06010000 	streq	r0, [r1], -r0
     5ec:	5c03050f 	cfstr32pl	mvfx0, [r3], {15}
     5f0:	1a00010b 	bne	a24 <CPSR_IRQ_INHIBIT+0x9a4>
     5f4:	0000049a 	muleq	r0, sl, r4
     5f8:	000089f4 	strdeq	r8, [r0], -r4
     5fc:	0000001c 	andeq	r0, r0, ip, lsl r0
     600:	411b9c01 	tstmi	fp, r1, lsl #24
     604:	a0000002 	andge	r0, r0, r2
     608:	54000089 	strpl	r0, [r0], #-137	; 0xffffff77
     60c:	01000000 	mrseq	r0, (UNDEF: 0)
     610:	00050a9c 	muleq	r5, ip, sl
     614:	033b1c00 	teqeq	fp, #0, 24
     618:	97010000 	strls	r0, [r1, -r0]
     61c:	00003301 	andeq	r3, r0, r1, lsl #6
     620:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     624:	0007341c 	andeq	r3, r7, ip, lsl r4
     628:	01970100 	orrseq	r0, r7, r0, lsl #2
     62c:	00000033 	andeq	r0, r0, r3, lsr r0
     630:	00709102 	rsbseq	r9, r0, r2, lsl #2
     634:	0004411d 	andeq	r4, r4, sp, lsl r1
     638:	06850100 	streq	r0, [r5], r0, lsl #2
     63c:	00000524 	andeq	r0, r0, r4, lsr #10
     640:	00008800 	andeq	r8, r0, r0, lsl #16
     644:	000001a0 	andeq	r0, r0, r0, lsr #3
     648:	057c9c01 	ldrbeq	r9, [ip, #-3073]!	; 0xfffff3ff
     64c:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
     650:	aa000003 	bge	664 <CPSR_IRQ_INHIBIT+0x5e4>
     654:	02000004 	andeq	r0, r0, #4
     658:	701f5c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     65c:	01006e69 	tsteq	r0, r9, ror #28
     660:	00482785 	subeq	r2, r8, r5, lsl #15
     664:	91020000 	mrsls	r0, (UNDEF: 2)
     668:	07151c58 			; <UNDEFINED> instruction: 0x07151c58
     66c:	85010000 	strhi	r0, [r1, #-0]
     670:	00048c31 	andeq	r8, r4, r1, lsr ip
     674:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
     678:	0004381c 	andeq	r3, r4, ip, lsl r8
     67c:	3c850100 	stfccs	f0, [r5], {0}
     680:	0000048c 	andeq	r0, r0, ip, lsl #9
     684:	20569102 	subscs	r9, r6, r2, lsl #2
     688:	000005ac 	andeq	r0, r0, ip, lsr #11
     68c:	480e8701 	stmdami	lr, {r0, r8, r9, sl, pc}
     690:	02000000 	andeq	r0, r0, #0
     694:	dc206491 	cfstrsle	mvf6, [r0], #-580	; 0xfffffdbc
     698:	01000005 	tsteq	r0, r5
     69c:	00480e88 	subeq	r0, r8, r8, lsl #29
     6a0:	91020000 	mrsls	r0, (UNDEF: 2)
     6a4:	131d0060 	tstne	sp, #96	; 0x60
     6a8:	01000004 	tsteq	r0, r4
     6ac:	0596066f 	ldreq	r0, [r6, #1647]	; 0x66f
     6b0:	86680000 	strbthi	r0, [r8], -r0
     6b4:	01980000 	orrseq	r0, r8, r0
     6b8:	9c010000 	stcls	0, cr0, [r1], {-0}
     6bc:	000005ee 	andeq	r0, r0, lr, ror #11
     6c0:	00032c1e 	andeq	r2, r3, lr, lsl ip
     6c4:	0004aa00 	andeq	sl, r4, r0, lsl #20
     6c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
     6cc:	6e69701f 	mcrvs	0, 3, r7, cr9, cr15, {0}
     6d0:	2a6f0100 	bcs	1bc0ad8 <_bss_end+0x1baee28>
     6d4:	00000048 	andeq	r0, r0, r8, asr #32
     6d8:	1c589102 	ldfnep	f1, [r8], {2}
     6dc:	00000715 	andeq	r0, r0, r5, lsl r7
     6e0:	8c346f01 	ldchi	15, cr6, [r4], #-4
     6e4:	02000004 	andeq	r0, r0, #4
     6e8:	381c5791 	ldmdacc	ip, {r0, r4, r7, r8, r9, sl, ip, lr}
     6ec:	01000004 	tsteq	r0, r4
     6f0:	048c3f6f 	streq	r3, [ip], #3951	; 0xf6f
     6f4:	91020000 	mrsls	r0, (UNDEF: 2)
     6f8:	05ac2056 	streq	r2, [ip, #86]!	; 0x56
     6fc:	73010000 	movwvc	r0, #4096	; 0x1000
     700:	0000480e 	andeq	r4, r0, lr, lsl #16
     704:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     708:	0005dc20 	andeq	sp, r5, r0, lsr #24
     70c:	0e740100 	rpweqs	f0, f4, f0
     710:	00000048 	andeq	r0, r0, r8, asr #32
     714:	00609102 	rsbeq	r9, r0, r2, lsl #2
     718:	0003ef21 	andeq	lr, r3, r1, lsr #30
     71c:	06660100 	strbteq	r0, [r6], -r0, lsl #2
     720:	00000608 	andeq	r0, r0, r8, lsl #12
     724:	000085e4 	andeq	r8, r0, r4, ror #11
     728:	00000084 	andeq	r0, r0, r4, lsl #1
     72c:	06429c01 	strbeq	r9, [r2], -r1, lsl #24
     730:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
     734:	aa000003 	bge	748 <CPSR_IRQ_INHIBIT+0x6c8>
     738:	02000004 	andeq	r0, r0, #4
     73c:	701f6c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     740:	01006e69 	tsteq	r0, r9, ror #28
     744:	00482866 	subeq	r2, r8, r6, ror #16
     748:	91020000 	mrsls	r0, (UNDEF: 2)
     74c:	65722268 	ldrbvs	r2, [r2, #-616]!	; 0xfffffd98
     750:	68010067 	stmdavs	r1, {r0, r1, r2, r5, r6}
     754:	0000480e 	andeq	r4, r0, lr, lsl #16
     758:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     75c:	74696222 	strbtvc	r6, [r9], #-546	; 0xfffffdde
     760:	13680100 	cmnne	r8, #0, 2
     764:	00000048 	andeq	r0, r0, r8, asr #32
     768:	00709102 	rsbseq	r9, r0, r2, lsl #2
     76c:	0003ca21 	andeq	ip, r3, r1, lsr #20
     770:	065d0100 	ldrbeq	r0, [sp], -r0, lsl #2
     774:	0000065c 	andeq	r0, r0, ip, asr r6
     778:	0000850c 	andeq	r8, r0, ip, lsl #10
     77c:	000000d8 	ldrdeq	r0, [r0], -r8
     780:	06a59c01 	strteq	r9, [r5], r1, lsl #24
     784:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
     788:	aa000003 	bge	79c <CPSR_IRQ_INHIBIT+0x71c>
     78c:	02000004 	andeq	r0, r0, #4
     790:	701f6c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     794:	01006e69 	tsteq	r0, r9, ror #28
     798:	0048295d 	subeq	r2, r8, sp, asr r9
     79c:	91020000 	mrsls	r0, (UNDEF: 2)
     7a0:	65731f68 	ldrbvs	r1, [r3, #-3944]!	; 0xfffff098
     7a4:	5d010074 	stcpl	0, cr0, [r1, #-464]	; 0xfffffe30
     7a8:	00048c33 	andeq	r8, r4, r3, lsr ip
     7ac:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
     7b0:	67657222 	strbvs	r7, [r5, -r2, lsr #4]!
     7b4:	0e5f0100 	rdfeqe	f0, f7, f0
     7b8:	00000048 	andeq	r0, r0, r8, asr #32
     7bc:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
     7c0:	00746962 	rsbseq	r6, r4, r2, ror #18
     7c4:	48135f01 	ldmdami	r3, {r0, r8, r9, sl, fp, ip, lr}
     7c8:	02000000 	andeq	r0, r0, #0
     7cc:	21007091 	swpcs	r7, r1, [r0]
     7d0:	000003a6 	andeq	r0, r0, r6, lsr #7
     7d4:	bf105401 	svclt	0x00105401
     7d8:	98000006 	stmdals	r0, {r1, r2}
     7dc:	74000084 	strvc	r0, [r0], #-132	; 0xffffff7c
     7e0:	01000000 	mrseq	r0, (UNDEF: 0)
     7e4:	0006f99c 	muleq	r6, ip, r9
     7e8:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     7ec:	04990000 	ldreq	r0, [r9], #0
     7f0:	91020000 	mrsls	r0, (UNDEF: 2)
     7f4:	69701f6c 	ldmdbvs	r0!, {r2, r3, r5, r6, r8, r9, sl, fp, ip}^
     7f8:	5401006e 	strpl	r0, [r1], #-110	; 0xffffff92
     7fc:	0000483a 	andeq	r4, r0, sl, lsr r8
     800:	68910200 	ldmvs	r1, {r9}
     804:	67657222 	strbvs	r7, [r5, -r2, lsr #4]!
     808:	0e560100 	rdfeqs	f0, f6, f0
     80c:	00000048 	andeq	r0, r0, r8, asr #32
     810:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
     814:	00746962 	rsbseq	r6, r4, r2, ror #18
     818:	48135601 	ldmdami	r3, {r0, r9, sl, ip, lr}
     81c:	02000000 	andeq	r0, r0, #0
     820:	21007091 	swpcs	r7, r1, [r0]
     824:	00000381 	andeq	r0, r0, r1, lsl #7
     828:	13064501 	movwne	r4, #25857	; 0x6501
     82c:	d0000007 	andle	r0, r0, r7
     830:	c8000083 	stmdagt	r0, {r0, r1, r7}
     834:	01000000 	mrseq	r0, (UNDEF: 0)
     838:	0007799c 	muleq	r7, ip, r9
     83c:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     840:	04aa0000 	strteq	r0, [sl], #0
     844:	91020000 	mrsls	r0, (UNDEF: 2)
     848:	69701f64 	ldmdbvs	r0!, {r2, r5, r6, r8, r9, sl, fp, ip}^
     84c:	4501006e 	strmi	r0, [r1, #-110]	; 0xffffff92
     850:	00004830 	andeq	r4, r0, r0, lsr r8
     854:	60910200 	addsvs	r0, r1, r0, lsl #4
     858:	0005f91c 	andeq	pc, r5, ip, lsl r9	; <UNPREDICTABLE>
     85c:	44450100 	strbmi	r0, [r5], #-256	; 0xffffff00
     860:	00000228 	andeq	r0, r0, r8, lsr #4
     864:	225c9102 	subscs	r9, ip, #-2147483648	; 0x80000000
     868:	00676572 	rsbeq	r6, r7, r2, ror r5
     86c:	480e4701 	stmdami	lr, {r0, r8, r9, sl, lr}
     870:	02000000 	andeq	r0, r0, #0
     874:	62226c91 	eorvs	r6, r2, #37120	; 0x9100
     878:	01007469 	tsteq	r0, r9, ror #8
     87c:	00481347 	subeq	r1, r8, r7, asr #6
     880:	91020000 	mrsls	r0, (UNDEF: 2)
     884:	036e2068 	cmneq	lr, #104	; 0x68
     888:	4b010000 	blmi	40890 <_bss_end+0x2ebe0>
     88c:	00005912 	andeq	r5, r0, r2, lsl r9
     890:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     894:	00647222 	rsbeq	r7, r4, r2, lsr #4
     898:	59124d01 	ldmdbpl	r2, {r0, r8, sl, fp, lr}
     89c:	02000000 	andeq	r0, r0, #0
     8a0:	1d007091 	stcne	0, cr7, [r0, #-580]	; 0xfffffdbc
     8a4:	0000032f 	andeq	r0, r0, pc, lsr #6
     8a8:	93063a01 	movwls	r3, #27137	; 0x6a01
     8ac:	5c000007 	stcpl	0, cr0, [r0], {7}
     8b0:	74000083 	strvc	r0, [r0], #-131	; 0xffffff7d
     8b4:	01000000 	mrseq	r0, (UNDEF: 0)
     8b8:	0007cd9c 	muleq	r7, ip, sp
     8bc:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     8c0:	04990000 	ldreq	r0, [r9], #0
     8c4:	91020000 	mrsls	r0, (UNDEF: 2)
     8c8:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     8cc:	3a01006e 	bcc	40a8c <_bss_end+0x2eddc>
     8d0:	00004831 	andeq	r4, r0, r1, lsr r8
     8d4:	70910200 	addsvc	r0, r1, r0, lsl #4
     8d8:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     8dc:	403a0100 	eorsmi	r0, sl, r0, lsl #2
     8e0:	0000049e 	muleq	r0, lr, r4
     8e4:	1c6c9102 	stfnep	f1, [ip], #-8
     8e8:	000005dc 	ldrdeq	r0, [r0], -ip
     8ec:	9e4f3a01 	vmlals.f32	s7, s30, s2
     8f0:	02000004 	andeq	r0, r0, #4
     8f4:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     8f8:	00000301 	andeq	r0, r0, r1, lsl #6
     8fc:	e7062f01 	str	r2, [r6, -r1, lsl #30]
     900:	e8000007 	stmda	r0, {r0, r1, r2}
     904:	74000082 	strvc	r0, [r0], #-130	; 0xffffff7e
     908:	01000000 	mrseq	r0, (UNDEF: 0)
     90c:	0008219c 	muleq	r8, ip, r1
     910:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     914:	04990000 	ldreq	r0, [r9], #0
     918:	91020000 	mrsls	r0, (UNDEF: 2)
     91c:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     920:	2f01006e 	svccs	0x0001006e
     924:	00004831 	andeq	r4, r0, r1, lsr r8
     928:	70910200 	addsvc	r0, r1, r0, lsl #4
     92c:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     930:	402f0100 	eormi	r0, pc, r0, lsl #2
     934:	0000049e 	muleq	r0, lr, r4
     938:	1c6c9102 	stfnep	f1, [ip], #-8
     93c:	000005dc 	ldrdeq	r0, [r0], -ip
     940:	9e4f2f01 	cdpls	15, 4, cr2, cr15, cr1, {0}
     944:	02000004 	andeq	r0, r0, #4
     948:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     94c:	000002d3 	ldrdeq	r0, [r0], -r3
     950:	3b062401 	blcc	18995c <_bss_end+0x177cac>
     954:	74000008 	strvc	r0, [r0], #-8
     958:	74000082 	strvc	r0, [r0], #-130	; 0xffffff7e
     95c:	01000000 	mrseq	r0, (UNDEF: 0)
     960:	0008759c 	muleq	r8, ip, r5
     964:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     968:	04990000 	ldreq	r0, [r9], #0
     96c:	91020000 	mrsls	r0, (UNDEF: 2)
     970:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     974:	2401006e 	strcs	r0, [r1], #-110	; 0xffffff92
     978:	00004831 	andeq	r4, r0, r1, lsr r8
     97c:	70910200 	addsvc	r0, r1, r0, lsl #4
     980:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     984:	40240100 	eormi	r0, r4, r0, lsl #2
     988:	0000049e 	muleq	r0, lr, r4
     98c:	1c6c9102 	stfnep	f1, [ip], #-8
     990:	000005dc 	ldrdeq	r0, [r0], -ip
     994:	9e4f2401 	cdpls	4, 4, cr2, cr15, cr1, {0}
     998:	02000004 	andeq	r0, r0, #4
     99c:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     9a0:	000002a5 	andeq	r0, r0, r5, lsr #5
     9a4:	8f060f01 	svchi	0x00060f01
     9a8:	dc000008 	stcle	0, cr0, [r0], {8}
     9ac:	98000081 	stmdals	r0, {r0, r7}
     9b0:	01000000 	mrseq	r0, (UNDEF: 0)
     9b4:	0008c99c 	muleq	r8, ip, r9
     9b8:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     9bc:	04990000 	ldreq	r0, [r9], #0
     9c0:	91020000 	mrsls	r0, (UNDEF: 2)
     9c4:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     9c8:	0f01006e 	svceq	0x0001006e
     9cc:	00004832 	andeq	r4, r0, r2, lsr r8
     9d0:	70910200 	addsvc	r0, r1, r0, lsl #4
     9d4:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     9d8:	410f0100 	mrsmi	r0, (UNDEF: 31)
     9dc:	0000049e 	muleq	r0, lr, r4
     9e0:	1c6c9102 	stfnep	f1, [ip], #-8
     9e4:	000005dc 	ldrdeq	r0, [r0], -ip
     9e8:	9e500f01 	cdpls	15, 5, cr0, cr0, cr1, {0}
     9ec:	02000004 	andeq	r0, r0, #4
     9f0:	23006891 	movwcs	r6, #2193	; 0x891
     9f4:	0000035d 	andeq	r0, r0, sp, asr r3
     9f8:	da010801 	ble	42a04 <_bss_end+0x30d54>
     9fc:	00000008 	andeq	r0, r0, r8
     a00:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a04:	00032c24 	andeq	r2, r3, r4, lsr #24
     a08:	0004aa00 	andeq	sl, r4, r0, lsl #20
     a0c:	021b2500 	andseq	r2, fp, #0, 10
     a10:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     a14:	0000592b 	andeq	r5, r0, fp, lsr #18
     a18:	c9260000 	stmdbgt	r6!, {}	; <UNPREDICTABLE>
     a1c:	2a000008 	bcs	a44 <CPSR_IRQ_INHIBIT+0x9c4>
     a20:	07000002 	streq	r0, [r0, -r2]
     a24:	84000009 	strhi	r0, [r0], #-9
     a28:	58000081 	stmdapl	r0, {r0, r7}
     a2c:	01000000 	mrseq	r0, (UNDEF: 0)
     a30:	08da279c 	ldmeq	sl, {r2, r3, r4, r7, r8, r9, sl, sp}^
     a34:	91020000 	mrsls	r0, (UNDEF: 2)
     a38:	08e32774 	stmiaeq	r3!, {r2, r4, r5, r6, r8, r9, sl, sp}^
     a3c:	91020000 	mrsls	r0, (UNDEF: 2)
     a40:	72000070 	andvc	r0, r0, #112	; 0x70
     a44:	0400000a 	streq	r0, [r0], #-10
     a48:	00033100 	andeq	r3, r3, r0, lsl #2
     a4c:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
     a50:	04000000 	streq	r0, [r0], #-0
     a54:	000009bc 			; <UNDEFINED> instruction: 0x000009bc
     a58:	000000c5 	andeq	r0, r0, r5, asr #1
	...
     a64:	0000047a 	andeq	r0, r0, sl, ror r4
     a68:	73080102 	movwvc	r0, #33026	; 0x8102
     a6c:	03000005 	movweq	r0, #5
     a70:	00000025 	andeq	r0, r0, r5, lsr #32
     a74:	99050202 	stmdbls	r5, {r1, r9}
     a78:	04000005 	streq	r0, [r0], #-5
     a7c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     a80:	38050074 	stmdacc	r5, {r2, r4, r5, r6}
     a84:	06000000 	streq	r0, [r0], -r0
     a88:	00000982 	andeq	r0, r0, r2, lsl #19
     a8c:	50070703 	andpl	r0, r7, r3, lsl #14
     a90:	02000000 	andeq	r0, r0, #0
     a94:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
     a98:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
     a9c:	03000007 	movweq	r0, #7
     aa0:	00630708 	rsbeq	r0, r3, r8, lsl #14
     aa4:	02020000 	andeq	r0, r2, #0
     aa8:	0003dc07 	andeq	sp, r3, r7, lsl #24
     aac:	05e40600 	strbeq	r0, [r4, #1536]!	; 0x600
     ab0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
     ab4:	00008007 	andeq	r8, r0, r7
     ab8:	006a0300 	rsbeq	r0, sl, r0, lsl #6
     abc:	6a050000 	bvs	140ac4 <_bss_end+0x12ee14>
     ac0:	02000000 	andeq	r0, r0, #0
     ac4:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
     ac8:	80030000 	andhi	r0, r3, r0
     acc:	05000000 	streq	r0, [r0, #-0]
     ad0:	00000080 	andeq	r0, r0, r0, lsl #1
     ad4:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
     ad8:	0b050400 	bleq	141ae0 <_bss_end+0x12fe30>
     adc:	0000018a 	andeq	r0, r0, sl, lsl #3
     ae0:	00048708 	andeq	r8, r4, r8, lsl #14
     ae4:	1c070400 	cfstrsne	mvf0, [r7], {-0}
     ae8:	00000087 	andeq	r0, r0, r7, lsl #1
     aec:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
     af0:	0005cc08 	andeq	ip, r5, r8, lsl #24
     af4:	1d0a0400 	cfstrsne	mvf0, [sl, #-0]
     af8:	00000196 	muleq	r0, r6, r1
     afc:	20000000 	andcs	r0, r0, r0
     b00:	00045208 	andeq	r5, r4, r8, lsl #4
     b04:	1d0d0400 	cfstrsne	mvf0, [sp, #-0]
     b08:	00000196 	muleq	r0, r6, r1
     b0c:	20200000 	eorcs	r0, r0, r0
     b10:	00058a09 	andeq	r8, r5, r9, lsl #20
     b14:	18100400 	ldmdane	r0, {sl}
     b18:	00000076 	andeq	r0, r0, r6, ror r0
     b1c:	03730836 	cmneq	r3, #3538944	; 0x360000
     b20:	42040000 	andmi	r0, r4, #0
     b24:	0001961d 	andeq	r9, r1, sp, lsl r6
     b28:	21500000 	cmpcs	r0, r0
     b2c:	034a0820 	movteq	r0, #43040	; 0xa820
     b30:	71040000 	mrsvc	r0, (UNDEF: 4)
     b34:	0001961d 	andeq	r9, r1, sp, lsl r6
     b38:	00b20000 	adcseq	r0, r2, r0
     b3c:	02b60820 	adcseq	r0, r6, #32, 16	; 0x200000
     b40:	a4040000 	strge	r0, [r4], #-0
     b44:	0001961d 	andeq	r9, r1, sp, lsl r6
     b48:	00b40000 	adcseq	r0, r4, r0
     b4c:	03640820 	cmneq	r4, #32, 16	; 0x200000
     b50:	b3040000 	movwlt	r0, #16384	; 0x4000
     b54:	0001961d 	andeq	r9, r1, sp, lsl r6
     b58:	10400000 	subne	r0, r0, r0
     b5c:	03310820 	teqeq	r1, #32, 16	; 0x200000
     b60:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
     b64:	0001961d 	andeq	r9, r1, sp, lsl r6
     b68:	20500000 	subscs	r0, r0, r0
     b6c:	03ef0820 	mvneq	r0, #32, 16	; 0x200000
     b70:	bf040000 	svclt	0x00040000
     b74:	0001961d 	andeq	r9, r1, sp, lsl r6
     b78:	80400000 	subhi	r0, r0, r0
     b7c:	045c0820 	ldrbeq	r0, [ip], #-2080	; 0xfffff7e0
     b80:	c0040000 	andgt	r0, r4, r0
     b84:	0001961d 	andeq	r9, r1, sp, lsl r6
     b88:	80500000 	subshi	r0, r0, r0
     b8c:	07a10a20 	streq	r0, [r1, r0, lsr #20]!
     b90:	04050000 	streq	r0, [r5], #-0
     b94:	00000038 	andeq	r0, r0, r8, lsr r0
     b98:	0b10c204 	bleq	4313b0 <_bss_end+0x41f700>
     b9c:	0000358a 	andeq	r3, r0, sl, lsl #11
     ba0:	0a0c0b00 	beq	3037a8 <_bss_end+0x2f1af8>
     ba4:	0b010000 	bleq	40bac <_bss_end+0x2eefc>
     ba8:	0000094a 	andeq	r0, r0, sl, asr #18
     bac:	12880b02 	addne	r0, r8, #2048	; 0x800
     bb0:	0b030000 	bleq	c0bb8 <_bss_end+0xaef08>
     bb4:	00000868 	andeq	r0, r0, r8, ror #16
     bb8:	08030b04 	stmdaeq	r3, {r2, r8, r9, fp}
     bbc:	0b050000 	bleq	140bc4 <_bss_end+0x12ef14>
     bc0:	00000749 	andeq	r0, r0, r9, asr #14
     bc4:	07e40b06 	strbeq	r0, [r4, r6, lsl #22]!
     bc8:	00070000 	andeq	r0, r7, r0
     bcc:	009d0c00 	addseq	r0, sp, r0, lsl #24
     bd0:	04020000 	streq	r0, [r2], #-0
     bd4:	00459107 	subeq	r9, r5, r7, lsl #2
     bd8:	018f0300 	orreq	r0, pc, r0, lsl #6
     bdc:	ad0c0000 	stcge	0, cr0, [ip, #-0]
     be0:	0c000000 	stceq	0, cr0, [r0], {-0}
     be4:	000000bd 	strheq	r0, [r0], -sp
     be8:	0000cd0c 	andeq	ip, r0, ip, lsl #26
     bec:	00da0c00 	sbcseq	r0, sl, r0, lsl #24
     bf0:	ea0c0000 	b	300bf8 <_bss_end+0x2eef48>
     bf4:	0c000000 	stceq	0, cr0, [r0], {-0}
     bf8:	000000fa 	strdeq	r0, [r0], -sl
     bfc:	00010a0c 	andeq	r0, r1, ip, lsl #20
     c00:	011a0c00 	tsteq	sl, r0, lsl #24
     c04:	2a0c0000 	bcs	300c0c <_bss_end+0x2eef5c>
     c08:	0c000001 	stceq	0, cr0, [r0], {1}
     c0c:	0000013a 	andeq	r0, r0, sl, lsr r1
     c10:	00098a0d 	andeq	r8, r9, sp, lsl #20
     c14:	14060100 	strne	r0, [r6], #-256	; 0xffffff00
     c18:	00000076 	andeq	r0, r0, r6, ror r0
     c1c:	00180305 	andseq	r0, r8, r5, lsl #6
     c20:	540e0001 	strpl	r0, [lr], #-1
     c24:	14000007 	strne	r0, [r0], #-7
     c28:	5d070b01 	vstrpl	d0, [r7, #-4]
     c2c:	0f000002 	svceq	0x00000002
     c30:	000007d7 	ldrdeq	r0, [r0], -r7
     c34:	5d0a1001 	stcpl	0, cr1, [sl, #-4]
     c38:	00000002 	andeq	r0, r0, r2
     c3c:	0008600f 	andeq	r6, r8, pc
     c40:	0d120100 	ldfeqs	f0, [r2, #-0]
     c44:	00000264 	andeq	r0, r0, r4, ror #4
     c48:	09420f01 	stmdbeq	r2, {r0, r8, r9, sl, fp}^
     c4c:	14010000 	strne	r0, [r1], #-0
     c50:	00006a0e 	andeq	r6, r0, lr, lsl #20
     c54:	f20f0c00 			; <UNDEFINED> instruction: 0xf20f0c00
     c58:	01000008 	tsteq	r0, r8
     c5c:	00570e16 	subseq	r0, r7, r6, lsl lr
     c60:	10100000 	andsne	r0, r0, r0
     c64:	00000754 	andeq	r0, r0, r4, asr r7
     c68:	e9051901 	stmdb	r5, {r0, r8, fp, ip}
     c6c:	74000007 	strvc	r0, [r0], #-7
     c70:	01000002 	tsteq	r0, r2
     c74:	00023a01 	andeq	r3, r2, r1, lsl #20
     c78:	00024000 	andeq	r4, r2, r0
     c7c:	02741100 	rsbseq	r1, r4, #0, 2
     c80:	12000000 	andne	r0, r0, #0
     c84:	00000956 	andeq	r0, r0, r6, asr r9
     c88:	720a1b01 	andvc	r1, sl, #1024	; 0x400
     c8c:	01000008 	tsteq	r0, r8
     c90:	00000251 	andeq	r0, r0, r1, asr r2
     c94:	00027411 	andeq	r7, r2, r1, lsl r4
     c98:	00571300 	subseq	r1, r7, r0, lsl #6
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	4d020102 	stfmis	f0, [r2, #-8]
     ca4:	14000045 	strne	r0, [r0], #-69	; 0xffffffbb
     ca8:	00000044 	andeq	r0, r0, r4, asr #32
     cac:	00000274 	andeq	r0, r0, r4, ror r2
     cb0:	00008015 	andeq	r8, r0, r5, lsl r0
     cb4:	16000700 	strne	r0, [r0], -r0, lsl #14
     cb8:	0001df04 	andeq	sp, r1, r4, lsl #30
     cbc:	02740300 	rsbseq	r0, r4, #0, 6
     cc0:	720e0000 	andvc	r0, lr, #0
     cc4:	2400000f 	strcs	r0, [r0], #-15
     cc8:	2d072d01 	stccs	13, cr2, [r7, #-4]
     ccc:	0f000004 	svceq	0x00000004
     cd0:	000009a3 	andeq	r0, r0, r3, lsr #19
     cd4:	381e3101 	ldmdacc	lr, {r0, r8, ip, sp}
     cd8:	00000004 	andeq	r0, r0, r4
     cdc:	0007650f 	andeq	r6, r7, pc, lsl #10
     ce0:	0a330100 	beq	cc10e8 <_bss_end+0xcaf438>
     ce4:	0000025d 	andeq	r0, r0, sp, asr r2
     ce8:	09b30f04 	ldmibeq	r3!, {r2, r8, r9, sl, fp}
     cec:	36010000 	strcc	r0, [r1], -r0
     cf0:	00006a0e 	andeq	r6, r0, lr, lsl #20
     cf4:	e90f0800 	stmdb	pc, {fp}	; <UNPREDICTABLE>
     cf8:	01000008 	tsteq	r0, r8
     cfc:	006a0e38 	rsbeq	r0, sl, r8, lsr lr
     d00:	0f0c0000 	svceq	0x000c0000
     d04:	00000a13 	andeq	r0, r0, r3, lsl sl
     d08:	df163b01 	svcle	0x00163b01
     d0c:	10000001 	andne	r0, r0, r1
     d10:	67655217 			; <UNDEFINED> instruction: 0x67655217
     d14:	183e0100 	ldmdane	lr!, {r8}
     d18:	0000077c 	andeq	r0, r0, ip, ror r7
     d1c:	0000043d 	andeq	r0, r0, sp, lsr r4
     d20:	0002e602 	andeq	lr, r2, r2, lsl #12
     d24:	0002f100 	andeq	pc, r2, r0, lsl #2
     d28:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     d2c:	4a130000 	bmi	4c0d34 <_bss_end+0x4af084>
     d30:	00000001 	andeq	r0, r0, r1
     d34:	00096218 	andeq	r6, r9, r8, lsl r2
     d38:	0a410100 	beq	1041140 <_bss_end+0x102f490>
     d3c:	000007a9 	andeq	r0, r0, r9, lsr #15
     d40:	00030602 	andeq	r0, r3, r2, lsl #12
     d44:	00030c00 	andeq	r0, r3, r0, lsl #24
     d48:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     d4c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     d50:	00000f72 	andeq	r0, r0, r2, ror pc
     d54:	c0054401 	andgt	r4, r5, r1, lsl #8
     d58:	43000007 	movwmi	r0, #7
     d5c:	01000004 	tsteq	r0, r4
     d60:	00000325 	andeq	r0, r0, r5, lsr #6
     d64:	0000033a 	andeq	r0, r0, sl, lsr r3
     d68:	00044311 	andeq	r4, r4, r1, lsl r3
     d6c:	018f1300 	orreq	r1, pc, r0, lsl #6
     d70:	6a130000 	bvs	4c0d78 <_bss_end+0x4af0c8>
     d74:	13000000 	movwne	r0, #0
     d78:	0000006a 	andeq	r0, r0, sl, rrx
     d7c:	0a201900 	beq	807184 <_bss_end+0x7f54d4>
     d80:	47010000 	strmi	r0, [r1, -r0]
     d84:	000a3b0a 	andeq	r3, sl, sl, lsl #22
     d88:	00025d00 	andeq	r5, r2, r0, lsl #26
     d8c:	03530100 	cmpeq	r3, #0, 2
     d90:	03590000 	cmpeq	r9, #0
     d94:	43110000 	tstmi	r1, #0
     d98:	00000004 	andeq	r0, r0, r4
     d9c:	0009ad18 	andeq	sl, r9, r8, lsl sp
     da0:	0a490100 	beq	12411a8 <_bss_end+0x122f4f8>
     da4:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     da8:	00036e01 	andeq	r6, r3, r1, lsl #28
     dac:	00037400 	andeq	r7, r3, r0, lsl #8
     db0:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     db4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     db8:	0000073f 	andeq	r0, r0, pc, lsr r7
     dbc:	fb0a4b01 	blx	2939ca <_bss_end+0x281d1a>
     dc0:	5d000008 	stcpl	0, cr0, [r0, #-32]	; 0xffffffe0
     dc4:	01000002 	tsteq	r0, r2
     dc8:	0000038d 	andeq	r0, r0, sp, lsl #7
     dcc:	00000393 	muleq	r0, r3, r3
     dd0:	00044e11 	andeq	r4, r4, r1, lsl lr
     dd4:	23180000 	tstcs	r8, #0
     dd8:	01000009 	tsteq	r0, r9
     ddc:	08b00a4e 	ldmeq	r0!, {r1, r2, r3, r6, r9, fp}
     de0:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
     de4:	bd000003 	stclt	0, cr0, [r0, #-12]
     de8:	11000003 	tstne	r0, r3
     dec:	00000443 	andeq	r0, r0, r3, asr #8
     df0:	00005713 	andeq	r5, r0, r3, lsl r7
     df4:	04591300 	ldrbeq	r1, [r9], #-768	; 0xfffffd00
     df8:	6a130000 	bvs	4c0e00 <_bss_end+0x4af150>
     dfc:	00000000 	andeq	r0, r0, r0
     e00:	0007cf18 	andeq	ip, r7, r8, lsl pc
     e04:	0a500100 	beq	140120c <_bss_end+0x13ef55c>
     e08:	00000a25 	andeq	r0, r0, r5, lsr #20
     e0c:	0003d201 	andeq	sp, r3, r1, lsl #4
     e10:	0003e700 	andeq	lr, r3, r0, lsl #14
     e14:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     e18:	57130000 	ldrpl	r0, [r3, -r0]
     e1c:	13000000 	movwne	r0, #0
     e20:	0000045f 	andeq	r0, r0, pc, asr r4
     e24:	00006a13 	andeq	r6, r0, r3, lsl sl
     e28:	11190000 	tstne	r9, r0
     e2c:	01000009 	tsteq	r0, r9
     e30:	08c41753 	stmiaeq	r4, {r0, r1, r4, r6, r8, r9, sl, ip}^
     e34:	04650000 	strbteq	r0, [r5], #-0
     e38:	00010000 	andeq	r0, r1, r0
     e3c:	0b000004 	bleq	e54 <CPSR_IRQ_INHIBIT+0xdd4>
     e40:	11000004 	tstne	r0, r4
     e44:	00000443 	andeq	r0, r0, r3, asr #8
     e48:	00005713 	andeq	r5, r0, r3, lsl r7
     e4c:	3c120000 	ldccc	0, cr0, [r2], {-0}
     e50:	01000008 	tsteq	r0, r8
     e54:	080d0a55 	stmdaeq	sp, {r0, r2, r4, r6, r9, fp}
     e58:	1c010000 	stcne	0, cr0, [r1], {-0}
     e5c:	11000004 	tstne	r0, r4
     e60:	00000443 	andeq	r0, r0, r3, asr #8
     e64:	00046513 	andeq	r6, r4, r3, lsl r5
     e68:	025d1300 	subseq	r1, sp, #0, 6
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	00027f03 	andeq	r7, r2, r3, lsl #30
     e74:	7b041600 	blvc	10667c <_bss_end+0xf49cc>
     e78:	03000000 	movweq	r0, #0
     e7c:	00000432 	andeq	r0, r0, r2, lsr r4
     e80:	007b041a 	rsbseq	r0, fp, sl, lsl r4
     e84:	04160000 	ldreq	r0, [r6], #-0
     e88:	0000027f 	andeq	r0, r0, pc, ror r2
     e8c:	00044303 	andeq	r4, r4, r3, lsl #6
     e90:	2d041600 	stccs	6, cr1, [r4, #-0]
     e94:	03000004 	movweq	r0, #4
     e98:	0000044e 	andeq	r0, r0, lr, asr #8
     e9c:	002c0416 	eoreq	r0, ip, r6, lsl r4
     ea0:	04160000 	ldreq	r0, [r6], #-0
     ea4:	00000025 	andeq	r0, r0, r5, lsr #32
     ea8:	01df041a 	bicseq	r0, pc, sl, lsl r4	; <UNPREDICTABLE>
     eac:	7c1b0000 	ldcvc	0, cr0, [fp], {-0}
     eb0:	01000009 	tsteq	r0, r9
     eb4:	027f0d59 	rsbseq	r0, pc, #5696	; 0x1640
     eb8:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
     ebc:	07000005 	streq	r0, [r0, -r5]
     ec0:	00008004 	andeq	r8, r0, r4
     ec4:	0c070500 	cfstr32eq	mvfx0, [r7], {-0}
     ec8:	000004c0 	andeq	r0, r0, r0, asr #9
     ecc:	0002dc0b 	andeq	sp, r2, fp, lsl #24
     ed0:	1d0b0000 	stcne	0, cr0, [fp, #-0]
     ed4:	01000005 	tsteq	r0, r5
     ed8:	0002150b 	andeq	r1, r2, fp, lsl #10
     edc:	0f0b0200 	svceq	0x000b0200
     ee0:	03000002 	movweq	r0, #2
     ee4:	0001f70b 	andeq	pc, r1, fp, lsl #14
     ee8:	fd0b0400 	stc2	4, cr0, [fp, #-0]
     eec:	05000001 	streq	r0, [r0, #-1]
     ef0:	0002030b 	andeq	r0, r2, fp, lsl #6
     ef4:	090b0600 	stmdbeq	fp, {r9, sl}
     ef8:	07000002 	streq	r0, [r0, -r2]
     efc:	0007280b 	andeq	r2, r7, fp, lsl #16
     f00:	0e000800 	cdpeq	8, 0, cr0, cr0, cr0, {0}
     f04:	0000071a 	andeq	r0, r0, sl, lsl r7
     f08:	071b0514 			; <UNDEFINED> instruction: 0x071b0514
     f0c:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
     f10:	0004020f 	andeq	r0, r4, pc, lsl #4
     f14:	221f0500 	andscs	r0, pc, #0, 10
     f18:	000006c6 	andeq	r0, r0, r6, asr #13
     f1c:	02c10f00 	sbceq	r0, r1, #0, 30
     f20:	22050000 	andcs	r0, r5, #0
     f24:	0006cb0e 	andeq	ip, r6, lr, lsl #22
     f28:	f10f0400 			; <UNDEFINED> instruction: 0xf10f0400
     f2c:	05000004 	streq	r0, [r0, #-4]
     f30:	06cb0e24 	strbeq	r0, [fp], r4, lsr #28
     f34:	190c0000 	stmdbne	ip, {}	; <UNPREDICTABLE>
     f38:	0000043e 	andeq	r0, r0, lr, lsr r4
     f3c:	ac0a2805 	stcge	8, cr2, [sl], {5}
     f40:	5d000003 	stcpl	0, cr0, [r0, #-12]
     f44:	02000002 	andeq	r0, r0, #2
     f48:	0000050d 	andeq	r0, r0, sp, lsl #10
     f4c:	00000522 	andeq	r0, r0, r2, lsr #10
     f50:	0006db11 	andeq	sp, r6, r1, lsl fp
     f54:	006a1300 	rsbeq	r1, sl, r0, lsl #6
     f58:	e1130000 	tst	r3, r0
     f5c:	13000006 	movwne	r0, #6
     f60:	000006e1 	andeq	r0, r0, r1, ror #13
     f64:	04de1900 	ldrbeq	r1, [lr], #2304	; 0x900
     f68:	2a050000 	bcs	140f70 <_bss_end+0x12f2c0>
     f6c:	0004af0a 	andeq	sl, r4, sl, lsl #30
     f70:	00025d00 	andeq	r5, r2, r0, lsl #26
     f74:	053b0200 	ldreq	r0, [fp, #-512]!	; 0xfffffe00
     f78:	05500000 	ldrbeq	r0, [r0, #-0]
     f7c:	db110000 	blle	440f84 <_bss_end+0x42f2d4>
     f80:	13000006 	movwne	r0, #6
     f84:	0000006a 	andeq	r0, r0, sl, rrx
     f88:	0006e113 	andeq	lr, r6, r3, lsl r1
     f8c:	06e11300 	strbteq	r1, [r1], r0, lsl #6
     f90:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     f94:	0000062d 	andeq	r0, r0, sp, lsr #12
     f98:	ad0a2c05 	stcge	12, cr2, [sl, #-20]	; 0xffffffec
     f9c:	5d000006 	stcpl	0, cr0, [r0, #-24]	; 0xffffffe8
     fa0:	02000002 	andeq	r0, r0, #2
     fa4:	00000569 	andeq	r0, r0, r9, ror #10
     fa8:	0000057e 	andeq	r0, r0, lr, ror r5
     fac:	0006db11 	andeq	sp, r6, r1, lsl fp
     fb0:	006a1300 	rsbeq	r1, sl, r0, lsl #6
     fb4:	e1130000 	tst	r3, r0
     fb8:	13000006 	movwne	r0, #6
     fbc:	000006e1 	andeq	r0, r0, r1, ror #13
     fc0:	04661900 	strbteq	r1, [r6], #-2304	; 0xfffff700
     fc4:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
     fc8:	0005fe0a 	andeq	pc, r5, sl, lsl #28
     fcc:	00025d00 	andeq	r5, r2, r0, lsl #26
     fd0:	05970200 	ldreq	r0, [r7, #512]	; 0x200
     fd4:	05ac0000 	streq	r0, [ip, #0]!
     fd8:	db110000 	blle	440fe0 <_bss_end+0x42f330>
     fdc:	13000006 	movwne	r0, #6
     fe0:	0000006a 	andeq	r0, r0, sl, rrx
     fe4:	0006e113 	andeq	lr, r6, r3, lsl r1
     fe8:	06e11300 	strbteq	r1, [r1], r0, lsl #6
     fec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     ff0:	0000071a 	andeq	r0, r0, sl, lsl r7
     ff4:	b5053105 	strlt	r3, [r5, #-261]	; 0xfffffefb
     ff8:	e7000005 	str	r0, [r0, -r5]
     ffc:	01000006 	tsteq	r0, r6
    1000:	000005c5 	andeq	r0, r0, r5, asr #11
    1004:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1008:	0006e711 	andeq	lr, r6, r1, lsl r7
    100c:	00801300 	addeq	r1, r0, r0, lsl #6
    1010:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1014:	0000028a 	andeq	r0, r0, sl, lsl #5
    1018:	240a3405 	strcs	r3, [sl], #-1029	; 0xfffffbfb
    101c:	01000005 	tsteq	r0, r5
    1020:	000005e5 	andeq	r0, r0, r5, ror #11
    1024:	000005f5 	strdeq	r0, [r0], -r5
    1028:	0006e711 	andeq	lr, r6, r1, lsl r7
    102c:	006a1300 	rsbeq	r1, sl, r0, lsl #6
    1030:	77130000 	ldrvc	r0, [r3, -r0]
    1034:	00000004 	andeq	r0, r0, r4
    1038:	00057819 	andeq	r7, r5, r9, lsl r8
    103c:	14360500 	ldrtne	r0, [r6], #-1280	; 0xfffffb00
    1040:	000006ec 	andeq	r0, r0, ip, ror #13
    1044:	00000477 	andeq	r0, r0, r7, ror r4
    1048:	00060e01 	andeq	r0, r6, r1, lsl #28
    104c:	00061900 	andeq	r1, r6, r0, lsl #18
    1050:	06db1100 	ldrbeq	r1, [fp], r0, lsl #2
    1054:	6a130000 	bvs	4c105c <_bss_end+0x4af3ac>
    1058:	00000000 	andeq	r0, r0, r0
    105c:	00051918 	andeq	r1, r5, r8, lsl r9
    1060:	0a390500 	beq	e42468 <_bss_end+0xe307b8>
    1064:	00000416 	andeq	r0, r0, r6, lsl r4
    1068:	00062e01 	andeq	r2, r6, r1, lsl #28
    106c:	00063e00 	andeq	r3, r6, r0, lsl #28
    1070:	06e71100 	strbteq	r1, [r7], r0, lsl #2
    1074:	6a130000 	bvs	4c107c <_bss_end+0x4af3cc>
    1078:	13000000 	movwne	r0, #0
    107c:	0000025d 	andeq	r0, r0, sp, asr r2
    1080:	02d81900 	sbcseq	r1, r8, #0, 18
    1084:	3c050000 	stccc	0, cr0, [r5], {-0}
    1088:	00026b0a 	andeq	r6, r2, sl, lsl #22
    108c:	00025d00 	andeq	r5, r2, r0, lsl #26
    1090:	06570100 	ldrbeq	r0, [r7], -r0, lsl #2
    1094:	06620000 	strbteq	r0, [r2], -r0
    1098:	e7110000 	ldr	r0, [r1, -r0]
    109c:	13000006 	movwne	r0, #6
    10a0:	0000006a 	andeq	r0, r0, sl, rrx
    10a4:	05ed1900 	strbeq	r1, [sp, #2304]!	; 0x900
    10a8:	3f050000 	svccc	0x00050000
    10ac:	0001d30a 	andeq	sp, r1, sl, lsl #6
    10b0:	00025d00 	andeq	r5, r2, r0, lsl #26
    10b4:	067b0100 	ldrbteq	r0, [fp], -r0, lsl #2
    10b8:	06900000 	ldreq	r0, [r0], r0
    10bc:	e7110000 	ldr	r0, [r1, -r0]
    10c0:	13000006 	movwne	r0, #6
    10c4:	0000006a 	andeq	r0, r0, sl, rrx
    10c8:	00025d13 	andeq	r5, r2, r3, lsl sp
    10cc:	025d1300 	subseq	r1, sp, #0, 6
    10d0:	1d000000 	stcne	0, cr0, [r0, #-0]
    10d4:	000005a3 	andeq	r0, r0, r3, lsr #11
    10d8:	fe0a4105 	cdp2	1, 0, cr4, cr10, cr5, {0}
    10dc:	5d000002 	stcpl	0, cr0, [r0, #-8]
    10e0:	01000002 	tsteq	r0, r2
    10e4:	000006a5 	andeq	r0, r0, r5, lsr #13
    10e8:	0006e711 	andeq	lr, r6, r1, lsl r7
    10ec:	006a1300 	rsbeq	r1, sl, r0, lsl #6
    10f0:	5d130000 	ldcpl	0, cr0, [r3, #-0]
    10f4:	13000002 	movwne	r0, #2
    10f8:	0000025d 	andeq	r0, r0, sp, asr r2
    10fc:	c0030000 	andgt	r0, r3, r0
    1100:	16000004 	strne	r0, [r0], -r4
    1104:	00008c04 	andeq	r8, r0, r4, lsl #24
    1108:	06c00300 	strbeq	r0, [r0], r0, lsl #6
    110c:	6a140000 	bvs	501114 <_bss_end+0x4ef464>
    1110:	db000000 	blle	1118 <CPSR_IRQ_INHIBIT+0x1098>
    1114:	15000006 	strne	r0, [r0, #-6]
    1118:	00000080 	andeq	r0, r0, r0, lsl #1
    111c:	04160001 	ldreq	r0, [r6], #-1
    1120:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    1124:	006a041a 	rsbeq	r0, sl, sl, lsl r4
    1128:	04160000 	ldreq	r0, [r6], #-0
    112c:	000004c0 	andeq	r0, r0, r0, asr #9
    1130:	0004a91b 	andeq	sl, r4, fp, lsl r9
    1134:	16450500 	strbne	r0, [r5], -r0, lsl #10
    1138:	000004c0 	andeq	r0, r0, r0, asr #9
    113c:	00046b1e 	andeq	r6, r4, lr, lsl fp
    1140:	06050200 	streq	r0, [r5], -r0, lsl #4
    1144:	0b700305 	bleq	1c01d60 <_bss_end+0x1bf00b0>
    1148:	6d1f0001 	ldcvs	0, cr0, [pc, #-4]	; 114c <CPSR_IRQ_INHIBIT+0x10cc>
    114c:	bc000009 	stclt	0, cr0, [r0], {9}
    1150:	1c000090 	stcne	0, cr0, [r0], {144}	; 0x90
    1154:	01000000 	mrseq	r0, (UNDEF: 0)
    1158:	0241209c 	subeq	r2, r1, #156	; 0x9c
    115c:	90600000 	rsbls	r0, r0, r0
    1160:	005c0000 	subseq	r0, ip, r0
    1164:	9c010000 	stcls	0, cr0, [r1], {-0}
    1168:	00000748 	andeq	r0, r0, r8, asr #14
    116c:	00033b21 	andeq	r3, r3, r1, lsr #22
    1170:	01850200 	orreq	r0, r5, r0, lsl #4
    1174:	00000038 	andeq	r0, r0, r8, lsr r0
    1178:	21749102 	cmncs	r4, r2, lsl #2
    117c:	00000734 	andeq	r0, r0, r4, lsr r7
    1180:	38018502 	stmdacc	r1, {r1, r8, sl, pc}
    1184:	02000000 	andeq	r0, r0, #0
    1188:	22007091 	andcs	r7, r0, #145	; 0x91
    118c:	0000040b 	andeq	r0, r0, fp, lsl #8
    1190:	62067002 	andvs	r7, r6, #2
    1194:	04000007 	streq	r0, [r0], #-7
    1198:	5c00008f 	stcpl	0, cr0, [r0], {143}	; 0x8f
    119c:	01000001 	tsteq	r0, r1
    11a0:	0007a49c 	muleq	r7, ip, r4
    11a4:	032c2300 			; <UNDEFINED> instruction: 0x032c2300
    11a8:	04490000 	strbeq	r0, [r9], #-0
    11ac:	91020000 	mrsls	r0, (UNDEF: 2)
    11b0:	084c2164 	stmdaeq	ip, {r2, r5, r6, r8, sp}^
    11b4:	70020000 	andvc	r0, r2, r0
    11b8:	0004652e 	andeq	r6, r4, lr, lsr #10
    11bc:	60910200 	addsvs	r0, r1, r0, lsl #4
    11c0:	0008e221 	andeq	lr, r8, r1, lsr #4
    11c4:	40700200 	rsbsmi	r0, r0, r0, lsl #4
    11c8:	0000025d 	andeq	r0, r0, sp, asr r2
    11cc:	245f9102 	ldrbcs	r9, [pc], #-258	; 11d4 <CPSR_IRQ_INHIBIT+0x1154>
    11d0:	00008fa4 	andeq	r8, r0, r4, lsr #31
    11d4:	00000064 	andeq	r0, r0, r4, rrx
    11d8:	02006925 	andeq	r6, r0, #606208	; 0x94000
    11dc:	003f177d 	eorseq	r1, pc, sp, ror r7	; <UNPREDICTABLE>
    11e0:	91020000 	mrsls	r0, (UNDEF: 2)
    11e4:	2200006c 	andcs	r0, r0, #108	; 0x6c
    11e8:	000003e7 	andeq	r0, r0, r7, ror #7
    11ec:	be136402 	cfmulslt	mvf6, mvf3, mvf2
    11f0:	8c000007 	stchi	0, cr0, [r0], {7}
    11f4:	7800008e 	stmdavc	r0, {r1, r2, r3, r7}
    11f8:	01000000 	mrseq	r0, (UNDEF: 0)
    11fc:	0007da9c 	muleq	r7, ip, sl
    1200:	032c2300 			; <UNDEFINED> instruction: 0x032c2300
    1204:	04490000 	strbeq	r0, [r9], #-0
    1208:	91020000 	mrsls	r0, (UNDEF: 2)
    120c:	02252174 	eoreq	r2, r5, #116, 2
    1210:	64020000 	strvs	r0, [r2], #-0
    1214:	00005734 	andeq	r5, r0, r4, lsr r7
    1218:	72910200 	addsvc	r0, r1, #0, 4
    121c:	03bd2200 			; <UNDEFINED> instruction: 0x03bd2200
    1220:	54020000 	strpl	r0, [r2], #-0
    1224:	0007f406 	andeq	pc, r7, r6, lsl #8
    1228:	008da000 	addeq	sl, sp, r0
    122c:	0000ec00 	andeq	lr, r0, r0, lsl #24
    1230:	459c0100 	ldrmi	r0, [ip, #256]	; 0x100
    1234:	23000008 	movwcs	r0, #8
    1238:	0000032c 	andeq	r0, r0, ip, lsr #6
    123c:	00000449 	andeq	r0, r0, r9, asr #8
    1240:	216c9102 	cmncs	ip, r2, lsl #2
    1244:	00000225 	andeq	r0, r0, r5, lsr #4
    1248:	571d5402 	ldrpl	r5, [sp, -r2, lsl #8]
    124c:	02000000 	andeq	r0, r0, #0
    1250:	ba216a91 	blt	85bc9c <_bss_end+0x849fec>
    1254:	0200000c 	andeq	r0, r0, #12
    1258:	045f2954 	ldrbeq	r2, [pc], #-2388	; 1260 <CPSR_IRQ_INHIBIT+0x11e0>
    125c:	91020000 	mrsls	r0, (UNDEF: 2)
    1260:	656c2664 	strbvs	r2, [ip, #-1636]!	; 0xfffff99c
    1264:	5402006e 	strpl	r0, [r2], #-110	; 0xffffff92
    1268:	00006a3a 	andeq	r6, r0, sl, lsr sl
    126c:	60910200 	addsvs	r0, r1, r0, lsl #4
    1270:	008e2824 	addeq	r2, lr, r4, lsr #16
    1274:	00005000 	andeq	r5, r0, r0
    1278:	00692500 	rsbeq	r2, r9, r0, lsl #10
    127c:	6a136002 	bvs	4d928c <_bss_end+0x4c75dc>
    1280:	02000000 	andeq	r0, r0, #0
    1284:	00007491 	muleq	r0, r1, r4
    1288:	00039322 	andeq	r9, r3, r2, lsr #6
    128c:	06450200 	strbeq	r0, [r5], -r0, lsl #4
    1290:	0000085f 	andeq	r0, r0, pc, asr r8
    1294:	00008cb4 			; <UNDEFINED> instruction: 0x00008cb4
    1298:	000000ec 	andeq	r0, r0, ip, ror #1
    129c:	08b09c01 	ldmeq	r0!, {r0, sl, fp, ip, pc}
    12a0:	2c230000 	stccs	0, cr0, [r3], #-0
    12a4:	49000003 	stmdbmi	r0, {r0, r1}
    12a8:	02000004 	andeq	r0, r0, #4
    12ac:	25216491 	strcs	r6, [r1, #-1169]!	; 0xfffffb6f
    12b0:	02000002 	andeq	r0, r0, #2
    12b4:	00571a45 	subseq	r1, r7, r5, asr #20
    12b8:	91020000 	mrsls	r0, (UNDEF: 2)
    12bc:	0cba2162 	ldfeqs	f2, [sl], #392	; 0x188
    12c0:	45020000 	strmi	r0, [r2, #-0]
    12c4:	0004592c 	andeq	r5, r4, ip, lsr #18
    12c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    12cc:	6e656c26 	cdpvs	12, 6, cr6, cr5, cr6, {1}
    12d0:	3d450200 	sfmcc	f0, 2, [r5, #-0]
    12d4:	0000006a 	andeq	r0, r0, sl, rrx
    12d8:	24589102 	ldrbcs	r9, [r8], #-258	; 0xfffffefe
    12dc:	00008d04 	andeq	r8, r0, r4, lsl #26
    12e0:	00000050 	andeq	r0, r0, r0, asr r0
    12e4:	02006925 	andeq	r6, r0, #606208	; 0x94000
    12e8:	006a134a 	rsbeq	r1, sl, sl, asr #6
    12ec:	91020000 	mrsls	r0, (UNDEF: 2)
    12f0:	2700006c 	strcs	r0, [r0, -ip, rrx]
    12f4:	00000374 	andeq	r0, r0, r4, ror r3
    12f8:	ca064002 	bgt	191308 <_bss_end+0x17f658>
    12fc:	8c000008 	stchi	0, cr0, [r0], {8}
    1300:	2800008c 	stmdacs	r0, {r2, r3, r7}
    1304:	01000000 	mrseq	r0, (UNDEF: 0)
    1308:	0008d79c 	muleq	r8, ip, r7
    130c:	032c2300 			; <UNDEFINED> instruction: 0x032c2300
    1310:	04540000 	ldrbeq	r0, [r4], #-0
    1314:	91020000 	mrsls	r0, (UNDEF: 2)
    1318:	59220074 	stmdbpl	r2!, {r2, r4, r5, r6}
    131c:	02000003 	andeq	r0, r0, #3
    1320:	08f10633 	ldmeq	r1!, {r0, r1, r4, r5, r9, sl}^
    1324:	8be80000 	blhi	ffa0132c <_bss_end+0xff9ef67c>
    1328:	00a40000 	adceq	r0, r4, r0
    132c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1330:	000008fe 	strdeq	r0, [r0], -lr
    1334:	00032c23 	andeq	r2, r3, r3, lsr #24
    1338:	00044900 	andeq	r4, r4, r0, lsl #18
    133c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1340:	033a2200 	teqeq	sl, #0, 4
    1344:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    1348:	00091806 	andeq	r1, r9, r6, lsl #16
    134c:	008b0800 	addeq	r0, fp, r0, lsl #16
    1350:	0000e000 	andeq	lr, r0, r0
    1354:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    1358:	23000009 	movwcs	r0, #9
    135c:	0000032c 	andeq	r0, r0, ip, lsr #6
    1360:	00000449 	andeq	r0, r0, r9, asr #8
    1364:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1368:	0002f122 	andeq	pc, r2, r2, lsr #2
    136c:	06150200 	ldreq	r0, [r5], -r0, lsl #4
    1370:	0000093f 	andeq	r0, r0, pc, lsr r9
    1374:	00008ab4 			; <UNDEFINED> instruction: 0x00008ab4
    1378:	00000054 	andeq	r0, r0, r4, asr r0
    137c:	09599c01 	ldmdbeq	r9, {r0, sl, fp, ip, pc}^
    1380:	2c230000 	stccs	0, cr0, [r3], #-0
    1384:	49000003 	stmdbmi	r0, {r0, r1}
    1388:	02000004 	andeq	r0, r0, #4
    138c:	73256c91 			; <UNDEFINED> instruction: 0x73256c91
    1390:	18170200 	ldmdane	r7, {r9}
    1394:	0000043d 	andeq	r0, r0, sp, lsr r4
    1398:	00749102 	rsbseq	r9, r4, r2, lsl #2
    139c:	0002cd27 	andeq	ip, r2, r7, lsr #26
    13a0:	14100200 	ldrne	r0, [r0], #-512	; 0xfffffe00
    13a4:	00000973 	andeq	r0, r0, r3, ror r9
    13a8:	00008a7c 	andeq	r8, r0, ip, ror sl
    13ac:	00000038 	andeq	r0, r0, r8, lsr r0
    13b0:	098f9c01 	stmibeq	pc, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
    13b4:	2c230000 	stccs	0, cr0, [r3], #-0
    13b8:	49000003 	stmdbmi	r0, {r0, r1}
    13bc:	02000004 	andeq	r0, r0, #4
    13c0:	72267491 	eorvc	r7, r6, #-1862270976	; 0x91000000
    13c4:	02006765 	andeq	r6, r0, #26476544	; 0x1940000
    13c8:	014a2b10 	cmpeq	sl, r0, lsl fp
    13cc:	91020000 	mrsls	r0, (UNDEF: 2)
    13d0:	0c280070 	stceq	0, cr0, [r8], #-448	; 0xfffffe40
    13d4:	02000003 	andeq	r0, r0, #3
    13d8:	09a00107 	stmibeq	r0!, {r0, r1, r2, r8}
    13dc:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    13e0:	29000009 	stmdbcs	r0, {r0, r3}
    13e4:	0000032c 	andeq	r0, r0, ip, lsr #6
    13e8:	00000449 	andeq	r0, r0, r9, asr #8
    13ec:	001afe2a 	andseq	pc, sl, sl, lsr #28
    13f0:	1a070200 	bne	1c1bf8 <_bss_end+0x1aff48>
    13f4:	0000018f 	andeq	r0, r0, pc, lsl #3
    13f8:	0008972a 	andeq	r9, r8, sl, lsr #14
    13fc:	29070200 	stmdbcs	r7, {r9}
    1400:	0000006a 	andeq	r0, r0, sl, rrx
    1404:	0008582a 	andeq	r5, r8, sl, lsr #16
    1408:	3b070200 	blcc	1c1c10 <_bss_end+0x1aff60>
    140c:	0000006a 	andeq	r0, r0, sl, rrx
    1410:	098f2b00 	stmibeq	pc, {r8, r9, fp, sp}	; <UNPREDICTABLE>
    1414:	076d0000 	strbeq	r0, [sp, -r0]!
    1418:	09e90000 	stmibeq	r9!, {}^	; <UNPREDICTABLE>
    141c:	8a100000 	bhi	401424 <_bss_end+0x3ef774>
    1420:	006c0000 	rsbeq	r0, ip, r0
    1424:	9c010000 	stcls	0, cr0, [r1], {-0}
    1428:	00000a0a 	andeq	r0, r0, sl, lsl #20
    142c:	0009a02c 	andeq	sl, r9, ip, lsr #32
    1430:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1434:	0009a92c 	andeq	sl, r9, ip, lsr #18
    1438:	70910200 	addsvc	r0, r1, r0, lsl #4
    143c:	0009b52c 	andeq	fp, r9, ip, lsr #10
    1440:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1444:	0009c12c 	andeq	ip, r9, ip, lsr #2
    1448:	68910200 	ldmvs	r1, {r9}
    144c:	02202d00 	eoreq	r2, r0, #0, 26
    1450:	0a180000 	beq	601458 <_bss_end+0x5ef7a8>
    1454:	22020000 	andcs	r0, r2, #0
    1458:	2900000a 	stmdbcs	r0, {r1, r3}
    145c:	0000032c 	andeq	r0, r0, ip, lsr #6
    1460:	0000027a 	andeq	r0, r0, sl, ror r2
    1464:	0a0a2e00 	beq	28cc6c <_bss_end+0x27afbc>
    1468:	09280000 	stmdbeq	r8!, {}	; <UNPREDICTABLE>
    146c:	0a3d0000 	beq	f41474 <_bss_end+0xf2f7c4>
    1470:	910c0000 	mrsls	r0, (UNDEF: 12)
    1474:	00480000 	subeq	r0, r8, r0
    1478:	9c010000 	stcls	0, cr0, [r1], {-0}
    147c:	00000a46 	andeq	r0, r0, r6, asr #20
    1480:	000a182c 	andeq	r1, sl, ip, lsr #16
    1484:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1488:	02402f00 	subeq	r2, r0, #0, 30
    148c:	0a590000 	beq	1641494 <_bss_end+0x162f7e4>
    1490:	90d80000 	sbcsls	r0, r8, r0
    1494:	00340000 	eorseq	r0, r4, r0
    1498:	9c010000 	stcls	0, cr0, [r1], {-0}
    149c:	00032c23 	andeq	r2, r3, r3, lsr #24
    14a0:	00027a00 	andeq	r7, r2, r0, lsl #20
    14a4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    14a8:	00022521 	andeq	r2, r2, r1, lsr #10
    14ac:	1f1b0100 	svcne	0x001b0100
    14b0:	00000057 	andeq	r0, r0, r7, asr r0
    14b4:	00729102 	rsbseq	r9, r2, r2, lsl #2
    14b8:	0006b400 	andeq	fp, r6, r0, lsl #8
    14bc:	39000400 	stmdbcc	r0, {sl}
    14c0:	04000006 	streq	r0, [r0], #-6
    14c4:	00001401 	andeq	r1, r0, r1, lsl #8
    14c8:	0ac20400 	beq	ff0824d0 <_bss_end+0xff070820>
    14cc:	00c50000 	sbceq	r0, r5, r0
    14d0:	00200000 	eoreq	r0, r0, r0
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	07bf0000 	ldreq	r0, [pc, r0]!
    14dc:	98020000 	stmdals	r2, {}	; <UNPREDICTABLE>
    14e0:	1800000b 	stmdane	r0, {r0, r1, r3}
    14e4:	66070302 	strvs	r0, [r7], -r2, lsl #6
    14e8:	03000002 	movweq	r0, #2
    14ec:	00000b16 	andeq	r0, r0, r6, lsl fp
    14f0:	02660407 	rsbeq	r0, r6, #117440512	; 0x7000000
    14f4:	06020000 	streq	r0, [r2], -r0
    14f8:	00520110 	subseq	r0, r2, r0, lsl r1
    14fc:	48040000 	stmdami	r4, {}	; <UNPREDICTABLE>
    1500:	10005845 	andne	r5, r0, r5, asr #16
    1504:	43454404 	movtmi	r4, #21508	; 0x5404
    1508:	05000a00 	streq	r0, [r0, #-2560]	; 0xfffff600
    150c:	00000032 	andeq	r0, r0, r2, lsr r0
    1510:	000b2306 	andeq	r2, fp, r6, lsl #6
    1514:	24020800 	strcs	r0, [r2], #-2048	; 0xfffff800
    1518:	00007b0c 	andeq	r7, r0, ip, lsl #22
    151c:	00790700 	rsbseq	r0, r9, r0, lsl #14
    1520:	66162602 	ldrvs	r2, [r6], -r2, lsl #12
    1524:	00000002 	andeq	r0, r0, r2
    1528:	02007807 	andeq	r7, r0, #458752	; 0x70000
    152c:	02661627 	rsbeq	r1, r6, #40894464	; 0x2700000
    1530:	00040000 	andeq	r0, r4, r0
    1534:	000c7508 	andeq	r7, ip, r8, lsl #10
    1538:	1b0c0200 	blne	301d40 <_bss_end+0x2f0090>
    153c:	00000052 	andeq	r0, r0, r2, asr r0
    1540:	e8090a01 	stmda	r9, {r0, r9, fp}
    1544:	0200000b 	andeq	r0, r0, #11
    1548:	0278280d 	rsbseq	r2, r8, #851968	; 0xd0000
    154c:	0a010000 	beq	41554 <_bss_end+0x2f8a4>
    1550:	00000b98 	muleq	r0, r8, fp
    1554:	620e1002 	andvs	r1, lr, #2
    1558:	8900000c 	stmdbhi	r0, {r2, r3}
    155c:	01000002 	tsteq	r0, r2
    1560:	000000af 	andeq	r0, r0, pc, lsr #1
    1564:	000000c4 	andeq	r0, r0, r4, asr #1
    1568:	0002890b 	andeq	r8, r2, fp, lsl #18
    156c:	02660c00 	rsbeq	r0, r6, #0, 24
    1570:	660c0000 	strvs	r0, [ip], -r0
    1574:	0c000002 	stceq	0, cr0, [r0], {2}
    1578:	00000266 	andeq	r0, r0, r6, ror #4
    157c:	18a20d00 	stmiane	r2!, {r8, sl, fp}
    1580:	12020000 	andne	r0, r2, #0
    1584:	000b830a 	andeq	r8, fp, sl, lsl #6
    1588:	00d90100 	sbcseq	r0, r9, r0, lsl #2
    158c:	00df0000 	sbcseq	r0, pc, r0
    1590:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    1594:	00000002 	andeq	r0, r0, r2
    1598:	000ba10e 	andeq	sl, fp, lr, lsl #2
    159c:	0f140200 	svceq	0x00140200
    15a0:	00000c05 	andeq	r0, r0, r5, lsl #24
    15a4:	00000294 	muleq	r0, r4, r2
    15a8:	0000f801 	andeq	pc, r0, r1, lsl #16
    15ac:	00010300 	andeq	r0, r1, r0, lsl #6
    15b0:	02890b00 	addeq	r0, r9, #0, 22
    15b4:	7d0c0000 	stcvc	0, cr0, [ip, #-0]
    15b8:	00000002 	andeq	r0, r0, r2
    15bc:	000ba10e 	andeq	sl, fp, lr, lsl #2
    15c0:	0f150200 	svceq	0x00150200
    15c4:	00000bac 	andeq	r0, r0, ip, lsr #23
    15c8:	00000294 	muleq	r0, r4, r2
    15cc:	00011c01 	andeq	r1, r1, r1, lsl #24
    15d0:	00012700 	andeq	r2, r1, r0, lsl #14
    15d4:	02890b00 	addeq	r0, r9, #0, 22
    15d8:	720c0000 	andvc	r0, ip, #0
    15dc:	00000002 	andeq	r0, r0, r2
    15e0:	000ba10e 	andeq	sl, fp, lr, lsl #2
    15e4:	0f160200 	svceq	0x00160200
    15e8:	00000c89 	andeq	r0, r0, r9, lsl #25
    15ec:	00000294 	muleq	r0, r4, r2
    15f0:	00014001 	andeq	r4, r1, r1
    15f4:	00014b00 	andeq	r4, r1, r0, lsl #22
    15f8:	02890b00 	addeq	r0, r9, #0, 22
    15fc:	320c0000 	andcc	r0, ip, #0
    1600:	00000000 	andeq	r0, r0, r0
    1604:	000ba10e 	andeq	sl, fp, lr, lsl #2
    1608:	0f170200 	svceq	0x00170200
    160c:	00000c34 	andeq	r0, r0, r4, lsr ip
    1610:	00000294 	muleq	r0, r4, r2
    1614:	00016401 	andeq	r6, r1, r1, lsl #8
    1618:	00016f00 	andeq	r6, r1, r0, lsl #30
    161c:	02890b00 	addeq	r0, r9, #0, 22
    1620:	660c0000 	strvs	r0, [ip], -r0
    1624:	00000002 	andeq	r0, r0, r2
    1628:	000ba10e 	andeq	sl, fp, lr, lsl #2
    162c:	0f180200 	svceq	0x00180200
    1630:	00000bf4 	strdeq	r0, [r0], -r4
    1634:	00000294 	muleq	r0, r4, r2
    1638:	00018801 	andeq	r8, r1, r1, lsl #16
    163c:	00019300 	andeq	r9, r1, r0, lsl #6
    1640:	02890b00 	addeq	r0, r9, #0, 22
    1644:	9a0c0000 	bls	30164c <_bss_end+0x2ef99c>
    1648:	00000002 	andeq	r0, r0, r2
    164c:	000ab40f 	andeq	fp, sl, pc, lsl #8
    1650:	111b0200 	tstne	fp, r0, lsl #4
    1654:	00000a84 	andeq	r0, r0, r4, lsl #21
    1658:	000001a7 	andeq	r0, r0, r7, lsr #3
    165c:	000001ad 	andeq	r0, r0, sp, lsr #3
    1660:	0002890b 	andeq	r8, r2, fp, lsl #18
    1664:	a70f0000 	strge	r0, [pc, -r0]
    1668:	0200000a 	andeq	r0, r0, #10
    166c:	0c45111c 	stfeqe	f1, [r5], {28}
    1670:	01c10000 	biceq	r0, r1, r0
    1674:	01c70000 	biceq	r0, r7, r0
    1678:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    167c:	00000002 	andeq	r0, r0, r2
    1680:	000a5f0f 	andeq	r5, sl, pc, lsl #30
    1684:	111d0200 	tstne	sp, r0, lsl #4
    1688:	00000b2d 	andeq	r0, r0, sp, lsr #22
    168c:	000001db 	ldrdeq	r0, [r0], -fp
    1690:	000001e1 	andeq	r0, r0, r1, ror #3
    1694:	0002890b 	andeq	r8, r2, fp, lsl #18
    1698:	e10f0000 	mrs	r0, CPSR
    169c:	02000013 	andeq	r0, r0, #19
    16a0:	0c1e0a1f 			; <UNDEFINED> instruction: 0x0c1e0a1f
    16a4:	01f50000 	mvnseq	r0, r0
    16a8:	01fb0000 	mvnseq	r0, r0
    16ac:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    16b0:	00000002 	andeq	r0, r0, r2
    16b4:	000aa20f 	andeq	sl, sl, pc, lsl #4
    16b8:	0a210200 	beq	841ec0 <_bss_end+0x830210>
    16bc:	00000bbf 			; <UNDEFINED> instruction: 0x00000bbf
    16c0:	0000020f 	andeq	r0, r0, pc, lsl #4
    16c4:	00000224 	andeq	r0, r0, r4, lsr #4
    16c8:	0002890b 	andeq	r8, r2, fp, lsl #18
    16cc:	02660c00 	rsbeq	r0, r6, #0, 24
    16d0:	a10c0000 	mrsge	r0, (UNDEF: 12)
    16d4:	0c000002 	stceq	0, cr0, [r0], {2}
    16d8:	00000266 	andeq	r0, r0, r6, ror #4
    16dc:	0b4f1000 	bleq	13c56e4 <_bss_end+0x13b3a34>
    16e0:	2b020000 	blcs	816e8 <_bss_end+0x6fa38>
    16e4:	0002ad23 	andeq	sl, r2, r3, lsr #26
    16e8:	16100000 	ldrne	r0, [r0], -r0
    16ec:	0200000c 	andeq	r0, r0, #12
    16f0:	0266122c 	rsbeq	r1, r6, #44, 4	; 0xc0000002
    16f4:	10040000 	andne	r0, r4, r0
    16f8:	00000bd6 	ldrdeq	r0, [r0], -r6
    16fc:	66122d02 	ldrvs	r2, [r2], -r2, lsl #26
    1700:	08000002 	stmdaeq	r0, {r1}
    1704:	000bdf10 	andeq	sp, fp, r0, lsl pc
    1708:	0f2e0200 	svceq	0x002e0200
    170c:	00000057 	andeq	r0, r0, r7, asr r0
    1710:	0a51100c 	beq	1445748 <_bss_end+0x1433a98>
    1714:	2f020000 	svccs	0x00020000
    1718:	00003212 	andeq	r3, r0, r2, lsl r2
    171c:	11001400 	tstne	r0, r0, lsl #8
    1720:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
    1724:	66050000 	strvs	r0, [r5], -r0
    1728:	12000002 	andne	r0, r0, #2
    172c:	00028404 	andeq	r8, r2, r4, lsl #8
    1730:	02720500 	rsbseq	r0, r2, #0, 10
    1734:	01110000 	tsteq	r1, r0
    1738:	00057308 	andeq	r7, r5, r8, lsl #6
    173c:	027d0500 	rsbseq	r0, sp, #0, 10
    1740:	04120000 	ldreq	r0, [r2], #-0
    1744:	00000025 	andeq	r0, r0, r5, lsr #32
    1748:	00028905 	andeq	r8, r2, r5, lsl #18
    174c:	25041300 	strcs	r1, [r4, #-768]	; 0xfffffd00
    1750:	11000000 	mrsne	r0, (UNDEF: 0)
    1754:	454d0201 	strbmi	r0, [sp, #-513]	; 0xfffffdff
    1758:	04120000 	ldreq	r0, [r2], #-0
    175c:	0000027d 	andeq	r0, r0, sp, ror r2
    1760:	02b90412 	adcseq	r0, r9, #301989888	; 0x12000000
    1764:	a7050000 	strge	r0, [r5, -r0]
    1768:	11000002 	tstne	r0, r2
    176c:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    1770:	b2140000 	andslt	r0, r4, #0
    1774:	15000002 	strne	r0, [r0, #-2]
    1778:	00000b68 	andeq	r0, r0, r8, ror #22
    177c:	25113202 	ldrcs	r3, [r1, #-514]	; 0xfffffdfe
    1780:	16000000 	strne	r0, [r0], -r0
    1784:	000002be 			; <UNDEFINED> instruction: 0x000002be
    1788:	050a0301 	streq	r0, [sl, #-769]	; 0xfffffcff
    178c:	010b9403 	tsteq	fp, r3, lsl #8
    1790:	0b591700 	bleq	1647398 <_bss_end+0x16356e8>
    1794:	97800000 	strls	r0, [r0, r0]
    1798:	001c0000 	andseq	r0, ip, r0
    179c:	9c010000 	stcls	0, cr0, [r1], {-0}
    17a0:	00024118 	andeq	r4, r2, r8, lsl r1
    17a4:	00972800 	addseq	r2, r7, r0, lsl #16
    17a8:	00005800 	andeq	r5, r0, r0, lsl #16
    17ac:	199c0100 	ldmibne	ip, {r8}
    17b0:	19000003 	stmdbne	r0, {r0, r1}
    17b4:	0000033b 	andeq	r0, r0, fp, lsr r3
    17b8:	1901a201 	stmdbne	r1, {r0, r9, sp, pc}
    17bc:	02000003 	andeq	r0, r0, #3
    17c0:	34197491 	ldrcc	r7, [r9], #-1169	; 0xfffffb6f
    17c4:	01000007 	tsteq	r0, r7
    17c8:	031901a2 	tsteq	r9, #-2147483608	; 0x80000028
    17cc:	91020000 	mrsls	r0, (UNDEF: 2)
    17d0:	041a0070 	ldreq	r0, [sl], #-112	; 0xffffff90
    17d4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    17d8:	01fb1b00 	mvnseq	r1, r0, lsl #22
    17dc:	87010000 	strhi	r0, [r1, -r0]
    17e0:	00033a06 	andeq	r3, r3, r6, lsl #20
    17e4:	0095ac00 	addseq	sl, r5, r0, lsl #24
    17e8:	00017c00 	andeq	r7, r1, r0, lsl #24
    17ec:	af9c0100 	svcge	0x009c0100
    17f0:	1c000003 	stcne	0, cr0, [r0], {3}
    17f4:	0000032c 	andeq	r0, r0, ip, lsr #6
    17f8:	0000028f 	andeq	r0, r0, pc, lsl #5
    17fc:	19649102 	stmdbne	r4!, {r1, r8, ip, pc}^
    1800:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    1804:	66228701 	strtvs	r8, [r2], -r1, lsl #14
    1808:	02000002 	andeq	r0, r0, #2
    180c:	ab196091 	blge	659a58 <_bss_end+0x647da8>
    1810:	0100000c 	tsteq	r0, ip
    1814:	02a12f87 	adceq	r2, r1, #540	; 0x21c
    1818:	91020000 	mrsls	r0, (UNDEF: 2)
    181c:	1afe195c 	bne	fff87d94 <_bss_end+0xfff760e4>
    1820:	87010000 	strhi	r0, [r1, -r0]
    1824:	00026644 	andeq	r6, r2, r4, asr #12
    1828:	58910200 	ldmpl	r1, {r9}
    182c:	0100691d 	tsteq	r0, sp, lsl r9
    1830:	03190989 	tsteq	r9, #2244608	; 0x224000
    1834:	91020000 	mrsls	r0, (UNDEF: 2)
    1838:	96801e74 			; <UNDEFINED> instruction: 0x96801e74
    183c:	00980000 	addseq	r0, r8, r0
    1840:	6a1d0000 	bvs	741848 <_bss_end+0x72fb98>
    1844:	0e9c0100 	fmleqe	f0, f4, f0
    1848:	00000319 	andeq	r0, r0, r9, lsl r3
    184c:	1e709102 	expnes	f1, f2
    1850:	000096a8 	andeq	r9, r0, r8, lsr #13
    1854:	00000060 	andeq	r0, r0, r0, rrx
    1858:	0100631d 	tsteq	r0, sp, lsl r3
    185c:	027d0e9e 	rsbseq	r0, sp, #2528	; 0x9e0
    1860:	91020000 	mrsls	r0, (UNDEF: 2)
    1864:	0000006f 	andeq	r0, r0, pc, rrx
    1868:	00016f1b 	andeq	r6, r1, fp, lsl pc
    186c:	0b770100 	bleq	1dc1c74 <_bss_end+0x1daffc4>
    1870:	000003c9 	andeq	r0, r0, r9, asr #7
    1874:	0000954c 	andeq	r9, r0, ip, asr #10
    1878:	00000060 	andeq	r0, r0, r0, rrx
    187c:	03e59c01 	mvneq	r9, #256	; 0x100
    1880:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    1884:	8f000003 	svchi	0x00000003
    1888:	02000002 	andeq	r0, r0, #2
    188c:	4b197491 	blmi	65ead8 <_bss_end+0x64ce28>
    1890:	0100000a 	tsteq	r0, sl
    1894:	029a2577 	addseq	r2, sl, #499122176	; 0x1dc00000
    1898:	91020000 	mrsls	r0, (UNDEF: 2)
    189c:	4b1b0073 	blmi	6c1a70 <_bss_end+0x6afdc0>
    18a0:	01000001 	tsteq	r0, r1
    18a4:	03ff0b6a 	mvnseq	r0, #108544	; 0x1a800
    18a8:	94f80000 	ldrbtls	r0, [r8], #0
    18ac:	00540000 	subseq	r0, r4, r0
    18b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    18b4:	0000043f 	andeq	r0, r0, pc, lsr r4
    18b8:	00032c1c 	andeq	r2, r3, ip, lsl ip
    18bc:	00028f00 	andeq	r8, r2, r0, lsl #30
    18c0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    18c4:	6d756e1f 	ldclvs	14, cr6, [r5, #-124]!	; 0xffffff84
    18c8:	2d6a0100 	stfcse	f0, [sl, #-0]
    18cc:	00000266 	andeq	r0, r0, r6, ror #4
    18d0:	20709102 	rsbscs	r9, r0, r2, lsl #2
    18d4:	00000cc1 	andeq	r0, r0, r1, asr #25
    18d8:	6d236c01 	stcvs	12, cr6, [r3, #-4]!
    18dc:	05000002 	streq	r0, [r0, #-2]
    18e0:	01001c03 	tsteq	r0, r3, lsl #24
    18e4:	0cb82100 	ldfeqs	f2, [r8]
    18e8:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    18ec:	00043f11 	andeq	r3, r4, r1, lsl pc
    18f0:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    18f4:	0000010b 	andeq	r0, r0, fp, lsl #2
    18f8:	00027d22 	andeq	r7, r2, r2, lsr #26
    18fc:	00044f00 	andeq	r4, r4, r0, lsl #30
    1900:	02662300 	rsbeq	r2, r6, #0, 6
    1904:	000f0000 	andeq	r0, pc, r0
    1908:	00012724 	andeq	r2, r1, r4, lsr #14
    190c:	0b630100 	bleq	18c1d14 <_bss_end+0x18b0064>
    1910:	00000469 	andeq	r0, r0, r9, ror #8
    1914:	000094c4 	andeq	r9, r0, r4, asr #9
    1918:	00000034 	andeq	r0, r0, r4, lsr r0
    191c:	04859c01 	streq	r9, [r5], #3073	; 0xc01
    1920:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    1924:	8f000003 	svchi	0x00000003
    1928:	02000002 	andeq	r0, r0, #2
    192c:	53197491 	tstpl	r9, #-1862270976	; 0x91000000
    1930:	0100000a 	tsteq	r0, sl
    1934:	00323763 	eorseq	r3, r2, r3, ror #14
    1938:	91020000 	mrsls	r0, (UNDEF: 2)
    193c:	031b0070 	tsteq	fp, #112	; 0x70
    1940:	01000001 	tsteq	r0, r1
    1944:	049f0b57 	ldreq	r0, [pc], #2903	; 194c <CPSR_IRQ_INHIBIT+0x18cc>
    1948:	944c0000 	strbls	r0, [ip], #-0
    194c:	00780000 	rsbseq	r0, r8, r0
    1950:	9c010000 	stcls	0, cr0, [r1], {-0}
    1954:	000004d2 	ldrdeq	r0, [r0], -r2
    1958:	00032c1c 	andeq	r2, r3, ip, lsl ip
    195c:	00028f00 	andeq	r8, r2, r0, lsl #30
    1960:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1964:	7274731f 	rsbsvc	r7, r4, #2080374784	; 0x7c000000
    1968:	2c570100 	ldfcse	f0, [r7], {-0}
    196c:	00000272 	andeq	r0, r0, r2, ror r2
    1970:	1e689102 	lgnnee	f1, f2
    1974:	00009460 	andeq	r9, r0, r0, ror #8
    1978:	0000004c 	andeq	r0, r0, ip, asr #32
    197c:	0100691d 	tsteq	r0, sp, lsl r9
    1980:	02661759 	rsbeq	r1, r6, #23330816	; 0x1640000
    1984:	91020000 	mrsls	r0, (UNDEF: 2)
    1988:	1b000074 	blne	1b60 <CPSR_IRQ_INHIBIT+0x1ae0>
    198c:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1990:	ec0b4501 	cfstr32	mvfx4, [fp], {1}
    1994:	a4000004 	strge	r0, [r0], #-4
    1998:	a8000093 	stmdage	r0, {r0, r1, r4, r7}
    199c:	01000000 	mrseq	r0, (UNDEF: 0)
    19a0:	0005069c 	muleq	r5, ip, r6
    19a4:	032c1c00 			; <UNDEFINED> instruction: 0x032c1c00
    19a8:	028f0000 	addeq	r0, pc, #0
    19ac:	91020000 	mrsls	r0, (UNDEF: 2)
    19b0:	00631f74 	rsbeq	r1, r3, r4, ror pc
    19b4:	7d254501 	cfstr32vc	mvfx4, [r5, #-4]!
    19b8:	02000002 	andeq	r0, r0, #2
    19bc:	24007391 	strcs	r7, [r0], #-913	; 0xfffffc6f
    19c0:	000001c7 	andeq	r0, r0, r7, asr #3
    19c4:	20064001 	andcs	r4, r6, r1
    19c8:	5c000005 	stcpl	0, cr0, [r0], {5}
    19cc:	2c000098 	stccs	0, cr0, [r0], {152}	; 0x98
    19d0:	01000000 	mrseq	r0, (UNDEF: 0)
    19d4:	00052d9c 	muleq	r5, ip, sp
    19d8:	032c1c00 			; <UNDEFINED> instruction: 0x032c1c00
    19dc:	028f0000 	addeq	r0, pc, #0
    19e0:	91020000 	mrsls	r0, (UNDEF: 2)
    19e4:	e1240074 	bkpt	0x4004
    19e8:	01000001 	tsteq	r0, r1
    19ec:	05470630 	strbeq	r0, [r7, #-1584]	; 0xfffff9d0
    19f0:	92740000 	rsbsls	r0, r4, #0
    19f4:	01300000 	teqeq	r0, r0
    19f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    19fc:	0000059d 	muleq	r0, sp, r5
    1a00:	00032c1c 	andeq	r2, r3, ip, lsl ip
    1a04:	00028f00 	andeq	r8, r2, r0, lsl #30
    1a08:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    1a0c:	00928425 	addseq	r8, r2, r5, lsr #8
    1a10:	0000b000 	andeq	fp, r0, r0
    1a14:	00058500 	andeq	r8, r5, r0, lsl #10
    1a18:	00791d00 	rsbseq	r1, r9, r0, lsl #26
    1a1c:	66173201 	ldrvs	r3, [r7], -r1, lsl #4
    1a20:	02000002 	andeq	r0, r0, #2
    1a24:	a01e7491 	mulsge	lr, r1, r4
    1a28:	84000092 	strhi	r0, [r0], #-146	; 0xffffff6e
    1a2c:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a30:	34010078 	strcc	r0, [r1], #-120	; 0xffffff88
    1a34:	0002661b 	andeq	r6, r2, fp, lsl r6
    1a38:	70910200 	addsvc	r0, r1, r0, lsl #4
    1a3c:	341e0000 	ldrcc	r0, [lr], #-0
    1a40:	60000093 	mulvs	r0, r3, r0
    1a44:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a48:	3a010078 	bcc	41c30 <_bss_end+0x2ff80>
    1a4c:	00026617 	andeq	r6, r2, r7, lsl r6
    1a50:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1a54:	931b0000 	tstls	fp, #0
    1a58:	01000001 	tsteq	r0, r1
    1a5c:	05b70621 	ldreq	r0, [r7, #1569]!	; 0x621
    1a60:	97d40000 	ldrbls	r0, [r4, r0]
    1a64:	00880000 	addeq	r0, r8, r0
    1a68:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a6c:	000005c4 	andeq	r0, r0, r4, asr #11
    1a70:	00032c1c 	andeq	r2, r3, ip, lsl ip
    1a74:	00028f00 	andeq	r8, r2, r0, lsl #30
    1a78:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1a7c:	00c41b00 	sbceq	r1, r4, r0, lsl #22
    1a80:	14010000 	strne	r0, [r1], #-0
    1a84:	0005de06 	andeq	sp, r5, r6, lsl #28
    1a88:	0091cc00 	addseq	ip, r1, r0, lsl #24
    1a8c:	0000a800 	andeq	sl, r0, r0, lsl #16
    1a90:	199c0100 	ldmibne	ip, {r8}
    1a94:	1c000006 	stcne	0, cr0, [r0], {6}
    1a98:	0000032c 	andeq	r0, r0, ip, lsr #6
    1a9c:	0000028f 	andeq	r0, r0, pc, lsl #5
    1aa0:	1e6c9102 	lgnnee	f1, f2
    1aa4:	000091e4 	andeq	r9, r0, r4, ror #3
    1aa8:	00000084 	andeq	r0, r0, r4, lsl #1
    1aac:	0100791d 	tsteq	r0, sp, lsl r9
    1ab0:	02661718 	rsbeq	r1, r6, #24, 14	; 0x600000
    1ab4:	91020000 	mrsls	r0, (UNDEF: 2)
    1ab8:	92001e74 	andls	r1, r0, #116, 28	; 0x740
    1abc:	00580000 	subseq	r0, r8, r0
    1ac0:	781d0000 	ldmdavc	sp, {}	; <UNPREDICTABLE>
    1ac4:	1b1a0100 	blne	681ecc <_bss_end+0x67021c>
    1ac8:	00000266 	andeq	r0, r0, r6, ror #4
    1acc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    1ad0:	ad240000 	stcge	0, cr0, [r4, #-0]
    1ad4:	01000001 	tsteq	r0, r1
    1ad8:	0633060e 	ldrteq	r0, [r3], -lr, lsl #12
    1adc:	979c0000 	ldrls	r0, [ip, r0]
    1ae0:	00380000 	eorseq	r0, r8, r0
    1ae4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ae8:	00000640 	andeq	r0, r0, r0, asr #12
    1aec:	00032c1c 	andeq	r2, r3, ip, lsl ip
    1af0:	00028f00 	andeq	r8, r2, r0, lsl #30
    1af4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1af8:	00962600 	addseq	r2, r6, r0, lsl #12
    1afc:	05010000 	streq	r0, [r1, #-0]
    1b00:	00065101 	andeq	r5, r6, r1, lsl #2
    1b04:	067f0000 	ldrbteq	r0, [pc], -r0
    1b08:	2c270000 	stccs	0, cr0, [r7], #-0
    1b0c:	8f000003 	svchi	0x00000003
    1b10:	28000002 	stmdacs	r0, {r1}
    1b14:	00000b71 	andeq	r0, r0, r1, ror fp
    1b18:	66210501 	strtvs	r0, [r1], -r1, lsl #10
    1b1c:	28000002 	stmdacs	r0, {r1}
    1b20:	00000c18 	andeq	r0, r0, r8, lsl ip
    1b24:	66410501 	strbvs	r0, [r1], -r1, lsl #10
    1b28:	28000002 	stmdacs	r0, {r1}
    1b2c:	00000bd8 	ldrdeq	r0, [r0], -r8
    1b30:	66550501 	ldrbvs	r0, [r5], -r1, lsl #10
    1b34:	00000002 	andeq	r0, r0, r2
    1b38:	00064029 	andeq	r4, r6, r9, lsr #32
    1b3c:	000a7100 	andeq	r7, sl, r0, lsl #2
    1b40:	00069600 	andeq	r9, r6, r0, lsl #12
    1b44:	00915400 	addseq	r5, r1, r0, lsl #8
    1b48:	00007800 	andeq	r7, r0, r0, lsl #16
    1b4c:	2a9c0100 	bcs	fe701f54 <_bss_end+0xfe6f02a4>
    1b50:	00000651 	andeq	r0, r0, r1, asr r6
    1b54:	2a749102 	bcs	1d25f64 <_bss_end+0x1d142b4>
    1b58:	0000065a 	andeq	r0, r0, sl, asr r6
    1b5c:	2a709102 	bcs	1c25f6c <_bss_end+0x1c142bc>
    1b60:	00000666 	andeq	r0, r0, r6, ror #12
    1b64:	2a6c9102 	bcs	1b25f74 <_bss_end+0x1b142c4>
    1b68:	00000672 	andeq	r0, r0, r2, ror r6
    1b6c:	00689102 	rsbeq	r9, r8, r2, lsl #2
    1b70:	0010d400 	andseq	sp, r0, r0, lsl #8
    1b74:	e1000400 	tst	r0, r0, lsl #8
    1b78:	04000008 	streq	r0, [r0], #-8
    1b7c:	00001401 	andeq	r1, r0, r1, lsl #8
    1b80:	0d3a0400 	cfldrseq	mvf0, [sl, #-0]
    1b84:	00c50000 	sbceq	r0, r5, r0
    1b88:	00900000 	addseq	r0, r0, r0
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	0ba00000 	bleq	fe801b98 <_bss_end+0xfe7efee8>
    1b94:	01020000 	mrseq	r0, (UNDEF: 2)
    1b98:	00057308 	andeq	r7, r5, r8, lsl #6
    1b9c:	00250300 	eoreq	r0, r5, r0, lsl #6
    1ba0:	02020000 	andeq	r0, r2, #0
    1ba4:	00059905 	andeq	r9, r5, r5, lsl #18
    1ba8:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1bac:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1bb0:	00003803 	andeq	r3, r0, r3, lsl #16
    1bb4:	09820500 	stmibeq	r2, {r8, sl}
    1bb8:	07040000 	streq	r0, [r4, -r0]
    1bbc:	00005507 	andeq	r5, r0, r7, lsl #10
    1bc0:	00440300 	subeq	r0, r4, r0, lsl #6
    1bc4:	01020000 	mrseq	r0, (UNDEF: 2)
    1bc8:	00056a08 	andeq	r6, r5, r8, lsl #20
    1bcc:	00550300 	subseq	r0, r5, r0, lsl #6
    1bd0:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
    1bd4:	04000007 	streq	r0, [r0], #-7
    1bd8:	00720708 	rsbseq	r0, r2, r8, lsl #14
    1bdc:	61030000 	mrsvs	r0, (UNDEF: 3)
    1be0:	02000000 	andeq	r0, r0, #0
    1be4:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    1be8:	e4050000 	str	r0, [r5], #-0
    1bec:	04000005 	streq	r0, [r0], #-5
    1bf0:	008f0709 	addeq	r0, pc, r9, lsl #14
    1bf4:	79030000 	stmdbvc	r3, {}	; <UNPREDICTABLE>
    1bf8:	06000000 	streq	r0, [r0], -r0
    1bfc:	00000079 	andeq	r0, r0, r9, ror r0
    1c00:	96070402 	strls	r0, [r7], -r2, lsl #8
    1c04:	03000045 	movweq	r0, #69	; 0x45
    1c08:	0000008f 	andeq	r0, r0, pc, lsl #1
    1c0c:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
    1c10:	0b050500 	bleq	143018 <_bss_end+0x131368>
    1c14:	00000194 	muleq	r0, r4, r1
    1c18:	00048708 	andeq	r8, r4, r8, lsl #14
    1c1c:	1c070500 	cfstr32ne	mvfx0, [r7], {-0}
    1c20:	00000096 	muleq	r0, r6, r0
    1c24:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    1c28:	0005cc08 	andeq	ip, r5, r8, lsl #24
    1c2c:	1d0a0500 	cfstr32ne	mvfx0, [sl, #-0]
    1c30:	000001a0 	andeq	r0, r0, r0, lsr #3
    1c34:	20000000 	andcs	r0, r0, r0
    1c38:	00045208 	andeq	r5, r4, r8, lsl #4
    1c3c:	1d0d0500 	cfstr32ne	mvfx0, [sp, #-0]
    1c40:	000001a0 	andeq	r0, r0, r0, lsr #3
    1c44:	20200000 	eorcs	r0, r0, r0
    1c48:	00058a09 	andeq	r8, r5, r9, lsl #20
    1c4c:	18100500 	ldmdane	r0, {r8, sl}
    1c50:	00000085 	andeq	r0, r0, r5, lsl #1
    1c54:	03730836 	cmneq	r3, #3538944	; 0x360000
    1c58:	42050000 	andmi	r0, r5, #0
    1c5c:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1c60:	21500000 	cmpcs	r0, r0
    1c64:	034a0820 	movteq	r0, #43040	; 0xa820
    1c68:	71050000 	mrsvc	r0, (UNDEF: 5)
    1c6c:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1c70:	00b20000 	adcseq	r0, r2, r0
    1c74:	02b60820 	adcseq	r0, r6, #32, 16	; 0x200000
    1c78:	a4050000 	strge	r0, [r5], #-0
    1c7c:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1c80:	00b40000 	adcseq	r0, r4, r0
    1c84:	03640820 	cmneq	r4, #32, 16	; 0x200000
    1c88:	b3050000 	movwlt	r0, #20480	; 0x5000
    1c8c:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1c90:	10400000 	subne	r0, r0, r0
    1c94:	03310820 	teqeq	r1, #32, 16	; 0x200000
    1c98:	be050000 	cdplt	0, 0, cr0, cr5, cr0, {0}
    1c9c:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1ca0:	20500000 	subscs	r0, r0, r0
    1ca4:	03ef0820 	mvneq	r0, #32, 16	; 0x200000
    1ca8:	bf050000 	svclt	0x00050000
    1cac:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1cb0:	80400000 	subhi	r0, r0, r0
    1cb4:	045c0820 	ldrbeq	r0, [ip], #-2080	; 0xfffff7e0
    1cb8:	c0050000 	andgt	r0, r5, r0
    1cbc:	0001a01d 	andeq	sl, r1, sp, lsl r0
    1cc0:	80500000 	subshi	r0, r0, r0
    1cc4:	07a10a20 	streq	r0, [r1, r0, lsr #20]!
    1cc8:	04050000 	streq	r0, [r5], #-0
    1ccc:	00000038 	andeq	r0, r0, r8, lsr r0
    1cd0:	0b10c205 	bleq	4324ec <_bss_end+0x42083c>
    1cd4:	0000358a 	andeq	r3, r0, sl, lsl #11
    1cd8:	0a0c0b00 	beq	3048e0 <_bss_end+0x2f2c30>
    1cdc:	0b010000 	bleq	41ce4 <_bss_end+0x30034>
    1ce0:	0000094a 	andeq	r0, r0, sl, asr #18
    1ce4:	12880b02 	addne	r0, r8, #2048	; 0x800
    1ce8:	0b030000 	bleq	c1cf0 <_bss_end+0xb0040>
    1cec:	00000868 	andeq	r0, r0, r8, ror #16
    1cf0:	08030b04 	stmdaeq	r3, {r2, r8, r9, fp}
    1cf4:	0b050000 	bleq	141cfc <_bss_end+0x13004c>
    1cf8:	00000749 	andeq	r0, r0, r9, asr #14
    1cfc:	07e40b06 	strbeq	r0, [r4, r6, lsl #22]!
    1d00:	00070000 	andeq	r0, r7, r0
    1d04:	00a70c00 	adceq	r0, r7, r0, lsl #24
    1d08:	04020000 	streq	r0, [r2], #-0
    1d0c:	00459107 	subeq	r9, r5, r7, lsl #2
    1d10:	01990300 	orrseq	r0, r9, r0, lsl #6
    1d14:	b70c0000 	strlt	r0, [ip, -r0]
    1d18:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d1c:	000000c7 	andeq	r0, r0, r7, asr #1
    1d20:	0000d70c 	andeq	sp, r0, ip, lsl #14
    1d24:	00e40c00 	rsceq	r0, r4, r0, lsl #24
    1d28:	f40c0000 	vst4.8	{d0-d3}, [ip], r0
    1d2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d30:	00000104 	andeq	r0, r0, r4, lsl #2
    1d34:	0001140c 	andeq	r1, r1, ip, lsl #8
    1d38:	01240c00 			; <UNDEFINED> instruction: 0x01240c00
    1d3c:	340c0000 	strcc	r0, [ip], #-0
    1d40:	0c000001 	stceq	0, cr0, [r0], {1}
    1d44:	00000144 	andeq	r0, r0, r4, asr #2
    1d48:	00098a0d 	andeq	r8, r9, sp, lsl #20
    1d4c:	14060300 	strne	r0, [r6], #-768	; 0xfffffd00
    1d50:	00000085 	andeq	r0, r0, r5, lsl #1
    1d54:	00700305 	rsbseq	r0, r0, r5, lsl #6
    1d58:	540e0001 	strpl	r0, [lr], #-1
    1d5c:	14000007 	strne	r0, [r0], #-7
    1d60:	e8070b03 	stmda	r7, {r0, r1, r8, r9, fp}
    1d64:	0f000002 	svceq	0x00000002
    1d68:	000007d7 	ldrdeq	r0, [r0], -r7
    1d6c:	e80a1003 	stmda	sl, {r0, r1, ip}
    1d70:	00000002 	andeq	r0, r0, r2
    1d74:	0008600f 	andeq	r6, r8, pc
    1d78:	0d120300 	ldceq	3, cr0, [r2, #-0]
    1d7c:	000002f4 	strdeq	r0, [r0], -r4
    1d80:	09420f01 	stmdbeq	r2, {r0, r8, r9, sl, fp}^
    1d84:	14030000 	strne	r0, [r3], #-0
    1d88:	0000790e 	andeq	r7, r0, lr, lsl #18
    1d8c:	f20f0c00 			; <UNDEFINED> instruction: 0xf20f0c00
    1d90:	03000008 	movweq	r0, #8
    1d94:	00610e16 	rsbeq	r0, r1, r6, lsl lr
    1d98:	10100000 	andsne	r0, r0, r0
    1d9c:	00000754 	andeq	r0, r0, r4, asr r7
    1da0:	e9051903 	stmdb	r5, {r0, r1, r8, fp, ip}
    1da4:	04000007 	streq	r0, [r0], #-7
    1da8:	01000003 	tsteq	r0, r3
    1dac:	00024401 	andeq	r4, r2, r1, lsl #8
    1db0:	00024a00 	andeq	r4, r2, r0, lsl #20
    1db4:	03041100 	movweq	r1, #16640	; 0x4100
    1db8:	12000000 	andne	r0, r0, #0
    1dbc:	00000956 	andeq	r0, r0, r6, asr r9
    1dc0:	720a1b03 	andvc	r1, sl, #3072	; 0xc00
    1dc4:	01000008 	tsteq	r0, r8
    1dc8:	0000025f 	andeq	r0, r0, pc, asr r2
    1dcc:	0000026a 	andeq	r0, r0, sl, ror #4
    1dd0:	00030411 	andeq	r0, r3, r1, lsl r4
    1dd4:	00611300 	rsbeq	r1, r1, r0, lsl #6
    1dd8:	14000000 	strne	r0, [r0], #-0
    1ddc:	00000f77 	andeq	r0, r0, r7, ror pc
    1de0:	cf172203 	svcgt	0x00172203
    1de4:	eb00000f 	bl	1e28 <CPSR_IRQ_INHIBIT+0x1da8>
    1de8:	01000004 	tsteq	r0, r4
    1dec:	0000028a 	andeq	r0, r0, sl, lsl #5
    1df0:	00000295 	muleq	r0, r5, r2
    1df4:	55005415 	strpl	r5, [r0, #-1045]	; 0xfffffbeb
    1df8:	11000000 	mrsne	r0, (UNDEF: 0)
    1dfc:	00000304 	andeq	r0, r0, r4, lsl #6
    1e00:	000a3d13 	andeq	r3, sl, r3, lsl sp
    1e04:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    1e08:	03000011 	movweq	r0, #17
    1e0c:	0ff21722 	svceq	0x00f21722
    1e10:	04eb0000 	strbteq	r0, [fp], #0
    1e14:	b5010000 	strlt	r0, [r1, #-0]
    1e18:	c0000002 	andgt	r0, r0, r2
    1e1c:	15000002 	strne	r0, [r0, #-2]
    1e20:	00380054 	eorseq	r0, r8, r4, asr r0
    1e24:	04110000 	ldreq	r0, [r1], #-0
    1e28:	13000003 	movwne	r0, #3
    1e2c:	00000a7d 	andeq	r0, r0, sp, ror sl
    1e30:	14031600 	strne	r1, [r3], #-1536	; 0xfffffa00
    1e34:	22030000 	andcs	r0, r3, #0
    1e38:	0012ae17 	andseq	sl, r2, r7, lsl lr
    1e3c:	0004eb00 	andeq	lr, r4, r0, lsl #22
    1e40:	02dc0100 	sbcseq	r0, ip, #0, 2
    1e44:	54150000 	ldrpl	r0, [r5], #-0
    1e48:	00050f00 	andeq	r0, r5, r0, lsl #30
    1e4c:	03041100 	movweq	r1, #16640	; 0x4100
    1e50:	bd130000 	ldclt	0, cr0, [r3, #-0]
    1e54:	0000000a 	andeq	r0, r0, sl
    1e58:	02010200 	andeq	r0, r1, #0, 4
    1e5c:	0000454d 	andeq	r4, r0, sp, asr #10
    1e60:	0002e803 	andeq	lr, r2, r3, lsl #16
    1e64:	00441700 	subeq	r1, r4, r0, lsl #14
    1e68:	03040000 	movweq	r0, #16384	; 0x4000
    1e6c:	8f180000 	svchi	0x00180000
    1e70:	07000000 	streq	r0, [r0, -r0]
    1e74:	e9041900 	stmdb	r4, {r8, fp, ip}
    1e78:	03000001 	movweq	r0, #1
    1e7c:	00000304 	andeq	r0, r0, r4, lsl #6
    1e80:	000f720e 	andeq	r7, pc, lr, lsl #4
    1e84:	2d032400 	cfstrscs	mvf2, [r3, #-0]
    1e88:	0004bd07 	andeq	fp, r4, r7, lsl #26
    1e8c:	09a30f00 	stmibeq	r3!, {r8, r9, sl, fp}
    1e90:	31030000 	mrscc	r0, (UNDEF: 3)
    1e94:	0004c81e 	andeq	ip, r4, lr, lsl r8
    1e98:	650f0000 	strvs	r0, [pc, #-0]	; 1ea0 <CPSR_IRQ_INHIBIT+0x1e20>
    1e9c:	03000007 	movweq	r0, #7
    1ea0:	02e80a33 	rsceq	r0, r8, #208896	; 0x33000
    1ea4:	0f040000 	svceq	0x00040000
    1ea8:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
    1eac:	790e3603 	stmdbvc	lr, {r0, r1, r9, sl, ip, sp}
    1eb0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1eb4:	0008e90f 	andeq	lr, r8, pc, lsl #18
    1eb8:	0e380300 	cdpeq	3, 3, cr0, cr8, cr0, {0}
    1ebc:	00000079 	andeq	r0, r0, r9, ror r0
    1ec0:	0a130f0c 	beq	4c5af8 <_bss_end+0x4b3e48>
    1ec4:	3b030000 	blcc	c1ecc <_bss_end+0xb021c>
    1ec8:	0001e916 	andeq	lr, r1, r6, lsl r9
    1ecc:	521a1000 	andspl	r1, sl, #0
    1ed0:	03006765 	movweq	r6, #1893	; 0x765
    1ed4:	077c183e 			; <UNDEFINED> instruction: 0x077c183e
    1ed8:	04cd0000 	strbeq	r0, [sp], #0
    1edc:	76020000 	strvc	r0, [r2], -r0
    1ee0:	81000003 	tsthi	r0, r3
    1ee4:	11000003 	tstne	r0, r3
    1ee8:	000004d3 	ldrdeq	r0, [r0], -r3
    1eec:	00015413 	andeq	r5, r1, r3, lsl r4
    1ef0:	62120000 	andsvs	r0, r2, #0
    1ef4:	03000009 	movweq	r0, #9
    1ef8:	07a90a41 	streq	r0, [r9, r1, asr #20]!
    1efc:	96020000 	strls	r0, [r2], -r0
    1f00:	9c000003 	stcls	0, cr0, [r0], {3}
    1f04:	11000003 	tstne	r0, r3
    1f08:	000004d3 	ldrdeq	r0, [r0], -r3
    1f0c:	0f721400 	svceq	0x00721400
    1f10:	44030000 	strmi	r0, [r3], #-0
    1f14:	0007c005 	andeq	ip, r7, r5
    1f18:	0004d300 	andeq	sp, r4, r0, lsl #6
    1f1c:	03b50100 			; <UNDEFINED> instruction: 0x03b50100
    1f20:	03ca0000 	biceq	r0, sl, #0
    1f24:	d3110000 	tstle	r1, #0
    1f28:	13000004 	movwne	r0, #4
    1f2c:	00000199 	muleq	r0, r9, r1
    1f30:	00007913 	andeq	r7, r0, r3, lsl r9
    1f34:	00791300 	rsbseq	r1, r9, r0, lsl #6
    1f38:	14000000 	strne	r0, [r0], #-0
    1f3c:	00000a20 	andeq	r0, r0, r0, lsr #20
    1f40:	3b0a4703 	blcc	293b54 <_bss_end+0x281ea4>
    1f44:	e800000a 	stmda	r0, {r1, r3}
    1f48:	01000002 	tsteq	r0, r2
    1f4c:	000003e3 	andeq	r0, r0, r3, ror #7
    1f50:	000003e9 	andeq	r0, r0, r9, ror #7
    1f54:	0004d311 	andeq	sp, r4, r1, lsl r3
    1f58:	ad120000 	ldcge	0, cr0, [r2, #-0]
    1f5c:	03000009 	movweq	r0, #9
    1f60:	089f0a49 	ldmeq	pc, {r0, r3, r6, r9, fp}	; <UNPREDICTABLE>
    1f64:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    1f68:	04000003 	streq	r0, [r0], #-3
    1f6c:	11000004 	tstne	r0, r4
    1f70:	000004d3 	ldrdeq	r0, [r0], -r3
    1f74:	073f1400 	ldreq	r1, [pc, -r0, lsl #8]!
    1f78:	4b030000 	blmi	c1f80 <_bss_end+0xb02d0>
    1f7c:	0008fb0a 	andeq	pc, r8, sl, lsl #22
    1f80:	0002e800 	andeq	lr, r2, r0, lsl #16
    1f84:	041d0100 	ldreq	r0, [sp], #-256	; 0xffffff00
    1f88:	04230000 	strteq	r0, [r3], #-0
    1f8c:	d9110000 	ldmdble	r1, {}	; <UNPREDICTABLE>
    1f90:	00000004 	andeq	r0, r0, r4
    1f94:	00092312 	andeq	r2, r9, r2, lsl r3
    1f98:	0a4e0300 	beq	1382ba0 <_bss_end+0x1370ef0>
    1f9c:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
    1fa0:	00043801 	andeq	r3, r4, r1, lsl #16
    1fa4:	00044d00 	andeq	r4, r4, r0, lsl #26
    1fa8:	04d31100 	ldrbeq	r1, [r3], #256	; 0x100
    1fac:	61130000 	tstvs	r3, r0
    1fb0:	13000000 	movwne	r0, #0
    1fb4:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1fb8:	00007913 	andeq	r7, r0, r3, lsl r9
    1fbc:	cf120000 	svcgt	0x00120000
    1fc0:	03000007 	movweq	r0, #7
    1fc4:	0a250a50 	beq	94490c <_bss_end+0x932c5c>
    1fc8:	62010000 	andvs	r0, r1, #0
    1fcc:	77000004 	strvc	r0, [r0, -r4]
    1fd0:	11000004 	tstne	r0, r4
    1fd4:	000004d3 	ldrdeq	r0, [r0], -r3
    1fd8:	00006113 	andeq	r6, r0, r3, lsl r1
    1fdc:	04e51300 	strbteq	r1, [r5], #768	; 0x300
    1fe0:	79130000 	ldmdbvc	r3, {}	; <UNPREDICTABLE>
    1fe4:	00000000 	andeq	r0, r0, r0
    1fe8:	00091114 	andeq	r1, r9, r4, lsl r1
    1fec:	17530300 	ldrbne	r0, [r3, -r0, lsl #6]
    1ff0:	000008c4 	andeq	r0, r0, r4, asr #17
    1ff4:	000004eb 	andeq	r0, r0, fp, ror #9
    1ff8:	00049001 	andeq	r9, r4, r1
    1ffc:	00049b00 	andeq	r9, r4, r0, lsl #22
    2000:	04d31100 	ldrbeq	r1, [r3], #256	; 0x100
    2004:	61130000 	tstvs	r3, r0
    2008:	00000000 	andeq	r0, r0, r0
    200c:	00083c1b 	andeq	r3, r8, fp, lsl ip
    2010:	0a550300 	beq	1542c18 <_bss_end+0x1530f68>
    2014:	0000080d 	andeq	r0, r0, sp, lsl #16
    2018:	0004ac01 	andeq	sl, r4, r1, lsl #24
    201c:	04d31100 	ldrbeq	r1, [r3], #256	; 0x100
    2020:	eb130000 	bl	4c2028 <_bss_end+0x4b0378>
    2024:	13000004 	movwne	r0, #4
    2028:	000002e8 	andeq	r0, r0, r8, ror #5
    202c:	0f030000 	svceq	0x00030000
    2030:	19000003 	stmdbne	r0, {r0, r1}
    2034:	00008a04 	andeq	r8, r0, r4, lsl #20
    2038:	04c20300 	strbeq	r0, [r2], #768	; 0x300
    203c:	041c0000 	ldreq	r0, [ip], #-0
    2040:	0000008a 	andeq	r0, r0, sl, lsl #1
    2044:	030f0419 	movweq	r0, #62489	; 0xf419
    2048:	04190000 	ldreq	r0, [r9], #-0
    204c:	000004bd 			; <UNDEFINED> instruction: 0x000004bd
    2050:	002c0419 	eoreq	r0, ip, r9, lsl r4
    2054:	04190000 	ldreq	r0, [r9], #-0
    2058:	00000025 	andeq	r0, r0, r5, lsr #32
    205c:	01e9041c 	mvneq	r0, ip, lsl r4
    2060:	7c1d0000 	ldcvc	0, cr0, [sp], {-0}
    2064:	03000009 	movweq	r0, #9
    2068:	030f0d59 	movweq	r0, #64857	; 0xfd59
    206c:	800d0000 	andhi	r0, sp, r0
    2070:	06000012 			; <UNDEFINED> instruction: 0x06000012
    2074:	006d1406 	rsbeq	r1, sp, r6, lsl #8
    2078:	03050000 	movweq	r0, #20480	; 0x5000
    207c:	00010074 	andeq	r0, r1, r4, ror r0
    2080:	000def1e 	andeq	lr, sp, lr, lsl pc
    2084:	38040500 	stmdacc	r4, {r8, sl}
    2088:	06000000 	streq	r0, [r0], -r0
    208c:	05ee0c09 	strbeq	r0, [lr, #3081]!	; 0xc09
    2090:	4a0b0000 	bmi	2c2098 <_bss_end+0x2b03e8>
    2094:	0000000f 	andeq	r0, r0, pc
    2098:	000cd50b 	andeq	sp, ip, fp, lsl #10
    209c:	f80bc000 			; <UNDEFINED> instruction: 0xf80bc000
    20a0:	40000012 	andmi	r0, r0, r2, lsl r0
    20a4:	0013aa0b 	andseq	sl, r3, fp, lsl #20
    20a8:	600b8100 	andvs	r8, fp, r0, lsl #2
    20ac:	a4000011 	strge	r0, [r0], #-17	; 0xffffffef
    20b0:	00102b0b 	andseq	r2, r0, fp, lsl #22
    20b4:	c50ba500 	strgt	sl, [fp, #-1280]	; 0xfffffb00
    20b8:	a6000011 			; <UNDEFINED> instruction: 0xa6000011
    20bc:	00126f0b 	andseq	r6, r2, fp, lsl #30
    20c0:	170ba700 	strne	sl, [fp, -r0, lsl #14]
    20c4:	ae000013 	mcrge	0, 0, r0, cr0, cr3, {0}
    20c8:	000faa0b 	andeq	sl, pc, fp, lsl #20
    20cc:	4e1faf00 	cdpmi	15, 1, cr10, cr15, cr0, {0}
    20d0:	e300706f 	movw	r7, #111	; 0x6f
    20d4:	0011f30b 	andseq	pc, r1, fp, lsl #6
    20d8:	930b2600 	movwls	r2, #46592	; 0xb600
    20dc:	27000013 	smladcs	r0, r3, r0, r0
    20e0:	000e2c0b 	andeq	r2, lr, fp, lsl #24
    20e4:	e80b2900 	stmda	fp, {r8, fp, sp}
    20e8:	2a000013 	bcs	213c <CPSR_IRQ_INHIBIT+0x20bc>
    20ec:	000eb10b 	andeq	fp, lr, fp, lsl #2
    20f0:	d80b2e00 	stmdale	fp, {r9, sl, fp, sp}
    20f4:	2f000013 	svccs	0x00000013
    20f8:	0010760b 	andseq	r7, r0, fp, lsl #12
    20fc:	930ba300 	movwls	sl, #45824	; 0xb300
    2100:	0000000d 	andeq	r0, r0, sp
    2104:	0010ac0b 	andseq	sl, r0, fp, lsl #24
    2108:	540b1000 	strpl	r1, [fp], #-0
    210c:	2000000e 	andcs	r0, r0, lr
    2110:	000fb50b 	andeq	fp, pc, fp, lsl #10
    2114:	8a0b2100 	bhi	2ca51c <_bss_end+0x2b886c>
    2118:	22000010 	andcs	r0, r0, #16
    211c:	0011390b 	andseq	r3, r1, fp, lsl #18
    2120:	dd0b4000 	stcle	0, cr4, [fp, #-0]
    2124:	a0000012 	andge	r0, r0, r2, lsl r0
    2128:	00111a0b 	andseq	r1, r1, fp, lsl #20
    212c:	9d0ba800 	stcls	8, cr10, [fp, #-0]
    2130:	c0000012 	andgt	r0, r0, r2, lsl r0
    2134:	0010f80b 	andseq	pc, r0, fp, lsl #16
    2138:	2b0bc800 	blcs	2f4140 <_bss_end+0x2e2490>
    213c:	d3000012 	movwle	r0, #18
    2140:	000ea40b 	andeq	sl, lr, fp, lsl #8
    2144:	b90bda00 	stmdblt	fp, {r9, fp, ip, lr, pc}
    2148:	8d000011 	stchi	0, cr0, [r0, #-68]	; 0xffffffbc
    214c:	000ee10b 	andeq	lr, lr, fp, lsl #2
    2150:	fd0bd500 	stc2	5, cr13, [fp, #-0]
    2154:	d900000e 	stmdble	r0, {r1, r2, r3}
    2158:	000f120b 	andeq	r1, pc, fp, lsl #4
    215c:	0300d800 	movweq	sp, #2048	; 0x800
    2160:	0000050f 	andeq	r0, r0, pc, lsl #10
    2164:	00101a0e 	andseq	r1, r0, lr, lsl #20
    2168:	36061400 	strcc	r1, [r6], -r0, lsl #8
    216c:	00077407 	andeq	r7, r7, r7, lsl #8
    2170:	103a0f00 	eorsne	r0, sl, r0, lsl #30
    2174:	3a060000 	bcc	18217c <_bss_end+0x1704cc>
    2178:	0007790b 	andeq	r7, r7, fp, lsl #18
    217c:	650f0000 	strvs	r0, [pc, #-0]	; 2184 <CPSR_IRQ_INHIBIT+0x2104>
    2180:	06000007 	streq	r0, [r0], -r7
    2184:	02e80a3c 	rsceq	r0, r8, #60, 20	; 0x3c000
    2188:	0f040000 	svceq	0x00040000
    218c:	00000860 	andeq	r0, r0, r0, ror #16
    2190:	7f0e3e06 	svcvc	0x000e3e06
    2194:	08000007 	stmdaeq	r0, {r0, r1, r2}
    2198:	000e4d0f 	andeq	r4, lr, pc, lsl #26
    219c:	09400600 	stmdbeq	r0, {r9, sl}^
    21a0:	00000038 	andeq	r0, r0, r8, lsr r0
    21a4:	0ccd0f0c 	stcleq	15, cr0, [sp], {12}
    21a8:	40060000 	andmi	r0, r6, r0
    21ac:	00003811 	andeq	r3, r0, r1, lsl r8
    21b0:	3e121000 	cdpcc	0, 1, cr1, cr2, cr0, {0}
    21b4:	06000012 			; <UNDEFINED> instruction: 0x06000012
    21b8:	13480a44 	movtne	r0, #35396	; 0x8a44
    21bc:	56020000 	strpl	r0, [r2], -r0
    21c0:	66000006 	strvs	r0, [r0], -r6
    21c4:	11000006 	tstne	r0, r6
    21c8:	00000785 	andeq	r0, r0, r5, lsl #15
    21cc:	00050f13 	andeq	r0, r5, r3, lsl pc
    21d0:	00441300 	subeq	r1, r4, r0, lsl #6
    21d4:	14000000 	strne	r0, [r0], #-0
    21d8:	0000101a 	andeq	r1, r0, sl, lsl r0
    21dc:	d4054706 	strle	r4, [r5], #-1798	; 0xfffff8fa
    21e0:	85000011 	strhi	r0, [r0, #-17]	; 0xffffffef
    21e4:	01000007 	tsteq	r0, r7
    21e8:	0000067f 	andeq	r0, r0, pc, ror r6
    21ec:	0000068a 	andeq	r0, r0, sl, lsl #13
    21f0:	00078511 	andeq	r8, r7, r1, lsl r5
    21f4:	07791300 	ldrbeq	r1, [r9, -r0, lsl #6]!
    21f8:	14000000 	strne	r0, [r0], #-0
    21fc:	00000a20 	andeq	r0, r0, r0, lsr #20
    2200:	220a4a06 	andcs	r4, sl, #24576	; 0x6000
    2204:	e800000f 	stmda	r0, {r0, r1, r2, r3}
    2208:	01000002 	tsteq	r0, r2
    220c:	000006a3 	andeq	r0, r0, r3, lsr #13
    2210:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    2214:	00078511 	andeq	r8, r7, r1, lsl r5
    2218:	00381300 	eorseq	r1, r8, r0, lsl #6
    221c:	38130000 	ldmdacc	r3, {}	; <UNPREDICTABLE>
    2220:	00000000 	andeq	r0, r0, r0
    2224:	0009ad12 	andeq	sl, r9, r2, lsl sp
    2228:	0a4c0600 	beq	1303a30 <_bss_end+0x12f1d80>
    222c:	0000141c 	andeq	r1, r0, ip, lsl r4
    2230:	0006c801 	andeq	ip, r6, r1, lsl #16
    2234:	0006ce00 	andeq	ip, r6, r0, lsl #28
    2238:	07851100 	streq	r1, [r5, r0, lsl #2]
    223c:	14000000 	strne	r0, [r0], #-0
    2240:	0000073f 	andeq	r0, r0, pc, lsr r7
    2244:	6b0a4e06 	blvs	295a64 <_bss_end+0x283db4>
    2248:	e800000e 	stmda	r0, {r1, r2, r3}
    224c:	01000002 	tsteq	r0, r2
    2250:	000006e7 	andeq	r0, r0, r7, ror #13
    2254:	000006ed 	andeq	r0, r0, sp, ror #13
    2258:	00079011 	andeq	r9, r7, r1, lsl r0
    225c:	a2120000 	andsge	r0, r2, #0
    2260:	06000018 			; <UNDEFINED> instruction: 0x06000018
    2264:	10580a51 	subsne	r0, r8, r1, asr sl
    2268:	02010000 	andeq	r0, r1, #0
    226c:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    2270:	11000007 	tstne	r0, r7
    2274:	00000785 	andeq	r0, r0, r5, lsl #15
    2278:	0002e813 	andeq	lr, r2, r3, lsl r8
    227c:	c5120000 	ldrgt	r0, [r2, #-0]
    2280:	0600000f 	streq	r0, [r0], -pc
    2284:	124b0a53 	subne	r0, fp, #339968	; 0x53000
    2288:	22010000 	andcs	r0, r1, #0
    228c:	37000007 	strcc	r0, [r0, -r7]
    2290:	11000007 	tstne	r0, r7
    2294:	00000785 	andeq	r0, r0, r5, lsl #15
    2298:	00007913 	andeq	r7, r0, r3, lsl r9
    229c:	00791300 	rsbseq	r1, r9, r0, lsl #6
    22a0:	e8130000 	ldmda	r3, {}	; <UNPREDICTABLE>
    22a4:	00000002 	andeq	r0, r0, r2
    22a8:	000f4012 	andeq	r4, pc, r2, lsl r0	; <UNPREDICTABLE>
    22ac:	0a550600 	beq	1543ab4 <_bss_end+0x1531e04>
    22b0:	00000ce0 	andeq	r0, r0, r0, ror #25
    22b4:	00074c01 	andeq	r4, r7, r1, lsl #24
    22b8:	00075200 	andeq	r5, r7, r0, lsl #4
    22bc:	07851100 	streq	r1, [r5, r0, lsl #2]
    22c0:	1b000000 	blne	22c8 <CPSR_IRQ_INHIBIT+0x2248>
    22c4:	000010bd 	strheq	r1, [r0], -sp
    22c8:	a40a5806 	strge	r5, [sl], #-2054	; 0xfffff7fa
    22cc:	0100000d 	tsteq	r0, sp
    22d0:	00000763 	andeq	r0, r0, r3, ror #14
    22d4:	00078511 	andeq	r8, r7, r1, lsl r5
    22d8:	04df1300 	ldrbeq	r1, [pc], #768	; 22e0 <CPSR_IRQ_INHIBIT+0x2260>
    22dc:	79130000 	ldmdbvc	r3, {}	; <UNPREDICTABLE>
    22e0:	00000000 	andeq	r0, r0, r0
    22e4:	05f30300 	ldrbeq	r0, [r3, #768]!	; 0x300
    22e8:	041c0000 	ldreq	r0, [ip], #-0
    22ec:	0000030f 	andeq	r0, r0, pc, lsl #6
    22f0:	00440419 	subeq	r0, r4, r9, lsl r4
    22f4:	04190000 	ldreq	r0, [r9], #-0
    22f8:	000005f3 	strdeq	r0, [r0], -r3
    22fc:	00078503 	andeq	r8, r7, r3, lsl #10
    2300:	74041900 	strvc	r1, [r4], #-2304	; 0xfffff700
    2304:	03000007 	movweq	r0, #7
    2308:	00000790 	muleq	r0, r0, r7
    230c:	00121a1d 	andseq	r1, r2, sp, lsl sl
    2310:	195b0600 	ldmdbne	fp, {r9, sl}^
    2314:	000005f3 	strdeq	r0, [r0], -r3
    2318:	0013be20 	andseq	fp, r3, r0, lsr #28
    231c:	08011000 	stmdaeq	r1, {ip}
    2320:	0007e908 	andeq	lr, r7, r8, lsl #18
    2324:	0d080f00 	stceq	15, cr0, [r8, #-0]
    2328:	0a010000 	beq	42330 <_bss_end+0x30680>
    232c:	0007e920 	andeq	lr, r7, r0, lsr #18
    2330:	fb0f0000 	blx	3c233a <_bss_end+0x3b068a>
    2334:	0100000d 	tsteq	r0, sp
    2338:	07e9200b 	strbeq	r2, [r9, fp]!
    233c:	0f040000 	svceq	0x00040000
    2340:	00000e48 	andeq	r0, r0, r8, asr #28
    2344:	790e0c01 	stmdbvc	lr, {r0, sl, fp}
    2348:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    234c:	000e9c0f 	andeq	r9, lr, pc, lsl #24
    2350:	0a0d0100 	beq	342758 <_bss_end+0x330aa8>
    2354:	000002e8 	andeq	r0, r0, r8, ror #5
    2358:	0419000c 	ldreq	r0, [r9], #-12
    235c:	000007a7 	andeq	r0, r0, r7, lsr #15
    2360:	000e000e 	andeq	r0, lr, lr
    2364:	10010400 	andne	r0, r1, r0, lsl #8
    2368:	00088707 	andeq	r8, r8, r7, lsl #14
    236c:	13410f00 	movtne	r0, #7936	; 0x1f00
    2370:	13010000 	movwne	r0, #4096	; 0x1000
    2374:	0007e920 	andeq	lr, r7, r0, lsr #18
    2378:	83210000 			; <UNDEFINED> instruction: 0x83210000
    237c:	01000013 	tsteq	r0, r3, lsl r0
    2380:	0d0d2015 	stceq	0, cr2, [sp, #-84]	; 0xffffffac
    2384:	07e90000 	strbeq	r0, [r9, r0]!
    2388:	08210000 	stmdaeq	r1!, {}	; <UNPREDICTABLE>
    238c:	08270000 	stmdaeq	r7!, {}	; <UNPREDICTABLE>
    2390:	87110000 	ldrhi	r0, [r1, -r0]
    2394:	00000008 	andeq	r0, r0, r8
    2398:	000e0014 	andeq	r0, lr, r4, lsl r0
    239c:	05180100 	ldreq	r0, [r8, #-256]	; 0xffffff00
    23a0:	00001323 	andeq	r1, r0, r3, lsr #6
    23a4:	00000887 	andeq	r0, r0, r7, lsl #17
    23a8:	00084001 	andeq	r4, r8, r1
    23ac:	00084600 	andeq	r4, r8, r0, lsl #12
    23b0:	08871100 	stmeq	r7, {r8, ip}
    23b4:	14000000 	strne	r0, [r0], #-0
    23b8:	00000edb 	ldrdeq	r0, [r0], -fp
    23bc:	970b1a01 	strls	r1, [fp, -r1, lsl #20]
    23c0:	8d000011 	stchi	0, cr0, [r0, #-68]	; 0xffffffbc
    23c4:	01000008 	tsteq	r0, r8
    23c8:	0000085f 	andeq	r0, r0, pc, asr r8
    23cc:	0000086a 	andeq	r0, r0, sl, ror #16
    23d0:	00088711 	andeq	r8, r8, r1, lsl r7
    23d4:	00791300 	rsbseq	r1, r9, r0, lsl #6
    23d8:	1b000000 	blne	23e0 <CPSR_IRQ_INHIBIT+0x2360>
    23dc:	00000f45 	andeq	r0, r0, r5, asr #30
    23e0:	d60a1b01 	strle	r1, [sl], -r1, lsl #22
    23e4:	01000010 	tsteq	r0, r0, lsl r0
    23e8:	0000087b 	andeq	r0, r0, fp, ror r8
    23ec:	00088711 	andeq	r8, r8, r1, lsl r7
    23f0:	088d1300 	stmeq	sp, {r8, r9, ip}
    23f4:	00000000 	andeq	r0, r0, r0
    23f8:	07ef0419 			; <UNDEFINED> instruction: 0x07ef0419
    23fc:	04220000 	strteq	r0, [r2], #-0
    2400:	0037fa1d 	eorseq	pc, r7, sp, lsl sl	; <UNPREDICTABLE>
    2404:	1d240100 	stfnes	f0, [r4, #-0]
    2408:	000007ef 	andeq	r0, r0, pc, ror #15
    240c:	0013061e 	andseq	r0, r3, lr, lsl r6
    2410:	44010700 	strmi	r0, [r1], #-1792	; 0xfffff900
    2414:	07000000 	streq	r0, [r0, -r0]
    2418:	08cc0c06 	stmiaeq	ip, {r1, r2, sl, fp}^
    241c:	4e1f0000 	cdpmi	0, 1, cr0, cr15, cr0, {0}
    2420:	0000706f 	andeq	r7, r0, pc, rrx
    2424:	000f400b 	andeq	r4, pc, fp
    2428:	a20b0100 	andge	r0, fp, #0, 2
    242c:	02000018 	andeq	r0, r0, #24
    2430:	0011480b 	andseq	r4, r1, fp, lsl #16
    2434:	3f0b0300 	svccc	0x000b0300
    2438:	04000010 	streq	r0, [r0], #-16
    243c:	10982000 	addsne	r2, r8, r0
    2440:	07050000 	streq	r0, [r5, -r0]
    2444:	08fd0822 	ldmeq	sp!, {r1, r5, fp}^
    2448:	78230000 	stmdavc	r3!, {}	; <UNPREDICTABLE>
    244c:	0e240700 	cdpeq	7, 2, cr0, cr4, cr0, {0}
    2450:	00000061 	andeq	r0, r0, r1, rrx
    2454:	00792300 	rsbseq	r2, r9, r0, lsl #6
    2458:	610e2507 	tstvs	lr, r7, lsl #10
    245c:	02000000 	andeq	r0, r0, #0
    2460:	74657323 	strbtvc	r7, [r5], #-803	; 0xfffffcdd
    2464:	0d260700 	stceq	7, cr0, [r6, #-0]
    2468:	00000044 	andeq	r0, r0, r4, asr #32
    246c:	cc030004 	stcgt	0, cr0, [r3], {4}
    2470:	20000008 	andcs	r0, r0, r8
    2474:	00000e15 	andeq	r0, r0, r5, lsl lr
    2478:	082a0701 	stmdaeq	sl!, {r0, r8, r9, sl}
    247c:	0000091d 	andeq	r0, r0, sp, lsl r9
    2480:	646d6323 	strbtvs	r6, [sp], #-803	; 0xfffffcdd
    2484:	162c0700 	strtne	r0, [ip], -r0, lsl #14
    2488:	0000089b 	muleq	r0, fp, r8
    248c:	d9200000 	stmdble	r0!, {}	; <UNPREDICTABLE>
    2490:	0200000d 	andeq	r0, r0, #13
    2494:	45083607 	strmi	r3, [r8, #-1543]	; 0xfffff9f9
    2498:	0f000009 	svceq	0x00000009
    249c:	000013b7 			; <UNDEFINED> instruction: 0x000013b7
    24a0:	021c3807 	andseq	r3, ip, #458752	; 0x70000
    24a4:	00000009 	andeq	r0, r0, r9
    24a8:	0012ef0f 	andseq	lr, r2, pc, lsl #30
    24ac:	0d390700 	ldceq	7, cr0, [r9, #-0]
    24b0:	00000044 	andeq	r0, r0, r4, asr #32
    24b4:	1d030001 	stcne	0, cr0, [r3, #-4]
    24b8:	20000009 	andcs	r0, r0, r9
    24bc:	00001176 	andeq	r1, r0, r6, ror r1
    24c0:	083d0708 	ldmdaeq	sp!, {r3, r8, r9, sl}
    24c4:	0000097f 	andeq	r0, r0, pc, ror r9
    24c8:	0013b70f 	andseq	fp, r3, pc, lsl #14
    24cc:	1c3f0700 	ldcne	7, cr0, [pc], #-0	; 24d4 <CPSR_IRQ_INHIBIT+0x2454>
    24d0:	00000902 	andeq	r0, r0, r2, lsl #18
    24d4:	2cd50f00 	ldclcs	15, cr0, [r5], {0}
    24d8:	40070000 	andmi	r0, r7, r0
    24dc:	0000610e 	andeq	r6, r0, lr, lsl #2
    24e0:	650f0100 	strvs	r0, [pc, #-256]	; 23e8 <CPSR_IRQ_INHIBIT+0x2368>
    24e4:	0700000e 	streq	r0, [r0, -lr]
    24e8:	08cc1942 	stmiaeq	ip, {r1, r6, r8, fp, ip}^
    24ec:	00030000 	andeq	r0, r3, r0
    24f0:	00094a03 	andeq	r4, r9, r3, lsl #20
    24f4:	0ec32000 	cdpeq	0, 12, cr2, cr3, cr0, {0}
    24f8:	070b0000 	streq	r0, [fp, -r0]
    24fc:	09e70846 	stmibeq	r7!, {r1, r2, r6, fp}^
    2500:	b70f0000 	strlt	r0, [pc, -r0]
    2504:	07000013 	smladeq	r0, r3, r0, r0
    2508:	09021c48 	stmdbeq	r2, {r3, r6, sl, fp, ip}
    250c:	23000000 	movwcs	r0, #0
    2510:	07003178 	smlsdxeq	r0, r8, r1, r3
    2514:	00610e49 	rsbeq	r0, r1, r9, asr #28
    2518:	23010000 	movwcs	r0, #4096	; 0x1000
    251c:	07003179 	smlsdxeq	r0, r9, r1, r3
    2520:	00611249 	rsbeq	r1, r1, r9, asr #4
    2524:	23030000 	movwcs	r0, #12288	; 0x3000
    2528:	4a070077 	bmi	1c270c <_bss_end+0x1b0a5c>
    252c:	0000610e 	andeq	r6, r0, lr, lsl #2
    2530:	68230500 	stmdavs	r3!, {r8, sl}
    2534:	114a0700 	cmpne	sl, r0, lsl #14
    2538:	00000061 	andeq	r0, r0, r1, rrx
    253c:	0e960f07 	cdpeq	15, 9, cr0, cr6, cr7, {0}
    2540:	4b070000 	blmi	1c2548 <_bss_end+0x1b0898>
    2544:	0000440d 	andeq	r4, r0, sp, lsl #8
    2548:	650f0900 	strvs	r0, [pc, #-2304]	; 1c50 <CPSR_IRQ_INHIBIT+0x1bd0>
    254c:	0700000e 	streq	r0, [r0, -lr]
    2550:	00440d4d 	subeq	r0, r4, sp, asr #26
    2554:	000a0000 	andeq	r0, sl, r0
    2558:	00098403 	andeq	r8, r9, r3, lsl #8
    255c:	079b2400 	ldreq	r2, [fp, r0, lsl #8]
    2560:	07020000 	streq	r0, [r2, -r0]
    2564:	bc030512 	cfstr32lt	mvfx0, [r3], {18}
    2568:	2500010b 	strcs	r0, [r0, #-267]	; 0xfffffef5
    256c:	0000120b 	andeq	r1, r0, fp, lsl #4
    2570:	0000aae4 	andeq	sl, r0, r4, ror #21
    2574:	0000001c 	andeq	r0, r0, ip, lsl r0
    2578:	41269c01 			; <UNDEFINED> instruction: 0x41269c01
    257c:	90000002 	andls	r0, r0, r2
    2580:	540000aa 	strpl	r0, [r0], #-170	; 0xffffff56
    2584:	01000000 	mrseq	r0, (UNDEF: 0)
    2588:	000a3d9c 	muleq	sl, ip, sp
    258c:	033b2700 	teqeq	fp, #0, 14
    2590:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
    2594:	00380101 	eorseq	r0, r8, r1, lsl #2
    2598:	91020000 	mrsls	r0, (UNDEF: 2)
    259c:	07342774 			; <UNDEFINED> instruction: 0x07342774
    25a0:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
    25a4:	00380101 	eorseq	r0, r8, r1, lsl #2
    25a8:	91020000 	mrsls	r0, (UNDEF: 2)
    25ac:	041c0070 	ldreq	r0, [ip], #-112	; 0xffffff90
    25b0:	0000005c 	andeq	r0, r0, ip, asr r0
    25b4:	00026a28 	andeq	r6, r2, r8, lsr #20
    25b8:	000a6100 	andeq	r6, sl, r0, lsl #2
    25bc:	00ac1000 	adceq	r1, ip, r0
    25c0:	00006c00 	andeq	r6, r0, r0, lsl #24
    25c4:	7d9c0100 	ldfvcs	f0, [ip]
    25c8:	1500000a 	strne	r0, [r0, #-10]
    25cc:	00550054 	subseq	r0, r5, r4, asr r0
    25d0:	2c290000 	stccs	0, cr0, [r9], #-0
    25d4:	0a000003 	beq	25e8 <CPSR_IRQ_INHIBIT+0x2568>
    25d8:	02000003 	andeq	r0, r0, #3
    25dc:	632a7491 			; <UNDEFINED> instruction: 0x632a7491
    25e0:	03007268 	movweq	r7, #616	; 0x268
    25e4:	0a3d2b22 	beq	f4d274 <_bss_end+0xf3b5c4>
    25e8:	91020000 	mrsls	r0, (UNDEF: 2)
    25ec:	041c0070 	ldreq	r0, [ip], #-112	; 0xffffff90
    25f0:	0000003f 	andeq	r0, r0, pc, lsr r0
    25f4:	00029528 	andeq	r9, r2, r8, lsr #10
    25f8:	000aa100 	andeq	sl, sl, r0, lsl #2
    25fc:	00aba000 	adceq	sl, fp, r0
    2600:	00007000 	andeq	r7, r0, r0
    2604:	bd9c0100 	ldflts	f0, [ip]
    2608:	1500000a 	strne	r0, [r0, #-10]
    260c:	00380054 	eorseq	r0, r8, r4, asr r0
    2610:	2c290000 	stccs	0, cr0, [r9], #-0
    2614:	0a000003 	beq	2628 <CPSR_IRQ_INHIBIT+0x25a8>
    2618:	02000003 	andeq	r0, r0, #3
    261c:	632a7491 			; <UNDEFINED> instruction: 0x632a7491
    2620:	03007268 	movweq	r7, #616	; 0x268
    2624:	0a7d2b22 	beq	1f4d2b4 <_bss_end+0x1f3b604>
    2628:	91020000 	mrsls	r0, (UNDEF: 2)
    262c:	041c0070 	ldreq	r0, [ip], #-112	; 0xffffff90
    2630:	000005ee 	andeq	r0, r0, lr, ror #11
    2634:	0002c028 	andeq	ip, r2, r8, lsr #32
    2638:	000ae100 	andeq	lr, sl, r0, lsl #2
    263c:	00ab3000 	adceq	r3, fp, r0
    2640:	00007000 	andeq	r7, r0, r0
    2644:	fd9c0100 	ldc2	1, cr0, [ip]
    2648:	1500000a 	strne	r0, [r0, #-10]
    264c:	050f0054 	streq	r0, [pc, #-84]	; 2600 <CPSR_IRQ_INHIBIT+0x2580>
    2650:	2c290000 	stccs	0, cr0, [r9], #-0
    2654:	0a000003 	beq	2668 <CPSR_IRQ_INHIBIT+0x25e8>
    2658:	02000003 	andeq	r0, r0, #3
    265c:	632a7491 			; <UNDEFINED> instruction: 0x632a7491
    2660:	03007268 	movweq	r7, #616	; 0x268
    2664:	0abd2b22 	beq	fef4d2f4 <_bss_end+0xfef3b644>
    2668:	91020000 	mrsls	r0, (UNDEF: 2)
    266c:	522b0070 	eorpl	r0, fp, #112	; 0x70
    2670:	02000007 	andeq	r0, r0, #7
    2674:	18060101 	stmdane	r6, {r0, r8}
    2678:	e000000b 	and	r0, r0, fp
    267c:	b00000a5 	andlt	r0, r0, r5, lsr #1
    2680:	01000004 	tsteq	r0, r4
    2684:	000c809c 	muleq	ip, ip, r0
    2688:	032c2900 			; <UNDEFINED> instruction: 0x032c2900
    268c:	078b0000 	streq	r0, [fp, r0]
    2690:	91020000 	mrsls	r0, (UNDEF: 2)
    2694:	0cb22744 	ldceq	7, cr2, [r2], #272	; 0x110
    2698:	01020000 	mrseq	r0, (UNDEF: 2)
    269c:	04df3d01 	ldrbeq	r3, [pc], #3329	; 26a4 <CPSR_IRQ_INHIBIT+0x2624>
    26a0:	91020000 	mrsls	r0, (UNDEF: 2)
    26a4:	12962740 	addsne	r2, r6, #64, 14	; 0x1000000
    26a8:	01020000 	mrseq	r0, (UNDEF: 2)
    26ac:	00794d01 	rsbseq	r4, r9, r1, lsl #26
    26b0:	91030000 	mrsls	r0, (UNDEF: 3)
    26b4:	632c7fbc 			; <UNDEFINED> instruction: 0x632c7fbc
    26b8:	0200646d 	andeq	r6, r0, #1828716544	; 0x6d000000
    26bc:	9b160106 	blls	582adc <_bss_end+0x570e2c>
    26c0:	02000008 	andeq	r0, r0, #8
    26c4:	482d6791 	stmdami	sp!, {r0, r4, r7, r8, r9, sl, sp, lr}
    26c8:	6f000000 	svcvs	0x00000000
    26cc:	2c00000b 	stccs	0, cr0, [r0], {11}
    26d0:	00746b70 	rsbseq	r6, r4, r0, ror fp
    26d4:	2a011902 	bcs	48ae4 <_bss_end+0x36e34>
    26d8:	00000c80 	andeq	r0, r0, r0, lsl #25
    26dc:	00489102 	subeq	r9, r8, r2, lsl #2
    26e0:	0000602d 	andeq	r6, r0, sp, lsr #32
    26e4:	000bb100 	andeq	fp, fp, r0, lsl #2
    26e8:	6b702c00 	blvs	1c0d6f0 <_bss_end+0x1bfba40>
    26ec:	26020074 			; <UNDEFINED> instruction: 0x26020074
    26f0:	0c863501 	cfstr32eq	mvfx3, [r6], {1}
    26f4:	91020000 	mrsls	r0, (UNDEF: 2)
    26f8:	74702c50 	ldrbtvc	r2, [r0], #-3152	; 0xfffff3b0
    26fc:	29020072 	stmdbcs	r2, {r1, r4, r5, r6}
    2700:	0c8c2801 	stceq	8, cr2, [ip], {1}
    2704:	91020000 	mrsls	r0, (UNDEF: 2)
    2708:	a69c2e4c 	ldrge	r2, [ip], ip, asr #28
    270c:	00940000 	addseq	r0, r4, r0
    2710:	692c0000 	stmdbvs	ip!, {}	; <UNPREDICTABLE>
    2714:	012b0200 			; <UNDEFINED> instruction: 0x012b0200
    2718:	0000611b 	andeq	r6, r0, fp, lsl r1
    271c:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    2720:	782f0000 	stmdavc	pc!, {}	; <UNPREDICTABLE>
    2724:	2c000000 	stccs	0, cr0, [r0], {-0}
    2728:	00746b70 	rsbseq	r6, r4, r0, ror fp
    272c:	2c013702 	stccs	7, cr3, [r1], {2}
    2730:	00000c92 	muleq	r0, r2, ip
    2734:	30609102 	rsbcc	r9, r0, r2, lsl #2
    2738:	00001015 	andeq	r1, r0, r5, lsl r0
    273c:	1c013902 			; <UNDEFINED> instruction: 0x1c013902
    2740:	00000c98 	muleq	r0, r8, ip
    2744:	315c9102 	cmpcc	ip, r2, lsl #2
    2748:	0000a760 	andeq	sl, r0, r0, ror #14
    274c:	0000019c 	muleq	r0, ip, r1
    2750:	00000c24 	andeq	r0, r0, r4, lsr #24
    2754:	0200782c 	andeq	r7, r0, #44, 16	; 0x2c0000
    2758:	611f013f 	tstvs	pc, pc, lsr r1	; <UNPREDICTABLE>
    275c:	02000000 	andeq	r0, r0, #0
    2760:	bc2e7491 	cfstrslt	mvf7, [lr], #-580	; 0xfffffdbc
    2764:	300000a7 	andcc	r0, r0, r7, lsr #1
    2768:	2c000001 	stccs	0, cr0, [r0], {1}
    276c:	41020079 	tstmi	r2, r9, ror r0
    2770:	00612301 	rsbeq	r2, r1, r1, lsl #6
    2774:	91020000 	mrsls	r0, (UNDEF: 2)
    2778:	a8182e72 	ldmdage	r8, {r1, r4, r5, r6, r9, sl, fp, sp}
    277c:	00c40000 	sbceq	r0, r4, r0
    2780:	702c0000 	eorvc	r0, ip, r0
    2784:	0200736f 	andeq	r7, r0, #-1140850687	; 0xbc000001
    2788:	6d280143 	stfvss	f0, [r8, #-268]!	; 0xfffffef4
    278c:	02000000 	andeq	r0, r0, #0
    2790:	00005491 	muleq	r0, r1, r4
    2794:	a8fc2e00 	ldmge	ip!, {r9, sl, fp, sp}^
    2798:	01600000 	cmneq	r0, r0
    279c:	782c0000 	stmdavc	ip!, {}	; <UNPREDICTABLE>
    27a0:	01570200 	cmpeq	r7, r0, lsl #4
    27a4:	0000791f 	andeq	r7, r0, pc, lsl r9
    27a8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    27ac:	00a92c2e 	adceq	r2, r9, lr, lsr #24
    27b0:	00012000 	andeq	r2, r1, r0
    27b4:	00792c00 	rsbseq	r2, r9, r0, lsl #24
    27b8:	23015902 	movwcs	r5, #6402	; 0x1902
    27bc:	00000079 	andeq	r0, r0, r9, ror r0
    27c0:	2e689102 	lgncse	f1, f2
    27c4:	0000a95c 	andeq	sl, r0, ip, asr r9
    27c8:	000000e0 	andeq	r0, r0, r0, ror #1
    27cc:	736f702c 	cmnvc	pc, #44	; 0x2c
    27d0:	015b0200 	cmpeq	fp, r0, lsl #4
    27d4:	00008528 	andeq	r8, r0, r8, lsr #10
    27d8:	58910200 	ldmpl	r1, {r9}
    27dc:	7465732c 	strbtvc	r7, [r5], #-812	; 0xfffffcd4
    27e0:	01620200 	cmneq	r2, r0, lsl #4
    27e4:	0002ef24 	andeq	lr, r2, r4, lsr #30
    27e8:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
    27ec:	00000000 	andeq	r0, r0, r0
    27f0:	45041900 	strmi	r1, [r4, #-2304]	; 0xfffff700
    27f4:	19000009 	stmdbne	r0, {r0, r3}
    27f8:	00097f04 	andeq	r7, r9, r4, lsl #30
    27fc:	fd041900 	stc2	9, cr1, [r4, #-0]	; <UNPREDICTABLE>
    2800:	19000008 	stmdbne	r0, {r3}
    2804:	0009e704 	andeq	lr, r9, r4, lsl #14
    2808:	50041900 	andpl	r1, r4, r0, lsl #18
    280c:	32000000 	andcc	r0, r0, #0
    2810:	00000737 	andeq	r0, r0, r7, lsr r7
    2814:	b806dc02 	stmdalt	r6, {r1, sl, fp, ip, lr, pc}
    2818:	c800000c 	stmdagt	r0, {r2, r3}
    281c:	180000a3 	stmdane	r0, {r0, r1, r5, r7}
    2820:	01000002 	tsteq	r0, r2
    2824:	000d509c 	muleq	sp, ip, r0
    2828:	032c2900 			; <UNDEFINED> instruction: 0x032c2900
    282c:	078b0000 	streq	r0, [fp, r0]
    2830:	91030000 	mrsls	r0, (UNDEF: 3)
    2834:	69337fbc 	ldmdbvs	r3!, {r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
    2838:	09e10200 	stmibeq	r1!, {r9}^
    283c:	00000038 	andeq	r0, r0, r8, lsr r0
    2840:	00137b0d 	andseq	r7, r3, sp, lsl #22
    2844:	13ee0200 	mvnne	r0, #0, 4
    2848:	0000003f 	andeq	r0, r0, pc, lsr r0
    284c:	34689102 	strbtcc	r9, [r8], #-258	; 0xfffffefe
    2850:	00001159 	andeq	r1, r0, r9, asr r1
    2854:	3f0ff002 	svccc	0x000ff002
    2858:	02000000 	andeq	r0, r0, #0
    285c:	f0316491 			; <UNDEFINED> instruction: 0xf0316491
    2860:	f80000a3 			; <UNDEFINED> instruction: 0xf80000a3
    2864:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2868:	3500000d 	strcc	r0, [r0, #-13]
    286c:	02006174 	andeq	r6, r0, #116, 2
    2870:	04eb0fe5 	strbteq	r0, [fp], #4069	; 0xfe5
    2874:	91020000 	mrsls	r0, (UNDEF: 2)
    2878:	1c2e006c 	stcne	0, cr0, [lr], #-432	; 0xfffffe50
    287c:	b80000a5 	stmdalt	r0, {r0, r2, r5, r7}
    2880:	35000000 	strcc	r0, [r0, #-0]
    2884:	f2020069 	vhadd.s8	q0, q1, <illegal reg q12.5>
    2888:	0000380e 	andeq	r3, r0, lr, lsl #16
    288c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2890:	00a5342e 	adceq	r3, r5, lr, lsr #8
    2894:	00009000 	andeq	r9, r0, r0
    2898:	61743500 	cmnvs	r4, r0, lsl #10
    289c:	0ff40200 	svceq	0x00f40200
    28a0:	000004eb 	andeq	r0, r0, fp, ror #9
    28a4:	2e609102 	lgncss	f1, f2
    28a8:	0000a564 	andeq	sl, r0, r4, ror #10
    28ac:	00000048 	andeq	r0, r0, r8, asr #32
    28b0:	02006a35 	andeq	r6, r0, #217088	; 0x35000
    28b4:	003812f7 	ldrshteq	r1, [r8], -r7
    28b8:	91020000 	mrsls	r0, (UNDEF: 2)
    28bc:	00000070 	andeq	r0, r0, r0, ror r0
    28c0:	070d3600 	streq	r3, [sp, -r0, lsl #12]
    28c4:	d1020000 	mrsle	r0, (UNDEF: 2)
    28c8:	000d6a06 	andeq	r6, sp, r6, lsl #20
    28cc:	00a28000 	adceq	r8, r2, r0
    28d0:	00014800 	andeq	r4, r1, r0, lsl #16
    28d4:	a09c0100 	addsge	r0, ip, r0, lsl #2
    28d8:	2900000d 	stmdbcs	r0, {r0, r2, r3}
    28dc:	0000032c 	andeq	r0, r0, ip, lsr #6
    28e0:	0000078b 	andeq	r0, r0, fp, lsl #15
    28e4:	2a749102 	bcs	1d26cf4 <_bss_end+0x1d15044>
    28e8:	d1020078 	tstle	r2, r8, ror r0
    28ec:	0000792b 	andeq	r7, r0, fp, lsr #18
    28f0:	70910200 	addsvc	r0, r1, r0, lsl #4
    28f4:	0200792a 	andeq	r7, r0, #688128	; 0xa8000
    28f8:	007937d1 	ldrsbteq	r3, [r9], #-113	; 0xffffff8f
    28fc:	91020000 	mrsls	r0, (UNDEF: 2)
    2900:	65732a6c 	ldrbvs	r2, [r3, #-2668]!	; 0xfffff594
    2904:	d1020074 	tstle	r2, r4, ror r0
    2908:	0002e83f 	andeq	lr, r2, pc, lsr r8
    290c:	6b910200 	blvs	fe443114 <_bss_end+0xfe431464>
    2910:	06ed3200 	strbteq	r3, [sp], r0, lsl #4
    2914:	c2020000 	andgt	r0, r2, #0
    2918:	000dba06 	andeq	fp, sp, r6, lsl #20
    291c:	00a1b000 	adceq	fp, r1, r0
    2920:	0000d000 	andeq	sp, r0, r0
    2924:	0b9c0100 	bleq	fe702d2c <_bss_end+0xfe6f107c>
    2928:	2900000e 	stmdbcs	r0, {r1, r2, r3}
    292c:	0000032c 	andeq	r0, r0, ip, lsr #6
    2930:	0000078b 	andeq	r0, r0, fp, lsl #15
    2934:	37649102 	strbcc	r9, [r4, -r2, lsl #2]!
    2938:	0000112e 	andeq	r1, r0, lr, lsr #2
    293c:	e823c202 	stmda	r3!, {r1, r9, lr, pc}
    2940:	02000002 	andeq	r0, r0, #2
    2944:	fd346391 	ldc2	3, cr6, [r4, #-580]!	; 0xfffffdbc
    2948:	0200000c 	andeq	r0, r0, #12
    294c:	005013c7 	subseq	r1, r0, r7, asr #7
    2950:	91020000 	mrsls	r0, (UNDEF: 2)
    2954:	11593473 	cmpne	r9, r3, ror r4
    2958:	c9020000 	stmdbgt	r2, {}	; <UNPREDICTABLE>
    295c:	00003f0f 	andeq	r3, r0, pc, lsl #30
    2960:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2964:	00a2282e 	adceq	r2, r2, lr, lsr #16
    2968:	00004000 	andeq	r4, r0, r0
    296c:	00693500 	rsbeq	r3, r9, r0, lsl #10
    2970:	380ecb02 	stmdacc	lr, {r1, r8, r9, fp, lr, pc}
    2974:	02000000 	andeq	r0, r0, #0
    2978:	00007491 	muleq	r0, r1, r4
    297c:	0006ce36 	andeq	ip, r6, r6, lsr lr
    2980:	06bd0200 	ldrteq	r0, [sp], r0, lsl #4
    2984:	00000e25 	andeq	r0, r0, r5, lsr #28
    2988:	0000a188 	andeq	sl, r0, r8, lsl #3
    298c:	00000028 	andeq	r0, r0, r8, lsr #32
    2990:	0e329c01 	cdpeq	12, 3, cr9, cr2, cr1, {0}
    2994:	2c290000 	stccs	0, cr0, [r9], #-0
    2998:	96000003 	strls	r0, [r0], -r3
    299c:	02000007 	andeq	r0, r0, #7
    29a0:	32007491 	andcc	r7, r0, #-1862270976	; 0x91000000
    29a4:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    29a8:	4c06a802 	stcmi	8, cr10, [r6], {2}
    29ac:	b400000e 	strlt	r0, [r0], #-14
    29b0:	d40000a0 	strle	r0, [r0], #-160	; 0xffffff60
    29b4:	01000000 	mrseq	r0, (UNDEF: 0)
    29b8:	000e719c 	muleq	lr, ip, r1
    29bc:	032c2900 			; <UNDEFINED> instruction: 0x032c2900
    29c0:	078b0000 	streq	r0, [fp, r0]
    29c4:	91020000 	mrsls	r0, (UNDEF: 2)
    29c8:	a0dc2e64 	sbcsge	r2, ip, r4, ror #28
    29cc:	00640000 	rsbeq	r0, r4, r0
    29d0:	74350000 	ldrtvc	r0, [r5], #-0
    29d4:	af020061 	svcge	0x00020061
    29d8:	0004eb0f 	andeq	lr, r4, pc, lsl #22
    29dc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    29e0:	41320000 	teqmi	r2, r0
    29e4:	02000006 	andeq	r0, r0, #6
    29e8:	0e8b069f 	mcreq	6, 4, r0, cr11, cr15, {4}
    29ec:	a0200000 	eorge	r0, r0, r0
    29f0:	00940000 	addseq	r0, r4, r0
    29f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    29f8:	00000ec4 	andeq	r0, r0, r4, asr #29
    29fc:	00032c29 	andeq	r2, r3, r9, lsr #24
    2a00:	00078b00 	andeq	r8, r7, r0, lsl #22
    2a04:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2a08:	646d632a 	strbtvs	r6, [sp], #-810	; 0xfffffcd6
    2a0c:	319f0200 	orrscc	r0, pc, r0, lsl #4
    2a10:	0000050f 	andeq	r0, r0, pc, lsl #10
    2a14:	37609102 	strbcc	r9, [r0, -r2, lsl #2]!
    2a18:	00000f92 	muleq	r0, r2, pc	; <UNPREDICTABLE>
    2a1c:	443e9f02 	ldrtmi	r9, [lr], #-3842	; 0xfffff0fe
    2a20:	02000000 	andeq	r0, r0, #0
    2a24:	74355f91 	ldrtvc	r5, [r5], #-3985	; 0xfffff06f
    2a28:	a1020061 	tstge	r2, r1, rrx
    2a2c:	0004eb0b 	andeq	lr, r4, fp, lsl #22
    2a30:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2a34:	068a3200 	streq	r3, [sl], r0, lsl #4
    2a38:	12020000 	andne	r0, r2, #0
    2a3c:	000ede06 	andeq	sp, lr, r6, lsl #28
    2a40:	0098ec00 	addseq	lr, r8, r0, lsl #24
    2a44:	00073400 	andeq	r3, r7, r0, lsl #8
    2a48:	589c0100 	ldmpl	ip, {r8}
    2a4c:	29000010 	stmdbcs	r0, {r4}
    2a50:	0000032c 	andeq	r0, r0, ip, lsr #6
    2a54:	0000078b 	andeq	r0, r0, fp, lsl #15
    2a58:	7eac9103 	tanvce	f1, f3
    2a5c:	000c1837 	andeq	r1, ip, r7, lsr r8
    2a60:	21120200 	tstcs	r2, r0, lsl #4
    2a64:	00000038 	andeq	r0, r0, r8, lsr r0
    2a68:	7ea89103 	tanvce	f1, f3
    2a6c:	000bd837 	andeq	sp, fp, r7, lsr r8
    2a70:	2c120200 	lfmcs	f0, 4, [r2], {-0}
    2a74:	00000038 	andeq	r0, r0, r8, lsr r0
    2a78:	7ea49103 	tanvcs	f1, f3
    2a7c:	0099c831 	addseq	ip, r9, r1, lsr r8
    2a80:	0000b800 	andeq	fp, r0, r0, lsl #16
    2a84:	000f2700 	andeq	r2, pc, r0, lsl #14
    2a88:	61743500 	cmnvs	r4, r0, lsl #10
    2a8c:	0f280200 	svceq	0x00280200
    2a90:	000004eb 	andeq	r0, r0, fp, ror #9
    2a94:	00749102 	rsbseq	r9, r4, r2, lsl #2
    2a98:	009a8031 	addseq	r8, sl, r1, lsr r0
    2a9c:	00006800 	andeq	r6, r0, r0, lsl #16
    2aa0:	000f4300 	andeq	r4, pc, r0, lsl #6
    2aa4:	61743500 	cmnvs	r4, r0, lsl #10
    2aa8:	0f320200 	svceq	0x00320200
    2aac:	000004eb 	andeq	r0, r0, fp, ror #9
    2ab0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    2ab4:	009ae831 	addseq	lr, sl, r1, lsr r8
    2ab8:	0000b800 	andeq	fp, r0, r0, lsl #16
    2abc:	000f5f00 	andeq	r5, pc, r0, lsl #30
    2ac0:	61743500 	cmnvs	r4, r0, lsl #10
    2ac4:	0f3c0200 	svceq	0x003c0200
    2ac8:	000004eb 	andeq	r0, r0, fp, ror #9
    2acc:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    2ad0:	009ba031 	addseq	sl, fp, r1, lsr r0
    2ad4:	00006400 	andeq	r6, r0, r0, lsl #8
    2ad8:	000f7b00 	andeq	r7, pc, r0, lsl #22
    2adc:	61743500 	cmnvs	r4, r0, lsl #10
    2ae0:	0f470200 	svceq	0x00470200
    2ae4:	000004eb 	andeq	r0, r0, fp, ror #9
    2ae8:	00689102 	rsbeq	r9, r8, r2, lsl #2
    2aec:	009c0431 	addseq	r0, ip, r1, lsr r4
    2af0:	0000b800 	andeq	fp, r0, r0, lsl #16
    2af4:	000f9700 	andeq	r9, pc, r0, lsl #14
    2af8:	61743500 	cmnvs	r4, r0, lsl #10
    2afc:	0f510200 	svceq	0x00510200
    2b00:	000004eb 	andeq	r0, r0, fp, ror #9
    2b04:	00649102 	rsbeq	r9, r4, r2, lsl #2
    2b08:	009cbc31 	addseq	fp, ip, r1, lsr ip
    2b0c:	00006400 	andeq	r6, r0, r0, lsl #8
    2b10:	000fb300 	andeq	fp, pc, r0, lsl #6
    2b14:	61743500 	cmnvs	r4, r0, lsl #10
    2b18:	0f5b0200 	svceq	0x005b0200
    2b1c:	000004eb 	andeq	r0, r0, fp, ror #9
    2b20:	00609102 	rsbeq	r9, r0, r2, lsl #2
    2b24:	009d2031 	addseq	r2, sp, r1, lsr r0
    2b28:	00006400 	andeq	r6, r0, r0, lsl #8
    2b2c:	000fcf00 	andeq	ip, pc, r0, lsl #30
    2b30:	61743500 	cmnvs	r4, r0, lsl #10
    2b34:	0f640200 	svceq	0x00640200
    2b38:	000004eb 	andeq	r0, r0, fp, ror #9
    2b3c:	005c9102 	subseq	r9, ip, r2, lsl #2
    2b40:	009d8431 	addseq	r8, sp, r1, lsr r4
    2b44:	00006400 	andeq	r6, r0, r0, lsl #8
    2b48:	000feb00 	andeq	lr, pc, r0, lsl #22
    2b4c:	61743500 	cmnvs	r4, r0, lsl #10
    2b50:	0f6d0200 	svceq	0x006d0200
    2b54:	000004eb 	andeq	r0, r0, fp, ror #9
    2b58:	00589102 	subseq	r9, r8, r2, lsl #2
    2b5c:	009de831 	addseq	lr, sp, r1, lsr r8
    2b60:	00006400 	andeq	r6, r0, r0, lsl #8
    2b64:	00100700 	andseq	r0, r0, r0, lsl #14
    2b68:	61743500 	cmnvs	r4, r0, lsl #10
    2b6c:	0f760200 	svceq	0x00760200
    2b70:	000004eb 	andeq	r0, r0, fp, ror #9
    2b74:	00549102 	subseq	r9, r4, r2, lsl #2
    2b78:	009e4c31 	addseq	r4, lr, r1, lsr ip
    2b7c:	00006400 	andeq	r6, r0, r0, lsl #8
    2b80:	00102300 	andseq	r2, r0, r0, lsl #6
    2b84:	61743500 	cmnvs	r4, r0, lsl #10
    2b88:	0f7f0200 	svceq	0x007f0200
    2b8c:	000004eb 	andeq	r0, r0, fp, ror #9
    2b90:	00509102 	subseq	r9, r0, r2, lsl #2
    2b94:	009eb031 	addseq	fp, lr, r1, lsr r0
    2b98:	00006400 	andeq	r6, r0, r0, lsl #8
    2b9c:	00103f00 	andseq	r3, r0, r0, lsl #30
    2ba0:	61743500 	cmnvs	r4, r0, lsl #10
    2ba4:	0f880200 	svceq	0x00880200
    2ba8:	000004eb 	andeq	r0, r0, fp, ror #9
    2bac:	004c9102 	subeq	r9, ip, r2, lsl #2
    2bb0:	009f142e 	addseq	r1, pc, lr, lsr #8
    2bb4:	0000f000 	andeq	pc, r0, r0
    2bb8:	61743500 	cmnvs	r4, r0, lsl #10
    2bbc:	0f920200 	svceq	0x00920200
    2bc0:	000004eb 	andeq	r0, r0, fp, ror #9
    2bc4:	00489102 	subeq	r9, r8, r2, lsl #2
    2bc8:	06663800 	strbteq	r3, [r6], -r0, lsl #16
    2bcc:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2bd0:	00106901 	andseq	r6, r0, r1, lsl #18
    2bd4:	107f0000 	rsbsne	r0, pc, r0
    2bd8:	2c390000 	ldccs	0, cr0, [r9], #-0
    2bdc:	8b000003 	blhi	2bf0 <CPSR_IRQ_INHIBIT+0x2b70>
    2be0:	3a000007 	bcc	2c04 <CPSR_IRQ_INHIBIT+0x2b84>
    2be4:	00633269 	rsbeq	r3, r3, r9, ror #4
    2be8:	792a0902 	stmdbvc	sl!, {r1, r8, fp}
    2bec:	00000007 	andeq	r0, r0, r7
    2bf0:	0010583b 	andseq	r5, r0, fp, lsr r8
    2bf4:	000f5800 	andeq	r5, pc, r0, lsl #16
    2bf8:	00109a00 	andseq	r9, r0, r0, lsl #20
    2bfc:	00988800 	addseq	r8, r8, r0, lsl #16
    2c00:	00006400 	andeq	r6, r0, r0, lsl #8
    2c04:	ab9c0100 	blge	fe70300c <_bss_end+0xfe6f135c>
    2c08:	3c000010 	stccc	0, cr0, [r0], {16}
    2c0c:	00001069 	andeq	r1, r0, r9, rrx
    2c10:	3c749102 	ldfccp	f1, [r4], #-8
    2c14:	00001072 	andeq	r1, r0, r2, ror r0
    2c18:	00709102 	rsbseq	r9, r0, r2, lsl #2
    2c1c:	000f9a3d 	andeq	r9, pc, sp, lsr sl	; <UNPREDICTABLE>
    2c20:	0d3d0100 	ldfeqs	f0, [sp, #-0]
    2c24:	00000e8e 	andeq	r0, r0, lr, lsl #29
    2c28:	0000ab00 	andeq	sl, r0, r0, lsl #22
    2c2c:	00000030 	andeq	r0, r0, r0, lsr r0
    2c30:	702a9c01 	eorvc	r9, sl, r1, lsl #24
    2c34:	233d0100 	teqcs	sp, #0, 2
    2c38:	0000088d 	andeq	r0, r0, sp, lsl #17
    2c3c:	3e749102 	expccs	f1, f2
    2c40:	00000079 	andeq	r0, r0, r9, ror r0
    2c44:	00709102 	rsbseq	r9, r0, r2, lsl #2
    2c48:	00053700 	andeq	r3, r5, r0, lsl #14
    2c4c:	c7000400 	strgt	r0, [r0, -r0, lsl #8]
    2c50:	0400000c 	streq	r0, [r0], #-12
    2c54:	00001401 	andeq	r1, r0, r1, lsl #8
    2c58:	145c0400 	ldrbne	r0, [ip], #-1024	; 0xfffffc00
    2c5c:	00c50000 	sbceq	r0, r5, r0
    2c60:	ac7c0000 	ldclge	0, cr0, [ip], #-0
    2c64:	02640000 	rsbeq	r0, r4, #0
    2c68:	13860000 	orrne	r0, r6, #0
    2c6c:	01020000 	mrseq	r0, (UNDEF: 2)
    2c70:	00057308 	andeq	r7, r5, r8, lsl #6
    2c74:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2c78:	00000599 	muleq	r0, r9, r5
    2c7c:	69050403 	stmdbvs	r5, {r0, r1, sl}
    2c80:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    2c84:	00000982 	andeq	r0, r0, r2, lsl #19
    2c88:	4b070702 	blmi	1c4898 <_bss_end+0x1b2be8>
    2c8c:	05000000 	streq	r0, [r0, #-0]
    2c90:	0000003a 	andeq	r0, r0, sl, lsr r0
    2c94:	6a080102 	bvs	2030a4 <_bss_end+0x1f13f4>
    2c98:	02000005 	andeq	r0, r0, #5
    2c9c:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    2ca0:	e4040000 	str	r0, [r4], #-0
    2ca4:	02000005 	andeq	r0, r0, #5
    2ca8:	006a0709 	rsbeq	r0, sl, r9, lsl #14
    2cac:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
    2cb0:	02000000 	andeq	r0, r0, #0
    2cb4:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
    2cb8:	6a050000 	bvs	142cc0 <_bss_end+0x131010>
    2cbc:	06000000 	streq	r0, [r0], -r0
    2cc0:	006c6168 	rsbeq	r6, ip, r8, ror #2
    2cc4:	300b0503 	andcc	r0, fp, r3, lsl #10
    2cc8:	07000001 	streq	r0, [r0, -r1]
    2ccc:	00000487 	andeq	r0, r0, r7, lsl #9
    2cd0:	711c0703 	tstvc	ip, r3, lsl #14
    2cd4:	80000000 	andhi	r0, r0, r0
    2cd8:	070ee6b2 			; <UNDEFINED> instruction: 0x070ee6b2
    2cdc:	000005cc 	andeq	r0, r0, ip, asr #11
    2ce0:	3c1d0a03 			; <UNDEFINED> instruction: 0x3c1d0a03
    2ce4:	00000001 	andeq	r0, r0, r1
    2ce8:	07200000 	streq	r0, [r0, -r0]!
    2cec:	00000452 	andeq	r0, r0, r2, asr r4
    2cf0:	3c1d0d03 	ldccc	13, cr0, [sp], {3}
    2cf4:	00000001 	andeq	r0, r0, r1
    2cf8:	08202000 	stmdaeq	r0!, {sp}
    2cfc:	0000058a 	andeq	r0, r0, sl, lsl #11
    2d00:	65181003 	ldrvs	r1, [r8, #-3]
    2d04:	36000000 	strcc	r0, [r0], -r0
    2d08:	00037307 	andeq	r7, r3, r7, lsl #6
    2d0c:	1d420300 	stclne	3, cr0, [r2, #-0]
    2d10:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d14:	20215000 	eorcs	r5, r1, r0
    2d18:	00034a07 	andeq	r4, r3, r7, lsl #20
    2d1c:	1d710300 	ldclne	3, cr0, [r1, #-0]
    2d20:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d24:	2000b200 	andcs	fp, r0, r0, lsl #4
    2d28:	0002b607 	andeq	fp, r2, r7, lsl #12
    2d2c:	1da40300 	stcne	3, cr0, [r4]
    2d30:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d34:	2000b400 	andcs	fp, r0, r0, lsl #8
    2d38:	00036407 	andeq	r6, r3, r7, lsl #8
    2d3c:	1db30300 	ldcne	3, cr0, [r3]
    2d40:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d44:	20104000 	andscs	r4, r0, r0
    2d48:	00033107 	andeq	r3, r3, r7, lsl #2
    2d4c:	1dbe0300 	ldcne	3, cr0, [lr]
    2d50:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d54:	20205000 	eorcs	r5, r0, r0
    2d58:	0003ef07 	andeq	lr, r3, r7, lsl #30
    2d5c:	1dbf0300 	ldcne	3, cr0, [pc]	; 2d64 <CPSR_IRQ_INHIBIT+0x2ce4>
    2d60:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d64:	20804000 	addcs	r4, r0, r0
    2d68:	00045c07 	andeq	r5, r4, r7, lsl #24
    2d6c:	1dc00300 	stclne	3, cr0, [r0]
    2d70:	0000013c 	andeq	r0, r0, ip, lsr r1
    2d74:	20805000 	addcs	r5, r0, r0
    2d78:	00820900 	addeq	r0, r2, r0, lsl #18
    2d7c:	04020000 	streq	r0, [r2], #-0
    2d80:	00459107 	subeq	r9, r5, r7, lsl #2
    2d84:	01350500 	teqeq	r5, r0, lsl #10
    2d88:	92090000 	andls	r0, r9, #0
    2d8c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2d90:	000000a2 	andeq	r0, r0, r2, lsr #1
    2d94:	0000b209 	andeq	fp, r0, r9, lsl #4
    2d98:	00bf0900 	adcseq	r0, pc, r0, lsl #18
    2d9c:	cf090000 	svcgt	0x00090000
    2da0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2da4:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2da8:	0000ef09 	andeq	lr, r0, r9, lsl #30
    2dac:	00ff0900 	rscseq	r0, pc, r0, lsl #18
    2db0:	0f090000 	svceq	0x00090000
    2db4:	09000001 	stmdbeq	r0, {r0}
    2db8:	0000011f 	andeq	r0, r0, pc, lsl r1
    2dbc:	4d020102 	stfmis	f0, [r2, #-8]
    2dc0:	0a000045 	beq	2edc <CPSR_IRQ_INHIBIT+0x2e5c>
    2dc4:	000014b7 			; <UNDEFINED> instruction: 0x000014b7
    2dc8:	07070410 	smladeq	r7, r0, r4, r0
    2dcc:	0000027f 	andeq	r0, r0, pc, ror r2
    2dd0:	0016900b 	andseq	r9, r6, fp
    2dd4:	0e0b0400 	cfcpyseq	mvf0, mvf11
    2dd8:	00000059 	andeq	r0, r0, r9, asr r0
    2ddc:	15260b00 	strne	r0, [r6, #-2816]!	; 0xfffff500
    2de0:	0d040000 	stceq	0, cr0, [r4, #-0]
    2de4:	0000590e 	andeq	r5, r0, lr, lsl #18
    2de8:	880b0400 	stmdahi	fp, {sl}
    2dec:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    2df0:	00590e0f 	subseq	r0, r9, pc, lsl #28
    2df4:	0b080000 	bleq	202dfc <_bss_end+0x1f114c>
    2df8:	00000765 	andeq	r0, r0, r5, ror #14
    2dfc:	730a1204 	movwvc	r1, #41476	; 0xa204
    2e00:	0c000001 	stceq	0, cr0, [r0], {1}
    2e04:	0014b70c 	andseq	fp, r4, ip, lsl #14
    2e08:	05150400 	ldreq	r0, [r5, #-1024]	; 0xfffffc00
    2e0c:	00001550 	andeq	r1, r0, r0, asr r5
    2e10:	00000284 	andeq	r0, r0, r4, lsl #5
    2e14:	0001d401 	andeq	sp, r1, r1, lsl #8
    2e18:	0001e900 	andeq	lr, r1, r0, lsl #18
    2e1c:	02840d00 	addeq	r0, r4, #0, 26
    2e20:	590e0000 	stmdbpl	lr, {}	; <UNPREDICTABLE>
    2e24:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2e28:	00000059 	andeq	r0, r0, r9, asr r0
    2e2c:	0000590e 	andeq	r5, r0, lr, lsl #18
    2e30:	200c0000 	andcs	r0, ip, r0
    2e34:	0400000a 	streq	r0, [r0], #-10
    2e38:	16000a18 			; <UNDEFINED> instruction: 0x16000a18
    2e3c:	01730000 	cmneq	r3, r0
    2e40:	02010000 	andeq	r0, r1, #0
    2e44:	08000002 	stmdaeq	r0, {r1}
    2e48:	0d000002 	stceq	0, cr0, [r0, #-8]
    2e4c:	00000284 	andeq	r0, r0, r4, lsl #5
    2e50:	09ad0f00 	stmibeq	sp!, {r8, r9, sl, fp}
    2e54:	1a040000 	bne	102e5c <_bss_end+0xf11ac>
    2e58:	00156b0a 	andseq	r6, r5, sl, lsl #22
    2e5c:	021d0100 	andseq	r0, sp, #0, 2
    2e60:	02230000 	eoreq	r0, r3, #0
    2e64:	840d0000 	strhi	r0, [sp], #-0
    2e68:	00000002 	andeq	r0, r0, r2
    2e6c:	00073f0c 	andeq	r3, r7, ip, lsl #30
    2e70:	0a1c0400 	beq	703e78 <_bss_end+0x6f21c8>
    2e74:	0000143a 	andeq	r1, r0, sl, lsr r4
    2e78:	00000173 	andeq	r0, r0, r3, ror r1
    2e7c:	00023c01 	andeq	r3, r2, r1, lsl #24
    2e80:	00024200 	andeq	r4, r2, r0, lsl #4
    2e84:	028a0d00 	addeq	r0, sl, #0, 26
    2e88:	0f000000 	svceq	0x00000000
    2e8c:	0000169b 	muleq	r0, fp, r6
    2e90:	300a1f04 	andcc	r1, sl, r4, lsl #30
    2e94:	01000015 	tsteq	r0, r5, lsl r0
    2e98:	00000257 	andeq	r0, r0, r7, asr r2
    2e9c:	00000262 	andeq	r0, r0, r2, ror #4
    2ea0:	0002840d 	andeq	r8, r2, sp, lsl #8
    2ea4:	01730e00 	cmneq	r3, r0, lsl #28
    2ea8:	10000000 	andne	r0, r0, r0
    2eac:	0000169b 	muleq	r0, fp, r6
    2eb0:	930a2104 	movwls	r2, #41220	; 0xa104
    2eb4:	01000015 	tsteq	r0, r5, lsl r0
    2eb8:	00000273 	andeq	r0, r0, r3, ror r2
    2ebc:	0002840d 	andeq	r8, r2, sp, lsl #8
    2ec0:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    2ec4:	00000000 	andeq	r0, r0, r0
    2ec8:	00017a05 	andeq	r7, r1, r5, lsl #20
    2ecc:	7a041100 	bvc	1072d4 <_bss_end+0xf5624>
    2ed0:	11000001 	tstne	r0, r1
    2ed4:	00027f04 	andeq	r7, r2, r4, lsl #30
    2ed8:	16eb1200 	strbtne	r1, [fp], r0, lsl #4
    2edc:	24040000 	strcs	r0, [r4], #-0
    2ee0:	00017a18 	andeq	r7, r1, r8, lsl sl
    2ee4:	15d50a00 	ldrbne	r0, [r5, #2560]	; 0xa00
    2ee8:	05020000 	streq	r0, [r2, #-0]
    2eec:	03830707 	orreq	r0, r3, #1835008	; 0x1c0000
    2ef0:	650b0000 	strvs	r0, [fp, #-0]
    2ef4:	05000007 	streq	r0, [r0, #-7]
    2ef8:	01730a0b 	cmneq	r3, fp, lsl #20
    2efc:	0b000000 	bleq	2f04 <CPSR_IRQ_INHIBIT+0x2e84>
    2f00:	000015cd 	andeq	r1, r0, sp, asr #11
    2f04:	250a0d05 	strcs	r0, [sl, #-3333]	; 0xfffff2fb
    2f08:	01000000 	mrseq	r0, (UNDEF: 0)
    2f0c:	00161c13 	andseq	r1, r6, r3, lsl ip
    2f10:	1a100500 	bne	404318 <_bss_end+0x3f2668>
    2f14:	00000398 	muleq	r0, r8, r3
    2f18:	0015d50c 	andseq	sp, r5, ip, lsl #10
    2f1c:	05130500 	ldreq	r0, [r3, #-1280]	; 0xfffffb00
    2f20:	000015b3 			; <UNDEFINED> instruction: 0x000015b3
    2f24:	0000039d 	muleq	r0, sp, r3
    2f28:	0002e801 	andeq	lr, r2, r1, lsl #16
    2f2c:	0002ee00 	andeq	lr, r2, r0, lsl #28
    2f30:	039d0d00 	orrseq	r0, sp, #0, 26
    2f34:	0c000000 	stceq	0, cr0, [r0], {-0}
    2f38:	00000a20 	andeq	r0, r0, r0, lsr #20
    2f3c:	a40a1605 	strge	r1, [sl], #-1541	; 0xfffff9fb
    2f40:	73000016 	movwvc	r0, #22
    2f44:	01000001 	tsteq	r0, r1
    2f48:	00000307 	andeq	r0, r0, r7, lsl #6
    2f4c:	0000030d 	andeq	r0, r0, sp, lsl #6
    2f50:	00039d0d 	andeq	r9, r3, sp, lsl #26
    2f54:	ad0f0000 	stcge	0, cr0, [pc, #-0]	; 2f5c <CPSR_IRQ_INHIBIT+0x2edc>
    2f58:	05000009 	streq	r0, [r0, #-9]
    2f5c:	15080a18 	strne	r0, [r8, #-2584]	; 0xfffff5e8
    2f60:	22010000 	andcs	r0, r1, #0
    2f64:	28000003 	stmdacs	r0, {r0, r1}
    2f68:	0d000003 	stceq	0, cr0, [r0, #-12]
    2f6c:	0000039d 	muleq	r0, sp, r3
    2f70:	073f0c00 	ldreq	r0, [pc, -r0, lsl #24]!
    2f74:	1a050000 	bne	142f7c <_bss_end+0x1312cc>
    2f78:	0014e50a 	andseq	lr, r4, sl, lsl #10
    2f7c:	00017300 	andeq	r7, r1, r0, lsl #6
    2f80:	03410100 	movteq	r0, #4352	; 0x1100
    2f84:	03470000 	movteq	r0, #28672	; 0x7000
    2f88:	a80d0000 	stmdage	sp, {}	; <UNPREDICTABLE>
    2f8c:	00000003 	andeq	r0, r0, r3
    2f90:	001ce00f 	andseq	lr, ip, pc
    2f94:	0a1d0500 	beq	74439c <_bss_end+0x7326ec>
    2f98:	0000164b 	andeq	r1, r0, fp, asr #12
    2f9c:	00035c01 	andeq	r5, r3, r1, lsl #24
    2fa0:	00036700 	andeq	r6, r3, r0, lsl #14
    2fa4:	039d0d00 	orrseq	r0, sp, #0, 26
    2fa8:	250e0000 	strcs	r0, [lr, #-0]
    2fac:	00000000 	andeq	r0, r0, r0
    2fb0:	0002d314 	andeq	sp, r2, r4, lsl r3
    2fb4:	0a1f0500 	beq	7c43bc <_bss_end+0x7b270c>
    2fb8:	000014c7 	andeq	r1, r0, r7, asr #9
    2fbc:	00000025 	andeq	r0, r0, r5, lsr #32
    2fc0:	00037c01 	andeq	r7, r3, r1, lsl #24
    2fc4:	03a80d00 			; <UNDEFINED> instruction: 0x03a80d00
    2fc8:	00000000 	andeq	r0, r0, r0
    2fcc:	00029c05 	andeq	r9, r2, r5, lsl #24
    2fd0:	00461500 	subeq	r1, r6, r0, lsl #10
    2fd4:	03980000 	orrseq	r0, r8, #0
    2fd8:	6a160000 	bvs	582fe0 <_bss_end+0x571330>
    2fdc:	5f000000 	svcpl	0x00000000
    2fe0:	03880500 	orreq	r0, r8, #0, 10
    2fe4:	04110000 	ldreq	r0, [r1], #-0
    2fe8:	0000029c 	muleq	r0, ip, r2
    2fec:	00039d05 	andeq	r9, r3, r5, lsl #26
    2ff0:	83041100 	movwhi	r1, #16640	; 0x4100
    2ff4:	05000003 	streq	r0, [r0, #-3]
    2ff8:	000003a8 	andeq	r0, r0, r8, lsr #7
    2ffc:	00163a12 	andseq	r3, r6, r2, lsl sl
    3000:	19220500 	stmdbne	r2!, {r8, sl}
    3004:	0000029c 	muleq	r0, ip, r2
    3008:	0003b317 	andeq	fp, r3, r7, lsl r3
    300c:	12030100 	andne	r0, r3, #0, 2
    3010:	0bd00305 	bleq	ff403c2c <_bss_end+0xff3f1f7c>
    3014:	c3180001 	tstgt	r8, #1
    3018:	01000002 	tsteq	r0, r2
    301c:	16690f15 	uqadd16ne	r0, r9, r5
    3020:	03050000 	movweq	r0, #20480	; 0x5000
    3024:	000100a4 	andeq	r0, r1, r4, lsr #1
    3028:	00162b19 	andseq	r2, r6, r9, lsl fp
    302c:	00aec400 	adceq	ip, lr, r0, lsl #8
    3030:	00001c00 	andeq	r1, r0, r0, lsl #24
    3034:	1a9c0100 	bne	fe70343c <_bss_end+0xfe6f178c>
    3038:	00000241 	andeq	r0, r0, r1, asr #4
    303c:	0000ae78 	andeq	sl, r0, r8, ror lr
    3040:	0000004c 	andeq	r0, r0, ip, asr #32
    3044:	04209c01 	strteq	r9, [r0], #-3073	; 0xfffff3ff
    3048:	3b1b0000 	blcc	6c3050 <_bss_end+0x6b13a0>
    304c:	01000003 	tsteq	r0, r3
    3050:	003301b4 	ldrhteq	r0, [r3], -r4
    3054:	91020000 	mrsls	r0, (UNDEF: 2)
    3058:	07341b74 			; <UNDEFINED> instruction: 0x07341b74
    305c:	b4010000 	strlt	r0, [r1], #-0
    3060:	00003301 	andeq	r3, r0, r1, lsl #6
    3064:	70910200 	addsvc	r0, r1, r0, lsl #4
    3068:	03671c00 	cmneq	r7, #0, 24
    306c:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    3070:	00043a06 	andeq	r3, r4, r6, lsl #20
    3074:	00ae3000 	adceq	r3, lr, r0
    3078:	00004800 	andeq	r4, r0, r0, lsl #16
    307c:	479c0100 	ldrmi	r0, [ip, r0, lsl #2]
    3080:	1d000004 	stcne	0, cr0, [r0, #-16]
    3084:	0000032c 	andeq	r0, r0, ip, lsr #6
    3088:	000003ae 	andeq	r0, r0, lr, lsr #7
    308c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3090:	0003471e 	andeq	r4, r3, lr, lsl r7
    3094:	069f0100 	ldreq	r0, [pc], r0, lsl #2
    3098:	00000461 	andeq	r0, r0, r1, ror #8
    309c:	0000ad9c 	muleq	r0, ip, sp
    30a0:	00000094 	muleq	r0, r4, r0
    30a4:	048a9c01 	streq	r9, [sl], #3073	; 0xc01
    30a8:	2c1d0000 	ldccs	0, cr0, [sp], {-0}
    30ac:	a3000003 	movwge	r0, #3
    30b0:	02000003 	andeq	r0, r0, #3
    30b4:	631f6c91 	tstvs	pc, #37120	; 0x9100
    30b8:	239f0100 	orrscs	r0, pc, #0, 2
    30bc:	00000025 	andeq	r0, r0, r5, lsr #32
    30c0:	206b9102 	rsbcs	r9, fp, r2, lsl #2
    30c4:	00786469 	rsbseq	r6, r8, r9, ror #8
    30c8:	3a0da401 	bcc	36c0d4 <_bss_end+0x35a424>
    30cc:	02000000 	andeq	r0, r0, #0
    30d0:	1c007791 	stcne	7, cr7, [r0], {145}	; 0x91
    30d4:	00000328 	andeq	r0, r0, r8, lsr #6
    30d8:	a4069a01 	strge	r9, [r6], #-2561	; 0xfffff5ff
    30dc:	74000004 	strvc	r0, [r0], #-4
    30e0:	280000ad 	stmdacs	r0, {r0, r2, r3, r5, r7}
    30e4:	01000000 	mrseq	r0, (UNDEF: 0)
    30e8:	0004b19c 	muleq	r4, ip, r1
    30ec:	032c1d00 			; <UNDEFINED> instruction: 0x032c1d00
    30f0:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
    30f4:	91020000 	mrsls	r0, (UNDEF: 2)
    30f8:	0d1e0074 	ldceq	0, cr0, [lr, #-464]	; 0xfffffe30
    30fc:	01000003 	tsteq	r0, r3
    3100:	04cb0690 	strbeq	r0, [fp], #1680	; 0x690
    3104:	ad240000 	stcge	0, cr0, [r4, #-0]
    3108:	00500000 	subseq	r0, r0, r0
    310c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3110:	000004d8 	ldrdeq	r0, [r0], -r8
    3114:	00032c1d 	andeq	r2, r3, sp, lsl ip
    3118:	0003a300 	andeq	sl, r3, r0, lsl #6
    311c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3120:	02ee1e00 	rsceq	r1, lr, #0, 28
    3124:	83010000 	movwhi	r0, #4096	; 0x1000
    3128:	0004f206 	andeq	pc, r4, r6, lsl #4
    312c:	00acb800 	adceq	fp, ip, r0, lsl #16
    3130:	00006c00 	andeq	r6, r0, r0, lsl #24
    3134:	ff9c0100 			; <UNDEFINED> instruction: 0xff9c0100
    3138:	1d000004 	stcne	0, cr0, [r0, #-16]
    313c:	0000032c 	andeq	r0, r0, ip, lsr #6
    3140:	000003a3 	andeq	r0, r0, r3, lsr #7
    3144:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3148:	0002cf21 	andeq	ip, r2, r1, lsr #30
    314c:	017c0100 	cmneq	ip, r0, lsl #2
    3150:	00000510 	andeq	r0, r0, r0, lsl r5
    3154:	00051a00 	andeq	r1, r5, r0, lsl #20
    3158:	032c2200 			; <UNDEFINED> instruction: 0x032c2200
    315c:	03a30000 			; <UNDEFINED> instruction: 0x03a30000
    3160:	23000000 	movwcs	r0, #0
    3164:	000004ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3168:	000015e6 	andeq	r1, r0, r6, ror #11
    316c:	00000531 	andeq	r0, r0, r1, lsr r5
    3170:	0000ac7c 	andeq	sl, r0, ip, ror ip
    3174:	0000003c 	andeq	r0, r0, ip, lsr r0
    3178:	10249c01 	eorne	r9, r4, r1, lsl #24
    317c:	02000005 	andeq	r0, r0, #5
    3180:	00007491 	muleq	r0, r1, r4
    3184:	00000702 	andeq	r0, r0, r2, lsl #14
    3188:	0f130004 	svceq	0x00130004
    318c:	01040000 	mrseq	r0, (UNDEF: 4)
    3190:	00000014 	andeq	r0, r0, r4, lsl r0
    3194:	00171204 	andseq	r1, r7, r4, lsl #4
    3198:	0000c500 	andeq	ip, r0, r0, lsl #10
    319c:	00aee000 	adceq	lr, lr, r0
    31a0:	0005c400 	andeq	ip, r5, r0, lsl #8
    31a4:	00159500 	andseq	r9, r5, r0, lsl #10
    31a8:	08010200 	stmdaeq	r1, {r9}
    31ac:	00000573 	andeq	r0, r0, r3, ror r5
    31b0:	99050202 	stmdbls	r5, {r1, r9}
    31b4:	03000005 	movweq	r0, #5
    31b8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    31bc:	33040074 	movwcc	r0, #16500	; 0x4074
    31c0:	05000000 	streq	r0, [r0, #-0]
    31c4:	00000982 	andeq	r0, r0, r2, lsl #19
    31c8:	4b070702 	blmi	1c4dd8 <_bss_end+0x1b3128>
    31cc:	02000000 	andeq	r0, r0, #0
    31d0:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    31d4:	02020000 	andeq	r0, r2, #0
    31d8:	0003dc07 	andeq	sp, r3, r7, lsl #24
    31dc:	05e40500 	strbeq	r0, [r4, #1280]!	; 0x500
    31e0:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    31e4:	00006a07 	andeq	r6, r0, r7, lsl #20
    31e8:	00590600 	subseq	r0, r9, r0, lsl #12
    31ec:	04020000 	streq	r0, [r2], #-0
    31f0:	00459607 	subeq	r9, r5, r7, lsl #12
    31f4:	006a0600 	rsbeq	r0, sl, r0, lsl #12
    31f8:	6a040000 	bvs	103200 <_bss_end+0xf1550>
    31fc:	07000000 	streq	r0, [r0, -r0]
    3200:	006c6168 	rsbeq	r6, ip, r8, ror #2
    3204:	350b0503 	strcc	r0, [fp, #-1283]	; 0xfffffafd
    3208:	08000001 	stmdaeq	r0, {r0}
    320c:	00000487 	andeq	r0, r0, r7, lsl #9
    3210:	711c0703 	tstvc	ip, r3, lsl #14
    3214:	80000000 	andhi	r0, r0, r0
    3218:	080ee6b2 	stmdaeq	lr, {r1, r4, r5, r7, r9, sl, sp, lr, pc}
    321c:	000005cc 	andeq	r0, r0, ip, asr #11
    3220:	411d0a03 	tstmi	sp, r3, lsl #20
    3224:	00000001 	andeq	r0, r0, r1
    3228:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    322c:	00000452 	andeq	r0, r0, r2, asr r4
    3230:	411d0d03 	tstmi	sp, r3, lsl #26
    3234:	00000001 	andeq	r0, r0, r1
    3238:	09202000 	stmdbeq	r0!, {sp}
    323c:	0000058a 	andeq	r0, r0, sl, lsl #11
    3240:	65181003 	ldrvs	r1, [r8, #-3]
    3244:	36000000 	strcc	r0, [r0], -r0
    3248:	00037308 	andeq	r7, r3, r8, lsl #6
    324c:	1d420300 	stclne	3, cr0, [r2, #-0]
    3250:	00000141 	andeq	r0, r0, r1, asr #2
    3254:	20215000 	eorcs	r5, r1, r0
    3258:	00034a08 	andeq	r4, r3, r8, lsl #20
    325c:	1d710300 	ldclne	3, cr0, [r1, #-0]
    3260:	00000141 	andeq	r0, r0, r1, asr #2
    3264:	2000b200 	andcs	fp, r0, r0, lsl #4
    3268:	0002b608 	andeq	fp, r2, r8, lsl #12
    326c:	1da40300 	stcne	3, cr0, [r4]
    3270:	00000141 	andeq	r0, r0, r1, asr #2
    3274:	2000b400 	andcs	fp, r0, r0, lsl #8
    3278:	00036408 	andeq	r6, r3, r8, lsl #8
    327c:	1db30300 	ldcne	3, cr0, [r3]
    3280:	00000141 	andeq	r0, r0, r1, asr #2
    3284:	20104000 	andscs	r4, r0, r0
    3288:	00033108 	andeq	r3, r3, r8, lsl #2
    328c:	1dbe0300 	ldcne	3, cr0, [lr]
    3290:	00000141 	andeq	r0, r0, r1, asr #2
    3294:	20205000 	eorcs	r5, r0, r0
    3298:	0003ef08 	andeq	lr, r3, r8, lsl #30
    329c:	1dbf0300 	ldcne	3, cr0, [pc]	; 32a4 <CPSR_IRQ_INHIBIT+0x3224>
    32a0:	00000141 	andeq	r0, r0, r1, asr #2
    32a4:	20804000 	addcs	r4, r0, r0
    32a8:	00045c08 	andeq	r5, r4, r8, lsl #24
    32ac:	1dc00300 	stclne	3, cr0, [r0]
    32b0:	00000141 	andeq	r0, r0, r1, asr #2
    32b4:	20805000 	addcs	r5, r0, r0
    32b8:	00870a00 	addeq	r0, r7, r0, lsl #20
    32bc:	04020000 	streq	r0, [r2], #-0
    32c0:	00459107 	subeq	r9, r5, r7, lsl #2
    32c4:	013a0600 	teqeq	sl, r0, lsl #12
    32c8:	970a0000 	strls	r0, [sl, -r0]
    32cc:	0a000000 	beq	32d4 <CPSR_IRQ_INHIBIT+0x3254>
    32d0:	000000a7 	andeq	r0, r0, r7, lsr #1
    32d4:	0000b70a 	andeq	fp, r0, sl, lsl #14
    32d8:	00c40a00 	sbceq	r0, r4, r0, lsl #20
    32dc:	d40a0000 	strle	r0, [sl], #-0
    32e0:	0a000000 	beq	32e8 <CPSR_IRQ_INHIBIT+0x3268>
    32e4:	000000e4 	andeq	r0, r0, r4, ror #1
    32e8:	0000f40a 	andeq	pc, r0, sl, lsl #8
    32ec:	01040a00 	tsteq	r4, r0, lsl #20
    32f0:	140a0000 	strne	r0, [sl], #-0
    32f4:	0a000001 	beq	3300 <CPSR_IRQ_INHIBIT+0x3280>
    32f8:	00000124 	andeq	r0, r0, r4, lsr #2
    32fc:	00054d0b 	andeq	r4, r5, fp, lsl #26
    3300:	6a040700 	bvs	104f08 <_bss_end+0xf3258>
    3304:	04000000 	streq	r0, [r0], #-0
    3308:	01c10c07 	biceq	r0, r1, r7, lsl #24
    330c:	dc0c0000 	stcle	0, cr0, [ip], {-0}
    3310:	00000002 	andeq	r0, r0, r2
    3314:	00051d0c 	andeq	r1, r5, ip, lsl #26
    3318:	150c0100 	strne	r0, [ip, #-256]	; 0xffffff00
    331c:	02000002 	andeq	r0, r0, #2
    3320:	00020f0c 	andeq	r0, r2, ip, lsl #30
    3324:	f70c0300 			; <UNDEFINED> instruction: 0xf70c0300
    3328:	04000001 	streq	r0, [r0], #-1
    332c:	0001fd0c 	andeq	pc, r1, ip, lsl #26
    3330:	030c0500 	movweq	r0, #50432	; 0xc500
    3334:	06000002 	streq	r0, [r0], -r2
    3338:	0002090c 	andeq	r0, r2, ip, lsl #18
    333c:	280c0700 	stmdacs	ip, {r8, r9, sl}
    3340:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3344:	071a0d00 	ldreq	r0, [sl, -r0, lsl #26]
    3348:	04140000 	ldreq	r0, [r4], #-0
    334c:	03bc071b 			; <UNDEFINED> instruction: 0x03bc071b
    3350:	020e0000 	andeq	r0, lr, #0
    3354:	04000004 	streq	r0, [r0], #-4
    3358:	03c7221f 	biceq	r2, r7, #-268435455	; 0xf0000001
    335c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3360:	000002c1 	andeq	r0, r0, r1, asr #5
    3364:	cc0e2204 	sfmgt	f2, 4, [lr], {4}
    3368:	04000003 	streq	r0, [r0], #-3
    336c:	0004f10e 	andeq	pc, r4, lr, lsl #2
    3370:	0e240400 	cdpeq	4, 2, cr0, cr4, cr0, {0}
    3374:	000003cc 	andeq	r0, r0, ip, asr #7
    3378:	043e0f0c 	ldrteq	r0, [lr], #-3852	; 0xfffff0f4
    337c:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    3380:	0003ac0a 	andeq	sl, r3, sl, lsl #24
    3384:	0003dc00 	andeq	sp, r3, r0, lsl #24
    3388:	020e0200 	andeq	r0, lr, #0, 4
    338c:	02230000 	eoreq	r0, r3, #0
    3390:	e3100000 	tst	r0, #0
    3394:	11000003 	tstne	r0, r3
    3398:	00000059 	andeq	r0, r0, r9, asr r0
    339c:	0003e911 	andeq	lr, r3, r1, lsl r9
    33a0:	03e91100 	mvneq	r1, #0, 2
    33a4:	0f000000 	svceq	0x00000000
    33a8:	000004de 	ldrdeq	r0, [r0], -lr
    33ac:	af0a2a04 	svcge	0x000a2a04
    33b0:	dc000004 	stcle	0, cr0, [r0], {4}
    33b4:	02000003 	andeq	r0, r0, #3
    33b8:	0000023c 	andeq	r0, r0, ip, lsr r2
    33bc:	00000251 	andeq	r0, r0, r1, asr r2
    33c0:	0003e310 	andeq	lr, r3, r0, lsl r3
    33c4:	00591100 	subseq	r1, r9, r0, lsl #2
    33c8:	e9110000 	ldmdb	r1, {}	; <UNPREDICTABLE>
    33cc:	11000003 	tstne	r0, r3
    33d0:	000003e9 	andeq	r0, r0, r9, ror #7
    33d4:	062d0f00 	strteq	r0, [sp], -r0, lsl #30
    33d8:	2c040000 	stccs	0, cr0, [r4], {-0}
    33dc:	0006ad0a 	andeq	sl, r6, sl, lsl #26
    33e0:	0003dc00 	andeq	sp, r3, r0, lsl #24
    33e4:	026a0200 	rsbeq	r0, sl, #0, 4
    33e8:	027f0000 	rsbseq	r0, pc, #0
    33ec:	e3100000 	tst	r0, #0
    33f0:	11000003 	tstne	r0, r3
    33f4:	00000059 	andeq	r0, r0, r9, asr r0
    33f8:	0003e911 	andeq	lr, r3, r1, lsl r9
    33fc:	03e91100 	mvneq	r1, #0, 2
    3400:	0f000000 	svceq	0x00000000
    3404:	00000466 	andeq	r0, r0, r6, ror #8
    3408:	fe0a2e04 	cdp2	14, 0, cr2, cr10, cr4, {0}
    340c:	dc000005 	stcle	0, cr0, [r0], {5}
    3410:	02000003 	andeq	r0, r0, #3
    3414:	00000298 	muleq	r0, r8, r2
    3418:	000002ad 	andeq	r0, r0, sp, lsr #5
    341c:	0003e310 	andeq	lr, r3, r0, lsl r3
    3420:	00591100 	subseq	r1, r9, r0, lsl #2
    3424:	e9110000 	ldmdb	r1, {}	; <UNPREDICTABLE>
    3428:	11000003 	tstne	r0, r3
    342c:	000003e9 	andeq	r0, r0, r9, ror #7
    3430:	071a0f00 	ldreq	r0, [sl, -r0, lsl #30]
    3434:	31040000 	mrscc	r0, (UNDEF: 4)
    3438:	0005b505 	andeq	fp, r5, r5, lsl #10
    343c:	0003ef00 	andeq	lr, r3, r0, lsl #30
    3440:	02c60100 	sbceq	r0, r6, #0, 2
    3444:	02d10000 	sbcseq	r0, r1, #0
    3448:	ef100000 	svc	0x00100000
    344c:	11000003 	tstne	r0, r3
    3450:	0000006a 	andeq	r0, r0, sl, rrx
    3454:	028a1200 	addeq	r1, sl, #0, 4
    3458:	34040000 	strcc	r0, [r4], #-0
    345c:	0005240a 	andeq	r2, r5, sl, lsl #8
    3460:	02e60100 	rsceq	r0, r6, #0, 2
    3464:	02f60000 	rscseq	r0, r6, #0
    3468:	ef100000 	svc	0x00100000
    346c:	11000003 	tstne	r0, r3
    3470:	00000059 	andeq	r0, r0, r9, asr r0
    3474:	00017811 	andeq	r7, r1, r1, lsl r8
    3478:	780f0000 	stmdavc	pc, {}	; <UNPREDICTABLE>
    347c:	04000005 	streq	r0, [r0], #-5
    3480:	06ec1436 			; <UNDEFINED> instruction: 0x06ec1436
    3484:	01780000 	cmneq	r8, r0
    3488:	0f010000 	svceq	0x00010000
    348c:	1a000003 	bne	34a0 <CPSR_IRQ_INHIBIT+0x3420>
    3490:	10000003 	andne	r0, r0, r3
    3494:	000003e3 	andeq	r0, r0, r3, ror #7
    3498:	00005911 	andeq	r5, r0, r1, lsl r9
    349c:	19120000 	ldmdbne	r2, {}	; <UNPREDICTABLE>
    34a0:	04000005 	streq	r0, [r0], #-5
    34a4:	04160a39 	ldreq	r0, [r6], #-2617	; 0xfffff5c7
    34a8:	2f010000 	svccs	0x00010000
    34ac:	3f000003 	svccc	0x00000003
    34b0:	10000003 	andne	r0, r0, r3
    34b4:	000003ef 	andeq	r0, r0, pc, ror #7
    34b8:	00005911 	andeq	r5, r0, r1, lsl r9
    34bc:	03dc1100 	bicseq	r1, ip, #0, 2
    34c0:	0f000000 	svceq	0x00000000
    34c4:	000002d8 	ldrdeq	r0, [r0], -r8
    34c8:	6b0a3c04 	blvs	2924e0 <_bss_end+0x280830>
    34cc:	dc000002 	stcle	0, cr0, [r0], {2}
    34d0:	01000003 	tsteq	r0, r3
    34d4:	00000358 	andeq	r0, r0, r8, asr r3
    34d8:	00000363 	andeq	r0, r0, r3, ror #6
    34dc:	0003ef10 	andeq	lr, r3, r0, lsl pc
    34e0:	00591100 	subseq	r1, r9, r0, lsl #2
    34e4:	0f000000 	svceq	0x00000000
    34e8:	000005ed 	andeq	r0, r0, sp, ror #11
    34ec:	d30a3f04 	movwle	r3, #44804	; 0xaf04
    34f0:	dc000001 	stcle	0, cr0, [r0], {1}
    34f4:	01000003 	tsteq	r0, r3
    34f8:	0000037c 	andeq	r0, r0, ip, ror r3
    34fc:	00000391 	muleq	r0, r1, r3
    3500:	0003ef10 	andeq	lr, r3, r0, lsl pc
    3504:	00591100 	subseq	r1, r9, r0, lsl #2
    3508:	dc110000 	ldcle	0, cr0, [r1], {-0}
    350c:	11000003 	tstne	r0, r3
    3510:	000003dc 	ldrdeq	r0, [r0], -ip
    3514:	05a31300 	streq	r1, [r3, #768]!	; 0x300
    3518:	41040000 	mrsmi	r0, (UNDEF: 4)
    351c:	0002fe0a 	andeq	pc, r2, sl, lsl #28
    3520:	0003dc00 	andeq	sp, r3, r0, lsl #24
    3524:	03a60100 			; <UNDEFINED> instruction: 0x03a60100
    3528:	ef100000 	svc	0x00100000
    352c:	11000003 	tstne	r0, r3
    3530:	00000059 	andeq	r0, r0, r9, asr r0
    3534:	0003dc11 	andeq	sp, r3, r1, lsl ip
    3538:	03dc1100 	bicseq	r1, ip, #0, 2
    353c:	00000000 	andeq	r0, r0, r0
    3540:	0001c106 	andeq	ip, r1, r6, lsl #2
    3544:	76041400 	strvc	r1, [r4], -r0, lsl #8
    3548:	06000000 	streq	r0, [r0], -r0
    354c:	000003c1 	andeq	r0, r0, r1, asr #7
    3550:	00005915 	andeq	r5, r0, r5, lsl r9
    3554:	0003dc00 	andeq	sp, r3, r0, lsl #24
    3558:	006a1600 	rsbeq	r1, sl, r0, lsl #12
    355c:	00010000 	andeq	r0, r1, r0
    3560:	4d020102 	stfmis	f0, [r2, #-8]
    3564:	14000045 	strne	r0, [r0], #-69	; 0xffffffbb
    3568:	0003bc04 	andeq	fp, r3, r4, lsl #24
    356c:	59041700 	stmdbpl	r4, {r8, r9, sl, ip}
    3570:	14000000 	strne	r0, [r0], #-0
    3574:	0001c104 	andeq	ip, r1, r4, lsl #2
    3578:	04a91800 	strteq	r1, [r9], #2048	; 0x800
    357c:	45040000 	strmi	r0, [r4, #-0]
    3580:	0001c116 	andeq	ip, r1, r6, lsl r1
    3584:	14b70d00 	ldrtne	r0, [r7], #3328	; 0xd00
    3588:	05100000 	ldreq	r0, [r0, #-0]
    358c:	05060707 	streq	r0, [r6, #-1799]	; 0xfffff8f9
    3590:	900e0000 	andls	r0, lr, r0
    3594:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    3598:	00590e0b 	subseq	r0, r9, fp, lsl #28
    359c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    35a0:	00001526 	andeq	r1, r0, r6, lsr #10
    35a4:	590e0d05 	stmdbpl	lr, {r0, r2, r8, sl, fp}
    35a8:	04000000 	streq	r0, [r0], #-0
    35ac:	0015880e 	andseq	r8, r5, lr, lsl #16
    35b0:	0e0f0500 	cfsh32eq	mvfx0, mvfx15, #0
    35b4:	00000059 	andeq	r0, r0, r9, asr r0
    35b8:	07650e08 	strbeq	r0, [r5, -r8, lsl #28]!
    35bc:	12050000 	andne	r0, r5, #0
    35c0:	0003dc0a 	andeq	sp, r3, sl, lsl #24
    35c4:	b70f0c00 	strlt	r0, [pc, -r0, lsl #24]
    35c8:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    35cc:	15500515 	ldrbne	r0, [r0, #-1301]	; 0xfffffaeb
    35d0:	050b0000 	streq	r0, [fp, #-0]
    35d4:	5b010000 	blpl	435dc <_bss_end+0x3192c>
    35d8:	70000004 	andvc	r0, r0, r4
    35dc:	10000004 	andne	r0, r0, r4
    35e0:	0000050b 	andeq	r0, r0, fp, lsl #10
    35e4:	00005911 	andeq	r5, r0, r1, lsl r9
    35e8:	00591100 	subseq	r1, r9, r0, lsl #2
    35ec:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    35f0:	00000000 	andeq	r0, r0, r0
    35f4:	000a200f 	andeq	r2, sl, pc
    35f8:	0a180500 	beq	604a00 <_bss_end+0x5f2d50>
    35fc:	00001600 	andeq	r1, r0, r0, lsl #12
    3600:	000003dc 	ldrdeq	r0, [r0], -ip
    3604:	00048901 	andeq	r8, r4, r1, lsl #18
    3608:	00048f00 	andeq	r8, r4, r0, lsl #30
    360c:	050b1000 	streq	r1, [fp, #-0]
    3610:	12000000 	andne	r0, r0, #0
    3614:	000009ad 	andeq	r0, r0, sp, lsr #19
    3618:	6b0a1a05 	blvs	289e34 <_bss_end+0x278184>
    361c:	01000015 	tsteq	r0, r5, lsl r0
    3620:	000004a4 	andeq	r0, r0, r4, lsr #9
    3624:	000004aa 	andeq	r0, r0, sl, lsr #9
    3628:	00050b10 	andeq	r0, r5, r0, lsl fp
    362c:	3f0f0000 	svccc	0x000f0000
    3630:	05000007 	streq	r0, [r0, #-7]
    3634:	143a0a1c 	ldrtne	r0, [sl], #-2588	; 0xfffff5e4
    3638:	03dc0000 	bicseq	r0, ip, #0
    363c:	c3010000 	movwgt	r0, #4096	; 0x1000
    3640:	c9000004 	stmdbgt	r0, {r2}
    3644:	10000004 	andne	r0, r0, r4
    3648:	00000516 	andeq	r0, r0, r6, lsl r5
    364c:	169b1200 	ldrne	r1, [fp], r0, lsl #4
    3650:	1f050000 	svcne	0x00050000
    3654:	0015300a 	andseq	r3, r5, sl
    3658:	04de0100 	ldrbeq	r0, [lr], #256	; 0x100
    365c:	04e90000 	strbteq	r0, [r9], #0
    3660:	0b100000 	bleq	403668 <_bss_end+0x3f19b8>
    3664:	11000005 	tstne	r0, r5
    3668:	000003dc 	ldrdeq	r0, [r0], -ip
    366c:	169b1900 	ldrne	r1, [fp], r0, lsl #18
    3670:	21050000 	mrscs	r0, (UNDEF: 5)
    3674:	0015930a 	andseq	r9, r5, sl, lsl #6
    3678:	04fa0100 	ldrbteq	r0, [sl], #256	; 0x100
    367c:	0b100000 	bleq	403684 <_bss_end+0x3f19d4>
    3680:	11000005 	tstne	r0, r5
    3684:	0000003f 	andeq	r0, r0, pc, lsr r0
    3688:	01060000 	mrseq	r0, (UNDEF: 6)
    368c:	14000004 	strne	r0, [r0], #-4
    3690:	00040104 	andeq	r0, r4, r4, lsl #2
    3694:	050b0600 	streq	r0, [fp, #-1536]	; 0xfffffa00
    3698:	04140000 	ldreq	r0, [r4], #-0
    369c:	00000506 	andeq	r0, r0, r6, lsl #10
    36a0:	00051606 	andeq	r1, r5, r6, lsl #12
    36a4:	16eb1800 	strbtne	r1, [fp], r0, lsl #16
    36a8:	24050000 	strcs	r0, [r5], #-0
    36ac:	00040118 	andeq	r0, r4, r8, lsl r1
    36b0:	05211a00 	streq	r1, [r1, #-2560]!	; 0xfffff600
    36b4:	05010000 	streq	r0, [r1, #-0]
    36b8:	d4030511 	strle	r0, [r3], #-1297	; 0xfffffaef
    36bc:	1b00010b 	blne	3af0 <CPSR_IRQ_INHIBIT+0x3a70>
    36c0:	000016dc 	ldrdeq	r1, [r0], -ip
    36c4:	0000b488 	andeq	fp, r0, r8, lsl #9
    36c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    36cc:	411c9c01 	tstmi	ip, r1, lsl #24
    36d0:	30000002 	andcc	r0, r0, r2
    36d4:	580000b4 	stmdapl	r0, {r2, r4, r5, r7}
    36d8:	01000000 	mrseq	r0, (UNDEF: 0)
    36dc:	00057c9c 	muleq	r5, ip, ip
    36e0:	033b1d00 	teqeq	fp, #0, 26
    36e4:	80010000 	andhi	r0, r1, r0
    36e8:	00003301 	andeq	r3, r0, r1, lsl #6
    36ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    36f0:	0007341d 	andeq	r3, r7, sp, lsl r4
    36f4:	01800100 	orreq	r0, r0, r0, lsl #2
    36f8:	00000033 	andeq	r0, r0, r3, lsr r0
    36fc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3700:	0004e91e 	andeq	lr, r4, lr, lsl r9
    3704:	06650100 	strbteq	r0, [r5], -r0, lsl #2
    3708:	00000596 	muleq	r0, r6, r5
    370c:	0000b2cc 	andeq	fp, r0, ip, asr #5
    3710:	00000164 	andeq	r0, r0, r4, ror #2
    3714:	05d69c01 	ldrbeq	r9, [r6, #3073]	; 0xc01
    3718:	2c1f0000 	ldccs	0, cr0, [pc], {-0}
    371c:	11000003 	tstne	r0, r3
    3720:	02000005 	andeq	r0, r0, #5
    3724:	fb1d6c91 	blx	75e972 <_bss_end+0x74ccc2>
    3728:	01000016 	tsteq	r0, r6, lsl r0
    372c:	003f2865 	eorseq	r2, pc, r5, ror #16
    3730:	91020000 	mrsls	r0, (UNDEF: 2)
    3734:	0069206b 	rsbeq	r2, r9, fp, rrx
    3738:	3a126a01 	bcc	49df44 <_bss_end+0x48c294>
    373c:	02000000 	andeq	r0, r0, #0
    3740:	14217091 	strtne	r7, [r1], #-145	; 0xffffff6f
    3744:	f00000b3 			; <UNDEFINED> instruction: 0xf00000b3
    3748:	20000000 	andcs	r0, r0, r0
    374c:	7001006a 	andvc	r0, r1, sl, rrx
    3750:	0000330e 	andeq	r3, r0, lr, lsl #6
    3754:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3758:	c91e0000 	ldmdbgt	lr, {}	; <UNPREDICTABLE>
    375c:	01000004 	tsteq	r0, r4
    3760:	05f00647 	ldrbeq	r0, [r0, #1607]!	; 0x647
    3764:	b1a80000 			; <UNDEFINED> instruction: 0xb1a80000
    3768:	01240000 			; <UNDEFINED> instruction: 0x01240000
    376c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3770:	00000619 	andeq	r0, r0, r9, lsl r6
    3774:	00032c1f 	andeq	r2, r3, pc, lsl ip
    3778:	00051100 	andeq	r1, r5, r0, lsl #2
    377c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3780:	74696222 	strbtvc	r6, [r9], #-546	; 0xfffffdde
    3784:	25470100 	strbcs	r0, [r7, #-256]	; 0xffffff00
    3788:	000003dc 	ldrdeq	r0, [r0], -ip
    378c:	206b9102 	rsbcs	r9, fp, r2, lsl #2
    3790:	4c010069 	stcmi	0, cr0, [r1], {105}	; 0x69
    3794:	00003a12 	andeq	r3, r0, r2, lsl sl
    3798:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    379c:	04aa2300 	strteq	r2, [sl], #768	; 0x300
    37a0:	42010000 	andmi	r0, r1, #0
    37a4:	00063306 	andeq	r3, r6, r6, lsl #6
    37a8:	00b18000 	adcseq	r8, r1, r0
    37ac:	00002800 	andeq	r2, r0, r0, lsl #16
    37b0:	409c0100 	addsmi	r0, ip, r0, lsl #2
    37b4:	1f000006 	svcne	0x00000006
    37b8:	0000032c 	andeq	r0, r0, ip, lsr #6
    37bc:	0000051c 	andeq	r0, r0, ip, lsl r5
    37c0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    37c4:	00048f1e 	andeq	r8, r4, lr, lsl pc
    37c8:	06300100 	ldrteq	r0, [r0], -r0, lsl #2
    37cc:	0000065a 	andeq	r0, r0, sl, asr r6
    37d0:	0000b0a8 	andeq	fp, r0, r8, lsr #1
    37d4:	000000d8 	ldrdeq	r0, [r0], -r8
    37d8:	06679c01 	strbteq	r9, [r7], -r1, lsl #24
    37dc:	2c1f0000 	ldccs	0, cr0, [pc], {-0}
    37e0:	11000003 	tstne	r0, r3
    37e4:	02000005 	andeq	r0, r0, #5
    37e8:	1e007491 	mcrne	4, 0, r7, cr0, cr1, {4}
    37ec:	00000470 	andeq	r0, r0, r0, ror r4
    37f0:	81060f01 	tsthi	r6, r1, lsl #30
    37f4:	34000006 	strcc	r0, [r0], #-6
    37f8:	740000af 	strvc	r0, [r0], #-175	; 0xffffff51
    37fc:	01000001 	tsteq	r0, r1
    3800:	00068e9c 	muleq	r6, ip, lr
    3804:	032c1f00 			; <UNDEFINED> instruction: 0x032c1f00
    3808:	05110000 	ldreq	r0, [r1, #-0]
    380c:	91020000 	mrsls	r0, (UNDEF: 2)
    3810:	42240074 	eormi	r0, r4, #116	; 0x74
    3814:	01000004 	tsteq	r0, r4
    3818:	069f0107 	ldreq	r0, [pc], r7, lsl #2
    381c:	cd000000 	stcgt	0, cr0, [r0, #-0]
    3820:	25000006 	strcs	r0, [r0, #-6]
    3824:	0000032c 	andeq	r0, r0, ip, lsr #6
    3828:	00000511 	andeq	r0, r0, r1, lsl r5
    382c:	00170926 	andseq	r0, r7, r6, lsr #18
    3830:	2b070100 	blcs	1c3c38 <_bss_end+0x1b1f88>
    3834:	00000059 	andeq	r0, r0, r9, asr r0
    3838:	00176c26 	andseq	r6, r7, r6, lsr #24
    383c:	3e070100 	adfccs	f0, f7, f0
    3840:	00000059 	andeq	r0, r0, r9, asr r0
    3844:	00170026 	andseq	r0, r7, r6, lsr #32
    3848:	50070100 	andpl	r0, r7, r0, lsl #2
    384c:	00000059 	andeq	r0, r0, r9, asr r0
    3850:	068e2700 	streq	r2, [lr], r0, lsl #14
    3854:	16c10000 	strbne	r0, [r1], r0
    3858:	06e40000 	strbteq	r0, [r4], r0
    385c:	aee00000 	cdpge	0, 14, cr0, cr0, cr0, {0}
    3860:	00540000 	subseq	r0, r4, r0
    3864:	9c010000 	stcls	0, cr0, [r1], {-0}
    3868:	00069f28 	andeq	r9, r6, r8, lsr #30
    386c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3870:	0006a828 	andeq	sl, r6, r8, lsr #16
    3874:	70910200 	addsvc	r0, r1, r0, lsl #4
    3878:	0006b428 	andeq	fp, r6, r8, lsr #8
    387c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3880:	0006c028 	andeq	ip, r6, r8, lsr #32
    3884:	68910200 	ldmvs	r1, {r9}
    3888:	05a70000 	streq	r0, [r7, #0]!
    388c:	00040000 	andeq	r0, r4, r0
    3890:	00001183 	andeq	r1, r0, r3, lsl #3
    3894:	00140104 	andseq	r0, r4, r4, lsl #2
    3898:	15040000 	strne	r0, [r4, #-0]
    389c:	c5000019 	strgt	r0, [r0, #-25]	; 0xffffffe7
    38a0:	a4000000 	strge	r0, [r0], #-0
    38a4:	900000b4 	strhls	r0, [r0], -r4
    38a8:	25000002 	strcs	r0, [r0, #-2]
    38ac:	02000018 	andeq	r0, r0, #24
    38b0:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    38b4:	02020000 	andeq	r0, r2, #0
    38b8:	00059905 	andeq	r9, r5, r5, lsl #18
    38bc:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    38c0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    38c4:	00098204 	andeq	r8, r9, r4, lsl #4
    38c8:	07070200 	streq	r0, [r7, -r0, lsl #4]
    38cc:	00000046 	andeq	r0, r0, r6, asr #32
    38d0:	6a080102 	bvs	203ce0 <_bss_end+0x1f2030>
    38d4:	04000005 	streq	r0, [r0], #-5
    38d8:	00000798 	muleq	r0, r8, r7
    38dc:	59070802 	stmdbpl	r7, {r1, fp}
    38e0:	02000000 	andeq	r0, r0, #0
    38e4:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    38e8:	e4040000 	str	r0, [r4], #-0
    38ec:	02000005 	andeq	r0, r0, #5
    38f0:	00710709 	rsbseq	r0, r1, r9, lsl #14
    38f4:	60050000 	andvs	r0, r5, r0
    38f8:	02000000 	andeq	r0, r0, #0
    38fc:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
    3900:	71050000 	mrsvc	r0, (UNDEF: 5)
    3904:	06000000 	streq	r0, [r0], -r0
    3908:	00000071 	andeq	r0, r0, r1, ror r0
    390c:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
    3910:	0b050300 	bleq	144518 <_bss_end+0x132868>
    3914:	00000185 	andeq	r0, r0, r5, lsl #3
    3918:	00048708 	andeq	r8, r4, r8, lsl #14
    391c:	1c070300 	stcne	3, cr0, [r7], {-0}
    3920:	00000078 	andeq	r0, r0, r8, ror r0
    3924:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    3928:	0005cc08 	andeq	ip, r5, r8, lsl #24
    392c:	1d0a0300 	stcne	3, cr0, [sl, #-0]
    3930:	00000191 	muleq	r0, r1, r1
    3934:	20000000 	andcs	r0, r0, r0
    3938:	00045208 	andeq	r5, r4, r8, lsl #4
    393c:	1d0d0300 	stcne	3, cr0, [sp, #-0]
    3940:	00000191 	muleq	r0, r1, r1
    3944:	20200000 	eorcs	r0, r0, r0
    3948:	00058a09 	andeq	r8, r5, r9, lsl #20
    394c:	18100300 	ldmdane	r0, {r8, r9}
    3950:	0000006c 	andeq	r0, r0, ip, rrx
    3954:	03730836 	cmneq	r3, #3538944	; 0x360000
    3958:	42030000 	andmi	r0, r3, #0
    395c:	0001911d 	andeq	r9, r1, sp, lsl r1
    3960:	21500000 	cmpcs	r0, r0
    3964:	034a0820 	movteq	r0, #43040	; 0xa820
    3968:	71030000 	mrsvc	r0, (UNDEF: 3)
    396c:	0001911d 	andeq	r9, r1, sp, lsl r1
    3970:	00b20000 	adcseq	r0, r2, r0
    3974:	02b60820 	adcseq	r0, r6, #32, 16	; 0x200000
    3978:	a4030000 	strge	r0, [r3], #-0
    397c:	0001911d 	andeq	r9, r1, sp, lsl r1
    3980:	00b40000 	adcseq	r0, r4, r0
    3984:	18d90a20 	ldmne	r9, {r5, r9, fp}^
    3988:	04050000 	streq	r0, [r5], #-0
    398c:	00000033 	andeq	r0, r0, r3, lsr r0
    3990:	4410a603 	ldrmi	sl, [r0], #-1539	; 0xfffff9fd
    3994:	0b000001 	bleq	39a0 <CPSR_IRQ_INHIBIT+0x3920>
    3998:	00001978 	andeq	r1, r0, r8, ror r9
    399c:	18b50b00 	ldmne	r5!, {r8, r9, fp}
    39a0:	0b010000 	bleq	439a8 <_bss_end+0x31cf8>
    39a4:	0000358a 	andeq	r3, r0, sl, lsl #11
    39a8:	189e0b02 	ldmne	lr, {r1, r8, r9, fp}
    39ac:	0b030000 	bleq	c39b4 <_bss_end+0xb1d04>
    39b0:	000019fc 	strdeq	r1, [r0], -ip
    39b4:	17f00b04 	ldrbne	r0, [r0, r4, lsl #22]!
    39b8:	0b050000 	bleq	1439c0 <_bss_end+0x131d10>
    39bc:	000017dc 	ldrdeq	r1, [r0], -ip
    39c0:	18cd0b06 	stmiane	sp, {r1, r2, r8, r9, fp}^
    39c4:	0b070000 	bleq	1c39cc <_bss_end+0x1b1d1c>
    39c8:	000019be 			; <UNDEFINED> instruction: 0x000019be
    39cc:	64080008 	strvs	r0, [r8], #-8
    39d0:	03000003 	movweq	r0, #3
    39d4:	01911db3 			; <UNDEFINED> instruction: 0x01911db3
    39d8:	40000000 	andmi	r0, r0, r0
    39dc:	31082010 	tstcc	r8, r0, lsl r0
    39e0:	03000003 	movweq	r0, #3
    39e4:	01911dbe 			; <UNDEFINED> instruction: 0x01911dbe
    39e8:	50000000 	andpl	r0, r0, r0
    39ec:	ef082020 	svc	0x00082020
    39f0:	03000003 	movweq	r0, #3
    39f4:	01911dbf 			; <UNDEFINED> instruction: 0x01911dbf
    39f8:	40000000 	andmi	r0, r0, r0
    39fc:	5c082080 	stcpl	0, cr2, [r8], {128}	; 0x80
    3a00:	03000004 	movweq	r0, #4
    3a04:	01911dc0 	orrseq	r1, r1, r0, asr #27
    3a08:	50000000 	andpl	r0, r0, r0
    3a0c:	0c002080 	stceq	0, cr2, [r0], {128}	; 0x80
    3a10:	0000008e 	andeq	r0, r0, lr, lsl #1
    3a14:	91070402 	tstls	r7, r2, lsl #8
    3a18:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    3a1c:	0000018a 	andeq	r0, r0, sl, lsl #3
    3a20:	00009e0c 	andeq	r9, r0, ip, lsl #28
    3a24:	00ae0c00 	adceq	r0, lr, r0, lsl #24
    3a28:	be0c0000 	cdplt	0, 0, cr0, cr12, cr0, {0}
    3a2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    3a30:	000000cb 	andeq	r0, r0, fp, asr #1
    3a34:	0000db0c 	andeq	sp, r0, ip, lsl #22
    3a38:	00eb0c00 	rsceq	r0, fp, r0, lsl #24
    3a3c:	440c0000 	strmi	r0, [ip], #-0
    3a40:	0c000001 	stceq	0, cr0, [r0], {1}
    3a44:	00000154 	andeq	r0, r0, r4, asr r1
    3a48:	0001640c 	andeq	r6, r1, ip, lsl #8
    3a4c:	01740c00 	cmneq	r4, r0, lsl #24
    3a50:	620a0000 	andvs	r0, sl, #0
    3a54:	07000018 	smladeq	r0, r8, r0, r0
    3a58:	00003a01 	andeq	r3, r0, r1, lsl #20
    3a5c:	0c060400 	cfstrseq	mvf0, [r6], {-0}
    3a60:	000001ed 	andeq	r0, r0, sp, ror #3
    3a64:	0019cb0b 	andseq	ip, r9, fp, lsl #22
    3a68:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    3a6c:	01000018 	tsteq	r0, r8, lsl r0
    3a70:	00183a0b 	andseq	r3, r8, fp, lsl #20
    3a74:	0d000200 	sfmeq	f0, 4, [r0, #-0]
    3a78:	000019a8 	andeq	r1, r0, r8, lsr #19
    3a7c:	070d0408 	streq	r0, [sp, -r8, lsl #8]
    3a80:	000002e5 	andeq	r0, r0, r5, ror #5
    3a84:	0017740e 	andseq	r7, r7, lr, lsl #8
    3a88:	1c150400 	cfldrsne	mvf0, [r5], {-0}
    3a8c:	000002e5 	andeq	r0, r0, r5, ror #5
    3a90:	19ec0f00 	stmibne	ip!, {r8, r9, sl, fp}^
    3a94:	11040000 	mrsne	r0, (UNDEF: 4)
    3a98:	0002eb0b 	andeq	lr, r2, fp, lsl #22
    3a9c:	7d0e0100 	stfvcs	f0, [lr, #-0]
    3aa0:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3aa4:	02071518 	andeq	r1, r7, #24, 10	; 0x6000000
    3aa8:	10040000 	andne	r0, r4, r0
    3aac:	00001a2e 	andeq	r1, r0, lr, lsr #20
    3ab0:	871c1b04 	ldrhi	r1, [ip, -r4, lsl #22]
    3ab4:	f2000019 	vqadd.s8	d0, d0, d9
    3ab8:	02000002 	andeq	r0, r0, #2
    3abc:	0000023a 	andeq	r0, r0, sl, lsr r2
    3ac0:	00000245 	andeq	r0, r0, r5, asr #4
    3ac4:	0002f811 	andeq	pc, r2, r1, lsl r8	; <UNPREDICTABLE>
    3ac8:	00fb1200 	rscseq	r1, fp, r0, lsl #4
    3acc:	10000000 	andne	r0, r0, r0
    3ad0:	000019a8 	andeq	r1, r0, r8, lsr #19
    3ad4:	af051e04 	svcge	0x00051e04
    3ad8:	f8000019 			; <UNDEFINED> instruction: 0xf8000019
    3adc:	01000002 	tsteq	r0, r2
    3ae0:	0000025e 	andeq	r0, r0, lr, asr r2
    3ae4:	00000269 	andeq	r0, r0, r9, ror #4
    3ae8:	0002f811 	andeq	pc, r2, r1, lsl r8	; <UNPREDICTABLE>
    3aec:	018a1200 	orreq	r1, sl, r0, lsl #4
    3af0:	13000000 	movwne	r0, #0
    3af4:	000035e8 	andeq	r3, r0, r8, ror #11
    3af8:	48052204 	stmdami	r5, {r2, r9, sp}
    3afc:	01000018 	tsteq	r0, r8, lsl r0
    3b00:	0000027e 	andeq	r0, r0, lr, ror r2
    3b04:	00000293 	muleq	r0, r3, r2
    3b08:	0002f811 	andeq	pc, r2, r1, lsl r8	; <UNPREDICTABLE>
    3b0c:	02071200 	andeq	r1, r7, #0, 4
    3b10:	71120000 	tstvc	r2, r0
    3b14:	12000000 	andne	r0, r0, #0
    3b18:	000001c8 	andeq	r0, r0, r8, asr #3
    3b1c:	33f41300 	mvnscc	r1, #0, 6
    3b20:	24040000 	strcs	r0, [r4], #-0
    3b24:	0018e30a 	andseq	lr, r8, sl, lsl #6
    3b28:	02a80100 	adceq	r0, r8, #0, 2
    3b2c:	02ae0000 	adceq	r0, lr, #0
    3b30:	f8110000 			; <UNDEFINED> instruction: 0xf8110000
    3b34:	00000002 	andeq	r0, r0, r2
    3b38:	0017e313 	andseq	lr, r7, r3, lsl r3
    3b3c:	0a270400 	beq	9c4b44 <_bss_end+0x9b2e94>
    3b40:	00001a04 	andeq	r1, r0, r4, lsl #20
    3b44:	0002c301 	andeq	ip, r2, r1, lsl #6
    3b48:	0002c900 	andeq	ip, r2, r0, lsl #18
    3b4c:	02f81100 	rscseq	r1, r8, #0, 2
    3b50:	14000000 	strne	r0, [r0], #-0
    3b54:	000019d7 	ldrdeq	r1, [r0], -r7
    3b58:	960a2904 	strls	r2, [sl], -r4, lsl #18
    3b5c:	03000017 	movweq	r0, #23
    3b60:	01000003 	tsteq	r0, r3
    3b64:	000002de 	ldrdeq	r0, [r0], -lr
    3b68:	0002f811 	andeq	pc, r2, r1, lsl r8	; <UNPREDICTABLE>
    3b6c:	15000000 	strne	r0, [r0, #-0]
    3b70:	00007d04 	andeq	r7, r0, r4, lsl #26
    3b74:	f1041500 			; <UNDEFINED> instruction: 0xf1041500
    3b78:	16000002 	strne	r0, [r0], -r2
    3b7c:	007d0417 	rsbseq	r0, sp, r7, lsl r4
    3b80:	04150000 	ldreq	r0, [r5], #-0
    3b84:	000001ed 	andeq	r0, r0, sp, ror #3
    3b88:	0002f805 	andeq	pc, r2, r5, lsl #16
    3b8c:	02010200 	andeq	r0, r1, #0, 4
    3b90:	0000454d 	andeq	r4, r0, sp, asr #10
    3b94:	00178f18 	andseq	r8, r7, r8, lsl pc
    3b98:	0f2c0400 	svceq	0x002c0400
    3b9c:	000001ed 	andeq	r0, r0, sp, ror #3
    3ba0:	00030a19 	andeq	r0, r3, r9, lsl sl
    3ba4:	08040100 	stmdaeq	r4, {r8}
    3ba8:	0be40305 	bleq	ff9047c4 <_bss_end+0xff8f2b14>
    3bac:	671a0001 	ldrvs	r0, [sl, -r1]
    3bb0:	06000019 			; <UNDEFINED> instruction: 0x06000019
    3bb4:	f2080801 	vadd.i8	d0, d8, d1
    3bb8:	1b000003 	blne	3bcc <CPSR_IRQ_INHIBIT+0x3b4c>
    3bbc:	00001801 	andeq	r1, r0, r1, lsl #16
    3bc0:	3a0d0a01 	bcc	3463cc <_bss_end+0x33471c>
    3bc4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bc8:	1b000701 	blne	57d4 <CPSR_IRQ_INHIBIT+0x5754>
    3bcc:	0000182e 	andeq	r1, r0, lr, lsr #16
    3bd0:	3a0d0b01 	bcc	3467dc <_bss_end+0x334b2c>
    3bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bd8:	1b000601 	blne	53e4 <CPSR_IRQ_INHIBIT+0x5364>
    3bdc:	00001880 	andeq	r1, r0, r0, lsl #17
    3be0:	3a0d0c01 	bcc	346bec <_bss_end+0x334f3c>
    3be4:	01000000 	mrseq	r0, (UNDEF: 0)
    3be8:	1b000402 	blne	4bf8 <CPSR_IRQ_INHIBIT+0x4b78>
    3bec:	0000180a 	andeq	r1, r0, sl, lsl #16
    3bf0:	3a0d0d01 	bcc	346ffc <_bss_end+0x33534c>
    3bf4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bf8:	1b000301 	blne	4804 <CPSR_IRQ_INHIBIT+0x4784>
    3bfc:	000018bb 			; <UNDEFINED> instruction: 0x000018bb
    3c00:	3a0d0e01 	bcc	34740c <_bss_end+0x33575c>
    3c04:	01000000 	mrseq	r0, (UNDEF: 0)
    3c08:	1b000201 	blne	4414 <CPSR_IRQ_INHIBIT+0x4394>
    3c0c:	00001813 	andeq	r1, r0, r3, lsl r8
    3c10:	3a0d0f01 	bcc	34781c <_bss_end+0x335b6c>
    3c14:	01000000 	mrseq	r0, (UNDEF: 0)
    3c18:	1b000101 	blne	4024 <CPSR_IRQ_INHIBIT+0x3fa4>
    3c1c:	00001907 	andeq	r1, r0, r7, lsl #18
    3c20:	3a0d1001 	bcc	347c2c <_bss_end+0x335f7c>
    3c24:	01000000 	mrseq	r0, (UNDEF: 0)
    3c28:	1b000001 	blne	3c34 <CPSR_IRQ_INHIBIT+0x3bb4>
    3c2c:	000017b9 			; <UNDEFINED> instruction: 0x000017b9
    3c30:	3a0d1101 	bcc	34803c <_bss_end+0x33638c>
    3c34:	01000000 	mrseq	r0, (UNDEF: 0)
    3c38:	1b010701 	blne	45844 <_bss_end+0x33b94>
    3c3c:	0000188a 	andeq	r1, r0, sl, lsl #17
    3c40:	3a0d1201 	bcc	34844c <_bss_end+0x33679c>
    3c44:	01000000 	mrseq	r0, (UNDEF: 0)
    3c48:	1c010601 	stcne	6, cr0, [r1], {1}
    3c4c:	0000181c 	andeq	r1, r0, ip, lsl r8
    3c50:	4d0e1301 	stcmi	3, cr1, [lr, #-4]
    3c54:	02000000 	andeq	r0, r0, #0
    3c58:	1c007c0a 	stcne	12, cr7, [r0], {10}
    3c5c:	00001873 	andeq	r1, r0, r3, ror r8
    3c60:	4d0e1401 	cfstrsmi	mvf1, [lr, #-4]
    3c64:	02000000 	andeq	r0, r0, #0
    3c68:	1b027c10 	blne	a2cb0 <_bss_end+0x91000>
    3c6c:	00001825 	andeq	r1, r0, r5, lsr #16
    3c70:	4d0e1501 	cfstr32mi	mvfx1, [lr, #-4]
    3c74:	02000000 	andeq	r0, r0, #0
    3c78:	0004020a 	andeq	r0, r4, sl, lsl #4
    3c7c:	00032406 	andeq	r2, r3, r6, lsl #8
    3c80:	17801d00 	strne	r1, [r0, r0, lsl #26]
    3c84:	b7180000 	ldrlt	r0, [r8, -r0]
    3c88:	001c0000 	andseq	r0, ip, r0
    3c8c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3c90:	0002411e 	andeq	r4, r2, lr, lsl r1
    3c94:	00b6c400 	adcseq	ip, r6, r0, lsl #8
    3c98:	00005400 	andeq	r5, r0, r0, lsl #8
    3c9c:	389c0100 	ldmcc	ip, {r8}
    3ca0:	1f000004 	svcne	0x00000004
    3ca4:	0000033b 	andeq	r0, r0, fp, lsr r3
    3ca8:	33014a01 	movwcc	r4, #6657	; 0x1a01
    3cac:	02000000 	andeq	r0, r0, #0
    3cb0:	341f7491 	ldrcc	r7, [pc], #-1169	; 3cb8 <CPSR_IRQ_INHIBIT+0x3c38>
    3cb4:	01000007 	tsteq	r0, r7
    3cb8:	0033014a 	eorseq	r0, r3, sl, asr #2
    3cbc:	91020000 	mrsls	r0, (UNDEF: 2)
    3cc0:	c9200070 	stmdbgt	r0!, {r4, r5, r6}
    3cc4:	01000002 	tsteq	r0, r2
    3cc8:	04520647 	ldrbeq	r0, [r2], #-1607	; 0xfffff9b9
    3ccc:	b6840000 	strlt	r0, [r4], r0
    3cd0:	00400000 	subeq	r0, r0, r0
    3cd4:	9c010000 	stcls	0, cr0, [r1], {-0}
    3cd8:	0000045f 	andeq	r0, r0, pc, asr r4
    3cdc:	00032c21 	andeq	r2, r3, r1, lsr #24
    3ce0:	0002fe00 	andeq	pc, r2, r0, lsl #28
    3ce4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3ce8:	02ae2000 	adceq	r2, lr, #0
    3cec:	3f010000 	svccc	0x00010000
    3cf0:	00047906 	andeq	r7, r4, r6, lsl #18
    3cf4:	00b63400 	adcseq	r3, r6, r0, lsl #8
    3cf8:	00005000 	andeq	r5, r0, r0
    3cfc:	869c0100 	ldrhi	r0, [ip], r0, lsl #2
    3d00:	21000004 	tstcs	r0, r4
    3d04:	0000032c 	andeq	r0, r0, ip, lsr #6
    3d08:	000002fe 	strdeq	r0, [r0], -lr
    3d0c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3d10:	00029320 	andeq	r9, r2, r0, lsr #6
    3d14:	06370100 	ldrteq	r0, [r7], -r0, lsl #2
    3d18:	000004a0 	andeq	r0, r0, r0, lsr #9
    3d1c:	0000b5e8 	andeq	fp, r0, r8, ror #11
    3d20:	0000004c 	andeq	r0, r0, ip, asr #32
    3d24:	04bc9c01 	ldrteq	r9, [ip], #3073	; 0xc01
    3d28:	2c210000 	stccs	0, cr0, [r1], #-0
    3d2c:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
    3d30:	02000002 	andeq	r0, r0, #2
    3d34:	72226c91 	eorvc	r6, r2, #37120	; 0x9100
    3d38:	01006765 	tsteq	r0, r5, ror #14
    3d3c:	04bc2039 	ldrteq	r2, [ip], #57	; 0x39
    3d40:	91020000 	mrsls	r0, (UNDEF: 2)
    3d44:	04170074 	ldreq	r0, [r7], #-116	; 0xffffff8c
    3d48:	000003f2 	strdeq	r0, [r0], -r2
    3d4c:	00026920 	andeq	r6, r2, r0, lsr #18
    3d50:	06260100 	strteq	r0, [r6], -r0, lsl #2
    3d54:	000004dc 	ldrdeq	r0, [r0], -ip
    3d58:	0000b51c 	andeq	fp, r0, ip, lsl r5
    3d5c:	000000cc 	andeq	r0, r0, ip, asr #1
    3d60:	05259c01 	streq	r9, [r5, #-3073]!	; 0xfffff3ff
    3d64:	2c210000 	stccs	0, cr0, [r1], #-0
    3d68:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
    3d6c:	02000002 	andeq	r0, r0, #2
    3d70:	1f1f6491 	svcne	0x001f6491
    3d74:	0100001a 	tsteq	r0, sl, lsl r0
    3d78:	02072526 	andeq	r2, r7, #159383552	; 0x9800000
    3d7c:	91020000 	mrsls	r0, (UNDEF: 2)
    3d80:	17fb1f60 	ldrbne	r1, [fp, r0, ror #30]!
    3d84:	26010000 	strcs	r0, [r1], -r0
    3d88:	0000713c 	andeq	r7, r0, ip, lsr r1
    3d8c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    3d90:	0018801f 	andseq	r8, r8, pc, lsl r0
    3d94:	54260100 	strtpl	r0, [r6], #-256	; 0xffffff00
    3d98:	000001c8 	andeq	r0, r0, r8, asr #3
    3d9c:	225b9102 	subscs	r9, fp, #-2147483648	; 0x80000000
    3da0:	00676572 	rsbeq	r6, r7, r2, ror r5
    3da4:	24162a01 	ldrcs	r2, [r6], #-2561	; 0xfffff5ff
    3da8:	02000003 	andeq	r0, r0, #3
    3dac:	23006891 	movwcs	r6, #2193	; 0x891
    3db0:	00000221 	andeq	r0, r0, r1, lsr #4
    3db4:	3f182101 	svccc	0x00182101
    3db8:	e4000005 	str	r0, [r0], #-5
    3dbc:	380000b4 	stmdacc	r0, {r2, r4, r5, r7}
    3dc0:	01000000 	mrseq	r0, (UNDEF: 0)
    3dc4:	00055b9c 	muleq	r5, ip, fp
    3dc8:	032c2100 			; <UNDEFINED> instruction: 0x032c2100
    3dcc:	02fe0000 	rscseq	r0, lr, #0
    3dd0:	91020000 	mrsls	r0, (UNDEF: 2)
    3dd4:	65722474 	ldrbvs	r2, [r2, #-1140]!	; 0xfffffb8c
    3dd8:	21010067 	tstcs	r1, r7, rrx
    3ddc:	0000fb34 	andeq	pc, r0, r4, lsr fp	; <UNPREDICTABLE>
    3de0:	70910200 	addsvc	r0, r1, r0, lsl #4
    3de4:	02452500 	subeq	r2, r5, #0, 10
    3de8:	1a010000 	bne	43df0 <_bss_end+0x32140>
    3dec:	00056c01 	andeq	r6, r5, r1, lsl #24
    3df0:	05820000 	streq	r0, [r2]
    3df4:	2c260000 	stccs	0, cr0, [r6], #-0
    3df8:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
    3dfc:	27000002 	strcs	r0, [r0, -r2]
    3e00:	000018f8 	strdeq	r1, [r0], -r8
    3e04:	8a1e1a01 	bhi	78a610 <_bss_end+0x778960>
    3e08:	00000001 	andeq	r0, r0, r1
    3e0c:	00055b28 	andeq	r5, r5, r8, lsr #22
    3e10:	0017cd00 	andseq	ip, r7, r0, lsl #26
    3e14:	00059900 	andeq	r9, r5, r0, lsl #18
    3e18:	00b4a400 	adcseq	sl, r4, r0, lsl #8
    3e1c:	00004000 	andeq	r4, r0, r0
    3e20:	299c0100 	ldmibcs	ip, {r8}
    3e24:	0000056c 	andeq	r0, r0, ip, ror #10
    3e28:	29749102 	ldmdbcs	r4!, {r1, r8, ip, pc}^
    3e2c:	00000575 	andeq	r0, r0, r5, ror r5
    3e30:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3e34:	0003e800 	andeq	lr, r3, r0, lsl #16
    3e38:	16000400 	strne	r0, [r0], -r0, lsl #8
    3e3c:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    3e40:	00001401 	andeq	r1, r0, r1, lsl #8
    3e44:	1a770400 	bne	1dc4e4c <_bss_end+0x1db319c>
    3e48:	00c50000 	sbceq	r0, r5, r0
    3e4c:	b7340000 	ldrlt	r0, [r4, -r0]!
    3e50:	02800000 	addeq	r0, r0, #0
    3e54:	19f80000 	ldmibne	r8!, {}^	; <UNPREDICTABLE>
    3e58:	01020000 	mrseq	r0, (UNDEF: 2)
    3e5c:	00057308 	andeq	r7, r5, r8, lsl #6
    3e60:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    3e64:	00000599 	muleq	r0, r9, r5
    3e68:	69050403 	stmdbvs	r5, {r0, r1, sl}
    3e6c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3e70:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    3e74:	02020000 	andeq	r0, r2, #0
    3e78:	0003dc07 	andeq	sp, r3, r7, lsl #24
    3e7c:	05e40400 	strbeq	r0, [r4, #1024]!	; 0x400
    3e80:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    3e84:	00005907 	andeq	r5, r0, r7, lsl #18
    3e88:	00480500 	subeq	r0, r8, r0, lsl #10
    3e8c:	04020000 	streq	r0, [r2], #-0
    3e90:	00459607 	subeq	r9, r5, r7, lsl #12
    3e94:	00590500 	subseq	r0, r9, r0, lsl #10
    3e98:	59060000 	stmdbpl	r6, {}	; <UNPREDICTABLE>
    3e9c:	07000000 	streq	r0, [r0, -r0]
    3ea0:	006c6168 	rsbeq	r6, ip, r8, ror #2
    3ea4:	4f0b0502 	svcmi	0x000b0502
    3ea8:	08000001 	stmdaeq	r0, {r0}
    3eac:	00000487 	andeq	r0, r0, r7, lsl #9
    3eb0:	601c0702 	andsvs	r0, ip, r2, lsl #14
    3eb4:	80000000 	andhi	r0, r0, r0
    3eb8:	080ee6b2 	stmdaeq	lr, {r1, r4, r5, r7, r9, sl, sp, lr, pc}
    3ebc:	000005cc 	andeq	r0, r0, ip, asr #11
    3ec0:	5b1d0a02 	blpl	7466d0 <_bss_end+0x734a20>
    3ec4:	00000001 	andeq	r0, r0, r1
    3ec8:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    3ecc:	00000452 	andeq	r0, r0, r2, asr r4
    3ed0:	5b1d0d02 	blpl	7472e0 <_bss_end+0x735630>
    3ed4:	00000001 	andeq	r0, r0, r1
    3ed8:	09202000 	stmdbeq	r0!, {sp}
    3edc:	0000058a 	andeq	r0, r0, sl, lsl #11
    3ee0:	54181002 	ldrpl	r1, [r8], #-2
    3ee4:	36000000 	strcc	r0, [r0], -r0
    3ee8:	00037308 	andeq	r7, r3, r8, lsl #6
    3eec:	1d420200 	sfmne	f0, 2, [r2, #-0]
    3ef0:	0000015b 	andeq	r0, r0, fp, asr r1
    3ef4:	20215000 	eorcs	r5, r1, r0
    3ef8:	00034a08 	andeq	r4, r3, r8, lsl #20
    3efc:	1d710200 	lfmne	f0, 2, [r1, #-0]
    3f00:	0000015b 	andeq	r0, r0, fp, asr r1
    3f04:	2000b200 	andcs	fp, r0, r0, lsl #4
    3f08:	0002b608 	andeq	fp, r2, r8, lsl #12
    3f0c:	1da40200 	sfmne	f0, 4, [r4]
    3f10:	0000015b 	andeq	r0, r0, fp, asr r1
    3f14:	2000b400 	andcs	fp, r0, r0, lsl #8
    3f18:	00036408 	andeq	r6, r3, r8, lsl #8
    3f1c:	1db30200 	lfmne	f0, 4, [r3]
    3f20:	0000015b 	andeq	r0, r0, fp, asr r1
    3f24:	20104000 	andscs	r4, r0, r0
    3f28:	001b5e0a 	andseq	r5, fp, sl, lsl #28
    3f2c:	33040500 	movwcc	r0, #17664	; 0x4500
    3f30:	02000000 	andeq	r0, r0, #0
    3f34:	011e10b5 	ldrheq	r1, [lr, -r5]
    3f38:	8a0b0000 	bhi	2c3f40 <_bss_end+0x2b2290>
    3f3c:	00000035 	andeq	r0, r0, r5, lsr r0
    3f40:	000a0c0b 	andeq	r0, sl, fp, lsl #24
    3f44:	c80b0100 	stmdagt	fp, {r8}
    3f48:	0200001a 	andeq	r0, r0, #26
    3f4c:	001a6e0b 	andseq	r6, sl, fp, lsl #28
    3f50:	08000400 	stmdaeq	r0, {sl}
    3f54:	00000331 	andeq	r0, r0, r1, lsr r3
    3f58:	5b1dbe02 	blpl	773768 <_bss_end+0x761ab8>
    3f5c:	00000001 	andeq	r0, r0, r1
    3f60:	08202050 	stmdaeq	r0!, {r4, r6, sp}
    3f64:	000003ef 	andeq	r0, r0, pc, ror #7
    3f68:	5b1dbf02 	blpl	773b78 <_bss_end+0x761ec8>
    3f6c:	00000001 	andeq	r0, r0, r1
    3f70:	08208040 	stmdaeq	r0!, {r6, pc}
    3f74:	0000045c 	andeq	r0, r0, ip, asr r4
    3f78:	5b1dc002 	blpl	773f88 <_bss_end+0x7622d8>
    3f7c:	00000001 	andeq	r0, r0, r1
    3f80:	00208050 	eoreq	r8, r0, r0, asr r0
    3f84:	0000760c 	andeq	r7, r0, ip, lsl #12
    3f88:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3f8c:	00004591 	muleq	r0, r1, r5
    3f90:	00015405 	andeq	r5, r1, r5, lsl #8
    3f94:	00860c00 	addeq	r0, r6, r0, lsl #24
    3f98:	960c0000 	strls	r0, [ip], -r0
    3f9c:	0c000000 	stceq	0, cr0, [r0], {-0}
    3fa0:	000000a6 	andeq	r0, r0, r6, lsr #1
    3fa4:	0000b30c 	andeq	fp, r0, ip, lsl #6
    3fa8:	00c30c00 	sbceq	r0, r3, r0, lsl #24
    3fac:	d30c0000 	movwle	r0, #49152	; 0xc000
    3fb0:	0c000000 	stceq	0, cr0, [r0], {-0}
    3fb4:	000000e3 	andeq	r0, r0, r3, ror #1
    3fb8:	00011e0c 	andeq	r1, r1, ip, lsl #28
    3fbc:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    3fc0:	3e0c0000 	cdpcc	0, 0, cr0, cr12, cr0, {0}
    3fc4:	0d000001 	stceq	0, cr0, [r0, #-4]
    3fc8:	00001b43 	andeq	r1, r0, r3, asr #22
    3fcc:	07060308 	streq	r0, [r6, -r8, lsl #6]
    3fd0:	00000257 	andeq	r0, r0, r7, asr r2
    3fd4:	001a280e 	andseq	r2, sl, lr, lsl #16
    3fd8:	220a0300 	andcs	r0, sl, #0, 6
    3fdc:	00000262 	andeq	r0, r0, r2, ror #4
    3fe0:	07650e00 	strbeq	r0, [r5, -r0, lsl #28]!
    3fe4:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    3fe8:	0000480e 	andeq	r4, r0, lr, lsl #16
    3fec:	430f0400 	movwmi	r0, #62464	; 0xf400
    3ff0:	0300001b 	movweq	r0, #27
    3ff4:	1b150511 	blne	545440 <_bss_end+0x533790>
    3ff8:	02670000 	rsbeq	r0, r7, #0
    3ffc:	d2010000 	andle	r0, r1, #0
    4000:	dd000001 	stcle	0, cr0, [r0, #-4]
    4004:	10000001 	andne	r0, r0, r1
    4008:	00000267 	andeq	r0, r0, r7, ror #4
    400c:	00004811 	andeq	r4, r0, r1, lsl r8
    4010:	200f0000 	andcs	r0, pc, r0
    4014:	0300000a 	movweq	r0, #10
    4018:	1acd0a14 	bne	ff346870 <_bss_end+0xff334bc0>
    401c:	02720000 	rsbseq	r0, r2, #0
    4020:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    4024:	01000001 	tsteq	r0, r1
    4028:	10000002 	andne	r0, r0, r2
    402c:	00000267 	andeq	r0, r0, r7, ror #4
    4030:	00027211 	andeq	r7, r2, r1, lsl r2
    4034:	ad120000 	ldcge	0, cr0, [r2, #-0]
    4038:	03000009 	movweq	r0, #9
    403c:	1b230a16 	blne	8c689c <_bss_end+0x8b4bec>
    4040:	16010000 	strne	r0, [r1], -r0
    4044:	1c000002 	stcne	0, cr0, [r0], {2}
    4048:	10000002 	andne	r0, r0, r2
    404c:	00000267 	andeq	r0, r0, r7, ror #4
    4050:	073f0f00 	ldreq	r0, [pc, -r0, lsl #30]!
    4054:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    4058:	001ade0a 	andseq	sp, sl, sl, lsl #28
    405c:	00027200 	andeq	r7, r2, r0, lsl #4
    4060:	02350100 	eorseq	r0, r5, #0, 2
    4064:	023b0000 	eorseq	r0, fp, #0
    4068:	79100000 	ldmdbvc	r0, {}	; <UNPREDICTABLE>
    406c:	00000002 	andeq	r0, r0, r2
    4070:	001b0313 	andseq	r0, fp, r3, lsl r3
    4074:	0e1b0300 	cdpeq	3, 1, cr0, cr11, cr0, {0}
    4078:	00001a3d 	andeq	r1, r0, sp, lsr sl
    407c:	00000048 	andeq	r0, r0, r8, asr #32
    4080:	00025001 	andeq	r5, r2, r1
    4084:	02671000 	rsbeq	r1, r7, #0
    4088:	00000000 	andeq	r0, r0, r0
    408c:	00019205 	andeq	r9, r1, r5, lsl #4
    4090:	65041400 	strvs	r1, [r4, #-1024]	; 0xfffffc00
    4094:	05000000 	streq	r0, [r0, #-0]
    4098:	0000025c 	andeq	r0, r0, ip, asr r2
    409c:	01920414 	orrseq	r0, r2, r4, lsl r4
    40a0:	67050000 	strvs	r0, [r5, -r0]
    40a4:	02000002 	andeq	r0, r0, #2
    40a8:	454d0201 	strbmi	r0, [sp, #-513]	; 0xfffffdff
    40ac:	04140000 	ldreq	r0, [r4], #-0
    40b0:	00000257 	andeq	r0, r0, r7, asr r2
    40b4:	00027905 	andeq	r7, r2, r5, lsl #18
    40b8:	1b581500 	blne	16094c0 <_bss_end+0x15f7810>
    40bc:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    40c0:	0001920e 	andeq	r9, r1, lr, lsl #4
    40c4:	02841600 	addeq	r1, r4, #0, 12
    40c8:	03010000 	movweq	r0, #4096	; 0x1000
    40cc:	ec030507 	cfstr32	mvfx0, [r3], {7}
    40d0:	1700010b 	strne	r0, [r0, -fp, lsl #2]
    40d4:	00001a5c 	andeq	r1, r0, ip, asr sl
    40d8:	54140601 	ldrpl	r0, [r4], #-1537	; 0xfffff9ff
    40dc:	05000000 	streq	r0, [r0, #-0]
    40e0:	01018803 	tsteq	r1, r3, lsl #16
    40e4:	1b491800 	blne	124a0ec <_bss_end+0x123843c>
    40e8:	b9980000 	ldmiblt	r8, {}	; <UNPREDICTABLE>
    40ec:	001c0000 	andseq	r0, ip, r0
    40f0:	9c010000 	stcls	0, cr0, [r1], {-0}
    40f4:	00024119 	andeq	r4, r2, r9, lsl r1
    40f8:	00b94400 	adcseq	r4, r9, r0, lsl #8
    40fc:	00005400 	andeq	r5, r0, r0, lsl #8
    4100:	f19c0100 			; <UNDEFINED> instruction: 0xf19c0100
    4104:	1a000002 	bne	4114 <CPSR_IRQ_INHIBIT+0x4094>
    4108:	0000033b 	andeq	r0, r0, fp, lsr r3
    410c:	33013e01 	movwcc	r3, #7681	; 0x1e01
    4110:	02000000 	andeq	r0, r0, #0
    4114:	341a7491 	ldrcc	r7, [sl], #-1169	; 0xfffffb6f
    4118:	01000007 	tsteq	r0, r7
    411c:	0033013e 	eorseq	r0, r3, lr, lsr r1
    4120:	91020000 	mrsls	r0, (UNDEF: 2)
    4124:	3b1b0070 	blcc	6c42ec <_bss_end+0x6b263c>
    4128:	01000002 	tsteq	r0, r2
    412c:	030b0a34 	movweq	r0, #47668	; 0xba34
    4130:	b8fc0000 	ldmlt	ip!, {}^	; <UNPREDICTABLE>
    4134:	00480000 	subeq	r0, r8, r0
    4138:	9c010000 	stcls	0, cr0, [r1], {-0}
    413c:	00000318 	andeq	r0, r0, r8, lsl r3
    4140:	00032c1c 	andeq	r2, r3, ip, lsl ip
    4144:	00026d00 	andeq	r6, r2, r0, lsl #26
    4148:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    414c:	021c1b00 	andseq	r1, ip, #0, 22
    4150:	2f010000 	svccs	0x00010000
    4154:	00033206 	andeq	r3, r3, r6, lsl #4
    4158:	00b8c400 	adcseq	ip, r8, r0, lsl #8
    415c:	00003800 	andeq	r3, r0, r0, lsl #16
    4160:	3f9c0100 	svccc	0x009c0100
    4164:	1c000003 	stcne	0, cr0, [r0], {3}
    4168:	0000032c 	andeq	r0, r0, ip, lsr #6
    416c:	0000027f 	andeq	r0, r0, pc, ror r2
    4170:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4174:	0002011b 	andeq	r0, r2, fp, lsl r1
    4178:	06240100 	strteq	r0, [r4], -r0, lsl #2
    417c:	00000359 	andeq	r0, r0, r9, asr r3
    4180:	0000b85c 	andeq	fp, r0, ip, asr r8
    4184:	00000068 	andeq	r0, r0, r8, rrx
    4188:	03669c01 	cmneq	r6, #256	; 0x100
    418c:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    4190:	6d000003 	stcvs	0, cr0, [r0, #-12]
    4194:	02000002 	andeq	r0, r0, #2
    4198:	1b007491 	blne	213e4 <_bss_end+0xf734>
    419c:	000001dd 	ldrdeq	r0, [r0], -sp
    41a0:	80060f01 	andhi	r0, r6, r1, lsl #30
    41a4:	74000003 	strvc	r0, [r0], #-3
    41a8:	e80000b7 	stmda	r0, {r0, r1, r2, r4, r5, r7}
    41ac:	01000000 	mrseq	r0, (UNDEF: 0)
    41b0:	00039c9c 	muleq	r3, ip, ip
    41b4:	032c1c00 			; <UNDEFINED> instruction: 0x032c1c00
    41b8:	026d0000 	rsbeq	r0, sp, #0
    41bc:	91020000 	mrsls	r0, (UNDEF: 2)
    41c0:	1a331a74 	bne	ccab98 <_bss_end+0xcb8ee8>
    41c4:	0f010000 	svceq	0x00010000
    41c8:	00027217 	andeq	r7, r2, r7, lsl r2
    41cc:	73910200 	orrsvc	r0, r1, #0, 4
    41d0:	01b91d00 			; <UNDEFINED> instruction: 0x01b91d00
    41d4:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    41d8:	0003ad01 	andeq	sl, r3, r1, lsl #26
    41dc:	03c30000 	biceq	r0, r3, #0
    41e0:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
    41e4:	6d000003 	stcvs	0, cr0, [r0, #-12]
    41e8:	1f000002 	svcne	0x00000002
    41ec:	00001af5 	strdeq	r1, [r0], -r5
    41f0:	48170801 	ldmdami	r7, {r0, fp}
    41f4:	00000000 	andeq	r0, r0, r0
    41f8:	00039c20 	andeq	r9, r3, r0, lsr #24
    41fc:	001b3500 	andseq	r3, fp, r0, lsl #10
    4200:	0003da00 	andeq	sp, r3, r0, lsl #20
    4204:	00b73400 	adcseq	r3, r7, r0, lsl #8
    4208:	00004000 	andeq	r4, r0, r0
    420c:	219c0100 	orrscs	r0, ip, r0, lsl #2
    4210:	000003ad 	andeq	r0, r0, sp, lsr #7
    4214:	21749102 	cmncs	r4, r2, lsl #2
    4218:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    421c:	00709102 	rsbseq	r9, r0, r2, lsl #2
    4220:	0008ae00 	andeq	sl, r8, r0, lsl #28
    4224:	22000400 	andcs	r0, r0, #0, 8
    4228:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    422c:	00001401 	andeq	r1, r0, r1, lsl #8
    4230:	1d410400 	cfstrdne	mvd0, [r1, #-0]
    4234:	00c50000 	sbceq	r0, r5, r0
    4238:	00c00000 	sbceq	r0, r0, r0
    423c:	00000000 	andeq	r0, r0, r0
    4240:	1be60000 	blne	ff984248 <_bss_end+0xff972598>
    4244:	01020000 	mrseq	r0, (UNDEF: 2)
    4248:	00057308 	andeq	r7, r5, r8, lsl #6
    424c:	00250300 	eoreq	r0, r5, r0, lsl #6
    4250:	02020000 	andeq	r0, r2, #0
    4254:	00059905 	andeq	r9, r5, r5, lsl #18
    4258:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    425c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    4260:	6a080102 	bvs	204670 <_bss_end+0x1f29c0>
    4264:	05000005 	streq	r0, [r0, #-5]
    4268:	0000003f 	andeq	r0, r0, pc, lsr r0
    426c:	dc070202 	sfmle	f0, 4, [r7], {2}
    4270:	06000003 	streq	r0, [r0], -r3
    4274:	000005e4 	andeq	r0, r0, r4, ror #11
    4278:	63070905 	movwvs	r0, #30981	; 0x7905
    427c:	03000000 	movweq	r0, #0
    4280:	00000052 	andeq	r0, r0, r2, asr r0
    4284:	96070402 	strls	r0, [r7], -r2, lsl #8
    4288:	07000045 	streq	r0, [r0, -r5, asr #32]
    428c:	00001c44 	andeq	r1, r0, r4, asr #24
    4290:	5e1a0601 	cfmsub32pl	mvax0, mvfx0, mvfx10, mvfx1
    4294:	05000000 	streq	r0, [r0, #-0]
    4298:	01018c03 	tsteq	r1, r3, lsl #24
    429c:	1c750700 	ldclne	7, cr0, [r5], #-0
    42a0:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    42a4:	00005e1a 	andeq	r5, r0, sl, lsl lr
    42a8:	90030500 	andls	r0, r3, r0, lsl #10
    42ac:	07000101 	streq	r0, [r0, -r1, lsl #2]
    42b0:	00001d93 	muleq	r0, r3, sp
    42b4:	5e1a0a01 	vnmlspl.f32	s0, s20, s2
    42b8:	05000000 	streq	r0, [r0, #-0]
    42bc:	01019403 	tsteq	r1, r3, lsl #8
    42c0:	1b790700 	blne	1e45ec8 <_bss_end+0x1e34218>
    42c4:	0c010000 	stceq	0, cr0, [r1], {-0}
    42c8:	00005e1a 	andeq	r5, r0, sl, lsl lr
    42cc:	98030500 	stmdals	r3, {r8, sl}
    42d0:	08000101 	stmdaeq	r0, {r0, r8}
    42d4:	00002432 	andeq	r2, r0, r2, lsr r4
    42d8:	00380405 	eorseq	r0, r8, r5, lsl #8
    42dc:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    42e0:	0000d70c 	andeq	sp, r0, ip, lsl #14
    42e4:	1d370900 			; <UNDEFINED> instruction: 0x1d370900
    42e8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    42ec:	00001e3d 	andeq	r1, r0, sp, lsr lr
    42f0:	1cdb0901 			; <UNDEFINED> instruction: 0x1cdb0901
    42f4:	00020000 	andeq	r0, r2, r0
    42f8:	001c870a 	andseq	r8, ip, sl, lsl #14
    42fc:	4c019000 	stcmi	0, cr9, [r1], {-0}
    4300:	00026007 	andeq	r6, r2, r7
    4304:	1c670b00 			; <UNDEFINED> instruction: 0x1c670b00
    4308:	01240000 			; <UNDEFINED> instruction: 0x01240000
    430c:	017a0c50 	cmneq	sl, r0, asr ip
    4310:	b00c0000 	andlt	r0, ip, r0
    4314:	0100003e 	tsteq	r0, lr, lsr r0
    4318:	02600e52 	rsbeq	r0, r0, #1312	; 0x520
    431c:	0c000000 	stceq	0, cr0, [r0], {-0}
    4320:	00001c38 	andeq	r1, r0, r8, lsr ip
    4324:	700e5401 	andvc	r5, lr, r1, lsl #8
    4328:	10000002 	andne	r0, r0, r2
    432c:	001b8c0c 	andseq	r8, fp, ip, lsl #24
    4330:	12560100 	subsne	r0, r6, #0, 2
    4334:	00000052 	andeq	r0, r0, r2, asr r0
    4338:	1c600c14 	stclne	12, cr0, [r0], #-80	; 0xffffffb0
    433c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    4340:	00027718 	andeq	r7, r2, r8, lsl r7
    4344:	930c1800 	movwls	r1, #51200	; 0xc800
    4348:	0100001c 	tsteq	r0, ip, lsl r0
    434c:	0277185b 	rsbseq	r1, r7, #5963776	; 0x5b0000
    4350:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    4354:	00000dfb 	strdeq	r0, [r0], -fp
    4358:	77185e01 	ldrvc	r5, [r8, -r1, lsl #28]
    435c:	20000002 	andcs	r0, r0, r2
    4360:	001d110d 	andseq	r1, sp, sp, lsl #2
    4364:	18600100 	stmdane	r0!, {r8}^
    4368:	00001dcf 	andeq	r1, r0, pc, asr #27
    436c:	00000277 	andeq	r0, r0, r7, ror r2
    4370:	00000157 	andeq	r0, r0, r7, asr r1
    4374:	00000162 	andeq	r0, r0, r2, ror #2
    4378:	0002770e 	andeq	r7, r2, lr, lsl #14
    437c:	02820f00 	addeq	r0, r2, #0, 30
    4380:	10000000 	andne	r0, r0, r0
    4384:	00001c67 	andeq	r1, r0, r7, ror #24
    4388:	00001ca4 	andeq	r1, r0, r4, lsr #25
    438c:	00000277 	andeq	r0, r0, r7, ror r2
    4390:	00000173 	andeq	r0, r0, r3, ror r1
    4394:	0002770e 	andeq	r7, r2, lr, lsl #14
    4398:	0b000000 	bleq	43a0 <CPSR_IRQ_INHIBIT+0x4320>
    439c:	00001cd0 	ldrdeq	r1, [r0], -r0
    43a0:	0c640118 	stfeqe	f0, [r4], #-96	; 0xffffffa0
    43a4:	000001af 	andeq	r0, r0, pc, lsr #3
    43a8:	003eb00c 	eorseq	fp, lr, ip
    43ac:	0e670100 	poweqs	f0, f7, f0
    43b0:	00000260 	andeq	r0, r0, r0, ror #4
    43b4:	1bb60c00 	blne	fed873bc <_bss_end+0xfed7570c>
    43b8:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    43bc:	00028215 	andeq	r8, r2, r5, lsl r2
    43c0:	260c1000 	strcs	r1, [ip], -r0
    43c4:	0100001d 	tsteq	r0, sp, lsl r0
    43c8:	02921d6b 	addseq	r1, r2, #6848	; 0x1ac0
    43cc:	00140000 	andseq	r0, r4, r0
    43d0:	00017a03 	andeq	r7, r1, r3, lsl #20
    43d4:	1bcc1100 	blne	ff3087dc <_bss_end+0xff2f6b2c>
    43d8:	6f010000 	svcvs	0x00010000
    43dc:	0002981d 	andeq	r9, r2, sp, lsl r8
    43e0:	1b671100 	blne	19c87e8 <_bss_end+0x19b6b38>
    43e4:	71010000 	mrsvc	r0, (UNDEF: 1)
    43e8:	00005e1b 	andeq	r5, r0, fp, lsl lr
    43ec:	1da10c00 	stcne	12, cr0, [r1]
    43f0:	74010000 	strvc	r0, [r1], #-0
    43f4:	0000e413 	andeq	lr, r0, r3, lsl r4
    43f8:	970c0000 	strls	r0, [ip, -r0]
    43fc:	0100001b 	tsteq	r0, fp, lsl r0
    4400:	00e41377 	rsceq	r1, r4, r7, ror r3
    4404:	0c240000 	stceq	0, cr0, [r4], #-0
    4408:	00001d2d 	andeq	r1, r0, sp, lsr #26
    440c:	e4137801 	ldr	r7, [r3], #-2049	; 0xfffff7ff
    4410:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    4414:	001d1c0c 	andseq	r1, sp, ip, lsl #24
    4418:	13790100 	cmnne	r9, #0, 2
    441c:	000000e4 	andeq	r0, r0, r4, ror #1
    4420:	1c87126c 	sfmne	f1, 4, [r7], {108}	; 0x6c
    4424:	7c010000 	stcvc	0, cr0, [r1], {-0}
    4428:	001dff05 	andseq	pc, sp, r5, lsl #30
    442c:	0002a300 	andeq	sl, r2, r0, lsl #6
    4430:	02190100 	andseq	r0, r9, #0, 2
    4434:	021f0000 	andseq	r0, pc, #0
    4438:	a30e0000 	movwge	r0, #57344	; 0xe000
    443c:	00000002 	andeq	r0, r0, r2
    4440:	001bc113 	andseq	ip, fp, r3, lsl r1
    4444:	0a7f0100 	beq	1fc484c <_bss_end+0x1fb2b9c>
    4448:	00001e48 	andeq	r1, r0, r8, asr #28
    444c:	00023401 	andeq	r3, r2, r1, lsl #8
    4450:	00023a00 	andeq	r3, r2, r0, lsl #20
    4454:	02a30e00 	adceq	r0, r3, #0, 28
    4458:	14000000 	strne	r0, [r0], #-0
    445c:	00000a20 	andeq	r0, r0, r0, lsr #20
    4460:	e60c8201 	str	r8, [ip], -r1, lsl #4
    4464:	b300001c 	movwlt	r0, #28
    4468:	01000002 	tsteq	r0, r2
    446c:	0000024f 	andeq	r0, r0, pc, asr #4
    4470:	0002a30e 	andeq	sl, r2, lr, lsl #6
    4474:	02820f00 	addeq	r0, r2, #0, 30
    4478:	b20f0000 	andlt	r0, pc, #0
    447c:	00000000 	andeq	r0, r0, r0
    4480:	00251500 	eoreq	r1, r5, r0, lsl #10
    4484:	02700000 	rsbseq	r0, r0, #0
    4488:	63160000 	tstvs	r6, #0
    448c:	0f000000 	svceq	0x00000000
    4490:	02010200 	andeq	r0, r1, #0, 4
    4494:	0000454d 	andeq	r4, r0, sp, asr #10
    4498:	00e40417 	rsceq	r0, r4, r7, lsl r4
    449c:	77030000 	strvc	r0, [r3, -r0]
    44a0:	17000002 	strne	r0, [r0, -r2]
    44a4:	00002c04 	andeq	r2, r0, r4, lsl #24
    44a8:	02820300 	addeq	r0, r2, #0, 6
    44ac:	e1180000 	tst	r8, r0
    44b0:	17000029 	strne	r0, [r0, -r9, lsr #32]
    44b4:	00028d04 	andeq	r8, r2, r4, lsl #26
    44b8:	01af1500 			; <UNDEFINED> instruction: 0x01af1500
    44bc:	02a30000 	adceq	r0, r3, #0
    44c0:	00190000 	andseq	r0, r9, r0
    44c4:	00d70417 	sbcseq	r0, r7, r7, lsl r4
    44c8:	a3030000 	movwge	r0, #12288	; 0x3000
    44cc:	18000002 	stmdane	r0, {r1}
    44d0:	00002bc8 	andeq	r2, r0, r8, asr #23
    44d4:	02ae0417 	adceq	r0, lr, #385875968	; 0x17000000
    44d8:	e71a0000 	ldr	r0, [sl, -r0]
    44dc:	0100001b 	tsteq	r0, fp, lsl r0
    44e0:	00d71485 	sbcseq	r1, r7, r5, lsl #9
    44e4:	980a0000 	stmdals	sl, {}	; <UNPREDICTABLE>
    44e8:	1800000b 	stmdane	r0, {r0, r1, r3}
    44ec:	06070304 	streq	r0, [r7], -r4, lsl #6
    44f0:	1b000005 	blne	450c <CPSR_IRQ_INHIBIT+0x448c>
    44f4:	00000b16 	andeq	r0, r0, r6, lsl fp
    44f8:	00630407 	rsbeq	r0, r3, r7, lsl #8
    44fc:	06040000 	streq	r0, [r4], -r0
    4500:	02f20110 	rscseq	r0, r2, #16, 2
    4504:	481c0000 	ldmdami	ip, {}	; <UNPREDICTABLE>
    4508:	10005845 	andne	r5, r0, r5, asr #16
    450c:	4345441c 	movtmi	r4, #21532	; 0x541c
    4510:	03000a00 	movweq	r0, #2560	; 0xa00
    4514:	000002d2 	ldrdeq	r0, [r0], -r2
    4518:	000b230b 	andeq	r2, fp, fp, lsl #6
    451c:	24040800 	strcs	r0, [r4], #-2048	; 0xfffff800
    4520:	00031b0c 	andeq	r1, r3, ip, lsl #22
    4524:	00791d00 	rsbseq	r1, r9, r0, lsl #26
    4528:	63162604 	tstvs	r6, #4, 12	; 0x400000
    452c:	00000000 	andeq	r0, r0, r0
    4530:	0400781d 	streq	r7, [r0], #-2077	; 0xfffff7e3
    4534:	00631627 	rsbeq	r1, r3, r7, lsr #12
    4538:	00040000 	andeq	r0, r4, r0
    453c:	000c751e 	andeq	r7, ip, lr, lsl r5
    4540:	1b0c0400 	blne	305548 <_bss_end+0x2f3898>
    4544:	000002f2 	strdeq	r0, [r0], -r2
    4548:	e81f0a01 	ldmda	pc, {r0, r9, fp}	; <UNPREDICTABLE>
    454c:	0400000b 	streq	r0, [r0], #-11
    4550:	0288280d 	addeq	r2, r8, #851968	; 0xd0000
    4554:	20010000 	andcs	r0, r1, r0
    4558:	00000b98 	muleq	r0, r8, fp
    455c:	620e1004 	andvs	r1, lr, #4
    4560:	0600000c 	streq	r0, [r0], -ip
    4564:	01000005 	tsteq	r0, r5
    4568:	0000034f 	andeq	r0, r0, pc, asr #6
    456c:	00000364 	andeq	r0, r0, r4, ror #6
    4570:	0005060e 	andeq	r0, r5, lr, lsl #12
    4574:	00630f00 	rsbeq	r0, r3, r0, lsl #30
    4578:	630f0000 	movwvs	r0, #61440	; 0xf000
    457c:	0f000000 	svceq	0x00000000
    4580:	00000063 	andeq	r0, r0, r3, rrx
    4584:	18a21300 	stmiane	r2!, {r8, r9, ip}
    4588:	12040000 	andne	r0, r4, #0
    458c:	000b830a 	andeq	r8, fp, sl, lsl #6
    4590:	03790100 	cmneq	r9, #0, 2
    4594:	037f0000 	cmneq	pc, #0
    4598:	060e0000 	streq	r0, [lr], -r0
    459c:	00000005 	andeq	r0, r0, r5
    45a0:	000ba112 	andeq	sl, fp, r2, lsl r1
    45a4:	0f140400 	svceq	0x00140400
    45a8:	00000c05 	andeq	r0, r0, r5, lsl #24
    45ac:	0000050c 	andeq	r0, r0, ip, lsl #10
    45b0:	00039801 	andeq	r9, r3, r1, lsl #16
    45b4:	0003a300 	andeq	sl, r3, r0, lsl #6
    45b8:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    45bc:	250f0000 	strcs	r0, [pc, #-0]	; 45c4 <CPSR_IRQ_INHIBIT+0x4544>
    45c0:	00000000 	andeq	r0, r0, r0
    45c4:	000ba112 	andeq	sl, fp, r2, lsl r1
    45c8:	0f150400 	svceq	0x00150400
    45cc:	00000bac 	andeq	r0, r0, ip, lsr #23
    45d0:	0000050c 	andeq	r0, r0, ip, lsl #10
    45d4:	0003bc01 	andeq	fp, r3, r1, lsl #24
    45d8:	0003c700 	andeq	ip, r3, r0, lsl #14
    45dc:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    45e0:	820f0000 	andhi	r0, pc, #0
    45e4:	00000002 	andeq	r0, r0, r2
    45e8:	000ba112 	andeq	sl, fp, r2, lsl r1
    45ec:	0f160400 	svceq	0x00160400
    45f0:	00000c89 	andeq	r0, r0, r9, lsl #25
    45f4:	0000050c 	andeq	r0, r0, ip, lsl #10
    45f8:	0003e001 	andeq	lr, r3, r1
    45fc:	0003eb00 	andeq	lr, r3, r0, lsl #22
    4600:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    4604:	d20f0000 	andle	r0, pc, #0
    4608:	00000002 	andeq	r0, r0, r2
    460c:	000ba112 	andeq	sl, fp, r2, lsl r1
    4610:	0f170400 	svceq	0x00170400
    4614:	00000c34 	andeq	r0, r0, r4, lsr ip
    4618:	0000050c 	andeq	r0, r0, ip, lsl #10
    461c:	00040401 	andeq	r0, r4, r1, lsl #8
    4620:	00040f00 	andeq	r0, r4, r0, lsl #30
    4624:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    4628:	630f0000 	movwvs	r0, #61440	; 0xf000
    462c:	00000000 	andeq	r0, r0, r0
    4630:	000ba112 	andeq	sl, fp, r2, lsl r1
    4634:	0f180400 	svceq	0x00180400
    4638:	00000bf4 	strdeq	r0, [r0], -r4
    463c:	0000050c 	andeq	r0, r0, ip, lsl #10
    4640:	00042801 	andeq	r2, r4, r1, lsl #16
    4644:	00043300 	andeq	r3, r4, r0, lsl #6
    4648:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    464c:	700f0000 	andvc	r0, pc, r0
    4650:	00000002 	andeq	r0, r0, r2
    4654:	000ab421 	andeq	fp, sl, r1, lsr #8
    4658:	111b0400 	tstne	fp, r0, lsl #8
    465c:	00000a84 	andeq	r0, r0, r4, lsl #21
    4660:	00000447 	andeq	r0, r0, r7, asr #8
    4664:	0000044d 	andeq	r0, r0, sp, asr #8
    4668:	0005060e 	andeq	r0, r5, lr, lsl #12
    466c:	a7210000 	strge	r0, [r1, -r0]!
    4670:	0400000a 	streq	r0, [r0], #-10
    4674:	0c45111c 	stfeqe	f1, [r5], {28}
    4678:	04610000 	strbteq	r0, [r1], #-0
    467c:	04670000 	strbteq	r0, [r7], #-0
    4680:	060e0000 	streq	r0, [lr], -r0
    4684:	00000005 	andeq	r0, r0, r5
    4688:	000a5f21 	andeq	r5, sl, r1, lsr #30
    468c:	111d0400 	tstne	sp, r0, lsl #8
    4690:	00000b2d 	andeq	r0, r0, sp, lsr #22
    4694:	0000047b 	andeq	r0, r0, fp, ror r4
    4698:	00000481 	andeq	r0, r0, r1, lsl #9
    469c:	0005060e 	andeq	r0, r5, lr, lsl #12
    46a0:	e1210000 			; <UNDEFINED> instruction: 0xe1210000
    46a4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    46a8:	0c1e0a1f 			; <UNDEFINED> instruction: 0x0c1e0a1f
    46ac:	04950000 	ldreq	r0, [r5], #0
    46b0:	049b0000 	ldreq	r0, [fp], #0
    46b4:	060e0000 	streq	r0, [lr], -r0
    46b8:	00000005 	andeq	r0, r0, r5
    46bc:	000aa221 	andeq	sl, sl, r1, lsr #4
    46c0:	0a210400 	beq	8456c8 <_bss_end+0x833a18>
    46c4:	00000bbf 			; <UNDEFINED> instruction: 0x00000bbf
    46c8:	000004af 	andeq	r0, r0, pc, lsr #9
    46cc:	000004c4 	andeq	r0, r0, r4, asr #9
    46d0:	0005060e 	andeq	r0, r5, lr, lsl #12
    46d4:	00630f00 	rsbeq	r0, r3, r0, lsl #30
    46d8:	120f0000 	andne	r0, pc, #0
    46dc:	0f000005 	svceq	0x00000005
    46e0:	00000063 	andeq	r0, r0, r3, rrx
    46e4:	0b4f0c00 	bleq	13c76ec <_bss_end+0x13b5a3c>
    46e8:	2b040000 	blcs	1046f0 <_bss_end+0xf2a40>
    46ec:	00051e23 	andeq	r1, r5, r3, lsr #28
    46f0:	160c0000 	strne	r0, [ip], -r0
    46f4:	0400000c 	streq	r0, [r0], #-12
    46f8:	0063122c 	rsbeq	r1, r3, ip, lsr #4
    46fc:	0c040000 	stceq	0, cr0, [r4], {-0}
    4700:	00000bd6 	ldrdeq	r0, [r0], -r6
    4704:	63122d04 	tstvs	r2, #4, 26	; 0x100
    4708:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    470c:	000bdf0c 	andeq	sp, fp, ip, lsl #30
    4710:	0f2e0400 	svceq	0x002e0400
    4714:	000002f7 	strdeq	r0, [r0], -r7
    4718:	0a510c0c 	beq	1447750 <_bss_end+0x1435aa0>
    471c:	2f040000 	svccs	0x00040000
    4720:	0002d212 	andeq	sp, r2, r2, lsl r2
    4724:	17001400 	strne	r1, [r0, -r0, lsl #8]
    4728:	0002c504 	andeq	ip, r2, r4, lsl #10
    472c:	c5042200 	strgt	r2, [r4, #-512]	; 0xfffffe00
    4730:	17000002 	strne	r0, [r0, -r2]
    4734:	00002504 	andeq	r2, r0, r4, lsl #10
    4738:	46041700 	strmi	r1, [r4], -r0, lsl #14
    473c:	03000000 	movweq	r0, #0
    4740:	00000518 	andeq	r0, r0, r8, lsl r5
    4744:	000b681a 	andeq	r6, fp, sl, lsl r8
    4748:	11320400 	teqne	r2, r0, lsl #8
    474c:	000002c5 	andeq	r0, r0, r5, asr #5
    4750:	0013be0b 	andseq	fp, r3, fp, lsl #28
    4754:	08031000 	stmdaeq	r3, {ip}
    4758:	00057108 	andeq	r7, r5, r8, lsl #2
    475c:	0d080c00 	stceq	12, cr0, [r8, #-0]
    4760:	0a030000 	beq	c4768 <_bss_end+0xb2ab8>
    4764:	00057120 	andeq	r7, r5, r0, lsr #2
    4768:	fb0c0000 	blx	304772 <_bss_end+0x2f2ac2>
    476c:	0300000d 	movweq	r0, #13
    4770:	0571200b 	ldrbeq	r2, [r1, #-11]!
    4774:	0c040000 	stceq	0, cr0, [r4], {-0}
    4778:	00000e48 	andeq	r0, r0, r8, asr #28
    477c:	520e0c03 	andpl	r0, lr, #768	; 0x300
    4780:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4784:	000e9c0c 	andeq	r9, lr, ip, lsl #24
    4788:	0a0d0300 	beq	345390 <_bss_end+0x3336e0>
    478c:	00000270 	andeq	r0, r0, r0, ror r2
    4790:	0417000c 	ldreq	r0, [r7], #-12
    4794:	0000052f 	andeq	r0, r0, pc, lsr #10
    4798:	000e000a 	andeq	r0, lr, sl
    479c:	10030400 	andne	r0, r3, r0, lsl #8
    47a0:	00063507 	andeq	r3, r6, r7, lsl #10
    47a4:	13410c00 	movtne	r0, #7168	; 0x1c00
    47a8:	13030000 	movwne	r0, #12288	; 0x3000
    47ac:	00057120 	andeq	r7, r5, r0, lsr #2
    47b0:	830d0000 	movwhi	r0, #53248	; 0xd000
    47b4:	03000013 	movweq	r0, #19
    47b8:	0d0d2015 	stceq	0, cr2, [sp, #-84]	; 0xffffffac
    47bc:	05710000 	ldrbeq	r0, [r1, #-0]!
    47c0:	05a90000 	streq	r0, [r9, #0]!
    47c4:	05af0000 	streq	r0, [pc, #0]!	; 47cc <CPSR_IRQ_INHIBIT+0x474c>
    47c8:	350e0000 	strcc	r0, [lr, #-0]
    47cc:	00000006 	andeq	r0, r0, r6
    47d0:	000e0012 	andeq	r0, lr, r2, lsl r0
    47d4:	05180300 	ldreq	r0, [r8, #-768]	; 0xfffffd00
    47d8:	00001323 	andeq	r1, r0, r3, lsr #6
    47dc:	00000635 	andeq	r0, r0, r5, lsr r6
    47e0:	0005c801 	andeq	ip, r5, r1, lsl #16
    47e4:	0005ce00 	andeq	ip, r5, r0, lsl #28
    47e8:	06350e00 	ldrteq	r0, [r5], -r0, lsl #28
    47ec:	12000000 	andne	r0, r0, #0
    47f0:	00000edb 	ldrdeq	r0, [r0], -fp
    47f4:	970b1a03 	strls	r1, [fp, -r3, lsl #20]
    47f8:	40000011 	andmi	r0, r0, r1, lsl r0
    47fc:	01000006 	tsteq	r0, r6
    4800:	000005e7 	andeq	r0, r0, r7, ror #11
    4804:	000005f2 	strdeq	r0, [r0], -r2
    4808:	0006350e 	andeq	r3, r6, lr, lsl #10
    480c:	00520f00 	subseq	r0, r2, r0, lsl #30
    4810:	13000000 	movwne	r0, #0
    4814:	00000f45 	andeq	r0, r0, r5, asr #30
    4818:	d60a1b03 	strle	r1, [sl], -r3, lsl #22
    481c:	01000010 	tsteq	r0, r0, lsl r0
    4820:	00000607 	andeq	r0, r0, r7, lsl #12
    4824:	00000612 	andeq	r0, r0, r2, lsl r6
    4828:	0006350e 	andeq	r3, r6, lr, lsl #10
    482c:	06400f00 	strbeq	r0, [r0], -r0, lsl #30
    4830:	14000000 	strne	r0, [r0], #-0
    4834:	00001dad 	andeq	r1, r0, sp, lsr #27
    4838:	f3081e03 	vcge.f32	d1, d8, d3
    483c:	7700001b 	smladvc	r0, fp, r0, r0
    4840:	01000002 	tsteq	r0, r2
    4844:	0000062e 	andeq	r0, r0, lr, lsr #12
    4848:	e4005423 	str	r5, [r0], #-1059	; 0xfffffbdd
    484c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    4850:	00000635 	andeq	r0, r0, r5, lsr r6
    4854:	04170000 	ldreq	r0, [r7], #-0
    4858:	00000577 	andeq	r0, r0, r7, ror r5
    485c:	00063503 	andeq	r3, r6, r3, lsl #10
    4860:	1a042400 	bne	10d868 <_bss_end+0xfbbb8>
    4864:	000037fa 	strdeq	r3, [r0], -sl
    4868:	771d2403 	ldrvc	r2, [sp, -r3, lsl #8]
    486c:	25000005 	strcs	r0, [r0, #-5]
    4870:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
    4874:	050d0802 	streq	r0, [sp, #-2050]	; 0xfffff7fe
    4878:	010bf403 	tsteq	fp, r3, lsl #8	; <UNPREDICTABLE>
    487c:	1bd82600 	blne	ff60e084 <_bss_end+0xff5fc3d4>
    4880:	c1f40000 	mvnsgt	r0, r0
    4884:	001c0000 	andseq	r0, ip, r0
    4888:	9c010000 	stcls	0, cr0, [r1], {-0}
    488c:	00024127 	andeq	r4, r2, r7, lsr #2
    4890:	00c1a800 	sbceq	sl, r1, r0, lsl #16
    4894:	00004c00 	andeq	r4, r0, r0, lsl #24
    4898:	9d9c0100 	ldflss	f0, [ip]
    489c:	28000006 	stmdacs	r0, {r1, r2}
    48a0:	0000033b 	andeq	r0, r0, fp, lsr r3
    48a4:	3801b802 	stmdacc	r1, {r1, fp, ip, sp, pc}
    48a8:	02000000 	andeq	r0, r0, #0
    48ac:	34287491 	strtcc	r7, [r8], #-1169	; 0xfffffb6f
    48b0:	02000007 	andeq	r0, r0, #7
    48b4:	003801b8 	ldrhteq	r0, [r8], -r8
    48b8:	91020000 	mrsls	r0, (UNDEF: 2)
    48bc:	12290070 	eorne	r0, r9, #112	; 0x70
    48c0:	bb000006 	bllt	48e0 <CPSR_IRQ_INHIBIT+0x4860>
    48c4:	4c000006 	stcmi	0, cr0, [r0], {6}
    48c8:	2c0000c2 	stccs	0, cr0, [r0], {194}	; 0xc2
    48cc:	01000000 	mrseq	r0, (UNDEF: 0)
    48d0:	0006c89c 	muleq	r6, ip, r8
    48d4:	00542300 	subseq	r2, r4, r0, lsl #6
    48d8:	000000e4 	andeq	r0, r0, r4, ror #1
    48dc:	00032c2a 	andeq	r2, r3, sl, lsr #24
    48e0:	00063b00 	andeq	r3, r6, r0, lsl #22
    48e4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    48e8:	023a2b00 	eorseq	r2, sl, #0, 22
    48ec:	8a020000 	bhi	848f4 <_bss_end+0x72c44>
    48f0:	0006e208 	andeq	lr, r6, r8, lsl #4
    48f4:	00bf4c00 	adcseq	r4, pc, r0, lsl #24
    48f8:	00025c00 	andeq	r5, r2, r0, lsl #24
    48fc:	569c0100 	ldrpl	r0, [ip], r0, lsl #2
    4900:	2a000007 	bcs	4924 <CPSR_IRQ_INHIBIT+0x48a4>
    4904:	0000032c 	andeq	r0, r0, ip, lsr #6
    4908:	000002a9 	andeq	r0, r0, r9, lsr #5
    490c:	28549102 	ldmdacs	r4, {r1, r8, ip, pc}^
    4910:	00001e14 	andeq	r1, r0, r4, lsl lr
    4914:	82268a02 	eorhi	r8, r6, #8192	; 0x2000
    4918:	02000002 	andeq	r0, r0, #2
    491c:	6e285091 	mcrvs	0, 1, r5, cr8, cr1, {4}
    4920:	02000003 	andeq	r0, r0, #3
    4924:	00b23c8a 	adcseq	r3, r2, sl, lsl #25
    4928:	91020000 	mrsls	r0, (UNDEF: 2)
    492c:	1cc82c4c 	stclne	12, cr2, [r8], {76}	; 0x4c
    4930:	8c020000 	stchi	0, cr0, [r2], {-0}
    4934:	0002600a 	andeq	r6, r2, sl
    4938:	58910200 	ldmpl	r1, {r9}
    493c:	001c5a2c 	andseq	r5, ip, ip, lsr #20
    4940:	118d0200 	orrne	r0, sp, r0, lsl #4
    4944:	00000282 	andeq	r0, r0, r2, lsl #5
    4948:	2d749102 	ldfcsp	f1, [r4, #-8]!
    494c:	9002006a 	andls	r0, r2, sl, rrx
    4950:	00003809 	andeq	r3, r0, r9, lsl #16
    4954:	70910200 	addsvc	r0, r1, r0, lsl #4
    4958:	003ab62c 	eorseq	fp, sl, ip, lsr #12
    495c:	14940200 	ldrne	r0, [r4], #512	; 0x200
    4960:	00000277 	andeq	r0, r0, r7, ror r2
    4964:	2c6c9102 	stfcsp	f1, [ip], #-8
    4968:	00001c9c 	muleq	r0, ip, ip
    496c:	77249402 	strvc	r9, [r4, -r2, lsl #8]!
    4970:	02000002 	andeq	r0, r0, #2
    4974:	2b006891 	blcs	1ebc0 <_bss_end+0xcf10>
    4978:	0000021f 	andeq	r0, r0, pc, lsl r2
    497c:	70063a02 	andvc	r3, r6, r2, lsl #20
    4980:	f0000007 			; <UNDEFINED> instruction: 0xf0000007
    4984:	5c0000bb 	stcpl	0, cr0, [r0], {187}	; 0xbb
    4988:	01000003 	tsteq	r0, r3
    498c:	0007ec9c 	muleq	r7, ip, ip
    4990:	032c2a00 			; <UNDEFINED> instruction: 0x032c2a00
    4994:	02a90000 	adceq	r0, r9, #0
    4998:	91020000 	mrsls	r0, (UNDEF: 2)
    499c:	1cc82c4c 	stclne	12, cr2, [r8], {76}	; 0x4c
    49a0:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    49a4:	0002600a 	andeq	r6, r2, sl
    49a8:	50910200 	addspl	r0, r1, r0, lsl #4
    49ac:	001c5a2c 	andseq	r5, ip, ip, lsr #20
    49b0:	113f0200 	teqne	pc, r0, lsl #4
    49b4:	00000282 	andeq	r0, r0, r2, lsl #5
    49b8:	2d749102 	ldfcsp	f1, [r4, #-8]!
    49bc:	41020069 	tstmi	r2, r9, rrx
    49c0:	00003809 	andeq	r3, r0, r9, lsl #16
    49c4:	70910200 	addsvc	r0, r1, r0, lsl #4
    49c8:	02006a2d 	andeq	r6, r0, #184320	; 0x2d000
    49cc:	00380c41 	eorseq	r0, r8, r1, asr #24
    49d0:	91020000 	mrsls	r0, (UNDEF: 2)
    49d4:	bc282e6c 	stclt	14, cr2, [r8], #-432	; 0xfffffe50
    49d8:	02c40000 	sbceq	r0, r4, #0
    49dc:	702d0000 	eorvc	r0, sp, r0
    49e0:	02007274 	andeq	r7, r0, #116, 4	; 0x40000007
    49e4:	07ec1b45 	strbeq	r1, [ip, r5, asr #22]!
    49e8:	91020000 	mrsls	r0, (UNDEF: 2)
    49ec:	3ab62c64 	bcc	fed8fb84 <_bss_end+0xfed7ded4>
    49f0:	4b020000 	blmi	849f8 <_bss_end+0x72d48>
    49f4:	00027718 	andeq	r7, r2, r8, lsl r7
    49f8:	68910200 	ldmvs	r1, {r9}
    49fc:	001c9c2c 	andseq	r9, ip, ip, lsr #24
    4a00:	284b0200 	stmdacs	fp, {r9}^
    4a04:	00000277 	andeq	r0, r0, r7, ror r2
    4a08:	00609102 	rsbeq	r9, r0, r2, lsl #2
    4a0c:	af041700 	svcge	0x00041700
    4a10:	2b000001 	blcs	4a1c <CPSR_IRQ_INHIBIT+0x499c>
    4a14:	0000013f 	andeq	r0, r0, pc, lsr r1
    4a18:	0c1d2b02 			; <UNDEFINED> instruction: 0x0c1d2b02
    4a1c:	6c000008 	stcvs	0, cr0, [r0], {8}
    4a20:	840000bb 	strhi	r0, [r0], #-187	; 0xffffff45
    4a24:	01000000 	mrseq	r0, (UNDEF: 0)
    4a28:	0008379c 	muleq	r8, ip, r7
    4a2c:	032c2a00 			; <UNDEFINED> instruction: 0x032c2a00
    4a30:	027d0000 	rsbseq	r0, sp, #0
    4a34:	91020000 	mrsls	r0, (UNDEF: 2)
    4a38:	3eb0286c 	cdpcc	8, 11, cr2, cr0, cr12, {3}
    4a3c:	2b020000 	blcs	84a44 <_bss_end+0x72d94>
    4a40:	00028250 	andeq	r8, r2, r0, asr r2
    4a44:	68910200 	ldmvs	r1, {r9}
    4a48:	001da72c 	andseq	sl, sp, ip, lsr #14
    4a4c:	142d0200 	strtne	r0, [sp], #-512	; 0xfffffe00
    4a50:	00000277 	andeq	r0, r0, r7, ror r2
    4a54:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4a58:	0002002f 	andeq	r0, r2, pc, lsr #32
    4a5c:	010a0200 	mrseq	r0, R10_fiq
    4a60:	00000848 	andeq	r0, r0, r8, asr #16
    4a64:	00085200 	andeq	r5, r8, r0, lsl #4
    4a68:	032c3000 			; <UNDEFINED> instruction: 0x032c3000
    4a6c:	02a90000 	adceq	r0, r9, #0
    4a70:	31000000 	mrscc	r0, (UNDEF: 0)
    4a74:	00000837 	andeq	r0, r0, r7, lsr r8
    4a78:	00001ba1 	andeq	r1, r0, r1, lsr #23
    4a7c:	0000086d 	andeq	r0, r0, sp, ror #16
    4a80:	0000b9b4 			; <UNDEFINED> instruction: 0x0000b9b4
    4a84:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
    4a88:	08769c01 	ldmdaeq	r6!, {r0, sl, fp, ip, pc}^
    4a8c:	48320000 	ldmdami	r2!, {}	; <UNPREDICTABLE>
    4a90:	02000008 	andeq	r0, r0, #8
    4a94:	2f007491 	svccs	0x00007491
    4a98:	00000162 	andeq	r0, r0, r2, ror #2
    4a9c:	870c5001 	strhi	r5, [ip, -r1]
    4aa0:	02000008 	andeq	r0, r0, #8
    4aa4:	00000891 	muleq	r0, r1, r8
    4aa8:	00032c30 	andeq	r2, r3, r0, lsr ip
    4aac:	00027d00 	andeq	r7, r2, r0, lsl #26
    4ab0:	76330000 	ldrtvc	r0, [r3], -r0
    4ab4:	19000008 	stmdbne	r0, {r3}
    4ab8:	a800001e 	stmdage	r0, {r1, r2, r3, r4}
    4abc:	10000008 	andne	r0, r0, r8
    4ac0:	3c0000c2 	stccc	0, cr0, [r0], {194}	; 0xc2
    4ac4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ac8:	0887329c 	stmeq	r7, {r2, r3, r4, r7, r9, ip, sp}
    4acc:	91020000 	mrsls	r0, (UNDEF: 2)
    4ad0:	a5000074 	strge	r0, [r0, #-116]	; 0xffffff8c
    4ad4:	04000032 	streq	r0, [r0], #-50	; 0xffffffce
    4ad8:	00195400 	andseq	r5, r9, r0, lsl #8
    4adc:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
    4ae0:	04000000 	streq	r0, [r0], #-0
    4ae4:	0000239c 	muleq	r0, ip, r3
    4ae8:	000000c5 	andeq	r0, r0, r5, asr #1
    4aec:	000000e0 	andeq	r0, r0, r0, ror #1
    4af0:	00000000 	andeq	r0, r0, r0
    4af4:	000020b4 	strheq	r2, [r0], -r4
    4af8:	73080102 	movwvc	r0, #33026	; 0x8102
    4afc:	03000005 	movweq	r0, #5
    4b00:	00000025 	andeq	r0, r0, r5, lsr #32
    4b04:	99050202 	stmdbls	r5, {r1, r9}
    4b08:	04000005 	streq	r0, [r0], #-5
    4b0c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4b10:	38030074 	stmdacc	r3, {r2, r4, r5, r6}
    4b14:	05000000 	streq	r0, [r0, #-0]
    4b18:	00000982 	andeq	r0, r0, r2, lsl #19
    4b1c:	55070709 	strpl	r0, [r7, #-1801]	; 0xfffff8f7
    4b20:	03000000 	movweq	r0, #0
    4b24:	00000044 	andeq	r0, r0, r4, asr #32
    4b28:	6a080102 	bvs	204f38 <_bss_end+0x1f3288>
    4b2c:	06000005 	streq	r0, [r0], -r5
    4b30:	00000055 	andeq	r0, r0, r5, asr r0
    4b34:	00079805 	andeq	r9, r7, r5, lsl #16
    4b38:	07080900 	streq	r0, [r8, -r0, lsl #18]
    4b3c:	00000072 	andeq	r0, r0, r2, ror r0
    4b40:	00006103 	andeq	r6, r0, r3, lsl #2
    4b44:	07020200 	streq	r0, [r2, -r0, lsl #4]
    4b48:	000003dc 	ldrdeq	r0, [r0], -ip
    4b4c:	0005e405 	andeq	lr, r5, r5, lsl #8
    4b50:	07090900 	streq	r0, [r9, -r0, lsl #18]
    4b54:	0000008f 	andeq	r0, r0, pc, lsl #1
    4b58:	00007903 	andeq	r7, r0, r3, lsl #18
    4b5c:	00790600 	rsbseq	r0, r9, r0, lsl #12
    4b60:	04020000 	streq	r0, [r2], #-0
    4b64:	00459607 	subeq	r9, r5, r7, lsl #12
    4b68:	008f0300 	addeq	r0, pc, r0, lsl #6
    4b6c:	8f060000 	svchi	0x00060000
    4b70:	07000000 	streq	r0, [r0, -r0]
    4b74:	00002161 	andeq	r2, r0, r1, ror #2
    4b78:	00380405 	eorseq	r0, r8, r5, lsl #8
    4b7c:	430a0000 	movwmi	r0, #40960	; 0xa000
    4b80:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    4b84:	22900800 	addscs	r0, r0, #0, 16
    4b88:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4b8c:	00002025 	andeq	r2, r0, r5, lsr #32
    4b90:	44090001 	strmi	r0, [r9], #-1
    4b94:	0100001c 	tsteq	r0, ip, lsl r0
    4b98:	00851a06 	addeq	r1, r5, r6, lsl #20
    4b9c:	03050000 	movweq	r0, #20480	; 0x5000
    4ba0:	00010264 	andeq	r0, r1, r4, ror #4
    4ba4:	001c7509 	andseq	r7, ip, r9, lsl #10
    4ba8:	1a080100 	bne	204fb0 <_bss_end+0x1f3300>
    4bac:	00000085 	andeq	r0, r0, r5, lsl #1
    4bb0:	02680305 	rsbeq	r0, r8, #335544320	; 0x14000000
    4bb4:	93090001 	movwls	r0, #36865	; 0x9001
    4bb8:	0100001d 	tsteq	r0, sp, lsl r0
    4bbc:	00851a0a 	addeq	r1, r5, sl, lsl #20
    4bc0:	03050000 	movweq	r0, #20480	; 0x5000
    4bc4:	0001026c 	andeq	r0, r1, ip, ror #4
    4bc8:	001b7909 	andseq	r7, fp, r9, lsl #18
    4bcc:	1a0c0100 	bne	304fd4 <_bss_end+0x2f3324>
    4bd0:	00000085 	andeq	r0, r0, r5, lsl #1
    4bd4:	02700305 	rsbseq	r0, r0, #335544320	; 0x14000000
    4bd8:	32070001 	andcc	r0, r7, #1
    4bdc:	05000024 	streq	r0, [r0, #-36]	; 0xffffffdc
    4be0:	00003804 	andeq	r3, r0, r4, lsl #16
    4be4:	0c0e0100 	stfeqs	f0, [lr], {-0}
    4be8:	0000012c 	andeq	r0, r0, ip, lsr #2
    4bec:	001d3708 	andseq	r3, sp, r8, lsl #14
    4bf0:	3d080000 	stccc	0, cr0, [r8, #-0]
    4bf4:	0100001e 	tsteq	r0, lr, lsl r0
    4bf8:	001cdb08 	andseq	sp, ip, r8, lsl #22
    4bfc:	0a000200 	beq	5404 <CPSR_IRQ_INHIBIT+0x5384>
    4c00:	00001c87 	andeq	r1, r0, r7, lsl #25
    4c04:	074c0190 			; <UNDEFINED> instruction: 0x074c0190
    4c08:	0000029a 	muleq	r0, sl, r2
    4c0c:	001c670b 	andseq	r6, ip, fp, lsl #14
    4c10:	50012400 	andpl	r2, r1, r0, lsl #8
    4c14:	0001b40c 	andeq	fp, r1, ip, lsl #8
    4c18:	3eb00c00 	cdpcc	12, 11, cr0, cr0, cr0, {0}
    4c1c:	52010000 	andpl	r0, r1, #0
    4c20:	00029a0e 	andeq	r9, r2, lr, lsl #20
    4c24:	380c0000 	stmdacc	ip, {}	; <UNPREDICTABLE>
    4c28:	0100001c 	tsteq	r0, ip, lsl r0
    4c2c:	02aa0e54 	adceq	r0, sl, #84, 28	; 0x540
    4c30:	0c100000 	ldceq	0, cr0, [r0], {-0}
    4c34:	00001b8c 	andeq	r1, r0, ip, lsl #23
    4c38:	79125601 	ldmdbvc	r2, {r0, r9, sl, ip, lr}
    4c3c:	14000000 	strne	r0, [r0], #-0
    4c40:	001c600c 	andseq	r6, ip, ip
    4c44:	18590100 	ldmdane	r9, {r8}^
    4c48:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    4c4c:	1c930c18 	ldcne	12, cr0, [r3], {24}
    4c50:	5b010000 	blpl	44c58 <_bss_end+0x32fa8>
    4c54:	0002b118 	andeq	fp, r2, r8, lsl r1
    4c58:	fb0c1c00 	blx	30bc62 <_bss_end+0x2f9fb2>
    4c5c:	0100000d 	tsteq	r0, sp
    4c60:	02b1185e 	adcseq	r1, r1, #6160384	; 0x5e0000
    4c64:	0d200000 	stceq	0, cr0, [r0, #-0]
    4c68:	00001d11 	andeq	r1, r0, r1, lsl sp
    4c6c:	cf186001 	svcgt	0x00186001
    4c70:	b100001d 	tstlt	r0, sp, lsl r0
    4c74:	a8000002 	stmdage	r0, {r1}
    4c78:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4c7c:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    4c80:	0002b70f 	andeq	fp, r2, pc, lsl #14
    4c84:	0b000000 	bleq	4c8c <CPSR_IRQ_INHIBIT+0x4c0c>
    4c88:	00001cd0 	ldrdeq	r1, [r0], -r0
    4c8c:	0c640118 	stfeqe	f0, [r4], #-96	; 0xffffffa0
    4c90:	000001e9 	andeq	r0, r0, r9, ror #3
    4c94:	003eb00c 	eorseq	fp, lr, ip
    4c98:	0e670100 	poweqs	f0, f7, f0
    4c9c:	0000029a 	muleq	r0, sl, r2
    4ca0:	1bb60c00 	blne	fed87ca8 <_bss_end+0xfed75ff8>
    4ca4:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    4ca8:	0002b715 	andeq	fp, r2, r5, lsl r7
    4cac:	260c1000 	strcs	r1, [ip], -r0
    4cb0:	0100001d 	tsteq	r0, sp, lsl r0
    4cb4:	03b31d6b 			; <UNDEFINED> instruction: 0x03b31d6b
    4cb8:	00140000 	andseq	r0, r4, r0
    4cbc:	0001b403 	andeq	fp, r1, r3, lsl #8
    4cc0:	1bcc1000 	blne	ff308cc8 <_bss_end+0xff2f7018>
    4cc4:	6f010000 	svcvs	0x00010000
    4cc8:	0003b91d 	andeq	fp, r3, sp, lsl r9
    4ccc:	1b671000 	blne	19c8cd4 <_bss_end+0x19b7024>
    4cd0:	71010000 	mrsvc	r0, (UNDEF: 1)
    4cd4:	0000851b 	andeq	r8, r0, fp, lsl r5
    4cd8:	1da10c00 	stcne	12, cr0, [r1]
    4cdc:	74010000 	strvc	r0, [r1], #-0
    4ce0:	00013913 	andeq	r3, r1, r3, lsl r9
    4ce4:	970c0000 	strls	r0, [ip, -r0]
    4ce8:	0100001b 	tsteq	r0, fp, lsl r0
    4cec:	01391377 	teqeq	r9, r7, ror r3
    4cf0:	0c240000 	stceq	0, cr0, [r4], #-0
    4cf4:	00001d2d 	andeq	r1, r0, sp, lsr #26
    4cf8:	39137801 	ldmdbcc	r3, {r0, fp, ip, sp, lr}
    4cfc:	48000001 	stmdami	r0, {r0}
    4d00:	001d1c0c 	andseq	r1, sp, ip, lsl #24
    4d04:	13790100 	cmnne	r9, #0, 2
    4d08:	00000139 	andeq	r0, r0, r9, lsr r1
    4d0c:	1c87116c 	stfnes	f1, [r7], {108}	; 0x6c
    4d10:	7c010000 	stcvc	0, cr0, [r1], {-0}
    4d14:	001dff05 	andseq	pc, sp, r5, lsl #30
    4d18:	0003c400 	andeq	ip, r3, r0, lsl #8
    4d1c:	02530100 	subseq	r0, r3, #0, 2
    4d20:	02590000 	subseq	r0, r9, #0
    4d24:	c40e0000 	strgt	r0, [lr], #-0
    4d28:	00000003 	andeq	r0, r0, r3
    4d2c:	001bc112 	andseq	ip, fp, r2, lsl r1
    4d30:	0a7f0100 	beq	1fc5138 <_bss_end+0x1fb3488>
    4d34:	00001e48 	andeq	r1, r0, r8, asr #28
    4d38:	00026e01 	andeq	r6, r2, r1, lsl #28
    4d3c:	00027400 	andeq	r7, r2, r0, lsl #8
    4d40:	03c40e00 	biceq	r0, r4, #0, 28
    4d44:	13000000 	movwne	r0, #0
    4d48:	00000a20 	andeq	r0, r0, r0, lsr #20
    4d4c:	e60c8201 	str	r8, [ip], -r1, lsl #4
    4d50:	0900001c 	stmdbeq	r0, {r2, r3, r4}
    4d54:	01000005 	tsteq	r0, r5
    4d58:	00000289 	andeq	r0, r0, r9, lsl #5
    4d5c:	0003c40e 	andeq	ip, r3, lr, lsl #8
    4d60:	02b70f00 	adcseq	r0, r7, #0, 30
    4d64:	070f0000 	streq	r0, [pc, -r0]
    4d68:	00000001 	andeq	r0, r0, r1
    4d6c:	00251400 	eoreq	r1, r5, r0, lsl #8
    4d70:	02aa0000 	adceq	r0, sl, #0
    4d74:	8f150000 	svchi	0x00150000
    4d78:	0f000000 	svceq	0x00000000
    4d7c:	02010200 	andeq	r0, r1, #0, 4
    4d80:	0000454d 	andeq	r4, r0, sp, asr #10
    4d84:	01390416 	teqeq	r9, r6, lsl r4
    4d88:	04160000 	ldreq	r0, [r6], #-0
    4d8c:	0000002c 	andeq	r0, r0, ip, lsr #32
    4d90:	0002b703 	andeq	fp, r2, r3, lsl #14
    4d94:	29e11700 	stmibcs	r1!, {r8, r9, sl, ip}^
    4d98:	01040000 	mrseq	r0, (UNDEF: 4)
    4d9c:	02c20743 	sbceq	r0, r2, #17563648	; 0x10c0000
    4da0:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
    4da4:	bc180000 	ldclt	0, cr0, [r8], {-0}
    4da8:	fb00002d 	blx	4e66 <CPSR_IRQ_INHIBIT+0x4de6>
    4dac:	b800001f 	stmdalt	r0, {r0, r1, r2, r3, r4}
    4db0:	01000009 	tsteq	r0, r9
    4db4:	000002e9 	andeq	r0, r0, r9, ror #5
    4db8:	000002f4 	strdeq	r0, [r0], -r4
    4dbc:	0003b30e 	andeq	fp, r3, lr, lsl #6
    4dc0:	00380e00 	eorseq	r0, r8, r0, lsl #28
    4dc4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4dc8:	000029e1 	andeq	r2, r0, r1, ror #19
    4dcc:	00002e60 	andeq	r2, r0, r0, ror #28
    4dd0:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    4dd4:	00030a01 	andeq	r0, r3, r1, lsl #20
    4dd8:	00031500 	andeq	r1, r3, r0, lsl #10
    4ddc:	03b30e00 			; <UNDEFINED> instruction: 0x03b30e00
    4de0:	750f0000 	strvc	r0, [pc, #-0]	; 4de8 <CPSR_IRQ_INHIBIT+0x4d68>
    4de4:	00000023 	andeq	r0, r0, r3, lsr #32
    4de8:	0029e118 	eoreq	lr, r9, r8, lsl r1
    4dec:	0021ba00 	eoreq	fp, r1, r0, lsl #20
    4df0:	0003b300 	andeq	fp, r3, r0, lsl #6
    4df4:	032b0100 			; <UNDEFINED> instruction: 0x032b0100
    4df8:	03360000 	teqeq	r6, #0
    4dfc:	b30e0000 	movwlt	r0, #57344	; 0xe000
    4e00:	0f000003 	svceq	0x00000003
    4e04:	0000237b 	andeq	r2, r0, fp, ror r3
    4e08:	29e11800 	stmibcs	r1!, {fp, ip}^
    4e0c:	28230000 	stmdacs	r3!, {}	; <UNPREDICTABLE>
    4e10:	03b30000 			; <UNDEFINED> instruction: 0x03b30000
    4e14:	4c010000 	stcmi	0, cr0, [r1], {-0}
    4e18:	52000003 	andpl	r0, r0, #3
    4e1c:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    4e20:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    4e24:	29db1900 	ldmibcs	fp, {r8, fp, ip}^
    4e28:	238c0000 	orrcs	r0, ip, #0
    4e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    4e30:	0025cf1a 	eoreq	ip, r5, sl, lsl pc
    4e34:	12470100 	subne	r0, r7, #0, 2
    4e38:	00002eb7 			; <UNDEFINED> instruction: 0x00002eb7
    4e3c:	00100201 	andseq	r0, r0, r1, lsl #4
    4e40:	000002c2 	andeq	r0, r0, r2, asr #5
    4e44:	00037a01 	andeq	r7, r3, r1, lsl #20
    4e48:	00038000 	andeq	r8, r3, r0
    4e4c:	03b30e00 			; <UNDEFINED> instruction: 0x03b30e00
    4e50:	1b000000 	blne	4e58 <CPSR_IRQ_INHIBIT+0x4dd8>
    4e54:	000023f6 	strdeq	r2, [r0], -r6
    4e58:	4c144901 			; <UNDEFINED> instruction: 0x4c144901
    4e5c:	09000027 	stmdbeq	r0, {r0, r1, r2, r5}
    4e60:	01000005 	tsteq	r0, r5
    4e64:	c2011002 	andgt	r1, r1, #2
    4e68:	01000002 	tsteq	r0, r2
    4e6c:	0000039d 	muleq	r0, sp, r3
    4e70:	0003b30e 	andeq	fp, r3, lr, lsl #6
    4e74:	02b70f00 	adcseq	r0, r7, #0, 30
    4e78:	070f0000 	streq	r0, [pc, -r0]
    4e7c:	00000001 	andeq	r0, r0, r1
    4e80:	02c20300 	sbceq	r0, r2, #0, 6
    4e84:	04160000 	ldreq	r0, [r6], #-0
    4e88:	000002c2 	andeq	r0, r0, r2, asr #5
    4e8c:	0001e914 	andeq	lr, r1, r4, lsl r9
    4e90:	0003c400 	andeq	ip, r3, r0, lsl #8
    4e94:	16001c00 	strne	r1, [r0], -r0, lsl #24
    4e98:	00012c04 	andeq	r2, r1, r4, lsl #24
    4e9c:	2bc81700 	blcs	ff20aaa4 <_bss_end+0xff1f8df4>
    4ea0:	01040000 	mrseq	r0, (UNDEF: 4)
    4ea4:	03ca0724 	biceq	r0, sl, #36, 14	; 0x900000
    4ea8:	05040000 	streq	r0, [r4, #-0]
    4eac:	c8180000 	ldmdagt	r8, {}	; <UNPREDICTABLE>
    4eb0:	4400002b 	strmi	r0, [r0], #-43	; 0xffffffd5
    4eb4:	0900002a 	stmdbeq	r0, {r1, r3, r5}
    4eb8:	01000005 	tsteq	r0, r5
    4ebc:	000003f1 	strdeq	r0, [r0], -r1
    4ec0:	000003fc 	strdeq	r0, [r0], -ip
    4ec4:	0005090e 	andeq	r0, r5, lr, lsl #18
    4ec8:	239c0f00 	orrscs	r0, ip, #0, 30
    4ecc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4ed0:	00002bc8 	andeq	r2, r0, r8, asr #23
    4ed4:	00001ead 	andeq	r1, r0, sp, lsr #29
    4ed8:	00000509 	andeq	r0, r0, r9, lsl #10
    4edc:	00041201 	andeq	r1, r4, r1, lsl #4
    4ee0:	00041800 	andeq	r1, r4, r0, lsl #16
    4ee4:	05090e00 	streq	r0, [r9, #-3584]	; 0xfffff200
    4ee8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    4eec:	00002bc2 	andeq	r2, r0, r2, asr #23
    4ef0:	0000238c 	andeq	r2, r0, ip, lsl #7
    4ef4:	201d0100 	andscs	r0, sp, r0, lsl #2
    4ef8:	01000029 	tsteq	r0, r9, lsr #32
    4efc:	20170d27 	andscs	r0, r7, r7, lsr #26
    4f00:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    4f04:	ca010000 	bgt	44f0c <_bss_end+0x3325c>
    4f08:	01000003 	tsteq	r0, r3
    4f0c:	00044201 	andeq	r4, r4, r1, lsl #4
    4f10:	00044d00 	andeq	r4, r4, r0, lsl #26
    4f14:	05090e00 	streq	r0, [r9, #-3584]	; 0xfffff200
    4f18:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    4f1c:	00000000 	andeq	r0, r0, r0
    4f20:	0002d31e 	andeq	sp, r2, lr, lsl r3
    4f24:	162b0100 	strtne	r0, [fp], -r0, lsl #2
    4f28:	00002475 	andeq	r2, r0, r5, ror r4
    4f2c:	00000079 	andeq	r0, r0, r9, ror r0
    4f30:	02100201 	andseq	r0, r0, #268435456	; 0x10000000
    4f34:	000003ca 	andeq	r0, r0, sl, asr #7
    4f38:	00046e01 	andeq	r6, r4, r1, lsl #28
    4f3c:	00047e00 	andeq	r7, r4, r0, lsl #28
    4f40:	05090e00 	streq	r0, [r9, #-3584]	; 0xfffff200
    4f44:	120f0000 	andne	r0, pc, #0
    4f48:	0f00000d 	svceq	0x0000000d
    4f4c:	00000079 	andeq	r0, r0, r9, ror r0
    4f50:	1ce01e00 	stclne	14, cr1, [r0]
    4f54:	31010000 	mrscc	r0, (UNDEF: 1)
    4f58:	00260816 	eoreq	r0, r6, r6, lsl r8
    4f5c:	00007900 	andeq	r7, r0, r0, lsl #18
    4f60:	10020100 	andne	r0, r2, r0, lsl #2
    4f64:	0003ca03 	andeq	ip, r3, r3, lsl #20
    4f68:	049f0100 	ldreq	r0, [pc], #256	; 4f70 <CPSR_IRQ_INHIBIT+0x4ef0>
    4f6c:	04af0000 	strteq	r0, [pc], #0	; 4f74 <CPSR_IRQ_INHIBIT+0x4ef4>
    4f70:	090e0000 	stmdbeq	lr, {}	; <UNPREDICTABLE>
    4f74:	0f000005 	svceq	0x00000005
    4f78:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    4f7c:	0000790f 	andeq	r7, r0, pc, lsl #18
    4f80:	ad1e0000 	ldcge	0, cr0, [lr, #-0]
    4f84:	01000009 	tsteq	r0, r9
    4f88:	28f71236 	ldmcs	r7!, {r1, r2, r4, r5, r9, ip}^
    4f8c:	02aa0000 	adceq	r0, sl, #0
    4f90:	02010000 	andeq	r0, r1, #0
    4f94:	03ca0410 	biceq	r0, sl, #16, 8	; 0x10000000
    4f98:	d0010000 	andle	r0, r1, r0
    4f9c:	d6000004 	strle	r0, [r0], -r4
    4fa0:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4fa4:	00000509 	andeq	r0, r0, r9, lsl #10
    4fa8:	24ea1b00 	strbtcs	r1, [sl], #2816	; 0xb00
    4fac:	3b010000 	blcc	44fb4 <_bss_end+0x33304>
    4fb0:	0027bb12 	eoreq	fp, r7, r2, lsl fp
    4fb4:	0002aa00 	andeq	sl, r2, r0, lsl #20
    4fb8:	10020100 	andne	r0, r2, r0, lsl #2
    4fbc:	0003ca05 	andeq	ip, r3, r5, lsl #20
    4fc0:	04f30100 	ldrbteq	r0, [r3], #256	; 0x100
    4fc4:	090e0000 	stmdbeq	lr, {}	; <UNPREDICTABLE>
    4fc8:	0f000005 	svceq	0x00000005
    4fcc:	000000a0 	andeq	r0, r0, r0, lsr #1
    4fd0:	0009b80f 	andeq	fp, r9, pc, lsl #16
    4fd4:	03000000 	movweq	r0, #0
    4fd8:	000003ca 	andeq	r0, r0, sl, asr #7
    4fdc:	03ca0416 	biceq	r0, sl, #369098752	; 0x16000000
    4fe0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    4fe4:	1f000005 	svcne	0x00000005
    4fe8:	006c6168 	rsbeq	r6, ip, r8, ror #2
    4fec:	0d0b050b 	cfstr32eq	mvfx0, [fp, #-44]	; 0xffffffd4
    4ff0:	20000006 	andcs	r0, r0, r6
    4ff4:	00000487 	andeq	r0, r0, r7, lsl #9
    4ff8:	961c070b 	ldrls	r0, [ip], -fp, lsl #14
    4ffc:	80000000 	andhi	r0, r0, r0
    5000:	200ee6b2 			; <UNDEFINED> instruction: 0x200ee6b2
    5004:	000005cc 	andeq	r0, r0, ip, asr #11
    5008:	191d0a0b 	ldmdbne	sp, {r0, r1, r3, r9, fp}
    500c:	00000006 	andeq	r0, r0, r6
    5010:	20200000 	eorcs	r0, r0, r0
    5014:	00000452 	andeq	r0, r0, r2, asr r4
    5018:	191d0d0b 	ldmdbne	sp, {r0, r1, r3, r8, sl, fp}
    501c:	00000006 	andeq	r0, r0, r6
    5020:	21202000 			; <UNDEFINED> instruction: 0x21202000
    5024:	0000058a 	andeq	r0, r0, sl, lsl #11
    5028:	8518100b 	ldrhi	r1, [r8, #-11]
    502c:	36000000 	strcc	r0, [r0], -r0
    5030:	00037320 	andeq	r7, r3, r0, lsr #6
    5034:	1d420b00 	vstrne	d16, [r2, #-0]
    5038:	00000619 	andeq	r0, r0, r9, lsl r6
    503c:	20215000 	eorcs	r5, r1, r0
    5040:	00034a20 	andeq	r4, r3, r0, lsr #20
    5044:	1d710b00 	vldmdbne	r1!, {d16-d15}
    5048:	00000619 	andeq	r0, r0, r9, lsl r6
    504c:	2000b200 	andcs	fp, r0, r0, lsl #4
    5050:	0002b620 	andeq	fp, r2, r0, lsr #12
    5054:	1da40b00 			; <UNDEFINED> instruction: 0x1da40b00
    5058:	00000619 	andeq	r0, r0, r9, lsl r6
    505c:	2000b400 	andcs	fp, r0, r0, lsl #8
    5060:	00036420 	andeq	r6, r3, r0, lsr #8
    5064:	1db30b00 			; <UNDEFINED> instruction: 0x1db30b00
    5068:	00000619 	andeq	r0, r0, r9, lsl r6
    506c:	20104000 	andscs	r4, r0, r0
    5070:	00033120 	andeq	r3, r3, r0, lsr #2
    5074:	1dbe0b00 			; <UNDEFINED> instruction: 0x1dbe0b00
    5078:	00000619 	andeq	r0, r0, r9, lsl r6
    507c:	20205000 	eorcs	r5, r0, r0
    5080:	0003ef20 	andeq	lr, r3, r0, lsr #30
    5084:	1dbf0b00 			; <UNDEFINED> instruction: 0x1dbf0b00
    5088:	00000619 	andeq	r0, r0, r9, lsl r6
    508c:	20804000 	addcs	r4, r0, r0
    5090:	00045c20 	andeq	r5, r4, r0, lsr #24
    5094:	1dc00b00 	vstrne	d16, [r0]
    5098:	00000619 	andeq	r0, r0, r9, lsl r6
    509c:	20805000 	addcs	r5, r0, r0
    50a0:	0007a122 	andeq	sl, r7, r2, lsr #2
    50a4:	38040500 	stmdacc	r4, {r8, sl}
    50a8:	0b000000 	bleq	50b0 <CPSR_IRQ_INHIBIT+0x5030>
    50ac:	8a0810c2 	bhi	2093bc <_bss_end+0x1f770c>
    50b0:	00000035 	andeq	r0, r0, r5, lsr r0
    50b4:	000a0c08 	andeq	r0, sl, r8, lsl #24
    50b8:	4a080100 	bmi	2054c0 <_bss_end+0x1f3810>
    50bc:	02000009 	andeq	r0, r0, #9
    50c0:	00128808 	andseq	r8, r2, r8, lsl #16
    50c4:	68080300 	stmdavs	r8, {r8, r9}
    50c8:	04000008 	streq	r0, [r0], #-8
    50cc:	00080308 	andeq	r0, r8, r8, lsl #6
    50d0:	49080500 	stmdbmi	r8, {r8, sl}
    50d4:	06000007 	streq	r0, [r0], -r7
    50d8:	0007e408 	andeq	lr, r7, r8, lsl #8
    50dc:	00000700 	andeq	r0, r0, r0, lsl #14
    50e0:	00052023 	andeq	r2, r5, r3, lsr #32
    50e4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    50e8:	00004591 	muleq	r0, r1, r5
    50ec:	00061203 	andeq	r1, r6, r3, lsl #4
    50f0:	05302300 	ldreq	r2, [r0, #-768]!	; 0xfffffd00
    50f4:	40230000 	eormi	r0, r3, r0
    50f8:	23000005 	movwcs	r0, #5
    50fc:	00000550 	andeq	r0, r0, r0, asr r5
    5100:	00055d23 	andeq	r5, r5, r3, lsr #26
    5104:	056d2300 	strbeq	r2, [sp, #-768]!	; 0xfffffd00
    5108:	7d230000 	stcvc	0, cr0, [r3, #-0]
    510c:	23000005 	movwcs	r0, #5
    5110:	0000058d 	andeq	r0, r0, sp, lsl #11
    5114:	00059d23 	andeq	r9, r5, r3, lsr #26
    5118:	05ad2300 	streq	r2, [sp, #768]!	; 0x300
    511c:	bd230000 	stclt	0, cr0, [r3, #-0]
    5120:	07000005 	streq	r0, [r0, -r5]
    5124:	0000054d 	andeq	r0, r0, sp, asr #10
    5128:	008f0407 	addeq	r0, pc, r7, lsl #8
    512c:	070c0000 	streq	r0, [ip, -r0]
    5130:	0006990c 	andeq	r9, r6, ip, lsl #18
    5134:	02dc0800 	sbcseq	r0, ip, #0, 16
    5138:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    513c:	0000051d 	andeq	r0, r0, sp, lsl r5
    5140:	02150801 	andseq	r0, r5, #65536	; 0x10000
    5144:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5148:	0000020f 	andeq	r0, r0, pc, lsl #4
    514c:	01f70803 	mvnseq	r0, r3, lsl #16
    5150:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    5154:	000001fd 	strdeq	r0, [r0], -sp
    5158:	02030805 	andeq	r0, r3, #327680	; 0x50000
    515c:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    5160:	00000209 	andeq	r0, r0, r9, lsl #4
    5164:	07280807 	streq	r0, [r8, -r7, lsl #16]!
    5168:	00080000 	andeq	r0, r8, r0
    516c:	00071a0a 	andeq	r1, r7, sl, lsl #20
    5170:	1b0c1400 	blne	30a178 <_bss_end+0x2f84c8>
    5174:	00089407 	andeq	r9, r8, r7, lsl #8
    5178:	04020c00 	streq	r0, [r2], #-3072	; 0xfffff400
    517c:	1f0c0000 	svcne	0x000c0000
    5180:	00089f22 	andeq	r9, r8, r2, lsr #30
    5184:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    5188:	0c000002 	stceq	0, cr0, [r0], {2}
    518c:	08a40e22 	stmiaeq	r4!, {r1, r5, r9, sl, fp}
    5190:	0c040000 	stceq	0, cr0, [r4], {-0}
    5194:	000004f1 	strdeq	r0, [r0], -r1
    5198:	a40e240c 	strge	r2, [lr], #-1036	; 0xfffffbf4
    519c:	0c000008 	stceq	0, cr0, [r0], {8}
    51a0:	00043e11 	andeq	r3, r4, r1, lsl lr
    51a4:	0a280c00 	beq	a081ac <_bss_end+0x9f64fc>
    51a8:	000003ac 	andeq	r0, r0, ip, lsr #7
    51ac:	000002aa 	andeq	r0, r0, sl, lsr #5
    51b0:	0006e602 	andeq	lr, r6, r2, lsl #12
    51b4:	0006fb00 	andeq	pc, r6, r0, lsl #22
    51b8:	08b40e00 	ldmeq	r4!, {r9, sl, fp}
    51bc:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    51c0:	0f000000 	svceq	0x00000000
    51c4:	000008ba 			; <UNDEFINED> instruction: 0x000008ba
    51c8:	0008ba0f 	andeq	fp, r8, pc, lsl #20
    51cc:	de110000 	cdple	0, 1, cr0, cr1, cr0, {0}
    51d0:	0c000004 	stceq	0, cr0, [r0], {4}
    51d4:	04af0a2a 	strteq	r0, [pc], #2602	; 51dc <CPSR_IRQ_INHIBIT+0x515c>
    51d8:	02aa0000 	adceq	r0, sl, #0
    51dc:	14020000 	strne	r0, [r2], #-0
    51e0:	29000007 	stmdbcs	r0, {r0, r1, r2}
    51e4:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    51e8:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
    51ec:	0000790f 	andeq	r7, r0, pc, lsl #18
    51f0:	08ba0f00 	ldmeq	sl!, {r8, r9, sl, fp}
    51f4:	ba0f0000 	blt	3c51fc <_bss_end+0x3b354c>
    51f8:	00000008 	andeq	r0, r0, r8
    51fc:	00062d11 	andeq	r2, r6, r1, lsl sp
    5200:	0a2c0c00 	beq	b08208 <_bss_end+0xaf6558>
    5204:	000006ad 	andeq	r0, r0, sp, lsr #13
    5208:	000002aa 	andeq	r0, r0, sl, lsr #5
    520c:	00074202 	andeq	r4, r7, r2, lsl #4
    5210:	00075700 	andeq	r5, r7, r0, lsl #14
    5214:	08b40e00 	ldmeq	r4!, {r9, sl, fp}
    5218:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    521c:	0f000000 	svceq	0x00000000
    5220:	000008ba 			; <UNDEFINED> instruction: 0x000008ba
    5224:	0008ba0f 	andeq	fp, r8, pc, lsl #20
    5228:	66110000 	ldrvs	r0, [r1], -r0
    522c:	0c000004 	stceq	0, cr0, [r0], {4}
    5230:	05fe0a2e 	ldrbeq	r0, [lr, #2606]!	; 0xa2e
    5234:	02aa0000 	adceq	r0, sl, #0
    5238:	70020000 	andvc	r0, r2, r0
    523c:	85000007 	strhi	r0, [r0, #-7]
    5240:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    5244:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
    5248:	0000790f 	andeq	r7, r0, pc, lsl #18
    524c:	08ba0f00 	ldmeq	sl!, {r8, r9, sl, fp}
    5250:	ba0f0000 	blt	3c5258 <_bss_end+0x3b35a8>
    5254:	00000008 	andeq	r0, r0, r8
    5258:	00071a11 	andeq	r1, r7, r1, lsl sl
    525c:	05310c00 	ldreq	r0, [r1, #-3072]!	; 0xfffff400
    5260:	000005b5 			; <UNDEFINED> instruction: 0x000005b5
    5264:	000008c0 	andeq	r0, r0, r0, asr #17
    5268:	00079e01 	andeq	r9, r7, r1, lsl #28
    526c:	0007a900 	andeq	sl, r7, r0, lsl #18
    5270:	08c00e00 	stmiaeq	r0, {r9, sl, fp}^
    5274:	8f0f0000 	svchi	0x000f0000
    5278:	00000000 	andeq	r0, r0, r0
    527c:	00028a12 	andeq	r8, r2, r2, lsl sl
    5280:	0a340c00 	beq	d08288 <_bss_end+0xcf65d8>
    5284:	00000524 	andeq	r0, r0, r4, lsr #10
    5288:	0007be01 	andeq	fp, r7, r1, lsl #28
    528c:	0007ce00 	andeq	ip, r7, r0, lsl #28
    5290:	08c00e00 	stmiaeq	r0, {r9, sl, fp}^
    5294:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5298:	0f000000 	svceq	0x00000000
    529c:	00000650 	andeq	r0, r0, r0, asr r6
    52a0:	05781100 	ldrbeq	r1, [r8, #-256]!	; 0xffffff00
    52a4:	360c0000 	strcc	r0, [ip], -r0
    52a8:	0006ec14 	andeq	lr, r6, r4, lsl ip
    52ac:	00065000 	andeq	r5, r6, r0
    52b0:	07e70100 	strbeq	r0, [r7, r0, lsl #2]!
    52b4:	07f20000 	ldrbeq	r0, [r2, r0]!
    52b8:	b40e0000 	strlt	r0, [lr], #-0
    52bc:	0f000008 	svceq	0x00000008
    52c0:	00000079 	andeq	r0, r0, r9, ror r0
    52c4:	05191200 	ldreq	r1, [r9, #-512]	; 0xfffffe00
    52c8:	390c0000 	stmdbcc	ip, {}	; <UNPREDICTABLE>
    52cc:	0004160a 	andeq	r1, r4, sl, lsl #12
    52d0:	08070100 	stmdaeq	r7, {r8}
    52d4:	08170000 	ldmdaeq	r7, {}	; <UNPREDICTABLE>
    52d8:	c00e0000 	andgt	r0, lr, r0
    52dc:	0f000008 	svceq	0x00000008
    52e0:	00000079 	andeq	r0, r0, r9, ror r0
    52e4:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    52e8:	d8110000 	ldmdale	r1, {}	; <UNPREDICTABLE>
    52ec:	0c000002 	stceq	0, cr0, [r0], {2}
    52f0:	026b0a3c 	rsbeq	r0, fp, #60, 20	; 0x3c000
    52f4:	02aa0000 	adceq	r0, sl, #0
    52f8:	30010000 	andcc	r0, r1, r0
    52fc:	3b000008 	blcc	5324 <CPSR_IRQ_INHIBIT+0x52a4>
    5300:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    5304:	000008c0 	andeq	r0, r0, r0, asr #17
    5308:	0000790f 	andeq	r7, r0, pc, lsl #18
    530c:	ed110000 	ldc	0, cr0, [r1, #-0]
    5310:	0c000005 	stceq	0, cr0, [r0], {5}
    5314:	01d30a3f 	bicseq	r0, r3, pc, lsr sl
    5318:	02aa0000 	adceq	r0, sl, #0
    531c:	54010000 	strpl	r0, [r1], #-0
    5320:	69000008 	stmdbvs	r0, {r3}
    5324:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    5328:	000008c0 	andeq	r0, r0, r0, asr #17
    532c:	0000790f 	andeq	r7, r0, pc, lsl #18
    5330:	02aa0f00 	adceq	r0, sl, #0, 30
    5334:	aa0f0000 	bge	3c533c <_bss_end+0x3b368c>
    5338:	00000002 	andeq	r0, r0, r2
    533c:	0005a313 	andeq	sl, r5, r3, lsl r3
    5340:	0a410c00 	beq	1048348 <_bss_end+0x1036698>
    5344:	000002fe 	strdeq	r0, [r0], -lr
    5348:	000002aa 	andeq	r0, r0, sl, lsr #5
    534c:	00087e01 	andeq	r7, r8, r1, lsl #28
    5350:	08c00e00 	stmiaeq	r0, {r9, sl, fp}^
    5354:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5358:	0f000000 	svceq	0x00000000
    535c:	000002aa 	andeq	r0, r0, sl, lsr #5
    5360:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    5364:	03000000 	movweq	r0, #0
    5368:	00000699 	muleq	r0, r9, r6
    536c:	009b0416 	addseq	r0, fp, r6, lsl r4
    5370:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    5374:	14000008 	strne	r0, [r0], #-8
    5378:	00000079 	andeq	r0, r0, r9, ror r0
    537c:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
    5380:	00008f15 	andeq	r8, r0, r5, lsl pc
    5384:	16000100 	strne	r0, [r0], -r0, lsl #2
    5388:	00089404 	andeq	r9, r8, r4, lsl #8
    538c:	79042400 	stmdbvc	r4, {sl, sp}
    5390:	16000000 	strne	r0, [r0], -r0
    5394:	00069904 	andeq	r9, r6, r4, lsl #18
    5398:	04a92500 	strteq	r2, [r9], #1280	; 0x500
    539c:	450c0000 	strmi	r0, [ip, #-0]
    53a0:	00069916 	andeq	r9, r6, r6, lsl r9
    53a4:	13be0b00 			; <UNDEFINED> instruction: 0x13be0b00
    53a8:	02100000 	andseq	r0, r0, #0
    53ac:	09140808 	ldmdbeq	r4, {r3, fp}
    53b0:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    53b4:	0200000d 	andeq	r0, r0, #13
    53b8:	0914200a 	ldmdbeq	r4, {r1, r3, sp}
    53bc:	0c000000 	stceq	0, cr0, [r0], {-0}
    53c0:	00000dfb 	strdeq	r0, [r0], -fp
    53c4:	14200b02 	strtne	r0, [r0], #-2818	; 0xfffff4fe
    53c8:	04000009 	streq	r0, [r0], #-9
    53cc:	000e480c 	andeq	r4, lr, ip, lsl #16
    53d0:	0e0c0200 	cdpeq	2, 0, cr0, cr12, cr0, {0}
    53d4:	00000079 	andeq	r0, r0, r9, ror r0
    53d8:	0e9c0c08 	cdpeq	12, 9, cr0, cr12, cr8, {0}
    53dc:	0d020000 	stceq	0, cr0, [r2, #-0]
    53e0:	0002aa0a 	andeq	sl, r2, sl, lsl #20
    53e4:	16000c00 	strne	r0, [r0], -r0, lsl #24
    53e8:	0008d204 	andeq	sp, r8, r4, lsl #4
    53ec:	0e000a00 	vmlaeq.f32	s0, s0, s0
    53f0:	02040000 	andeq	r0, r4, #0
    53f4:	09b20710 	ldmibeq	r2!, {r4, r8, r9, sl}
    53f8:	410c0000 	mrsmi	r0, (UNDEF: 12)
    53fc:	02000013 	andeq	r0, r0, #19
    5400:	09142013 	ldmdbeq	r4, {r0, r1, r4, sp}
    5404:	26000000 	strcs	r0, [r0], -r0
    5408:	00001383 	andeq	r1, r0, r3, lsl #7
    540c:	0d201502 	cfstr32eq	mvfx1, [r0, #-8]!
    5410:	1400000d 	strne	r0, [r0], #-13
    5414:	4c000009 	stcmi	0, cr0, [r0], {9}
    5418:	52000009 	andpl	r0, r0, #9
    541c:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    5420:	000009b2 			; <UNDEFINED> instruction: 0x000009b2
    5424:	0e001100 	adfeqs	f1, f0, f0
    5428:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    542c:	00132305 	andseq	r2, r3, r5, lsl #6
    5430:	0009b200 	andeq	fp, r9, r0, lsl #4
    5434:	096b0100 	stmdbeq	fp!, {r8}^
    5438:	09710000 	ldmdbeq	r1!, {}^	; <UNPREDICTABLE>
    543c:	b20e0000 	andlt	r0, lr, #0
    5440:	00000009 	andeq	r0, r0, r9
    5444:	000edb11 	andeq	sp, lr, r1, lsl fp
    5448:	0b1a0200 	bleq	685c50 <_bss_end+0x673fa0>
    544c:	00001197 	muleq	r0, r7, r1
    5450:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    5454:	00098a01 	andeq	r8, r9, r1, lsl #20
    5458:	00099500 	andeq	r9, r9, r0, lsl #10
    545c:	09b20e00 	ldmibeq	r2!, {r9, sl, fp}
    5460:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5464:	00000000 	andeq	r0, r0, r0
    5468:	000f4527 	andeq	r4, pc, r7, lsr #10
    546c:	0a1b0200 	beq	6c5c74 <_bss_end+0x6b3fc4>
    5470:	000010d6 	ldrdeq	r1, [r0], -r6
    5474:	0009a601 	andeq	sl, r9, r1, lsl #12
    5478:	09b20e00 	ldmibeq	r2!, {r9, sl, fp}
    547c:	b80f0000 	stmdalt	pc, {}	; <UNPREDICTABLE>
    5480:	00000009 	andeq	r0, r0, r9
    5484:	1a041600 	bne	10ac8c <_bss_end+0xf8fdc>
    5488:	28000009 	stmdacs	r0, {r0, r3}
    548c:	37fa2504 	ldrbcc	r2, [sl, r4, lsl #10]!
    5490:	24020000 	strcs	r0, [r2], #-0
    5494:	00091a1d 	andeq	r1, r9, sp, lsl sl
    5498:	27fa1700 	ldrbcs	r1, [sl, r0, lsl #14]!
    549c:	03040000 	movweq	r0, #16384	; 0x4000
    54a0:	02c2074f 	sbceq	r0, r2, #20709376	; 0x13c0000
    54a4:	0aae0000 	beq	feb854ac <_bss_end+0xfeb737fc>
    54a8:	c2290000 	eorgt	r0, r9, #0
    54ac:	00000002 	andeq	r0, r0, r2
    54b0:	27f91801 	ldrbcs	r1, [r9, r1, lsl #16]!
    54b4:	218d0000 	orrcs	r0, sp, r0
    54b8:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    54bc:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    54c0:	ff000009 			; <UNDEFINED> instruction: 0xff000009
    54c4:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    54c8:	000021da 	ldrdeq	r2, [r0], -sl
    54cc:	0000380e 	andeq	r3, r0, lr, lsl #16
    54d0:	fa180000 	blx	6054d8 <_bss_end+0x5f3828>
    54d4:	97000027 	strls	r0, [r0, -r7, lsr #32]
    54d8:	da000026 	ble	5578 <CPSR_IRQ_INHIBIT+0x54f8>
    54dc:	01000021 	tsteq	r0, r1, lsr #32
    54e0:	00000a15 	andeq	r0, r0, r5, lsl sl
    54e4:	00000a20 	andeq	r0, r0, r0, lsr #20
    54e8:	0021da0e 	eoreq	sp, r1, lr, lsl #20
    54ec:	21e50f00 	mvncs	r0, r0, lsl #30
    54f0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    54f4:	000027fa 	strdeq	r2, [r0], -sl
    54f8:	000021d9 	ldrdeq	r2, [r0], -r9
    54fc:	000021da 	ldrdeq	r2, [r0], -sl
    5500:	000a3601 	andeq	r3, sl, r1, lsl #12
    5504:	000a4100 	andeq	r4, sl, r0, lsl #2
    5508:	21da0e00 	bicscs	r0, sl, r0, lsl #28
    550c:	eb0f0000 	bl	3c5514 <_bss_end+0x3b3864>
    5510:	00000021 	andeq	r0, r0, r1, lsr #32
    5514:	0027fa18 	eoreq	pc, r7, r8, lsl sl	; <UNPREDICTABLE>
    5518:	0027e000 	eoreq	lr, r7, r0
    551c:	0021da00 	eoreq	sp, r1, r0, lsl #20
    5520:	0a570100 	beq	15c5928 <_bss_end+0x15b3c78>
    5524:	0a5d0000 	beq	174552c <_bss_end+0x173387c>
    5528:	da0e0000 	ble	385530 <_bss_end+0x373880>
    552c:	00000021 	andeq	r0, r0, r1, lsr #32
    5530:	0025cf1a 	eoreq	ip, r5, sl, lsl pc
    5534:	12520300 	subsne	r0, r2, #0, 6
    5538:	000024c6 	andeq	r2, r0, r6, asr #9
    553c:	00100201 	andseq	r0, r0, r1, lsl #4
    5540:	000009c6 	andeq	r0, r0, r6, asr #19
    5544:	000a7a01 	andeq	r7, sl, r1, lsl #20
    5548:	000a8000 	andeq	r8, sl, r0
    554c:	21da0e00 	bicscs	r0, sl, r0, lsl #28
    5550:	1b000000 	blne	5558 <CPSR_IRQ_INHIBIT+0x54d8>
    5554:	000023f6 	strdeq	r2, [r0], -r6
    5558:	07145703 	ldreq	r5, [r4, -r3, lsl #14]
    555c:	09000025 	stmdbeq	r0, {r0, r2, r5}
    5560:	01000005 	tsteq	r0, r5
    5564:	c6011002 	strgt	r1, [r1], -r2
    5568:	01000009 	tsteq	r0, r9
    556c:	00000a9d 	muleq	r0, sp, sl
    5570:	0021da0e 	eoreq	sp, r1, lr, lsl #20
    5574:	02b70f00 	adcseq	r0, r7, #0, 30
    5578:	070f0000 	streq	r0, [pc, -r0]
    557c:	00000001 	andeq	r0, r0, r1
    5580:	09c60300 	stmibeq	r6, {r8, r9}^
    5584:	742a0000 	strtvc	r0, [sl], #-0
    5588:	0300001f 	movweq	r0, #31
    558c:	09c61178 	stmibeq	r6, {r3, r4, r5, r6, r8, ip}^
    5590:	03050000 	movweq	r0, #20480	; 0x5000
    5594:	00010b30 	andeq	r0, r1, r0, lsr fp
    5598:	000b980a 	andeq	r9, fp, sl, lsl #16
    559c:	030d1800 	movweq	r1, #55296	; 0xd800
    55a0:	000d0607 	andeq	r0, sp, r7, lsl #12
    55a4:	0b162b00 	bleq	5901ac <_bss_end+0x57e4fc>
    55a8:	04070000 	streq	r0, [r7], #-0
    55ac:	0000008f 	andeq	r0, r0, pc, lsl #1
    55b0:	0110060d 	tsteq	r0, sp, lsl #12
    55b4:	00000af2 	strdeq	r0, [r0], -r2
    55b8:	5845482c 	stmdapl	r5, {r2, r3, r5, fp, lr}^
    55bc:	442c1000 	strtmi	r1, [ip], #-0
    55c0:	0a004345 	beq	162dc <_bss_end+0x462c>
    55c4:	0ad20300 	beq	ff4861cc <_bss_end+0xff47451c>
    55c8:	230b0000 	movwcs	r0, #45056	; 0xb000
    55cc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    55d0:	1b0c240d 	blne	30e60c <_bss_end+0x2fc95c>
    55d4:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
    55d8:	260d0079 			; <UNDEFINED> instruction: 0x260d0079
    55dc:	00008f16 	andeq	r8, r0, r6, lsl pc
    55e0:	782d0000 	stmdavc	sp!, {}	; <UNPREDICTABLE>
    55e4:	16270d00 	strtne	r0, [r7], -r0, lsl #26
    55e8:	0000008f 	andeq	r0, r0, pc, lsl #1
    55ec:	752e0004 	strvc	r0, [lr, #-4]!
    55f0:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    55f4:	0af21b0c 	beq	ffc8c22c <_bss_end+0xffc7a57c>
    55f8:	0a010000 	beq	45600 <_bss_end+0x33950>
    55fc:	000be82f 	andeq	lr, fp, pc, lsr #16
    5600:	280d0d00 	stmdacs	sp, {r8, sl, fp}
    5604:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    5608:	0b983001 	bleq	fe611614 <_bss_end+0xfe5ff964>
    560c:	100d0000 	andne	r0, sp, r0
    5610:	000c620e 	andeq	r6, ip, lr, lsl #4
    5614:	000d0600 	andeq	r0, sp, r0, lsl #12
    5618:	0b4f0100 	bleq	13c5a20 <_bss_end+0x13b3d70>
    561c:	0b640000 	bleq	1905624 <_bss_end+0x18f3974>
    5620:	060e0000 	streq	r0, [lr], -r0
    5624:	0f00000d 	svceq	0x0000000d
    5628:	0000008f 	andeq	r0, r0, pc, lsl #1
    562c:	00008f0f 	andeq	r8, r0, pc, lsl #30
    5630:	008f0f00 	addeq	r0, pc, r0, lsl #30
    5634:	12000000 	andne	r0, r0, #0
    5638:	000018a2 	andeq	r1, r0, r2, lsr #17
    563c:	830a120d 	movwhi	r1, #41485	; 0xa20d
    5640:	0100000b 	tsteq	r0, fp
    5644:	00000b79 	andeq	r0, r0, r9, ror fp
    5648:	00000b7f 	andeq	r0, r0, pc, ror fp
    564c:	000d060e 	andeq	r0, sp, lr, lsl #12
    5650:	a1110000 	tstge	r1, r0
    5654:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    5658:	0c050f14 	stceq	15, cr0, [r5], {20}
    565c:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    5660:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    5664:	a300000b 	movwge	r0, #11
    5668:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    566c:	00000d06 	andeq	r0, r0, r6, lsl #26
    5670:	0000250f 	andeq	r2, r0, pc, lsl #10
    5674:	a1110000 	tstge	r1, r0
    5678:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    567c:	0bac0f15 	bleq	feb092d8 <_bss_end+0xfeaf7628>
    5680:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    5684:	bc010000 	stclt	0, cr0, [r1], {-0}
    5688:	c700000b 	strgt	r0, [r0, -fp]
    568c:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    5690:	00000d06 	andeq	r0, r0, r6, lsl #26
    5694:	0002b70f 	andeq	fp, r2, pc, lsl #14
    5698:	a1110000 	tstge	r1, r0
    569c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    56a0:	0c890f16 	stceq	15, cr0, [r9], {22}
    56a4:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    56a8:	e0010000 	and	r0, r1, r0
    56ac:	eb00000b 	bl	56e0 <CPSR_IRQ_INHIBIT+0x5660>
    56b0:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    56b4:	00000d06 	andeq	r0, r0, r6, lsl #26
    56b8:	000ad20f 	andeq	sp, sl, pc, lsl #4
    56bc:	a1110000 	tstge	r1, r0
    56c0:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    56c4:	0c340f17 	ldceq	15, cr0, [r4], #-92	; 0xffffffa4
    56c8:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    56cc:	04010000 	streq	r0, [r1], #-0
    56d0:	0f00000c 	svceq	0x0000000c
    56d4:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    56d8:	00000d06 	andeq	r0, r0, r6, lsl #26
    56dc:	00008f0f 	andeq	r8, r0, pc, lsl #30
    56e0:	a1110000 	tstge	r1, r0
    56e4:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    56e8:	0bf40f18 	bleq	ffd09350 <_bss_end+0xffcf76a0>
    56ec:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    56f0:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    56f4:	3300000c 	movwcc	r0, #12
    56f8:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    56fc:	00000d06 	andeq	r0, r0, r6, lsl #26
    5700:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    5704:	b4310000 	ldrtlt	r0, [r1], #-0
    5708:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    570c:	0a84111b 	beq	fe109b80 <_bss_end+0xfe0f7ed0>
    5710:	0c470000 	mareq	acc0, r0, r7
    5714:	0c4d0000 	mareq	acc0, r0, sp
    5718:	060e0000 	streq	r0, [lr], -r0
    571c:	0000000d 	andeq	r0, r0, sp
    5720:	000aa731 	andeq	sl, sl, r1, lsr r7
    5724:	111c0d00 	tstne	ip, r0, lsl #26
    5728:	00000c45 	andeq	r0, r0, r5, asr #24
    572c:	00000c61 	andeq	r0, r0, r1, ror #24
    5730:	00000c67 	andeq	r0, r0, r7, ror #24
    5734:	000d060e 	andeq	r0, sp, lr, lsl #12
    5738:	5f310000 	svcpl	0x00310000
    573c:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    5740:	0b2d111d 	bleq	b49bbc <_bss_end+0xb37f0c>
    5744:	0c7b0000 	ldcleq	0, cr0, [fp], #-0
    5748:	0c810000 	stceq	0, cr0, [r1], {0}
    574c:	060e0000 	streq	r0, [lr], -r0
    5750:	0000000d 	andeq	r0, r0, sp
    5754:	0013e131 	andseq	lr, r3, r1, lsr r1
    5758:	0a1f0d00 	beq	7c8b60 <_bss_end+0x7b6eb0>
    575c:	00000c1e 	andeq	r0, r0, lr, lsl ip
    5760:	00000c95 	muleq	r0, r5, ip
    5764:	00000c9b 	muleq	r0, fp, ip
    5768:	000d060e 	andeq	r0, sp, lr, lsl #12
    576c:	a2310000 	eorsge	r0, r1, #0
    5770:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    5774:	0bbf0a21 	bleq	fefc8000 <_bss_end+0xfefb6350>
    5778:	0caf0000 	stceq	0, cr0, [pc]	; 5780 <CPSR_IRQ_INHIBIT+0x5700>
    577c:	0cc40000 	stcleq	0, cr0, [r4], {0}
    5780:	060e0000 	streq	r0, [lr], -r0
    5784:	0f00000d 	svceq	0x0000000d
    5788:	0000008f 	andeq	r0, r0, pc, lsl #1
    578c:	000d120f 	andeq	r1, sp, pc, lsl #4
    5790:	008f0f00 	addeq	r0, pc, r0, lsl #30
    5794:	0c000000 	stceq	0, cr0, [r0], {-0}
    5798:	00000b4f 	andeq	r0, r0, pc, asr #22
    579c:	1e232b0d 	vmulne.f64	d2, d3, d13
    57a0:	0000000d 	andeq	r0, r0, sp
    57a4:	000c160c 	andeq	r1, ip, ip, lsl #12
    57a8:	122c0d00 	eorne	r0, ip, #0, 26
    57ac:	0000008f 	andeq	r0, r0, pc, lsl #1
    57b0:	0bd60c04 	bleq	ff5887c8 <_bss_end+0xff576b18>
    57b4:	2d0d0000 	stccs	0, cr0, [sp, #-0]
    57b8:	00008f12 	andeq	r8, r0, r2, lsl pc
    57bc:	df0c0800 	svcle	0x000c0800
    57c0:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    57c4:	0af70f2e 	beq	ffdc9484 <_bss_end+0xffdb77d4>
    57c8:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    57cc:	00000a51 	andeq	r0, r0, r1, asr sl
    57d0:	d2122f0d 	andsle	r2, r2, #13, 30	; 0x34
    57d4:	1400000a 	strne	r0, [r0], #-10
    57d8:	c5041600 	strgt	r1, [r4, #-1536]	; 0xfffffa00
    57dc:	2400000a 	strcs	r0, [r0], #-10
    57e0:	000ac504 	andeq	ip, sl, r4, lsl #10
    57e4:	25041600 	strcs	r1, [r4, #-1536]	; 0xfffffa00
    57e8:	16000000 	strne	r0, [r0], -r0
    57ec:	00005c04 	andeq	r5, r0, r4, lsl #24
    57f0:	0d180300 	ldceq	3, cr0, [r8, #-0]
    57f4:	68250000 	stmdavs	r5!, {}	; <UNPREDICTABLE>
    57f8:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    57fc:	0ac51132 	beq	ff149ccc <_bss_end+0xff13801c>
    5800:	61170000 	tstvs	r7, r0
    5804:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    5808:	c2074504 	andgt	r4, r7, #4, 10	; 0x1000000
    580c:	17000002 	strne	r0, [r0, -r2]
    5810:	2900000e 	stmdbcs	r0, {r1, r2, r3}
    5814:	000002c2 	andeq	r0, r0, r2, asr #5
    5818:	60180100 	andsvs	r0, r8, r0, lsl #2
    581c:	b700001f 	smladlt	r0, pc, r0, r0	; <UNPREDICTABLE>
    5820:	b8000029 	stmdalt	r0, {r0, r3, r5}
    5824:	01000009 	tsteq	r0, r9
    5828:	00000d5d 	andeq	r0, r0, sp, asr sp
    582c:	00000d68 	andeq	r0, r0, r8, ror #26
    5830:	0020630e 	eoreq	r6, r0, lr, lsl #6
    5834:	00380e00 	eorseq	r0, r8, r0, lsl #28
    5838:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    583c:	00001f61 	andeq	r1, r0, r1, ror #30
    5840:	00002121 	andeq	r2, r0, r1, lsr #2
    5844:	00002063 	andeq	r2, r0, r3, rrx
    5848:	000d7e01 	andeq	r7, sp, r1, lsl #28
    584c:	000d8900 	andeq	r8, sp, r0, lsl #18
    5850:	20630e00 	rsbcs	r0, r3, r0, lsl #28
    5854:	6e0f0000 	cdpvs	0, 0, cr0, cr15, cr0, {0}
    5858:	00000020 	andeq	r0, r0, r0, lsr #32
    585c:	001f6118 	andseq	r6, pc, r8, lsl r1	; <UNPREDICTABLE>
    5860:	002e0000 	eoreq	r0, lr, r0
    5864:	00206300 	eoreq	r6, r0, r0, lsl #6
    5868:	0d9f0100 	ldfeqs	f0, [pc]	; 5870 <CPSR_IRQ_INHIBIT+0x57f0>
    586c:	0daa0000 	stceq	0, cr0, [sl]
    5870:	630e0000 	movwvs	r0, #57344	; 0xe000
    5874:	0f000020 	svceq	0x00000020
    5878:	00002074 	andeq	r2, r0, r4, ror r0
    587c:	1f611800 	svcne	0x00611800
    5880:	1f160000 	svcne	0x00160000
    5884:	20630000 	rsbcs	r0, r3, r0
    5888:	c0010000 	andgt	r0, r1, r0
    588c:	c600000d 	strgt	r0, [r0], -sp
    5890:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
    5894:	00002063 	andeq	r2, r0, r3, rrx
    5898:	25cf1a00 	strbcs	r1, [pc, #2560]	; 62a0 <CPSR_IRQ_INHIBIT+0x6220>
    589c:	48040000 	stmdami	r4, {}	; <UNPREDICTABLE>
    58a0:	00207d12 	eoreq	r7, r0, r2, lsl sp
    58a4:	10020100 	andne	r0, r2, r0, lsl #2
    58a8:	000d2f00 	andeq	r2, sp, r0, lsl #30
    58ac:	0de30100 	stfeqe	f0, [r3]
    58b0:	0de90000 	stcleq	0, cr0, [r9]
    58b4:	630e0000 	movwvs	r0, #57344	; 0xe000
    58b8:	00000020 	andeq	r0, r0, r0, lsr #32
    58bc:	0023f61b 	eoreq	pc, r3, fp, lsl r6	; <UNPREDICTABLE>
    58c0:	144c0400 	strbne	r0, [ip], #-1024	; 0xfffffc00
    58c4:	0000222d 	andeq	r2, r0, sp, lsr #4
    58c8:	00000509 	andeq	r0, r0, r9, lsl #10
    58cc:	01100201 	tsteq	r0, r1, lsl #4
    58d0:	00000d2f 	andeq	r0, r0, pc, lsr #26
    58d4:	000e0601 	andeq	r0, lr, r1, lsl #12
    58d8:	20630e00 	rsbcs	r0, r3, r0, lsl #28
    58dc:	b70f0000 	strlt	r0, [pc, -r0]
    58e0:	0f000002 	svceq	0x00000002
    58e4:	00000107 	andeq	r0, r0, r7, lsl #2
    58e8:	2f030000 	svccs	0x00030000
    58ec:	2a00000d 	bcs	5928 <CPSR_IRQ_INHIBIT+0x58a8>
    58f0:	00001f85 	andeq	r1, r0, r5, lsl #31
    58f4:	2f145804 	svccs	0x00145804
    58f8:	0500000d 	streq	r0, [r0, #-13]
    58fc:	010b3403 	tsteq	fp, r3, lsl #8
    5900:	14b70a00 	ldrtne	r0, [r7], #2560	; 0xa00
    5904:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    5908:	0f330707 	svceq	0x00330707
    590c:	900c0000 	andls	r0, ip, r0
    5910:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    5914:	00790e0b 	rsbseq	r0, r9, fp, lsl #28
    5918:	0c000000 	stceq	0, cr0, [r0], {-0}
    591c:	00001526 	andeq	r1, r0, r6, lsr #10
    5920:	790e0d0e 	stmdbvc	lr, {r1, r2, r3, r8, sl, fp}
    5924:	04000000 	streq	r0, [r0], #-0
    5928:	0015880c 	andseq	r8, r5, ip, lsl #16
    592c:	0e0f0e00 	cdpeq	14, 0, cr0, cr15, cr0, {0}
    5930:	00000079 	andeq	r0, r0, r9, ror r0
    5934:	07650c08 	strbeq	r0, [r5, -r8, lsl #24]!
    5938:	120e0000 	andne	r0, lr, #0
    593c:	0002aa0a 	andeq	sl, r2, sl, lsl #20
    5940:	b7110c00 	ldrlt	r0, [r1, -r0, lsl #24]
    5944:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    5948:	15500515 	ldrbne	r0, [r0, #-1301]	; 0xfffffaeb
    594c:	0f380000 	svceq	0x00380000
    5950:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    5954:	9d00000e 	stcls	0, cr0, [r0, #-56]	; 0xffffffc8
    5958:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    595c:	00000f38 	andeq	r0, r0, r8, lsr pc
    5960:	0000790f 	andeq	r7, r0, pc, lsl #18
    5964:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    5968:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    596c:	00000000 	andeq	r0, r0, r0
    5970:	000a2011 	andeq	r2, sl, r1, lsl r0
    5974:	0a180e00 	beq	60917c <_bss_end+0x5f74cc>
    5978:	00001600 	andeq	r1, r0, r0, lsl #12
    597c:	000002aa 	andeq	r0, r0, sl, lsr #5
    5980:	000eb601 	andeq	fp, lr, r1, lsl #12
    5984:	000ebc00 	andeq	fp, lr, r0, lsl #24
    5988:	0f380e00 	svceq	0x00380e00
    598c:	12000000 	andne	r0, r0, #0
    5990:	000009ad 	andeq	r0, r0, sp, lsr #19
    5994:	6b0a1a0e 	blvs	28c1d4 <_bss_end+0x27a524>
    5998:	01000015 	tsteq	r0, r5, lsl r0
    599c:	00000ed1 	ldrdeq	r0, [r0], -r1
    59a0:	00000ed7 	ldrdeq	r0, [r0], -r7
    59a4:	000f380e 	andeq	r3, pc, lr, lsl #16
    59a8:	3f110000 	svccc	0x00110000
    59ac:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    59b0:	143a0a1c 	ldrtne	r0, [sl], #-2588	; 0xfffff5e4
    59b4:	02aa0000 	adceq	r0, sl, #0
    59b8:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    59bc:	f600000e 			; <UNDEFINED> instruction: 0xf600000e
    59c0:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    59c4:	00000f3e 	andeq	r0, r0, lr, lsr pc
    59c8:	169b1200 	ldrne	r1, [fp], r0, lsl #4
    59cc:	1f0e0000 	svcne	0x000e0000
    59d0:	0015300a 	andseq	r3, r5, sl
    59d4:	0f0b0100 	svceq	0x000b0100
    59d8:	0f160000 	svceq	0x00160000
    59dc:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    59e0:	0f00000f 	svceq	0x0000000f
    59e4:	000002aa 	andeq	r0, r0, sl, lsr #5
    59e8:	169b2700 	ldrne	r2, [fp], r0, lsl #14
    59ec:	210e0000 	mrscs	r0, (UNDEF: 14)
    59f0:	0015930a 	andseq	r9, r5, sl, lsl #6
    59f4:	0f270100 	svceq	0x00270100
    59f8:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    59fc:	0f00000f 	svceq	0x0000000f
    5a00:	00000044 	andeq	r0, r0, r4, asr #32
    5a04:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    5a08:	1600000e 	strne	r0, [r0], -lr
    5a0c:	000e2e04 	andeq	r2, lr, r4, lsl #28
    5a10:	33041600 	movwcc	r1, #17920	; 0x4600
    5a14:	2500000f 	strcs	r0, [r0, #-15]
    5a18:	000016eb 	andeq	r1, r0, fp, ror #13
    5a1c:	2e18240e 	cfmulscs	mvf2, mvf8, mvf14
    5a20:	0a00000e 	beq	5a60 <CPSR_IRQ_INHIBIT+0x59e0>
    5a24:	000015d5 	ldrdeq	r1, [r0], -r5
    5a28:	07070f02 	streq	r0, [r7, -r2, lsl #30]
    5a2c:	00001037 	andeq	r1, r0, r7, lsr r0
    5a30:	0007650c 	andeq	r6, r7, ip, lsl #10
    5a34:	0a0b0f00 	beq	2c963c <_bss_end+0x2b798c>
    5a38:	000002aa 	andeq	r0, r0, sl, lsr #5
    5a3c:	15cd0c00 	strbne	r0, [sp, #3072]	; 0xc00
    5a40:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 5a48 <CPSR_IRQ_INHIBIT+0x59c8>
    5a44:	0000250a 	andeq	r2, r0, sl, lsl #10
    5a48:	1c100100 	ldfnes	f0, [r0], {-0}
    5a4c:	0f000016 	svceq	0x00000016
    5a50:	104c1a10 	subne	r1, ip, r0, lsl sl
    5a54:	d5110000 	ldrle	r0, [r1, #-0]
    5a58:	0f000015 	svceq	0x00000015
    5a5c:	15b30513 	ldrne	r0, [r3, #1299]!	; 0x513
    5a60:	10510000 	subsne	r0, r1, r0
    5a64:	9c010000 	stcls	0, cr0, [r1], {-0}
    5a68:	a200000f 	andge	r0, r0, #15
    5a6c:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    5a70:	00001051 	andeq	r1, r0, r1, asr r0
    5a74:	0a201100 	beq	809e7c <_bss_end+0x7f81cc>
    5a78:	160f0000 	strne	r0, [pc], -r0
    5a7c:	0016a40a 	andseq	sl, r6, sl, lsl #8
    5a80:	0002aa00 	andeq	sl, r2, r0, lsl #20
    5a84:	0fbb0100 	svceq	0x00bb0100
    5a88:	0fc10000 	svceq	0x00c10000
    5a8c:	510e0000 	mrspl	r0, (UNDEF: 14)
    5a90:	00000010 	andeq	r0, r0, r0, lsl r0
    5a94:	0009ad12 	andeq	sl, r9, r2, lsl sp
    5a98:	0a180f00 	beq	6096a0 <_bss_end+0x5f79f0>
    5a9c:	00001508 	andeq	r1, r0, r8, lsl #10
    5aa0:	000fd601 	andeq	sp, pc, r1, lsl #12
    5aa4:	000fdc00 	andeq	sp, pc, r0, lsl #24
    5aa8:	10510e00 	subsne	r0, r1, r0, lsl #28
    5aac:	11000000 	mrsne	r0, (UNDEF: 0)
    5ab0:	0000073f 	andeq	r0, r0, pc, lsr r7
    5ab4:	e50a1a0f 	str	r1, [sl, #-2575]	; 0xfffff5f1
    5ab8:	aa000014 	bge	5b10 <CPSR_IRQ_INHIBIT+0x5a90>
    5abc:	01000002 	tsteq	r0, r2
    5ac0:	00000ff5 	strdeq	r0, [r0], -r5
    5ac4:	00000ffb 	strdeq	r0, [r0], -fp
    5ac8:	0010570e 	andseq	r5, r0, lr, lsl #14
    5acc:	e0120000 	ands	r0, r2, r0
    5ad0:	0f00001c 	svceq	0x0000001c
    5ad4:	164b0a1d 			; <UNDEFINED> instruction: 0x164b0a1d
    5ad8:	10010000 	andne	r0, r1, r0
    5adc:	1b000010 	blne	5b24 <CPSR_IRQ_INHIBIT+0x5aa4>
    5ae0:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    5ae4:	00001051 	andeq	r1, r0, r1, asr r0
    5ae8:	0000250f 	andeq	r2, r0, pc, lsl #10
    5aec:	d3130000 	tstle	r3, #0
    5af0:	0f000002 	svceq	0x00000002
    5af4:	14c70a1f 	strbne	r0, [r7], #2591	; 0xa1f
    5af8:	00250000 	eoreq	r0, r5, r0
    5afc:	30010000 	andcc	r0, r1, r0
    5b00:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    5b04:	00001057 	andeq	r1, r0, r7, asr r0
    5b08:	50030000 	andpl	r0, r3, r0
    5b0c:	1400000f 	strne	r0, [r0], #-15
    5b10:	00000050 	andeq	r0, r0, r0, asr r0
    5b14:	0000104c 	andeq	r1, r0, ip, asr #32
    5b18:	00008f15 	andeq	r8, r0, r5, lsl pc
    5b1c:	03005f00 	movweq	r5, #3840	; 0xf00
    5b20:	0000103c 	andeq	r1, r0, ip, lsr r0
    5b24:	0f500416 	svceq	0x00500416
    5b28:	04160000 	ldreq	r0, [r6], #-0
    5b2c:	00001037 	andeq	r1, r0, r7, lsr r0
    5b30:	00163a25 	andseq	r3, r6, r5, lsr #20
    5b34:	19220f00 	stmdbne	r2!, {r8, r9, sl, fp}
    5b38:	00000f50 	andeq	r0, r0, r0, asr pc
    5b3c:	002f0417 	eoreq	r0, pc, r7, lsl r4	; <UNPREDICTABLE>
    5b40:	41050400 	tstmi	r5, r0, lsl #8
    5b44:	0002c207 	andeq	ip, r2, r7, lsl #4
    5b48:	00115100 	andseq	r5, r1, r0, lsl #2
    5b4c:	02c22900 	sbceq	r2, r2, #0, 18
    5b50:	01000000 	mrseq	r0, (UNDEF: 0)
    5b54:	002f0318 	eoreq	r0, pc, r8, lsl r3	; <UNPREDICTABLE>
    5b58:	00248800 	eoreq	r8, r4, r0, lsl #16
    5b5c:	0009b800 	andeq	fp, r9, r0, lsl #16
    5b60:	10970100 	addsne	r0, r7, r0, lsl #2
    5b64:	10a20000 	adcne	r0, r2, r0
    5b68:	f10e0000 	cpsid	,#0
    5b6c:	0e00001e 	mcreq	0, 0, r0, cr0, cr14, {0}
    5b70:	00000038 	andeq	r0, r0, r8, lsr r0
    5b74:	2f041800 	svccs	0x00041800
    5b78:	28460000 	stmdacs	r6, {}^	; <UNPREDICTABLE>
    5b7c:	1ef10000 	cdpne	0, 15, cr0, cr1, cr0, {0}
    5b80:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    5b84:	c3000010 	movwgt	r0, #16
    5b88:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    5b8c:	00001ef1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5b90:	001efc0f 	andseq	pc, lr, pc, lsl #24
    5b94:	04180000 	ldreq	r0, [r8], #-0
    5b98:	3800002f 	stmdacc	r0, {r0, r1, r2, r3, r5}
    5b9c:	f100002d 			; <UNDEFINED> instruction: 0xf100002d
    5ba0:	0100001e 	tsteq	r0, lr, lsl r0
    5ba4:	000010d9 	ldrdeq	r1, [r0], -r9
    5ba8:	000010e4 	andeq	r1, r0, r4, ror #1
    5bac:	001ef10e 	andseq	pc, lr, lr, lsl #2
    5bb0:	1f020f00 	svcne	0x00020f00
    5bb4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5bb8:	00002f04 	andeq	r2, r0, r4, lsl #30
    5bbc:	00002c49 	andeq	r2, r0, r9, asr #24
    5bc0:	00001ef1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5bc4:	0010fa01 	andseq	pc, r0, r1, lsl #20
    5bc8:	00110000 	andseq	r0, r1, r0
    5bcc:	1ef10e00 	cdpne	14, 15, cr0, cr1, cr0, {0}
    5bd0:	1a000000 	bne	5bd8 <CPSR_IRQ_INHIBIT+0x5b58>
    5bd4:	000025cf 	andeq	r2, r0, pc, asr #11
    5bd8:	b9124405 	ldmdblt	r2, {r0, r2, sl, lr}
    5bdc:	0100002a 	tsteq	r0, sl, lsr #32
    5be0:	69001002 	stmdbvs	r0, {r1, ip}
    5be4:	01000010 	tsteq	r0, r0, lsl r0
    5be8:	0000111d 	andeq	r1, r0, sp, lsl r1
    5bec:	00001123 	andeq	r1, r0, r3, lsr #2
    5bf0:	001ef10e 	andseq	pc, lr, lr, lsl #2
    5bf4:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    5bf8:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    5bfc:	2a551449 	bcs	154ad28 <_bss_end+0x1539078>
    5c00:	05090000 	streq	r0, [r9, #-0]
    5c04:	02010000 	andeq	r0, r1, #0
    5c08:	10690110 	rsbne	r0, r9, r0, lsl r1
    5c0c:	40010000 	andmi	r0, r1, r0
    5c10:	0e000011 	mcreq	0, 0, r0, cr0, cr1, {0}
    5c14:	00001ef1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5c18:	0002b70f 	andeq	fp, r2, pc, lsl #14
    5c1c:	01070f00 	tsteq	r7, r0, lsl #30
    5c20:	00000000 	andeq	r0, r0, r0
    5c24:	00106903 	andseq	r6, r0, r3, lsl #18
    5c28:	232c2a00 			; <UNDEFINED> instruction: 0x232c2a00
    5c2c:	56050000 	strpl	r0, [r5], -r0
    5c30:	0010691c 	andseq	r6, r0, ip, lsl r9
    5c34:	38030500 	stmdacc	r3, {r8, sl}
    5c38:	1700010b 	strne	r0, [r0, -fp, lsl #2]
    5c3c:	00002968 	andeq	r2, r0, r8, ror #18
    5c40:	073d0604 	ldreq	r0, [sp, -r4, lsl #12]!
    5c44:	000002c2 	andeq	r0, r0, r2, asr #5
    5c48:	00001250 	andeq	r1, r0, r0, asr r2
    5c4c:	0002c229 	andeq	ip, r2, r9, lsr #4
    5c50:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    5c54:	00002967 	andeq	r2, r0, r7, ror #18
    5c58:	00002348 	andeq	r2, r0, r8, asr #6
    5c5c:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    5c60:	00119601 	andseq	r9, r1, r1, lsl #12
    5c64:	0011a100 	andseq	sl, r1, r0, lsl #2
    5c68:	1d7f0e00 	ldclne	14, cr0, [pc, #-0]	; 5c70 <CPSR_IRQ_INHIBIT+0x5bf0>
    5c6c:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    5c70:	00000000 	andeq	r0, r0, r0
    5c74:	00296818 	eoreq	r6, r9, r8, lsl r8
    5c78:	0029f400 	eoreq	pc, r9, r0, lsl #8
    5c7c:	001d7f00 	andseq	r7, sp, r0, lsl #30
    5c80:	11b70100 			; <UNDEFINED> instruction: 0x11b70100
    5c84:	11c20000 	bicne	r0, r2, r0
    5c88:	7f0e0000 	svcvc	0x000e0000
    5c8c:	0f00001d 	svceq	0x0000001d
    5c90:	00001d8a 	andeq	r1, r0, sl, lsl #27
    5c94:	29681800 	stmdbcs	r8!, {fp, ip}^
    5c98:	261d0000 	ldrcs	r0, [sp], -r0
    5c9c:	1d7f0000 	ldclne	0, cr0, [pc, #-0]	; 5ca4 <CPSR_IRQ_INHIBIT+0x5c24>
    5ca0:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    5ca4:	e3000011 	movw	r0, #17
    5ca8:	0e000011 	mcreq	0, 0, r0, cr0, cr1, {0}
    5cac:	00001d7f 	andeq	r1, r0, pc, ror sp
    5cb0:	001d900f 	andseq	r9, sp, pc
    5cb4:	68180000 	ldmdavs	r8, {}	; <UNPREDICTABLE>
    5cb8:	84000029 	strhi	r0, [r0], #-41	; 0xffffffd7
    5cbc:	7f00002b 	svcvc	0x0000002b
    5cc0:	0100001d 	tsteq	r0, sp, lsl r0
    5cc4:	000011f9 	strdeq	r1, [r0], -r9
    5cc8:	000011ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    5ccc:	001d7f0e 	andseq	r7, sp, lr, lsl #30
    5cd0:	cf1a0000 	svcgt	0x001a0000
    5cd4:	06000025 	streq	r0, [r0], -r5, lsr #32
    5cd8:	1f321240 	svcne	0x00321240
    5cdc:	02010000 	andeq	r0, r1, #0
    5ce0:	11680010 	cmnne	r8, r0, lsl r0
    5ce4:	1c010000 	stcne	0, cr0, [r1], {-0}
    5ce8:	22000012 	andcs	r0, r0, #18
    5cec:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    5cf0:	00001d7f 	andeq	r1, r0, pc, ror sp
    5cf4:	23f61b00 	mvnscs	r1, #0, 22
    5cf8:	45060000 	strmi	r0, [r6, #-0]
    5cfc:	0028a014 	eoreq	sl, r8, r4, lsl r0
    5d00:	00050900 	andeq	r0, r5, r0, lsl #18
    5d04:	10020100 	andne	r0, r2, r0, lsl #2
    5d08:	00116801 	andseq	r6, r1, r1, lsl #16
    5d0c:	123f0100 	eorsne	r0, pc, #0, 2
    5d10:	7f0e0000 	svcvc	0x000e0000
    5d14:	0f00001d 	svceq	0x0000001d
    5d18:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    5d1c:	0001070f 	andeq	r0, r1, pc, lsl #14
    5d20:	03000000 	movweq	r0, #0
    5d24:	00001168 	andeq	r1, r0, r8, ror #2
    5d28:	00253b2a 	eoreq	r3, r5, sl, lsr #22
    5d2c:	1b520600 	blne	1487534 <_bss_end+0x1475884>
    5d30:	00001168 	andeq	r1, r0, r8, ror #2
    5d34:	0b3c0305 	bleq	f06950 <_bss_end+0xef4ca0>
    5d38:	430a0001 	movwmi	r0, #40961	; 0xa001
    5d3c:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    5d40:	2c070610 	stccs	6, cr0, [r7], {16}
    5d44:	0c000013 	stceq	0, cr0, [r0], {19}
    5d48:	00001a28 	andeq	r1, r0, r8, lsr #20
    5d4c:	9f220a10 	svcls	0x00220a10
    5d50:	00000008 	andeq	r0, r0, r8
    5d54:	0007650c 	andeq	r6, r7, ip, lsl #10
    5d58:	0e0e1000 	cdpeq	0, 0, cr1, cr14, cr0, {0}
    5d5c:	00000079 	andeq	r0, r0, r9, ror r0
    5d60:	1b431104 	blne	10ca178 <_bss_end+0x10b84c8>
    5d64:	11100000 	tstne	r0, r0
    5d68:	001b1505 	andseq	r1, fp, r5, lsl #10
    5d6c:	00133100 	andseq	r3, r3, r0, lsl #2
    5d70:	12a70100 	adcne	r0, r7, #0, 2
    5d74:	12b20000 	adcsne	r0, r2, #0
    5d78:	310e0000 	mrscc	r0, (UNDEF: 14)
    5d7c:	0f000013 	svceq	0x00000013
    5d80:	00000079 	andeq	r0, r0, r9, ror r0
    5d84:	0a201100 	beq	80a18c <_bss_end+0x7f84dc>
    5d88:	14100000 	ldrne	r0, [r0], #-0
    5d8c:	001acd0a 	andseq	ip, sl, sl, lsl #26
    5d90:	0002aa00 	andeq	sl, r2, r0, lsl #20
    5d94:	12cb0100 	sbcne	r0, fp, #0, 2
    5d98:	12d60000 	sbcsne	r0, r6, #0
    5d9c:	310e0000 	mrscc	r0, (UNDEF: 14)
    5da0:	0f000013 	svceq	0x00000013
    5da4:	000002aa 	andeq	r0, r0, sl, lsr #5
    5da8:	09ad1200 	stmibeq	sp!, {r9, ip}
    5dac:	16100000 	ldrne	r0, [r0], -r0
    5db0:	001b230a 	andseq	r2, fp, sl, lsl #6
    5db4:	12eb0100 	rscne	r0, fp, #0, 2
    5db8:	12f10000 	rscsne	r0, r1, #0
    5dbc:	310e0000 	mrscc	r0, (UNDEF: 14)
    5dc0:	00000013 	andeq	r0, r0, r3, lsl r0
    5dc4:	00073f11 	andeq	r3, r7, r1, lsl pc
    5dc8:	0a181000 	beq	609dd0 <_bss_end+0x5f8120>
    5dcc:	00001ade 	ldrdeq	r1, [r0], -lr
    5dd0:	000002aa 	andeq	r0, r0, sl, lsr #5
    5dd4:	00130a01 	andseq	r0, r3, r1, lsl #20
    5dd8:	00131000 	andseq	r1, r3, r0
    5ddc:	13370e00 	teqne	r7, #0, 28
    5de0:	13000000 	movwne	r0, #0
    5de4:	00001b03 	andeq	r1, r0, r3, lsl #22
    5de8:	3d0e1b10 	vstrcc	d1, [lr, #-64]	; 0xffffffc0
    5dec:	7900001a 	stmdbvc	r0, {r1, r3, r4}
    5df0:	01000000 	mrseq	r0, (UNDEF: 0)
    5df4:	00001325 	andeq	r1, r0, r5, lsr #6
    5df8:	0013310e 	andseq	r3, r3, lr, lsl #2
    5dfc:	03000000 	movweq	r0, #0
    5e00:	00001267 	andeq	r1, r0, r7, ror #4
    5e04:	12670416 	rsbne	r0, r7, #369098752	; 0x16000000
    5e08:	04160000 	ldreq	r0, [r6], #-0
    5e0c:	0000132c 	andeq	r1, r0, ip, lsr #6
    5e10:	001b5825 	andseq	r5, fp, r5, lsr #16
    5e14:	0e1e1000 	cdpeq	0, 1, cr1, cr14, cr0, {0}
    5e18:	00001267 	andeq	r1, r0, r7, ror #4
    5e1c:	0027a317 	eoreq	sl, r7, r7, lsl r3
    5e20:	44070400 	strmi	r0, [r7], #-1024	; 0xfffffc00
    5e24:	0002c207 	andeq	ip, r2, r7, lsl #4
    5e28:	00143100 	andseq	r3, r4, r0, lsl #2
    5e2c:	02c22900 	sbceq	r2, r2, #0, 18
    5e30:	01000000 	mrseq	r0, (UNDEF: 0)
    5e34:	0027a218 	eoreq	sl, r7, r8, lsl r2
    5e38:	00298200 	eoreq	r8, r9, r0, lsl #4
    5e3c:	0009b800 	andeq	fp, r9, r0, lsl #16
    5e40:	13770100 	cmnne	r7, #0, 2
    5e44:	13820000 	orrne	r0, r2, #0
    5e48:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    5e4c:	0e00001c 	mcreq	0, 0, r0, cr0, cr12, {0}
    5e50:	00000038 	andeq	r0, r0, r8, lsr r0
    5e54:	27a31800 	strcs	r1, [r3, r0, lsl #16]!
    5e58:	2bf20000 	blcs	ffc85e60 <_bss_end+0xffc741b0>
    5e5c:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    5e60:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    5e64:	a3000013 	movwge	r0, #19
    5e68:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    5e6c:	00001c0d 	andeq	r1, r0, sp, lsl #24
    5e70:	001c180f 	andseq	r1, ip, pc, lsl #16
    5e74:	a3180000 	tstge	r8, #0
    5e78:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    5e7c:	0d000021 	stceq	0, cr0, [r0, #-132]	; 0xffffff7c
    5e80:	0100001c 	tsteq	r0, ip, lsl r0
    5e84:	000013b9 			; <UNDEFINED> instruction: 0x000013b9
    5e88:	000013c4 	andeq	r1, r0, r4, asr #7
    5e8c:	001c0d0e 	andseq	r0, ip, lr, lsl #26
    5e90:	1c1e0f00 	ldcne	15, cr0, [lr], {-0}
    5e94:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5e98:	000027a3 	andeq	r2, r0, r3, lsr #15
    5e9c:	00001ec1 	andeq	r1, r0, r1, asr #29
    5ea0:	00001c0d 	andeq	r1, r0, sp, lsl #24
    5ea4:	0013da01 	andseq	sp, r3, r1, lsl #20
    5ea8:	0013e000 	andseq	lr, r3, r0
    5eac:	1c0d0e00 	stcne	14, cr0, [sp], {-0}
    5eb0:	1a000000 	bne	5eb8 <CPSR_IRQ_INHIBIT+0x5e38>
    5eb4:	000025cf 	andeq	r2, r0, pc, asr #11
    5eb8:	f5124707 			; <UNDEFINED> instruction: 0xf5124707
    5ebc:	01000021 	tsteq	r0, r1, lsr #32
    5ec0:	49001002 	stmdbmi	r0, {r1, ip}
    5ec4:	01000013 	tsteq	r0, r3, lsl r0
    5ec8:	000013fd 	strdeq	r1, [r0], -sp
    5ecc:	00001403 	andeq	r1, r0, r3, lsl #8
    5ed0:	001c0d0e 	andseq	r0, ip, lr, lsl #26
    5ed4:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    5ed8:	07000023 	streq	r0, [r0, -r3, lsr #32]
    5edc:	240e144c 	strcs	r1, [lr], #-1100	; 0xfffffbb4
    5ee0:	05090000 	streq	r0, [r9, #-0]
    5ee4:	02010000 	andeq	r0, r1, #0
    5ee8:	13490110 	movtne	r0, #37136	; 0x9110
    5eec:	20010000 	andcs	r0, r1, r0
    5ef0:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    5ef4:	00001c0d 	andeq	r1, r0, sp, lsl #24
    5ef8:	0002b70f 	andeq	fp, r2, pc, lsl #14
    5efc:	01070f00 	tsteq	r7, r0, lsl #30
    5f00:	00000000 	andeq	r0, r0, r0
    5f04:	00134903 	andseq	r4, r3, r3, lsl #18
    5f08:	2ef22a00 	vmovcs.f32	s5, #32	; 0x41000000  8.0
    5f0c:	59070000 	stmdbpl	r7, {}	; <UNPREDICTABLE>
    5f10:	00134911 	andseq	r4, r3, r1, lsl r9
    5f14:	40030500 	andmi	r0, r3, r0, lsl #10
    5f18:	0900010b 	stmdbeq	r0, {r0, r1, r3, r8}
    5f1c:	0000098a 	andeq	r0, r0, sl, lsl #19
    5f20:	85140611 	ldrhi	r0, [r4, #-1553]	; 0xfffff9ef
    5f24:	05000000 	streq	r0, [r0, #-0]
    5f28:	0102a003 	tsteq	r2, r3
    5f2c:	07540a00 	ldrbeq	r0, [r4, -r0, lsl #20]
    5f30:	11140000 	tstne	r4, r0
    5f34:	14d8070b 	ldrbne	r0, [r8], #1803	; 0x70b
    5f38:	d70c0000 	strle	r0, [ip, -r0]
    5f3c:	11000007 	tstne	r0, r7
    5f40:	02aa0a10 	adceq	r0, sl, #16, 20	; 0x10000
    5f44:	0c000000 	stceq	0, cr0, [r0], {-0}
    5f48:	00000860 	andeq	r0, r0, r0, ror #16
    5f4c:	d80d1211 	stmdale	sp, {r0, r4, r9, ip}
    5f50:	01000014 	tsteq	r0, r4, lsl r0
    5f54:	0009420c 	andeq	r4, r9, ip, lsl #4
    5f58:	0e141100 	mufeqs	f1, f4, f0
    5f5c:	00000079 	andeq	r0, r0, r9, ror r0
    5f60:	08f20c0c 	ldmeq	r2!, {r2, r3, sl, fp}^
    5f64:	16110000 	ldrne	r0, [r1], -r0
    5f68:	0000610e 	andeq	r6, r0, lr, lsl #2
    5f6c:	54321000 	ldrtpl	r1, [r2], #-0
    5f70:	11000007 	tstne	r0, r7
    5f74:	07e90519 			; <UNDEFINED> instruction: 0x07e90519
    5f78:	14e80000 	strbtne	r0, [r8], #0
    5f7c:	01010000 	mrseq	r0, (UNDEF: 1)
    5f80:	000014b5 			; <UNDEFINED> instruction: 0x000014b5
    5f84:	000014bb 			; <UNDEFINED> instruction: 0x000014bb
    5f88:	0014e80e 	andseq	lr, r4, lr, lsl #16
    5f8c:	56270000 	strtpl	r0, [r7], -r0
    5f90:	11000009 	tstne	r0, r9
    5f94:	08720a1b 	ldmdaeq	r2!, {r0, r1, r3, r4, r9, fp}^
    5f98:	cc010000 	stcgt	0, cr0, [r1], {-0}
    5f9c:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    5fa0:	000014e8 	andeq	r1, r0, r8, ror #9
    5fa4:	0000610f 	andeq	r6, r0, pc, lsl #2
    5fa8:	14000000 	strne	r0, [r0], #-0
    5fac:	00000044 	andeq	r0, r0, r4, asr #32
    5fb0:	000014e8 	andeq	r1, r0, r8, ror #9
    5fb4:	00008f15 	andeq	r8, r0, r5, lsl pc
    5fb8:	16000700 	strne	r0, [r0], -r0, lsl #14
    5fbc:	00145a04 	andseq	r5, r4, r4, lsl #20
    5fc0:	0f720a00 	svceq	0x00720a00
    5fc4:	11240000 			; <UNDEFINED> instruction: 0x11240000
    5fc8:	169c072d 	ldrne	r0, [ip], sp, lsr #14
    5fcc:	a30c0000 	movwge	r0, #49152	; 0xc000
    5fd0:	11000009 	tstne	r0, r9
    5fd4:	16a71e31 			; <UNDEFINED> instruction: 0x16a71e31
    5fd8:	0c000000 	stceq	0, cr0, [r0], {-0}
    5fdc:	00000765 	andeq	r0, r0, r5, ror #14
    5fe0:	aa0a3311 	bge	292c2c <_bss_end+0x280f7c>
    5fe4:	04000002 	streq	r0, [r0], #-2
    5fe8:	0009b30c 	andeq	fp, r9, ip, lsl #6
    5fec:	0e361100 	rsfeqs	f1, f6, f0
    5ff0:	00000079 	andeq	r0, r0, r9, ror r0
    5ff4:	08e90c08 	stmiaeq	r9!, {r3, sl, fp}^
    5ff8:	38110000 	ldmdacc	r1, {}	; <UNPREDICTABLE>
    5ffc:	0000790e 	andeq	r7, r0, lr, lsl #18
    6000:	130c0c00 	movwne	r0, #52224	; 0xcc00
    6004:	1100000a 	tstne	r0, sl
    6008:	145a163b 	ldrbne	r1, [sl], #-1595	; 0xfffff9c5
    600c:	33100000 	tstcc	r0, #0
    6010:	00676552 	rsbeq	r6, r7, r2, asr r5
    6014:	7c183e11 	ldcvc	14, cr3, [r8], {17}
    6018:	ac000007 	stcge	0, cr0, [r0], {7}
    601c:	02000016 	andeq	r0, r0, #22
    6020:	00001555 	andeq	r1, r0, r5, asr r5
    6024:	00001560 	andeq	r1, r0, r0, ror #10
    6028:	0016b20e 	andseq	fp, r6, lr, lsl #4
    602c:	05cd0f00 	strbeq	r0, [sp, #3840]	; 0xf00
    6030:	12000000 	andne	r0, r0, #0
    6034:	00000962 	andeq	r0, r0, r2, ror #18
    6038:	a90a4111 	stmdbge	sl, {r0, r4, r8, lr}
    603c:	02000007 	andeq	r0, r0, #7
    6040:	00001575 	andeq	r1, r0, r5, ror r5
    6044:	0000157b 	andeq	r1, r0, fp, ror r5
    6048:	0016b20e 	andseq	fp, r6, lr, lsl #4
    604c:	72110000 	andsvc	r0, r1, #0
    6050:	1100000f 	tstne	r0, pc
    6054:	07c00544 	strbeq	r0, [r0, r4, asr #10]
    6058:	16b20000 	ldrtne	r0, [r2], r0
    605c:	94010000 	strls	r0, [r1], #-0
    6060:	a9000015 	stmdbge	r0, {r0, r2, r4}
    6064:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    6068:	000016b2 			; <UNDEFINED> instruction: 0x000016b2
    606c:	0006120f 	andeq	r1, r6, pc, lsl #4
    6070:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    6074:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6078:	00000000 	andeq	r0, r0, r0
    607c:	000a2011 	andeq	r2, sl, r1, lsl r0
    6080:	0a471100 	beq	11ca488 <_bss_end+0x11b87d8>
    6084:	00000a3b 	andeq	r0, r0, fp, lsr sl
    6088:	000002aa 	andeq	r0, r0, sl, lsr #5
    608c:	0015c201 	andseq	ip, r5, r1, lsl #4
    6090:	0015c800 	andseq	ip, r5, r0, lsl #16
    6094:	16b20e00 	ldrtne	r0, [r2], r0, lsl #28
    6098:	12000000 	andne	r0, r0, #0
    609c:	000009ad 	andeq	r0, r0, sp, lsr #19
    60a0:	9f0a4911 	svcls	0x000a4911
    60a4:	01000008 	tsteq	r0, r8
    60a8:	000015dd 	ldrdeq	r1, [r0], -sp
    60ac:	000015e3 	andeq	r1, r0, r3, ror #11
    60b0:	0016b20e 	andseq	fp, r6, lr, lsl #4
    60b4:	3f110000 	svccc	0x00110000
    60b8:	11000007 	tstne	r0, r7
    60bc:	08fb0a4b 	ldmeq	fp!, {r0, r1, r3, r6, r9, fp}^
    60c0:	02aa0000 	adceq	r0, sl, #0
    60c4:	fc010000 	stc2	0, cr0, [r1], {-0}
    60c8:	02000015 	andeq	r0, r0, #21
    60cc:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    60d0:	000016b8 			; <UNDEFINED> instruction: 0x000016b8
    60d4:	09231200 	stmdbeq	r3!, {r9, ip}
    60d8:	4e110000 	cdpmi	0, 1, cr0, cr1, cr0, {0}
    60dc:	0008b00a 	andeq	fp, r8, sl
    60e0:	16170100 	ldrne	r0, [r7], -r0, lsl #2
    60e4:	162c0000 	strtne	r0, [ip], -r0
    60e8:	b20e0000 	andlt	r0, lr, #0
    60ec:	0f000016 	svceq	0x00000016
    60f0:	00000061 	andeq	r0, r0, r1, rrx
    60f4:	0002b70f 	andeq	fp, r2, pc, lsl #14
    60f8:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    60fc:	12000000 	andne	r0, r0, #0
    6100:	000007cf 	andeq	r0, r0, pc, asr #15
    6104:	250a5011 	strcs	r5, [sl, #-17]	; 0xffffffef
    6108:	0100000a 	tsteq	r0, sl
    610c:	00001641 	andeq	r1, r0, r1, asr #12
    6110:	00001656 	andeq	r1, r0, r6, asr r6
    6114:	0016b20e 	andseq	fp, r6, lr, lsl #4
    6118:	00610f00 	rsbeq	r0, r1, r0, lsl #30
    611c:	120f0000 	andne	r0, pc, #0
    6120:	0f00000d 	svceq	0x0000000d
    6124:	00000079 	andeq	r0, r0, r9, ror r0
    6128:	09111100 	ldmdbeq	r1, {r8, ip}
    612c:	53110000 	tstpl	r1, #0
    6130:	0008c417 	andeq	ip, r8, r7, lsl r4
    6134:	0016be00 	andseq	fp, r6, r0, lsl #28
    6138:	166f0100 	strbtne	r0, [pc], -r0, lsl #2
    613c:	167a0000 	ldrbtne	r0, [sl], -r0
    6140:	b20e0000 	andlt	r0, lr, #0
    6144:	0f000016 	svceq	0x00000016
    6148:	00000061 	andeq	r0, r0, r1, rrx
    614c:	083c2700 	ldmdaeq	ip!, {r8, r9, sl, sp}
    6150:	55110000 	ldrpl	r0, [r1, #-0]
    6154:	00080d0a 	andeq	r0, r8, sl, lsl #26
    6158:	168b0100 	strne	r0, [fp], r0, lsl #2
    615c:	b20e0000 	andlt	r0, lr, #0
    6160:	0f000016 	svceq	0x00000016
    6164:	000016be 			; <UNDEFINED> instruction: 0x000016be
    6168:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    616c:	03000000 	movweq	r0, #0
    6170:	000014ee 	andeq	r1, r0, lr, ror #9
    6174:	008a0416 	addeq	r0, sl, r6, lsl r4
    6178:	a1030000 	mrsge	r0, (UNDEF: 3)
    617c:	24000016 	strcs	r0, [r0], #-22	; 0xffffffea
    6180:	00008a04 	andeq	r8, r0, r4, lsl #20
    6184:	ee041600 	cfmadd32	mvax0, mvfx1, mvfx4, mvfx0
    6188:	16000014 			; <UNDEFINED> instruction: 0x16000014
    618c:	00169c04 	andseq	r9, r6, r4, lsl #24
    6190:	5a042400 	bpl	10f198 <_bss_end+0xfd4e8>
    6194:	09000014 	stmdbeq	r0, {r2, r4}
    6198:	00001280 	andeq	r1, r0, r0, lsl #5
    619c:	6d140612 	ldcvs	6, cr0, [r4, #-72]	; 0xffffffb8
    61a0:	05000000 	streq	r0, [r0, #-0]
    61a4:	0102a403 	tsteq	r2, r3, lsl #8
    61a8:	0def0700 	stcleq	7, cr0, [pc]	; 61b0 <CPSR_IRQ_INHIBIT+0x6130>
    61ac:	04050000 	streq	r0, [r5], #-0
    61b0:	00000038 	andeq	r0, r0, r8, lsr r0
    61b4:	b50c0912 	strlt	r0, [ip, #-2322]	; 0xfffff6ee
    61b8:	08000017 	stmdaeq	r0, {r0, r1, r2, r4}
    61bc:	00000f4a 	andeq	r0, r0, sl, asr #30
    61c0:	0cd50800 	ldcleq	8, cr0, [r5], {0}
    61c4:	08c00000 	stmiaeq	r0, {}^	; <UNPREDICTABLE>
    61c8:	000012f8 	strdeq	r1, [r0], -r8
    61cc:	13aa0840 			; <UNDEFINED> instruction: 0x13aa0840
    61d0:	08810000 	stmeq	r1, {}	; <UNPREDICTABLE>
    61d4:	00001160 	andeq	r1, r0, r0, ror #2
    61d8:	102b08a4 	eorne	r0, fp, r4, lsr #17
    61dc:	08a50000 	stmiaeq	r5!, {}	; <UNPREDICTABLE>
    61e0:	000011c5 	andeq	r1, r0, r5, asr #3
    61e4:	126f08a6 	rsbne	r0, pc, #10878976	; 0xa60000
    61e8:	08a70000 	stmiaeq	r7!, {}	; <UNPREDICTABLE>
    61ec:	00001317 	andeq	r1, r0, r7, lsl r3
    61f0:	0faa08ae 	svceq	0x00aa08ae
    61f4:	2caf0000 	stccs	0, cr0, [pc]	; 61fc <CPSR_IRQ_INHIBIT+0x617c>
    61f8:	00706f4e 	rsbseq	r6, r0, lr, asr #30
    61fc:	11f308e3 	mvnsne	r0, r3, ror #17
    6200:	08260000 	stmdaeq	r6!, {}	; <UNPREDICTABLE>
    6204:	00001393 	muleq	r0, r3, r3
    6208:	0e2c0827 	cdpeq	8, 2, cr0, cr12, cr7, {1}
    620c:	08290000 	stmdaeq	r9!, {}	; <UNPREDICTABLE>
    6210:	000013e8 	andeq	r1, r0, r8, ror #7
    6214:	0eb1082a 	cdpeq	8, 11, cr0, cr1, cr10, {1}
    6218:	082e0000 	stmdaeq	lr!, {}	; <UNPREDICTABLE>
    621c:	000013d8 	ldrdeq	r1, [r0], -r8
    6220:	1076082f 	rsbsne	r0, r6, pc, lsr #16
    6224:	08a30000 	stmiaeq	r3!, {}	; <UNPREDICTABLE>
    6228:	00000d93 	muleq	r0, r3, sp
    622c:	10ac0800 	adcne	r0, ip, r0, lsl #16
    6230:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
    6234:	00000e54 	andeq	r0, r0, r4, asr lr
    6238:	0fb50820 	svceq	0x00b50820
    623c:	08210000 	stmdaeq	r1!, {}	; <UNPREDICTABLE>
    6240:	0000108a 	andeq	r1, r0, sl, lsl #1
    6244:	11390822 	teqne	r9, r2, lsr #16
    6248:	08400000 	stmdaeq	r0, {}^	; <UNPREDICTABLE>
    624c:	000012dd 	ldrdeq	r1, [r0], -sp
    6250:	111a08a0 	tstne	sl, r0, lsr #17
    6254:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    6258:	0000129d 	muleq	r0, sp, r2
    625c:	10f808c0 	rscsne	r0, r8, r0, asr #17
    6260:	08c80000 	stmiaeq	r8, {}^	; <UNPREDICTABLE>
    6264:	0000122b 	andeq	r1, r0, fp, lsr #4
    6268:	0ea408d3 	mcreq	8, 5, r0, cr4, cr3, {6}
    626c:	08da0000 	ldmeq	sl, {}^	; <UNPREDICTABLE>
    6270:	000011b9 			; <UNDEFINED> instruction: 0x000011b9
    6274:	0ee1088d 	cdpeq	8, 14, cr0, cr1, cr13, {4}
    6278:	08d50000 	ldmeq	r5, {}^	; <UNPREDICTABLE>
    627c:	00000efd 	strdeq	r0, [r0], -sp
    6280:	0f1208d9 	svceq	0x001208d9
    6284:	00d80000 	sbcseq	r0, r8, r0
    6288:	00101a0a 	andseq	r1, r0, sl, lsl #20
    628c:	36121400 	ldrcc	r1, [r2], -r0, lsl #8
    6290:	00193607 	andseq	r3, r9, r7, lsl #12
    6294:	103a0c00 	eorsne	r0, sl, r0, lsl #24
    6298:	3a120000 	bcc	4862a0 <_bss_end+0x4745f0>
    629c:	00193b0b 	andseq	r3, r9, fp, lsl #22
    62a0:	650c0000 	strvs	r0, [ip, #-0]
    62a4:	12000007 	andne	r0, r0, #7
    62a8:	02aa0a3c 	adceq	r0, sl, #60, 20	; 0x3c000
    62ac:	0c040000 	stceq	0, cr0, [r4], {-0}
    62b0:	00000860 	andeq	r0, r0, r0, ror #16
    62b4:	410e3e12 	tstmi	lr, r2, lsl lr
    62b8:	08000019 	stmdaeq	r0, {r0, r3, r4}
    62bc:	000e4d0c 	andeq	r4, lr, ip, lsl #26
    62c0:	09401200 	stmdbeq	r0, {r9, ip}^
    62c4:	00000038 	andeq	r0, r0, r8, lsr r0
    62c8:	0ccd0c0c 	stcleq	12, cr0, [sp], {12}
    62cc:	40120000 	andsmi	r0, r2, r0
    62d0:	00003811 	andeq	r3, r0, r1, lsl r8
    62d4:	3e121000 	cdpcc	0, 1, cr1, cr2, cr0, {0}
    62d8:	12000012 	andne	r0, r0, #18
    62dc:	13480a44 	movtne	r0, #35396	; 0x8a44
    62e0:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    62e4:	28000018 	stmdacs	r0, {r3, r4}
    62e8:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    62ec:	00001947 	andeq	r1, r0, r7, asr #18
    62f0:	0016d60f 	andseq	sp, r6, pc, lsl #12
    62f4:	00440f00 	subeq	r0, r4, r0, lsl #30
    62f8:	11000000 	mrsne	r0, (UNDEF: 0)
    62fc:	0000101a 	andeq	r1, r0, sl, lsl r0
    6300:	d4054712 	strle	r4, [r5], #-1810	; 0xfffff8ee
    6304:	47000011 	smladmi	r0, r1, r0, r0
    6308:	01000019 	tsteq	r0, r9, lsl r0
    630c:	00001841 	andeq	r1, r0, r1, asr #16
    6310:	0000184c 	andeq	r1, r0, ip, asr #16
    6314:	0019470e 	andseq	r4, r9, lr, lsl #14
    6318:	193b0f00 	ldmdbne	fp!, {r8, r9, sl, fp}
    631c:	11000000 	mrsne	r0, (UNDEF: 0)
    6320:	00000a20 	andeq	r0, r0, r0, lsr #20
    6324:	220a4a12 	andcs	r4, sl, #73728	; 0x12000
    6328:	aa00000f 	bge	636c <CPSR_IRQ_INHIBIT+0x62ec>
    632c:	01000002 	tsteq	r0, r2
    6330:	00001865 	andeq	r1, r0, r5, ror #16
    6334:	00001875 	andeq	r1, r0, r5, ror r8
    6338:	0019470e 	andseq	r4, r9, lr, lsl #14
    633c:	00380f00 	eorseq	r0, r8, r0, lsl #30
    6340:	380f0000 	stmdacc	pc, {}	; <UNPREDICTABLE>
    6344:	00000000 	andeq	r0, r0, r0
    6348:	0009ad12 	andeq	sl, r9, r2, lsl sp
    634c:	0a4c1200 	beq	130ab54 <_bss_end+0x12f8ea4>
    6350:	0000141c 	andeq	r1, r0, ip, lsl r4
    6354:	00188a01 	andseq	r8, r8, r1, lsl #20
    6358:	00189000 	andseq	r9, r8, r0
    635c:	19470e00 	stmdbne	r7, {r9, sl, fp}^
    6360:	11000000 	mrsne	r0, (UNDEF: 0)
    6364:	0000073f 	andeq	r0, r0, pc, lsr r7
    6368:	6b0a4e12 	blvs	299bb8 <_bss_end+0x287f08>
    636c:	aa00000e 	bge	63ac <CPSR_IRQ_INHIBIT+0x632c>
    6370:	01000002 	tsteq	r0, r2
    6374:	000018a9 	andeq	r1, r0, r9, lsr #17
    6378:	000018af 	andeq	r1, r0, pc, lsr #17
    637c:	00194d0e 	andseq	r4, r9, lr, lsl #26
    6380:	a2120000 	andsge	r0, r2, #0
    6384:	12000018 	andne	r0, r0, #24
    6388:	10580a51 	subsne	r0, r8, r1, asr sl
    638c:	c4010000 	strgt	r0, [r1], #-0
    6390:	cf000018 	svcgt	0x00000018
    6394:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    6398:	00001947 	andeq	r1, r0, r7, asr #18
    639c:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    63a0:	c5120000 	ldrgt	r0, [r2, #-0]
    63a4:	1200000f 	andne	r0, r0, #15
    63a8:	124b0a53 	subne	r0, fp, #339968	; 0x53000
    63ac:	e4010000 	str	r0, [r1], #-0
    63b0:	f9000018 			; <UNDEFINED> instruction: 0xf9000018
    63b4:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    63b8:	00001947 	andeq	r1, r0, r7, asr #18
    63bc:	0000790f 	andeq	r7, r0, pc, lsl #18
    63c0:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    63c4:	aa0f0000 	bge	3c63cc <_bss_end+0x3b471c>
    63c8:	00000002 	andeq	r0, r0, r2
    63cc:	000f4012 	andeq	r4, pc, r2, lsl r0	; <UNPREDICTABLE>
    63d0:	0a551200 	beq	154abd8 <_bss_end+0x1538f28>
    63d4:	00000ce0 	andeq	r0, r0, r0, ror #25
    63d8:	00190e01 	andseq	r0, r9, r1, lsl #28
    63dc:	00191400 	andseq	r1, r9, r0, lsl #8
    63e0:	19470e00 	stmdbne	r7, {r9, sl, fp}^
    63e4:	27000000 	strcs	r0, [r0, -r0]
    63e8:	000010bd 	strheq	r1, [r0], -sp
    63ec:	a40a5812 	strge	r5, [sl], #-2066	; 0xfffff7ee
    63f0:	0100000d 	tsteq	r0, sp
    63f4:	00001925 	andeq	r1, r0, r5, lsr #18
    63f8:	0019470e 	andseq	r4, r9, lr, lsl #14
    63fc:	02b70f00 	adcseq	r0, r7, #0, 30
    6400:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6404:	00000000 	andeq	r0, r0, r0
    6408:	17b50300 	ldrne	r0, [r5, r0, lsl #6]!
    640c:	04240000 	strteq	r0, [r4], #-0
    6410:	000014ee 	andeq	r1, r0, lr, ror #9
    6414:	00440416 	subeq	r0, r4, r6, lsl r4
    6418:	04160000 	ldreq	r0, [r6], #-0
    641c:	000017b5 			; <UNDEFINED> instruction: 0x000017b5
    6420:	19360416 	ldmdbne	r6!, {r1, r2, r4, sl}
    6424:	1a250000 	bne	94642c <_bss_end+0x93477c>
    6428:	12000012 	andne	r0, r0, #18
    642c:	17b5195b 	sbfxne	r1, fp, #18, #22
    6430:	df170000 	svcle	0x00170000
    6434:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    6438:	c2073b08 	andgt	r3, r7, #8, 22	; 0x2000
    643c:	47000002 	strmi	r0, [r0, -r2]
    6440:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    6444:	000002c2 	andeq	r0, r0, r2, asr #5
    6448:	de180100 	muflee	f0, f0, f0
    644c:	7b000028 	blvc	64f4 <CPSR_IRQ_INHIBIT+0x6474>
    6450:	b800002c 	stmdalt	r0, {r2, r3, r5}
    6454:	01000009 	tsteq	r0, r9
    6458:	0000198d 	andeq	r1, r0, sp, lsl #19
    645c:	00001998 	muleq	r0, r8, r9
    6460:	001a9b0e 	andseq	r9, sl, lr, lsl #22
    6464:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6468:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    646c:	000028df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    6470:	00002309 	andeq	r2, r0, r9, lsl #6
    6474:	00001a9b 	muleq	r0, fp, sl
    6478:	0019ae01 	andseq	sl, r9, r1, lsl #28
    647c:	0019b900 	andseq	fp, r9, r0, lsl #18
    6480:	1a9b0e00 	bne	fe6c9c88 <_bss_end+0xfe6b7fd8>
    6484:	a60f0000 	strge	r0, [pc], -r0
    6488:	0000001a 	andeq	r0, r0, sl, lsl r0
    648c:	0028df18 	eoreq	sp, r8, r8, lsl pc
    6490:	002bce00 	eoreq	ip, fp, r0, lsl #28
    6494:	001a9b00 	andseq	r9, sl, r0, lsl #22
    6498:	19cf0100 	stmibne	pc, {r8}^	; <UNPREDICTABLE>
    649c:	19da0000 	ldmibne	sl, {}^	; <UNPREDICTABLE>
    64a0:	9b0e0000 	blls	3864a8 <_bss_end+0x3747f8>
    64a4:	0f00001a 	svceq	0x0000001a
    64a8:	00001aac 	andeq	r1, r0, ip, lsr #21
    64ac:	28df1800 	ldmcs	pc, {fp, ip}^	; <UNPREDICTABLE>
    64b0:	25e70000 	strbcs	r0, [r7, #0]!
    64b4:	1a9b0000 	bne	fe6c64bc <_bss_end+0xfe6b480c>
    64b8:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    64bc:	f6000019 			; <UNDEFINED> instruction: 0xf6000019
    64c0:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    64c4:	00001a9b 	muleq	r0, fp, sl
    64c8:	25cf1a00 	strbcs	r1, [pc, #2560]	; 6ed0 <CPSR_IRQ_INHIBIT+0x6e50>
    64cc:	3e080000 	cdpcc	0, 0, cr0, cr8, cr0, {0}
    64d0:	00226412 	eoreq	r6, r2, r2, lsl r4
    64d4:	10020100 	andne	r0, r2, r0, lsl #2
    64d8:	00195f00 	andseq	r5, r9, r0, lsl #30
    64dc:	1a130100 	bne	4c68e4 <_bss_end+0x4b4c34>
    64e0:	1a190000 	bne	6464e8 <_bss_end+0x634838>
    64e4:	9b0e0000 	blls	3864ec <_bss_end+0x37483c>
    64e8:	0000001a 	andeq	r0, r0, sl, lsl r0
    64ec:	0023f61b 	eoreq	pc, r3, fp, lsl r6	; <UNPREDICTABLE>
    64f0:	14430800 	strbne	r0, [r3], #-2048	; 0xfffff800
    64f4:	00001fbf 			; <UNDEFINED> instruction: 0x00001fbf
    64f8:	00000509 	andeq	r0, r0, r9, lsl #10
    64fc:	01100201 	tsteq	r0, r1, lsl #4
    6500:	0000195f 	andeq	r1, r0, pc, asr r9
    6504:	001a3601 	andseq	r3, sl, r1, lsl #12
    6508:	1a9b0e00 	bne	fe6c9d10 <_bss_end+0xfe6b8060>
    650c:	b70f0000 	strlt	r0, [pc, -r0]
    6510:	0f000002 	svceq	0x00000002
    6514:	00000107 	andeq	r0, r0, r7, lsl #2
    6518:	5f030000 	svcpl	0x00030000
    651c:	2a000019 	bcs	6588 <CPSR_IRQ_INHIBIT+0x6508>
    6520:	00002383 	andeq	r2, r0, r3, lsl #7
    6524:	5f195108 	svcpl	0x00195108
    6528:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    652c:	010b4403 	tsteq	fp, r3, lsl #8
    6530:	01e91400 	mvneq	r1, r0, lsl #8
    6534:	1a6e0000 	bne	1b8653c <_bss_end+0x1b7488c>
    6538:	8f150000 	svchi	0x00150000
    653c:	05000000 	streq	r0, [r0, #-0]
    6540:	1a5e0300 	bne	1787148 <_bss_end+0x1775498>
    6544:	ee340000 	cdp	0, 3, cr0, cr4, cr0, {0}
    6548:	13000001 	movwne	r0, #1
    654c:	27831f0d 	strcs	r1, [r3, sp, lsl #30]
    6550:	1a6e0000 	bne	1b86558 <_bss_end+0x1b748a8>
    6554:	03050000 	movweq	r0, #20480	; 0x5000
    6558:	000102ec 	andeq	r0, r1, ip, ror #5
    655c:	0001fa35 	andeq	pc, r1, r5, lsr sl	; <UNPREDICTABLE>
    6560:	10171300 	andsne	r1, r7, r0, lsl #6
    6564:	00001ef1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    6568:	037c0305 	cmneq	ip, #335544320	; 0x14000000
    656c:	04160001 	ldreq	r0, [r6], #-1
    6570:	0000195f 	andeq	r1, r0, pc, asr r9
    6574:	001a9b03 	andseq	r9, sl, r3, lsl #22
    6578:	5f043600 	svcpl	0x00043600
    657c:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
    6580:	001a4704 	andseq	r4, sl, r4, lsl #14
    6584:	2ae91700 	bcs	ffa4c18c <_bss_end+0xffa3a4dc>
    6588:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    658c:	03ca070b 	biceq	r0, sl, #2883584	; 0x2c0000
    6590:	1bf70000 	blne	ffdc6598 <_bss_end+0xffdb48e8>
    6594:	ca290000 	bgt	a4659c <_bss_end+0xa348ec>
    6598:	00000003 	andeq	r0, r0, r3
    659c:	2ae91801 	bcs	ffa4c5a8 <_bss_end+0xffa3a8f8>
    65a0:	2b650000 	blcs	19465a8 <_bss_end+0x19348f8>
    65a4:	1bfc0000 	blne	fff065ac <_bss_end+0xffef48fc>
    65a8:	e0010000 	and	r0, r1, r0
    65ac:	eb00001a 	bl	661c <CPSR_IRQ_INHIBIT+0x659c>
    65b0:	0e00001a 	mcreq	0, 0, r0, cr0, cr10, {0}
    65b4:	00001bfc 	strdeq	r1, [r0], -ip
    65b8:	001c070f 	andseq	r0, ip, pc, lsl #14
    65bc:	650c0000 	strvs	r0, [ip, #-0]
    65c0:	08000007 	stmdaeq	r0, {r0, r1, r2}
    65c4:	02aa0a0e 	adceq	r0, sl, #57344	; 0xe000
    65c8:	11040000 	mrsne	r0, (UNDEF: 4)
    65cc:	00002ae9 	andeq	r2, r0, r9, ror #21
    65d0:	9b051108 	blls	14a9f8 <_bss_end+0x138d48>
    65d4:	fc000029 	stc2	0, cr0, [r0], {41}	; 0x29
    65d8:	0100001b 	tsteq	r0, fp, lsl r0
    65dc:	00001b11 	andeq	r1, r0, r1, lsl fp
    65e0:	00001b17 	andeq	r1, r0, r7, lsl fp
    65e4:	001bfc0e 	andseq	pc, fp, lr, lsl #24
    65e8:	e8370000 	ldmda	r7!, {}	; <UNPREDICTABLE>
    65ec:	0800002a 	stmdaeq	r0, {r1, r3, r5}
    65f0:	2cb80517 	cfldr32cs	mvfx0, [r8], #92	; 0x5c
    65f4:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    65f8:	b2010000 	andlt	r0, r1, #0
    65fc:	0100001a 	tsteq	r0, sl, lsl r0
    6600:	00001b35 	andeq	r1, r0, r5, lsr fp
    6604:	00001b40 	andeq	r1, r0, r0, asr #22
    6608:	001bfc0e 	andseq	pc, fp, lr, lsl #24
    660c:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6610:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6614:	000002d3 	ldrdeq	r0, [r0], -r3
    6618:	c5161c08 	ldrgt	r1, [r6, #-3080]	; 0xfffff3f8
    661c:	79000022 	stmdbvc	r0, {r1, r5}
    6620:	01000000 	mrseq	r0, (UNDEF: 0)
    6624:	b2021002 	andlt	r1, r2, #2
    6628:	0100001a 	tsteq	r0, sl, lsl r0
    662c:	00001b61 	andeq	r1, r0, r1, ror #22
    6630:	00001b71 	andeq	r1, r0, r1, ror fp
    6634:	001bfc0e 	andseq	pc, fp, lr, lsl #24
    6638:	0d120f00 	ldceq	15, cr0, [r2, #-0]
    663c:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6640:	00000000 	andeq	r0, r0, r0
    6644:	001ce01e 	andseq	lr, ip, lr, lsl r0
    6648:	16230800 	strtne	r0, [r3], -r0, lsl #16
    664c:	00002d5f 	andeq	r2, r0, pc, asr sp
    6650:	00000079 	andeq	r0, r0, r9, ror r0
    6654:	03100201 	tsteq	r0, #268435456	; 0x10000000
    6658:	00001ab2 			; <UNDEFINED> instruction: 0x00001ab2
    665c:	001b9201 	andseq	r9, fp, r1, lsl #4
    6660:	001ba200 	andseq	sl, fp, r0, lsl #4
    6664:	1bfc0e00 	blne	fff09e6c <_bss_end+0xffef81bc>
    6668:	b70f0000 	strlt	r0, [pc, -r0]
    666c:	0f000002 	svceq	0x00000002
    6670:	00000079 	andeq	r0, r0, r9, ror r0
    6674:	09ad1e00 	stmibeq	sp!, {r9, sl, fp, ip}
    6678:	2a080000 	bcs	206680 <_bss_end+0x1f49d0>
    667c:	0025af12 	eoreq	sl, r5, r2, lsl pc
    6680:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6684:	10020100 	andne	r0, r2, r0, lsl #2
    6688:	001ab204 	andseq	fp, sl, r4, lsl #4
    668c:	1bc30100 	blne	ff0c6a94 <_bss_end+0xff0b4de4>
    6690:	1bc90000 	blne	ff246698 <_bss_end+0xff2349e8>
    6694:	fc0e0000 	stc2	0, cr0, [lr], {-0}
    6698:	0000001b 	andeq	r0, r0, fp, lsl r0
    669c:	0024ea1b 	eoreq	lr, r4, fp, lsl sl
    66a0:	12350800 	eorsne	r0, r5, #0, 16
    66a4:	000026fb 	strdeq	r2, [r0], -fp
    66a8:	000002aa 	andeq	r0, r0, sl, lsr #5
    66ac:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    66b0:	00001ab2 			; <UNDEFINED> instruction: 0x00001ab2
    66b4:	001be601 	andseq	lr, fp, r1, lsl #12
    66b8:	1bfc0e00 	blne	fff09ec0 <_bss_end+0xffef8210>
    66bc:	a00f0000 	andge	r0, pc, r0
    66c0:	0f000000 	svceq	0x00000000
    66c4:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    66c8:	b2030000 	andlt	r0, r3, #0
    66cc:	1600001a 			; <UNDEFINED> instruction: 0x1600001a
    66d0:	001ab204 	andseq	fp, sl, r4, lsl #4
    66d4:	1bfc0300 	blne	fff072dc <_bss_end+0xffef562c>
    66d8:	04240000 	strteq	r0, [r4], #-0
    66dc:	00001bf7 	strdeq	r1, [r0], -r7
    66e0:	13490416 	movtne	r0, #37910	; 0x9416
    66e4:	0d030000 	stceq	0, cr0, [r3, #-0]
    66e8:	3600001c 			; <UNDEFINED> instruction: 0x3600001c
    66ec:	00134904 	andseq	r4, r3, r4, lsl #18
    66f0:	31042400 	tstcc	r4, r0, lsl #8
    66f4:	17000014 	smladne	r0, r4, r0, r0
    66f8:	000025dc 	ldrdeq	r2, [r0], -ip
    66fc:	070a0708 	streq	r0, [sl, -r8, lsl #14]
    6700:	000003ca 	andeq	r0, r0, sl, asr #7
    6704:	00001d69 	andeq	r1, r0, r9, ror #26
    6708:	0003ca29 	andeq	ip, r3, r9, lsr #20
    670c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    6710:	000025dc 	ldrdeq	r2, [r0], -ip
    6714:	00002909 	andeq	r2, r0, r9, lsl #18
    6718:	00001d6e 	andeq	r1, r0, lr, ror #26
    671c:	001c5201 	andseq	r5, ip, r1, lsl #4
    6720:	001c5d00 	andseq	r5, ip, r0, lsl #26
    6724:	1d6e0e00 	stclne	14, cr0, [lr, #-0]
    6728:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    672c:	0000001d 	andeq	r0, r0, sp, lsl r0
    6730:	0007650c 	andeq	r6, r7, ip, lsl #10
    6734:	0a0d0700 	beq	34833c <_bss_end+0x33668c>
    6738:	000002aa 	andeq	r0, r0, sl, lsr #5
    673c:	25dc1104 	ldrbcs	r1, [ip, #260]	; 0x104
    6740:	10070000 	andne	r0, r7, r0
    6744:	00288c05 	eoreq	r8, r8, r5, lsl #24
    6748:	001d6e00 	andseq	r6, sp, r0, lsl #28
    674c:	1c830100 	stfnes	f0, [r3], {0}
    6750:	1c890000 	stcne	0, cr0, [r9], {0}
    6754:	6e0e0000 	cdpvs	0, 0, cr0, cr14, cr0, {0}
    6758:	0000001d 	andeq	r0, r0, sp, lsl r0
    675c:	0025db37 	eoreq	sp, r5, r7, lsr fp
    6760:	05150700 	ldreq	r0, [r5, #-1792]	; 0xfffff900
    6764:	00002219 	andeq	r2, r0, r9, lsl r2
    6768:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    676c:	001c2401 	andseq	r2, ip, r1, lsl #8
    6770:	1ca70100 	stfnes	f0, [r7]
    6774:	1cb20000 	ldcne	0, cr0, [r2]
    6778:	6e0e0000 	cdpvs	0, 0, cr0, cr14, cr0, {0}
    677c:	0e00001d 	mcreq	0, 0, r0, cr0, cr13, {0}
    6780:	00000038 	andeq	r0, r0, r8, lsr r0
    6784:	02d31e00 	sbcseq	r1, r3, #0, 28
    6788:	1a070000 	bne	1c6790 <_bss_end+0x1b4ae0>
    678c:	00280a16 	eoreq	r0, r8, r6, lsl sl
    6790:	00007900 	andeq	r7, r0, r0, lsl #18
    6794:	10020100 	andne	r0, r2, r0, lsl #2
    6798:	001c2402 	andseq	r2, ip, r2, lsl #8
    679c:	1cd30100 	ldfnee	f0, [r3], {0}
    67a0:	1ce30000 	stclne	0, cr0, [r3]
    67a4:	6e0e0000 	cdpvs	0, 0, cr0, cr14, cr0, {0}
    67a8:	0f00001d 	svceq	0x0000001d
    67ac:	00000d12 	andeq	r0, r0, r2, lsl sp
    67b0:	0000790f 	andeq	r7, r0, pc, lsl #18
    67b4:	e01e0000 	ands	r0, lr, r0
    67b8:	0700001c 	smladeq	r0, ip, r0, r0
    67bc:	2172162c 	cmncs	r2, ip, lsr #12
    67c0:	00790000 	rsbseq	r0, r9, r0
    67c4:	02010000 	andeq	r0, r1, #0
    67c8:	1c240310 	stcne	3, cr0, [r4], #-64	; 0xffffffc0
    67cc:	04010000 	streq	r0, [r1], #-0
    67d0:	1400001d 	strne	r0, [r0], #-29	; 0xffffffe3
    67d4:	0e00001d 	mcreq	0, 0, r0, cr0, cr13, {0}
    67d8:	00001d6e 	andeq	r1, r0, lr, ror #26
    67dc:	0002b70f 	andeq	fp, r2, pc, lsl #14
    67e0:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    67e4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    67e8:	000009ad 	andeq	r0, r0, sp, lsr #19
    67ec:	6b123307 	blvs	493410 <_bss_end+0x481760>
    67f0:	aa000023 	bge	6884 <CPSR_IRQ_INHIBIT+0x6804>
    67f4:	01000002 	tsteq	r0, r2
    67f8:	24041002 	strcs	r1, [r4], #-2
    67fc:	0100001c 	tsteq	r0, ip, lsl r0
    6800:	00001d35 	andeq	r1, r0, r5, lsr sp
    6804:	00001d3b 	andeq	r1, r0, fp, lsr sp
    6808:	001d6e0e 	andseq	r6, sp, lr, lsl #28
    680c:	ea1b0000 	b	6c6814 <_bss_end+0x6b4b64>
    6810:	07000024 	streq	r0, [r0, -r4, lsr #32]
    6814:	2643123e 			; <UNDEFINED> instruction: 0x2643123e
    6818:	02aa0000 	adceq	r0, sl, #0
    681c:	02010000 	andeq	r0, r1, #0
    6820:	1c240510 	cfstr32ne	mvfx0, [r4], #-64	; 0xffffffc0
    6824:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    6828:	0e00001d 	mcreq	0, 0, r0, cr0, cr13, {0}
    682c:	00001d6e 	andeq	r1, r0, lr, ror #26
    6830:	0000a00f 	andeq	sl, r0, pc
    6834:	09b80f00 	ldmibeq	r8!, {r8, r9, sl, fp}
    6838:	00000000 	andeq	r0, r0, r0
    683c:	001c2403 	andseq	r2, ip, r3, lsl #8
    6840:	24041600 	strcs	r1, [r4], #-1536	; 0xfffffa00
    6844:	0300001c 	movweq	r0, #28
    6848:	00001d6e 	andeq	r1, r0, lr, ror #26
    684c:	1d690424 	cfstrdne	mvd0, [r9, #-144]!	; 0xffffff70
    6850:	04160000 	ldreq	r0, [r6], #-0
    6854:	00001168 	andeq	r1, r0, r8, ror #2
    6858:	001d7f03 	andseq	r7, sp, r3, lsl #30
    685c:	68043600 	stmdavs	r4, {r9, sl, ip, sp}
    6860:	24000011 	strcs	r0, [r0], #-17	; 0xffffffef
    6864:	00125004 	andseq	r5, r2, r4
    6868:	2afd1700 	bcs	fff4c470 <_bss_end+0xfff3a7c0>
    686c:	06080000 	streq	r0, [r8], -r0
    6870:	03ca070a 	biceq	r0, sl, #2621440	; 0x280000
    6874:	1edb0000 	cdpne	0, 13, cr0, cr11, cr0, {0}
    6878:	ca290000 	bgt	a46880 <_bss_end+0xa34bd0>
    687c:	00000003 	andeq	r0, r0, r3
    6880:	2afd1801 	bcs	fff4c88c <_bss_end+0xfff3abdc>
    6884:	1e670000 	cdpne	0, 6, cr0, cr7, cr0, {0}
    6888:	1ee00000 	cdpne	0, 14, cr0, cr0, cr0, {0}
    688c:	c4010000 	strgt	r0, [r1], #-0
    6890:	cf00001d 	svcgt	0x0000001d
    6894:	0e00001d 	mcreq	0, 0, r0, cr0, cr13, {0}
    6898:	00001ee0 	andeq	r1, r0, r0, ror #29
    689c:	001eeb0f 	andseq	lr, lr, pc, lsl #22
    68a0:	650c0000 	strvs	r0, [ip, #-0]
    68a4:	06000007 	streq	r0, [r0], -r7
    68a8:	02aa0a0d 	adceq	r0, sl, #53248	; 0xd000
    68ac:	11040000 	mrsne	r0, (UNDEF: 4)
    68b0:	00002afd 	strdeq	r2, [r0], -sp
    68b4:	82051006 	andhi	r1, r5, #6
    68b8:	e000002d 	and	r0, r0, sp, lsr #32
    68bc:	0100001e 	tsteq	r0, lr, lsl r0
    68c0:	00001df5 	strdeq	r1, [r0], -r5
    68c4:	00001dfb 	strdeq	r1, [r0], -fp
    68c8:	001ee00e 	andseq	lr, lr, lr
    68cc:	fc370000 	ldc2	0, cr0, [r7], #-0
    68d0:	0600002a 	streq	r0, [r0], -sl, lsr #32
    68d4:	272e0516 			; <UNDEFINED> instruction: 0x272e0516
    68d8:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    68dc:	96010000 	strls	r0, [r1], -r0
    68e0:	0100001d 	tsteq	r0, sp, lsl r0
    68e4:	00001e19 	andeq	r1, r0, r9, lsl lr
    68e8:	00001e24 	andeq	r1, r0, r4, lsr #28
    68ec:	001ee00e 	andseq	lr, lr, lr
    68f0:	00380e00 	eorseq	r0, r8, r0, lsl #28
    68f4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    68f8:	000002d3 	ldrdeq	r0, [r0], -r3
    68fc:	9b161b06 	blls	58d51c <_bss_end+0x57b86c>
    6900:	79000022 	stmdbvc	r0, {r1, r5}
    6904:	01000000 	mrseq	r0, (UNDEF: 0)
    6908:	96021002 	strls	r1, [r2], -r2
    690c:	0100001d 	tsteq	r0, sp, lsl r0
    6910:	00001e45 	andeq	r1, r0, r5, asr #28
    6914:	00001e55 	andeq	r1, r0, r5, asr lr
    6918:	001ee00e 	andseq	lr, lr, lr
    691c:	0d120f00 	ldceq	15, cr0, [r2, #-0]
    6920:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6924:	00000000 	andeq	r0, r0, r0
    6928:	001ce01e 	andseq	lr, ip, lr, lsl r0
    692c:	16220600 	strtne	r0, [r2], -r0, lsl #12
    6930:	00002a94 	muleq	r0, r4, sl
    6934:	00000079 	andeq	r0, r0, r9, ror r0
    6938:	03100201 	tsteq	r0, #268435456	; 0x10000000
    693c:	00001d96 	muleq	r0, r6, sp
    6940:	001e7601 	andseq	r7, lr, r1, lsl #12
    6944:	001e8600 	andseq	r8, lr, r0, lsl #12
    6948:	1ee00e00 	cdpne	14, 14, cr0, cr0, cr0, {0}
    694c:	b70f0000 	strlt	r0, [pc, -r0]
    6950:	0f000002 	svceq	0x00000002
    6954:	00000079 	andeq	r0, r0, r9, ror r0
    6958:	09ad1e00 	stmibeq	sp!, {r9, sl, fp, ip}
    695c:	2c060000 	stccs	0, cr0, [r6], {-0}
    6960:	00213f12 	eoreq	r3, r1, r2, lsl pc
    6964:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6968:	10020100 	andne	r0, r2, r0, lsl #2
    696c:	001d9604 	andseq	r9, sp, r4, lsl #12
    6970:	1ea70100 	fdvnes	f0, f7, f0
    6974:	1ead0000 	cdpne	0, 10, cr0, cr13, cr0, {0}
    6978:	e00e0000 	and	r0, lr, r0
    697c:	0000001e 	andeq	r0, r0, lr, lsl r0
    6980:	0024ea1b 	eoreq	lr, r4, fp, lsl sl
    6984:	12370600 	eorsne	r0, r7, #0, 12
    6988:	000026c6 	andeq	r2, r0, r6, asr #13
    698c:	000002aa 	andeq	r0, r0, sl, lsr #5
    6990:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    6994:	00001d96 	muleq	r0, r6, sp
    6998:	001eca01 	andseq	ip, lr, r1, lsl #20
    699c:	1ee00e00 	cdpne	14, 14, cr0, cr0, cr0, {0}
    69a0:	a00f0000 	andge	r0, pc, r0
    69a4:	0f000000 	svceq	0x00000000
    69a8:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    69ac:	96030000 	strls	r0, [r3], -r0
    69b0:	1600001d 			; <UNDEFINED> instruction: 0x1600001d
    69b4:	001d9604 	andseq	r9, sp, r4, lsl #12
    69b8:	1ee00300 	cdpne	3, 14, cr0, cr0, cr0, {0}
    69bc:	04240000 	strteq	r0, [r4], #-0
    69c0:	00001edb 	ldrdeq	r1, [r0], -fp
    69c4:	10690416 	rsbne	r0, r9, r6, lsl r4
    69c8:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    69cc:	3600001e 			; <UNDEFINED> instruction: 0x3600001e
    69d0:	00106904 	andseq	r6, r0, r4, lsl #18
    69d4:	51042400 	tstpl	r4, r0, lsl #8
    69d8:	17000011 	smladne	r0, r1, r0, r0
    69dc:	00002dea 	andeq	r2, r0, sl, ror #27
    69e0:	070a0508 	streq	r0, [sl, -r8, lsl #10]
    69e4:	000003ca 	andeq	r0, r0, sl, asr #7
    69e8:	0000204d 	andeq	r2, r0, sp, asr #32
    69ec:	0003ca29 	andeq	ip, r3, r9, lsr #20
    69f0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    69f4:	00002dea 	andeq	r2, r0, sl, ror #27
    69f8:	00002675 	andeq	r2, r0, r5, ror r6
    69fc:	00002052 	andeq	r2, r0, r2, asr r0
    6a00:	001f3601 	andseq	r3, pc, r1, lsl #12
    6a04:	001f4100 	andseq	r4, pc, r0, lsl #2
    6a08:	20520e00 	subscs	r0, r2, r0, lsl #28
    6a0c:	5d0f0000 	stcpl	0, cr0, [pc, #-0]	; 6a14 <CPSR_IRQ_INHIBIT+0x6994>
    6a10:	00000020 	andeq	r0, r0, r0, lsr #32
    6a14:	0007650c 	andeq	r6, r7, ip, lsl #10
    6a18:	0a0d0500 	beq	347e20 <_bss_end+0x336170>
    6a1c:	000002aa 	andeq	r0, r0, sl, lsr #5
    6a20:	2dea1104 	stfcse	f1, [sl, #16]!
    6a24:	10050000 	andne	r0, r5, r0
    6a28:	0020a405 	eoreq	sl, r0, r5, lsl #8
    6a2c:	00205200 	eoreq	r5, r0, r0, lsl #4
    6a30:	1f670100 	svcne	0x00670100
    6a34:	1f6d0000 	svcne	0x006d0000
    6a38:	520e0000 	andpl	r0, lr, #0
    6a3c:	00000020 	andeq	r0, r0, r0, lsr #32
    6a40:	002de937 	eoreq	lr, sp, r7, lsr r9
    6a44:	05160500 	ldreq	r0, [r6, #-1280]	; 0xfffffb00
    6a48:	00002b46 	andeq	r2, r0, r6, asr #22
    6a4c:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    6a50:	001f0801 	andseq	r0, pc, r1, lsl #16
    6a54:	1f8b0100 	svcne	0x008b0100
    6a58:	1f960000 	svcne	0x00960000
    6a5c:	520e0000 	andpl	r0, lr, #0
    6a60:	0e000020 	cdpeq	0, 0, cr0, cr0, cr0, {1}
    6a64:	00000038 	andeq	r0, r0, r8, lsr r0
    6a68:	02d31e00 	sbcseq	r1, r3, #0, 28
    6a6c:	1b050000 	blne	146a74 <_bss_end+0x134dc4>
    6a70:	002ce016 	eoreq	lr, ip, r6, lsl r0
    6a74:	00007900 	andeq	r7, r0, r0, lsl #18
    6a78:	10020100 	andne	r0, r2, r0, lsl #2
    6a7c:	001f0802 	andseq	r0, pc, r2, lsl #16
    6a80:	1fb70100 	svcne	0x00b70100
    6a84:	1fc70000 	svcne	0x00c70000
    6a88:	520e0000 	andpl	r0, lr, #0
    6a8c:	0f000020 	svceq	0x00000020
    6a90:	00000d12 	andeq	r0, r0, r2, lsl sp
    6a94:	0000790f 	andeq	r7, r0, pc, lsl #18
    6a98:	e01e0000 	ands	r0, lr, r0
    6a9c:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    6aa0:	1f991627 	svcne	0x00991627
    6aa4:	00790000 	rsbseq	r0, r9, r0
    6aa8:	02010000 	andeq	r0, r1, #0
    6aac:	1f080310 	svcne	0x00080310
    6ab0:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    6ab4:	f800001f 			; <UNDEFINED> instruction: 0xf800001f
    6ab8:	0e00001f 	mcreq	0, 0, r0, cr0, cr15, {0}
    6abc:	00002052 	andeq	r2, r0, r2, asr r0
    6ac0:	0002b70f 	andeq	fp, r2, pc, lsl #14
    6ac4:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    6ac8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6acc:	000009ad 	andeq	r0, r0, sp, lsr #19
    6ad0:	e6123005 	ldr	r3, [r2], -r5
    6ad4:	aa000022 	bge	6b64 <CPSR_IRQ_INHIBIT+0x6ae4>
    6ad8:	01000002 	tsteq	r0, r2
    6adc:	08041002 	stmdaeq	r4, {r1, ip}
    6ae0:	0100001f 	tsteq	r0, pc, lsl r0
    6ae4:	00002019 	andeq	r2, r0, r9, lsl r0
    6ae8:	0000201f 	andeq	r2, r0, pc, lsl r0
    6aec:	0020520e 	eoreq	r5, r0, lr, lsl #4
    6af0:	ea1b0000 	b	6c6af8 <_bss_end+0x6b4e48>
    6af4:	05000024 	streq	r0, [r0, #-36]	; 0xffffffdc
    6af8:	2c13123b 	lfmcs	f1, 4, [r3], {59}	; 0x3b
    6afc:	02aa0000 	adceq	r0, sl, #0
    6b00:	02010000 	andeq	r0, r1, #0
    6b04:	1f080510 	svcne	0x00080510
    6b08:	3c010000 	stccc	0, cr0, [r1], {-0}
    6b0c:	0e000020 	cdpeq	0, 0, cr0, cr0, cr0, {1}
    6b10:	00002052 	andeq	r2, r0, r2, asr r0
    6b14:	0000a00f 	andeq	sl, r0, pc
    6b18:	09b80f00 	ldmibeq	r8!, {r8, r9, sl, fp}
    6b1c:	00000000 	andeq	r0, r0, r0
    6b20:	001f0803 	andseq	r0, pc, r3, lsl #16
    6b24:	08041600 	stmdaeq	r4, {r9, sl, ip}
    6b28:	0300001f 	movweq	r0, #31
    6b2c:	00002052 	andeq	r2, r0, r2, asr r0
    6b30:	204d0424 	subcs	r0, sp, r4, lsr #8
    6b34:	04160000 	ldreq	r0, [r6], #-0
    6b38:	00000d2f 	andeq	r0, r0, pc, lsr #26
    6b3c:	00206303 	eoreq	r6, r0, r3, lsl #6
    6b40:	2f043600 	svccs	0x00043600
    6b44:	2400000d 	strcs	r0, [r0], #-13
    6b48:	000e1704 	andeq	r1, lr, r4, lsl #14
    6b4c:	2f201700 	svccs	0x00201700
    6b50:	04080000 	streq	r0, [r8], #-0
    6b54:	03ca0709 	biceq	r0, sl, #2359296	; 0x240000
    6b58:	21c40000 	biccs	r0, r4, r0
    6b5c:	ca290000 	bgt	a46b64 <_bss_end+0xa34eb4>
    6b60:	00000003 	andeq	r0, r0, r3
    6b64:	2f201801 	svccs	0x00201801
    6b68:	24ac0000 	strtcs	r0, [ip], #0
    6b6c:	21c90000 	biccs	r0, r9, r0
    6b70:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    6b74:	b3000020 	movwlt	r0, #32
    6b78:	0e000020 	cdpeq	0, 0, cr0, cr0, cr0, {1}
    6b7c:	000021c9 	andeq	r2, r0, r9, asr #3
    6b80:	0021d40f 	eoreq	sp, r1, pc, lsl #8
    6b84:	840c0000 	strhi	r0, [ip], #-0
    6b88:	04000025 	streq	r0, [r0], #-37	; 0xffffffdb
    6b8c:	0038090c 	eorseq	r0, r8, ip, lsl #18
    6b90:	11040000 	mrsne	r0, (UNDEF: 4)
    6b94:	00002f20 	andeq	r2, r0, r0, lsr #30
    6b98:	d7050f04 	strle	r0, [r5, -r4, lsl #30]
    6b9c:	c9000020 	stmdbgt	r0, {r5}
    6ba0:	01000021 	tsteq	r0, r1, lsr #32
    6ba4:	000020d9 	ldrdeq	r2, [r0], -r9
    6ba8:	000020e4 	andeq	r2, r0, r4, ror #1
    6bac:	0021c90e 	eoreq	ip, r1, lr, lsl #18
    6bb0:	00380f00 	eorseq	r0, r8, r0, lsl #30
    6bb4:	37000000 	strcc	r0, [r0, -r0]
    6bb8:	00002f1f 	andeq	r2, r0, pc, lsl pc
    6bbc:	50051404 	andpl	r1, r5, r4, lsl #8
    6bc0:	b8000029 	stmdalt	r0, {r0, r3, r5}
    6bc4:	01000009 	tsteq	r0, r9
    6bc8:	0000207a 	andeq	r2, r0, sl, ror r0
    6bcc:	00210201 	eoreq	r0, r1, r1, lsl #4
    6bd0:	00210d00 	eoreq	r0, r1, r0, lsl #26
    6bd4:	21c90e00 	biccs	r0, r9, r0, lsl #28
    6bd8:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	0002d31e 	andeq	sp, r2, lr, lsl r3
    6be4:	16190400 	ldrne	r0, [r9], -r0, lsl #8
    6be8:	00002da0 	andeq	r2, r0, r0, lsr #27
    6bec:	00000079 	andeq	r0, r0, r9, ror r0
    6bf0:	02100201 	andseq	r0, r0, #268435456	; 0x10000000
    6bf4:	0000207a 	andeq	r2, r0, sl, ror r0
    6bf8:	00212e01 	eoreq	r2, r1, r1, lsl #28
    6bfc:	00213e00 	eoreq	r3, r1, r0, lsl #28
    6c00:	21c90e00 	biccs	r0, r9, r0, lsl #28
    6c04:	120f0000 	andne	r0, pc, #0
    6c08:	0f00000d 	svceq	0x0000000d
    6c0c:	00000079 	andeq	r0, r0, r9, ror r0
    6c10:	1ce01e00 	stclne	14, cr1, [r0]
    6c14:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    6c18:	002d0416 	eoreq	r0, sp, r6, lsl r4
    6c1c:	00007900 	andeq	r7, r0, r0, lsl #18
    6c20:	10020100 	andne	r0, r2, r0, lsl #2
    6c24:	00207a03 	eoreq	r7, r0, r3, lsl #20
    6c28:	215f0100 	cmpcs	pc, r0, lsl #2
    6c2c:	216f0000 	cmncs	pc, r0
    6c30:	c90e0000 	stmdbgt	lr, {}	; <UNPREDICTABLE>
    6c34:	0f000021 	svceq	0x00000021
    6c38:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    6c3c:	0000790f 	andeq	r7, r0, pc, lsl #18
    6c40:	ad1e0000 	ldcge	0, cr0, [lr, #-0]
    6c44:	04000009 	streq	r0, [r0], #-9
    6c48:	2ba7122c 	blcs	fe9cb500 <_bss_end+0xfe9b9850>
    6c4c:	02aa0000 	adceq	r0, sl, #0
    6c50:	02010000 	andeq	r0, r1, #0
    6c54:	207a0410 	rsbscs	r0, sl, r0, lsl r4
    6c58:	90010000 	andls	r0, r1, r0
    6c5c:	96000021 	strls	r0, [r0], -r1, lsr #32
    6c60:	0e000021 	cdpeq	0, 0, cr0, cr0, cr1, {1}
    6c64:	000021c9 	andeq	r2, r0, r9, asr #3
    6c68:	24ea1b00 	strbtcs	r1, [sl], #2816	; 0xb00
    6c6c:	3a040000 	bcc	106c74 <_bss_end+0xf4fc4>
    6c70:	00255612 	eoreq	r5, r5, r2, lsl r6
    6c74:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6c78:	10020100 	andne	r0, r2, r0, lsl #2
    6c7c:	00207a05 	eoreq	r7, r0, r5, lsl #20
    6c80:	21b30100 			; <UNDEFINED> instruction: 0x21b30100
    6c84:	c90e0000 	stmdbgt	lr, {}	; <UNPREDICTABLE>
    6c88:	0f000021 	svceq	0x00000021
    6c8c:	000000a0 	andeq	r0, r0, r0, lsr #1
    6c90:	0009b80f 	andeq	fp, r9, pc, lsl #16
    6c94:	03000000 	movweq	r0, #0
    6c98:	0000207a 	andeq	r2, r0, sl, ror r0
    6c9c:	207a0416 	rsbscs	r0, sl, r6, lsl r4
    6ca0:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    6ca4:	24000021 	strcs	r0, [r0], #-33	; 0xffffffdf
    6ca8:	0021c404 	eoreq	ip, r1, r4, lsl #8
    6cac:	c6041600 	strgt	r1, [r4], -r0, lsl #12
    6cb0:	03000009 	movweq	r0, #9
    6cb4:	000021da 	ldrdeq	r2, [r0], -sl
    6cb8:	09c60436 	stmibeq	r6, {r1, r2, r4, r5, sl}^
    6cbc:	04240000 	strteq	r0, [r4], #-0
    6cc0:	00000aae 	andeq	r0, r0, lr, lsr #21
    6cc4:	00288117 	eoreq	r8, r8, r7, lsl r1
    6cc8:	0a030c00 	beq	c9cd0 <_bss_end+0xb8020>
    6ccc:	0003ca07 	andeq	ip, r3, r7, lsl #20
    6cd0:	00235f00 	eoreq	r5, r3, r0, lsl #30
    6cd4:	03ca2900 	biceq	r2, sl, #0, 18
    6cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    6cdc:	00288118 	eoreq	r8, r8, r8, lsl r1
    6ce0:	001eda00 	andseq	sp, lr, r0, lsl #20
    6ce4:	00236400 	eoreq	r6, r3, r0, lsl #8
    6ce8:	221f0100 	andscs	r0, pc, #0, 2
    6cec:	222a0000 	eorcs	r0, sl, #0
    6cf0:	640e0000 	strvs	r0, [lr], #-0
    6cf4:	0f000023 	svceq	0x00000023
    6cf8:	0000236f 	andeq	r2, r0, pc, ror #6
    6cfc:	283f0c00 	ldmdacs	pc!, {sl, fp}	; <UNPREDICTABLE>
    6d00:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    6d04:	00003809 	andeq	r3, r0, r9, lsl #16
    6d08:	0d0c0400 	cfstrseq	mvf0, [ip, #-0]
    6d0c:	0300002c 	movweq	r0, #44	; 0x2c
    6d10:	02aa0a10 	adceq	r0, sl, #16, 20	; 0x10000
    6d14:	0c080000 	stceq	0, cr0, [r8], {-0}
    6d18:	000022be 			; <UNDEFINED> instruction: 0x000022be
    6d1c:	aa0a1203 	bge	28b530 <_bss_end+0x279880>
    6d20:	09000002 	stmdbeq	r0, {r1}
    6d24:	00288111 	eoreq	r8, r8, r1, lsl r1
    6d28:	05150300 	ldreq	r0, [r5, #-768]	; 0xfffffd00
    6d2c:	00002b30 	andeq	r2, r0, r0, lsr fp
    6d30:	00002364 	andeq	r2, r0, r4, ror #6
    6d34:	00226a01 	eoreq	r6, r2, r1, lsl #20
    6d38:	00227f00 	eoreq	r7, r2, r0, lsl #30
    6d3c:	23640e00 	cmncs	r4, #0, 28
    6d40:	380f0000 	stmdacc	pc, {}	; <UNPREDICTABLE>
    6d44:	0f000000 	svceq	0x00000000
    6d48:	000002aa 	andeq	r0, r0, sl, lsr #5
    6d4c:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    6d50:	80370000 	eorshi	r0, r7, r0
    6d54:	03000028 	movweq	r0, #40	; 0x28
    6d58:	26b2051d 	ssatcs	r0, #19, sp, lsl #10
    6d5c:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    6d60:	f1010000 	setend	le
    6d64:	01000021 	tsteq	r0, r1, lsr #32
    6d68:	0000229d 	muleq	r0, sp, r2
    6d6c:	000022a8 	andeq	r2, r0, r8, lsr #5
    6d70:	0023640e 	eoreq	r6, r3, lr, lsl #8
    6d74:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6d78:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6d7c:	000002d3 	ldrdeq	r0, [r0], -r3
    6d80:	d0162303 	andsle	r2, r6, r3, lsl #6
    6d84:	7900002d 	stmdbvc	r0, {r0, r2, r3, r5}
    6d88:	01000000 	mrseq	r0, (UNDEF: 0)
    6d8c:	f1021002 			; <UNDEFINED> instruction: 0xf1021002
    6d90:	01000021 	tsteq	r0, r1, lsr #32
    6d94:	000022c9 	andeq	r2, r0, r9, asr #5
    6d98:	000022d9 	ldrdeq	r2, [r0], -r9
    6d9c:	0023640e 	eoreq	r6, r3, lr, lsl #8
    6da0:	0d120f00 	ldceq	15, cr0, [r2, #-0]
    6da4:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6da8:	00000000 	andeq	r0, r0, r0
    6dac:	001ce01e 	andseq	lr, ip, lr, lsl r0
    6db0:	162f0300 	strtne	r0, [pc], -r0, lsl #6
    6db4:	00002e7e 	andeq	r2, r0, lr, ror lr
    6db8:	00000079 	andeq	r0, r0, r9, ror r0
    6dbc:	03100201 	tsteq	r0, #268435456	; 0x10000000
    6dc0:	000021f1 	strdeq	r2, [r0], -r1
    6dc4:	0022fa01 	eoreq	pc, r2, r1, lsl #20
    6dc8:	00230a00 	eoreq	r0, r3, r0, lsl #20
    6dcc:	23640e00 	cmncs	r4, #0, 28
    6dd0:	b70f0000 	strlt	r0, [pc, -r0]
    6dd4:	0f000002 	svceq	0x00000002
    6dd8:	00000079 	andeq	r0, r0, r9, ror r0
    6ddc:	09ad1e00 	stmibeq	sp!, {r9, sl, fp, ip}
    6de0:	3b030000 	blcc	c6de8 <_bss_end+0xb5138>
    6de4:	002e1f12 	eoreq	r1, lr, r2, lsl pc
    6de8:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6dec:	10020100 	andne	r0, r2, r0, lsl #2
    6df0:	0021f104 	eoreq	pc, r1, r4, lsl #2
    6df4:	232b0100 			; <UNDEFINED> instruction: 0x232b0100
    6df8:	23310000 	teqcs	r1, #0
    6dfc:	640e0000 	strvs	r0, [lr], #-0
    6e00:	00000023 	andeq	r0, r0, r3, lsr #32
    6e04:	0024ea1b 	eoreq	lr, r4, fp, lsl sl
    6e08:	12470300 	subne	r0, r7, #0, 6
    6e0c:	00002a19 	andeq	r2, r0, r9, lsl sl
    6e10:	000002aa 	andeq	r0, r0, sl, lsr #5
    6e14:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    6e18:	000021f1 	strdeq	r2, [r0], -r1
    6e1c:	00234e01 	eoreq	r4, r3, r1, lsl #28
    6e20:	23640e00 	cmncs	r4, #0, 28
    6e24:	a00f0000 	andge	r0, pc, r0
    6e28:	0f000000 	svceq	0x00000000
    6e2c:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    6e30:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    6e34:	16000021 	strne	r0, [r0], -r1, lsr #32
    6e38:	0021f104 	eoreq	pc, r1, r4, lsl #2
    6e3c:	23640300 	cmncs	r4, #0, 6
    6e40:	04240000 	strteq	r0, [r4], #-0
    6e44:	0000235f 	andeq	r2, r0, pc, asr r3
    6e48:	02c20436 	sbceq	r0, r2, #905969664	; 0x36000000
    6e4c:	04240000 	strteq	r0, [r4], #-0
    6e50:	000003ae 	andeq	r0, r0, lr, lsr #7
    6e54:	00003838 	andeq	r3, r0, r8, lsr r8
    6e58:	00238c00 	eoreq	r8, r3, r0, lsl #24
    6e5c:	16003900 	strne	r3, [r0], -r0, lsl #18
    6e60:	00239204 	eoreq	r9, r3, r4, lsl #4
    6e64:	30043a00 	andcc	r3, r4, r0, lsl #20
    6e68:	81000020 	tsthi	r0, r0, lsr #32
    6e6c:	24000023 	strcs	r0, [r0], #-35	; 0xffffffdd
    6e70:	00050404 	andeq	r0, r5, r4, lsl #8
    6e74:	1a193b00 	bne	655a7c <_bss_end+0x643dcc>
    6e78:	23b90000 			; <UNDEFINED> instruction: 0x23b90000
    6e7c:	d4480000 	strble	r0, [r8], #-0
    6e80:	00740000 	rsbseq	r0, r4, r0
    6e84:	9c010000 	stcls	0, cr0, [r1], {-0}
    6e88:	000023f1 	strdeq	r2, [r0], -r1
    6e8c:	00032c3c 	andeq	r2, r3, ip, lsr ip
    6e90:	001aa100 	andseq	sl, sl, r0, lsl #2
    6e94:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    6e98:	001e143d 	andseq	r1, lr, sp, lsr r4
    6e9c:	2a430800 	bcs	10c8ea4 <_bss_end+0x10b71f4>
    6ea0:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    6ea4:	3d609102 	stfccp	f1, [r0, #-8]!
    6ea8:	0000036e 	andeq	r0, r0, lr, ror #6
    6eac:	07404308 	strbeq	r4, [r0, -r8, lsl #6]
    6eb0:	02000001 	andeq	r0, r0, #1
    6eb4:	663e5c91 			; <UNDEFINED> instruction: 0x663e5c91
    6eb8:	1d4b0800 	stclne	8, cr0, [fp, #-0]
    6ebc:	00001bfc 	strdeq	r1, [r0], -ip
    6ec0:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    6ec4:	0019f63f 	andseq	pc, r9, pc, lsr r6	; <UNPREDICTABLE>
    6ec8:	00240800 	eoreq	r0, r4, r0, lsl #16
    6ecc:	00d42800 	sbcseq	r2, r4, r0, lsl #16
    6ed0:	00002000 	andeq	r2, r0, r0
    6ed4:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    6ed8:	3c000024 	stccc	0, cr0, [r0], {36}	; 0x24
    6edc:	0000032c 	andeq	r0, r0, ip, lsr #6
    6ee0:	00001aa1 	andeq	r1, r0, r1, lsr #21
    6ee4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6ee8:	001bc93f 	andseq	ip, fp, pc, lsr r9
    6eec:	00242c00 	eoreq	r2, r4, r0, lsl #24
    6ef0:	00d3fc00 	sbcseq	pc, r3, r0, lsl #24
    6ef4:	00002c00 	andeq	r2, r0, r0, lsl #24
    6ef8:	579c0100 	ldrpl	r0, [ip, r0, lsl #2]
    6efc:	3c000024 	stccc	0, cr0, [r0], {36}	; 0x24
    6f00:	0000032c 	andeq	r0, r0, ip, lsr #6
    6f04:	00001c02 	andeq	r1, r0, r2, lsl #24
    6f08:	40749102 	rsbsmi	r9, r4, r2, lsl #2
    6f0c:	00726964 	rsbseq	r6, r2, r4, ror #18
    6f10:	a0293508 	eorge	r3, r9, r8, lsl #10
    6f14:	02000000 	andeq	r0, r0, #0
    6f18:	6e3d7091 	mrcvs	0, 1, r7, cr13, cr1, {4}
    6f1c:	08000026 	stmdaeq	r0, {r1, r2, r5}
    6f20:	09b83435 	ldmibeq	r8!, {r0, r2, r4, r5, sl, ip, sp}
    6f24:	91020000 	mrsls	r0, (UNDEF: 2)
    6f28:	a23b006c 	eorsge	r0, fp, #108	; 0x6c
    6f2c:	6e00001b 	mcrvs	0, 0, r0, cr0, cr11, {0}
    6f30:	a4000024 	strge	r0, [r0], #-36	; 0xffffffdc
    6f34:	580000d3 	stmdapl	r0, {r0, r1, r4, r6, r7}
    6f38:	01000000 	mrseq	r0, (UNDEF: 0)
    6f3c:	00247b9c 	mlaeq	r4, ip, fp, r7
    6f40:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    6f44:	1c020000 	stcne	0, cr0, [r2], {-0}
    6f48:	91020000 	mrsls	r0, (UNDEF: 2)
    6f4c:	713b0074 	teqvc	fp, r4, ror r0
    6f50:	9200001b 	andls	r0, r0, #27
    6f54:	68000024 	stmdavs	r0, {r2, r5}
    6f58:	3c0000d3 	stccc	0, cr0, [r0], {211}	; 0xd3
    6f5c:	01000000 	mrseq	r0, (UNDEF: 0)
    6f60:	0024bd9c 	mlaeq	r4, ip, sp, fp
    6f64:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    6f68:	1c020000 	stcne	0, cr0, [r2], {-0}
    6f6c:	91020000 	mrsls	r0, (UNDEF: 2)
    6f70:	0cba3d74 	ldceq	13, cr3, [sl], #464	; 0x1d0
    6f74:	23080000 	movwcs	r0, #32768	; 0x8000
    6f78:	0002b728 	andeq	fp, r2, r8, lsr #14
    6f7c:	70910200 	addsvc	r0, r1, r0, lsl #4
    6f80:	6d756e40 	ldclvs	14, cr6, [r5, #-256]!	; 0xffffff00
    6f84:	39230800 	stmdbcc	r3!, {fp}
    6f88:	00000079 	andeq	r0, r0, r9, ror r0
    6f8c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    6f90:	001b403f 	andseq	r4, fp, pc, lsr r0
    6f94:	0024d400 	eoreq	sp, r4, r0, lsl #8
    6f98:	00d33c00 	sbcseq	r3, r3, r0, lsl #24
    6f9c:	00002c00 	andeq	r2, r0, r0, lsl #24
    6fa0:	ff9c0100 			; <UNDEFINED> instruction: 0xff9c0100
    6fa4:	3c000024 	stccc	0, cr0, [r0], {36}	; 0x24
    6fa8:	0000032c 	andeq	r0, r0, ip, lsr #6
    6fac:	00001c02 	andeq	r1, r0, r2, lsl #24
    6fb0:	3d749102 	ldfccp	f1, [r4, #-8]!
    6fb4:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    6fb8:	12211c08 	eorne	r1, r1, #8, 24	; 0x800
    6fbc:	0200000d 	andeq	r0, r0, #13
    6fc0:	6e407091 	mcrvs	0, 2, r7, cr0, cr1, {4}
    6fc4:	08006d75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}
    6fc8:	0079321c 	rsbseq	r3, r9, ip, lsl r2
    6fcc:	91020000 	mrsls	r0, (UNDEF: 2)
    6fd0:	1741006c 	strbne	r0, [r1, -ip, rrx]
    6fd4:	b800001b 	stmdalt	r0, {r0, r1, r3, r4}
    6fd8:	11000009 	tstne	r0, r9
    6fdc:	02000025 	andeq	r0, r0, #37	; 0x25
    6fe0:	00002524 	andeq	r2, r0, r4, lsr #10
    6fe4:	00032c42 	andeq	r2, r3, r2, asr #24
    6fe8:	001c0200 	andseq	r0, ip, r0, lsl #4
    6fec:	2e564200 	cdpcs	2, 5, cr4, cr6, cr0, {0}
    6ff0:	003f0000 	eorseq	r0, pc, r0
    6ff4:	43000000 	movwmi	r0, #0
    6ff8:	000024ff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    6ffc:	00002927 	andeq	r2, r0, r7, lsr #18
    7000:	0000253f 	andeq	r2, r0, pc, lsr r5
    7004:	0000d308 	andeq	sp, r0, r8, lsl #6
    7008:	00000034 	andeq	r0, r0, r4, lsr r0
    700c:	25489c01 	strbcs	r9, [r8, #-3073]	; 0xfffff3ff
    7010:	11440000 	mrsne	r0, (UNDEF: 68)
    7014:	02000025 	andeq	r0, r0, #37	; 0x25
    7018:	43007491 	movwmi	r7, #1169	; 0x491
    701c:	000024ff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    7020:	0000258d 	andeq	r2, r0, sp, lsl #11
    7024:	00002563 	andeq	r2, r0, r3, ror #10
    7028:	0000d2c4 	andeq	sp, r0, r4, asr #5
    702c:	00000044 	andeq	r0, r0, r4, asr #32
    7030:	256c9c01 	strbcs	r9, [ip, #-3073]!	; 0xfffff3ff
    7034:	11440000 	mrsne	r0, (UNDEF: 68)
    7038:	02000025 	andeq	r0, r0, #37	; 0x25
    703c:	45007491 	strmi	r7, [r0, #-1169]	; 0xfffffb6f
    7040:	00001af8 	strdeq	r1, [r0], -r8
    7044:	0000257a 	andeq	r2, r0, sl, ror r5
    7048:	00258402 	eoreq	r8, r5, r2, lsl #8
    704c:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    7050:	1c020000 	stcne	0, cr0, [r2], {-0}
    7054:	43000000 	movwmi	r0, #0
    7058:	0000256c 	andeq	r2, r0, ip, ror #10
    705c:	00002c9c 	muleq	r0, ip, ip
    7060:	0000259f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    7064:	0000d27c 	andeq	sp, r0, ip, ror r2
    7068:	00000048 	andeq	r0, r0, r8, asr #32
    706c:	25a89c01 	strcs	r9, [r8, #3073]!	; 0xc01
    7070:	7a440000 	bvc	1107078 <_bss_end+0x10f53c8>
    7074:	02000025 	andeq	r0, r0, #37	; 0x25
    7078:	3b007491 	blcc	242c4 <_bss_end+0x12614>
    707c:	00001403 	andeq	r1, r0, r3, lsl #8
    7080:	000025bf 			; <UNDEFINED> instruction: 0x000025bf
    7084:	0000d1f8 	strdeq	sp, [r0], -r8
    7088:	00000084 	andeq	r0, r0, r4, lsl #1
    708c:	25f79c01 	ldrbcs	r9, [r7, #3073]!	; 0xc01
    7090:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7094:	13000003 	movwne	r0, #3
    7098:	0200001c 	andeq	r0, r0, #28
    709c:	143d6491 	ldrtne	r6, [sp], #-1169	; 0xfffffb6f
    70a0:	0700001e 	smladeq	r0, lr, r0, r0
    70a4:	02b72a4c 	adcseq	r2, r7, #76, 20	; 0x4c000
    70a8:	91020000 	mrsls	r0, (UNDEF: 2)
    70ac:	036e3d60 	cmneq	lr, #96, 26	; 0x1800
    70b0:	4c070000 	stcmi	0, cr0, [r7], {-0}
    70b4:	00010740 	andeq	r0, r1, r0, asr #14
    70b8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    70bc:	0700663e 	smladxeq	r0, lr, r6, r6
    70c0:	1d6e1553 	cfstr64ne	mvdx1, [lr, #-332]!	; 0xfffffeb4
    70c4:	91020000 	mrsls	r0, (UNDEF: 2)
    70c8:	e03f006c 	eors	r0, pc, ip, rrx
    70cc:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    70d0:	d8000026 	stmdale	r0, {r1, r2, r5}
    70d4:	200000d1 	ldrdcs	r0, [r0], -r1
    70d8:	01000000 	mrseq	r0, (UNDEF: 0)
    70dc:	00261b9c 	mlaeq	r6, ip, fp, r1
    70e0:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    70e4:	1c130000 	ldcne	0, cr0, [r3], {-0}
    70e8:	91020000 	mrsls	r0, (UNDEF: 2)
    70ec:	3b3f0074 	blcc	fc72c4 <_bss_end+0xfb5614>
    70f0:	3200001d 	andcc	r0, r0, #29
    70f4:	ac000026 	stcge	0, cr0, [r0], {38}	; 0x26
    70f8:	2c0000d1 	stccs	0, cr0, [r0], {209}	; 0xd1
    70fc:	01000000 	mrseq	r0, (UNDEF: 0)
    7100:	00265d9c 	mlaeq	r6, ip, sp, r5
    7104:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7108:	1d740000 	ldclne	0, cr0, [r4, #-0]
    710c:	91020000 	mrsls	r0, (UNDEF: 2)
    7110:	69644074 	stmdbvs	r4!, {r2, r4, r5, r6, lr}^
    7114:	3e070072 	mcrcc	0, 0, r0, cr7, cr2, {3}
    7118:	0000a029 	andeq	sl, r0, r9, lsr #32
    711c:	70910200 	addsvc	r0, r1, r0, lsl #4
    7120:	00266e3d 	eoreq	r6, r6, sp, lsr lr
    7124:	343e0700 	ldrtcc	r0, [lr], #-1792	; 0xfffff900
    7128:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    712c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7130:	001d143b 	andseq	r1, sp, fp, lsr r4
    7134:	00267400 	eoreq	r7, r6, r0, lsl #8
    7138:	00d15400 	sbcseq	r5, r1, r0, lsl #8
    713c:	00005800 	andeq	r5, r0, r0, lsl #16
    7140:	819c0100 	orrshi	r0, ip, r0, lsl #2
    7144:	3c000026 	stccc	0, cr0, [r0], {38}	; 0x26
    7148:	0000032c 	andeq	r0, r0, ip, lsr #6
    714c:	00001d74 	andeq	r1, r0, r4, ror sp
    7150:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7154:	001ce33f 	andseq	lr, ip, pc, lsr r3
    7158:	00269800 	eoreq	r9, r6, r0, lsl #16
    715c:	00d12800 	sbcseq	r2, r1, r0, lsl #16
    7160:	00002c00 	andeq	r2, r0, r0, lsl #24
    7164:	c39c0100 	orrsgt	r0, ip, #0, 2
    7168:	3c000026 	stccc	0, cr0, [r0], {38}	; 0x26
    716c:	0000032c 	andeq	r0, r0, ip, lsr #6
    7170:	00001d74 	andeq	r1, r0, r4, ror sp
    7174:	3d749102 	ldfccp	f1, [r4, #-8]!
    7178:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    717c:	b7282c07 	strlt	r2, [r8, -r7, lsl #24]!
    7180:	02000002 	andeq	r0, r0, #2
    7184:	6e407091 	mcrvs	0, 2, r7, cr0, cr1, {4}
    7188:	07006d75 	smlsdxeq	r0, r5, sp, r6
    718c:	0079392c 	rsbseq	r3, r9, ip, lsr #18
    7190:	91020000 	mrsls	r0, (UNDEF: 2)
    7194:	b23b006c 	eorslt	r0, fp, #108	; 0x6c
    7198:	da00001c 	ble	7210 <CPSR_IRQ_INHIBIT+0x7190>
    719c:	40000026 	andmi	r0, r0, r6, lsr #32
    71a0:	e80000d0 	stmda	r0, {r4, r6, r7}
    71a4:	01000000 	mrseq	r0, (UNDEF: 0)
    71a8:	0027559c 	mlaeq	r7, ip, r5, r5
    71ac:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    71b0:	1d740000 	ldclne	0, cr0, [r4, #-0]
    71b4:	91020000 	mrsls	r0, (UNDEF: 2)
    71b8:	0cba3d5c 	ldceq	13, cr3, [sl], #368	; 0x170
    71bc:	1a070000 	bne	1c71c4 <_bss_end+0x1b5514>
    71c0:	000d1221 	andeq	r1, sp, r1, lsr #4
    71c4:	58910200 	ldmpl	r1, {r9}
    71c8:	6d756e40 	ldclvs	14, cr6, [r5, #-256]!	; 0xffffff00
    71cc:	321a0700 	andscc	r0, sl, #0, 14
    71d0:	00000079 	andeq	r0, r0, r9, ror r0
    71d4:	46549102 	ldrbmi	r9, [r4], -r2, lsl #2
    71d8:	00002cd4 	ldrdeq	r2, [r0], -r4
    71dc:	85181c07 	ldrhi	r1, [r8, #-3079]	; 0xfffff3f9
    71e0:	02000000 	andeq	r0, r0, #0
    71e4:	db466491 	blle	11a0430 <_bss_end+0x118e780>
    71e8:	0700002c 	streq	r0, [r0, -ip, lsr #32]
    71ec:	2755131d 	smmlacs	r5, sp, r3, r1
    71f0:	91020000 	mrsls	r0, (UNDEF: 2)
    71f4:	d06c4760 	rsble	r4, ip, r0, ror #14
    71f8:	00480000 	subeq	r0, r8, r0
    71fc:	273d0000 	ldrcs	r0, [sp, -r0]!
    7200:	693e0000 	ldmdbvs	lr!, {}	; <UNPREDICTABLE>
    7204:	121e0700 	andsne	r0, lr, #0, 14
    7208:	00000038 	andeq	r0, r0, r8, lsr r0
    720c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7210:	00d0c848 	sbcseq	ip, r0, r8, asr #16
    7214:	00004c00 	andeq	r4, r0, r0, lsl #24
    7218:	00693e00 	rsbeq	r3, r9, r0, lsl #28
    721c:	38162507 	ldmdacc	r6, {r0, r1, r2, r8, sl, sp}
    7220:	02000000 	andeq	r0, r0, #0
    7224:	00006891 	muleq	r0, r1, r8
    7228:	00790416 	rsbseq	r0, r9, r6, lsl r4
    722c:	89410000 	stmdbhi	r1, {}^	; <UNPREDICTABLE>
    7230:	b800001c 	stmdalt	r0, {r2, r3, r4}
    7234:	6d000009 	stcvs	0, cr0, [r0, #-36]	; 0xffffffdc
    7238:	02000027 	andeq	r0, r0, #39	; 0x27
    723c:	00002780 	andeq	r2, r0, r0, lsl #15
    7240:	00032c42 	andeq	r2, r3, r2, asr #24
    7244:	001d7400 	andseq	r7, sp, r0, lsl #8
    7248:	2e564200 	cdpcs	2, 5, cr4, cr6, cr0, {0}
    724c:	003f0000 	eorseq	r0, pc, r0
    7250:	43000000 	movwmi	r0, #0
    7254:	0000275b 	andeq	r2, r0, fp, asr r7
    7258:	0000286c 	andeq	r2, r0, ip, ror #16
    725c:	0000279b 	muleq	r0, fp, r7
    7260:	0000d00c 	andeq	sp, r0, ip
    7264:	00000034 	andeq	r0, r0, r4, lsr r0
    7268:	27a49c01 	strcs	r9, [r4, r1, lsl #24]!
    726c:	6d440000 	stclvs	0, cr0, [r4, #-0]
    7270:	02000027 	andeq	r0, r0, #39	; 0x27
    7274:	43007491 	movwmi	r7, #1169	; 0x491
    7278:	0000275b 	andeq	r2, r0, fp, asr r7
    727c:	00002442 	andeq	r2, r0, r2, asr #8
    7280:	000027bf 			; <UNDEFINED> instruction: 0x000027bf
    7284:	0000cfc8 	andeq	ip, r0, r8, asr #31
    7288:	00000044 	andeq	r0, r0, r4, asr #32
    728c:	27c89c01 	strbcs	r9, [r8, r1, lsl #24]
    7290:	6d440000 	stclvs	0, cr0, [r4, #-0]
    7294:	02000027 	andeq	r0, r0, #39	; 0x27
    7298:	45007491 	strmi	r7, [r0, #-1169]	; 0xfffffb6f
    729c:	00001c6a 	andeq	r1, r0, sl, ror #24
    72a0:	000027d6 	ldrdeq	r2, [r0], -r6
    72a4:	0027e002 	eoreq	lr, r7, r2
    72a8:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    72ac:	1d740000 	ldclne	0, cr0, [r4, #-0]
    72b0:	43000000 	movwmi	r0, #0
    72b4:	000027c8 	andeq	r2, r0, r8, asr #15
    72b8:	000021a6 	andeq	r2, r0, r6, lsr #3
    72bc:	000027fb 	strdeq	r2, [r0], -fp
    72c0:	0000cf8c 	andeq	ip, r0, ip, lsl #31
    72c4:	0000003c 	andeq	r0, r0, ip, lsr r0
    72c8:	28049c01 	stmdacs	r4, {r0, sl, fp, ip, pc}
    72cc:	d6440000 	strble	r0, [r4], -r0
    72d0:	02000027 	andeq	r0, r0, #39	; 0x27
    72d4:	3b007491 	blcc	24520 <_bss_end+0x12870>
    72d8:	00001222 	andeq	r1, r0, r2, lsr #4
    72dc:	0000281b 	andeq	r2, r0, fp, lsl r8
    72e0:	0000cf20 	andeq	ip, r0, r0, lsr #30
    72e4:	0000006c 	andeq	r0, r0, ip, rrx
    72e8:	28539c01 	ldmdacs	r3, {r0, sl, fp, ip, pc}^
    72ec:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    72f0:	85000003 	strhi	r0, [r0, #-3]
    72f4:	0200001d 	andeq	r0, r0, #29
    72f8:	143d6491 	ldrtne	r6, [sp], #-1169	; 0xfffffb6f
    72fc:	0600001e 			; <UNDEFINED> instruction: 0x0600001e
    7300:	02b72a45 	adcseq	r2, r7, #282624	; 0x45000
    7304:	91020000 	mrsls	r0, (UNDEF: 2)
    7308:	036e3d60 	cmneq	lr, #96, 26	; 0x1800
    730c:	45060000 	strmi	r0, [r6, #-0]
    7310:	00010740 	andeq	r0, r1, r0, asr #14
    7314:	5c910200 	lfmpl	f0, 4, [r1], {0}
    7318:	0600663e 			; <UNDEFINED> instruction: 0x0600663e
    731c:	1ee01f4c 	cdpne	15, 14, cr1, cr0, cr12, {2}
    7320:	91020000 	mrsls	r0, (UNDEF: 2)
    7324:	ff3f006c 			; <UNDEFINED> instruction: 0xff3f006c
    7328:	6a000011 	bvs	7374 <CPSR_IRQ_INHIBIT+0x72f4>
    732c:	00000028 	andeq	r0, r0, r8, lsr #32
    7330:	200000cf 	andcs	r0, r0, pc, asr #1
    7334:	01000000 	mrseq	r0, (UNDEF: 0)
    7338:	0028779c 	mlaeq	r8, ip, r7, r7
    733c:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7340:	1d850000 	stcne	0, cr0, [r5]
    7344:	91020000 	mrsls	r0, (UNDEF: 2)
    7348:	ad3f0074 	ldcge	0, cr0, [pc, #-464]!	; 7180 <CPSR_IRQ_INHIBIT+0x7100>
    734c:	8e00001e 	mcrhi	0, 0, r0, cr0, cr14, {0}
    7350:	d4000028 	strle	r0, [r0], #-40	; 0xffffffd8
    7354:	2c0000ce 	stccs	0, cr0, [r0], {206}	; 0xce
    7358:	01000000 	mrseq	r0, (UNDEF: 0)
    735c:	0028b99c 	mlaeq	r8, ip, r9, fp
    7360:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7364:	1ee60000 	cdpne	0, 14, cr0, cr6, cr0, {0}
    7368:	91020000 	mrsls	r0, (UNDEF: 2)
    736c:	69644074 	stmdbvs	r4!, {r2, r4, r5, r6, lr}^
    7370:	37060072 	smlsdxcc	r6, r2, r0, r0
    7374:	0000a029 	andeq	sl, r0, r9, lsr #32
    7378:	70910200 	addsvc	r0, r1, r0, lsl #4
    737c:	00266e3d 	eoreq	r6, r6, sp, lsr lr
    7380:	34370600 	ldrtcc	r0, [r7], #-1536	; 0xfffffa00
    7384:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    7388:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    738c:	001e863b 	andseq	r8, lr, fp, lsr r6
    7390:	0028d000 	eoreq	sp, r8, r0
    7394:	00ce7c00 	sbceq	r7, lr, r0, lsl #24
    7398:	00005800 	andeq	r5, r0, r0, lsl #16
    739c:	dd9c0100 	ldfles	f0, [ip]
    73a0:	3c000028 	stccc	0, cr0, [r0], {40}	; 0x28
    73a4:	0000032c 	andeq	r0, r0, ip, lsr #6
    73a8:	00001ee6 	andeq	r1, r0, r6, ror #29
    73ac:	00749102 	rsbseq	r9, r4, r2, lsl #2
    73b0:	001e553b 	andseq	r5, lr, fp, lsr r5
    73b4:	0028f400 	eoreq	pc, r8, r0, lsl #8
    73b8:	00ce0c00 	sbceq	r0, lr, r0, lsl #24
    73bc:	00007000 	andeq	r7, r0, r0
    73c0:	369c0100 	ldrcc	r0, [ip], r0, lsl #2
    73c4:	3c000029 	stccc	0, cr0, [r0], {41}	; 0x29
    73c8:	0000032c 	andeq	r0, r0, ip, lsr #6
    73cc:	00001ee6 	andeq	r1, r0, r6, ror #29
    73d0:	3d6c9102 	stfccp	f1, [ip, #-8]!
    73d4:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    73d8:	b7282206 	strlt	r2, [r8, -r6, lsl #4]!
    73dc:	02000002 	andeq	r0, r0, #2
    73e0:	6e406891 	mcrvs	8, 2, r6, cr0, cr1, {4}
    73e4:	06006d75 			; <UNDEFINED> instruction: 0x06006d75
    73e8:	00793922 	rsbseq	r3, r9, r2, lsr #18
    73ec:	91020000 	mrsls	r0, (UNDEF: 2)
    73f0:	ce244864 	cdpgt	8, 2, cr4, cr4, cr4, {3}
    73f4:	00440000 	subeq	r0, r4, r0
    73f8:	693e0000 	ldmdbvs	lr!, {}	; <UNPREDICTABLE>
    73fc:	17260600 	strne	r0, [r6, -r0, lsl #12]!
    7400:	00000079 	andeq	r0, r0, r9, ror r0
    7404:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7408:	1e243f00 	cdpne	15, 2, cr3, cr4, cr0, {0}
    740c:	294d0000 	stmdbcs	sp, {}^	; <UNPREDICTABLE>
    7410:	cde00000 	stclgt	0, cr0, [r0]
    7414:	002c0000 	eoreq	r0, ip, r0
    7418:	9c010000 	stcls	0, cr0, [r1], {-0}
    741c:	00002978 	andeq	r2, r0, r8, ror r9
    7420:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7424:	001ee600 	andseq	lr, lr, r0, lsl #12
    7428:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    742c:	000cba3d 	andeq	fp, ip, sp, lsr sl
    7430:	211b0600 	tstcs	fp, r0, lsl #12
    7434:	00000d12 	andeq	r0, r0, r2, lsl sp
    7438:	40709102 	rsbsmi	r9, r0, r2, lsl #2
    743c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    7440:	79321b06 	ldmdbvc	r2!, {r1, r2, r8, r9, fp, ip}
    7444:	02000000 	andeq	r0, r0, #0
    7448:	41006c91 			; <UNDEFINED> instruction: 0x41006c91
    744c:	00001dfb 	strdeq	r1, [r0], -fp
    7450:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    7454:	0000298a 	andeq	r2, r0, sl, lsl #19
    7458:	00299d02 	eoreq	r9, r9, r2, lsl #26
    745c:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    7460:	1ee60000 	cdpne	0, 14, cr0, cr6, cr0, {0}
    7464:	56420000 	strbpl	r0, [r2], -r0
    7468:	3f00002e 	svccc	0x0000002e
    746c:	00000000 	andeq	r0, r0, r0
    7470:	00297843 	eoreq	r7, r9, r3, asr #16
    7474:	002e9900 	eoreq	r9, lr, r0, lsl #18
    7478:	0029b800 	eoreq	fp, r9, r0, lsl #16
    747c:	00cdac00 	sbceq	sl, sp, r0, lsl #24
    7480:	00003400 	andeq	r3, r0, r0, lsl #8
    7484:	c19c0100 	orrsgt	r0, ip, r0, lsl #2
    7488:	44000029 	strmi	r0, [r0], #-41	; 0xffffffd7
    748c:	0000298a 	andeq	r2, r0, sl, lsl #19
    7490:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7494:	00297843 	eoreq	r7, r9, r3, asr #16
    7498:	002b1200 	eoreq	r1, fp, r0, lsl #4
    749c:	0029dc00 	eoreq	sp, r9, r0, lsl #24
    74a0:	00cd6800 	sbceq	r6, sp, r0, lsl #16
    74a4:	00004400 	andeq	r4, r0, r0, lsl #8
    74a8:	e59c0100 	ldr	r0, [ip, #256]	; 0x100
    74ac:	44000029 	strmi	r0, [r0], #-41	; 0xffffffd7
    74b0:	0000298a 	andeq	r2, r0, sl, lsl #19
    74b4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    74b8:	001ddc45 	andseq	sp, sp, r5, asr #24
    74bc:	0029f300 	eoreq	pc, r9, r0, lsl #6
    74c0:	29fd0200 	ldmibcs	sp!, {r9}^
    74c4:	2c420000 	marcs	acc0, r0, r2
    74c8:	e6000003 	str	r0, [r0], -r3
    74cc:	0000001e 	andeq	r0, r0, lr, lsl r0
    74d0:	0029e543 	eoreq	lr, r9, r3, asr #10
    74d4:	00204000 	eoreq	r4, r0, r0
    74d8:	002a1800 	eoreq	r1, sl, r0, lsl #16
    74dc:	00cd2000 	sbceq	r2, sp, r0
    74e0:	00004800 	andeq	r4, r0, r0, lsl #16
    74e4:	219c0100 	orrscs	r0, ip, r0, lsl #2
    74e8:	4400002a 	strmi	r0, [r0], #-42	; 0xffffffd6
    74ec:	000029f3 	strdeq	r2, [r0], -r3
    74f0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    74f4:	0011233b 	andseq	r2, r1, fp, lsr r3
    74f8:	002a3800 	eoreq	r3, sl, r0, lsl #16
    74fc:	00ccb400 	sbceq	fp, ip, r0, lsl #8
    7500:	00006c00 	andeq	r6, r0, r0, lsl #24
    7504:	709c0100 	addsvc	r0, ip, r0, lsl #2
    7508:	3c00002a 	stccc	0, cr0, [r0], {42}	; 0x2a
    750c:	0000032c 	andeq	r0, r0, ip, lsr #6
    7510:	00001ef7 	strdeq	r1, [r0], -r7
    7514:	3d649102 	stfccp	f1, [r4, #-8]!
    7518:	00001e14 	andeq	r1, r0, r4, lsl lr
    751c:	b72a4905 	strlt	r4, [sl, -r5, lsl #18]!
    7520:	02000002 	andeq	r0, r0, #2
    7524:	6e3d6091 	mrcvs	0, 1, r6, cr13, cr1, {4}
    7528:	05000003 	streq	r0, [r0, #-3]
    752c:	01074049 	tsteq	r7, r9, asr #32
    7530:	91020000 	mrsls	r0, (UNDEF: 2)
    7534:	00663e5c 	rsbeq	r3, r6, ip, asr lr
    7538:	52205005 	eorpl	r5, r0, #5
    753c:	02000020 	andeq	r0, r0, #32
    7540:	3f006c91 	svccc	0x00006c91
    7544:	00001100 	andeq	r1, r0, r0, lsl #2
    7548:	00002a87 	andeq	r2, r0, r7, lsl #21
    754c:	0000cc94 	muleq	r0, r4, ip
    7550:	00000020 	andeq	r0, r0, r0, lsr #32
    7554:	2a949c01 	bcs	fe52e560 <_bss_end+0xfe51c8b0>
    7558:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    755c:	f7000003 			; <UNDEFINED> instruction: 0xf7000003
    7560:	0200001e 	andeq	r0, r0, #30
    7564:	3f007491 	svccc	0x00007491
    7568:	0000201f 	andeq	r2, r0, pc, lsl r0
    756c:	00002aab 	andeq	r2, r0, fp, lsr #21
    7570:	0000cc68 	andeq	ip, r0, r8, ror #24
    7574:	0000002c 	andeq	r0, r0, ip, lsr #32
    7578:	2ad69c01 	bcs	ff5ae584 <_bss_end+0xff59c8d4>
    757c:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7580:	58000003 	stmdapl	r0, {r0, r1}
    7584:	02000020 	andeq	r0, r0, #32
    7588:	64407491 	strbvs	r7, [r0], #-1169	; 0xfffffb6f
    758c:	05007269 	streq	r7, [r0, #-617]	; 0xfffffd97
    7590:	00a0293b 	adceq	r2, r0, fp, lsr r9
    7594:	91020000 	mrsls	r0, (UNDEF: 2)
    7598:	266e3d70 			; <UNDEFINED> instruction: 0x266e3d70
    759c:	3b050000 	blcc	1475a4 <_bss_end+0x1358f4>
    75a0:	0009b834 	andeq	fp, r9, r4, lsr r8
    75a4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    75a8:	1ff83b00 	svcne	0x00f83b00
    75ac:	2aed0000 	bcs	ffb475b4 <_bss_end+0xffb35904>
    75b0:	cc100000 	ldcgt	0, cr0, [r0], {-0}
    75b4:	00580000 	subseq	r0, r8, r0
    75b8:	9c010000 	stcls	0, cr0, [r1], {-0}
    75bc:	00002afa 	strdeq	r2, [r0], -sl
    75c0:	00032c3c 	andeq	r2, r3, ip, lsr ip
    75c4:	00205800 	eoreq	r5, r0, r0, lsl #16
    75c8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    75cc:	1fc73b00 	svcne	0x00c73b00
    75d0:	2b110000 	blcs	4475d8 <_bss_end+0x435928>
    75d4:	cba00000 	blgt	fe8075dc <_bss_end+0xfe7f592c>
    75d8:	00700000 	rsbseq	r0, r0, r0
    75dc:	9c010000 	stcls	0, cr0, [r1], {-0}
    75e0:	00002b53 	andeq	r2, r0, r3, asr fp
    75e4:	00032c3c 	andeq	r2, r3, ip, lsr ip
    75e8:	00205800 	eoreq	r5, r0, r0, lsl #16
    75ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    75f0:	000cba3d 	andeq	fp, ip, sp, lsr sl
    75f4:	28270500 	stmdacs	r7!, {r8, sl}
    75f8:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    75fc:	40689102 	rsbmi	r9, r8, r2, lsl #2
    7600:	006d756e 	rsbeq	r7, sp, lr, ror #10
    7604:	79392705 	ldmdbvc	r9!, {r0, r2, r8, r9, sl, sp}
    7608:	02000000 	andeq	r0, r0, #0
    760c:	b8486491 	stmdalt	r8, {r0, r4, r7, sl, sp, lr}^
    7610:	440000cb 	strmi	r0, [r0], #-203	; 0xffffff35
    7614:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    7618:	2a050069 	bcs	1477c4 <_bss_end+0x135b14>
    761c:	00007917 	andeq	r7, r0, r7, lsl r9
    7620:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7624:	963b0000 	ldrtls	r0, [fp], -r0
    7628:	6a00001f 	bvs	76ac <CPSR_IRQ_INHIBIT+0x762c>
    762c:	4800002b 	stmdami	r0, {r0, r1, r3, r5}
    7630:	580000cb 	stmdapl	r0, {r0, r1, r3, r6, r7}
    7634:	01000000 	mrseq	r0, (UNDEF: 0)
    7638:	002b959c 	mlaeq	fp, ip, r5, r9
    763c:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7640:	20580000 	subscs	r0, r8, r0
    7644:	91020000 	mrsls	r0, (UNDEF: 2)
    7648:	0cba3d74 	ldceq	13, cr3, [sl], #464	; 0x1d0
    764c:	1b050000 	blne	147654 <_bss_end+0x1359a4>
    7650:	000d1221 	andeq	r1, sp, r1, lsr #4
    7654:	70910200 	addsvc	r0, r1, r0, lsl #4
    7658:	6d756e40 	ldclvs	14, cr6, [r5, #-256]!	; 0xffffff00
    765c:	321b0500 	andscc	r0, fp, #0, 10
    7660:	00000079 	andeq	r0, r0, r9, ror r0
    7664:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7668:	001f6d41 	andseq	r6, pc, r1, asr #26
    766c:	0009b800 	andeq	fp, r9, r0, lsl #16
    7670:	002ba700 	eoreq	sl, fp, r0, lsl #14
    7674:	2bba0200 	blcs	fee87e7c <_bss_end+0xfee761cc>
    7678:	2c420000 	marcs	acc0, r0, r2
    767c:	58000003 	stmdapl	r0, {r0, r1}
    7680:	42000020 	andmi	r0, r0, #32
    7684:	00002e56 	andeq	r2, r0, r6, asr lr
    7688:	0000003f 	andeq	r0, r0, pc, lsr r0
    768c:	2b954300 	blcs	fe558294 <_bss_end+0xfe5465e4>
    7690:	205e0000 	subscs	r0, lr, r0
    7694:	2bd50000 	blcs	ff54769c <_bss_end+0xff5359ec>
    7698:	cb140000 	blgt	5076a0 <_bss_end+0x4f59f0>
    769c:	00340000 	eorseq	r0, r4, r0
    76a0:	9c010000 	stcls	0, cr0, [r1], {-0}
    76a4:	00002bde 	ldrdeq	r2, [r0], -lr
    76a8:	002ba744 	eoreq	sl, fp, r4, asr #14
    76ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    76b0:	2b954300 	blcs	fe5582b8 <_bss_end+0xfe546608>
    76b4:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
    76b8:	2bf90000 	blcs	ffe476c0 <_bss_end+0xffe35a10>
    76bc:	cad00000 	bgt	ff4076c4 <_bss_end+0xff3f5a14>
    76c0:	00440000 	subeq	r0, r4, r0
    76c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    76c8:	00002c02 	andeq	r2, r0, r2, lsl #24
    76cc:	002ba744 	eoreq	sl, fp, r4, asr #14
    76d0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    76d4:	1f4e4500 	svcne	0x004e4500
    76d8:	2c100000 	ldccs	0, cr0, [r0], {-0}
    76dc:	1a020000 	bne	876e4 <_bss_end+0x75a34>
    76e0:	4200002c 	andmi	r0, r0, #44	; 0x2c
    76e4:	0000032c 	andeq	r0, r0, ip, lsr #6
    76e8:	00002058 	andeq	r2, r0, r8, asr r0
    76ec:	2c024300 	stccs	3, cr4, [r2], {-0}
    76f0:	24560000 	ldrbcs	r0, [r6], #-0
    76f4:	2c350000 	ldccs	0, cr0, [r5], #-0
    76f8:	ca880000 	bgt	fe207700 <_bss_end+0xfe1f5a50>
    76fc:	00480000 	subeq	r0, r8, r0
    7700:	9c010000 	stcls	0, cr0, [r1], {-0}
    7704:	00002c3e 	andeq	r2, r0, lr, lsr ip
    7708:	002c1044 	eoreq	r1, ip, r4, asr #32
    770c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7710:	0de93b00 			; <UNDEFINED> instruction: 0x0de93b00
    7714:	2c550000 	mracs	r0, r5, acc0
    7718:	ca200000 	bgt	807720 <_bss_end+0x7f5a70>
    771c:	00680000 	rsbeq	r0, r8, r0
    7720:	9c010000 	stcls	0, cr0, [r1], {-0}
    7724:	00002c9c 	muleq	r0, ip, ip
    7728:	00032c3c 	andeq	r2, r3, ip, lsr ip
    772c:	00206900 	eoreq	r6, r0, r0, lsl #18
    7730:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7734:	001e143d 	andseq	r1, lr, sp, lsr r4
    7738:	2a4c0400 	bcs	1308740 <_bss_end+0x12f6a90>
    773c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    7740:	3d609102 	stfccp	f1, [r0, #-8]!
    7744:	0000036e 	andeq	r0, r0, lr, ror #6
    7748:	07404c04 	strbeq	r4, [r0, -r4, lsl #24]
    774c:	02000001 	andeq	r0, r0, #1
    7750:	d3465c91 	movtle	r5, #27793	; 0x6c91
    7754:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    7758:	00380d4e 	eorseq	r0, r8, lr, asr #26
    775c:	91020000 	mrsls	r0, (UNDEF: 2)
    7760:	00663e6c 	rsbeq	r3, r6, ip, ror #28
    7764:	c9185204 	ldmdbgt	r8, {r2, r9, ip, lr}
    7768:	02000021 	andeq	r0, r0, #33	; 0x21
    776c:	3f006891 	svccc	0x00006891
    7770:	00000dc6 	andeq	r0, r0, r6, asr #27
    7774:	00002cb3 			; <UNDEFINED> instruction: 0x00002cb3
    7778:	0000ca00 	andeq	ip, r0, r0, lsl #20
    777c:	00000020 	andeq	r0, r0, r0, lsr #32
    7780:	2cc09c01 	stclcs	12, cr9, [r0], {1}
    7784:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7788:	69000003 	stmdbvs	r0, {r0, r1}
    778c:	02000020 	andeq	r0, r0, #32
    7790:	3f007491 	svccc	0x00007491
    7794:	00002196 	muleq	r0, r6, r1
    7798:	00002cd7 	ldrdeq	r2, [r0], -r7
    779c:	0000c9bc 			; <UNDEFINED> instruction: 0x0000c9bc
    77a0:	00000044 	andeq	r0, r0, r4, asr #32
    77a4:	2d029c01 	stccs	12, cr9, [r2, #-4]
    77a8:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    77ac:	cf000003 	svcgt	0x00000003
    77b0:	02000021 	andeq	r0, r0, #33	; 0x21
    77b4:	64407491 	strbvs	r7, [r0], #-1169	; 0xfffffb6f
    77b8:	04007269 	streq	r7, [r0], #-617	; 0xfffffd97
    77bc:	00a0293a 	adceq	r2, r0, sl, lsr r9
    77c0:	91020000 	mrsls	r0, (UNDEF: 2)
    77c4:	266e3d70 			; <UNDEFINED> instruction: 0x266e3d70
    77c8:	3a040000 	bcc	1077d0 <_bss_end+0xf5b20>
    77cc:	0009b834 	andeq	fp, r9, r4, lsr r8
    77d0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    77d4:	216f3f00 	cmncs	pc, r0, lsl #30
    77d8:	2d190000 	ldccs	0, cr0, [r9, #-0]
    77dc:	c9740000 	ldmdbgt	r4!, {}^	; <UNPREDICTABLE>
    77e0:	00480000 	subeq	r0, r8, r0
    77e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    77e8:	00002d26 	andeq	r2, r0, r6, lsr #26
    77ec:	00032c3c 	andeq	r2, r3, ip, lsr ip
    77f0:	0021cf00 	eoreq	ip, r1, r0, lsl #30
    77f4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    77f8:	213e3b00 	teqcs	lr, r0, lsl #22
    77fc:	2d3d0000 	ldccs	0, cr0, [sp, #-0]
    7800:	c90c0000 	stmdbgt	ip, {}	; <UNPREDICTABLE>
    7804:	00680000 	rsbeq	r0, r8, r0
    7808:	9c010000 	stcls	0, cr0, [r1], {-0}
    780c:	00002d68 	andeq	r2, r0, r8, ror #26
    7810:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7814:	0021cf00 	eoreq	ip, r1, r0, lsl #30
    7818:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    781c:	000cba3d 	andeq	fp, ip, sp, lsr sl
    7820:	281e0400 	ldmdacs	lr, {sl}
    7824:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    7828:	40709102 	rsbsmi	r9, r0, r2, lsl #2
    782c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    7830:	79391e04 	ldmdbvc	r9!, {r2, r9, sl, fp, ip}
    7834:	02000000 	andeq	r0, r0, #0
    7838:	3f006c91 	svccc	0x00006c91
    783c:	0000210d 	andeq	r2, r0, sp, lsl #2
    7840:	00002d7f 	andeq	r2, r0, pc, ror sp
    7844:	0000c8e0 	andeq	ip, r0, r0, ror #17
    7848:	0000002c 	andeq	r0, r0, ip, lsr #32
    784c:	2daa9c01 	stccs	12, cr9, [sl, #4]!
    7850:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7854:	cf000003 	svcgt	0x00000003
    7858:	02000021 	andeq	r0, r0, #33	; 0x21
    785c:	ba3d7491 	blt	f64aa8 <_bss_end+0xf52df8>
    7860:	0400000c 	streq	r0, [r0], #-12
    7864:	0d122119 	ldfeqs	f2, [r2, #-100]	; 0xffffff9c
    7868:	91020000 	mrsls	r0, (UNDEF: 2)
    786c:	756e4070 	strbvc	r4, [lr, #-112]!	; 0xffffff90
    7870:	1904006d 	stmdbne	r4, {r0, r2, r3, r5, r6}
    7874:	00007932 	andeq	r7, r0, r2, lsr r9
    7878:	6c910200 	lfmvs	f0, 4, [r1], {0}
    787c:	20e44100 	rsccs	r4, r4, r0, lsl #2
    7880:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    7884:	2dbc0000 	ldccs	0, cr0, [ip]
    7888:	cf020000 	svcgt	0x00020000
    788c:	4200002d 	andmi	r0, r0, #45	; 0x2d
    7890:	0000032c 	andeq	r0, r0, ip, lsr #6
    7894:	000021cf 	andeq	r2, r0, pc, asr #3
    7898:	002e5642 	eoreq	r5, lr, r2, asr #12
    789c:	00003f00 	andeq	r3, r0, r0, lsl #30
    78a0:	aa430000 	bge	10c78a8 <_bss_end+0x10b5bf8>
    78a4:	ee00002d 	cdp	0, 0, cr0, cr0, cr13, {1}
    78a8:	ea000020 	b	7930 <CPSR_IRQ_INHIBIT+0x78b0>
    78ac:	ac00002d 	stcge	0, cr0, [r0], {45}	; 0x2d
    78b0:	340000c8 	strcc	r0, [r0], #-200	; 0xffffff38
    78b4:	01000000 	mrseq	r0, (UNDEF: 0)
    78b8:	002df39c 	mlaeq	sp, ip, r3, pc	; <UNPREDICTABLE>
    78bc:	2dbc4400 	cfldrscs	mvf4, [ip]
    78c0:	91020000 	mrsls	r0, (UNDEF: 2)
    78c4:	aa430074 	bge	10c7a9c <_bss_end+0x10b5dec>
    78c8:	8800002d 	stmdahi	r0, {r0, r2, r3, r5}
    78cc:	0e00001e 	mcreq	0, 0, r0, cr0, cr14, {0}
    78d0:	6800002e 	stmdavs	r0, {r1, r2, r3, r5}
    78d4:	440000c8 	strmi	r0, [r0], #-200	; 0xffffff38
    78d8:	01000000 	mrseq	r0, (UNDEF: 0)
    78dc:	002e179c 	mlaeq	lr, ip, r7, r1
    78e0:	2dbc4400 	cfldrscs	mvf4, [ip]
    78e4:	91020000 	mrsls	r0, (UNDEF: 2)
    78e8:	c0450074 	subgt	r0, r5, r4, ror r0
    78ec:	25000020 	strcs	r0, [r0, #-32]	; 0xffffffe0
    78f0:	0200002e 	andeq	r0, r0, #46	; 0x2e
    78f4:	00002e3b 	andeq	r2, r0, fp, lsr lr
    78f8:	00032c42 	andeq	r2, r3, r2, asr #24
    78fc:	0021cf00 	eoreq	ip, r1, r0, lsl #30
    7900:	29d34900 	ldmibcs	r3, {r8, fp, lr}^
    7904:	0f040000 	svceq	0x00040000
    7908:	00003817 	andeq	r3, r0, r7, lsl r8
    790c:	17430000 	strbne	r0, [r3, -r0]
    7910:	f000002e 			; <UNDEFINED> instruction: 0xf000002e
    7914:	56000024 	strpl	r0, [r0], -r4, lsr #32
    7918:	1c00002e 	stcne	0, cr0, [r0], {46}	; 0x2e
    791c:	4c0000c8 	stcmi	0, cr0, [r0], {200}	; 0xc8
    7920:	01000000 	mrseq	r0, (UNDEF: 0)
    7924:	002e679c 	mlaeq	lr, ip, r7, r6
    7928:	2e254400 	cdpcs	4, 2, cr4, cr5, cr0, {0}
    792c:	91020000 	mrsls	r0, (UNDEF: 2)
    7930:	2e2e4474 	mcrcs	4, 1, r4, cr14, cr4, {3}
    7934:	91020000 	mrsls	r0, (UNDEF: 2)
    7938:	803b0070 	eorshi	r0, fp, r0, ror r0
    793c:	7e00000a 	cdpvc	0, 0, cr0, cr0, cr10, {0}
    7940:	c400002e 	strgt	r0, [r0], #-46	; 0xffffffd2
    7944:	580000c6 	stmdapl	r0, {r1, r2, r6, r7}
    7948:	01000001 	tsteq	r0, r1
    794c:	002ec59c 	mlaeq	lr, ip, r5, ip
    7950:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7954:	21e00000 	mvncs	r0, r0
    7958:	91020000 	mrsls	r0, (UNDEF: 2)
    795c:	1e143d64 	cdpne	13, 1, cr3, cr4, cr4, {3}
    7960:	57030000 	strpl	r0, [r3, -r0]
    7964:	0002b72a 	andeq	fp, r2, sl, lsr #14
    7968:	60910200 	addsvs	r0, r1, r0, lsl #4
    796c:	00036e3d 	andeq	r6, r3, sp, lsr lr
    7970:	40570300 	subsmi	r0, r7, r0, lsl #6
    7974:	00000107 	andeq	r0, r0, r7, lsl #2
    7978:	465c9102 	ldrbmi	r9, [ip], -r2, lsl #2
    797c:	000027b3 			; <UNDEFINED> instruction: 0x000027b3
    7980:	380d5e03 	stmdacc	sp, {r0, r1, r9, sl, fp, ip, lr}
    7984:	02000000 	andeq	r0, r0, #0
    7988:	663e6c91 			; <UNDEFINED> instruction: 0x663e6c91
    798c:	15710300 	ldrbne	r0, [r1, #-768]!	; 0xfffffd00
    7990:	00002364 	andeq	r2, r0, r4, ror #6
    7994:	00689102 	rsbeq	r9, r8, r2, lsl #2
    7998:	000a5d3f 	andeq	r5, sl, pc, lsr sp
    799c:	002edc00 	eoreq	sp, lr, r0, lsl #24
    79a0:	00c6a400 	sbceq	sl, r6, r0, lsl #8
    79a4:	00002000 	andeq	r2, r0, r0
    79a8:	e99c0100 	ldmib	ip, {r8}
    79ac:	3c00002e 	stccc	0, cr0, [r0], {46}	; 0x2e
    79b0:	0000032c 	andeq	r0, r0, ip, lsr #6
    79b4:	000021e0 	andeq	r2, r0, r0, ror #3
    79b8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    79bc:	0023313f 	eoreq	r3, r3, pc, lsr r1
    79c0:	002f0000 	eoreq	r0, pc, r0
    79c4:	00c67800 	sbceq	r7, r6, r0, lsl #16
    79c8:	00002c00 	andeq	r2, r0, r0, lsl #24
    79cc:	2b9c0100 	blcs	fe707dd4 <_bss_end+0xfe6f6124>
    79d0:	3c00002f 	stccc	0, cr0, [r0], {47}	; 0x2f
    79d4:	0000032c 	andeq	r0, r0, ip, lsr #6
    79d8:	0000236a 	andeq	r2, r0, sl, ror #6
    79dc:	40749102 	rsbsmi	r9, r4, r2, lsl #2
    79e0:	00726964 	rsbseq	r6, r2, r4, ror #18
    79e4:	a0294703 	eorge	r4, r9, r3, lsl #14
    79e8:	02000000 	andeq	r0, r0, #0
    79ec:	6e3d7091 	mrcvs	0, 1, r7, cr13, cr1, {4}
    79f0:	03000026 	movweq	r0, #38	; 0x26
    79f4:	09b83447 	ldmibeq	r8!, {r0, r1, r2, r6, sl, ip, sp}
    79f8:	91020000 	mrsls	r0, (UNDEF: 2)
    79fc:	0a3b006c 	beq	ec7bb4 <_bss_end+0xeb5f04>
    7a00:	42000023 	andmi	r0, r0, #35	; 0x23
    7a04:	dc00002f 	stcle	0, cr0, [r0], {47}	; 0x2f
    7a08:	9c0000c5 	stcls	0, cr0, [r0], {197}	; 0xc5
    7a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    7a10:	002f4f9c 	mlaeq	pc, ip, pc, r4	; <UNPREDICTABLE>
    7a14:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7a18:	236a0000 	cmncs	sl, #0
    7a1c:	91020000 	mrsls	r0, (UNDEF: 2)
    7a20:	d93b0074 	ldmdble	fp!, {r2, r4, r5, r6}
    7a24:	66000022 	strvs	r0, [r0], -r2, lsr #32
    7a28:	6000002f 	andvs	r0, r0, pc, lsr #32
    7a2c:	7c0000c5 	stcvc	0, cr0, [r0], {197}	; 0xc5
    7a30:	01000000 	mrseq	r0, (UNDEF: 0)
    7a34:	002f919c 	mlaeq	pc, ip, r1, r9	; <UNPREDICTABLE>
    7a38:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7a3c:	236a0000 	cmncs	sl, #0
    7a40:	91020000 	mrsls	r0, (UNDEF: 2)
    7a44:	0cba3d74 	ldceq	13, cr3, [sl], #464	; 0x1d0
    7a48:	2f030000 	svccs	0x00030000
    7a4c:	0002b728 	andeq	fp, r2, r8, lsr #14
    7a50:	70910200 	addsvc	r0, r1, r0, lsl #4
    7a54:	6d756e40 	ldclvs	14, cr6, [r5, #-256]!	; 0xffffff00
    7a58:	392f0300 	stmdbcc	pc!, {r8, r9}	; <UNPREDICTABLE>
    7a5c:	00000079 	andeq	r0, r0, r9, ror r0
    7a60:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7a64:	0022a83b 	eoreq	sl, r2, fp, lsr r8
    7a68:	002fa800 	eoreq	sl, pc, r0, lsl #16
    7a6c:	00c4e000 	sbceq	lr, r4, r0
    7a70:	00008000 	andeq	r8, r0, r0
    7a74:	d39c0100 	orrsle	r0, ip, #0, 2
    7a78:	3c00002f 	stccc	0, cr0, [r0], {47}	; 0x2f
    7a7c:	0000032c 	andeq	r0, r0, ip, lsr #6
    7a80:	0000236a 	andeq	r2, r0, sl, ror #6
    7a84:	3d749102 	ldfccp	f1, [r4, #-8]!
    7a88:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    7a8c:	12212303 	eorne	r2, r1, #201326592	; 0xc000000
    7a90:	0200000d 	andeq	r0, r0, #13
    7a94:	6e407091 	mcrvs	0, 2, r7, cr0, cr1, {4}
    7a98:	03006d75 	movweq	r6, #3445	; 0xd75
    7a9c:	00793223 	rsbseq	r3, r9, r3, lsr #4
    7aa0:	91020000 	mrsls	r0, (UNDEF: 2)
    7aa4:	7f41006c 	svcvc	0x0041006c
    7aa8:	b8000022 	stmdalt	r0, {r1, r5}
    7aac:	e5000009 	str	r0, [r0, #-9]
    7ab0:	0200002f 	andeq	r0, r0, #47	; 0x2f
    7ab4:	00002ff8 	strdeq	r2, [r0], -r8
    7ab8:	00032c42 	andeq	r2, r3, r2, asr #24
    7abc:	00236a00 	eoreq	r6, r3, r0, lsl #20
    7ac0:	2e564200 	cdpcs	2, 5, cr4, cr6, cr0, {0}
    7ac4:	003f0000 	eorseq	r0, pc, r0
    7ac8:	43000000 	movwmi	r0, #0
    7acc:	00002fd3 	ldrdeq	r2, [r0], -r3
    7ad0:	000020c3 	andeq	r2, r0, r3, asr #1
    7ad4:	00003013 	andeq	r3, r0, r3, lsl r0
    7ad8:	0000c4ac 	andeq	ip, r0, ip, lsr #9
    7adc:	00000034 	andeq	r0, r0, r4, lsr r0
    7ae0:	301c9c01 	andscc	r9, ip, r1, lsl #24
    7ae4:	e5440000 	strb	r0, [r4, #-0]
    7ae8:	0200002f 	andeq	r0, r0, #47	; 0x2f
    7aec:	43007491 	movwmi	r7, #1169	; 0x491
    7af0:	00002fd3 	ldrdeq	r2, [r0], -r3
    7af4:	00002ede 	ldrdeq	r2, [r0], -lr
    7af8:	00003037 	andeq	r3, r0, r7, lsr r0
    7afc:	0000c468 	andeq	ip, r0, r8, ror #8
    7b00:	00000044 	andeq	r0, r0, r4, asr #32
    7b04:	30409c01 	subcc	r9, r0, r1, lsl #24
    7b08:	e5440000 	strb	r0, [r4, #-0]
    7b0c:	0200002f 	andeq	r0, r0, #47	; 0x2f
    7b10:	45007491 	strmi	r7, [r0, #-1169]	; 0xfffffb6f
    7b14:	00002251 	andeq	r2, r0, r1, asr r2
    7b18:	0000304e 	andeq	r3, r0, lr, asr #32
    7b1c:	00307c02 	eorseq	r7, r0, r2, lsl #24
    7b20:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    7b24:	236a0000 	cmncs	sl, #0
    7b28:	bb490000 	bllt	1247b30 <_bss_end+0x1235e80>
    7b2c:	0300001e 	movweq	r0, #30
    7b30:	00381415 	eorseq	r1, r8, r5, lsl r4
    7b34:	15490000 	strbne	r0, [r9, #-0]
    7b38:	03000007 	movweq	r0, #7
    7b3c:	02aa2015 	adceq	r2, sl, #21
    7b40:	38490000 	stmdacc	r9, {}^	; <UNPREDICTABLE>
    7b44:	03000004 	movweq	r0, #4
    7b48:	02aa2b15 	adceq	r2, sl, #21504	; 0x5400
    7b4c:	43000000 	movwmi	r0, #0
    7b50:	00003040 	andeq	r3, r0, r0, asr #32
    7b54:	00002d22 	andeq	r2, r0, r2, lsr #26
    7b58:	00003097 	muleq	r0, r7, r0
    7b5c:	0000c3ec 	andeq	ip, r0, ip, ror #7
    7b60:	0000007c 	andeq	r0, r0, ip, ror r0
    7b64:	30b89c01 	adcscc	r9, r8, r1, lsl #24
    7b68:	4e440000 	cdpmi	0, 4, cr0, cr4, cr0, {0}
    7b6c:	02000030 	andeq	r0, r0, #48	; 0x30
    7b70:	57447491 			; <UNDEFINED> instruction: 0x57447491
    7b74:	02000030 	andeq	r0, r0, #48	; 0x30
    7b78:	63447091 	movtvs	r7, #16529	; 0x4091
    7b7c:	02000030 	andeq	r0, r0, #48	; 0x30
    7b80:	6f446f91 	svcvs	0x00446f91
    7b84:	02000030 	andeq	r0, r0, #48	; 0x30
    7b88:	41006e91 			; <UNDEFINED> instruction: 0x41006e91
    7b8c:	00000423 	andeq	r0, r0, r3, lsr #8
    7b90:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    7b94:	000030ca 	andeq	r3, r0, sl, asr #1
    7b98:	0030dd02 	eorseq	sp, r0, r2, lsl #26
    7b9c:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    7ba0:	050f0000 	streq	r0, [pc, #-0]	; 7ba8 <CPSR_IRQ_INHIBIT+0x7b28>
    7ba4:	56420000 	strbpl	r0, [r2], -r0
    7ba8:	3f00002e 	svccc	0x0000002e
    7bac:	00000000 	andeq	r0, r0, r0
    7bb0:	0030b843 	eorseq	fp, r0, r3, asr #16
    7bb4:	001e9f00 	andseq	r9, lr, r0, lsl #30
    7bb8:	0030f800 	eorseq	pc, r0, r0, lsl #16
    7bbc:	00c3b800 	sbceq	fp, r3, r0, lsl #16
    7bc0:	00003400 	andeq	r3, r0, r0, lsl #8
    7bc4:	019c0100 	orrseq	r0, ip, r0, lsl #2
    7bc8:	44000031 	strmi	r0, [r0], #-49	; 0xffffffcf
    7bcc:	000030ca 	andeq	r3, r0, sl, asr #1
    7bd0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7bd4:	0030b84a 	eorseq	fp, r0, sl, asr #16
    7bd8:	002c6d00 	eoreq	r6, ip, r0, lsl #26
    7bdc:	00311c00 	eorseq	r1, r1, r0, lsl #24
    7be0:	00c38400 	sbceq	r8, r3, r0, lsl #8
    7be4:	00003400 	andeq	r3, r0, r0, lsl #8
    7be8:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    7bec:	44000031 	strmi	r0, [r0], #-49	; 0xffffffcf
    7bf0:	000030ca 	andeq	r3, r0, sl, asr #1
    7bf4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7bf8:	0003fc4b 	andeq	pc, r3, fp, asr #24
    7bfc:	07240100 	streq	r0, [r4, -r0, lsl #2]!
    7c00:	00003136 	andeq	r3, r0, r6, lsr r1
    7c04:	00314002 	eorseq	r4, r1, r2
    7c08:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    7c0c:	050f0000 	streq	r0, [pc, #-0]	; 7c14 <CPSR_IRQ_INHIBIT+0x7b94>
    7c10:	4a000000 	bmi	7c18 <CPSR_IRQ_INHIBIT+0x7b98>
    7c14:	00003125 	andeq	r3, r0, r5, lsr #2
    7c18:	00002400 	andeq	r2, r0, r0, lsl #8
    7c1c:	0000315b 	andeq	r3, r0, fp, asr r1
    7c20:	0000c350 	andeq	ip, r0, r0, asr r3
    7c24:	00000034 	andeq	r0, r0, r4, lsr r0
    7c28:	31649c01 	cmncc	r4, r1, lsl #24
    7c2c:	36440000 	strbcc	r0, [r4], -r0
    7c30:	02000031 	andeq	r0, r0, #49	; 0x31
    7c34:	4c007491 	cfstrsmi	mvf7, [r0], {145}	; 0x91
    7c38:	00000f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    7c3c:	8e0d3d02 	cdphi	13, 0, cr3, cr13, cr2, {0}
    7c40:	0000000e 	andeq	r0, r0, lr
    7c44:	300000ab 	andcc	r0, r0, fp, lsr #1
    7c48:	01000000 	mrseq	r0, (UNDEF: 0)
    7c4c:	0031949c 	mlaseq	r1, ip, r4, r9
    7c50:	00704000 	rsbseq	r4, r0, r0
    7c54:	b8233d02 	stmdalt	r3!, {r1, r8, sl, fp, ip, sp}
    7c58:	02000009 	andeq	r0, r0, #9
    7c5c:	794d7491 	stmdbvc	sp, {r0, r4, r7, sl, ip, sp, lr}^
    7c60:	02000000 	andeq	r0, r0, #0
    7c64:	4e007091 	mcrmi	0, 0, r7, cr0, cr1, {4}
    7c68:	00002943 	andeq	r2, r0, r3, asr #18
    7c6c:	a90e2902 	stmdbge	lr, {r1, r8, fp, sp}
    7c70:	b8000025 	stmdalt	r0, {r0, r2, r5}
    7c74:	20000009 	andcs	r0, r0, r9
    7c78:	300000c3 	andcc	r0, r0, r3, asr #1
    7c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    7c80:	0031c29c 	mlaseq	r1, ip, r2, ip
    7c84:	0e483d00 	cdpeq	13, 4, cr3, cr8, cr0, {0}
    7c88:	29020000 	stmdbcs	r2, {}	; <UNPREDICTABLE>
    7c8c:	00007924 	andeq	r7, r0, r4, lsr #18
    7c90:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7c94:	04d63f00 	ldrbeq	r3, [r6], #3840	; 0xf00
    7c98:	31d90000 	bicscc	r0, r9, r0
    7c9c:	c2f40000 	rscsgt	r0, r4, #0
    7ca0:	002c0000 	eoreq	r0, ip, r0
    7ca4:	9c010000 	stcls	0, cr0, [r1], {-0}
    7ca8:	00003204 	andeq	r3, r0, r4, lsl #4
    7cac:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7cb0:	00050f00 	andeq	r0, r5, r0, lsl #30
    7cb4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7cb8:	72696440 	rsbvc	r6, r9, #64, 8	; 0x40000000
    7cbc:	293b0100 	ldmdbcs	fp!, {r8}
    7cc0:	000000a0 	andeq	r0, r0, r0, lsr #1
    7cc4:	3d709102 	ldfccp	f1, [r0, #-8]!
    7cc8:	0000266e 	andeq	r2, r0, lr, ror #12
    7ccc:	b8343b01 	ldmdalt	r4!, {r0, r8, r9, fp, ip, sp}
    7cd0:	02000009 	andeq	r0, r0, #9
    7cd4:	3f006c91 	svccc	0x00006c91
    7cd8:	000004af 	andeq	r0, r0, pc, lsr #9
    7cdc:	0000321b 	andeq	r3, r0, fp, lsl r2
    7ce0:	0000c2d0 	ldrdeq	ip, [r0], -r0
    7ce4:	00000024 	andeq	r0, r0, r4, lsr #32
    7ce8:	32289c01 	eorcc	r9, r8, #256	; 0x100
    7cec:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7cf0:	0f000003 	svceq	0x00000003
    7cf4:	02000005 	andeq	r0, r0, #5
    7cf8:	3f007491 	svccc	0x00007491
    7cfc:	0000047e 	andeq	r0, r0, lr, ror r4
    7d00:	0000323f 	andeq	r3, r0, pc, lsr r2
    7d04:	0000c2a4 	andeq	ip, r0, r4, lsr #5
    7d08:	0000002c 	andeq	r0, r0, ip, lsr #32
    7d0c:	326a9c01 	rsbcc	r9, sl, #256	; 0x100
    7d10:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7d14:	0f000003 	svceq	0x00000003
    7d18:	02000005 	andeq	r0, r0, #5
    7d1c:	ba3d7491 	blt	f64f68 <_bss_end+0xf532b8>
    7d20:	0100000c 	tsteq	r0, ip
    7d24:	02b72831 	adcseq	r2, r7, #3211264	; 0x310000
    7d28:	91020000 	mrsls	r0, (UNDEF: 2)
    7d2c:	756e4070 	strbvc	r4, [lr, #-112]!	; 0xffffff90
    7d30:	3101006d 	tstcc	r1, sp, rrx
    7d34:	00007939 	andeq	r7, r0, r9, lsr r9
    7d38:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7d3c:	044d4f00 	strbeq	r4, [sp], #-3840	; 0xfffff100
    7d40:	327d0000 	rsbscc	r0, sp, #0
    7d44:	c2780000 	rsbsgt	r0, r8, #0
    7d48:	002c0000 	eoreq	r0, ip, r0
    7d4c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7d50:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7d54:	00050f00 	andeq	r0, r5, r0, lsl #30
    7d58:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7d5c:	000cba3d 	andeq	fp, ip, sp, lsr sl
    7d60:	212b0100 			; <UNDEFINED> instruction: 0x212b0100
    7d64:	00000d12 	andeq	r0, r0, r2, lsl sp
    7d68:	40709102 	rsbsmi	r9, r0, r2, lsl #2
    7d6c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    7d70:	79322b01 	ldmdbvc	r2!, {r0, r8, r9, fp, sp}
    7d74:	02000000 	andeq	r0, r0, #0
    7d78:	00006c91 	muleq	r0, r1, ip
    7d7c:	00000b1f 	andeq	r0, r0, pc, lsl fp
    7d80:	1ebd0004 	cdpne	0, 11, cr0, cr13, cr4, {0}
    7d84:	01040000 	mrseq	r0, (UNDEF: 4)
    7d88:	00000014 	andeq	r0, r0, r4, lsl r0
    7d8c:	00344b04 	eorseq	r4, r4, r4, lsl #22
    7d90:	0000c500 	andeq	ip, r0, r0, lsl #10
    7d94:	00d4bc00 	sbcseq	fp, r4, r0, lsl #24
    7d98:	0002e400 	andeq	lr, r2, r0, lsl #8
    7d9c:	002c4600 	eoreq	r4, ip, r0, lsl #12
    7da0:	08010200 	stmdaeq	r1, {r9}
    7da4:	00000573 	andeq	r0, r0, r3, ror r5
    7da8:	99050202 	stmdbls	r5, {r1, r9}
    7dac:	03000005 	movweq	r0, #5
    7db0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    7db4:	82040074 	andhi	r0, r4, #116	; 0x74
    7db8:	02000009 	andeq	r0, r0, #9
    7dbc:	00460707 	subeq	r0, r6, r7, lsl #14
    7dc0:	01020000 	mrseq	r0, (UNDEF: 2)
    7dc4:	00056a08 	andeq	r6, r5, r8, lsl #20
    7dc8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    7dcc:	000003dc 	ldrdeq	r0, [r0], -ip
    7dd0:	0005e404 	andeq	lr, r5, r4, lsl #8
    7dd4:	07090200 	streq	r0, [r9, -r0, lsl #4]
    7dd8:	00000065 	andeq	r0, r0, r5, rrx
    7ddc:	00005405 	andeq	r5, r0, r5, lsl #8
    7de0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7de4:	00004596 	muleq	r0, r6, r5
    7de8:	00006505 	andeq	r6, r0, r5, lsl #10
    7dec:	00650600 	rsbeq	r0, r5, r0, lsl #12
    7df0:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    7df4:	03006c61 	movweq	r6, #3169	; 0xc61
    7df8:	026c0b05 	rsbeq	r0, ip, #5120	; 0x1400
    7dfc:	87080000 	strhi	r0, [r8, -r0]
    7e00:	03000004 	movweq	r0, #4
    7e04:	006c1c07 	rsbeq	r1, ip, r7, lsl #24
    7e08:	b2800000 	addlt	r0, r0, #0
    7e0c:	cc080ee6 	stcgt	14, cr0, [r8], {230}	; 0xe6
    7e10:	03000005 	movweq	r0, #5
    7e14:	02781d0a 	rsbseq	r1, r8, #640	; 0x280
    7e18:	00000000 	andeq	r0, r0, r0
    7e1c:	52082000 	andpl	r2, r8, #0
    7e20:	03000004 	movweq	r0, #4
    7e24:	02781d0d 	rsbseq	r1, r8, #832	; 0x340
    7e28:	00000000 	andeq	r0, r0, r0
    7e2c:	8a092020 	bhi	24feb4 <_bss_end+0x23e204>
    7e30:	03000005 	movweq	r0, #5
    7e34:	00601810 	rsbeq	r1, r0, r0, lsl r8
    7e38:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    7e3c:	00000373 	andeq	r0, r0, r3, ror r3
    7e40:	781d4203 	ldmdavc	sp, {r0, r1, r9, lr}
    7e44:	00000002 	andeq	r0, r0, r2
    7e48:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    7e4c:	0000034a 	andeq	r0, r0, sl, asr #6
    7e50:	781d7103 	ldmdavc	sp, {r0, r1, r8, ip, sp, lr}
    7e54:	00000002 	andeq	r0, r0, r2
    7e58:	0a2000b2 	beq	808128 <_bss_end+0x7f6478>
    7e5c:	0000322f 	andeq	r3, r0, pc, lsr #4
    7e60:	00330405 	eorseq	r0, r3, r5, lsl #8
    7e64:	73030000 	movwvc	r0, #12288	; 0x3000
    7e68:	00012e10 	andeq	r2, r1, r0, lsl lr
    7e6c:	33660b00 	cmncc	r6, #0, 22
    7e70:	0b000000 	bleq	7e78 <CPSR_IRQ_INHIBIT+0x7df8>
    7e74:	00003677 	andeq	r3, r0, r7, ror r6
    7e78:	369f0b01 	ldrcc	r0, [pc], r1, lsl #22
    7e7c:	0b020000 	bleq	87e84 <_bss_end+0x761d4>
    7e80:	00003586 	andeq	r3, r0, r6, lsl #11
    7e84:	31cb0b03 	biccc	r0, fp, r3, lsl #22
    7e88:	0b040000 	bleq	107e90 <_bss_end+0xf61e0>
    7e8c:	000031d8 	ldrdeq	r3, [r0], -r8
    7e90:	35de0b05 	ldrbcc	r0, [lr, #2821]	; 0xb05
    7e94:	0b060000 	bleq	187e9c <_bss_end+0x1761ec>
    7e98:	00003708 	andeq	r3, r0, r8, lsl #14
    7e9c:	37160b07 	ldrcc	r0, [r6, -r7, lsl #22]
    7ea0:	0b080000 	bleq	207ea8 <_bss_end+0x1f61f8>
    7ea4:	000033ea 	andeq	r3, r0, sl, ror #7
    7ea8:	ae0a0009 	cdpge	0, 0, cr0, cr10, cr9, {0}
    7eac:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
    7eb0:	00003304 	andeq	r3, r0, r4, lsl #6
    7eb4:	10810300 	addne	r0, r1, r0, lsl #6
    7eb8:	00000171 	andeq	r0, r0, r1, ror r1
    7ebc:	0019a90b 	andseq	sl, r9, fp, lsl #18
    7ec0:	570b0000 	strpl	r0, [fp, -r0]
    7ec4:	01000030 	tsteq	r0, r0, lsr r0
    7ec8:	0034350b 	eorseq	r3, r4, fp, lsl #10
    7ecc:	400b0200 	andmi	r0, fp, r0, lsl #4
    7ed0:	03000034 	movweq	r0, #52	; 0x34
    7ed4:	0034ad0b 	eorseq	sl, r4, fp, lsl #26
    7ed8:	4d0b0400 	cfstrsmi	mvf0, [fp, #-0]
    7edc:	05000030 	streq	r0, [r0, #-48]	; 0xffffffd0
    7ee0:	00328c0b 	eorseq	r8, r2, fp, lsl #24
    7ee4:	9d0b0600 	stcls	6, cr0, [fp, #-0]
    7ee8:	07000032 	smladxeq	r0, r2, r0, r0
    7eec:	36850a00 	strcc	r0, [r5], r0, lsl #20
    7ef0:	04050000 	streq	r0, [r5], #-0
    7ef4:	00000033 	andeq	r0, r0, r3, lsr r0
    7ef8:	d2108d03 	andsle	r8, r0, #3, 26	; 0xc0
    7efc:	0c000001 	stceq	0, cr0, [r0], {1}
    7f00:	00585541 	subseq	r5, r8, r1, asr #10
    7f04:	35490b1d 	strbcc	r0, [r9, #-2845]	; 0xfffff4e3
    7f08:	0b2b0000 	bleq	ac7f10 <_bss_end+0xab6260>
    7f0c:	00003724 	andeq	r3, r0, r4, lsr #14
    7f10:	372a0b2d 	strcc	r0, [sl, -sp, lsr #22]!
    7f14:	0c2e0000 	stceq	0, cr0, [lr], #-0
    7f18:	00494d53 	subeq	r4, r9, r3, asr sp
    7f1c:	36ad0b30 			; <UNDEFINED> instruction: 0x36ad0b30
    7f20:	0b310000 	bleq	c47f28 <_bss_end+0xc36278>
    7f24:	000036b4 			; <UNDEFINED> instruction: 0x000036b4
    7f28:	36bb0b32 			; <UNDEFINED> instruction: 0x36bb0b32
    7f2c:	0b330000 	bleq	cc7f34 <_bss_end+0xcb6284>
    7f30:	000036c2 	andeq	r3, r0, r2, asr #13
    7f34:	32490c34 	subcc	r0, r9, #52, 24	; 0x3400
    7f38:	0c350043 	ldceq	0, cr0, [r5], #-268	; 0xfffffef4
    7f3c:	00495053 	subeq	r5, r9, r3, asr r0
    7f40:	43500c36 	cmpmi	r0, #13824	; 0x3600
    7f44:	0b37004d 	bleq	dc8080 <_bss_end+0xdb63d0>
    7f48:	0000322a 	andeq	r3, r0, sl, lsr #4
    7f4c:	b6080039 			; <UNDEFINED> instruction: 0xb6080039
    7f50:	03000002 	movweq	r0, #2
    7f54:	02781da4 	rsbseq	r1, r8, #164, 26	; 0x2900
    7f58:	b4000000 	strlt	r0, [r0], #-0
    7f5c:	d90a2000 	stmdble	sl, {sp}
    7f60:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    7f64:	00003304 	andeq	r3, r0, r4, lsl #6
    7f68:	10a60300 	adcne	r0, r6, r0, lsl #6
    7f6c:	0000022b 	andeq	r0, r0, fp, lsr #4
    7f70:	0019780b 	andseq	r7, r9, fp, lsl #16
    7f74:	b50b0000 	strlt	r0, [fp, #-0]
    7f78:	01000018 	tsteq	r0, r8, lsl r0
    7f7c:	00358a0b 	eorseq	r8, r5, fp, lsl #20
    7f80:	9e0b0200 	cdpls	2, 0, cr0, cr11, cr0, {0}
    7f84:	03000018 	movweq	r0, #24
    7f88:	0019fc0b 	andseq	pc, r9, fp, lsl #24
    7f8c:	f00b0400 			; <UNDEFINED> instruction: 0xf00b0400
    7f90:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    7f94:	0017dc0b 	andseq	sp, r7, fp, lsl #24
    7f98:	cd0b0600 	stcgt	6, cr0, [fp, #-0]
    7f9c:	07000018 	smladeq	r0, r8, r0, r0
    7fa0:	0019be0b 	andseq	fp, r9, fp, lsl #28
    7fa4:	08000800 	stmdaeq	r0, {fp}
    7fa8:	00000364 	andeq	r0, r0, r4, ror #6
    7fac:	781db303 	ldmdavc	sp, {r0, r1, r8, r9, ip, sp, pc}
    7fb0:	00000002 	andeq	r0, r0, r2
    7fb4:	08201040 	stmdaeq	r0!, {r6, ip}
    7fb8:	00000331 	andeq	r0, r0, r1, lsr r3
    7fbc:	781dbe03 	ldmdavc	sp, {r0, r1, r9, sl, fp, ip, sp, pc}
    7fc0:	00000002 	andeq	r0, r0, r2
    7fc4:	08202050 	stmdaeq	r0!, {r4, r6, sp}
    7fc8:	000003ef 	andeq	r0, r0, pc, ror #7
    7fcc:	781dbf03 	ldmdavc	sp, {r0, r1, r8, r9, sl, fp, ip, sp, pc}
    7fd0:	00000002 	andeq	r0, r0, r2
    7fd4:	08208040 	stmdaeq	r0!, {r6, pc}
    7fd8:	0000045c 	andeq	r0, r0, ip, asr r4
    7fdc:	781dc003 	ldmdavc	sp, {r0, r1, lr, pc}
    7fe0:	00000002 	andeq	r0, r0, r2
    7fe4:	00208050 	eoreq	r8, r0, r0, asr r0
    7fe8:	0000820d 	andeq	r8, r0, sp, lsl #4
    7fec:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7ff0:	00004591 	muleq	r0, r1, r5
    7ff4:	00027105 	andeq	r7, r2, r5, lsl #2
    7ff8:	00920d00 	addseq	r0, r2, r0, lsl #26
    7ffc:	a20d0000 	andge	r0, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:14
	ldr pc, _reset_ptr						;@ 0x00 - reset - vyvolano pri resetu procesoru
    8000:	0d000000 	stceq	0, cr0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:15
	ldr pc, _undefined_instruction_ptr		;@ 0x04 - undefined instruction - vyjimka, vyvolana pri dekodovani nezname instrukce
    8004:	000000b2 	strheq	r0, [r0], -r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:16
	ldr pc, _software_interrupt_ptr			;@ 0x08 - software interrupt - vyvolano, kdyz procesor provede instrukci swi
    8008:	0000bf0d 	andeq	fp, r0, sp, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:17
	ldr pc, _prefetch_abort_ptr				;@ 0x0C - prefetch abort - vyvolano, kdyz se procesor snazi napr. nacist instrukci z mista, odkud nacist nejde
    800c:	00cf0d00 	sbceq	r0, pc, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:18
	ldr pc, _data_abort_ptr					;@ 0x10 - data abort - vyvolano, kdyz se procesor snazi napr. nacist data z mista, odkud nacist nejdou
    8010:	d20d0000 	andle	r0, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:19
	ldr pc, _unused_handler_ptr				;@ 0x14 - unused - ve specifikaci ARM neni uvedeno zadne vyuziti
    8014:	0d000001 	stceq	0, cr0, [r0, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:20
	ldr pc, _irq_ptr						;@ 0x18 - IRQ - hardwarove preruseni (general purpose)
    8018:	0000022b 	andeq	r0, r0, fp, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
	ldr pc, _fast_interrupt_ptr				;@ 0x1C - fast interrupt request - prioritni IRQ pro vysokorychlostni zalezitosti
    801c:	00023b0d 	andeq	r3, r2, sp, lsl #22
    8020:	024b0d00 	subeq	r0, fp, #0, 26
    8024:	5b0d0000 	blpl	34802c <_bss_end+0x33637c>
    8028:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    802c:	000033d4 	ldrdeq	r3, [r0], -r4
    8030:	07050404 	streq	r0, [r5, -r4, lsl #8]
    8034:	0000038e 	andeq	r0, r0, lr, lsl #7
    8038:	0032e00f 	eorseq	lr, r2, pc
    803c:	1c090400 	cfstrsne	mvf0, [r9], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:52
	mov r0, #0x8000			;@ adresa 0x8000 (_start) do r0
    8040:	0000038e 	andeq	r0, r0, lr, lsl #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:53
    mov r1, #0x0000			;@ adresa 0x0000 (pocatek RAM) do r1 - tam budeme vkladat tabulku vektoru preruseni
    8044:	1a2e1000 	bne	b8c04c <_bss_end+0xb7a39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:57
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8048:	0c040000 	stceq	0, cr0, [r4], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:58
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	002ff91c 	eoreq	pc, pc, ip, lsl r9	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:59
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	00039400 	andeq	r9, r3, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:60
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	02e20200 	rsceq	r0, r2, #0, 4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:63
	mov r4, #0x0
    8058:	02ed0000 	rsceq	r0, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:66
    mov r0, #(CPSR_MODE_SVR | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    805c:	9a110000 	bls	448064 <_bss_end+0x4363b4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:67
    msr cpsr_c, r0
    8060:	12000003 	andne	r0, r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:68
	add sp, r4, #0x8000
    8064:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:71
	mov r0, #(CPSR_MODE_IRQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8068:	33d41000 	bicscc	r1, r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:72
    msr cpsr_c, r0
    806c:	0f040000 	svceq	0x00040000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:73
	add sp, r4, #0x7000
    8070:	00351e05 	eorseq	r1, r5, r5, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:76
	mov r0, #(CPSR_MODE_FIQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8074:	00039a00 	andeq	r9, r3, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:77
    msr cpsr_c, r0
    8078:	03060100 	movweq	r0, #24832	; 0x6100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:78
	add sp, r4, #0x6000
    807c:	03110000 	tsteq	r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:81
    mov r0, #(CPSR_MODE_SYS | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8080:	9a110000 	bls	448088 <_bss_end+0x4363d8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:82
    msr cpsr_c, r0
    8084:	12000003 	andne	r0, r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:83
	add sp, r4, #0x5000
    8088:	00000271 	andeq	r0, r0, r1, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:86
	mrc p15, #0, r4, c1, c0, #0
    808c:	34031300 	strcc	r1, [r3], #-768	; 0xfffffd00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:87
	orr r4, #0x400000
    8090:	12040000 	andne	r0, r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:88
	mcr p15, #0, r4, c1, c0, #0
    8094:	0034d80a 	eorseq	sp, r4, sl, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:90
	bl _c_startup			;@ C startup kod (inicializace prostredi)
    8098:	03260100 			; <UNDEFINED> instruction: 0x03260100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:91
	bl _cpp_startup			;@ C++ startup kod (volani globalnich konstruktoru, ...)
    809c:	03310000 	teqeq	r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:92
	bl _kernel_main			;@ skocime do hlavniho kodu jadra (v C)
    80a0:	9a110000 	bls	4480a8 <_bss_end+0x4363f8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:93
	bl _cpp_shutdown		;@ C++ shutdown kod (volani globalnich destruktoru, ...)
    80a4:	12000003 	andne	r0, r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:95
	b hang
    80a8:	0000012e 	andeq	r0, r0, lr, lsr #2
__cxa_guard_acquire():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:11
    {
    80ac:	36d11300 	ldrbcc	r1, [r1], r0, lsl #6
    80b0:	14040000 	strne	r0, [r4], #-0
    80b4:	002f680a 	eoreq	r6, pc, sl, lsl #16
    80b8:	03460100 	movteq	r0, #24832	; 0x6100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:12
        return !*(char*)(g);
    80bc:	03510000 	cmpeq	r1, #0
    80c0:	9a110000 	bls	4480c8 <_bss_end+0x436418>
    80c4:	12000003 	andne	r0, r0, #3
    80c8:	0000012e 	andeq	r0, r0, lr, lsr #2
    80cc:	30b61300 	adcscc	r1, r6, r0, lsl #6
    80d0:	17040000 	strne	r0, [r4, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:13
    }
    80d4:	002f2e0a 	eoreq	r2, pc, sl, lsl #28
    80d8:	03660100 	cmneq	r6, #0, 2
    80dc:	03710000 	cmneq	r1, #0
    80e0:	9a110000 	bls	4480e8 <_bss_end+0x436438>
__cxa_guard_release():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:16
    {
    80e4:	12000003 	andne	r0, r0, #3
    80e8:	00000171 	andeq	r0, r0, r1, ror r1
    80ec:	33781400 	cmncc	r8, #0, 8
    80f0:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:17
        *(char*)g = 1;
    80f4:	0032fe0a 	eorseq	pc, r2, sl, lsl #28
    80f8:	03820100 	orreq	r0, r2, #0, 2
    80fc:	9a110000 	bls	448104 <_bss_end+0x436454>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:18
    }
    8100:	12000003 	andne	r0, r0, #3
    8104:	00000171 	andeq	r0, r0, r1, ror r1
    8108:	04150000 	ldreq	r0, [r5], #-0
    810c:	00000071 	andeq	r0, r0, r1, ror r0
__cxa_guard_abort():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:21
    {
    8110:	00710416 	rsbseq	r0, r1, r6, lsl r4
    8114:	04150000 	ldreq	r0, [r5], #-0
    8118:	000002af 	andeq	r0, r0, pc, lsr #5
    811c:	00039a05 	andeq	r9, r3, r5, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:22
    }
    8120:	2feb1700 	svccs	0x00eb1700
    8124:	1c040000 	stcne	0, cr0, [r4], {-0}
    8128:	0002af1e 	andeq	sl, r2, lr, lsl pc
    812c:	18620a00 	stmdane	r2!, {r9, fp}^
__dso_handle():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:26
{
    8130:	01070000 	mrseq	r0, (UNDEF: 7)
    8134:	0000003a 	andeq	r0, r0, sl, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:28
}
    8138:	d60c0605 	strle	r0, [ip], -r5, lsl #12
    813c:	0b000003 	bleq	8150 <__cxa_atexit+0x8>
    8140:	000019cb 	andeq	r1, r0, fp, asr #19
    8144:	18a80b00 	stmiane	r8!, {r8, r9, fp}
__cxa_atexit():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:31
{
    8148:	0b010000 	bleq	48150 <_bss_end+0x364a0>
    814c:	0000183a 	andeq	r1, r0, sl, lsr r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:33
}
    8150:	a80e0002 	stmdage	lr, {r1}
    8154:	08000019 	stmdaeq	r0, {r0, r3, r4}
    8158:	ce070d05 	cdpgt	13, 0, cr0, cr7, cr5, {0}
    815c:	0f000004 	svceq	0x00000004
__cxa_pure_virtual():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:36
{
    8160:	00001774 	andeq	r1, r0, r4, ror r7
    8164:	8e1c1505 	cfmul32hi	mvfx1, mvfx12, mvfx5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:38
}
    8168:	00000003 	andeq	r0, r0, r3
    816c:	0019ec18 	andseq	lr, r9, r8, lsl ip
    8170:	0b110500 	bleq	449578 <_bss_end+0x4378c8>
    8174:	000004ce 	andeq	r0, r0, lr, asr #9
__aeabi_unwind_cpp_pr1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:41
{
    8178:	197d0f01 	ldmdbne	sp!, {r0, r8, r9, sl, fp}^
    817c:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:42 (discriminator 1)
    while (true)
    8180:	0003f015 	andeq	pc, r3, r5, lsl r0	; <UNPREDICTABLE>
_ZN13CGPIO_HandlerC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:8
CGPIO_Handler::CGPIO_Handler(unsigned int gpio_base_addr)
    8184:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    8188:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    818c:	19871c1b 	stmibne	r7, {r0, r1, r3, r4, sl, fp, ip}
    8190:	03940000 	orrseq	r0, r4, #0
    8194:	23020000 	movwcs	r0, #8192	; 0x2000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:9
: mGPIO(reinterpret_cast<unsigned int*>(gpio_base_addr))
    8198:	2e000004 	cdpcs	0, 0, cr0, cr0, cr4, {0}
    819c:	11000004 	tstne	r0, r4
    81a0:	000004d5 	ldrdeq	r0, [r0], -r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:11
    bzero(&mPin_Reservations_Read, sizeof(mPin_Reservations_Read));
    81a4:	0001e212 	andeq	lr, r1, r2, lsl r2
    81a8:	a8100000 	ldmdage	r0, {}	; <UNPREDICTABLE>
    81ac:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    81b0:	19af051e 	stmibne	pc!, {r1, r2, r3, r4, r8, sl}	; <UNPREDICTABLE>
    81b4:	04d50000 	ldrbeq	r0, [r5], #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:12
    bzero(&mPin_Reservations_Write, sizeof(mPin_Reservations_Write));
    81b8:	47010000 	strmi	r0, [r1, -r0]
    81bc:	52000004 	andpl	r0, r0, #4
    81c0:	11000004 	tstne	r0, r4
    81c4:	000004d5 	ldrdeq	r0, [r0], -r5
    81c8:	00027112 	andeq	r7, r2, r2, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:13
}
    81cc:	e8130000 	ldmda	r3, {}	; <UNPREDICTABLE>
    81d0:	05000035 	streq	r0, [r0, #-53]	; 0xffffffcb
    81d4:	18480522 	stmdane	r8, {r1, r5, r8, sl}^
    81d8:	67010000 	strvs	r0, [r1, -r0]
_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:16
{
    81dc:	7c000004 	stcvc	0, cr0, [r0], {4}
    81e0:	11000004 	tstne	r0, r4
    81e4:	000004d5 	ldrdeq	r0, [r0], -r5
    81e8:	0003f012 	andeq	pc, r3, r2, lsl r0	; <UNPREDICTABLE>
    81ec:	00651200 	rsbeq	r1, r5, r0, lsl #4
    81f0:	b1120000 	tstlt	r2, r0
    81f4:	00000003 	andeq	r0, r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:17
    if (pin > hal::GPIO_Pin_Count)
    81f8:	0033f413 	eorseq	pc, r3, r3, lsl r4	; <UNPREDICTABLE>
    81fc:	0a240500 	beq	909604 <_bss_end+0x8f7954>
    8200:	000018e3 	andeq	r1, r0, r3, ror #17
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:18
        return false;
    8204:	00049101 	andeq	r9, r4, r1, lsl #2
    8208:	00049700 	andeq	r9, r4, r0, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:20
    reg = pin / 10;
    820c:	04d51100 	ldrbeq	r1, [r5], #256	; 0x100
    8210:	13000000 	movwne	r0, #0
    8214:	000017e3 	andeq	r1, r0, r3, ror #15
    8218:	040a2705 	streq	r2, [sl], #-1797	; 0xfffff8fb
    821c:	0100001a 	tsteq	r0, sl, lsl r0
    8220:	000004ac 	andeq	r0, r0, ip, lsr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:31
    bit_idx = (pin % 10) * 3;
    8224:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
    8228:	0004d511 	andeq	sp, r4, r1, lsl r5
    822c:	d7190000 	ldrle	r0, [r9, -r0]
    8230:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    8234:	17960a29 	ldrne	r0, [r6, r9, lsr #20]
    8238:	04db0000 	ldrbeq	r0, [fp], #0
    823c:	c7010000 	strgt	r0, [r1, -r0]
    8240:	11000004 	tstne	r0, r4
    8244:	000004d5 	ldrdeq	r0, [r0], -r5
    8248:	04150000 	ldreq	r0, [r5], #-0
    824c:	000004d4 	ldrdeq	r0, [r0], -r4
    8250:	d604151a 			; <UNDEFINED> instruction: 0xd604151a
    8254:	02000003 	andeq	r0, r0, #3
    8258:	454d0201 	strbmi	r0, [sp, #-513]	; 0xfffffdff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:33
    return true;
    825c:	8f170000 	svchi	0x00170000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:34
}
    8260:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    8264:	03d60f2c 	bicseq	r0, r6, #44, 30	; 0xb0
    8268:	e51b0000 	ldr	r0, [fp, #-0]
    826c:	06000031 			; <UNDEFINED> instruction: 0x06000031
    8270:	00601404 	rsbeq	r1, r0, r4, lsl #8
_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:37
{
    8274:	03050000 	movweq	r0, #20480	; 0x5000
    8278:	000103ac 	andeq	r0, r1, ip, lsr #7
    827c:	0032d40a 	eorseq	sp, r2, sl, lsl #8
    8280:	33040500 	movwcc	r0, #17664	; 0x4500
    8284:	06000000 	streq	r0, [r0], -r0
    8288:	052b0c07 	streq	r0, [fp, #-3079]!	; 0xfffff3f9
    828c:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:38
    if (pin > hal::GPIO_Pin_Count)
    8290:	00007765 	andeq	r7, r0, r5, ror #14
    8294:	0032cb0b 	eorseq	ip, r2, fp, lsl #22
    8298:	c30b0100 	movwgt	r0, #45312	; 0xb100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:39
        return false;
    829c:	02000019 	andeq	r0, r0, #25
    82a0:	0033fc0b 	eorseq	pc, r3, fp, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPCLR0 : hal::GPIO_Reg::GPCLR1);
    82a4:	1c000300 	stcne	3, cr0, [r0], {-0}
    82a8:	000031a8 	andeq	r3, r0, r8, lsr #3
    82ac:	0816060c 	ldmdaeq	r6, {r2, r3, r9, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 1)
    82b0:	0000055d 	andeq	r0, r0, sp, asr r5
    82b4:	00726c1d 	rsbseq	r6, r2, sp, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 2)
    82b8:	71131806 	tstvc	r3, r6, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 4)
    82bc:	00000002 	andeq	r0, r0, r2
    82c0:	0070731d 	rsbseq	r7, r0, sp, lsl r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:42 (discriminator 4)
    bit_idx = pin % 32;
    82c4:	71131906 	tstvc	r3, r6, lsl #18
    82c8:	04000002 	streq	r0, [r0], #-2
    82cc:	0063701d 	rsbeq	r7, r3, sp, lsl r0
    82d0:	71131a06 	tstvc	r3, r6, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:44 (discriminator 4)
    return true;
    82d4:	08000002 	stmdaeq	r0, {r1}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:45
}
    82d8:	35921c00 	ldrcc	r1, [r2, #3072]	; 0xc00
    82dc:	065c0000 	ldrbeq	r0, [ip], -r0
    82e0:	05b90822 	ldreq	r0, [r9, #2082]!	; 0x822
    82e4:	3d0f0000 	stccc	0, cr0, [pc, #-0]	; 82ec <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x4>
_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:48
{
    82e8:	06000035 			; <UNDEFINED> instruction: 0x06000035
    82ec:	052b1224 	streq	r1, [fp, #-548]!	; 0xfffffddc
    82f0:	1d000000 	stcne	0, cr0, [r0, #-0]
    82f4:	00646970 	rsbeq	r6, r4, r0, ror r9
    82f8:	65122506 	ldrvs	r2, [r2, #-1286]	; 0xfffffafa
    82fc:	0c000000 	stceq	0, cr0, [r0], {-0}
    8300:	00312c0f 	eorseq	r2, r1, pc, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:49
    if (pin > hal::GPIO_Pin_Count)
    8304:	11260600 			; <UNDEFINED> instruction: 0x11260600
    8308:	00000500 	andeq	r0, r0, r0, lsl #10
    830c:	32f00f10 	rscscc	r0, r0, #16, 30	; 0x40
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:50
        return false;
    8310:	27060000 	strcs	r0, [r6, -r0]
    8314:	00006512 	andeq	r6, r0, r2, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPSET0 : hal::GPIO_Reg::GPSET1);
    8318:	390f1400 	stmdbcc	pc, {sl, ip}	; <UNPREDICTABLE>
    831c:	06000033 			; <UNDEFINED> instruction: 0x06000033
    8320:	00651229 	rsbeq	r1, r5, r9, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 1)
    8324:	0f180000 	svceq	0x00180000
    8328:	0000319b 	muleq	r0, fp, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 2)
    832c:	b90c2a06 	stmdblt	ip, {r1, r2, r9, fp, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 4)
    8330:	1c000005 	stcne	0, cr0, [r0], {5}
    8334:	05c91e00 	strbeq	r1, [r9, #3584]	; 0xe00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:53 (discriminator 4)
    bit_idx = pin % 32;
    8338:	05c90000 	strbeq	r0, [r9]
    833c:	651f0000 	ldrvs	r0, [pc, #-0]	; 8344 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x5c>
    8340:	0f000000 	svceq	0x00000000
    8344:	cf041500 	svcgt	0x00041500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:55 (discriminator 4)
    return true;
    8348:	20000005 	andcs	r0, r0, r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:56
}
    834c:	00002bc8 	andeq	r2, r0, r8, asr #23
    8350:	00318f1c 	eorseq	r8, r1, ip, lsl pc
    8354:	06070800 	streq	r0, [r7], -r0, lsl #16
    8358:	0005fa08 	andeq	pc, r5, r8, lsl #20
_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:59
{
    835c:	30721d00 	rsbscc	r1, r2, r0, lsl #26
    8360:	0e080700 	cdpeq	7, 0, cr0, cr8, cr0, {0}
    8364:	00000054 	andeq	r0, r0, r4, asr r0
    8368:	31721d00 	cmncc	r2, r0, lsl #26
    836c:	0e090700 	cdpeq	7, 0, cr0, cr9, cr0, {0}
    8370:	00000054 	andeq	r0, r0, r4, asr r0
    8374:	b70a0004 	strlt	r0, [sl, -r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:60
    if (pin > hal::GPIO_Pin_Count)
    8378:	05000034 	streq	r0, [r0, #-52]	; 0xffffffcc
    837c:	00003304 	andeq	r3, r0, r4, lsl #6
    8380:	0c160700 	ldceq	7, cr0, [r6], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:61
        return false;
    8384:	00000619 	andeq	r0, r0, r9, lsl r6
    8388:	0031240b 	eorseq	r2, r1, fp, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPLEV0 : hal::GPIO_Reg::GPLEV1);
    838c:	880b0000 	stmdahi	fp, {}	; <UNPREDICTABLE>
    8390:	0100001c 	tsteq	r0, ip, lsl r0
    8394:	31080a00 	tstcc	r8, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 1)
    8398:	04050000 	streq	r0, [r5], #-0
    839c:	00000033 	andeq	r0, r0, r3, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 2)
    83a0:	320c1e07 	andcc	r1, ip, #7, 28	; 0x70
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 4)
    83a4:	0b000006 	bleq	83c4 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x68>
    83a8:	000036c9 	andeq	r3, r0, r9, asr #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:64 (discriminator 4)
    bit_idx = pin % 32;
    83ac:	5f0a0000 	svcpl	0x000a0000
    83b0:	05000036 	streq	r0, [r0, #-54]	; 0xffffffca
    83b4:	00003304 	andeq	r3, r0, r4, lsl #6
    83b8:	0c260700 	stceq	7, cr0, [r6], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:66 (discriminator 4)
    return true;
    83bc:	00000663 	andeq	r0, r0, r3, ror #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:67
}
    83c0:	000a200b 	andeq	r2, sl, fp
    83c4:	d30b0000 	movwle	r0, #45056	; 0xb000
    83c8:	01000002 	tsteq	r0, r2
    83cc:	001ce00b 	andseq	lr, ip, fp
_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:70
{
    83d0:	ad0b0200 	sfmge	f0, 4, [fp, #-0]
    83d4:	03000009 	movweq	r0, #9
    83d8:	0024ea0b 	eoreq	lr, r4, fp, lsl #20
    83dc:	1b000400 	blne	93e4 <_ZN8CMonitorlsEc+0x40>
    83e0:	00001c44 	andeq	r1, r0, r4, asr #24
    83e4:	601a0608 	andsvs	r0, sl, r8, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:72
    if (!Get_GPFSEL_Location(pin, reg, bit))
    83e8:	05000000 	streq	r0, [r0, #-0]
    83ec:	0103b003 	tsteq	r3, r3
    83f0:	1c751b00 			; <UNDEFINED> instruction: 0x1c751b00
    83f4:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    83f8:	0000601a 	andeq	r6, r0, sl, lsl r0
    83fc:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    8400:	1b000103 	blne	8814 <_ZN13CGPIO_Handler8Free_PinEjbb+0x14>
    8404:	00001d93 	muleq	r0, r3, sp
    8408:	601a0a08 	andsvs	r0, sl, r8, lsl #20
    840c:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:75
    unsigned int mode = static_cast<unsigned int>(func);
    8410:	0103b803 	tsteq	r3, r3, lsl #16
    8414:	1b791b00 	blne	1e4f01c <_bss_end+0x1e3d36c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:77
    unsigned int rd = mGPIO[reg];
    8418:	0c080000 	stceq	0, cr0, [r8], {-0}
    841c:	0000601a 	andeq	r6, r0, sl, lsl r0
    8420:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    8424:	1b000103 	blne	8838 <_ZN13CGPIO_Handler8Free_PinEjbb+0x38>
    8428:	00003690 	muleq	r0, r0, r6
    842c:	60140a09 	andsvs	r0, r4, r9, lsl #20
    8430:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:78
    rd &= ~(7 << bit);
    8434:	0103c003 	tsteq	r3, r3
    8438:	35cb1c00 	strbcc	r1, [fp, #3072]	; 0xc00
    843c:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    8440:	06f2080d 	ldrbteq	r0, [r2], sp, lsl #16
    8444:	080f0000 	stmdaeq	pc, {}	; <UNPREDICTABLE>
    8448:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    844c:	06f2190f 	ldrbteq	r1, [r2], pc, lsl #18
    8450:	0f000000 	svceq	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:79
    rd |= (mode << bit);
    8454:	00000dfb 	strdeq	r0, [r0], -fp
    8458:	f2191009 	vhadd.s16	d1, d9, d9
    845c:	04000006 	streq	r0, [r0], #-6
    8460:	0035810f 	eorseq	r8, r5, pc, lsl #2
    8464:	13110900 	tstne	r1, #0, 18
    8468:	000006f8 	strdeq	r0, [r0], -r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:81
    mGPIO[reg] = rd;
    846c:	04150008 	ldreq	r0, [r5], #-8
    8470:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    8474:	055d0415 	ldrbeq	r0, [sp, #-1045]	; 0xfffffbeb
    8478:	320e0000 	andcc	r0, lr, #0
    847c:	0c000031 	stceq	0, cr0, [r0], {49}	; 0x31
    8480:	96071409 	strls	r1, [r7], -r9, lsl #8
    8484:	0f000008 	svceq	0x00000008
    8488:	000033ca 	andeq	r3, r0, sl, asr #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:73
        return;
    848c:	540e1809 	strpl	r1, [lr], #-2057	; 0xfffff7f7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:82
}
    8490:	00000000 	andeq	r0, r0, r0
    8494:	00305f0f 	eorseq	r5, r0, pc, lsl #30
_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:85
{
    8498:	191b0900 	ldmdbne	fp, {r8, fp}
    849c:	000006f2 	strdeq	r0, [r0], -r2
    84a0:	34c50f04 	strbcc	r0, [r5], #3844	; 0xf04
    84a4:	1e090000 	cdpne	0, 0, cr0, cr9, cr0, {0}
    84a8:	0006f219 	andeq	pc, r6, r9, lsl r2	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:87
    if (!Get_GPFSEL_Location(pin, reg, bit))
    84ac:	55210800 	strpl	r0, [r1, #-2048]!	; 0xfffff800
    84b0:	09000036 	stmdbeq	r0, {r1, r2, r4, r5}
    84b4:	35a80a21 	strcc	r0, [r8, #2593]!	; 0xa21
    84b8:	07460000 	strbeq	r0, [r6, -r0]
    84bc:	07510000 	ldrbeq	r0, [r1, -r0]
    84c0:	9b110000 	blls	4484c8 <_bss_end+0x436818>
    84c4:	12000008 	andne	r0, r0, #8
    84c8:	000006f2 	strdeq	r0, [r0], -r2
    84cc:	31321000 	teqcc	r2, r0
    84d0:	24090000 	strcs	r0, [r9], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:88
        return NGPIO_Function::Unspecified;
    84d4:	0036e305 	eorseq	lr, r6, r5, lsl #6
    84d8:	00089b00 	andeq	r9, r8, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:90
    return static_cast<NGPIO_Function>((mGPIO[reg] >> bit) & 7);
    84dc:	076a0100 	strbeq	r0, [sl, -r0, lsl #2]!
    84e0:	07700000 	ldrbeq	r0, [r0, -r0]!
    84e4:	9b110000 	blls	4484ec <_bss_end+0x43683c>
    84e8:	00000008 	andeq	r0, r0, r8
    84ec:	00364113 	eorseq	r4, r6, r3, lsl r1
    84f0:	0a270900 	beq	9ca8f8 <_bss_end+0x9b8c48>
    84f4:	00002faf 	andeq	r2, r0, pc, lsr #31
    84f8:	00078501 	andeq	r8, r7, r1, lsl #10
    84fc:	00078b00 	andeq	r8, r7, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:91 (discriminator 1)
}
    8500:	089b1100 	ldmeq	fp, {r8, ip}
    8504:	10000000 	andne	r0, r0, r0
    8508:	0000311d 	andeq	r3, r0, sp, lsl r1
_ZN13CGPIO_Handler10Set_OutputEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:94
{
    850c:	e00e2a09 	and	r2, lr, r9, lsl #20
    8510:	54000030 	strpl	r0, [r0], #-48	; 0xffffffd0
    8514:	01000000 	mrseq	r0, (UNDEF: 0)
    8518:	000007a4 	andeq	r0, r0, r4, lsr #15
    851c:	000007af 	andeq	r0, r0, pc, lsr #15
    8520:	00089b11 	andeq	r9, r8, r1, lsl fp
    8524:	02711200 	rsbseq	r1, r1, #0, 4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96
    if (!(set && Get_GPSET_Location(pin, reg, bit)) && !(!set && Get_GPCLR_Location(pin, reg, bit)))
    8528:	13000000 	movwne	r0, #0
    852c:	0000359f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    8530:	140a2e09 	strne	r2, [sl], #-3593	; 0xfffff1f7
    8534:	01000034 	tsteq	r0, r4, lsr r0
    8538:	000007c4 	andeq	r0, r0, r4, asr #15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 2)
    853c:	000007ca 	andeq	r0, r0, sl, asr #15
    8540:	00089b11 	andeq	r9, r8, r1, lsl fp
    8544:	48100000 	ldmdami	r0, {}	; <UNPREDICTABLE>
    8548:	09000032 	stmdbeq	r0, {r1, r4, r5}
    854c:	30721331 	rsbscc	r1, r2, r1, lsr r3
    8550:	06f80000 	ldrbteq	r0, [r8], r0
    8554:	e3010000 	movw	r0, #4096	; 0x1000
    8558:	e9000007 	stmdb	r0, {r0, r1, r2}
    855c:	11000007 	tstne	r0, r7
    8560:	000008a1 	andeq	r0, r0, r1, lsr #17
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 3)
    8564:	325c1000 	subscc	r1, ip, #0
    8568:	34090000 	strcc	r0, [r9], #-0
    856c:	0033840e 	eorseq	r8, r3, lr, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 6)
    8570:	00005400 	andeq	r5, r0, r0, lsl #8
    8574:	08020100 	stmdaeq	r2, {r8}
    8578:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    857c:	9b110000 	blls	448584 <_bss_end+0x4368d4>
    8580:	12000008 	andne	r0, r0, #8
    8584:	000005c9 	andeq	r0, r0, r9, asr #11
    8588:	303a1000 	eorscc	r1, sl, r0
    858c:	37090000 	strcc	r0, [r9, -r0]
    8590:	0031fe0a 	eorseq	pc, r1, sl, lsl #28
    8594:	0004db00 	andeq	sp, r4, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 7)
    8598:	08260100 	stmdaeq	r6!, {r8}
    859c:	08310000 	ldmdaeq	r1!, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 8)
    85a0:	9b110000 	blls	4485a8 <_bss_end+0x4368f8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 10)
    85a4:	12000008 	andne	r0, r0, #8
    85a8:	00000054 	andeq	r0, r0, r4, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:99
    mGPIO[reg] = (1 << bit);
    85ac:	32791300 	rsbscc	r1, r9, #0, 6
    85b0:	3a090000 	bcc	2485b8 <_bss_end+0x236908>
    85b4:	0035ef0a 	eorseq	lr, r5, sl, lsl #30
    85b8:	08460100 	stmdaeq	r6, {r8}^
    85bc:	08650000 	stmdaeq	r5!, {}^	; <UNPREDICTABLE>
    85c0:	9b110000 	blls	4485c8 <_bss_end+0x436918>
    85c4:	12000008 	andne	r0, r0, #8
    85c8:	00000619 	andeq	r0, r0, r9, lsl r6
    85cc:	00005412 	andeq	r5, r0, r2, lsl r4
    85d0:	00541200 	subseq	r1, r4, r0, lsl #4
    85d4:	54120000 	ldrpl	r0, [r2], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:97
        return;
    85d8:	12000000 	andne	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:100
}
    85dc:	000008a7 	andeq	r0, r0, r7, lsr #17
    85e0:	30a01400 	adccc	r1, r0, r0, lsl #8
_ZN13CGPIO_Handler9Get_InputEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:103
{
    85e4:	3d090000 	stccc	0, cr0, [r9, #-0]
    85e8:	00314305 	eorseq	r4, r1, r5, lsl #6
    85ec:	08760100 	ldmdaeq	r6!, {r8}^
    85f0:	9b110000 	blls	4485f8 <_bss_end+0x436948>
    85f4:	12000008 	andne	r0, r0, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:105
    if (!Get_GPLEV_Location(pin, reg, bit))
    85f8:	00000632 	andeq	r0, r0, r2, lsr r6
    85fc:	00005412 	andeq	r5, r0, r2, lsl r4
    8600:	00541200 	subseq	r1, r4, r0, lsl #4
    8604:	54120000 	ldrpl	r0, [r2], #-0
    8608:	12000000 	andne	r0, r0, #0
    860c:	000008a7 	andeq	r0, r0, r7, lsr #17
    8610:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    8614:	15000006 	strne	r0, [r0, #-6]
    8618:	0006fe04 	andeq	pc, r6, r4, lsl #28
    861c:	96041500 	strls	r1, [r4], -r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:106
        return false;
    8620:	16000008 	strne	r0, [r0], -r8
    8624:	0005d404 	andeq	sp, r5, r4, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:108
    return (mGPIO[reg] >> bit) & 0x1;
    8628:	3a211700 	bcc	84e230 <_bss_end+0x83c580>
    862c:	40090000 	andmi	r0, r9, r0
    8630:	0006fe19 	andeq	pc, r6, r9, lsl lr	; <UNPREDICTABLE>
    8634:	03a52200 			; <UNDEFINED> instruction: 0x03a52200
    8638:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    863c:	84030517 	strhi	r0, [r3], #-1303	; 0xfffffae9
    8640:	2300010c 	movwcs	r0, #268	; 0x10c
    8644:	000032bf 			; <UNDEFINED> instruction: 0x000032bf
    8648:	d4140d01 	ldrle	r0, [r4], #-3329	; 0xfffff2ff
    864c:	05000005 	streq	r0, [r0, #-5]
    8650:	010c8803 	tsteq	ip, r3, lsl #16
    8654:	2fdc2400 	svccs	0x00dc2400
    8658:	d7840000 	strle	r0, [r4, r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:109 (discriminator 1)
}
    865c:	001c0000 	andseq	r0, ip, r0
    8660:	9c010000 	stcls	0, cr0, [r1], {-0}
    8664:	00024125 	andeq	r4, r2, r5, lsr #2
_ZN13CGPIO_Handler11Reserve_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:112
{
    8668:	00d73000 	sbcseq	r3, r7, r0
    866c:	00005400 	andeq	r5, r0, r0, lsl #8
    8670:	1a9c0100 	bne	fe708a78 <_bss_end+0xfe6f6dc8>
    8674:	26000009 	strcs	r0, [r0], -r9
    8678:	0000033b 	andeq	r0, r0, fp, lsr r3
    867c:	33016001 	movwcc	r6, #4097	; 0x1001
    8680:	02000000 	andeq	r0, r0, #0
    8684:	34267491 	strtcc	r7, [r6], #-1169	; 0xfffffb6f
    8688:	01000007 	tsteq	r0, r7
    868c:	00330160 	eorseq	r0, r3, r0, ror #2
    8690:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:115
    uint32_t bank_idx = pin / 32;
    8694:	71270070 			; <UNDEFINED> instruction: 0x71270070
    8698:	01000003 	tsteq	r0, r3
    869c:	0934065a 	ldmdbeq	r4!, {r1, r3, r4, r6, r9, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:116
    uint32_t bit_idx = pin % 32;
    86a0:	d6e00000 	strbtle	r0, [r0], r0
    86a4:	00500000 	subseq	r0, r0, r0
    86a8:	9c010000 	stcls	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118
    if (read && (mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1)
    86ac:	0000095f 	andeq	r0, r0, pc, asr r9
    86b0:	00032c28 	andeq	r2, r3, r8, lsr #24
    86b4:	0003a000 	andeq	sl, r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118 (discriminator 1)
    86b8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    86bc:	0036fd26 	eorseq	pc, r6, r6, lsr #26
    86c0:	395a0100 	ldmdbcc	sl, {r8}^
    86c4:	00000171 	andeq	r0, r0, r1, ror r1
    86c8:	23609102 	cmncs	r0, #-2147483648	; 0x80000000
    86cc:	00003270 	andeq	r3, r0, r0, ror r2
    86d0:	6c185c01 	ldcvs	12, cr5, [r8], {1}
    86d4:	02000000 	andeq	r0, r0, #0
    86d8:	27006c91 			; <UNDEFINED> instruction: 0x27006c91
    86dc:	00000351 	andeq	r0, r0, r1, asr r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:119
        return false;
    86e0:	79065201 	stmdbvc	r6, {r0, r9, ip, lr}
    86e4:	90000009 	andls	r0, r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121
    if (write && (mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1)
    86e8:	500000d6 	ldrdpl	r0, [r0], -r6
    86ec:	01000000 	mrseq	r0, (UNDEF: 0)
    86f0:	0009a49c 	muleq	r9, ip, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121 (discriminator 1)
    86f4:	032c2800 			; <UNDEFINED> instruction: 0x032c2800
    86f8:	03a00000 	moveq	r0, #0
    86fc:	91020000 	mrsls	r0, (UNDEF: 2)
    8700:	36fd2664 	ldrbtcc	r2, [sp], r4, ror #12
    8704:	52010000 	andpl	r0, r1, #0
    8708:	00017138 	andeq	r7, r1, r8, lsr r1
    870c:	60910200 	addsvs	r0, r1, r0, lsl #4
    8710:	00327023 	eorseq	r7, r2, r3, lsr #32
    8714:	18540100 	ldmdane	r4, {r8}^
    8718:	0000006c 	andeq	r0, r0, ip, rrx
    871c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:122
        return false;
    8720:	00033127 	andeq	r3, r3, r7, lsr #2
    8724:	064d0100 	strbeq	r0, [sp], -r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:124
    if (read)
    8728:	000009be 			; <UNDEFINED> instruction: 0x000009be
    872c:	0000d64c 	andeq	sp, r0, ip, asr #12
    8730:	00000044 	andeq	r0, r0, r4, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:125
        mPin_Reservations_Read[bank_idx] |= 1ULL << bit_idx;
    8734:	09da9c01 	ldmibeq	sl, {r0, sl, fp, ip, pc}^
    8738:	2c280000 	stccs	0, cr0, [r8], #-0
    873c:	a0000003 	andge	r0, r0, r3
    8740:	02000003 	andeq	r0, r0, #3
    8744:	fd266c91 	stc2	12, cr6, [r6, #-580]!	; 0xfffffdbc
    8748:	01000036 	tsteq	r0, r6, lsr r0
    874c:	012e454d 			; <UNDEFINED> instruction: 0x012e454d
    8750:	91020000 	mrsls	r0, (UNDEF: 2)
    8754:	11270068 			; <UNDEFINED> instruction: 0x11270068
    8758:	01000003 	tsteq	r0, r3
    875c:	09f40648 	ldmibeq	r4!, {r3, r6, r9, sl}^
    8760:	d6080000 	strle	r0, [r8], -r0
    8764:	00440000 	subeq	r0, r4, r0
    8768:	9c010000 	stcls	0, cr0, [r1], {-0}
    876c:	00000a10 	andeq	r0, r0, r0, lsl sl
    8770:	00032c28 	andeq	r2, r3, r8, lsr #24
    8774:	0003a000 	andeq	sl, r3, r0
    8778:	6c910200 	lfmvs	f0, 4, [r1], {0}
    877c:	0036fd26 	eorseq	pc, r6, r6, lsr #26
    8780:	44480100 	strbmi	r0, [r8], #-256	; 0xffffff00
    8784:	0000012e 	andeq	r0, r0, lr, lsr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:127
    if (write)
    8788:	00689102 	rsbeq	r9, r8, r2, lsl #2
    878c:	0002c929 	andeq	ip, r2, r9, lsr #18
    8790:	18430100 	stmdane	r3, {r8}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:128
        mPin_Reservations_Write[bank_idx] |= 1ULL << bit_idx;
    8794:	00000a2a 	andeq	r0, r0, sl, lsr #20
    8798:	0000d5d0 	ldrdeq	sp, [r0], -r0
    879c:	00000038 	andeq	r0, r0, r8, lsr r0
    87a0:	0a469c01 	beq	11af7ac <_bss_end+0x119dafc>
    87a4:	2c280000 	stccs	0, cr0, [r8], #-0
    87a8:	a0000003 	andge	r0, r0, r3
    87ac:	02000003 	andeq	r0, r0, #3
    87b0:	722a7491 	eorvc	r7, sl, #-1862270976	; 0x91000000
    87b4:	01006765 	tsteq	r0, r5, ror #14
    87b8:	00df5243 	sbcseq	r5, pc, r3, asr #4
    87bc:	91020000 	mrsls	r0, (UNDEF: 2)
    87c0:	ed2b0070 	stc	0, cr0, [fp, #-448]!	; 0xfffffe40
    87c4:	01000002 	tsteq	r0, r2
    87c8:	0a57013d 	beq	15c8cc4 <_bss_end+0x15b7014>
    87cc:	6d000000 	stcvs	0, cr0, [r0, #-0]
    87d0:	2c00000a 	stccs	0, cr0, [r0], {10}
    87d4:	0000032c 	andeq	r0, r0, ip, lsr #6
    87d8:	000003a0 	andeq	r0, r0, r0, lsr #7
    87dc:	001afe2d 	andseq	pc, sl, sp, lsr #28
    87e0:	3c3d0100 	ldfccs	f0, [sp], #-0
    87e4:	00000271 	andeq	r0, r0, r1, ror r2
    87e8:	0a462e00 	beq	1193ff0 <_bss_end+0x1182340>
    87ec:	30c10000 	sbccc	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:130
    return true;
    87f0:	0a880000 	beq	fe2087f8 <_bss_end+0xfe1f6b48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:131
}
    87f4:	d59c0000 	ldrle	r0, [ip]
    87f8:	00340000 	eorseq	r0, r4, r0
    87fc:	9c010000 	stcls	0, cr0, [r1], {-0}
_ZN13CGPIO_Handler8Free_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:134
{
    8800:	00000a99 	muleq	r0, r9, sl
    8804:	000a572f 	andeq	r5, sl, pc, lsr #14
    8808:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    880c:	000a602f 	andeq	r6, sl, pc, lsr #32
    8810:	70910200 	addsvc	r0, r1, r0, lsl #4
    8814:	334f3000 	movtcc	r3, #61440	; 0xf000
    8818:	36010000 	strcc	r0, [r1], -r0
    881c:	00d58c33 	sbcseq	r8, r5, r3, lsr ip
    8820:	00001000 	andeq	r1, r0, r0
    8824:	319c0100 	orrscc	r0, ip, r0, lsl #2
    8828:	000031b5 			; <UNDEFINED> instruction: 0x000031b5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:135
    uint32_t bank_idx = pin / 32;
    882c:	5c112c01 	ldcpl	12, cr2, [r1], {1}
    8830:	300000d5 	ldrdcc	r0, [r0], -r5
    8834:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:136
    uint32_t bit_idx = pin % 32;
    8838:	355c329c 	ldrbcc	r3, [ip, #-668]	; 0xfffffd64
    883c:	0f010000 	svceq	0x00010000
    8840:	000b1c19 	andeq	r1, fp, r9, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138
    if (read && !((mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1))
    8844:	00d4bc00 	sbcseq	fp, r4, r0, lsl #24
    8848:	0000a000 	andeq	sl, r0, r0
    884c:	1c9c0100 	ldfnes	f0, [ip], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138 (discriminator 1)
    8850:	2a00000b 	bcs	8884 <_ZN13CGPIO_Handler8Free_PinEjbb+0x84>
    8854:	01003072 	tsteq	r0, r2, ror r0
    8858:	0054500f 	subseq	r5, r4, pc
    885c:	50010000 	andpl	r0, r1, r0
    8860:	0031722a 	eorseq	r7, r1, sl, lsr #4
    8864:	54501001 	ldrbpl	r1, [r0], #-1
    8868:	01000000 	mrseq	r0, (UNDEF: 0)
    886c:	32722a51 	rsbscc	r2, r2, #331776	; 0x51000
    8870:	50110100 	andspl	r0, r1, r0, lsl #2
    8874:	00000054 	andeq	r0, r0, r4, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:139
        return false;
    8878:	b7265201 	strlt	r5, [r6, -r1, lsl #4]!
    887c:	01000033 	tsteq	r0, r3, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141
    if (write && !((mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1))
    8880:	00545712 	subseq	r5, r4, r2, lsl r7
    8884:	53010000 	movwpl	r0, #4096	; 0x1000
    8888:	0034a423 	eorseq	sl, r4, r3, lsr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141 (discriminator 1)
    888c:	13150100 	tstne	r5, #0, 2
    8890:	000005fa 	strdeq	r0, [r0], -sl
    8894:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8898:	05d40415 	ldrbeq	r0, [r4, #1045]	; 0x415
    889c:	7c000000 	stcvc	0, cr0, [r0], {-0}
    88a0:	0400000d 	streq	r0, [r0], #-13
    88a4:	0021e600 	eoreq	lr, r1, r0, lsl #12
    88a8:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
    88ac:	04000000 	streq	r0, [r0], #-0
    88b0:	00003730 	andeq	r3, r0, r0, lsr r7
    88b4:	000000c5 	andeq	r0, r0, r5, asr #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:142
        return false;
    88b8:	0000d7a0 	andeq	sp, r0, r0, lsr #15
    88bc:	000000a8 	andeq	r0, r0, r8, lsr #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:144
    if (read)
    88c0:	00002f73 	andeq	r2, r0, r3, ror pc
    88c4:	73080102 	movwvc	r0, #33026	; 0x8102
    88c8:	03000005 	movweq	r0, #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:145
        mPin_Reservations_Read[bank_idx] &= ~(1ULL << bit_idx);
    88cc:	00000025 	andeq	r0, r0, r5, lsr #32
    88d0:	99050202 	stmdbls	r5, {r1, r9}
    88d4:	04000005 	streq	r0, [r0], #-5
    88d8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    88dc:	82050074 	andhi	r0, r5, #116	; 0x74
    88e0:	02000009 	andeq	r0, r0, #9
    88e4:	004b0707 	subeq	r0, fp, r7, lsl #14
    88e8:	01020000 	mrseq	r0, (UNDEF: 2)
    88ec:	00056a08 	andeq	r6, r5, r8, lsl #20
    88f0:	004b0600 	subeq	r0, fp, r0, lsl #12
    88f4:	02020000 	andeq	r0, r2, #0
    88f8:	0003dc07 	andeq	sp, r3, r7, lsl #24
    88fc:	05e40500 	strbeq	r0, [r4, #1280]!	; 0x500
    8900:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    8904:	00006f07 	andeq	r6, r0, r7, lsl #30
    8908:	005e0300 	subseq	r0, lr, r0, lsl #6
    890c:	04020000 	streq	r0, [r2], #-0
    8910:	00459607 	subeq	r9, r5, r7, lsl #12
    8914:	006f0300 	rsbeq	r0, pc, r0, lsl #6
    8918:	6f060000 	svcvs	0x00060000
    891c:	07000000 	streq	r0, [r0, -r0]
    8920:	006c6168 	rsbeq	r6, ip, r8, ror #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:147
    if (write)
    8924:	760b0503 	strvc	r0, [fp], -r3, lsl #10
    8928:	08000002 	stmdaeq	r0, {r1}
    892c:	00000487 	andeq	r0, r0, r7, lsl #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:148
        mPin_Reservations_Write[bank_idx] &= ~(1ULL << bit_idx);
    8930:	761c0703 	ldrvc	r0, [ip], -r3, lsl #14
    8934:	80000000 	andhi	r0, r0, r0
    8938:	080ee6b2 	stmdaeq	lr, {r1, r4, r5, r7, r9, sl, sp, lr, pc}
    893c:	000005cc 	andeq	r0, r0, ip, asr #11
    8940:	821d0a03 	andshi	r0, sp, #12288	; 0x3000
    8944:	00000002 	andeq	r0, r0, r2
    8948:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    894c:	00000452 	andeq	r0, r0, r2, asr r4
    8950:	821d0d03 	andshi	r0, sp, #3, 26	; 0xc0
    8954:	00000002 	andeq	r0, r0, r2
    8958:	09202000 	stmdbeq	r0!, {sp}
    895c:	0000058a 	andeq	r0, r0, sl, lsl #11
    8960:	6a181003 	bvs	60c974 <_bss_end+0x5facc4>
    8964:	36000000 	strcc	r0, [r0], -r0
    8968:	00037308 	andeq	r7, r3, r8, lsl #6
    896c:	1d420300 	stclne	3, cr0, [r2, #-0]
    8970:	00000282 	andeq	r0, r0, r2, lsl #5
    8974:	20215000 	eorcs	r5, r1, r0
    8978:	00034a08 	andeq	r4, r3, r8, lsl #20
    897c:	1d710300 	ldclne	3, cr0, [r1, #-0]
    8980:	00000282 	andeq	r0, r0, r2, lsl #5
    8984:	2000b200 	andcs	fp, r0, r0, lsl #4
    8988:	00322f0a 	eorseq	r2, r2, sl, lsl #30
    898c:	38040500 	stmdacc	r4, {r8, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:150
    return true;
    8990:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    8994:	01381073 	teqeq	r8, r3, ror r0
    8998:	660b0000 	strvs	r0, [fp], -r0
    899c:	00000033 	andeq	r0, r0, r3, lsr r0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89a0:	0036770b 	eorseq	r7, r6, fp, lsl #14
    89a4:	9f0b0100 	svcls	0x000b0100
    89a8:	02000036 	andeq	r0, r0, #54	; 0x36
    89ac:	0035860b 	eorseq	r8, r5, fp, lsl #12
    89b0:	cb0b0300 	blgt	2c95b8 <_bss_end+0x2b7908>
    89b4:	04000031 	streq	r0, [r0], #-49	; 0xffffffcf
    89b8:	0031d80b 	eorseq	sp, r1, fp, lsl #16
    89bc:	de0b0500 	cfsh32le	mvfx0, mvfx11, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151 (discriminator 1)
    89c0:	06000035 			; <UNDEFINED> instruction: 0x06000035
    89c4:	0037080b 	eorseq	r0, r7, fp, lsl #16
    89c8:	160b0700 	strne	r0, [fp], -r0, lsl #14
    89cc:	08000037 	stmdaeq	r0, {r0, r1, r2, r4, r5}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:6
CGPIO_Handler sGPIO(hal::GPIO_Base);
    89d0:	0033ea0b 	eorseq	lr, r3, fp, lsl #20
    89d4:	0a000900 	beq	addc <_ZN16CSegment_Display5WriteEc+0x40>
    89d8:	000032ae 	andeq	r3, r0, lr, lsr #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    89dc:	00380405 	eorseq	r0, r8, r5, lsl #8
    89e0:	81030000 	mrshi	r0, (UNDEF: 3)
    89e4:	00017b10 	andeq	r7, r1, r0, lsl fp
    89e8:	19a90b00 	stmibne	r9!, {r8, r9, fp}
    89ec:	0b000000 	bleq	89f4 <_GLOBAL__sub_I_sGPIO>
    89f0:	00003057 	andeq	r3, r0, r7, asr r0
_GLOBAL__sub_I_sGPIO():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89f4:	34350b01 	ldrtcc	r0, [r5], #-2817	; 0xfffff4ff
    89f8:	0b020000 	bleq	88a00 <_bss_end+0x76d50>
    89fc:	00003440 	andeq	r3, r0, r0, asr #8
    8a00:	34ad0b03 	strtcc	r0, [sp], #2819	; 0xb03
    8a04:	0b040000 	bleq	108a0c <_bss_end+0xf6d5c>
    8a08:	0000304d 	andeq	r3, r0, sp, asr #32
    8a0c:	328c0b05 	addcc	r0, ip, #5120	; 0x1400
_ZN4CI2CC2Emjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:7
CI2C::CI2C(unsigned long base, uint32_t pin_sda, uint32_t pin_scl)
    8a10:	0b060000 	bleq	188a18 <_bss_end+0x176d68>
    8a14:	0000329d 	muleq	r0, sp, r2
    8a18:	850a0007 	strhi	r0, [sl, #-7]
    8a1c:	05000036 	streq	r0, [r0, #-54]	; 0xffffffca
    8a20:	00003804 	andeq	r3, r0, r4, lsl #16
    8a24:	108d0300 	addne	r0, sp, r0, lsl #6
    8a28:	000001dc 	ldrdeq	r0, [r0], -ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:11
, mSCL_Pin(pin_scl)
    8a2c:	5855410c 	ldmdapl	r5, {r2, r3, r8, lr}^
    8a30:	490b1d00 	stmdbmi	fp, {r8, sl, fp, ip}
    8a34:	2b000035 	blcs	8b10 <_ZN4CI2C4OpenEv+0x8>
    8a38:	0037240b 	eorseq	r2, r7, fp, lsl #8
    8a3c:	2a0b2d00 	bcs	2d3e44 <_bss_end+0x2c2194>
    8a40:	2e000037 	mcrcs	0, 0, r0, cr0, cr7, {1}
    8a44:	494d530c 	stmdbmi	sp, {r2, r3, r8, r9, ip, lr}^
    8a48:	ad0b3000 	stcge	0, cr3, [fp, #-0]
    8a4c:	31000036 	tstcc	r0, r6, lsr r0
    8a50:	0036b40b 	eorseq	fp, r6, fp, lsl #8
    8a54:	bb0b3200 	bllt	2d525c <_bss_end+0x2c35ac>
    8a58:	33000036 	movwcc	r0, #54	; 0x36
    8a5c:	0036c20b 	eorseq	ip, r6, fp, lsl #4
    8a60:	490c3400 	stmdbmi	ip, {sl, ip, sp}
    8a64:	35004332 	strcc	r4, [r0, #-818]	; 0xfffffcce
    8a68:	4950530c 	ldmdbmi	r0, {r2, r3, r8, r9, ip, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:14
}
    8a6c:	500c3600 	andpl	r3, ip, r0, lsl #12
    8a70:	37004d43 	strcc	r4, [r0, -r3, asr #26]
    8a74:	00322a0b 	eorseq	r2, r2, fp, lsl #20
    8a78:	08003900 	stmdaeq	r0, {r8, fp, ip, sp}
_ZN4CI2C3RegEN3hal7BSC_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:17
{
    8a7c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    8a80:	821da403 	andshi	sl, sp, #50331648	; 0x3000000
    8a84:	00000002 	andeq	r0, r0, r2
    8a88:	0a2000b4 	beq	808d60 <_bss_end+0x7f70b0>
    8a8c:	000018d9 	ldrdeq	r1, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:18
    return mBSC_Base[static_cast<uint32_t>(reg)];
    8a90:	00380405 	eorseq	r0, r8, r5, lsl #8
    8a94:	a6030000 	strge	r0, [r3], -r0
    8a98:	00023510 	andeq	r3, r2, r0, lsl r5
    8a9c:	19780b00 	ldmdbne	r8!, {r8, r9, fp}^
    8aa0:	0b000000 	bleq	8aa8 <_ZN4CI2C3RegEN3hal7BSC_RegE+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:19
}
    8aa4:	000018b5 			; <UNDEFINED> instruction: 0x000018b5
    8aa8:	358a0b01 	strcc	r0, [sl, #2817]	; 0xb01
    8aac:	0b020000 	bleq	88ab4 <_bss_end+0x76e04>
    8ab0:	0000189e 	muleq	r0, lr, r8
_ZN4CI2C10Wait_ReadyEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:22
{
    8ab4:	19fc0b03 	ldmibne	ip!, {r0, r1, r8, r9, fp}^
    8ab8:	0b040000 	bleq	108ac0 <_bss_end+0xf6e10>
    8abc:	000017f0 	strdeq	r1, [r0], -r0
    8ac0:	17dc0b05 	ldrbne	r0, [ip, r5, lsl #22]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:23
    volatile uint32_t& s = Reg(hal::BSC_Reg::Status);
    8ac4:	0b060000 	bleq	188acc <_bss_end+0x176e1c>
    8ac8:	000018cd 	andeq	r1, r0, sp, asr #17
    8acc:	19be0b07 	ldmibne	lr!, {r0, r1, r2, r8, r9, fp}
    8ad0:	00080000 	andeq	r0, r8, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:26
    while (!(s & (1 << 1)))
    8ad4:	00036408 	andeq	r6, r3, r8, lsl #8
    8ad8:	1db30300 	ldcne	3, cr0, [r3]
    8adc:	00000282 	andeq	r0, r0, r2, lsl #5
    8ae0:	20104000 	andscs	r4, r0, r0
    8ae4:	00033108 	andeq	r3, r3, r8, lsl #2
    8ae8:	1dbe0300 	ldcne	3, cr0, [lr]
    8aec:	00000282 	andeq	r0, r0, r2, lsl #5
    8af0:	20205000 	eorcs	r5, r0, r0
    8af4:	0003ef08 	andeq	lr, r3, r8, lsl #30
    8af8:	1dbf0300 	ldcne	3, cr0, [pc]	; 8b00 <_ZN4CI2C10Wait_ReadyEv+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:28
}
    8afc:	00000282 	andeq	r0, r0, r2, lsl #5
    8b00:	20804000 	addcs	r4, r0, r0
    8b04:	00045c08 	andeq	r5, r4, r8, lsl #24
_ZN4CI2C4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:31
{
    8b08:	1dc00300 	stclne	3, cr0, [r0]
    8b0c:	00000282 	andeq	r0, r0, r2, lsl #5
    8b10:	20805000 	addcs	r5, r0, r0
    8b14:	008c0d00 	addeq	r0, ip, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:32
    if (!sGPIO.Reserve_Pin(mSDA_Pin, true, true))
    8b18:	04020000 	streq	r0, [r2], #-0
    8b1c:	00459107 	subeq	r9, r5, r7, lsl #2
    8b20:	027b0300 	rsbseq	r0, fp, #0, 6
    8b24:	9c0d0000 	stcls	0, cr0, [sp], {-0}
    8b28:	0d000000 	stceq	0, cr0, [r0, #-0]
    8b2c:	000000ac 	andeq	r0, r0, ip, lsr #1
    8b30:	0000bc0d 	andeq	fp, r0, sp, lsl #24
    8b34:	00c90d00 	sbceq	r0, r9, r0, lsl #26
    8b38:	d90d0000 	stmdble	sp, {}	; <UNPREDICTABLE>
    8b3c:	0d000000 	stceq	0, cr0, [r0, #-0]
    8b40:	000001dc 	ldrdeq	r0, [r0], -ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:33
        return false;
    8b44:	0002350d 	andeq	r3, r2, sp, lsl #10
    8b48:	02450d00 	subeq	r0, r5, #0, 26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:35
    if (!sGPIO.Reserve_Pin(mSCL_Pin, true, true))
    8b4c:	550d0000 	strpl	r0, [sp, #-0]
    8b50:	0d000002 	stceq	0, cr0, [r0, #-8]
    8b54:	00000265 	andeq	r0, r0, r5, ror #4
    8b58:	007b040e 	rsbseq	r0, fp, lr, lsl #8
    8b5c:	01020000 	mrseq	r0, (UNDEF: 2)
    8b60:	00454d02 	subeq	r4, r5, r2, lsl #26
    8b64:	18620a00 	stmdane	r2!, {r9, fp}^
    8b68:	01070000 	mrseq	r0, (UNDEF: 7)
    8b6c:	0000003f 	andeq	r0, r0, pc, lsr r0
    8b70:	eb0c0604 	bl	30a388 <_bss_end+0x2f86d8>
    8b74:	0b000002 	bleq	8b84 <_ZN4CI2C4OpenEv+0x7c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:37
        sGPIO.Free_Pin(mSDA_Pin, true, true);
    8b78:	000019cb 	andeq	r1, r0, fp, asr #19
    8b7c:	18a80b00 	stmiane	r8!, {r8, r9, fp}
    8b80:	0b010000 	bleq	48b88 <_bss_end+0x36ed8>
    8b84:	0000183a 	andeq	r1, r0, sl, lsr r8
    8b88:	a80f0002 	stmdage	pc, {r1}	; <UNPREDICTABLE>
    8b8c:	08000019 	stmdaeq	r0, {r0, r3, r4}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:38
        return false;
    8b90:	e3070d04 	movw	r0, #32004	; 0x7d04
    8b94:	10000003 	andne	r0, r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:43
    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Alt_0);
    8b98:	00001774 	andeq	r1, r0, r4, ror r7
    8b9c:	b91c1504 	ldmdblt	ip, {r2, r8, sl, ip}
    8ba0:	00000002 	andeq	r0, r0, r2
    8ba4:	0019ec11 	andseq	lr, r9, r1, lsl ip
    8ba8:	0b110400 	bleq	449bb0 <_bss_end+0x437f00>
    8bac:	000003e3 	andeq	r0, r0, r3, ror #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:44
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Alt_0);
    8bb0:	197d1001 	ldmdbne	sp!, {r0, ip}^
    8bb4:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    8bb8:	00030515 	andeq	r0, r3, r5, lsl r5
    8bbc:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    8bc0:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    8bc4:	19871c1b 	stmibne	r7, {r0, r1, r3, r4, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:46
    mOpened = true;
    8bc8:	03ea0000 	mvneq	r0, #0
    8bcc:	38020000 	stmdacc	r2, {}	; <UNPREDICTABLE>
    8bd0:	43000003 	movwmi	r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:48
    return true;
    8bd4:	13000003 	movwne	r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:49
}
    8bd8:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8bdc:	0001ec14 	andeq	lr, r1, r4, lsl ip
    8be0:	a8120000 	ldmdage	r2, {}	; <UNPREDICTABLE>
    8be4:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
_ZN4CI2C5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:52
{
    8be8:	19af051e 	stmibne	pc!, {r1, r2, r3, r4, r8, sl}	; <UNPREDICTABLE>
    8bec:	03f00000 	mvnseq	r0, #0
    8bf0:	5c010000 	stcpl	0, cr0, [r1], {-0}
    8bf4:	67000003 	strvs	r0, [r0, -r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:53
    Reg(hal::BSC_Reg::Control) = 0;
    8bf8:	13000003 	movwne	r0, #3
    8bfc:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8c00:	00027b14 	andeq	r7, r2, r4, lsl fp
    8c04:	e8150000 	ldmda	r5, {}	; <UNPREDICTABLE>
    8c08:	04000035 	streq	r0, [r0], #-53	; 0xffffffcb
    8c0c:	18480522 	stmdane	r8, {r1, r5, r8, sl}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:55
    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Input);
    8c10:	7c010000 	stcvc	0, cr0, [r1], {-0}
    8c14:	91000003 	tstls	r0, r3
    8c18:	13000003 	movwne	r0, #3
    8c1c:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8c20:	00030514 	andeq	r0, r3, r4, lsl r5
    8c24:	006f1400 	rsbeq	r1, pc, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:56
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Input);
    8c28:	c6140000 	ldrgt	r0, [r4], -r0
    8c2c:	00000002 	andeq	r0, r0, r2
    8c30:	0033f415 	eorseq	pc, r3, r5, lsl r4	; <UNPREDICTABLE>
    8c34:	0a240400 	beq	909c3c <_bss_end+0x8f7f8c>
    8c38:	000018e3 	andeq	r1, r0, r3, ror #17
    8c3c:	0003a601 	andeq	sl, r3, r1, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:58
    sGPIO.Free_Pin(mSDA_Pin, true, true);
    8c40:	0003ac00 	andeq	sl, r3, r0, lsl #24
    8c44:	03f01300 	mvnseq	r1, #0, 6
    8c48:	15000000 	strne	r0, [r0, #-0]
    8c4c:	000017e3 	andeq	r1, r0, r3, ror #15
    8c50:	040a2704 	streq	r2, [sl], #-1796	; 0xfffff8fc
    8c54:	0100001a 	tsteq	r0, sl, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:59
    sGPIO.Free_Pin(mSCL_Pin, true, true);
    8c58:	000003c1 	andeq	r0, r0, r1, asr #7
    8c5c:	000003c7 	andeq	r0, r0, r7, asr #7
    8c60:	0003f013 	andeq	pc, r3, r3, lsl r0	; <UNPREDICTABLE>
    8c64:	d7160000 	ldrle	r0, [r6, -r0]
    8c68:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    8c6c:	17960a29 	ldrne	r0, [r6, r9, lsr #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:61
    mOpened = false;
    8c70:	02bf0000 	adcseq	r0, pc, #0
    8c74:	dc010000 	stcle	0, cr0, [r1], {-0}
    8c78:	13000003 	movwne	r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:62
}
    8c7c:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8c80:	040e0000 	streq	r0, [lr], #-0
    8c84:	000003e9 	andeq	r0, r0, r9, ror #7
    8c88:	7b041817 	blvc	10ecec <_bss_end+0xfd03c>
_ZNK4CI2C9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:65
{
    8c8c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8c90:	0002eb04 	andeq	lr, r2, r4, lsl #22
    8c94:	178f1900 	strne	r1, [pc, r0, lsl #18]
    8c98:	2c040000 	stccs	0, cr0, [r4], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:66
    return mOpened;
    8c9c:	0002eb0f 	andeq	lr, r2, pc, lsl #22
    8ca0:	0b980f00 	bleq	fe60c8a8 <_bss_end+0xfe5fabf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:67
}
    8ca4:	05180000 	ldreq	r0, [r8, #-0]
    8ca8:	06430703 	strbeq	r0, [r3], -r3, lsl #14
    8cac:	161a0000 	ldrne	r0, [sl], -r0
    8cb0:	0700000b 	streq	r0, [r0, -fp]
_ZN4CI2C4SendEtPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:70
{
    8cb4:	00006f04 	andeq	r6, r0, r4, lsl #30
    8cb8:	10060500 	andne	r0, r6, r0, lsl #10
    8cbc:	00042f01 	andeq	r2, r4, r1, lsl #30
    8cc0:	45480c00 	strbmi	r0, [r8, #-3072]	; 0xfffff400
    8cc4:	0c100058 	ldceq	0, cr0, [r0], {88}	; 0x58
    8cc8:	00434544 	subeq	r4, r3, r4, asr #10
    8ccc:	0f03000a 	svceq	0x0003000a
    8cd0:	1b000004 	blne	8ce8 <_ZN4CI2C4SendEtPKcj+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8cd4:	00000b23 	andeq	r0, r0, r3, lsr #22
    8cd8:	0c240508 	cfstr32eq	mvfx0, [r4], #-32	; 0xffffffe0
    8cdc:	00000458 	andeq	r0, r0, r8, asr r4
    8ce0:	0500791c 	streq	r7, [r0, #-2332]	; 0xfffff6e4
    8ce4:	006f1626 	rsbeq	r1, pc, r6, lsr #12
    8ce8:	1c000000 	stcne	0, cr0, [r0], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:72
    Reg(hal::BSC_Reg::Data_Length) = len;
    8cec:	27050078 	smlsdxcs	r5, r8, r0, r0
    8cf0:	00006f16 	andeq	r6, r0, r6, lsl pc
    8cf4:	1d000400 	cfstrsne	mvf0, [r0, #-0]
    8cf8:	00000c75 	andeq	r0, r0, r5, ror ip
    8cfc:	2f1b0c05 	svccs	0x001b0c05
    8d00:	01000004 	tsteq	r0, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74
    for (uint32_t i = 0; i < len; i++)
    8d04:	0be81e0a 	bleq	ffa10534 <_bss_end+0xff9fe884>
    8d08:	0d050000 	stceq	0, cr0, [r5, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74 (discriminator 3)
    8d0c:	00064928 	andeq	r4, r6, r8, lsr #18
    8d10:	981f0100 	ldmdals	pc, {r8}	; <UNPREDICTABLE>
    8d14:	0500000b 	streq	r0, [r0, #-11]
    8d18:	0c620e10 	stcleq	14, cr0, [r2], #-64	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:75 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = buffer[i];
    8d1c:	064e0000 	strbeq	r0, [lr], -r0
    8d20:	8c010000 	stchi	0, cr0, [r1], {-0}
    8d24:	a1000004 	tstge	r0, r4
    8d28:	13000004 	movwne	r0, #4
    8d2c:	0000064e 	andeq	r0, r0, lr, asr #12
    8d30:	00006f14 	andeq	r6, r0, r4, lsl pc
    8d34:	006f1400 	rsbeq	r1, pc, r0, lsl #8
    8d38:	6f140000 	svcvs	0x00140000
    8d3c:	00000000 	andeq	r0, r0, r0
    8d40:	0018a215 	andseq	sl, r8, r5, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8d44:	0a120500 	beq	48a14c <_bss_end+0x47849c>
    8d48:	00000b83 	andeq	r0, r0, r3, lsl #23
    8d4c:	0004b601 	andeq	fp, r4, r1, lsl #12
    8d50:	0004bc00 	andeq	fp, r4, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:77
    Reg(hal::BSC_Reg::Status) =
    8d54:	064e1300 	strbeq	r1, [lr], -r0, lsl #6
    8d58:	12000000 	andne	r0, r0, #0
    8d5c:	00000ba1 	andeq	r0, r0, r1, lsr #23
    8d60:	050f1405 	streq	r1, [pc, #-1029]	; 8963 <_ZN13CGPIO_Handler8Free_PinEjbb+0x163>
    8d64:	5400000c 	strpl	r0, [r0], #-12
    8d68:	01000006 	tsteq	r0, r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:79
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    8d6c:	000004d5 	ldrdeq	r0, [r0], -r5
    8d70:	000004e0 	andeq	r0, r0, r0, ror #9
    8d74:	00064e13 	andeq	r4, r6, r3, lsl lr
    8d78:	00251400 	eoreq	r1, r5, r0, lsl #8
    8d7c:	12000000 	andne	r0, r0, #0
    8d80:	00000ba1 	andeq	r0, r0, r1, lsr #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:81
    Wait_Ready();
    8d84:	ac0f1505 	cfstr32ge	mvfx1, [pc], {5}
    8d88:	5400000b 	strpl	r0, [r0], #-11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:82
}
    8d8c:	01000006 	tsteq	r0, r6
    8d90:	000004f9 	strdeq	r0, [r0], -r9
    8d94:	00000504 	andeq	r0, r0, r4, lsl #10
    8d98:	00064e13 	andeq	r4, r6, r3, lsl lr
    8d9c:	06431400 	strbeq	r1, [r3], -r0, lsl #8
_ZN4CI2C7ReceiveEtPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:85
{
    8da0:	12000000 	andne	r0, r0, #0
    8da4:	00000ba1 	andeq	r0, r0, r1, lsr #23
    8da8:	890f1605 	stmdbhi	pc, {r0, r2, r9, sl, ip}	; <UNPREDICTABLE>
    8dac:	5400000c 	strpl	r0, [r0], #-12
    8db0:	01000006 	tsteq	r0, r6
    8db4:	0000051d 	andeq	r0, r0, sp, lsl r5
    8db8:	00000528 	andeq	r0, r0, r8, lsr #10
    8dbc:	00064e13 	andeq	r4, r6, r3, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:86
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8dc0:	040f1400 	streq	r1, [pc], #-1024	; 8dc8 <_ZN4CI2C7ReceiveEtPcj+0x28>
    8dc4:	12000000 	andne	r0, r0, #0
    8dc8:	00000ba1 	andeq	r0, r0, r1, lsr #23
    8dcc:	340f1705 	strcc	r1, [pc], #-1797	; 8dd4 <_ZN4CI2C7ReceiveEtPcj+0x34>
    8dd0:	5400000c 	strpl	r0, [r0], #-12
    8dd4:	01000006 	tsteq	r0, r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:87
    Reg(hal::BSC_Reg::Data_Length) = len;
    8dd8:	00000541 	andeq	r0, r0, r1, asr #10
    8ddc:	0000054c 	andeq	r0, r0, ip, asr #10
    8de0:	00064e13 	andeq	r4, r6, r3, lsl lr
    8de4:	006f1400 	rsbeq	r1, pc, r0, lsl #8
    8de8:	12000000 	andne	r0, r0, #0
    8dec:	00000ba1 	andeq	r0, r0, r1, lsr #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:89
    Reg(hal::BSC_Reg::Status) =
    8df0:	f40f1805 	vst2.8	{d1-d2}, [pc], r5
    8df4:	5400000b 	strpl	r0, [r0], #-11
    8df8:	01000006 	tsteq	r0, r6
    8dfc:	00000565 	andeq	r0, r0, r5, ror #10
    8e00:	00000570 	andeq	r0, r0, r0, ror r5
    8e04:	00064e13 	andeq	r4, r6, r3, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:91
    Reg(hal::BSC_Reg::Control) =
    8e08:	02bf1400 	adcseq	r1, pc, #0, 8
    8e0c:	20000000 	andcs	r0, r0, r0
    8e10:	00000ab4 			; <UNDEFINED> instruction: 0x00000ab4
    8e14:	84111b05 	ldrhi	r1, [r1], #-2821	; 0xfffff4fb
    8e18:	8400000a 	strhi	r0, [r0], #-10
    8e1c:	8a000005 	bhi	8e38 <_ZN4CI2C7ReceiveEtPcj+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:94
    Wait_Ready();
    8e20:	13000005 	movwne	r0, #5
    8e24:	0000064e 	andeq	r0, r0, lr, asr #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96
    for (uint32_t i = 0; i < len; i++)
    8e28:	0aa72000 	beq	fe9d0e30 <_bss_end+0xfe9bf180>
    8e2c:	1c050000 	stcne	0, cr0, [r5], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96 (discriminator 3)
    8e30:	000c4511 	andeq	r4, ip, r1, lsl r5
    8e34:	00059e00 	andeq	r9, r5, r0, lsl #28
    8e38:	0005a400 	andeq	sl, r5, r0, lsl #8
    8e3c:	064e1300 	strbeq	r1, [lr], -r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:97 (discriminator 2)
        buffer[i] = Reg(hal::BSC_Reg::Data_FIFO);
    8e40:	20000000 	andcs	r0, r0, r0
    8e44:	00000a5f 	andeq	r0, r0, pc, asr sl
    8e48:	2d111d05 	ldccs	13, cr1, [r1, #-20]	; 0xffffffec
    8e4c:	b800000b 	stmdalt	r0, {r0, r1, r3}
    8e50:	be000005 	cdplt	0, 0, cr0, cr0, cr5, {0}
    8e54:	13000005 	movwne	r0, #5
    8e58:	0000064e 	andeq	r0, r0, lr, asr #12
    8e5c:	13e12000 	mvnne	r2, #0
    8e60:	1f050000 	svcne	0x00050000
    8e64:	000c1e0a 	andeq	r1, ip, sl, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8e68:	0005d200 	andeq	sp, r5, r0, lsl #4
    8e6c:	0005d800 	andeq	sp, r5, r0, lsl #16
    8e70:	064e1300 	strbeq	r1, [lr], -r0, lsl #6
    8e74:	20000000 	andcs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:98
}
    8e78:	00000aa2 	andeq	r0, r0, r2, lsr #21
    8e7c:	bf0a2105 	svclt	0x000a2105
    8e80:	ec00000b 	stc	0, cr0, [r0], {11}
    8e84:	01000005 	tsteq	r0, r5
    8e88:	13000006 	movwne	r0, #6
_ZN4CI2C17Begin_TransactionEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:101
{
    8e8c:	0000064e 	andeq	r0, r0, lr, asr #12
    8e90:	00006f14 	andeq	r6, r0, r4, lsl pc
    8e94:	065a1400 	ldrbeq	r1, [sl], -r0, lsl #8
    8e98:	6f140000 	svcvs	0x00140000
    8e9c:	00000000 	andeq	r0, r0, r0
    8ea0:	000b4f10 	andeq	r4, fp, r0, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:102
    if (mTransaction.mIn_Progress)
    8ea4:	232b0500 			; <UNDEFINED> instruction: 0x232b0500
    8ea8:	00000666 	andeq	r0, r0, r6, ror #12
    8eac:	0c161000 	ldceq	0, cr1, [r6], {-0}
    8eb0:	2c050000 	stccs	0, cr0, [r5], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:103
        return mTransaction;
    8eb4:	00006f12 	andeq	r6, r0, r2, lsl pc
    8eb8:	d6100400 	ldrle	r0, [r0], -r0, lsl #8
    8ebc:	0500000b 	streq	r0, [r0, #-11]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:105
    mTransaction.mIn_Progress = true;
    8ec0:	006f122d 	rsbeq	r1, pc, sp, lsr #4
    8ec4:	10080000 	andne	r0, r8, r0
    8ec8:	00000bdf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:106
    mTransaction.mLength = 0;
    8ecc:	340f2e05 	strcc	r2, [pc], #-3589	; 8ed4 <_ZN4CI2C17Begin_TransactionEt+0x48>
    8ed0:	0c000004 	stceq	0, cr0, [r0], {4}
    8ed4:	000a5110 	andeq	r5, sl, r0, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:107
    mTransaction.Set_Address(addr);
    8ed8:	122f0500 	eorne	r0, pc, #0, 10
    8edc:	0000040f 	andeq	r0, r0, pc, lsl #8
    8ee0:	040e0014 	streq	r0, [lr], #-20	; 0xffffffec
    8ee4:	0000002c 	andeq	r0, r0, ip, lsr #32
    8ee8:	00064303 	andeq	r4, r6, r3, lsl #6
    8eec:	02040e00 	andeq	r0, r4, #0, 28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:109
    return mTransaction;
    8ef0:	18000004 	stmdane	r0, {r2}
    8ef4:	00040204 	andeq	r0, r4, r4, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:110
}
    8ef8:	25040e00 	strcs	r0, [r4, #-3584]	; 0xfffff200
    8efc:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8f00:	00005204 	andeq	r5, r0, r4, lsl #4
_ZN4CI2C15End_TransactionER16CI2C_Transactionb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113
{
    8f04:	06600300 	strbteq	r0, [r0], -r0, lsl #6
    8f08:	68190000 	ldmdavs	r9, {}	; <UNPREDICTABLE>
    8f0c:	0500000b 	streq	r0, [r0, #-11]
    8f10:	04021132 	streq	r1, [r2], #-306	; 0xfffffece
    8f14:	d40f0000 	strle	r0, [pc], #-0	; 8f1c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x18>
    8f18:	04000033 	streq	r0, [r0], #-51	; 0xffffffcd
    8f1c:	56070506 	strpl	r0, [r7], -r6, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:114
    if (!transaction.mIn_Progress)
    8f20:	10000007 	andne	r0, r0, r7
    8f24:	000032e0 	andeq	r3, r0, r0, ror #5
    8f28:	b91c0906 	ldmdblt	ip, {r1, r2, r8, fp}
    8f2c:	00000002 	andeq	r0, r0, r2
    8f30:	001a2e12 	andseq	r2, sl, r2, lsl lr
    8f34:	1c0c0600 	stcne	6, cr0, [ip], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:117
    transaction.mIn_Progress = false;
    8f38:	00002ff9 	strdeq	r2, [r0], -r9
    8f3c:	000003ea 	andeq	r0, r0, sl, ror #7
    8f40:	0006aa02 	andeq	sl, r6, r2, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119
    if (!commit || transaction.mLength == 0)
    8f44:	0006b500 	andeq	fp, r6, r0, lsl #10
    8f48:	07561300 	ldrbeq	r1, [r6, -r0, lsl #6]
    8f4c:	e9140000 	ldmdb	r4, {}	; <UNPREDICTABLE>
    8f50:	00000000 	andeq	r0, r0, r0
    8f54:	0033d412 	eorseq	sp, r3, r2, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119 (discriminator 1)
    8f58:	050f0600 	streq	r0, [pc, #-1536]	; 8960 <_ZN13CGPIO_Handler8Free_PinEjbb+0x160>
    8f5c:	0000351e 	andeq	r3, r0, lr, lsl r5
    8f60:	00000756 	andeq	r0, r0, r6, asr r7
    8f64:	0006ce01 	andeq	ip, r6, r1, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:122
    Reg(hal::BSC_Reg::Slave_Address) = transaction.mAddress;
    8f68:	0006d900 	andeq	sp, r6, r0, lsl #18
    8f6c:	07561300 	ldrbeq	r1, [r6, -r0, lsl #6]
    8f70:	7b140000 	blvc	508f78 <_bss_end+0x4f72c8>
    8f74:	00000002 	andeq	r0, r0, r2
    8f78:	00340315 	eorseq	r0, r4, r5, lsl r3
    8f7c:	0a120600 	beq	48a784 <_bss_end+0x478ad4>
    8f80:	000034d8 	ldrdeq	r3, [r0], -r8
    8f84:	0006ee01 	andeq	lr, r6, r1, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123
    Reg(hal::BSC_Reg::Data_Length) = transaction.mLength;
    8f88:	0006f900 	andeq	pc, r6, r0, lsl #18
    8f8c:	07561300 	ldrbeq	r1, [r6, -r0, lsl #6]
    8f90:	38140000 	ldmdacc	r4, {}	; <UNPREDICTABLE>
    8f94:	00000001 	andeq	r0, r0, r1
    8f98:	0036d115 	eorseq	sp, r6, r5, lsl r1
    8f9c:	0a140600 	beq	50a7a4 <_bss_end+0x4f8af4>
    8fa0:	00002f68 	andeq	r2, r0, r8, ror #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125
    for (volatile int i = 0; i < transaction.mLength; i++)
    8fa4:	00070e01 	andeq	r0, r7, r1, lsl #28
    8fa8:	00071900 	andeq	r1, r7, r0, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125 (discriminator 3)
    8fac:	07561300 	ldrbeq	r1, [r6, -r0, lsl #6]
    8fb0:	38140000 	ldmdacc	r4, {}	; <UNPREDICTABLE>
    8fb4:	00000001 	andeq	r0, r0, r1
    8fb8:	0030b615 	eorseq	fp, r0, r5, lsl r6
    8fbc:	0a170600 	beq	5ca7c4 <_bss_end+0x5b8b14>
    8fc0:	00002f2e 	andeq	r2, r0, lr, lsr #30
    8fc4:	00072e01 	andeq	r2, r7, r1, lsl #28
    8fc8:	00073900 	andeq	r3, r7, r0, lsl #18
    8fcc:	07561300 	ldrbeq	r1, [r6, -r0, lsl #6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = transaction.mBuffer[i];
    8fd0:	7b140000 	blvc	508fd8 <_bss_end+0x4f7328>
    8fd4:	00000001 	andeq	r0, r0, r1
    8fd8:	00337821 	eorseq	r7, r3, r1, lsr #16
    8fdc:	0a190600 	beq	64a7e4 <_bss_end+0x638b34>
    8fe0:	000032fe 	strdeq	r3, [r0], -lr
    8fe4:	00074a01 	andeq	r4, r7, r1, lsl #20
    8fe8:	07561300 	ldrbeq	r1, [r6, -r0, lsl #6]
    8fec:	7b140000 	blvc	508ff4 <_bss_end+0x4f7344>
    8ff0:	00000001 	andeq	r0, r0, r1
    8ff4:	77040e00 	strvc	r0, [r4, -r0, lsl #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125 (discriminator 2)
    for (volatile int i = 0; i < transaction.mLength; i++)
    8ff8:	19000006 	stmdbne	r0, {r1, r2}
    8ffc:	00002feb 	andeq	r2, r0, fp, ror #31
    9000:	771e1c06 	ldrvc	r1, [lr, -r6, lsl #24]
    9004:	07000006 	streq	r0, [r0, -r6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:128
    Reg(hal::BSC_Reg::Status) =
    9008:	006d656d 	rsbeq	r6, sp, sp, ror #10
    900c:	c10b0607 	tstgt	fp, r7, lsl #12
    9010:	08000007 	stmdaeq	r0, {r0, r1, r2}
    9014:	000037aa 	andeq	r3, r0, sl, lsr #15
    9018:	6a180a07 	bvs	60b83c <_bss_end+0x5f9b8c>
    901c:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:130
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    9020:	08000200 	stmdaeq	r0, {r9}
    9024:	000037b4 			; <UNDEFINED> instruction: 0x000037b4
    9028:	6a180e07 	bvs	60c84c <_bss_end+0x5fab9c>
    902c:	00000000 	andeq	r0, r0, r0
    9030:	22200000 	eorcs	r0, r0, #0
    9034:	00003794 	muleq	r0, r4, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:132
    Wait_Ready();
    9038:	6a181107 	bvs	60d45c <_bss_end+0x5fb7ac>
    903c:	00000000 	andeq	r0, r0, r0
    9040:	37830840 	strcc	r0, [r3, r0, asr #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:115
        return;
    9044:	14070000 	strne	r0, [r7], #-0
    9048:	00006a18 	andeq	r6, r0, r8, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:120
        return;
    904c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
}
    9050:	3779221f 			; <UNDEFINED> instruction: 0x3779221f
    9054:	17070000 	strne	r0, [r7, -r0]
    9058:	00006a18 	andeq	r6, r0, r8, lsl sl
    905c:	007ff800 	rsbseq	pc, pc, r0, lsl #16
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
    9060:	0007740d 	andeq	r7, r7, sp, lsl #8
    9064:	07840d00 	streq	r0, [r4, r0, lsl #26]
    9068:	940d0000 	strls	r0, [sp], #-0
    906c:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    9070:	000007a2 	andeq	r0, r0, r2, lsr #15
    9074:	0007b20d 	andeq	fp, r7, sp, lsl #4
    9078:	31e52300 	mvncc	r2, r0, lsl #6
    907c:	04080000 	streq	r0, [r8], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133 (discriminator 1)
    9080:	00006a14 	andeq	r6, r0, r4, lsl sl
    9084:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    9088:	0a000104 	beq	94a0 <_ZN8CMonitorlsEPKc+0x54>
    908c:	000032d4 	ldrdeq	r3, [r0], -r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:5
CI2C sI2C1(hal::BSC1_Base, 2, 3);
    9090:	00380405 	eorseq	r0, r8, r5, lsl #8
    9094:	07080000 	streq	r0, [r8, -r0]
    9098:	0008170c 	andeq	r1, r8, ip, lsl #14
    909c:	654e0c00 	strbvs	r0, [lr, #-3072]	; 0xfffff400
    90a0:	0b000077 	bleq	9284 <_ZN8CMonitor6ScrollEv+0x10>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
}
    90a4:	000032cb 	andeq	r3, r0, fp, asr #5
    90a8:	19c30b01 	stmibne	r3, {r0, r8, r9, fp}^
    90ac:	0b020000 	bleq	890b4 <_bss_end+0x77404>
    90b0:	000033fc 	strdeq	r3, [r0], -ip
    90b4:	a81b0003 	ldmdage	fp, {r0, r1}
    90b8:	0c000031 	stceq	0, cr0, [r0], {49}	; 0x31
_GLOBAL__sub_I_sI2C1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:133
    90bc:	49081608 	stmdbmi	r8, {r3, r9, sl, ip}
    90c0:	1c000008 	stcne	0, cr0, [r0], {8}
    90c4:	0800726c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip, sp, lr}
    90c8:	027b1318 	rsbseq	r1, fp, #24, 6	; 0x60000000
    90cc:	1c000000 	stcne	0, cr0, [r0], {-0}
    90d0:	08007073 	stmdaeq	r0, {r0, r1, r4, r5, r6, ip, sp, lr}
    90d4:	027b1319 	rsbseq	r1, fp, #1677721600	; 0x64000000
_ZN16CI2C_Transaction11Set_AddressEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:27
    void Set_Address(uint16_t addr)
    90d8:	1c040000 	stcne	0, cr0, [r4], {-0}
    90dc:	08006370 	stmdaeq	r0, {r4, r5, r6, r8, r9, sp, lr}
    90e0:	027b131a 	rsbseq	r1, fp, #1744830464	; 0x68000000
    90e4:	00080000 	andeq	r0, r8, r0
    90e8:	0035921b 	eorseq	r9, r5, fp, lsl r2
    90ec:	22085c00 	andcs	r5, r8, #0, 24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:29
        mAddress = addr;
    90f0:	0008a508 	andeq	sl, r8, r8, lsl #10
    90f4:	353d1000 	ldrcc	r1, [sp, #-0]!
    90f8:	24080000 	strcs	r0, [r8], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:30
    }
    90fc:	00081712 	andeq	r1, r8, r2, lsl r7
    9100:	701c0000 	andsvc	r0, ip, r0
    9104:	08006469 	stmdaeq	r0, {r0, r3, r5, r6, sl, sp, lr}
    9108:	006f1225 	rsbeq	r1, pc, r5, lsr #4
_ZN16CI2C_TransactionC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:25
    CI2C_Transaction() = default;
    910c:	100c0000 	andne	r0, ip, r0
    9110:	0000312c 	andeq	r3, r0, ip, lsr #2
    9114:	ec112608 	ldc	6, cr2, [r1], {8}
    9118:	10000007 	andne	r0, r0, r7
    911c:	0032f010 	eorseq	pc, r2, r0, lsl r0	; <UNPREDICTABLE>
    9120:	12270800 	eorne	r0, r7, #0, 16
    9124:	0000006f 	andeq	r0, r0, pc, rrx
    9128:	33391014 	teqcc	r9, #20
    912c:	29080000 	stmdbcs	r8, {}	; <UNPREDICTABLE>
    9130:	00006f12 	andeq	r6, r0, r2, lsl pc
    9134:	9b101800 	blls	40f13c <_bss_end+0x3fd48c>
    9138:	08000031 	stmdaeq	r0, {r0, r4, r5}
    913c:	08a50c2a 	stmiaeq	r5!, {r1, r3, r5, sl, fp}
    9140:	001c0000 	andseq	r0, ip, r0
    9144:	0008b524 	andeq	fp, r8, r4, lsr #10
    9148:	0008b500 	andeq	fp, r8, r0, lsl #10
    914c:	006f2500 	rsbeq	r2, pc, r0, lsl #10
    9150:	000f0000 	andeq	r0, pc, r0
_ZN8CMonitorC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:5
CMonitor::CMonitor(unsigned int monitor_base_addr, unsigned int width, unsigned int height)
    9154:	08bb040e 	ldmeq	fp!, {r1, r2, r3, sl}
    9158:	c8260000 	stmdagt	r6!, {}	; <UNPREDICTABLE>
    915c:	1b00002b 	blne	9210 <_ZN8CMonitor5ClearEv+0x44>
    9160:	0000318f 	andeq	r3, r0, pc, lsl #3
    9164:	08060908 	stmdaeq	r6, {r3, r8, fp}
    9168:	000008e6 	andeq	r0, r0, r6, ror #17
    916c:	0030721c 	eorseq	r7, r0, ip, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:6
: m_monitor{ reinterpret_cast<unsigned char*>(monitor_base_addr) }
    9170:	5e0e0809 	cdppl	8, 0, cr0, cr14, cr9, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:10
, m_number_base{ DEFAULT_NUMBER_BASE }
    9174:	00000000 	andeq	r0, r0, r0
    9178:	0031721c 	eorseq	r7, r1, ip, lsl r2
    917c:	5e0e0909 	vmlapl.f16	s0, s28, s18	; <UNPREDICTABLE>
    9180:	04000000 	streq	r0, [r0], #-0
    9184:	31080a00 	tstcc	r8, r0, lsl #20
    9188:	04050000 	streq	r0, [r5], #-0
    918c:	00000038 	andeq	r0, r0, r8, lsr r0
    9190:	ff0c1e09 			; <UNDEFINED> instruction: 0xff0c1e09
    9194:	0b000008 	bleq	91bc <_ZN8CMonitorC1Ejjj+0x68>
    9198:	000036c9 	andeq	r3, r0, r9, asr #13
    919c:	5f0a0000 	svcpl	0x000a0000
    91a0:	05000036 	streq	r0, [r0, #-54]	; 0xffffffca
    91a4:	00003804 	andeq	r3, r0, r4, lsl #16
    91a8:	0c260900 			; <UNDEFINED> instruction: 0x0c260900
    91ac:	00000930 	andeq	r0, r0, r0, lsr r9
    91b0:	000a200b 	andeq	r2, sl, fp
    91b4:	d30b0000 	movwle	r0, #45056	; 0xb000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:12
}
    91b8:	01000002 	tsteq	r0, r2
    91bc:	001ce00b 	andseq	lr, ip, fp
    91c0:	ad0b0200 	sfmge	f0, 4, [fp, #-0]
    91c4:	03000009 	movweq	r0, #9
    91c8:	0024ea0b 	eoreq	lr, r4, fp, lsl #20
_ZN8CMonitor5ClearEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:21
{
    91cc:	23000400 	movwcs	r0, #1024	; 0x400
    91d0:	00001c44 	andeq	r1, r0, r4, asr #24
    91d4:	6a1a060a 	bvs	68aa04 <_bss_end+0x678d54>
    91d8:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:22
    Reset_Cursor();
    91dc:	01040803 	tsteq	r4, r3, lsl #16
    91e0:	1c752300 	ldclne	3, cr2, [r5], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24
    for (unsigned int y = 0; y < m_height; ++y)
    91e4:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    91e8:	00006a1a 	andeq	r6, r0, sl, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 1)
    91ec:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    91f0:	23000104 	movwcs	r0, #260	; 0x104
    91f4:	00001d93 	muleq	r0, r3, sp
    91f8:	6a1a0a0a 	bvs	68ba28 <_bss_end+0x679d78>
    91fc:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26
        for (unsigned int x = 0; x < m_width; ++x)
    9200:	01041003 	tsteq	r4, r3
    9204:	1b792300 	blne	1e51e0c <_bss_end+0x1e4015c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 3)
    9208:	0c0a0000 	stceq	0, cr0, [sl], {-0}
    920c:	00006a1a 	andeq	r6, r0, sl, lsl sl
    9210:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    9214:	0a000104 	beq	962c <_ZN8CMonitor4itoaEjPcj+0x80>
    9218:	00002432 	andeq	r2, r0, r2, lsr r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:28 (discriminator 2)
            m_monitor[(y * m_width) + x] = ' ';
    921c:	00380405 	eorseq	r0, r8, r5, lsl #8
    9220:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    9224:	00099d0c 	andeq	r9, r9, ip, lsl #26
    9228:	1d370b00 	vldmdbne	r7!, {d0-d-1}
    922c:	0b000000 	bleq	9234 <_ZN8CMonitor5ClearEv+0x68>
    9230:	00001e3d 	andeq	r1, r0, sp, lsr lr
    9234:	1cdb0b01 	fldmiaxne	fp, {d16-d15}	;@ Deprecated
    9238:	00020000 	andeq	r0, r2, r0
    923c:	001c870f 	andseq	r8, ip, pc, lsl #14
    9240:	4c0a9000 	stcmi	0, cr9, [sl], {-0}
    9244:	000b0b07 	andeq	r0, fp, r7, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9248:	1c671b00 			; <UNDEFINED> instruction: 0x1c671b00
    924c:	0a240000 	beq	909254 <_bss_end+0x8f75a4>
    9250:	0a250c50 	beq	94c398 <_bss_end+0x93a6e8>
    9254:	b0100000 	andslt	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 2)
    for (unsigned int y = 0; y < m_height; ++y)
    9258:	0a00003e 	beq	9358 <_ZN8CMonitor6ScrollEv+0xe4>
    925c:	0b0b0e52 	bleq	2ccbac <_bss_end+0x2baefc>
    9260:	10000000 	andne	r0, r0, r0
    9264:	00001c38 	andeq	r1, r0, r8, lsr ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:31
}
    9268:	bf0e540a 	svclt	0x000e540a
    926c:	10000002 	andne	r0, r0, r2
    9270:	001b8c10 	andseq	r8, fp, r0, lsl ip
_ZN8CMonitor6ScrollEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:49
{
    9274:	12560a00 	subsne	r0, r6, #0, 20
    9278:	0000005e 	andeq	r0, r0, lr, asr r0
    927c:	1c601014 	stclne	0, cr1, [r0], #-80	; 0xffffffb0
    9280:	590a0000 	stmdbpl	sl, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50
    for (unsigned int y = 1; y < m_height; ++y)
    9284:	000b1b18 	andeq	r1, fp, r8, lsl fp
    9288:	93101800 	tstls	r0, #0, 16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 1)
    928c:	0a00001c 	beq	9304 <_ZN8CMonitor6ScrollEv+0x90>
    9290:	0b1b185b 	bleq	6cf404 <_bss_end+0x6bd754>
    9294:	101c0000 	andsne	r0, ip, r0
    9298:	00000dfb 	strdeq	r0, [r0], -fp
    929c:	1b185e0a 	blne	620acc <_bss_end+0x60ee1c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52
        for (unsigned int x = 0; x < m_width; ++x)
    92a0:	2000000b 	andcs	r0, r0, fp
    92a4:	001d1127 	andseq	r1, sp, r7, lsr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 3)
    92a8:	18600a00 	stmdane	r0!, {r9, fp}^
    92ac:	00001dcf 	andeq	r1, r0, pc, asr #27
    92b0:	00000b1b 	andeq	r0, r0, fp, lsl fp
    92b4:	00000a19 	andeq	r0, r0, r9, lsl sl
    92b8:	000b1b13 	andeq	r1, fp, r3, lsl fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:54 (discriminator 2)
            m_monitor[((y - 1) * m_width) + x] = m_monitor[(y * m_width) + x];
    92bc:	06431400 	strbeq	r1, [r3], -r0, lsl #8
    92c0:	00000000 	andeq	r0, r0, r0
    92c4:	001cd01b 	andseq	sp, ip, fp, lsl r0
    92c8:	640a1800 	strvs	r1, [sl], #-2048	; 0xfffff800
    92cc:	000a5a0c 	andeq	r5, sl, ip, lsl #20
    92d0:	3eb01000 	cdpcc	0, 11, cr1, cr0, cr0, {0}
    92d4:	670a0000 	strvs	r0, [sl, -r0]
    92d8:	000b0b0e 	andeq	r0, fp, lr, lsl #22
    92dc:	b6100000 	ldrlt	r0, [r0], -r0
    92e0:	0a00001b 	beq	9354 <_ZN8CMonitor6ScrollEv+0xe0>
    92e4:	06431569 	strbeq	r1, [r3], -r9, ror #10
    92e8:	10100000 	andsne	r0, r0, r0
    92ec:	00001d26 	andeq	r1, r0, r6, lsr #26
    92f0:	261d6b0a 	ldrcs	r6, [sp], -sl, lsl #22
    92f4:	1400000b 	strne	r0, [r0], #-11
    92f8:	0a250300 	beq	949f00 <_bss_end+0x938250>
    92fc:	cc280000 	stcgt	0, cr0, [r8], #-0
    9300:	0a00001b 	beq	9374 <_ZN8CMonitor6ScrollEv+0x100>
    9304:	0b2c1d6f 	bleq	b108c8 <_bss_end+0xafec18>
    9308:	67280000 	strvs	r0, [r8, -r0]!
    930c:	0a00001b 	beq	9380 <_ZN8CMonitor6ScrollEv+0x10c>
    9310:	006a1b71 	rsbeq	r1, sl, r1, ror fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9314:	a1100000 	tstge	r0, r0
    9318:	0a00001d 	beq	9394 <_ZN8CMonitor6ScrollEv+0x120>
    931c:	09aa1374 	stmibeq	sl!, {r2, r4, r5, r6, r8, r9, ip}
    9320:	10000000 	andne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 2)
    for (unsigned int y = 1; y < m_height; ++y)
    9324:	00001b97 	muleq	r0, r7, fp
    9328:	aa13770a 	bge	4e6f58 <_bss_end+0x4d52a8>
    932c:	24000009 	strcs	r0, [r0], #-9
    9330:	001d2d10 	andseq	r2, sp, r0, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58
    for (unsigned int x = 0; x < m_width; ++x)
    9334:	13780a00 	cmnne	r8, #0, 20
    9338:	000009aa 	andeq	r0, r0, sl, lsr #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 3)
    933c:	1d1c1048 	ldcne	0, cr1, [ip, #-288]	; 0xfffffee0
    9340:	790a0000 	stmdbvc	sl, {}	; <UNPREDICTABLE>
    9344:	0009aa13 	andeq	sl, r9, r3, lsl sl
    9348:	87126c00 	ldrhi	r6, [r2, -r0, lsl #24]
    934c:	0a00001c 	beq	93c4 <_ZN8CMonitorlsEc+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:60 (discriminator 2)
        m_monitor[((m_height - 1) * m_width) + x] = ' ';
    9350:	1dff057c 	cfldr64ne	mvdx0, [pc, #496]!	; 9548 <_ZN8CMonitorlsEj+0x50>
    9354:	0b370000 	bleq	dc935c <_bss_end+0xdb76ac>
    9358:	c4010000 	strgt	r0, [r1], #-0
    935c:	ca00000a 	bgt	938c <_ZN8CMonitor6ScrollEv+0x118>
    9360:	1300000a 	movwne	r0, #10
    9364:	00000b37 	andeq	r0, r0, r7, lsr fp
    9368:	1bc11500 	blne	ff04e770 <_bss_end+0xff03cac0>
    936c:	7f0a0000 	svcvc	0x000a0000
    9370:	001e480a 	andseq	r4, lr, sl, lsl #16
    9374:	0adf0100 	beq	ff7c977c <_bss_end+0xff7b7acc>
    9378:	0ae50000 	beq	ff949380 <_bss_end+0xff9376d0>
    937c:	37130000 	ldrcc	r0, [r3, -r0]
    9380:	0000000b 	andeq	r0, r0, fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 2)
    for (unsigned int x = 0; x < m_width; ++x)
    9384:	000a2016 	andeq	r2, sl, r6, lsl r0
    9388:	0c820a00 	vstmiaeq	r2, {s0-s-1}
    938c:	00001ce6 	andeq	r1, r0, r6, ror #25
    9390:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:62
}
    9394:	000afa01 	andeq	pc, sl, r1, lsl #20
    9398:	0b371300 	bleq	dcdfa0 <_bss_end+0xdbc2f0>
    939c:	43140000 	tstmi	r4, #0
    93a0:	14000006 	strne	r0, [r0], #-6
_ZN8CMonitorlsEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:70
{
    93a4:	00000978 	andeq	r0, r0, r8, ror r9
    93a8:	25240000 	strcs	r0, [r4, #-0]!
    93ac:	1b000000 	blne	93b4 <_ZN8CMonitorlsEc+0x10>
    93b0:	2500000b 	strcs	r0, [r0, #-11]
    93b4:	0000006f 	andeq	r0, r0, pc, rrx
    93b8:	040e000f 	streq	r0, [lr], #-15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:71
    if (c != '\n')
    93bc:	000009aa 	andeq	r0, r0, sl, lsr #19
    93c0:	0029e126 	eoreq	lr, r9, r6, lsr #2
    93c4:	21040e00 	tstcs	r4, r0, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:73
        m_monitor[(m_cursor.y * m_width) + m_cursor.x] = static_cast<unsigned char>(c);
    93c8:	2400000b 	strcs	r0, [r0], #-11
    93cc:	00000a5a 	andeq	r0, r0, sl, asr sl
    93d0:	00000b37 	andeq	r0, r0, r7, lsr fp
    93d4:	040e0029 	streq	r0, [lr], #-41	; 0xffffffd7
    93d8:	0000099d 	muleq	r0, sp, r9
    93dc:	001be719 	andseq	lr, fp, r9, lsl r7
    93e0:	14850a00 	strne	r0, [r5], #2560	; 0xa00
    93e4:	0000099d 	muleq	r0, sp, r9
    93e8:	00369023 	eorseq	r9, r6, r3, lsr #32
    93ec:	140a0b00 	strne	r0, [sl], #-2816	; 0xfffff500
    93f0:	0000006a 	andeq	r0, r0, sl, rrx
    93f4:	04180305 	ldreq	r0, [r8], #-773	; 0xfffffcfb
    93f8:	cb1b0001 	blgt	6c9404 <_bss_end+0x6b7754>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:74
        ++m_cursor.x;
    93fc:	0c000035 	stceq	0, cr0, [r0], {53}	; 0x35
    9400:	90080d0b 	andls	r0, r8, fp, lsl #26
    9404:	1000000b 	andne	r0, r0, fp
    9408:	00000d08 	andeq	r0, r0, r8, lsl #26
    940c:	90190f0b 	andsls	r0, r9, fp, lsl #30
    9410:	0000000b 	andeq	r0, r0, fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:78
        m_cursor.x = 0;
    9414:	000dfb10 	andeq	pc, sp, r0, lsl fp	; <UNPREDICTABLE>
    9418:	19100b00 	ldmdbne	r0, {r8, r9, fp}
    941c:	00000b90 	muleq	r0, r0, fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:79
        ++m_cursor.y;
    9420:	35811004 	strcc	r1, [r1, #4]
    9424:	110b0000 	mrsne	r0, (UNDEF: 11)
    9428:	000b9613 	andeq	r9, fp, r3, lsl r6
    942c:	0e000800 	cdpeq	8, 0, cr0, cr0, cr0, {0}
    9430:	000b5b04 	andeq	r5, fp, r4, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:82
    Adjust_Cursor();
    9434:	49040e00 	stmdbmi	r4, {r9, sl, fp}
    9438:	0f000008 	svceq	0x00000008
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:84
    return *this;
    943c:	00003132 	andeq	r3, r0, r2, lsr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:85
}
    9440:	07140b0c 	ldreq	r0, [r4, -ip, lsl #22]
    9444:	00000d34 	andeq	r0, r0, r4, lsr sp
    9448:	0033ca10 	eorseq	ip, r3, r0, lsl sl
_ZN8CMonitorlsEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:88
{
    944c:	0e180b00 	vnmlseq.f64	d0, d8, d0
    9450:	0000005e 	andeq	r0, r0, lr, asr r0
    9454:	305f1000 	subscc	r1, pc, r0
    9458:	1b0b0000 	blne	2c9460 <_bss_end+0x2b77b0>
    945c:	000b9019 	andeq	r9, fp, r9, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    9460:	c5100400 	ldrgt	r0, [r0, #-1024]	; 0xfffffc00
    9464:	0b000034 	bleq	953c <_ZN8CMonitorlsEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 3)
    9468:	0b90191e 	bleq	fe40f8e8 <_bss_end+0xfe3fdc38>
    946c:	20080000 	andcs	r0, r8, r0
    9470:	00003655 	andeq	r3, r0, r5, asr r6
    9474:	a80a210b 	stmdage	sl, {r0, r1, r3, r8, sp}
    9478:	e4000035 	str	r0, [r0], #-53	; 0xffffffcb
    947c:	ef00000b 	svc	0x0000000b
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:91 (discriminator 2)
        *this << str[i];
    9480:	1300000b 	movwne	r0, #11
    9484:	00000d39 	andeq	r0, r0, r9, lsr sp
    9488:	000b9014 	andeq	r9, fp, r4, lsl r0
    948c:	32120000 	andscc	r0, r2, #0
    9490:	0b000031 	bleq	955c <_ZN8CMonitorlsEb+0x10>
    9494:	36e30524 	strbtcc	r0, [r3], r4, lsr #10
    9498:	0d390000 	ldceq	0, cr0, [r9, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 2)
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    949c:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    94a0:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    94a4:	1300000c 	movwne	r0, #12
    94a8:	00000d39 	andeq	r0, r0, r9, lsr sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:94
    Reset_Number_Base();
    94ac:	36411500 	strbcc	r1, [r1], -r0, lsl #10
    94b0:	270b0000 	strcs	r0, [fp, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:96
    return *this;
    94b4:	002faf0a 	eoreq	sl, pc, sl, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:97
}
    94b8:	0c230100 	stfeqs	f0, [r3], #-0
    94bc:	0c290000 	stceq	0, cr0, [r9], #-0
    94c0:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
_ZN8CMonitorlsENS_12NNumber_BaseE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:100
{
    94c4:	0000000d 	andeq	r0, r0, sp
    94c8:	00311d12 	eorseq	r1, r1, r2, lsl sp
    94cc:	0e2a0b00 	vmuleq.f64	d0, d10, d0
    94d0:	000030e0 	andeq	r3, r0, r0, ror #1
    94d4:	0000005e 	andeq	r0, r0, lr, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:101
    m_number_base = number_base;
    94d8:	000c4201 	andeq	r4, ip, r1, lsl #4
    94dc:	000c4d00 	andeq	r4, ip, r0, lsl #26
    94e0:	0d391300 	ldceq	3, cr1, [r9, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:103
    return *this;
    94e4:	7b140000 	blvc	5094ec <_bss_end+0x4f783c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:104
}
    94e8:	00000002 	andeq	r0, r0, r2
    94ec:	00359f15 	eorseq	r9, r5, r5, lsl pc
    94f0:	0a2e0b00 	beq	b8c0f8 <_bss_end+0xb7a448>
    94f4:	00003414 	andeq	r3, r0, r4, lsl r4
_ZN8CMonitorlsEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:107
{
    94f8:	000c6201 	andeq	r6, ip, r1, lsl #4
    94fc:	000c6800 	andeq	r6, ip, r0, lsl #16
    9500:	0d391300 	ldceq	3, cr1, [r9, #-0]
    9504:	12000000 	andne	r0, r0, #0
    9508:	00003248 	andeq	r3, r0, r8, asr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:112
    itoa(num, s_buffer, static_cast<unsigned int>(m_number_base));
    950c:	7213310b 	andsvc	r3, r3, #-1073741822	; 0xc0000002
    9510:	96000030 			; <UNDEFINED> instruction: 0x96000030
    9514:	0100000b 	tsteq	r0, fp
    9518:	00000c81 	andeq	r0, r0, r1, lsl #25
    951c:	00000c87 	andeq	r0, r0, r7, lsl #25
    9520:	000d3f13 	andeq	r3, sp, r3, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:113
    *this << s_buffer;
    9524:	5c120000 	ldcpl	0, cr0, [r2], {-0}
    9528:	0b000032 	bleq	95f8 <_ZN8CMonitor4itoaEjPcj+0x4c>
    952c:	33840e34 	orrcc	r0, r4, #52, 28	; 0x340
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:114
    Reset_Number_Base();
    9530:	005e0000 	subseq	r0, lr, r0
    9534:	a0010000 	andge	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:116
    return *this;
    9538:	ab00000c 	blge	9570 <_ZN8CMonitorlsEb+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:117
}
    953c:	1300000c 	movwne	r0, #12
    9540:	00000d39 	andeq	r0, r0, r9, lsr sp
    9544:	0008b514 	andeq	fp, r8, r4, lsl r5
    9548:	3a120000 	bcc	489550 <_bss_end+0x4778a0>
_ZN8CMonitorlsEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:120
{
    954c:	0b000030 	bleq	9614 <_ZN8CMonitor4itoaEjPcj+0x68>
    9550:	31fe0a37 	mvnscc	r0, r7, lsr sl
    9554:	02bf0000 	adcseq	r0, pc, #0
    9558:	c4010000 	strgt	r0, [r1], #-0
    955c:	cf00000c 	svcgt	0x0000000c
    9560:	1300000c 	movwne	r0, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:121
    if (value)
    9564:	00000d39 	andeq	r0, r0, r9, lsr sp
    9568:	00005e14 	andeq	r5, r0, r4, lsl lr
    956c:	79150000 	ldmdbvc	r5, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:123
        *this << "true";
    9570:	0b000032 	bleq	9640 <_ZN8CMonitor4itoaEjPcj+0x94>
    9574:	35ef0a3a 	strbcc	r0, [pc, #2618]!	; 9fb6 <_ZN16CDisplay_SSD13064OpenEii+0x6ca>
    9578:	e4010000 	str	r0, [r1], #-0
    957c:	0300000c 	movweq	r0, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:127
        *this << "false";
    9580:	1300000d 	movwne	r0, #13
    9584:	00000d39 	andeq	r0, r0, r9, lsr sp
    9588:	0008e614 	andeq	lr, r8, r4, lsl r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:130
    Reset_Number_Base();
    958c:	005e1400 	subseq	r1, lr, r0, lsl #8
    9590:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:132
    return *this;
    9594:	14000000 	strne	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:133
}
    9598:	0000005e 	andeq	r0, r0, lr, asr r0
    959c:	000d4514 	andeq	r4, sp, r4, lsl r5
    95a0:	a0210000 	eorge	r0, r1, r0
    95a4:	0b000030 	bleq	966c <_ZN8CMonitor4itoaEjPcj+0xc0>
    95a8:	3143053d 	cmpcc	r3, sp, lsr r5
_ZN8CMonitor4itoaEjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:136
{
    95ac:	14010000 	strne	r0, [r1], #-0
    95b0:	1300000d 	movwne	r0, #13
    95b4:	00000d39 	andeq	r0, r0, r9, lsr sp
    95b8:	0008ff14 	andeq	pc, r8, r4, lsl pc	; <UNPREDICTABLE>
    95bc:	005e1400 	subseq	r1, lr, r0, lsl #8
    95c0:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
    95c4:	14000000 	strne	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:137
    int i = 0;
    95c8:	0000005e 	andeq	r0, r0, lr, asr r0
    95cc:	000d4514 	andeq	r4, sp, r4, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    95d0:	03000000 	movweq	r0, #0
    95d4:	00000b9c 	muleq	r0, ip, fp
    95d8:	0b9c040e 	bleq	fe70a618 <_bss_end+0xfe6f8968>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:141
        output[i] = CharConvArr[input % base];
    95dc:	040e0000 	streq	r0, [lr], #-0
    95e0:	00000d34 	andeq	r0, r0, r4, lsr sp
    95e4:	08c00418 	stmiaeq	r0, {r3, r4, sl}^
    95e8:	21190000 	tstcs	r9, r0
    95ec:	0b00003a 	bleq	96dc <_ZN8CMonitor4itoaEjPcj+0x130>
    95f0:	0b9c1940 	bleq	fe70faf8 <_bss_end+0xfe6fde48>
    95f4:	9d2a0000 	stcls	0, cr0, [sl, #-0]
    95f8:	01000037 	tsteq	r0, r7, lsr r0
    95fc:	00381022 	eorseq	r1, r8, r2, lsr #32
    9600:	d7bc0000 	ldrle	r0, [ip, r0]!
    9604:	008c0000 	addeq	r0, ip, r0
    9608:	9c010000 	stcls	0, cr0, [r1], {-0}
    960c:	0019ed2b 	andseq	lr, r9, fp, lsr #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:142
        input /= base;
    9610:	11150100 	tstne	r5, r0, lsl #2
    9614:	0000d7a0 	andeq	sp, r0, r0, lsr #15
    9618:	0000001c 	andeq	r0, r0, ip, lsl r0
    961c:	f7009c01 			; <UNDEFINED> instruction: 0xf7009c01
    9620:	04000004 	streq	r0, [r0], #-4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:144
        i++;
    9624:	0024aa00 	eoreq	sl, r4, r0, lsl #20
    9628:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
    962c:	04000000 	streq	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    9630:	0000387c 	andeq	r3, r0, ip, ror r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:147
    if (i == 0)
    9634:	000000c5 	andeq	r0, r0, r5, asr #1
    9638:	0000d848 	andeq	sp, r0, r8, asr #16
    963c:	0000036c 	andeq	r0, r0, ip, ror #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:149
        output[i] = CharConvArr[0];
    9640:	0000326c 	andeq	r3, r0, ip, ror #4
    9644:	73080102 	movwvc	r0, #33026	; 0x8102
    9648:	02000005 	andeq	r0, r0, #5
    964c:	05990502 	ldreq	r0, [r9, #1282]	; 0x502
    9650:	04030000 	streq	r0, [r3], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:150
        i++;
    9654:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    9658:	09820400 	stmibeq	r2, {sl}
    965c:	07020000 	streq	r0, [r2, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:153
    output[i] = '\0';
    9660:	00004607 	andeq	r4, r0, r7, lsl #12
    9664:	08010200 	stmdaeq	r1, {r9}
    9668:	0000056a 	andeq	r0, r0, sl, ror #10
    966c:	dc070202 	sfmle	f0, 4, [r7], {2}
    9670:	04000003 	streq	r0, [r0], #-3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:154
    i--;
    9674:	000005e4 	andeq	r0, r0, r4, ror #11
    9678:	65070902 	strvs	r0, [r7, #-2306]	; 0xfffff6fe
    967c:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156
    for (int j = 0; j <= (i / 2); j++)
    9680:	00000054 	andeq	r0, r0, r4, asr r0
    9684:	96070402 	strls	r0, [r7], -r2, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 3)
    9688:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    968c:	00000065 	andeq	r0, r0, r5, rrx
    9690:	0013be06 	andseq	fp, r3, r6, lsl #28
    9694:	08031000 	stmdaeq	r3, {ip}
    9698:	0000b308 	andeq	fp, r0, r8, lsl #6
    969c:	0d080700 	stceq	7, cr0, [r8, #-0]
    96a0:	0a030000 	beq	c96a8 <_bss_end+0xb79f8>
    96a4:	0000b320 	andeq	fp, r0, r0, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:158 (discriminator 2)
        char c = output[i - j];
    96a8:	fb070000 	blx	1c96b2 <_bss_end+0x1b7a02>
    96ac:	0300000d 	movweq	r0, #13
    96b0:	00b3200b 	adcseq	r2, r3, fp
    96b4:	07040000 	streq	r0, [r4, -r0]
    96b8:	00000e48 	andeq	r0, r0, r8, asr #28
    96bc:	540e0c03 	strpl	r0, [lr], #-3075	; 0xfffff3fd
    96c0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    96c4:	000e9c07 	andeq	r9, lr, r7, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:159 (discriminator 2)
        output[i - j] = output[j];
    96c8:	0a0d0300 	beq	34a2d0 <_bss_end+0x338620>
    96cc:	000000b9 	strheq	r0, [r0], -r9
    96d0:	0408000c 	streq	r0, [r8], #-12
    96d4:	00000071 	andeq	r0, r0, r1, ror r0
    96d8:	4d020102 	stfmis	f0, [r2, #-8]
    96dc:	09000045 	stmdbeq	r0, {r0, r2, r6}
    96e0:	00000e00 	andeq	r0, r0, r0, lsl #28
    96e4:	07100304 	ldreq	r0, [r0, -r4, lsl #6]
    96e8:	00000158 	andeq	r0, r0, r8, asr r1
    96ec:	00134107 	andseq	r4, r3, r7, lsl #2
    96f0:	20130300 	andscs	r0, r3, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:160 (discriminator 2)
        output[j] = c;
    96f4:	000000b3 	strheq	r0, [r0], -r3
    96f8:	13830a00 	orrne	r0, r3, #0, 20
    96fc:	15030000 	strne	r0, [r3, #-0]
    9700:	000d0d20 	andeq	r0, sp, r0, lsr #26
    9704:	0000b300 	andeq	fp, r0, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 2)
    for (int j = 0; j <= (i / 2); j++)
    9708:	0000f200 	andeq	pc, r0, r0, lsl #4
    970c:	0000f800 	andeq	pc, r0, r0, lsl #16
    9710:	01580b00 	cmpeq	r8, r0, lsl #22
    9714:	0c000000 	stceq	0, cr0, [r0], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    9718:	00000e00 	andeq	r0, r0, r0, lsl #28
    971c:	23051803 	movwcs	r1, #22531	; 0x5803
    9720:	58000013 	stmdapl	r0, {r0, r1, r4}
    9724:	01000001 	tsteq	r0, r1
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9728:	00000111 	andeq	r0, r0, r1, lsl r1
    972c:	00000117 	andeq	r0, r0, r7, lsl r1
    9730:	0001580b 	andeq	r5, r1, fp, lsl #16
    9734:	db0c0000 	blle	30973c <_bss_end+0x2f7a8c>
    9738:	0300000e 	movweq	r0, #14
    973c:	11970b1a 	orrsne	r0, r7, sl, lsl fp
    9740:	01630000 	cmneq	r3, r0
    9744:	30010000 	andcc	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162 (discriminator 1)
    9748:	3b000001 	blcc	9754 <_Z41__static_initialization_and_destruction_0ii+0x2c>
    974c:	0b000001 	bleq	9758 <_Z41__static_initialization_and_destruction_0ii+0x30>
    9750:	00000158 	andeq	r0, r0, r8, asr r1
    9754:	0000540d 	andeq	r5, r0, sp, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:3
CMonitor sMonitor{ 0x30000000, 80, 25 };
    9758:	450e0000 	strmi	r0, [lr, #-0]
    975c:	0300000f 	movweq	r0, #15
    9760:	10d60a1b 	sbcsne	r0, r6, fp, lsl sl
    9764:	4c010000 	stcmi	0, cr0, [r1], {-0}
    9768:	0b000001 	bleq	9774 <_Z41__static_initialization_and_destruction_0ii+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    976c:	00000158 	andeq	r0, r0, r8, asr r1
    9770:	0001630d 	andeq	r6, r1, sp, lsl #6
    9774:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    9778:	0000c004 	andeq	ip, r0, r4
    977c:	01580500 	cmpeq	r8, r0, lsl #10
_GLOBAL__sub_I_sMonitor():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9780:	040f0000 	streq	r0, [pc], #-0	; 9788 <_GLOBAL__sub_I_sMonitor+0x8>
    9784:	0037fa10 	eorseq	pc, r7, r0, lsl sl	; <UNPREDICTABLE>
    9788:	1d240300 	stcne	3, cr0, [r4, #-0]
    978c:	000000c0 	andeq	r0, r0, r0, asr #1
    9790:	6c616811 	stclvs	8, cr6, [r1], #-68	; 0xffffffbc
    9794:	0b050400 	bleq	14a79c <_bss_end+0x138aec>
    9798:	0000022b 	andeq	r0, r0, fp, lsr #4
_ZN8CMonitor12Reset_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:15
{
    979c:	00048712 	andeq	r8, r4, r2, lsl r7
    97a0:	1c070400 	cfstrsne	mvf0, [r7], {-0}
    97a4:	0000006c 	andeq	r0, r0, ip, rrx
    97a8:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:16
    m_cursor.y = 0;
    97ac:	0005cc12 	andeq	ip, r5, r2, lsl ip
    97b0:	1d0a0400 	cfstrsne	mvf0, [sl, #-0]
    97b4:	00000237 	andeq	r0, r0, r7, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:17
    m_cursor.y = 0;
    97b8:	20000000 	andcs	r0, r0, r0
    97bc:	00045212 	andeq	r5, r4, r2, lsl r2
    97c0:	1d0d0400 	cfstrsne	mvf0, [sp, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:18
}
    97c4:	00000237 	andeq	r0, r0, r7, lsr r2
    97c8:	20200000 	eorcs	r0, r0, r0
    97cc:	00058a13 	andeq	r8, r5, r3, lsl sl
    97d0:	18100400 	ldmdane	r0, {sl}
_ZN8CMonitor13Adjust_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:34
{
    97d4:	00000060 	andeq	r0, r0, r0, rrx
    97d8:	03731236 	cmneq	r3, #1610612739	; 0x60000003
    97dc:	42040000 	andmi	r0, r4, #0
    97e0:	0002371d 	andeq	r3, r2, sp, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:35
    if (m_cursor.x >= m_width)
    97e4:	21500000 	cmpcs	r0, r0
    97e8:	034a1220 	movteq	r1, #41504	; 0xa220
    97ec:	71040000 	mrsvc	r0, (UNDEF: 4)
    97f0:	0002371d 	andeq	r3, r2, sp, lsl r7
    97f4:	00b20000 	adcseq	r0, r2, r0
    97f8:	02b61220 	adcseq	r1, r6, #32, 4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:37
        m_cursor.x = 0;
    97fc:	a4040000 	strge	r0, [r4], #-0
    9800:	0002371d 	andeq	r3, r2, sp, lsl r7
    9804:	00b40000 	adcseq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:38
        ++m_cursor.y;
    9808:	03641220 	cmneq	r4, #32, 4
    980c:	b3040000 	movwlt	r0, #16384	; 0x4000
    9810:	0002371d 	andeq	r3, r2, sp, lsl r7
    9814:	10400000 	subne	r0, r0, r0
    9818:	03311220 	teqeq	r1, #32, 4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:41
    if (m_cursor.y >= m_height)
    981c:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
    9820:	0002371d 	andeq	r3, r2, sp, lsl r7
    9824:	20500000 	subscs	r0, r0, r0
    9828:	03ef1220 	mvneq	r1, #32, 4
    982c:	bf040000 	svclt	0x00040000
    9830:	0002371d 	andeq	r3, r2, sp, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:43
        Scroll();
    9834:	80400000 	subhi	r0, r0, r0
    9838:	045c1220 	ldrbeq	r1, [ip], #-544	; 0xfffffde0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:44
        m_cursor.y = m_height - 1;
    983c:	c0040000 	andgt	r0, r4, r0
    9840:	0002371d 	andeq	r3, r2, sp, lsl r7
    9844:	80500000 	subshi	r0, r0, r0
    9848:	7d140020 	ldcvc	0, cr0, [r4, #-128]	; 0xffffff80
    984c:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:46
}
    9850:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
    9854:	30050000 	andcc	r0, r5, r0
    9858:	14000002 	strne	r0, [r0], #-2
_ZN8CMonitor17Reset_Number_BaseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:65
{
    985c:	0000018d 	andeq	r0, r0, sp, lsl #3
    9860:	00019d14 	andeq	r9, r1, r4, lsl sp
    9864:	01ad1400 			; <UNDEFINED> instruction: 0x01ad1400
    9868:	ba140000 	blt	509870 <_bss_end+0x4f7bc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:66
    m_number_base = DEFAULT_NUMBER_BASE;
    986c:	14000001 	strne	r0, [r0], #-1
    9870:	000001ca 	andeq	r0, r0, sl, asr #3
    9874:	0001da14 	andeq	sp, r1, r4, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:67
}
    9878:	01ea1400 	mvneq	r1, r0, lsl #8
    987c:	fa140000 	blx	509884 <_bss_end+0x4f7bd4>
    9880:	14000001 	strne	r0, [r0], #-1
    9884:	0000020a 	andeq	r0, r0, sl, lsl #4
_ZN16CDisplay_SSD1306C2ER4CI2C():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:9
CDisplay_SSD1306::CDisplay_SSD1306(CI2C& i2c)
    9888:	00021a14 	andeq	r1, r2, r4, lsl sl
    988c:	656d1100 	strbvs	r1, [sp, #-256]!	; 0xffffff00
    9890:	0605006d 	streq	r0, [r5], -sp, rrx
    9894:	0002c70b 	andeq	ip, r2, fp, lsl #14
    9898:	37aa1200 	strcc	r1, [sl, r0, lsl #4]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:14
, mHeight(0)
    989c:	0a050000 	beq	1498a4 <_bss_end+0x137bf4>
    98a0:	00006018 	andeq	r6, r0, r8, lsl r0
    98a4:	02000000 	andeq	r0, r0, #0
    98a8:	37b41200 	ldrcc	r1, [r4, r0, lsl #4]!
    98ac:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    98b0:	00006018 	andeq	r6, r0, r8, lsl r0
    98b4:	00000000 	andeq	r0, r0, r0
    98b8:	37941520 	ldrcc	r1, [r4, r0, lsr #10]
    98bc:	11050000 	mrsne	r0, (UNDEF: 5)
    98c0:	00006018 	andeq	r6, r0, r8, lsl r0
    98c4:	12400000 	subne	r0, r0, #0
    98c8:	00003783 	andeq	r3, r0, r3, lsl #15
    98cc:	60181405 	andsvs	r1, r8, r5, lsl #8
    98d0:	00000000 	andeq	r0, r0, r0
    98d4:	151ffe00 	ldrne	pc, [pc, #-3584]	; 8adc <_ZN4CI2C10Wait_ReadyEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:16
}
    98d8:	00003779 	andeq	r3, r0, r9, ror r7
    98dc:	60181705 	andsvs	r1, r8, r5, lsl #14
    98e0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    98e4:	7a14007f 	bvc	509ae8 <_bss_end+0x4f7e38>
    98e8:	14000002 	strne	r0, [r0], #-2
_ZN16CDisplay_SSD13064OpenEii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:19
{
    98ec:	0000028a 	andeq	r0, r0, sl, lsl #5
    98f0:	00029a14 	andeq	r9, r2, r4, lsl sl
    98f4:	02a81400 	adceq	r1, r8, #0, 8
    98f8:	b8140000 	ldmdalt	r4, {}	; <UNPREDICTABLE>
    98fc:	16000002 	strne	r0, [r0], -r2
    9900:	000038f2 	strdeq	r3, [r0], -r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:20
    if (!mI2C.Open())
    9904:	09060fff 	stmdbeq	r6, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    9908:	00037a07 	andeq	r7, r3, r7, lsl #20
    990c:	37de0700 	ldrbcc	r0, [lr, r0, lsl #14]
    9910:	0c060000 	stceq	0, cr0, [r6], {-0}
    9914:	00037a0d 	andeq	r7, r3, sp, lsl #20
    9918:	d9170000 	ldmdble	r7, {}	; <UNPREDICTABLE>
    991c:	06000037 			; <UNDEFINED> instruction: 0x06000037
    9920:	384a0a0e 	stmdacc	sl, {r1, r2, r3, r9, fp}^
    9924:	030f0000 	movweq	r0, #61440	; 0xf000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:21
        return false;
    9928:	031f0000 	tsteq	pc, #0
    992c:	8b0b0000 	blhi	2c9934 <_bss_end+0x2b7c84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:23
    mOpened = true;
    9930:	0d000003 	stceq	0, cr0, [r0, #-12]
    9934:	00000054 	andeq	r0, r0, r4, asr r0
    9938:	0000b90d 	andeq	fp, r0, sp, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:26
    if (height % 8 != 0)
    993c:	f20c0000 	vhadd.s8	d0, d12, d0
    9940:	06000038 			; <UNDEFINED> instruction: 0x06000038
    9944:	38650511 	stmdacc	r5!, {r0, r4, r8, sl}^
    9948:	038b0000 	orreq	r0, fp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:27
        height += 8 - (height % 8);
    994c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    9950:	3e000003 	cdpcc	0, 0, cr0, cr0, cr3, {0}
    9954:	0b000003 	bleq	9968 <_ZN16CDisplay_SSD13064OpenEii+0x7c>
    9958:	0000038b 	andeq	r0, r0, fp, lsl #7
    995c:	37c40c00 	strbcc	r0, [r4, r0, lsl #24]
    9960:	14060000 	strne	r0, [r6], #-0
    9964:	00380b0e 	eorseq	r0, r8, lr, lsl #22
    9968:	00005400 	andeq	r5, r0, r0, lsl #8
    996c:	03570100 	cmpeq	r7, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:29
    mWidth = width;
    9970:	035d0000 	cmpeq	sp, #0
    9974:	8b0b0000 	blhi	2c997c <_bss_end+0x2b7ccc>
    9978:	00000003 	andeq	r0, r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:30
    mHeight = height;
    997c:	0037cf0e 	eorseq	ip, r7, lr, lsl #30
    9980:	0a160600 	beq	58b188 <_bss_end+0x5794d8>
    9984:	000038d3 	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:35
    mBuffer = new uint8_t[mWidth * mHeight / 8];
    9988:	00036e01 	andeq	r6, r3, r1, lsl #28
    998c:	038b0b00 	orreq	r0, fp, #0, 22
    9990:	540d0000 	strpl	r0, [sp], #-0
    9994:	00000000 	andeq	r0, r0, r0
    9998:	003a1800 	eorseq	r1, sl, r0, lsl #16
    999c:	038b0000 	orreq	r0, fp, #0
    99a0:	65190000 	ldrvs	r0, [r9, #-0]
    99a4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    99a8:	0408000f 	streq	r0, [r8], #-15
    99ac:	000002e0 	andeq	r0, r0, r0, ror #5
    99b0:	00391810 	eorseq	r1, r9, r0, lsl r8
    99b4:	16190600 	ldrne	r0, [r9], -r0, lsl #12
    99b8:	000002e0 	andeq	r0, r0, r0, ror #5
    99bc:	0001651a 	andeq	r6, r1, sl, lsl r5
    99c0:	16040100 	strne	r0, [r4], -r0, lsl #2
    99c4:	0c900305 	ldceq	3, cr0, [r0], {5}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:40
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    99c8:	eb1b0001 	bl	6c99d4 <_bss_end+0x6b7d24>
    99cc:	98000037 	stmdals	r0, {r0, r1, r2, r4, r5}
    99d0:	1c0000db 	stcne	0, cr0, [r0], {219}	; 0xdb
    99d4:	01000000 	mrseq	r0, (UNDEF: 0)
    99d8:	02411c9c 	subeq	r1, r1, #156, 24	; 0x9c00
    99dc:	db4c0000 	blle	13099e4 <_bss_end+0x12f7d34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:42
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Display_Off << SSD1306_Cmd::Set_Display_Clock_Div_Ratio << 0x80
    99e0:	004c0000 	subeq	r0, ip, r0
    99e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    99e8:	000003ec 	andeq	r0, r0, ip, ror #7
    99ec:	00033b1d 	andeq	r3, r3, sp, lsl fp
    99f0:	015f0100 	cmpeq	pc, r0, lsl #2
    99f4:	00000033 	andeq	r0, r0, r3, lsr r0
    99f8:	1d749102 	ldfnep	f1, [r4, #-8]!
    99fc:	00000734 	andeq	r0, r0, r4, lsr r7
    9a00:	33015f01 	movwcc	r5, #7937	; 0x1f01
    9a04:	02000000 	andeq	r0, r0, #0
    9a08:	1e007091 	mcrne	0, 0, r7, cr0, cr1, {4}
    9a0c:	0000013b 	andeq	r0, r0, fp, lsr r1
    9a10:	06064901 	streq	r4, [r6], -r1, lsl #18
    9a14:	30000004 	andcc	r0, r0, r4
    9a18:	1c0000da 	stcne	0, cr0, [r0], {218}	; 0xda
    9a1c:	01000001 	tsteq	r0, r1
    9a20:	0004319c 	muleq	r4, ip, r1
    9a24:	032c1f00 			; <UNDEFINED> instruction: 0x032c1f00
    9a28:	015e0000 	cmpeq	lr, r0
    9a2c:	91020000 	mrsls	r0, (UNDEF: 2)
    9a30:	656d206c 	strbvs	r2, [sp, #-108]!	; 0xffffff94
    9a34:	4901006d 	stmdbmi	r1, {r0, r2, r3, r5, r6}
    9a38:	00016327 	andeq	r6, r1, r7, lsr #6
    9a3c:	68910200 	ldmvs	r1, {r9}
    9a40:	00380521 	eorseq	r0, r8, r1, lsr #10
    9a44:	204b0100 	subcs	r0, fp, r0, lsl #2
    9a48:	000000b3 	strheq	r0, [r0], -r3
    9a4c:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:43
           << SSD1306_Cmd::Set_Multiplex_Ratio;
    9a50:	00011722 	andeq	r1, r1, r2, lsr #14
    9a54:	07190100 	ldreq	r0, [r9, -r0, lsl #2]
    9a58:	00000163 	andeq	r0, r0, r3, ror #2
    9a5c:	0000044f 	andeq	r0, r0, pc, asr #8
    9a60:	0000d8e4 	andeq	sp, r0, r4, ror #17
    9a64:	0000014c 	andeq	r0, r0, ip, asr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:45
        mI2C.End_Transaction(ta);
    9a68:	04899c01 	streq	r9, [r9], #3073	; 0xc01
    9a6c:	2c1f0000 	ldccs	0, cr0, [pc], {-0}
    9a70:	5e000003 	cdppl	0, 0, cr0, cr0, cr3, {0}
    9a74:	02000001 	andeq	r0, r0, #1
    9a78:	481d6c91 	ldmdami	sp, {r0, r4, r7, sl, fp, sp, lr}
    9a7c:	0100000e 	tsteq	r0, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:50
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9a80:	00542c19 	subseq	r2, r4, r9, lsl ip
    9a84:	91020000 	mrsls	r0, (UNDEF: 2)
    9a88:	38052168 	stmdacc	r5, {r3, r5, r6, r8, sp}
    9a8c:	1b010000 	blne	49a94 <_bss_end+0x37de4>
    9a90:	0000b320 	andeq	fp, r0, r0, lsr #6
    9a94:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:52
        ta << SSD1306_Cmd::Command_Start << height - 1;
    9a98:	0037bf21 	eorseq	fp, r7, r1, lsr #30
    9a9c:	20380100 	eorscs	r0, r8, r0, lsl #2
    9aa0:	000000b3 	strheq	r0, [r0], -r3
    9aa4:	00709102 	rsbseq	r9, r0, r2, lsl #2
    9aa8:	0000da23 	andeq	sp, r0, r3, lsr #20
    9aac:	1c0d0100 	stfnes	f0, [sp], {-0}
    9ab0:	000004a3 	andeq	r0, r0, r3, lsr #9
    9ab4:	0000d87c 	andeq	sp, r0, ip, ror r8
    9ab8:	00000068 	andeq	r0, r0, r8, rrx
    9abc:	04bf9c01 	ldrteq	r9, [pc], #3073	; 9ac4 <_ZN16CDisplay_SSD13064OpenEii+0x1d8>
    9ac0:	2c1f0000 	ldccs	0, cr0, [pc], {-0}
    9ac4:	5e000003 	cdppl	0, 0, cr0, cr0, cr3, {0}
    9ac8:	02000001 	andeq	r0, r0, #1
    9acc:	05216c91 	streq	r6, [r1, #-3217]!	; 0xfffff36f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:54
        mI2C.End_Transaction(ta);
    9ad0:	01000038 	tsteq	r0, r8, lsr r0
    9ad4:	00b3200f 	adcseq	r2, r3, pc
    9ad8:	91020000 	mrsls	r0, (UNDEF: 2)
    9adc:	f8240074 			; <UNDEFINED> instruction: 0xf8240074
    9ae0:	01000000 	mrseq	r0, (UNDEF: 0)
    9ae4:	04d00106 	ldrbeq	r0, [r0], #262	; 0x106
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:60
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ae8:	da000000 	ble	9af0 <_ZN16CDisplay_SSD13064OpenEii+0x204>
    9aec:	25000004 	strcs	r0, [r0, #-4]
    9af0:	0000032c 	andeq	r0, r0, ip, lsr #6
    9af4:	0000015e 	andeq	r0, r0, lr, asr r1
    9af8:	04bf2600 	ldrteq	r2, [pc], #1536	; 9b00 <_ZN16CDisplay_SSD13064OpenEii+0x214>
    9afc:	382c0000 	stmdacc	ip!, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:62
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Display_Offset << 0x00
    9b00:	04f10000 	ldrbteq	r0, [r1], #0
    9b04:	d8480000 	stmdale	r8, {}^	; <UNPREDICTABLE>
    9b08:	00340000 	eorseq	r0, r4, r0
    9b0c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9b10:	0004d027 	andeq	sp, r4, r7, lsr #32
    9b14:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    9b18:	04340000 	ldrteq	r0, [r4], #-0
    9b1c:	00040000 	andeq	r0, r4, r0
    9b20:	0000272a 	andeq	r2, r0, sl, lsr #14
    9b24:	00140104 	andseq	r0, r4, r4, lsl #2
    9b28:	26040000 	strcs	r0, [r4], -r0
    9b2c:	c5000039 	strgt	r0, [r0, #-57]	; 0xffffffc7
    9b30:	b4000000 	strlt	r0, [r0], #-0
    9b34:	a40000db 	strge	r0, [r0], #-219	; 0xffffff25
    9b38:	fc000002 	stc2	0, cr0, [r0], {2}
    9b3c:	02000034 	andeq	r0, r0, #52	; 0x34
    9b40:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    9b44:	02020000 	andeq	r0, r2, #0
    9b48:	00059905 	andeq	r9, r5, r5, lsl #18
    9b4c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    9b50:	00746e69 	rsbseq	r6, r4, r9, ror #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:63
           << (static_cast<uint8_t>(SSD1306_Cmd::Set_Start_Line) | 0x00) // zacatek na radce 0
    9b54:	00098204 	andeq	r8, r9, r4, lsl #4
    9b58:	07070200 	streq	r0, [r7, -r0, lsl #4]
    9b5c:	00000046 	andeq	r0, r0, r6, asr #32
    9b60:	6a080102 	bvs	209f70 <_bss_end+0x1f82c0>
    9b64:	02000005 	andeq	r0, r0, #5
    9b68:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    9b6c:	e4040000 	str	r0, [r4], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:64
           << SSD1306_Cmd::Charge_Pump;
    9b70:	02000005 	andeq	r0, r0, #5
    9b74:	00650709 	rsbeq	r0, r5, r9, lsl #14
    9b78:	54050000 	strpl	r0, [r5], #-0
    9b7c:	02000000 	andeq	r0, r0, #0
    9b80:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
    9b84:	65050000 	strvs	r0, [r5, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:66
        mI2C.End_Transaction(ta);
    9b88:	06000000 	streq	r0, [r0], -r0
    9b8c:	006c6168 	rsbeq	r6, ip, r8, ror #2
    9b90:	2b0b0503 	blcs	2cafa4 <_bss_end+0x2b92f4>
    9b94:	07000001 	streq	r0, [r0, -r1]
    9b98:	00000487 	andeq	r0, r0, r7, lsl #9
    9b9c:	6c1c0703 	ldcvs	7, cr0, [ip], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:71
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ba0:	80000000 	andhi	r0, r0, r0
    9ba4:	070ee6b2 			; <UNDEFINED> instruction: 0x070ee6b2
    9ba8:	000005cc 	andeq	r0, r0, ip, asr #11
    9bac:	371d0a03 	ldrcc	r0, [sp, -r3, lsl #20]
    9bb0:	00000001 	andeq	r0, r0, r1
    9bb4:	07200000 	streq	r0, [r0, -r0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:73
        ta << SSD1306_Cmd::Command_Start << 0x14;
    9bb8:	00000452 	andeq	r0, r0, r2, asr r4
    9bbc:	371d0d03 	ldrcc	r0, [sp, -r3, lsl #26]
    9bc0:	00000001 	andeq	r0, r0, r1
    9bc4:	08202000 	stmdaeq	r0!, {sp}
    9bc8:	0000058a 	andeq	r0, r0, sl, lsl #11
    9bcc:	60181003 	andsvs	r1, r8, r3
    9bd0:	36000000 	strcc	r0, [r0], -r0
    9bd4:	00037307 	andeq	r7, r3, r7, lsl #6
    9bd8:	1d420300 	stclne	3, cr0, [r2, #-0]
    9bdc:	00000137 	andeq	r0, r0, r7, lsr r1
    9be0:	20215000 	eorcs	r5, r1, r0
    9be4:	00034a07 	andeq	r4, r3, r7, lsl #20
    9be8:	1d710300 	ldclne	3, cr0, [r1, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:75
        mI2C.End_Transaction(ta);
    9bec:	00000137 	andeq	r0, r0, r7, lsr r1
    9bf0:	2000b200 	andcs	fp, r0, r0, lsl #4
    9bf4:	0002b607 	andeq	fp, r2, r7, lsl #12
    9bf8:	1da40300 	stcne	3, cr0, [r4]
    9bfc:	00000137 	andeq	r0, r0, r7, lsr r1
    9c00:	2000b400 	andcs	fp, r0, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:81
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9c04:	00036407 	andeq	r6, r3, r7, lsl #8
    9c08:	1db30300 	ldcne	3, cr0, [r3]
    9c0c:	00000137 	andeq	r0, r0, r7, lsr r1
    9c10:	20104000 	andscs	r4, r0, r0
    9c14:	00033107 	andeq	r3, r3, r7, lsl #2
    9c18:	1dbe0300 	ldcne	3, cr0, [lr]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:83
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Memory_Addr_Mode << 0x00
    9c1c:	00000137 	andeq	r0, r0, r7, lsr r1
    9c20:	20205000 	eorcs	r5, r0, r0
    9c24:	0003ef07 	andeq	lr, r3, r7, lsl #30
    9c28:	1dbf0300 	ldcne	3, cr0, [pc]	; 9c30 <_ZN16CDisplay_SSD13064OpenEii+0x344>
    9c2c:	00000137 	andeq	r0, r0, r7, lsr r1
    9c30:	20804000 	addcs	r4, r0, r0
    9c34:	00045c07 	andeq	r5, r4, r7, lsl #24
    9c38:	1dc00300 	stclne	3, cr0, [r0]
    9c3c:	00000137 	andeq	r0, r0, r7, lsr r1
    9c40:	20805000 	addcs	r5, r0, r0
    9c44:	007d0900 	rsbseq	r0, sp, r0, lsl #18
    9c48:	04020000 	streq	r0, [r2], #-0
    9c4c:	00459107 	subeq	r9, r5, r7, lsl #2
    9c50:	01300500 	teqeq	r0, r0, lsl #10
    9c54:	8d090000 	stchi	0, cr0, [r9, #-0]
    9c58:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9c5c:	0000009d 	muleq	r0, sp, r0
    9c60:	0000ad09 	andeq	sl, r0, r9, lsl #26
    9c64:	00ba0900 	adcseq	r0, sl, r0, lsl #18
    9c68:	ca090000 	bgt	249c70 <_bss_end+0x237fc0>
    9c6c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:84
           << (static_cast<uint8_t>(SSD1306_Cmd::Set_Segment_Remap) | 0x01) << SSD1306_Cmd::Com_Scan_Dir_Dec;
    9c70:	000000da 	ldrdeq	r0, [r0], -sl
    9c74:	0000ea09 	andeq	lr, r0, r9, lsl #20
    9c78:	00fa0900 	rscseq	r0, sl, r0, lsl #18
    9c7c:	0a090000 	beq	249c84 <_bss_end+0x237fd4>
    9c80:	09000001 	stmdbeq	r0, {r0}
    9c84:	0000011a 	andeq	r0, r0, sl, lsl r1
    9c88:	6d656d06 	stclvs	13, cr6, [r5, #-24]!	; 0xffffffe8
    9c8c:	0b060400 	bleq	18ac94 <_bss_end+0x178fe4>
    9c90:	000001c7 	andeq	r0, r0, r7, asr #3
    9c94:	0037aa07 	eorseq	sl, r7, r7, lsl #20
    9c98:	180a0400 	stmdane	sl, {sl}
    9c9c:	00000060 	andeq	r0, r0, r0, rrx
    9ca0:	00020000 	andeq	r0, r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:86
        mI2C.End_Transaction(ta);
    9ca4:	0037b407 	eorseq	fp, r7, r7, lsl #8
    9ca8:	180e0400 	stmdane	lr, {sl}
    9cac:	00000060 	andeq	r0, r0, r0, rrx
    9cb0:	20000000 	andcs	r0, r0, r0
    9cb4:	0037940a 	eorseq	r9, r7, sl, lsl #8
    9cb8:	18110400 	ldmdane	r1, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:91
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9cbc:	00000060 	andeq	r0, r0, r0, rrx
    9cc0:	83074000 	movwhi	r4, #28672	; 0x7000
    9cc4:	04000037 	streq	r0, [r0], #-55	; 0xffffffc9
    9cc8:	00601814 	rsbeq	r1, r0, r4, lsl r8
    9ccc:	00000000 	andeq	r0, r0, r0
    9cd0:	790a1ffe 	stmdbvc	sl, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:93
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Com_Pins;
    9cd4:	04000037 	streq	r0, [r0], #-55	; 0xffffffc9
    9cd8:	00601817 	rsbeq	r1, r0, r7, lsl r8
    9cdc:	7ff80000 	svcvc	0x00f80000
    9ce0:	017a0900 	cmneq	sl, r0, lsl #18
    9ce4:	8a090000 	bhi	249cec <_bss_end+0x23803c>
    9ce8:	09000001 	stmdbeq	r0, {r0}
    9cec:	0000019a 	muleq	r0, sl, r1
    9cf0:	0001a809 	andeq	sl, r1, r9, lsl #16
    9cf4:	01b80900 			; <UNDEFINED> instruction: 0x01b80900
    9cf8:	f20b0000 	vhadd.s8	d0, d11, d0
    9cfc:	ff000038 			; <UNDEFINED> instruction: 0xff000038
    9d00:	0709050f 	streq	r0, [r9, -pc, lsl #10]
    9d04:	0000027a 	andeq	r0, r0, sl, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:95
        mI2C.End_Transaction(ta);
    9d08:	0037de0c 	eorseq	sp, r7, ip, lsl #28
    9d0c:	0d0c0500 	cfstr32eq	mvfx0, [ip, #-0]
    9d10:	0000027a 	andeq	r0, r0, sl, ror r2
    9d14:	37d90d00 	ldrbcc	r0, [r9, r0, lsl #26]
    9d18:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    9d1c:	00384a0a 	eorseq	r4, r8, sl, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:100
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d20:	00020f00 	andeq	r0, r2, r0, lsl #30
    9d24:	00021f00 	andeq	r1, r2, r0, lsl #30
    9d28:	028b0e00 	addeq	r0, fp, #0, 28
    9d2c:	540f0000 	strpl	r0, [pc], #-0	; 9d34 <_ZN16CDisplay_SSD13064OpenEii+0x448>
    9d30:	0f000000 	svceq	0x00000000
    9d34:	00000296 	muleq	r0, r6, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:102
        ta << SSD1306_Cmd::Command_Start << 0x02;
    9d38:	38f21000 	ldmcc	r2!, {ip}^
    9d3c:	11050000 	mrsne	r0, (UNDEF: 5)
    9d40:	00386505 	eorseq	r6, r8, r5, lsl #10
    9d44:	00028b00 	andeq	r8, r2, r0, lsl #22
    9d48:	02380100 	eorseq	r0, r8, #0, 2
    9d4c:	023e0000 	eorseq	r0, lr, #0
    9d50:	8b0e0000 	blhi	389d58 <_bss_end+0x3780a8>
    9d54:	00000002 	andeq	r0, r0, r2
    9d58:	0037c410 	eorseq	ip, r7, r0, lsl r4
    9d5c:	0e140500 	cfmul32eq	mvfx0, mvfx4, mvfx0
    9d60:	0000380b 	andeq	r3, r0, fp, lsl #16
    9d64:	00000054 	andeq	r0, r0, r4, asr r0
    9d68:	00025701 	andeq	r5, r2, r1, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:104
        mI2C.End_Transaction(ta);
    9d6c:	00025d00 	andeq	r5, r2, r0, lsl #26
    9d70:	028b0e00 	addeq	r0, fp, #0, 28
    9d74:	11000000 	mrsne	r0, (UNDEF: 0)
    9d78:	000037cf 	andeq	r3, r0, pc, asr #15
    9d7c:	d30a1605 	movwle	r1, #42501	; 0xa605
    9d80:	01000038 	tsteq	r0, r8, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:109
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d84:	0000026e 	andeq	r0, r0, lr, ror #4
    9d88:	00028b0e 	andeq	r8, r2, lr, lsl #22
    9d8c:	00540f00 	subseq	r0, r4, r0, lsl #30
    9d90:	00000000 	andeq	r0, r0, r0
    9d94:	00003a12 	andeq	r3, r0, r2, lsl sl
    9d98:	00028b00 	andeq	r8, r2, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:111
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Contrast;
    9d9c:	00651300 	rsbeq	r1, r5, r0, lsl #6
    9da0:	0ffe0000 	svceq	0x00fe0000
    9da4:	e0041400 	and	r1, r4, r0, lsl #8
    9da8:	05000001 	streq	r0, [r0, #-1]
    9dac:	0000028b 	andeq	r0, r0, fp, lsl #5
    9db0:	4d020102 	stfmis	f0, [r2, #-8]
    9db4:	15000045 	strne	r0, [r0, #-69]	; 0xffffffbb
    9db8:	00003918 	andeq	r3, r0, r8, lsl r9
    9dbc:	e0161905 	ands	r1, r6, r5, lsl #18
    9dc0:	16000001 	strne	r0, [r0], -r1
    9dc4:	0000029d 	muleq	r0, sp, r2
    9dc8:	050f0301 	streq	r0, [pc, #-769]	; 9acf <_ZN16CDisplay_SSD13064OpenEii+0x1e3>
    9dcc:	010c9403 	tsteq	ip, r3, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:113
        mI2C.End_Transaction(ta);
    9dd0:	39091700 	stmdbcc	r9, {r8, r9, sl, ip}
    9dd4:	de3c0000 	cdple	0, 3, cr0, cr12, cr0, {0}
    9dd8:	001c0000 	andseq	r0, ip, r0
    9ddc:	9c010000 	stcls	0, cr0, [r1], {-0}
    9de0:	00024118 	andeq	r4, r2, r8, lsl r1
    9de4:	00ddf000 	sbcseq	pc, sp, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:118
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9de8:	00004c00 	andeq	r4, r0, r0, lsl #24
    9dec:	f89c0100 			; <UNDEFINED> instruction: 0xf89c0100
    9df0:	19000002 	stmdbne	r0, {r1}
    9df4:	0000033b 	andeq	r0, r0, fp, lsr r3
    9df8:	33013901 	movwcc	r3, #6401	; 0x1901
    9dfc:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:120
        ta << SSD1306_Cmd::Command_Start << 0x8F;
    9e00:	34197491 	ldrcc	r7, [r9], #-1169	; 0xfffffb6f
    9e04:	01000007 	tsteq	r0, r7
    9e08:	00330139 	eorseq	r0, r3, r9, lsr r1
    9e0c:	91020000 	mrsls	r0, (UNDEF: 2)
    9e10:	5d1a0070 	ldcpl	0, cr0, [sl, #-448]	; 0xfffffe40
    9e14:	01000002 	tsteq	r0, r2
    9e18:	03120634 	tsteq	r2, #52, 12	; 0x3400000
    9e1c:	ddb80000 	ldcle	0, cr0, [r8]
    9e20:	00380000 	eorseq	r0, r8, r0
    9e24:	9c010000 	stcls	0, cr0, [r1], {-0}
    9e28:	0000032d 	andeq	r0, r0, sp, lsr #6
    9e2c:	00032c1b 	andeq	r2, r3, fp, lsl ip
    9e30:	00029100 	andeq	r9, r2, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:122
        mI2C.End_Transaction(ta);
    9e34:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    9e38:	0061661c 	rsbeq	r6, r1, ip, lsl r6
    9e3c:	54283401 	strtpl	r3, [r8], #-1025	; 0xfffffbff
    9e40:	02000000 	andeq	r0, r0, #0
    9e44:	1a007091 	bne	26090 <_bss_end+0x143e0>
    9e48:	0000023e 	andeq	r0, r0, lr, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:127
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9e4c:	470a1601 	strmi	r1, [sl, -r1, lsl #12]
    9e50:	d4000003 	strle	r0, [r0], #-3
    9e54:	e40000dc 	str	r0, [r0], #-220	; 0xffffff24
    9e58:	01000000 	mrseq	r0, (UNDEF: 0)
    9e5c:	0003879c 	muleq	r3, ip, r7
    9e60:	032c1b00 			; <UNDEFINED> instruction: 0x032c1b00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:129
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Precharge_Period;
    9e64:	02910000 	addseq	r0, r1, #0
    9e68:	91020000 	mrsls	r0, (UNDEF: 2)
    9e6c:	00691d64 	rsbeq	r1, r9, r4, ror #26
    9e70:	540e1b01 	strpl	r1, [lr], #-2817	; 0xfffff4ff
    9e74:	02000000 	andeq	r0, r0, #0
    9e78:	6a1d7491 	bvs	7670c4 <_bss_end+0x755414>
    9e7c:	111b0100 	tstne	fp, r0, lsl #2
    9e80:	00000054 	andeq	r0, r0, r4, asr r0
    9e84:	1e709102 	expnes	f1, f2
    9e88:	0000dd50 	andeq	sp, r0, r0, asr sp
    9e8c:	00000034 	andeq	r0, r0, r4, lsr r0
    9e90:	0039001f 	eorseq	r0, r9, pc, lsl r0
    9e94:	24290100 	strtcs	r0, [r9], #-256	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:131
        mI2C.End_Transaction(ta);
    9e98:	00000060 	andeq	r0, r0, r0, rrx
    9e9c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    9ea0:	01fb2000 	mvnseq	r2, r0
    9ea4:	06010000 	streq	r0, [r1], -r0
    9ea8:	000003a0 	andeq	r0, r0, r0, lsr #7
    9eac:	0000dc18 	andeq	sp, r0, r8, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:136
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9eb0:	000000bc 	strheq	r0, [r0], -ip
    9eb4:	03cb9c01 	biceq	r9, fp, #256	; 0x100
    9eb8:	2c1b0000 	ldccs	0, cr0, [fp], {-0}
    9ebc:	91000003 	tstls	r0, r3
    9ec0:	02000002 	andeq	r0, r0, #2
    9ec4:	00197491 	mulseq	r9, r1, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:138
        ta << SSD1306_Cmd::Command_Start << 0xF1;
    9ec8:	01000039 	tsteq	r0, r9, lsr r0
    9ecc:	0054230e 	subseq	r2, r4, lr, lsl #6
    9ed0:	91020000 	mrsls	r0, (UNDEF: 2)
    9ed4:	39771970 	ldmdbcc	r7!, {r4, r5, r6, r8, fp, ip}^
    9ed8:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    9edc:	00029632 	andeq	r9, r2, r2, lsr r6
    9ee0:	6f910200 	svcvs	0x00910200
    9ee4:	021f2100 	andseq	r2, pc, #0, 2
    9ee8:	05010000 	streq	r0, [r1, #-0]
    9eec:	0003dc01 	andeq	sp, r3, r1, lsl #24
    9ef0:	03f20000 	mvnseq	r0, #0
    9ef4:	2c220000 	stccs	0, cr0, [r2], #-0
    9ef8:	91000003 	tstls	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:140
        mI2C.End_Transaction(ta);
    9efc:	23000002 	movwcs	r0, #2
    9f00:	01006924 	tsteq	r0, r4, lsr #18
    9f04:	00330e08 	eorseq	r0, r3, r8, lsl #28
    9f08:	00000000 	andeq	r0, r0, r0
    9f0c:	0003cb25 	andeq	ip, r3, r5, lsr #22
    9f10:	00397c00 	eorseq	r7, r9, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:146
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9f14:	00040900 	andeq	r0, r4, r0, lsl #18
    9f18:	00dbb400 	sbcseq	fp, fp, r0, lsl #8
    9f1c:	00006400 	andeq	r6, r0, r0, lsl #8
    9f20:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
    9f24:	000003dc 	ldrdeq	r0, [r0], -ip
    9f28:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:148
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_VCOM_Detect << 0x40 << SSD1306_Cmd::Display_All_On_Resume
    9f2c:	000003e5 	andeq	r0, r0, r5, ror #7
    9f30:	00000420 	andeq	r0, r0, r0, lsr #8
    9f34:	0003e628 	andeq	lr, r3, r8, lsr #12
    9f38:	e5290000 	str	r0, [r9, #-0]!
    9f3c:	c4000003 	strgt	r0, [r0], #-3
    9f40:	3c0000db 	stccc	0, cr0, [r0], {219}	; 0xdb
    9f44:	2a000000 	bcs	9f4c <_ZN16CDisplay_SSD13064OpenEii+0x660>
    9f48:	000003e6 	andeq	r0, r0, r6, ror #7
    9f4c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    9f50:	11100000 	tstne	r0, r0
    9f54:	00040000 	andeq	r0, r4, r0
    9f58:	0000299c 	muleq	r0, ip, r9
    9f5c:	00140104 	andseq	r0, r4, r4, lsl #2
    9f60:	34040000 	strcc	r0, [r4], #-0
    9f64:	c500003a 	strgt	r0, [r0, #-58]	; 0xffffffc6
    9f68:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    9f6c:	00000002 	andeq	r0, r0, r2
    9f70:	01000000 	mrseq	r0, (UNDEF: 0)
    9f74:	02000037 	andeq	r0, r0, #55	; 0x37
    9f78:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    9f7c:	25030000 	strcs	r0, [r3, #-0]
    9f80:	02000000 	andeq	r0, r0, #0
    9f84:	05990502 	ldreq	r0, [r9, #1282]	; 0x502
    9f88:	04040000 	streq	r0, [r4], #-0
    9f8c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    9f90:	09820500 	stmibeq	r2, {r8, sl}
    9f94:	07030000 	streq	r0, [r3, -r0]
    9f98:	00004b07 	andeq	r4, r0, r7, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:149
           << SSD1306_Cmd::Normal_Display << SSD1306_Cmd::Deactivate_Scroll << SSD1306_Cmd::Display_On;
    9f9c:	08010200 	stmdaeq	r1, {r9}
    9fa0:	0000056a 	andeq	r0, r0, sl, ror #10
    9fa4:	00004b06 	andeq	r4, r0, r6, lsl #22
    9fa8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    9fac:	000003dc 	ldrdeq	r0, [r0], -ip
    9fb0:	0005e405 	andeq	lr, r5, r5, lsl #8
    9fb4:	07090300 	streq	r0, [r9, -r0, lsl #6]
    9fb8:	0000006f 	andeq	r0, r0, pc, rrx
    9fbc:	00005e03 	andeq	r5, r0, r3, lsl #28
    9fc0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    9fc4:	00004596 	muleq	r0, r6, r5
    9fc8:	00006f03 	andeq	r6, r0, r3, lsl #30
    9fcc:	31e50700 	mvncc	r0, r0, lsl #14
    9fd0:	04040000 	streq	r0, [r4], #-0
    9fd4:	00006a14 	andeq	r6, r0, r4, lsl sl
    9fd8:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    9fdc:	08000104 	stmdaeq	r0, {r2, r8}
    9fe0:	000032d4 	ldrdeq	r3, [r0], -r4
    9fe4:	00380405 	eorseq	r0, r8, r5, lsl #8
    9fe8:	07040000 	streq	r0, [r4, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:151
        mI2C.End_Transaction(ta);
    9fec:	0000b80c 	andeq	fp, r0, ip, lsl #16
    9ff0:	654e0900 	strbvs	r0, [lr, #-2304]	; 0xfffff700
    9ff4:	0a000077 	beq	a1d8 <_ZN16CDisplay_SSD13065ClearEb+0x28>
    9ff8:	000032cb 	andeq	r3, r0, fp, asr #5
    9ffc:	19c30a01 	stmibne	r3, {r0, r9, fp}^
    a000:	0a020000 	beq	8a008 <_bss_end+0x78358>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:154
    Clear();
    a004:	000033fc 	strdeq	r3, [r0], -ip
    a008:	a80b0003 	stmdage	fp, {r0, r1}
    a00c:	0c000031 	stceq	0, cr0, [r0], {49}	; 0x31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:156
    return true;
    a010:	ea081604 	b	20f828 <_bss_end+0x1fdb78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:157
}
    a014:	0c000000 	stceq	0, cr0, [r0], {-0}
    a018:	0400726c 	streq	r7, [r0], #-620	; 0xfffffd94
    a01c:	00ea1318 	rsceq	r1, sl, r8, lsl r3
_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:160
{
    a020:	0c000000 	stceq	0, cr0, [r0], {-0}
    a024:	04007073 	streq	r7, [r0], #-115	; 0xffffff8d
    a028:	00ea1319 	rsceq	r1, sl, r9, lsl r3
    a02c:	0c040000 	stceq	0, cr0, [r4], {-0}
    a030:	04006370 	streq	r6, [r0], #-880	; 0xfffffc90
    a034:	00ea131a 	rsceq	r1, sl, sl, lsl r3
    a038:	00080000 	andeq	r0, r8, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:161
    auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a03c:	91070402 	tstls	r7, r2, lsl #8
    a040:	03000045 	movweq	r0, #69	; 0x45
    a044:	000000ea 	andeq	r0, r0, sl, ror #1
    a048:	0035920b 	eorseq	r9, r5, fp, lsl #4
    a04c:	22045c00 	andcs	r5, r4, #0, 24
    a050:	00015208 	andeq	r5, r1, r8, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:163
    ta << SSD1306_Cmd::Command_Start << (static_cast<uint8_t>(cmd) | lowPart);
    a054:	353d0d00 	ldrcc	r0, [sp, #-3328]!	; 0xfffff300
    a058:	24040000 	strcs	r0, [r4], #-0
    a05c:	0000b812 	andeq	fp, r0, r2, lsl r8
    a060:	700c0000 	andvc	r0, ip, r0
    a064:	04006469 	streq	r6, [r0], #-1129	; 0xfffffb97
    a068:	006f1225 	rsbeq	r1, pc, r5, lsr #4
    a06c:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    a070:	0000312c 	andeq	r3, r0, ip, lsr #2
    a074:	8d112604 	ldchi	6, cr2, [r1, #-16]
    a078:	10000000 	andne	r0, r0, r0
    a07c:	0032f00d 	eorseq	pc, r2, sp
    a080:	12270400 	eorne	r0, r7, #0, 8
    a084:	0000006f 	andeq	r0, r0, pc, rrx
    a088:	33390d14 	teqcc	r9, #20, 26	; 0x500
    a08c:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:165
    mI2C.End_Transaction(ta);
    a090:	00006f12 	andeq	r6, r0, r2, lsl pc
    a094:	9b0d1800 	blls	35009c <_bss_end+0x33e3ec>
    a098:	04000031 	streq	r0, [r0], #-49	; 0xffffffcf
    a09c:	01520c2a 	cmpeq	r2, sl, lsr #24
    a0a0:	001c0000 	andseq	r0, ip, r0
    a0a4:	0001620e 	andeq	r6, r1, lr, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:166
}
    a0a8:	00016200 	andeq	r6, r1, r0, lsl #4
    a0ac:	006f0f00 	rsbeq	r0, pc, r0, lsl #30
    a0b0:	000f0000 	andeq	r0, pc, r0
_ZN16CDisplay_SSD13065CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:169
{
    a0b4:	01680410 	cmneq	r8, r0, lsl r4
    a0b8:	c8110000 	ldmdagt	r1, {}	; <UNPREDICTABLE>
    a0bc:	0400002b 	streq	r0, [r0], #-43	; 0xffffffd5
    a0c0:	68072405 	stmdavs	r7, {r0, r2, sl, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:170
    if (!mOpened)
    a0c4:	65000001 	strvs	r0, [r0, #-1]
    a0c8:	12000002 	andne	r0, r0, #2
    a0cc:	00002bc2 	andeq	r2, r0, r2, asr #23
    a0d0:	00000d1f 	andeq	r0, r0, pc, lsl sp
    a0d4:	20130100 	andscs	r0, r3, r0, lsl #2
    a0d8:	05000029 	streq	r0, [r0, #-41]	; 0xffffffd7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:175
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a0dc:	20170d27 	andscs	r0, r7, r7, lsr #26
    a0e0:	0ad80000 	beq	ff60a0e8 <_bss_end+0xff5f8438>
    a0e4:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    a0e8:	01000001 	tsteq	r0, r1
    a0ec:	0001a301 	andeq	sl, r1, r1, lsl #6
    a0f0:	0001ae00 	andeq	sl, r1, r0, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:177
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Display_Off;
    a0f4:	01621400 	cmneq	r2, r0, lsl #8
    a0f8:	38140000 	ldmdacc	r4, {}	; <UNPREDICTABLE>
    a0fc:	00000000 	andeq	r0, r0, r0
    a100:	0002d315 	andeq	sp, r2, r5, lsl r3
    a104:	162b0500 	strtne	r0, [fp], -r0, lsl #10
    a108:	00002475 	andeq	r2, r0, r5, ror r4
    a10c:	0000005e 	andeq	r0, r0, lr, asr r0
    a110:	02100201 	andseq	r0, r0, #268435456	; 0x10000000
    a114:	00000168 	andeq	r0, r0, r8, ror #2
    a118:	0001cf01 	andeq	ip, r1, r1, lsl #30
    a11c:	0001df00 	andeq	sp, r1, r0, lsl #30
    a120:	01621400 	cmneq	r2, r0, lsl #8
    a124:	84160000 	ldrhi	r0, [r6], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:179
        mI2C.End_Transaction(ta);
    a128:	16000009 	strne	r0, [r0], -r9
    a12c:	0000005e 	andeq	r0, r0, lr, asr r0
    a130:	1ce01500 	cfstr64ne	mvdx1, [r0]
    a134:	31050000 	mrscc	r0, (UNDEF: 5)
    a138:	00260816 	eoreq	r0, r6, r6, lsl r8
    a13c:	00005e00 	andeq	r5, r0, r0, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:182
    mI2C.Close();
    a140:	10020100 	andne	r0, r2, r0, lsl #2
    a144:	00016803 	andeq	r6, r1, r3, lsl #16
    a148:	02000100 	andeq	r0, r0, #0, 2
    a14c:	02100000 	andseq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:184
    delete mBuffer;
    a150:	62140000 	andsvs	r0, r4, #0
    a154:	16000001 	strne	r0, [r0], -r1
    a158:	000004ec 	andeq	r0, r0, ip, ror #9
    a15c:	00005e16 	andeq	r5, r0, r6, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:184 (discriminator 1)
    a160:	ad150000 	ldcge	0, cr0, [r5, #-0]
    a164:	05000009 	streq	r0, [r0, #-9]
    a168:	28f71236 	ldmcs	r7!, {r1, r2, r4, r5, r9, ip}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:186
    mOpened = false;
    a16c:	04df0000 	ldrbeq	r0, [pc], #0	; a174 <_ZN16CDisplay_SSD13065CloseEv+0xc0>
    a170:	02010000 	andeq	r0, r1, #0
    a174:	01680410 	cmneq	r8, r0, lsl r4
    a178:	31010000 	mrscc	r0, (UNDEF: 1)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:171
        return;
    a17c:	37000002 	strcc	r0, [r0, -r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:187
}
    a180:	14000002 	strne	r0, [r0], #-2
    a184:	00000162 	andeq	r0, r0, r2, ror #2
_ZNK16CDisplay_SSD13069Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:190
{
    a188:	24ea1700 	strbtcs	r1, [sl], #1792	; 0x700
    a18c:	3b050000 	blcc	14a194 <_bss_end+0x1384e4>
    a190:	0027bb12 	eoreq	fp, r7, r2, lsl fp
    a194:	0004df00 	andeq	sp, r4, r0, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:191
    return mOpened;
    a198:	10020100 	andne	r0, r2, r0, lsl #2
    a19c:	00016805 	andeq	r6, r1, r5, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:192
}
    a1a0:	02540100 	subseq	r0, r4, #0, 2
    a1a4:	62140000 	andsvs	r0, r4, #0
    a1a8:	16000001 	strne	r0, [r0], -r1
    a1ac:	000002d5 	ldrdeq	r0, [r0], -r5
_ZN16CDisplay_SSD13065ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:195
{
    a1b0:	000ad816 	andeq	sp, sl, r6, lsl r8
    a1b4:	0b000000 	bleq	a1bc <_ZN16CDisplay_SSD13065ClearEb+0xc>
    a1b8:	0000318f 	andeq	r3, r0, pc, lsl #3
    a1bc:	08060608 	stmdaeq	r6, {r3, r9, sl}
    a1c0:	0000028b 	andeq	r0, r0, fp, lsl #5
    a1c4:	0030720c 	eorseq	r7, r0, ip, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:196
    if (!mOpened)
    a1c8:	5e0e0806 	cdppl	8, 0, cr0, cr14, cr6, {0}
    a1cc:	00000000 	andeq	r0, r0, r0
    a1d0:	0031720c 	eorseq	r7, r1, ip, lsl #4
    a1d4:	5e0e0906 	vmlapl.f16	s0, s28, s12	; <UNPREDICTABLE>
    a1d8:	04000000 	streq	r0, [r0], #-0
    a1dc:	31080800 	tstcc	r8, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199
    const uint8_t clearColor = clearWhite ? 0xFF : 0x00;
    a1e0:	04050000 	streq	r0, [r5], #-0
    a1e4:	00000038 	andeq	r0, r0, r8, lsr r0
    a1e8:	a40c1e06 	strge	r1, [ip], #-3590	; 0xfffff1fa
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199 (discriminator 1)
    a1ec:	0a000002 	beq	a1fc <_ZN16CDisplay_SSD13065ClearEb+0x4c>
    a1f0:	000036c9 	andeq	r3, r0, r9, asr #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199 (discriminator 2)
    a1f4:	5f080000 	svcpl	0x00080000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199 (discriminator 4)
    a1f8:	05000036 	streq	r0, [r0, #-54]	; 0xffffffca
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201 (discriminator 4)
    const int maxIdx = mWidth * (mHeight / 8);
    a1fc:	00003804 	andeq	r3, r0, r4, lsl #16
    a200:	0c260600 	stceq	6, cr0, [r6], #-0
    a204:	000002d5 	ldrdeq	r0, [r0], -r5
    a208:	000a200a 	andeq	r2, sl, sl
    a20c:	d30a0000 	movwle	r0, #40960	; 0xa000
    a210:	01000002 	tsteq	r0, r2
    a214:	001ce00a 	andseq	lr, ip, sl
    a218:	ad0a0200 	sfmge	f0, 4, [sl, #-0]
    a21c:	03000009 	movweq	r0, #9
    a220:	0024ea0a 	eoreq	lr, r4, sl, lsl #20
    a224:	08000400 	stmdaeq	r0, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203 (discriminator 4)
    for (int i = 0; i < maxIdx; i++)
    a228:	00002161 	andeq	r2, r0, r1, ror #2
    a22c:	00380405 	eorseq	r0, r8, r5, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203 (discriminator 3)
    a230:	43060000 	movwmi	r0, #24576	; 0x6000
    a234:	0002f40c 	andeq	pc, r2, ip, lsl #8
    a238:	22900a00 	addscs	r0, r0, #0, 20
    a23c:	0a000000 	beq	a244 <_ZN16CDisplay_SSD13065ClearEb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:204 (discriminator 2)
        mBuffer[i] = clearColor;
    a240:	00002025 	andeq	r2, r0, r5, lsr #32
    a244:	44070001 	strmi	r0, [r7], #-1
    a248:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    a24c:	006a1a06 	rsbeq	r1, sl, r6, lsl #20
    a250:	03050000 	movweq	r0, #20480	; 0x5000
    a254:	000104a0 	andeq	r0, r1, r0, lsr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203 (discriminator 2)
    for (int i = 0; i < maxIdx; i++)
    a258:	001c7507 	andseq	r7, ip, r7, lsl #10
    a25c:	1a080500 	bne	20b664 <_bss_end+0x1f99b4>
    a260:	0000006a 	andeq	r0, r0, sl, rrx
    a264:	04a40305 	strteq	r0, [r4], #773	; 0x305
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:206
    Flip();
    a268:	93070001 	movwls	r0, #28673	; 0x7001
    a26c:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    a270:	006a1a0a 	rsbeq	r1, sl, sl, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:197
        return;
    a274:	03050000 	movweq	r0, #20480	; 0x5000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:207
}
    a278:	000104a8 	andeq	r0, r1, r8, lsr #9
    a27c:	001b7907 	andseq	r7, fp, r7, lsl #18
_ZN16CDisplay_SSD13069Set_PixelEjjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:210
{
    a280:	1a0c0500 	bne	30b688 <_bss_end+0x2f99d8>
    a284:	0000006a 	andeq	r0, r0, sl, rrx
    a288:	04ac0305 	strteq	r0, [ip], #773	; 0x305
    a28c:	32080001 	andcc	r0, r8, #1
    a290:	05000024 	streq	r0, [r0, #-36]	; 0xffffffdc
    a294:	00003804 	andeq	r3, r0, r4, lsl #16
    a298:	0c0e0500 	cfstr32eq	mvfx0, [lr], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:211
    if (!mOpened)
    a29c:	00000361 	andeq	r0, r0, r1, ror #6
    a2a0:	001d370a 	andseq	r3, sp, sl, lsl #14
    a2a4:	3d0a0000 	stccc	0, cr0, [sl, #-0]
    a2a8:	0100001e 	tsteq	r0, lr, lsl r0
    a2ac:	001cdb0a 	andseq	sp, ip, sl, lsl #22
    a2b0:	18000200 	stmdane	r0, {r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:214
    if (set)
    a2b4:	00001c87 	andeq	r1, r0, r7, lsl #25
    a2b8:	074c0590 			; <UNDEFINED> instruction: 0x074c0590
    a2bc:	000004cf 	andeq	r0, r0, pc, asr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:215
        mBuffer[x + (y / 8) * mWidth] |= (1 << (y & 7));
    a2c0:	001c670b 	andseq	r6, ip, fp, lsl #14
    a2c4:	50052400 	andpl	r2, r5, r0, lsl #8
    a2c8:	0003e90c 	andeq	lr, r3, ip, lsl #18
    a2cc:	3eb00d00 	cdpcc	13, 11, cr0, cr0, cr0, {0}
    a2d0:	52050000 	andpl	r0, r5, #0
    a2d4:	0004cf0e 	andeq	ip, r4, lr, lsl #30
    a2d8:	380d0000 	stmdacc	sp, {}	; <UNPREDICTABLE>
    a2dc:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    a2e0:	04df0e54 	ldrbeq	r0, [pc], #3668	; a2e8 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x68>
    a2e4:	0d100000 	ldceq	0, cr0, [r0, #-0]
    a2e8:	00001b8c 	andeq	r1, r0, ip, lsl #23
    a2ec:	5e125605 	cfmsub32pl	mvax0, mvfx5, mvfx2, mvfx5
    a2f0:	14000000 	strne	r0, [r0], #-0
    a2f4:	001c600d 	andseq	r6, ip, sp
    a2f8:	18590500 	ldmdane	r9, {r8, sl}^
    a2fc:	000004e6 	andeq	r0, r0, r6, ror #9
    a300:	1c930d18 	ldcne	13, cr0, [r3], {24}
    a304:	5b050000 	blpl	14a30c <_bss_end+0x13865c>
    a308:	0004e618 	andeq	lr, r4, r8, lsl r6
    a30c:	fb0d1c00 	blx	351316 <_bss_end+0x33f666>
    a310:	0500000d 	streq	r0, [r0, #-13]
    a314:	04e6185e 	strbteq	r1, [r6], #2142	; 0x85e
    a318:	19200000 	stmdbne	r0!, {}	; <UNPREDICTABLE>
    a31c:	00001d11 	andeq	r1, r0, r1, lsl sp
    a320:	cf186005 	svcgt	0x00186005
    a324:	e600001d 			; <UNDEFINED> instruction: 0xe600001d
    a328:	dd000004 	stcle	0, cr0, [r0, #-16]
    a32c:	14000003 	strne	r0, [r0], #-3
    a330:	000004e6 	andeq	r0, r0, r6, ror #9
    a334:	0004ec16 	andeq	lr, r4, r6, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:217
        mBuffer[x + (y / 8) * mWidth] &= ~(1 << (y & 7));
    a338:	0b000000 	bleq	a340 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0xc0>
    a33c:	00001cd0 	ldrdeq	r1, [r0], -r0
    a340:	0c640518 	cfstr64eq	mvdx0, [r4], #-96	; 0xffffffa0
    a344:	0000041e 	andeq	r0, r0, lr, lsl r4
    a348:	003eb00d 	eorseq	fp, lr, sp
    a34c:	0e670500 	cdpeq	5, 6, cr0, cr7, cr0, {0}
    a350:	000004cf 	andeq	r0, r0, pc, asr #9
    a354:	1bb60d00 	blne	fed8d75c <_bss_end+0xfed7baac>
    a358:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
    a35c:	0004ec15 	andeq	lr, r4, r5, lsl ip
    a360:	260d1000 	strcs	r1, [sp], -r0
    a364:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    a368:	04fc1d6b 	ldrbteq	r1, [ip], #3435	; 0xd6b
    a36c:	00140000 	andseq	r0, r4, r0
    a370:	0003e903 	andeq	lr, r3, r3, lsl #18
    a374:	1bcc1a00 	blne	ff310b7c <_bss_end+0xff2feecc>
    a378:	6f050000 	svcvs	0x00050000
    a37c:	0005021d 	andeq	r0, r5, sp, lsl r2
    a380:	1b671a00 	blne	19d0b88 <_bss_end+0x19beed8>
    a384:	71050000 	mrsvc	r0, (UNDEF: 5)
    a388:	00006a1b 	andeq	r6, r0, fp, lsl sl
    a38c:	1da10d00 	stcne	13, cr0, [r1]
    a390:	74050000 	strvc	r0, [r5], #-0
    a394:	00036e13 	andeq	r6, r3, r3, lsl lr
    a398:	970d0000 	strls	r0, [sp, -r0]
    a39c:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    a3a0:	036e1377 	cmneq	lr, #-603979775	; 0xdc000001
    a3a4:	0d240000 	stceq	0, cr0, [r4, #-0]
    a3a8:	00001d2d 	andeq	r1, r0, sp, lsr #26
    a3ac:	6e137805 	cdpvs	8, 1, cr7, cr3, cr5, {0}
    a3b0:	48000003 	stmdami	r0, {r0, r1}
    a3b4:	001d1c0d 	andseq	r1, sp, sp, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:212
        return;
    a3b8:	13790500 	cmnne	r9, #0, 10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:218
}
    a3bc:	0000036e 	andeq	r0, r0, lr, ror #6
    a3c0:	1c871b6c 	vstmiane	r7, {d1-<overflow reg d54>}
    a3c4:	7c050000 	stcvc	0, cr0, [r5], {-0}
_ZN16CDisplay_SSD13064FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:221
{
    a3c8:	001dff05 	andseq	pc, sp, r5, lsl #30
    a3cc:	00050d00 	andeq	r0, r5, r0, lsl #26
    a3d0:	04880100 	streq	r0, [r8], #256	; 0x100
    a3d4:	048e0000 	streq	r0, [lr], #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:222
    if (!mOpened)
    a3d8:	0d140000 	ldceq	0, cr0, [r4, #-0]
    a3dc:	00000005 	andeq	r0, r0, r5
    a3e0:	001bc11c 	andseq	ip, fp, ip, lsl r1
    a3e4:	0a7f0500 	beq	1fcb7ec <_bss_end+0x1fb9b3c>
    a3e8:	00001e48 	andeq	r1, r0, r8, asr #28
    a3ec:	0004a301 	andeq	sl, r4, r1, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:229
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a3f0:	0004a900 	andeq	sl, r4, r0, lsl #18
    a3f4:	050d1400 	streq	r1, [sp, #-1024]	; 0xfffffc00
    a3f8:	1d000000 	stcne	0, cr0, [r0, #-0]
    a3fc:	00000a20 	andeq	r0, r0, r0, lsr #20
    a400:	e60c8205 	str	r8, [ip], -r5, lsl #4
    a404:	6200001c 	andvs	r0, r0, #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:231
        ta << SSD1306_Cmd::Command_Start << SSD1306_Cmd::Set_Page_Addr << 0x00 << 0xFF << SSD1306_Cmd::Set_Column_Addr
    a408:	01000001 	tsteq	r0, r1
    a40c:	000004be 			; <UNDEFINED> instruction: 0x000004be
    a410:	00050d14 	andeq	r0, r5, r4, lsl sp
    a414:	04ec1600 	strbteq	r1, [ip], #1536	; 0x600
    a418:	3c160000 	ldccc	0, cr0, [r6], {-0}
    a41c:	00000003 	andeq	r0, r0, r3
    a420:	00250e00 	eoreq	r0, r5, r0, lsl #28
    a424:	04df0000 	ldrbeq	r0, [pc], #0	; a42c <_ZN16CDisplay_SSD13064FlipEv+0x64>
    a428:	6f0f0000 	svcvs	0x000f0000
    a42c:	0f000000 	svceq	0x00000000
    a430:	02010200 	andeq	r0, r1, #0, 4
    a434:	0000454d 	andeq	r4, r0, sp, asr #10
    a438:	036e0410 	cmneq	lr, #16, 8	; 0x10000000
    a43c:	04100000 	ldreq	r0, [r0], #-0
    a440:	0000002c 	andeq	r0, r0, ip, lsr #32
    a444:	0004ec03 	andeq	lr, r4, r3, lsl #24
    a448:	29e11e00 	stmibcs	r1!, {r9, sl, fp, ip}^
    a44c:	04100000 	ldreq	r0, [r0], #-0
    a450:	000004f7 	strdeq	r0, [r0], -r7
    a454:	00041e0e 	andeq	r1, r4, lr, lsl #28
    a458:	00050d00 	andeq	r0, r5, r0, lsl #26
    a45c:	10001f00 	andne	r1, r0, r0, lsl #30
    a460:	00036104 	andeq	r6, r3, r4, lsl #2
    a464:	1be72000 	blne	ff9d246c <_bss_end+0xff9c07bc>
    a468:	85050000 	strhi	r0, [r5, #-0]
    a46c:	00036114 	andeq	r6, r3, r4, lsl r1
    a470:	36900700 	ldrcc	r0, [r0], r0, lsl #14
    a474:	0a070000 	beq	1ca47c <_bss_end+0x1b87cc>
    a478:	00006a14 	andeq	r6, r0, r4, lsl sl
    a47c:	b0030500 	andlt	r0, r3, r0, lsl #10
    a480:	0b000104 	bleq	a898 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x2b8>
    a484:	000035cb 	andeq	r3, r0, fp, asr #11
    a488:	080d070c 	stmdaeq	sp, {r2, r3, r8, r9, sl}
    a48c:	00000566 	andeq	r0, r0, r6, ror #10
    a490:	000d080d 	andeq	r0, sp, sp, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:232
           << 0x00 << mWidth - 1;
    a494:	190f0700 	stmdbne	pc, {r8, r9, sl}	; <UNPREDICTABLE>
    a498:	00000566 	andeq	r0, r0, r6, ror #10
    a49c:	0dfb0d00 	ldcleq	13, cr0, [fp]
    a4a0:	10070000 	andne	r0, r7, r0
    a4a4:	00056619 	andeq	r6, r5, r9, lsl r6
    a4a8:	810d0400 	tsthi	sp, r0, lsl #8
    a4ac:	07000035 	smladxeq	r0, r5, r0, r0
    a4b0:	056c1311 	strbeq	r1, [ip, #-785]!	; 0xfffffcef
    a4b4:	00080000 	andeq	r0, r8, r0
    a4b8:	05310410 	ldreq	r0, [r1, #-1040]!	; 0xfffffbf0
    a4bc:	04100000 	ldreq	r0, [r0], #-0
    a4c0:	000000f6 	strdeq	r0, [r0], -r6
    a4c4:	00313218 	eorseq	r3, r1, r8, lsl r2
    a4c8:	14070c00 	strne	r0, [r7], #-3072	; 0xfffff400
    a4cc:	00070a07 	andeq	r0, r7, r7, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:234
        mI2C.End_Transaction(ta);
    a4d0:	33ca0d00 	biccc	r0, sl, #0, 26
    a4d4:	18070000 	stmdane	r7, {}	; <UNPREDICTABLE>
    a4d8:	00005e0e 	andeq	r5, r0, lr, lsl #28
    a4dc:	5f0d0000 	svcpl	0x000d0000
    a4e0:	07000030 	smladxeq	r0, r0, r0, r0
    a4e4:	0566191b 	strbeq	r1, [r6, #-2331]!	; 0xfffff6e5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:238
    constexpr int PktSize = 4;
    a4e8:	0d040000 	stceq	0, cr0, [r4, #-0]
    a4ec:	000034c5 	andeq	r3, r0, r5, asr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:240
    const int maxIdx = mWidth * (mHeight / 8);
    a4f0:	66191e07 	ldrvs	r1, [r9], -r7, lsl #28
    a4f4:	08000005 	stmdaeq	r0, {r0, r2}
    a4f8:	00365521 	eorseq	r5, r6, r1, lsr #10
    a4fc:	0a210700 	beq	84c104 <_bss_end+0x83a454>
    a500:	000035a8 	andeq	r3, r0, r8, lsr #11
    a504:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    a508:	000005c5 	andeq	r0, r0, r5, asr #11
    a50c:	00070f14 	andeq	r0, r7, r4, lsl pc
    a510:	05661600 	strbeq	r1, [r6, #-1536]!	; 0xfffffa00
    a514:	1b000000 	blne	a51c <_ZN16CDisplay_SSD13064FlipEv+0x154>
    a518:	00003132 	andeq	r3, r0, r2, lsr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:242
    for (int i = 0; i < maxIdx; i += PktSize)
    a51c:	e3052407 	movw	r2, #21511	; 0x5407
    a520:	0f000036 	svceq	0x00000036
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:242 (discriminator 1)
    a524:	01000007 	tsteq	r0, r7
    a528:	000005de 	ldrdeq	r0, [r0], -lr
    a52c:	000005e4 	andeq	r0, r0, r4, ror #11
    a530:	00070f14 	andeq	r0, r7, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:244
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a534:	411c0000 	tstmi	ip, r0
    a538:	07000036 	smladxeq	r0, r6, r0, r0
    a53c:	2faf0a27 	svccs	0x00af0a27
    a540:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    a544:	ff000005 			; <UNDEFINED> instruction: 0xff000005
    a548:	14000005 	strne	r0, [r0], #-5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:246
        ta << SSD1306_Cmd::Data_Continue;
    a54c:	0000070f 	andeq	r0, r0, pc, lsl #14
    a550:	311d1b00 	tstcc	sp, r0, lsl #22
    a554:	2a070000 	bcs	1ca55c <_bss_end+0x1b88ac>
    a558:	0030e00e 	eorseq	lr, r0, lr
    a55c:	00005e00 	andeq	r5, r0, r0, lsl #28
    a560:	06180100 	ldreq	r0, [r8], -r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:247
        for (int j = 0; j < PktSize; j++)
    a564:	06230000 	strteq	r0, [r3], -r0
    a568:	0f140000 	svceq	0x00140000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:247 (discriminator 3)
    a56c:	16000007 	strne	r0, [r0], -r7
    a570:	000000ea 	andeq	r0, r0, sl, ror #1
    a574:	359f1c00 	ldrcc	r1, [pc, #3072]	; b17c <_ZN15CShift_Register5CloseEv+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:249 (discriminator 2)
            ta << mBuffer[i + j];
    a578:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    a57c:	0034140a 	eorseq	r1, r4, sl, lsl #8
    a580:	06380100 	ldrteq	r0, [r8], -r0, lsl #2
    a584:	063e0000 	ldrteq	r0, [lr], -r0
    a588:	0f140000 	svceq	0x00140000
    a58c:	00000007 	andeq	r0, r0, r7
    a590:	0032481b 	eorseq	r4, r2, fp, lsl r8
    a594:	13310700 	teqne	r1, #0, 14
    a598:	00003072 	andeq	r3, r0, r2, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:247 (discriminator 2)
        for (int j = 0; j < PktSize; j++)
    a59c:	0000056c 	andeq	r0, r0, ip, ror #10
    a5a0:	00065701 	andeq	r5, r6, r1, lsl #14
    a5a4:	00065d00 	andeq	r5, r6, r0, lsl #26
    a5a8:	071a1400 	ldreq	r1, [sl, -r0, lsl #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:253 (discriminator 2)
        mI2C.End_Transaction(ta);
    a5ac:	1b000000 	blne	a5b4 <_ZN16CDisplay_SSD13064FlipEv+0x1ec>
    a5b0:	0000325c 	andeq	r3, r0, ip, asr r2
    a5b4:	840e3407 	strhi	r3, [lr], #-1031	; 0xfffffbf9
    a5b8:	5e000033 	mcrpl	0, 0, r0, cr0, cr3, {1}
    a5bc:	01000000 	mrseq	r0, (UNDEF: 0)
    a5c0:	00000676 	andeq	r0, r0, r6, ror r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:242 (discriminator 2)
    for (int i = 0; i < maxIdx; i += PktSize)
    a5c4:	00000681 	andeq	r0, r0, r1, lsl #13
    a5c8:	00070f14 	andeq	r0, r7, r4, lsl pc
    a5cc:	01621600 	cmneq	r2, r0, lsl #12
    a5d0:	1b000000 	blne	a5d8 <_ZN16CDisplay_SSD13064FlipEv+0x210>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:223
        return;
    a5d4:	0000303a 	andeq	r3, r0, sl, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:255
}
    a5d8:	fe0a3707 	cdp2	7, 0, cr3, cr10, cr7, {0}
    a5dc:	df000031 	svcle	0x00000031
_ZN16CDisplay_SSD130624Process_External_CommandEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:258
{
    a5e0:	01000004 	tsteq	r0, r4
    a5e4:	0000069a 	muleq	r0, sl, r6
    a5e8:	000006a5 	andeq	r0, r0, r5, lsr #13
    a5ec:	00070f14 	andeq	r0, r7, r4, lsl pc
    a5f0:	005e1600 	subseq	r1, lr, r0, lsl #12
    a5f4:	1c000000 	stcne	0, cr0, [r0], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:259
    if (length <= 0)
    a5f8:	00003279 	andeq	r3, r0, r9, ror r2
    a5fc:	ef0a3a07 	svc	0x000a3a07
    a600:	01000035 	tsteq	r0, r5, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:262
    NDisplay_Command cmd = static_cast<NDisplay_Command>(input[0]);
    a604:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    a608:	000006d9 	ldrdeq	r0, [r0], -r9
    a60c:	00070f14 	andeq	r0, r7, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264
    switch (cmd)
    a610:	028b1600 	addeq	r1, fp, #0, 12
    a614:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    a618:	16000000 	strne	r0, [r0], -r0
    a61c:	0000005e 	andeq	r0, r0, lr, asr r0
    a620:	00005e16 	andeq	r5, r0, r6, lsl lr
    a624:	07251600 	streq	r1, [r5, -r0, lsl #12]!
    a628:	22000000 	andcs	r0, r0, #0
    a62c:	000030a0 	andeq	r3, r0, r0, lsr #1
    a630:	43053d07 	movwmi	r3, #23815	; 0x5d07
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:272
            Flip();
    a634:	01000031 	tsteq	r0, r1, lsr r0
    a638:	000006ea 	andeq	r0, r0, sl, ror #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:273
            break;
    a63c:	00070f14 	andeq	r0, r7, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:278
            if (length != sizeof(TDisplay_Clear_Packet))
    a640:	02a41600 	adceq	r1, r4, #0, 12
    a644:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    a648:	16000000 	strne	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:281
            const TDisplay_Clear_Packet* pkt = reinterpret_cast<const TDisplay_Clear_Packet*>(input);
    a64c:	0000005e 	andeq	r0, r0, lr, asr r0
    a650:	00005e16 	andeq	r5, r0, r6, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:283
            Clear((pkt->clearSet != 0));
    a654:	07251600 	streq	r1, [r5, -r0, lsl #12]!
    a658:	00000000 	andeq	r0, r0, r0
    a65c:	00057203 	andeq	r7, r5, r3, lsl #4
    a660:	72041000 	andvc	r1, r4, #0
    a664:	03000005 	movweq	r0, #5
    a668:	0000070f 	andeq	r0, r0, pc, lsl #14
    a66c:	070a0410 	smladeq	sl, r0, r4, r0
    a670:	1a030000 	bne	ca678 <_bss_end+0xb89c8>
    a674:	23000007 	movwcs	r0, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:285
            break;
    a678:	00026504 	andeq	r6, r2, r4, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:291
            if (length < sizeof(TDisplay_Draw_Pixel_Array_Packet))
    a67c:	3a212000 	bcc	852684 <_bss_end+0x8409d4>
    a680:	40070000 	andmi	r0, r7, r0
    a684:	00057219 	andeq	r7, r5, r9, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:294
            const TDisplay_Draw_Pixel_Array_Packet* pkt =
    a688:	0b981800 	bleq	fe610690 <_bss_end+0xfe5fe9e0>
    a68c:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:297
            const TDisplay_Pixel_Spec* ptr = &pkt->first;
    a690:	09780703 	ldmdbeq	r8!, {r0, r1, r8, r9, sl}^
    a694:	16240000 	strtne	r0, [r4], -r0
    a698:	0700000b 	streq	r0, [r0, -fp]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299
            for (uint16_t i = 0; i < pkt->count; i++)
    a69c:	00006f04 	andeq	r6, r0, r4, lsl #30
    a6a0:	10060800 	andne	r0, r6, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299 (discriminator 3)
    a6a4:	00076401 	andeq	r6, r7, r1, lsl #8
    a6a8:	45480900 	strbmi	r0, [r8, #-2304]	; 0xfffff700
    a6ac:	09100058 	ldmdbeq	r0, {r3, r4, r6}
    a6b0:	00434544 	subeq	r4, r3, r4, asr #10
    a6b4:	4403000a 	strmi	r0, [r3], #-10
    a6b8:	0b000007 	bleq	a6dc <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0xfc>
    a6bc:	00000b23 	andeq	r0, r0, r3, lsr #22
    a6c0:	0c240808 	stceq	8, cr0, [r4], #-32	; 0xffffffe0
    a6c4:	0000078d 	andeq	r0, r0, sp, lsl #15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:300 (discriminator 2)
                Set_Pixel(ptr->x, ptr->y, (ptr->set != 0));
    a6c8:	0800790c 	stmdaeq	r0, {r2, r3, r8, fp, ip, sp, lr}
    a6cc:	006f1626 	rsbeq	r1, pc, r6, lsr #12
    a6d0:	0c000000 	stceq	0, cr0, [r0], {-0}
    a6d4:	27080078 	smlsdxcs	r8, r8, r0, r0
    a6d8:	00006f16 	andeq	r6, r0, r6, lsl pc
    a6dc:	25000400 	strcs	r0, [r0, #-1024]	; 0xfffffc00
    a6e0:	00000c75 	andeq	r0, r0, r5, ror ip
    a6e4:	641b0c08 	ldrvs	r0, [fp], #-3080	; 0xfffff3f8
    a6e8:	01000007 	tsteq	r0, r7
    a6ec:	0be8260a 	bleq	ffa13f1c <_bss_end+0xffa0226c>
    a6f0:	0d080000 	stceq	0, cr0, [r8, #-0]
    a6f4:	0004f228 	andeq	pc, r4, r8, lsr #4
    a6f8:	98270100 	stmdals	r7!, {r8}
    a6fc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    a700:	0c620e10 	stcleq	14, cr0, [r2], #-64	; 0xffffffc0
    a704:	09780000 	ldmdbeq	r8!, {}^	; <UNPREDICTABLE>
    a708:	c1010000 	mrsgt	r0, (UNDEF: 1)
    a70c:	d6000007 	strle	r0, [r0], -r7
    a710:	14000007 	strne	r0, [r0], #-7
    a714:	00000978 	andeq	r0, r0, r8, ror r9
    a718:	00006f16 	andeq	r6, r0, r6, lsl pc
    a71c:	006f1600 	rsbeq	r1, pc, r0, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299 (discriminator 2)
            for (uint16_t i = 0; i < pkt->count; i++)
    a720:	6f160000 	svcvs	0x00160000
    a724:	00000000 	andeq	r0, r0, r0
    a728:	0018a21c 	andseq	sl, r8, ip, lsl r2
    a72c:	0a120800 	beq	48c734 <_bss_end+0x47aa84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:308
            if (length < sizeof(TDisplay_Pixels_To_Rect))
    a730:	00000b83 	andeq	r0, r0, r3, lsl #23
    a734:	0007eb01 	andeq	lr, r7, r1, lsl #22
    a738:	0007f100 	andeq	pc, r7, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:311
            const TDisplay_Pixels_To_Rect* pkt = reinterpret_cast<const TDisplay_Pixels_To_Rect*>(input);
    a73c:	09781400 	ldmdbeq	r8!, {sl, ip}^
    a740:	1b000000 	blne	a748 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x168>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:313
            const uint8_t* data = &pkt->first;
    a744:	00000ba1 	andeq	r0, r0, r1, lsr #23
    a748:	050f1408 	streq	r1, [pc, #-1032]	; a348 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0xc8>
    a74c:	7e00000c 	cdpvc	0, 0, cr0, cr0, cr12, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:317
            if (pkt->vflip == 0)
    a750:	01000009 	tsteq	r0, r9
    a754:	0000080a 	andeq	r0, r0, sl, lsl #16
    a758:	00000815 	andeq	r0, r0, r5, lsl r8
    a75c:	00097814 	andeq	r7, r9, r4, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:319
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a760:	00251600 	eoreq	r1, r5, r0, lsl #12
    a764:	1b000000 	blne	a76c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x18c>
    a768:	00000ba1 	andeq	r0, r0, r1, lsr #23
    a76c:	ac0f1508 	cfstr32ge	mvfx1, [pc], {8}
    a770:	7e00000b 	cdpvc	0, 0, cr0, cr0, cr11, {0}
    a774:	01000009 	tsteq	r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:319 (discriminator 1)
    a778:	0000082e 	andeq	r0, r0, lr, lsr #16
    a77c:	00000839 	andeq	r0, r0, r9, lsr r8
    a780:	00097814 	andeq	r7, r9, r4, lsl r8
    a784:	04ec1600 	strbteq	r1, [ip], #1536	; 0x600
    a788:	1b000000 	blne	a790 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1b0>
    a78c:	00000ba1 	andeq	r0, r0, r1, lsr #23
    a790:	890f1608 	stmdbhi	pc, {r3, r9, sl, ip}	; <UNPREDICTABLE>
    a794:	7e00000c 	cdpvc	0, 0, cr0, cr0, cr12, {0}
    a798:	01000009 	tsteq	r0, r9
    a79c:	00000852 	andeq	r0, r0, r2, asr r8
    a7a0:	0000085d 	andeq	r0, r0, sp, asr r8
    a7a4:	00097814 	andeq	r7, r9, r4, lsl r8
    a7a8:	07441600 	strbeq	r1, [r4, -r0, lsl #12]
    a7ac:	1b000000 	blne	a7b4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1d4>
    a7b0:	00000ba1 	andeq	r0, r0, r1, lsr #23
    a7b4:	340f1708 	strcc	r1, [pc], #-1800	; a7bc <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1dc>
    a7b8:	7e00000c 	cdpvc	0, 0, cr0, cr0, cr12, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:321
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a7bc:	01000009 	tsteq	r0, r9
    a7c0:	00000876 	andeq	r0, r0, r6, ror r8
    a7c4:	00000881 	andeq	r0, r0, r1, lsl #17
    a7c8:	00097814 	andeq	r7, r9, r4, lsl r8
    a7cc:	006f1600 	rsbeq	r1, pc, r0, lsl #12
    a7d0:	1b000000 	blne	a7d8 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1f8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:321 (discriminator 3)
    a7d4:	00000ba1 	andeq	r0, r0, r1, lsr #23
    a7d8:	f40f1808 	vst2.8	{d1-d2}, [pc], r8
    a7dc:	7e00000b 	cdpvc	0, 0, cr0, cr0, cr11, {0}
    a7e0:	01000009 	tsteq	r0, r9
    a7e4:	0000089a 	muleq	r0, sl, r8
    a7e8:	000008a5 	andeq	r0, r0, r5, lsr #17
    a7ec:	00097814 	andeq	r7, r9, r4, lsl r8
    a7f0:	04df1600 	ldrbeq	r1, [pc], #1536	; a7f8 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x218>
    a7f4:	21000000 	mrscs	r0, (UNDEF: 0)
    a7f8:	00000ab4 			; <UNDEFINED> instruction: 0x00000ab4
    a7fc:	84111b08 	ldrhi	r1, [r1], #-2824	; 0xfffff4f8
    a800:	b900000a 	stmdblt	r0, {r1, r3}
    a804:	bf000008 	svclt	0x00000008
    a808:	14000008 	strne	r0, [r0], #-8
    a80c:	00000978 	andeq	r0, r0, r8, ror r9
    a810:	0aa72100 	beq	fe9d2c18 <_bss_end+0xfe9c0f68>
    a814:	1c080000 	stcne	0, cr0, [r8], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:323 (discriminator 2)
                        const uint16_t pos = ((y - pkt->y1) * pkt->w + (x - pkt->x1));
    a818:	000c4511 	andeq	r4, ip, r1, lsl r5
    a81c:	0008d300 	andeq	sp, r8, r0, lsl #6
    a820:	0008d900 	andeq	sp, r8, r0, lsl #18
    a824:	09781400 	ldmdbeq	r8!, {sl, ip}^
    a828:	21000000 	mrscs	r0, (UNDEF: 0)
    a82c:	00000a5f 	andeq	r0, r0, pc, asr sl
    a830:	2d111d08 	ldccs	13, cr1, [r1, #-32]	; 0xffffffe0
    a834:	ed00000b 	stc	0, cr0, [r0, #-44]	; 0xffffffd4
    a838:	f3000008 	vhadd.u8	d0, d0, d8
    a83c:	14000008 	strne	r0, [r0], #-8
    a840:	00000978 	andeq	r0, r0, r8, ror r9
    a844:	13e12100 	mvnne	r2, #0, 2
    a848:	1f080000 	svcne	0x00080000
    a84c:	000c1e0a 	andeq	r1, ip, sl, lsl #28
    a850:	00090700 	andeq	r0, r9, r0, lsl #14
    a854:	00090d00 	andeq	r0, r9, r0, lsl #26
    a858:	09781400 	ldmdbeq	r8!, {sl, ip}^
    a85c:	21000000 	mrscs	r0, (UNDEF: 0)
    a860:	00000aa2 	andeq	r0, r0, r2, lsr #21
    a864:	bf0a2108 	svclt	0x000a2108
    a868:	2100000b 	tstcs	r0, fp
    a86c:	36000009 	strcc	r0, [r0], -r9
    a870:	14000009 	strne	r0, [r0], #-9
    a874:	00000978 	andeq	r0, r0, r8, ror r9
    a878:	00006f16 	andeq	r6, r0, r6, lsl pc
    a87c:	09841600 	stmibeq	r4, {r9, sl, ip}
    a880:	6f160000 	svcvs	0x00160000
    a884:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:325 (discriminator 2)
                        Set_Pixel(x, y, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a888:	000b4f0d 	andeq	r4, fp, sp, lsl #30
    a88c:	232b0800 			; <UNDEFINED> instruction: 0x232b0800
    a890:	00000990 	muleq	r0, r0, r9
    a894:	0c160d00 	ldceq	13, cr0, [r6], {-0}
    a898:	2c080000 	stccs	0, cr0, [r8], {-0}
    a89c:	00006f12 	andeq	r6, r0, r2, lsl pc
    a8a0:	d60d0400 	strle	r0, [sp], -r0, lsl #8
    a8a4:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    a8a8:	006f122d 	rsbeq	r1, pc, sp, lsr #4
    a8ac:	0d080000 	stceq	0, cr0, [r8, #-0]
    a8b0:	00000bdf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a8b4:	690f2e08 	stmdbvs	pc, {r3, r9, sl, fp, sp}	; <UNPREDICTABLE>
    a8b8:	0c000007 	stceq	0, cr0, [r0], {7}
    a8bc:	000a510d 	andeq	r5, sl, sp, lsl #2
    a8c0:	122f0800 	eorne	r0, pc, #0, 16
    a8c4:	00000744 	andeq	r0, r0, r4, asr #14
    a8c8:	04100014 	ldreq	r0, [r0], #-20	; 0xffffffec
    a8cc:	00000737 	andeq	r0, r0, r7, lsr r7
    a8d0:	07370423 	ldreq	r0, [r7, -r3, lsr #8]!
    a8d4:	04100000 	ldreq	r0, [r0], #-0
    a8d8:	00000025 	andeq	r0, r0, r5, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:321 (discriminator 2)
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a8dc:	00520410 	subseq	r0, r2, r0, lsl r4
    a8e0:	8a030000 	bhi	ca8e8 <_bss_end+0xb8c38>
    a8e4:	20000009 	andcs	r0, r0, r9
    a8e8:	00000b68 	andeq	r0, r0, r8, ror #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:319 (discriminator 2)
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a8ec:	37113208 	ldrcc	r3, [r1, -r8, lsl #4]
    a8f0:	0b000007 	bleq	a914 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x334>
    a8f4:	000013be 			; <UNDEFINED> instruction: 0x000013be
    a8f8:	08080210 	stmdaeq	r8, {r4, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343
                for (uint32_t x = 0; x < pkt->w; x++)
    a8fc:	000009e3 	andeq	r0, r0, r3, ror #19
    a900:	000d080d 	andeq	r0, sp, sp, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 1)
    a904:	200a0200 	andcs	r0, sl, r0, lsl #4
    a908:	000009e3 	andeq	r0, r0, r3, ror #19
    a90c:	0dfb0d00 	ldcleq	13, cr0, [fp]
    a910:	0b020000 	bleq	8a918 <_bss_end+0x78c68>
    a914:	0009e320 	andeq	lr, r9, r0, lsr #6
    a918:	480d0400 	stmdami	sp, {sl}
    a91c:	0200000e 	andeq	r0, r0, #14
    a920:	005e0e0c 	subseq	r0, lr, ip, lsl #28
    a924:	0d080000 	stceq	0, cr0, [r8, #-0]
    a928:	00000e9c 	muleq	r0, ip, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345
                    for (uint32_t y = 0; y < pkt->h; y++)
    a92c:	df0a0d02 	svcle	0x000a0d02
    a930:	0c000004 	stceq	0, cr0, [r0], {4}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 3)
    a934:	a1041000 	mrsge	r1, (UNDEF: 4)
    a938:	18000009 	stmdane	r0, {r0, r3}
    a93c:	00000e00 	andeq	r0, r0, r0, lsl #28
    a940:	07100204 	ldreq	r0, [r0, -r4, lsl #4]
    a944:	00000acd 	andeq	r0, r0, sp, asr #21
    a948:	0013410d 	andseq	r4, r3, sp, lsl #2
    a94c:	20130200 	andscs	r0, r3, r0, lsl #4
    a950:	000009e3 	andeq	r0, r0, r3, ror #19
    a954:	13832800 	orrne	r2, r3, #0, 16
    a958:	15020000 	strne	r0, [r2, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:347 (discriminator 2)
                        const uint32_t pos = (x * pkt->h + y);
    a95c:	000d0d20 	andeq	r0, sp, r0, lsr #26
    a960:	0009e300 	andeq	lr, r9, r0, lsl #6
    a964:	000a1b00 	andeq	r1, sl, r0, lsl #22
    a968:	000a2100 	andeq	r2, sl, r0, lsl #2
    a96c:	0acd1400 	beq	ff34f974 <_bss_end+0xff33dcc4>
    a970:	1b000000 	blne	a978 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x398>
    a974:	00000e00 	andeq	r0, r0, r0, lsl #28
    a978:	23051802 	movwcs	r1, #22530	; 0x5802
    a97c:	cd000013 	stcgt	0, cr0, [r0, #-76]	; 0xffffffb4
    a980:	0100000a 	tsteq	r0, sl
    a984:	00000a3a 	andeq	r0, r0, sl, lsr sl
    a988:	00000a40 	andeq	r0, r0, r0, asr #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:354 (discriminator 2)
                        const bool set = ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0;
    a98c:	000acd14 	andeq	ip, sl, r4, lsl sp
    a990:	db1b0000 	blle	6ca998 <_bss_end+0x6b8ce8>
    a994:	0200000e 	andeq	r0, r0, #14
    a998:	11970b1a 	orrsne	r0, r7, sl, lsl fp
    a99c:	0ad80000 	beq	ff60a9a4 <_bss_end+0xff5f8cf4>
    a9a0:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    a9a4:	6400000a 	strvs	r0, [r0], #-10
    a9a8:	1400000a 	strne	r0, [r0], #-10
    a9ac:	00000acd 	andeq	r0, r0, sp, asr #21
    a9b0:	00005e16 	andeq	r5, r0, r6, lsl lr
    a9b4:	451c0000 	ldrmi	r0, [ip, #-0]
    a9b8:	0200000f 	andeq	r0, r0, #15
    a9bc:	10d60a1b 	sbcsne	r0, r6, fp, lsl sl
    a9c0:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    a9c4:	8400000a 	strhi	r0, [r0], #-10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358 (discriminator 2)
                        Set_Pixel(x + pkt->x1, (pkt->h - y) + pkt->y1, set);
    a9c8:	1400000a 	strne	r0, [r0], #-10
    a9cc:	00000acd 	andeq	r0, r0, sp, asr #21
    a9d0:	000ad816 	andeq	sp, sl, r6, lsl r8
    a9d4:	a91b0000 	ldmdbge	fp, {}	; <UNPREDICTABLE>
    a9d8:	02000039 	andeq	r0, r0, #57	; 0x39
    a9dc:	3abb081e 	bcc	feecca5c <_bss_end+0xfeebadac>
    a9e0:	056c0000 	strbeq	r0, [ip, #-0]!
    a9e4:	a4010000 	strge	r0, [r1], #-0
    a9e8:	aa00000a 	bge	aa18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x438>
    a9ec:	2900000a 	stmdbcs	r0, {r1, r3}
    a9f0:	00f60054 	rscseq	r0, r6, r4, asr r0
    a9f4:	cd140000 	ldcgt	0, cr0, [r4, #-0]
    a9f8:	0000000a 	andeq	r0, r0, sl
    a9fc:	003a981d 	eorseq	r9, sl, sp, lsl r8
    aa00:	081e0200 	ldmdaeq	lr, {r9}
    aa04:	000039d7 	ldrdeq	r3, [r0], -r7
    aa08:	00000566 	andeq	r0, r0, r6, ror #10
    aa0c:	000ac601 	andeq	ip, sl, r1, lsl #12
    aa10:	00542900 	subseq	r2, r4, r0, lsl #18
    aa14:	00000531 	andeq	r0, r0, r1, lsr r5
    aa18:	000acd14 	andeq	ip, sl, r4, lsl sp
    aa1c:	10000000 	andne	r0, r0, r0
    aa20:	0009e904 	andeq	lr, r9, r4, lsl #18
    aa24:	0acd0300 	beq	ff34b62c <_bss_end+0xff33997c>
    aa28:	042a0000 	strteq	r0, [sl], #-0
    aa2c:	0037fa20 	eorseq	pc, r7, r0, lsr #20
    aa30:	1d240200 	sfmne	f0, 4, [r4, #-0]
    aa34:	000009e9 	andeq	r0, r0, r9, ror #19
    aa38:	6c61682b 	stclvs	8, cr6, [r1], #-172	; 0xffffff54
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 2)
                    for (uint32_t y = 0; y < pkt->h; y++)
    aa3c:	0b050900 	bleq	14ce44 <_bss_end+0x13b194>
    aa40:	00000ba0 	andeq	r0, r0, r0, lsr #23
    aa44:	0004872c 	andeq	r8, r4, ip, lsr #14
    aa48:	1c070900 			; <UNDEFINED> instruction: 0x1c070900
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 2)
                for (uint32_t x = 0; x < pkt->w; x++)
    aa4c:	00000076 	andeq	r0, r0, r6, ror r0
    aa50:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    aa54:	0005cc2c 	andeq	ip, r5, ip, lsr #24
    aa58:	1d0a0900 	vstrne.16	s0, [sl, #-0]	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:260
        return;
    aa5c:	000000f1 	strdeq	r0, [r0], -r1
    aa60:	20000000 	andcs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:279
                return;
    aa64:	0004522c 	andeq	r5, r4, ip, lsr #4
    aa68:	1d0d0900 	vstrne.16	s0, [sp, #-0]	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:292
                return;
    aa6c:	000000f1 	strdeq	r0, [r0], -r1
    aa70:	20200000 	eorcs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:302
            break;
    aa74:	00058a2d 	andeq	r8, r5, sp, lsr #20
    aa78:	18100900 	ldmdane	r0, {r8, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:309
                return;
    aa7c:	0000006a 	andeq	r0, r0, sl, rrx
    aa80:	03732c36 	cmneq	r3, #13824	; 0x3600
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:363
            break;
    aa84:	42090000 	andmi	r0, r9, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
}
    aa88:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
    aa8c:	21500000 	cmpcs	r0, r0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
    aa90:	034a2c20 	movteq	r2, #44064	; 0xac20
    aa94:	71090000 	mrsvc	r0, (UNDEF: 9)
    aa98:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
    aa9c:	00b20000 	adcseq	r0, r2, r0
    aaa0:	02b62c20 	adcseq	r2, r6, #32, 24	; 0x2000
    aaa4:	a4090000 	strge	r0, [r9], #-0
    aaa8:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
    aaac:	00b40000 	adcseq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366 (discriminator 1)
    aab0:	03642c20 	cmneq	r4, #32, 24	; 0x2000
    aab4:	b3090000 	movwlt	r0, #36864	; 0x9000
    aab8:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
    aabc:	10400000 	subne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:7
CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);
    aac0:	03312c20 	teqeq	r1, #32, 24	; 0x2000
    aac4:	be090000 	cdplt	0, 0, cr0, cr9, cr0, {0}
    aac8:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
}
    aacc:	20500000 	subscs	r0, r0, r0
    aad0:	03ef2c20 	mvneq	r2, #32, 24	; 0x2000
    aad4:	bf090000 	svclt	0x00090000
    aad8:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
    aadc:	80400000 	subhi	r0, r0, r0
    aae0:	045c2c20 	ldrbeq	r2, [ip], #-3104	; 0xfffff3e0
_GLOBAL__sub_I_sDisplay_SSD1306():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:366
    aae4:	c0090000 	andgt	r0, r9, r0
    aae8:	0000f11d 	andeq	pc, r0, sp, lsl r1	; <UNPREDICTABLE>
    aaec:	80500000 	subshi	r0, r0, r0
    aaf0:	f22e0020 	vhadd.s32	d0, d14, d16
    aaf4:	2e00000a 	cdpcs	0, 0, cr0, cr0, cr10, {0}
    aaf8:	00000b02 	andeq	r0, r0, r2, lsl #22
    aafc:	000b122e 	andeq	r1, fp, lr, lsr #4
_ZdlPvj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:62
{
    ab00:	0b222e00 	bleq	896308 <_bss_end+0x884658>
    ab04:	2f2e0000 	svccs	0x002e0000
    ab08:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    ab0c:	00000b3f 	andeq	r0, r0, pc, lsr fp
    ab10:	000b4f2e 	andeq	r4, fp, lr, lsr #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:63
    sKernelMem.Free(p);
    ab14:	0b5f2e00 	bleq	17d631c <_bss_end+0x17c466c>
    ab18:	6f2e0000 	svcvs	0x002e0000
    ab1c:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:64
}
    ab20:	00000b7f 	andeq	r0, r0, pc, ror fp
    ab24:	000b8f2e 	andeq	r8, fp, lr, lsr #30
    ab28:	656d2b00 	strbvs	r2, [sp, #-2816]!	; 0xfffff500
    ab2c:	060a006d 	streq	r0, [sl], -sp, rrx
_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:34
    CI2C_Transaction& operator<<(const T& chr)
    ab30:	000c300b 	andeq	r3, ip, fp
    ab34:	37aa2c00 	strcc	r2, [sl, r0, lsl #24]!
    ab38:	0a0a0000 	beq	28ab40 <_bss_end+0x278e90>
    ab3c:	00006a18 	andeq	r6, r0, r8, lsl sl
    ab40:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
        if (mLength >= I2C_Transaction_Max_Size)
    ab44:	37b42c00 	ldrcc	r2, [r4, r0, lsl #24]!
    ab48:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    ab4c:	00006a18 	andeq	r6, r0, r8, lsl sl
    ab50:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:37
            return *this;
    ab54:	37942f20 	ldrcc	r2, [r4, r0, lsr #30]
    ab58:	110a0000 	mrsne	r0, (UNDEF: 10)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:39
        mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ab5c:	00006a18 	andeq	r6, r0, r8, lsl sl
    ab60:	2c400000 	marcs	acc0, r0, r0
    ab64:	00003783 	andeq	r3, r0, r3, lsl #15
    ab68:	6a18140a 	bvs	60fb98 <_bss_end+0x5fdee8>
    ab6c:	00000000 	andeq	r0, r0, r0
    ab70:	2f1ffe00 	svccs	0x001ffe00
    ab74:	00003779 	andeq	r3, r0, r9, ror r7
    ab78:	6a18170a 	bvs	6107a8 <_bss_end+0x5feaf8>
    ab7c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    ab80:	e32e007f 			; <UNDEFINED> instruction: 0xe32e007f
    ab84:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    ab88:	00000bf3 	strdeq	r0, [r0], -r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        return *this;
    ab8c:	000c032e 	andeq	r0, ip, lr, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:42
    }
    ab90:	0c112e00 	ldceq	14, cr2, [r1], {-0}
    ab94:	212e0000 			; <UNDEFINED> instruction: 0x212e0000
    ab98:	3000000c 	andcc	r0, r0, ip
    ab9c:	000038f2 	strdeq	r3, [r0], -r2
_ZN16CI2C_TransactionlsIiEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:34
    CI2C_Transaction& operator<<(const T& chr)
    aba0:	090b0fff 	stmdbeq	fp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    aba4:	000ce307 	andeq	lr, ip, r7, lsl #6
    aba8:	37de0d00 	ldrbcc	r0, [lr, r0, lsl #26]
    abac:	0c0b0000 	stceq	0, cr0, [fp], {-0}
    abb0:	000ce30d 	andeq	lr, ip, sp, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
        if (mLength >= I2C_Transaction_Max_Size)
    abb4:	d9210000 	stmdble	r1!, {}	; <UNPREDICTABLE>
    abb8:	0b000037 	bleq	ac9c <_ZN16CSegment_DisplayC1Ev+0x20>
    abbc:	384a0a0e 	stmdacc	sl, {r1, r2, r3, r9, fp}^
    abc0:	0c780000 	ldcleq	0, cr0, [r8], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:37
            return *this;
    abc4:	0c880000 	stceq	0, cr0, [r8], {0}
    abc8:	f4140000 			; <UNDEFINED> instruction: 0xf4140000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:39
        mBuffer[mLength++] = static_cast<uint8_t>(chr);
    abcc:	1600000c 	strne	r0, [r0], -ip
    abd0:	0000005e 	andeq	r0, r0, lr, asr r0
    abd4:	0004df16 	andeq	sp, r4, r6, lsl pc
    abd8:	f21b0000 	vhadd.s16	d0, d11, d0
    abdc:	0b000038 	bleq	acc4 <_ZN16CSegment_Display4OpenEv+0xc>
    abe0:	38650511 	stmdacc	r5!, {r0, r4, r8, sl}^
    abe4:	0cf40000 	ldcleq	0, cr0, [r4]
    abe8:	a1010000 	mrsge	r0, (UNDEF: 1)
    abec:	a700000c 	strge	r0, [r0, -ip]
    abf0:	1400000c 	strne	r0, [r0], #-12
    abf4:	00000cf4 	strdeq	r0, [r0], -r4
    abf8:	37c41b00 	strbcc	r1, [r4, r0, lsl #22]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        return *this;
    abfc:	140b0000 	strne	r0, [fp], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:42
    }
    ac00:	00380b0e 	eorseq	r0, r8, lr, lsl #22
    ac04:	00005e00 	andeq	r5, r0, r0, lsl #28
    ac08:	0cc00100 	stfeqe	f0, [r0], {0}
    ac0c:	0cc60000 	stcleq	0, cr0, [r6], {0}
_ZN16CI2C_TransactionlsIhEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:34
    CI2C_Transaction& operator<<(const T& chr)
    ac10:	f4140000 			; <UNDEFINED> instruction: 0xf4140000
    ac14:	0000000c 	andeq	r0, r0, ip
    ac18:	0037cf22 	eorseq	ip, r7, r2, lsr #30
    ac1c:	0a160b00 	beq	58d824 <_bss_end+0x57bb74>
    ac20:	000038d3 	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
        if (mLength >= I2C_Transaction_Max_Size)
    ac24:	000cd701 	andeq	sp, ip, r1, lsl #14
    ac28:	0cf41400 	cfldrdeq	mvd1, [r4]
    ac2c:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    ac30:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:37
            return *this;
    ac34:	003f0e00 	eorseq	r0, pc, r0, lsl #28
    ac38:	0cf40000 	ldcleq	0, cr0, [r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:39
        mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ac3c:	6f310000 	svcvs	0x00310000
    ac40:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    ac44:	0410000f 	ldreq	r0, [r0], #-15
    ac48:	00000c49 	andeq	r0, r0, r9, asr #24
    ac4c:	00391820 	eorseq	r1, r9, r0, lsr #16
    ac50:	16190b00 	ldrne	r0, [r9], -r0, lsl #22
    ac54:	00000c49 	andeq	r0, r0, r9, asr #24
    ac58:	00072b32 	andeq	r2, r7, r2, lsr fp
    ac5c:	12120100 	andsne	r0, r2, #0, 2
    ac60:	1c940305 	ldcne	3, cr0, [r4], {5}
    ac64:	38330001 	ldmdacc	r3!, {r0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        return *this;
    ac68:	1f000000 	svcne	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:42
    }
    ac6c:	3400000d 	strcc	r0, [r0], #-13
    ac70:	25041000 	strcs	r1, [r4, #-0]
    ac74:	3500000d 	strcc	r0, [r0, #-13]
    ac78:	00203004 	eoreq	r3, r0, r4
_ZN16CSegment_DisplayC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:124
CSegment_Display::CSegment_Display()
    ac7c:	000d1400 	andeq	r1, sp, r0, lsl #8
    ac80:	3a123600 	bcc	498488 <_bss_end+0x4867d8>
    ac84:	ea100000 	b	40ac8c <_bss_end+0x3f8fdc>
    ac88:	001c0000 	andseq	r0, ip, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:126
, mOutput('\0')
    ac8c:	9c010000 	stcls	0, cr0, [r1], {-0}
    ac90:	00024137 	andeq	r4, r2, r7, lsr r1
    ac94:	00e9c400 	rsceq	ip, r9, r0, lsl #8
    ac98:	00004c00 	andeq	r4, r0, r0, lsl #24
    ac9c:	729c0100 	addsvc	r0, ip, #0, 2
    aca0:	3800000d 	stmdacc	r0, {r0, r2, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:129
}
    aca4:	0000033b 	andeq	r0, r0, fp, lsr r3
    aca8:	01011501 	tsteq	r1, r1, lsl #10
    acac:	00000038 	andeq	r0, r0, r8, lsr r0
    acb0:	38749102 	ldmdacc	r4!, {r1, r8, ip, pc}^
    acb4:	00000734 	andeq	r0, r0, r4, lsr r7
_ZN16CSegment_Display4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:132
{
    acb8:	01011501 	tsteq	r1, r1, lsl #10
    acbc:	00000038 	andeq	r0, r0, r8, lsr r0
    acc0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    acc4:	000a8439 	andeq	r8, sl, r9, lsr r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:133
    if (mOpened)
    acc8:	000d9000 	andeq	r9, sp, r0
    accc:	00ea5800 	rsceq	r5, sl, r0, lsl #16
    acd0:	00002c00 	andeq	r2, r0, r0, lsl #24
    acd4:	9d9c0100 	ldflss	f0, [ip]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:134
        return false;
    acd8:	2900000d 	stmdbcs	r0, {r0, r2, r3}
    acdc:	00f60054 	rscseq	r0, r6, r4, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:136
    if (!sShift_Register.Open())
    ace0:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    ace4:	d3000003 	movwle	r0, #3
    ace8:	0200000a 	andeq	r0, r0, #10
    acec:	39007491 	stmdbcc	r0, {r0, r4, r7, sl, ip, sp, lr}
    acf0:	00000aaa 	andeq	r0, r0, sl, lsr #21
    acf4:	00000dbb 			; <UNDEFINED> instruction: 0x00000dbb
    acf8:	0000ea2c 	andeq	lr, r0, ip, lsr #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:137
        return false;
    acfc:	0000002c 	andeq	r0, r0, ip, lsr #32
    ad00:	0dc89c01 	stcleq	12, cr9, [r8, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:139
    mOpened = true;
    ad04:	54290000 	strtpl	r0, [r9], #-0
    ad08:	00053100 	andeq	r3, r5, r0, lsl #2
    ad0c:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:141
    return true;
    ad10:	0ad30000 	beq	ff4cad18 <_bss_end+0xff4b9068>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:142
}
    ad14:	91020000 	mrsls	r0, (UNDEF: 2)
    ad18:	d93b0074 	ldmdble	fp!, {r2, r4, r5, r6}
    ad1c:	01000006 	tsteq	r0, r6
    ad20:	0de206d7 	stcleq	6, cr0, [r2, #860]!	; 0x35c
_ZN16CSegment_Display5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:145
{
    ad24:	e6080000 	str	r0, [r8], -r0
    ad28:	03bc0000 			; <UNDEFINED> instruction: 0x03bc0000
    ad2c:	9c010000 	stcls	0, cr0, [r1], {-0}
    ad30:	00000e4a 	andeq	r0, r0, sl, asr #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:146
    if (!mOpened)
    ad34:	00032c3a 	andeq	r2, r3, sl, lsr ip
    ad38:	00071500 	andeq	r1, r7, r0, lsl #10
    ad3c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    ad40:	003af03c 	eorseq	pc, sl, ip, lsr r0	; <UNPREDICTABLE>
    ad44:	19d80100 	ldmibne	r8, {r8}^
    ad48:	000002a4 	andeq	r0, r0, r4, lsr #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:149
    sShift_Register.Close();
    ad4c:	3d689102 	stfccp	f1, [r8, #-8]!
    ad50:	01003072 	tsteq	r0, r2, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:151
    mOpened = false;
    ad54:	005e2bd8 	ldrsbeq	r2, [lr], #-184	; 0xffffff48
    ad58:	91020000 	mrsls	r0, (UNDEF: 2)
    ad5c:	31723d64 	cmncc	r2, r4, ror #26
    ad60:	38d80100 	ldmcc	r8, {r8}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:147
        return;
    ad64:	0000005e 	andeq	r0, r0, lr, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:152
}
    ad68:	3d609102 	stfccp	f1, [r0, #-8]!
    ad6c:	01003272 	tsteq	r0, r2, ror r2
    ad70:	005e45d8 	ldrsbeq	r4, [lr], #-88	; 0xffffffa8
_ZNK16CSegment_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:155
{
    ad74:	91020000 	mrsls	r0, (UNDEF: 2)
    ad78:	3a2d3c00 	bcc	b59d80 <_bss_end+0xb480d0>
    ad7c:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    ad80:	00072556 	andeq	r2, r7, r6, asr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:156
    return mOpened;
    ad84:	04910200 	ldreq	r0, [r1], #512	; 0x200
    ad88:	0002e03e 	andeq	lr, r2, lr, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:157
}
    ad8c:	00663f00 	rsbeq	r3, r6, r0, lsl #30
    ad90:	6214e301 	andsvs	lr, r4, #67108864	; 0x4000000
    ad94:	02000001 	andeq	r0, r0, #1
    ad98:	00007491 	muleq	r0, r1, r4
_ZN16CSegment_Display5WriteEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:160
{
    ad9c:	0006a540 	andeq	sl, r6, r0, asr #10
    ada0:	06c80100 	strbeq	r0, [r8], r0, lsl #2
    ada4:	00000e64 	andeq	r0, r0, r4, ror #28
    ada8:	0000e5a4 	andeq	lr, r0, r4, lsr #11
    adac:	00000064 	andeq	r0, r0, r4, rrx
    adb0:	0eb99c01 	cdpeq	12, 11, cr9, cr9, cr1, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:161
    if (!mOpened)
    adb4:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    adb8:	15000003 	strne	r0, [r0, #-3]
    adbc:	02000007 	andeq	r0, r0, #7
    adc0:	f03c7491 			; <UNDEFINED> instruction: 0xf03c7491
    adc4:	0100003a 	tsteq	r0, sl, lsr r0
    adc8:	028b16c9 	addeq	r1, fp, #210763776	; 0xc900000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:164
    uint8_t idx = static_cast<uint8_t>(c);
    adcc:	91020000 	mrsls	r0, (UNDEF: 2)
    add0:	30723d70 	rsbscc	r3, r2, r0, ror sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167
    if (idx < 32 || idx >= 128)
    add4:	28c90100 	stmiacs	r9, {r8}^
    add8:	0000005e 	andeq	r0, r0, lr, asr r0
    addc:	3d6c9102 	stfccp	f1, [ip, #-8]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167 (discriminator 1)
    ade0:	01003172 	tsteq	r0, r2, ror r1
    ade4:	005e35c9 	subseq	r3, lr, r9, asr #11
    ade8:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:171
    sShift_Register.Shift_In(static_cast<uint8_t>(~(mCharacter_Map[idx - 32])));
    adec:	32723d68 	rsbscc	r3, r2, #104, 26	; 0x1a00
    adf0:	42c90100 	sbcmi	r0, r9, #0, 2
    adf4:	0000005e 	andeq	r0, r0, lr, asr r0
    adf8:	3c009102 	stfccd	f1, [r0], {2}
    adfc:	00003a2d 	andeq	r3, r0, sp, lsr #20
    ae00:	2553c901 	ldrbcs	ip, [r3, #-2305]	; 0xfffff6ff
    ae04:	02000007 	andeq	r0, r0, #7
    ae08:	3b000491 	blcc	c054 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x108>
    ae0c:	00000681 	andeq	r0, r0, r1, lsl #13
    ae10:	d306bb01 	movwle	fp, #27393	; 0x6b01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:162
        return;
    ae14:	1000000e 	andne	r0, r0, lr
    ae18:	940000e5 	strls	r0, [r0], #-229	; 0xffffff1b
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:168
        return;
    ae1c:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:172
}
    ae20:	000efe9c 	muleq	lr, ip, lr
    ae24:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
    ae28:	07150000 	ldreq	r0, [r5, -r0]
    ae2c:	91020000 	mrsls	r0, (UNDEF: 2)
_ZNK16CSegment_Display4ReadEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:175
{
    ae30:	01603c6c 	cmneq	r0, ip, ror #24
    ae34:	bb010000 	bllt	4ae3c <_bss_end+0x3918c>
    ae38:	00005e34 	andeq	r5, r0, r4, lsr lr
    ae3c:	68910200 	ldmvs	r1, {r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:176
    if (!mOpened)
    ae40:	003a9041 	eorseq	r9, sl, r1, asr #32
    ae44:	13bd0100 			; <UNDEFINED> instruction: 0x13bd0100
    ae48:	0000056c 	andeq	r0, r0, ip, ror #10
    ae4c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    ae50:	00065d3b 	andeq	r5, r6, fp, lsr sp
    ae54:	0aa40100 	beq	fe90b25c <_bss_end+0xfe8f95ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:177
        return '\0';
    ae58:	00000f18 	andeq	r0, r0, r8, lsl pc
    ae5c:	0000e464 	andeq	lr, r0, r4, ror #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:179
    return mOutput;
    ae60:	000000ac 	andeq	r0, r0, ip, lsr #1
    ae64:	0f5a9c01 	svceq	0x005a9c01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae68:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    ae6c:	15000003 	strne	r0, [r0, #-3]
    ae70:	02000007 	andeq	r0, r0, #7
    ae74:	573c6c91 			; <UNDEFINED> instruction: 0x573c6c91
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae78:	0100003d 	tsteq	r0, sp, lsr r0
    ae7c:	016237a4 	cmneq	r2, r4, lsr #15
    ae80:	91020000 	mrsls	r0, (UNDEF: 2)
    ae84:	3a904168 	bcc	fe41b42c <_bss_end+0xfe40977c>
    ae88:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    ae8c:	00056c13 	andeq	r6, r5, r3, lsl ip
    ae90:	70910200 	addsvc	r0, r1, r0, lsl #4
    ae94:	00e49842 	rsceq	r9, r4, r2, asr #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180 (discriminator 1)
    ae98:	00006800 	andeq	r6, r0, r0, lsl #16
    ae9c:	00693f00 	rsbeq	r3, r9, r0, lsl #30
    aea0:	5e13ad01 	cdppl	13, 1, cr10, cr3, cr1, {0}
    aea4:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    aea8:	00007491 	muleq	r0, r1, r4
    aeac:	0005a63b 	andeq	sl, r5, fp, lsr r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aeb0:	068b0100 	streq	r0, [fp], r0, lsl #2
    aeb4:	00000f74 	andeq	r0, r0, r4, ror pc
    aeb8:	0000e360 	andeq	lr, r0, r0, ror #6
    aebc:	00000104 	andeq	r0, r0, r4, lsl #2
    aec0:	0fae9c01 	svceq	0x00ae9c01
_GLOBAL__sub_I_sSegment_Display():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aec4:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    aec8:	15000003 	strne	r0, [r0, #-3]
    aecc:	02000007 	andeq	r0, r0, #7
    aed0:	b63c6c91 			; <UNDEFINED> instruction: 0xb63c6c91
    aed4:	0100003a 	tsteq	r0, sl, lsr r0
    aed8:	0566368b 	strbeq	r3, [r6, #-1675]!	; 0xfffff975
    aedc:	91020000 	mrsls	r0, (UNDEF: 2)
_ZN15CShift_RegisterC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:7
CShift_Register::CShift_Register(uint32_t latchPin, uint32_t dataPin, uint32_t clockPin)
    aee0:	6c6f3f68 	stclvs	15, cr3, [pc], #-416	; ad48 <_ZN16CSegment_Display5CloseEv+0x24>
    aee4:	95010064 	strls	r0, [r1, #-100]	; 0xffffff9c
    aee8:	000fae13 	andeq	sl, pc, r3, lsl lr	; <UNPREDICTABLE>
    aeec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    aef0:	00399b41 	eorseq	r9, r9, r1, asr #22
    aef4:	0a960100 	beq	fe58b2fc <_bss_end+0xfe57964c>
    aef8:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:10
, mClock_Pin(clockPin)
    aefc:	00739102 	rsbseq	r9, r3, r2, lsl #2
    af00:	00b80410 	adcseq	r0, r8, r0, lsl r4
    af04:	233b0000 	teqcs	fp, #0
    af08:	01000006 	tsteq	r0, r6
    af0c:	0fce065e 	svceq	0x00ce065e
    af10:	e1f80000 	mvns	r0, r0
    af14:	01680000 	cmneq	r8, r0
    af18:	9c010000 	stcls	0, cr0, [r1], {-0}
    af1c:	00000fea 	andeq	r0, r0, sl, ror #31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:13
}
    af20:	00032c3a 	andeq	r2, r3, sl, lsr ip
    af24:	00071500 	andeq	r1, r7, r0, lsl #10
    af28:	6c910200 	lfmvs	f0, 4, [r1], {0}
    af2c:	000dfb41 	andeq	pc, sp, r1, asr #22
    af30:	196e0100 	stmdbne	lr!, {r8}^
_ZN15CShift_Register4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:16
{
    af34:	00000566 	andeq	r0, r0, r6, ror #10
    af38:	00749102 	rsbseq	r9, r4, r2, lsl #2
    af3c:	0005ff3b 	andeq	pc, r5, fp, lsr pc	; <UNPREDICTABLE>
    af40:	0a390100 	beq	e4b348 <_bss_end+0xe39698>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:17
    if (mOpened)
    af44:	00001004 	andeq	r1, r0, r4
    af48:	0000dff8 	strdeq	sp, [r0], -r8
    af4c:	00000200 	andeq	r0, r0, r0, lsl #4
    af50:	10559c01 	subsne	r9, r5, r1, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:18
        return false;
    af54:	2c3a0000 	ldccs	0, cr0, [sl], #-0
    af58:	15000003 	strne	r0, [r0, #-3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:22
    if (!sGPIO.Reserve_Pin(mLatch_Pin, true, true))
    af5c:	02000007 	andeq	r0, r0, #7
    af60:	933c6491 	teqls	ip, #-1862270976	; 0x91000000
    af64:	01000039 	tsteq	r0, r9, lsr r0
    af68:	00ea3939 	rsceq	r3, sl, r9, lsr r9
    af6c:	91020000 	mrsls	r0, (UNDEF: 2)
    af70:	3ab24160 	bcc	fec9b4f8 <_bss_end+0xfec89848>
    af74:	3b010000 	blcc	4af7c <_bss_end+0x392cc>
    af78:	00056619 	andeq	r6, r5, r9, lsl r6
    af7c:	70910200 	addsvc	r0, r1, r0, lsl #4
    af80:	00358141 	eorseq	r8, r5, r1, asr #2
    af84:	0b490100 	bleq	124b38c <_bss_end+0x12396dc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:23
        return false;
    af88:	0000056c 	andeq	r0, r0, ip, ror #10
    af8c:	426c9102 	rsbmi	r9, ip, #-2147483648	; 0x80000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:25
    if (!sGPIO.Reserve_Pin(mData_Pin, true, true))
    af90:	0000e108 	andeq	lr, r0, r8, lsl #2
    af94:	00000040 	andeq	r0, r0, r0, asr #32
    af98:	0100693f 	tsteq	r0, pc, lsr r9
    af9c:	005e1355 	subseq	r1, lr, r5, asr r3
    afa0:	91020000 	mrsls	r0, (UNDEF: 2)
    afa4:	3b000074 	blcc	b17c <_ZN15CShift_Register5CloseEv+0xd4>
    afa8:	000005e4 	andeq	r0, r0, r4, ror #11
    afac:	6f062101 	svcvs	0x00062101
    afb0:	e4000010 	str	r0, [r0], #-16
    afb4:	140000de 	strne	r0, [r0], #-222	; 0xffffff22
    afb8:	01000001 	tsteq	r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:27
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    afbc:	0010b19c 	mulseq	r0, ip, r1
    afc0:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
    afc4:	07150000 	ldreq	r0, [r5, -r0]
    afc8:	91020000 	mrsls	r0, (UNDEF: 2)
    afcc:	3ab24164 	bcc	fec9b564 <_bss_end+0xfec898b4>
    afd0:	23010000 	movwcs	r0, #4096	; 0x1000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:28
        return false;
    afd4:	00056619 	andeq	r6, r5, r9, lsl r6
    afd8:	70910200 	addsvc	r0, r1, r0, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:31
    if (!sGPIO.Reserve_Pin(mClock_Pin, true, true))
    afdc:	00358141 	eorseq	r8, r5, r1, asr #2
    afe0:	0b2b0100 	bleq	acb3e8 <_bss_end+0xab9738>
    afe4:	0000056c 	andeq	r0, r0, ip, ror #10
    afe8:	426c9102 	rsbmi	r9, ip, #-2147483648	; 0x80000000
    afec:	0000df98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    aff0:	00000040 	andeq	r0, r0, r0, asr #32
    aff4:	0100693f 	tsteq	r0, pc, lsr r9
    aff8:	005e1333 	subseq	r1, lr, r3, lsr r3
    affc:	91020000 	mrsls	r0, (UNDEF: 2)
    b000:	40000074 	andmi	r0, r0, r4, ror r0
    b004:	0000063e 	andeq	r0, r0, lr, lsr r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:33
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b008:	cb0f1c01 	blgt	3d2014 <_bss_end+0x3c0364>
    b00c:	a0000010 	andge	r0, r0, r0, lsl r0
    b010:	440000de 	strmi	r0, [r0], #-222	; 0xffffff22
    b014:	01000000 	mrseq	r0, (UNDEF: 0)
    b018:	0010d89c 	mulseq	r0, ip, r8
    b01c:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:34
        sGPIO.Free_Pin(mData_Pin, true, true);
    b020:	07200000 	streq	r0, [r0, -r0]!
    b024:	91020000 	mrsls	r0, (UNDEF: 2)
    b028:	c5430074 	strbgt	r0, [r3, #-116]	; 0xffffff8c
    b02c:	01000005 	tsteq	r0, r5
    b030:	10e90114 	rscne	r0, r9, r4, lsl r1
    b034:	f3000000 	vhadd.u8	d0, d0, d0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:35
        return false;
    b038:	44000010 	strmi	r0, [r0], #-16
    b03c:	0000032c 	andeq	r0, r0, ip, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:39
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Output);
    b040:	00000715 	andeq	r0, r0, r5, lsl r7
    b044:	10d84500 	sbcsne	r4, r8, r0, lsl #10
    b048:	39bd0000 	ldmibcc	sp!, {}	; <UNPREDICTABLE>
    b04c:	110a0000 	mrsne	r0, (UNDEF: 10)
    b050:	de580000 	cdple	0, 5, cr0, cr8, cr0, {0}
    b054:	00480000 	subeq	r0, r8, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:40
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Output);
    b058:	9c010000 	stcls	0, cr0, [r1], {-0}
    b05c:	0010e946 	andseq	lr, r0, r6, asr #18
    b060:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b064:	00220000 	eoreq	r0, r2, r0
    b068:	00020000 	andeq	r0, r2, r0
    b06c:	00002e22 	andeq	r2, r0, r2, lsr #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:41
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Output);
    b070:	3ddf0104 	ldfcce	f0, [pc, #16]	; b088 <_ZN15CShift_Register4OpenEv+0x154>
    b074:	ea840000 	b	fe10b07c <_bss_end+0xfe0f93cc>
    b078:	eae00000 	b	ff80b080 <_bss_end+0xff7f93d0>
    b07c:	3af80000 	bcc	ffe0b084 <_bss_end+0xffdf93d4>
    b080:	00c50000 	sbceq	r0, r5, r0
    b084:	3b490000 	blcc	124b08c <_bss_end+0x12393dc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:43
    mOpened = true;
    b088:	80010000 	andhi	r0, r1, r0
    b08c:	0000001e 	andeq	r0, r0, lr, lsl r0
    b090:	2e360002 	cdpcs	0, 3, cr0, cr6, cr2, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:45
    return true;
    b094:	01040000 	mrseq	r0, (UNDEF: 4)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:46
}
    b098:	00003e73 	andeq	r3, r0, r3, ror lr
    b09c:	00000318 	andeq	r0, r0, r8, lsl r3
    b0a0:	00003b55 	andeq	r3, r0, r5, asr fp
    b0a4:	000000c5 	andeq	r0, r0, r5, asr #1
_ZN15CShift_Register5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:49
{
    b0a8:	00003b49 	andeq	r3, r0, r9, asr #22
    b0ac:	014b8001 	cmpeq	fp, r1
    b0b0:	00040000 	andeq	r0, r4, r0
    b0b4:	00002e48 	andeq	r2, r0, r8, asr #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:50
    if (!mOpened)
    b0b8:	00140104 	andseq	r0, r4, r4, lsl #2
    b0bc:	fa040000 	blx	10b0c4 <_bss_end+0xf9414>
    b0c0:	c500003b 	strgt	r0, [r0, #-59]	; 0xffffffc5
    b0c4:	50000000 	andpl	r0, r0, r0
    b0c8:	180000eb 	stmdane	r0, {r0, r1, r3, r5, r6, r7}
    b0cc:	3a000001 	bcc	b0d8 <_ZN15CShift_Register5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:54
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Input);
    b0d0:	0200003f 	andeq	r0, r0, #63	; 0x3f
    b0d4:	00003b9d 	muleq	r0, sp, fp
    b0d8:	31070201 	tstcc	r7, r1, lsl #4
    b0dc:	03000000 	movweq	r0, #0
    b0e0:	00003704 	andeq	r3, r0, r4, lsl #14
    b0e4:	f1020400 			; <UNDEFINED> instruction: 0xf1020400
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:55
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Input);
    b0e8:	0100003b 	tsteq	r0, fp, lsr r0
    b0ec:	00310703 	eorseq	r0, r1, r3, lsl #14
    b0f0:	a6050000 	strge	r0, [r5], -r0
    b0f4:	0100003b 	tsteq	r0, fp, lsr r0
    b0f8:	00501006 	subseq	r1, r0, r6
    b0fc:	04060000 	streq	r0, [r6], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:56
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Input);
    b100:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    b104:	3bda0500 	blcc	ff68c50c <_bss_end+0xff67a85c>
    b108:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    b10c:	00005010 	andeq	r5, r0, r0, lsl r0
    b110:	00250700 	eoreq	r0, r5, r0, lsl #14
    b114:	00760000 	rsbseq	r0, r6, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:59
    sGPIO.Free_Pin(mLatch_Pin, true, true);
    b118:	76080000 	strvc	r0, [r8], -r0
    b11c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    b120:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
    b124:	96070409 	strls	r0, [r7], -r9, lsl #8
    b128:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    b12c:	00003bb1 			; <UNDEFINED> instruction: 0x00003bb1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:60
    sGPIO.Free_Pin(mData_Pin, true, true);
    b130:	63150b01 	tstvs	r5, #1024	; 0x400
    b134:	05000000 	streq	r0, [r0, #-0]
    b138:	00003c46 	andeq	r3, r0, r6, asr #24
    b13c:	63150d01 	tstvs	r5, #1, 26	; 0x40
    b140:	07000000 	streq	r0, [r0, -r0]
    b144:	00000038 	andeq	r0, r0, r8, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:61
    sGPIO.Free_Pin(mClock_Pin, true, true);
    b148:	000000a8 	andeq	r0, r0, r8, lsr #1
    b14c:	00007608 	andeq	r7, r0, r8, lsl #12
    b150:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
    b154:	e30500ff 	movw	r0, #20735	; 0x50ff
    b158:	0100003b 	tsteq	r0, fp, lsr r0
    b15c:	00951510 	addseq	r1, r5, r0, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:63
    mOpened = false;
    b160:	bf050000 	svclt	0x00050000
    b164:	0100003b 	tsteq	r0, fp, lsr r0
    b168:	00951512 	addseq	r1, r5, r2, lsl r5
    b16c:	cc0a0000 	stcgt	0, cr0, [sl], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:51
        return;
    b170:	0100003b 	tsteq	r0, fp, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:64
}
    b174:	0050102b 	subseq	r1, r0, fp, lsr #32
    b178:	ec100000 	ldc	0, cr0, [r0], {-0}
    b17c:	00580000 	subseq	r0, r8, r0
_ZNK15CShift_Register9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:67
{
    b180:	9c010000 	stcls	0, cr0, [r1], {-0}
    b184:	000000ea 	andeq	r0, r0, sl, ror #1
    b188:	003c6b0b 	eorseq	r6, ip, fp, lsl #22
    b18c:	0f2d0100 	svceq	0x002d0100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:68
    return mOpened;
    b190:	000000ea 	andeq	r0, r0, sl, ror #1
    b194:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:69
}
    b198:	00380403 	eorseq	r0, r8, r3, lsl #8
    b19c:	5e0a0000 	cdppl	0, 0, cr0, cr10, cr0, {0}
    b1a0:	0100003c 	tsteq	r0, ip, lsr r0
    b1a4:	0050101f 	subseq	r1, r0, pc, lsl r0
_ZN15CShift_Register8Shift_InEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:72
{
    b1a8:	ebb80000 	bl	fee0b1b0 <_bss_end+0xfedf9500>
    b1ac:	00580000 	subseq	r0, r8, r0
    b1b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    b1b4:	0000011a 	andeq	r0, r0, sl, lsl r1
    b1b8:	003c6b0b 	eorseq	r6, ip, fp, lsl #22
    b1bc:	0f210100 	svceq	0x00210100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:73
    if (!mOpened)
    b1c0:	0000011a 	andeq	r0, r0, sl, lsl r1
    b1c4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b1c8:	00250403 	eoreq	r0, r5, r3, lsl #8
    b1cc:	530c0000 	movwpl	r0, #49152	; 0xc000
    b1d0:	0100003c 	tsteq	r0, ip, lsr r0
    b1d4:	00501014 	subseq	r1, r0, r4, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:79
    sGPIO.Set_Output(mLatch_Pin, false);
    b1d8:	eb500000 	bl	140b1e0 <_bss_end+0x13f9530>
    b1dc:	00680000 	rsbeq	r0, r8, r0
    b1e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    b1e4:	00000148 	andeq	r0, r0, r8, asr #2
    b1e8:	0100690d 	tsteq	r0, sp, lsl #18
    b1ec:	01480a16 	cmpeq	r8, r6, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:82
    sGPIO.Set_Output(mData_Pin, bit);
    b1f0:	91020000 	mrsls	r0, (UNDEF: 2)
    b1f4:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
    b1f8:	00000050 	andeq	r0, r0, r0, asr r0
    b1fc:	0006b800 	andeq	fp, r6, r0, lsl #16
    b200:	0e000400 	cfcpyseq	mvf0, mvf0
    b204:	0400002f 	streq	r0, [r0], #-47	; 0xffffffd1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:84
    sGPIO.Set_Output(mClock_Pin, true);
    b208:	00001401 	andeq	r1, r0, r1, lsl #8
    b20c:	3cb50400 	cfldrscc	mvf0, [r5]
    b210:	00c50000 	sbceq	r0, r5, r0
    b214:	ec680000 	stcl	0, cr0, [r8], #-0
    b218:	064c0000 	strbeq	r0, [ip], -r0
    b21c:	40210000 	eormi	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87
    for (i = 0; i < 0x10; i++)
    b220:	01020000 	mrseq	r0, (UNDEF: 2)
    b224:	00057308 	andeq	r7, r5, r8, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 3)
    b228:	00250300 	eoreq	r0, r5, r0, lsl #6
    b22c:	02020000 	andeq	r0, r2, #0
    b230:	00059905 	andeq	r9, r5, r5, lsl #18
    b234:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    b238:	00746e69 	rsbseq	r6, r4, r9, ror #28
    b23c:	00003805 	andeq	r3, r0, r5, lsl #16
    b240:	08010200 	stmdaeq	r1, {r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 2)
    b244:	0000056a 	andeq	r0, r0, sl, ror #10
    b248:	00004405 	andeq	r4, r0, r5, lsl #8
    b24c:	07980600 	ldreq	r0, [r8, r0, lsl #12]
    b250:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:91
    sGPIO.Set_Output(mClock_Pin, false);
    b254:	00005c07 	andeq	r5, r0, r7, lsl #24
    b258:	07020200 	streq	r0, [r2, -r0, lsl #4]
    b25c:	000003dc 	ldrdeq	r0, [r0], -ip
    b260:	0005e406 	andeq	lr, r5, r6, lsl #8
    b264:	07090200 	streq	r0, [r9, -r0, lsl #4]
    b268:	00000074 	andeq	r0, r0, r4, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94
    for (i = 0; i < 0x10; i++)
    b26c:	00006303 	andeq	r6, r0, r3, lsl #6
    b270:	07040200 	streq	r0, [r4, -r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 3)
    b274:	00004596 	muleq	r0, r6, r5
    b278:	003d2907 	eorseq	r2, sp, r7, lsl #18
    b27c:	06030800 	streq	r0, [r3], -r0, lsl #16
    b280:	0001bf07 	andeq	fp, r1, r7, lsl #30
    b284:	3d860800 	stccc	8, cr0, [r6]
    b288:	0a030000 	beq	cb290 <_bss_end+0xb95e0>
    b28c:	0000630e 	andeq	r6, r0, lr, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 2)
    b290:	65080000 	strvs	r0, [r8, #-0]
    b294:	03000007 	movweq	r0, #7
    b298:	01c40a0c 	biceq	r0, r4, ip, lsl #20
    b29c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:98
    sGPIO.Set_Output(mLatch_Pin, true);
    b2a0:	00003d29 	andeq	r3, r0, r9, lsr #26
    b2a4:	79051003 	stmdbvc	r5, {r0, r1, ip}
    b2a8:	cb00003e 	blgt	b3a8 <_ZN15CShift_Register8Shift_InEh+0xdc>
    b2ac:	01000001 	tsteq	r0, r1
    b2b0:	000000bb 	strheq	r0, [r0], -fp
    b2b4:	000000c6 	andeq	r0, r0, r6, asr #1
    b2b8:	0001cb0a 	andeq	ip, r1, sl, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:74
        return;
    b2bc:	01d10b00 	bicseq	r0, r1, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:99
}
    b2c0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    b2c4:	00003d28 	andeq	r3, r0, r8, lsr #26
    b2c8:	4b111203 	blmi	44fadc <_bss_end+0x43de2c>
_ZN15CShift_Register8Shift_InEh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:102
{
    b2cc:	dc00003e 	stcle	0, cr0, [r0], {62}	; 0x3e
    b2d0:	01000001 	tsteq	r0, r1
    b2d4:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    b2d8:	000000ea 	andeq	r0, r0, sl, ror #1
    b2dc:	0001cb0a 	andeq	ip, r1, sl, lsl #22
    b2e0:	00380a00 	eorseq	r0, r8, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:103
    if (!mOpened)
    b2e4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    b2e8:	0000073f 	andeq	r0, r0, pc, lsr r7
    b2ec:	5c0a1503 	cfstr32pl	mvfx1, [sl], {3}
    b2f0:	c400003d 	strgt	r0, [r0], #-61	; 0xffffffc3
    b2f4:	01000001 	tsteq	r0, r1
    b2f8:	00000103 	andeq	r0, r0, r3, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:109
    sGPIO.Set_Output(mLatch_Pin, false);
    b2fc:	00000109 	andeq	r0, r0, r9, lsl #2
    b300:	0001de0a 	andeq	sp, r1, sl, lsl #28
    b304:	400c0000 	andmi	r0, ip, r0
    b308:	0300000f 	movweq	r0, #15
    b30c:	3e200a18 			; <UNDEFINED> instruction: 0x3e200a18
    b310:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112
    for (int j = 7; j >= 0; j--)
    b314:	24000001 	strcs	r0, [r0], #-1
    b318:	0a000001 	beq	b324 <_ZN15CShift_Register8Shift_InEh+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 1)
    b31c:	000001cb 	andeq	r0, r0, fp, asr #3
    b320:	18a20c00 	stmiane	r2!, {sl, fp}
    b324:	1b030000 	blne	cb32c <_bss_end+0xb967c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:114
        sGPIO.Set_Output(mData_Pin, ((byte >> j) & 0x1));
    b328:	003d370a 	eorseq	r3, sp, sl, lsl #14
    b32c:	01390100 	teqeq	r9, r0, lsl #2
    b330:	01440000 	mrseq	r0, (UNDEF: 68)
    b334:	cb0a0000 	blgt	28b33c <_bss_end+0x27968c>
    b338:	0b000001 	bleq	b344 <_ZN15CShift_Register8Shift_InEh+0x78>
    b33c:	000001c4 	andeq	r0, r0, r4, asr #3
    b340:	0fc50c00 	svceq	0x00c50c00
    b344:	1d030000 	stcne	0, cr0, [r3, #-0]
    b348:	003c710a 	eorseq	r7, ip, sl, lsl #2
    b34c:	01590100 	cmpeq	r9, r0, lsl #2
    b350:	016e0000 	cmneq	lr, r0
    b354:	cb0a0000 	blgt	28b35c <_bss_end+0x2796ac>
    b358:	0b000001 	bleq	b364 <_ZN15CShift_Register8Shift_InEh+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:115
        sGPIO.Set_Output(mClock_Pin, true);
    b35c:	00000050 	andeq	r0, r0, r0, asr r0
    b360:	0000500b 	andeq	r5, r0, fp
    b364:	01c40b00 	biceq	r0, r4, r0, lsl #22
    b368:	0c000000 	stceq	0, cr0, [r0], {-0}
    b36c:	00003e70 	andeq	r3, r0, r0, ror lr
    b370:	080a1f03 	stmdaeq	sl, {r0, r1, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117
        for (i = 0; i < 0x10; i++)
    b374:	0100003d 	tsteq	r0, sp, lsr r0
    b378:	00000183 	andeq	r0, r0, r3, lsl #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 3)
    b37c:	00000198 	muleq	r0, r8, r1
    b380:	0001cb0a 	andeq	ip, r1, sl, lsl #22
    b384:	00500b00 	subseq	r0, r0, r0, lsl #22
    b388:	500b0000 	andpl	r0, fp, r0
    b38c:	0b000000 	bleq	b394 <_ZN15CShift_Register8Shift_InEh+0xc8>
    b390:	00000025 	andeq	r0, r0, r5, lsr #32
    b394:	3e400d00 	cdpcc	13, 4, cr0, cr0, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 2)
    b398:	21030000 	mrscs	r0, (UNDEF: 3)
    b39c:	003ded0a 	eorseq	lr, sp, sl, lsl #26
    b3a0:	01a90100 			; <UNDEFINED> instruction: 0x01a90100
    b3a4:	cb0a0000 	blgt	28b3ac <_bss_end+0x2796fc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:120
        sGPIO.Set_Output(mClock_Pin, false);
    b3a8:	0b000001 	bleq	b3b4 <_ZN15CShift_Register8Shift_InEh+0xe8>
    b3ac:	00000050 	andeq	r0, r0, r0, asr r0
    b3b0:	0000500b 	andeq	r5, r0, fp
    b3b4:	01d10b00 	bicseq	r0, r1, r0, lsl #22
    b3b8:	00000000 	andeq	r0, r0, r0
    b3bc:	00007b03 	andeq	r7, r0, r3, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122
        for (i = 0; i < 0x10; i++)
    b3c0:	02010200 	andeq	r0, r1, #0, 4
    b3c4:	0000454d 	andeq	r4, r0, sp, asr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 3)
    b3c8:	007b040e 	rsbseq	r0, fp, lr, lsl #8
    b3cc:	040e0000 	streq	r0, [lr], #-0
    b3d0:	0000002c 	andeq	r0, r0, ip, lsr #32
    b3d4:	0001d103 	andeq	sp, r1, r3, lsl #2
    b3d8:	0e040f00 	cdpeq	15, 0, cr0, cr4, cr0, {0}
    b3dc:	0001bf04 	andeq	fp, r1, r4, lsl #30
    b3e0:	1c441000 	marne	acc0, r1, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 2)
    b3e4:	06040000 	streq	r0, [r4], -r0
    b3e8:	00006f1a 	andeq	r6, r0, sl, lsl pc
    b3ec:	20030500 	andcs	r0, r3, r0, lsl #10
    b3f0:	10000105 	andne	r0, r0, r5, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 2)
    for (int j = 7; j >= 0; j--)
    b3f4:	00001c75 	andeq	r1, r0, r5, ror ip
    b3f8:	6f1a0804 	svcvs	0x001a0804
    b3fc:	05000000 	streq	r0, [r0, #-0]
    b400:	01052403 	tsteq	r5, r3, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:127
    sGPIO.Set_Output(mLatch_Pin, true);
    b404:	1d931000 	ldcne	0, cr1, [r3]
    b408:	0a040000 	beq	10b410 <_bss_end+0xf9760>
    b40c:	00006f1a 	andeq	r6, r0, sl, lsl pc
    b410:	28030500 	stmdacs	r3, {r8, sl}
    b414:	10000105 	andne	r0, r0, r5, lsl #2
    b418:	00001b79 	andeq	r1, r0, r9, ror fp
    b41c:	6f1a0c04 	svcvs	0x001a0c04
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:104
        return;
    b420:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b424:	01052c03 	tsteq	r5, r3, lsl #24
    b428:	24321100 	ldrtcs	r1, [r2], #-256	; 0xffffff00
    b42c:	04050000 	streq	r0, [r5], #-0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b430:	00000038 	andeq	r0, r0, r8, lsr r0
    b434:	510c0e04 	tstpl	ip, r4, lsl #28
    b438:	12000002 	andne	r0, r0, #2
    b43c:	00001d37 	andeq	r1, r0, r7, lsr sp
    b440:	1e3d1200 	cdpne	2, 3, cr1, cr13, cr0, {0}
    b444:	12010000 	andne	r0, r1, #0
    b448:	00001cdb 	ldrdeq	r1, [r0], -fp
    b44c:	25130002 	ldrcs	r0, [r3, #-2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128 (discriminator 1)
    b450:	61000000 	mrsvs	r0, (UNDEF: 0)
    b454:	14000002 	strne	r0, [r0], #-2
    b458:	00000074 	andeq	r0, r0, r4, ror r0
    b45c:	9807000f 	stmdals	r7, {r0, r1, r2, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:5
CShift_Register sShift_Register(2, 3, 4);
    b460:	1800000b 	stmdane	r0, {r0, r1, r3}
    b464:	a2070305 	andge	r0, r7, #335544320	; 0x14000000
    b468:	15000004 	strne	r0, [r0, #-4]
    b46c:	00000b16 	andeq	r0, r0, r6, lsl fp
    b470:	00740407 	rsbseq	r0, r4, r7, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b474:	06050000 	streq	r0, [r5], -r0
    b478:	028e0110 	addeq	r0, lr, #16, 2
    b47c:	48160000 	ldmdami	r6, {}	; <UNPREDICTABLE>
    b480:	10005845 	andne	r5, r0, r5, asr #16
    b484:	43454416 	movtmi	r4, #21526	; 0x5416
_GLOBAL__sub_I_sShift_Register():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b488:	03000a00 	movweq	r0, #2560	; 0xa00
    b48c:	0000026e 	andeq	r0, r0, lr, ror #4
    b490:	000b2317 	andeq	r2, fp, r7, lsl r3
    b494:	24050800 	strcs	r0, [r5], #-2048	; 0xfffff800
    b498:	0002b70c 	andeq	fp, r2, ip, lsl #14
    b49c:	00791800 	rsbseq	r1, r9, r0, lsl #16
    b4a0:	74162605 	ldrvc	r2, [r6], #-1541	; 0xfffff9fb
_ZN6CTimerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:26
CTimer::CTimer(unsigned long timer_reg_base)
    b4a4:	00000000 	andeq	r0, r0, r0
    b4a8:	05007818 	streq	r7, [r0, #-2072]	; 0xfffff7e8
    b4ac:	00741627 	rsbseq	r1, r4, r7, lsr #12
    b4b0:	00040000 	andeq	r0, r4, r0
    b4b4:	000c7519 	andeq	r7, ip, r9, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:27
: mTimer_Regs(reinterpret_cast<unsigned int*>(timer_reg_base))
    b4b8:	1b0c0500 	blne	30c8c0 <_bss_end+0x2fac10>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:28
, mCallback(nullptr)
    b4bc:	0000028e 	andeq	r0, r0, lr, lsl #5
    b4c0:	e81a0a01 	ldmda	sl, {r0, r9, fp}
    b4c4:	0500000b 	streq	r0, [r0, #-11]
    b4c8:	01d7280d 	bicseq	r2, r7, sp, lsl #16
    b4cc:	1b010000 	blne	4b4d4 <_bss_end+0x39824>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:31
}
    b4d0:	00000b98 	muleq	r0, r8, fp
    b4d4:	620e1005 	andvs	r1, lr, #5
    b4d8:	a200000c 	andge	r0, r0, #12
    b4dc:	01000004 	tsteq	r0, r4
    b4e0:	000002eb 	andeq	r0, r0, fp, ror #5
_ZN6CTimer4RegsEN3hal9Timer_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:34
{
    b4e4:	00000300 	andeq	r0, r0, r0, lsl #6
    b4e8:	0004a20a 	andeq	sl, r4, sl, lsl #4
    b4ec:	00740b00 	rsbseq	r0, r4, r0, lsl #22
    b4f0:	740b0000 	strvc	r0, [fp], #-0
    b4f4:	0b000000 	bleq	b4fc <_ZN6CTimer4RegsEN3hal9Timer_RegE+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:35
    return mTimer_Regs[static_cast<unsigned int>(reg)];
    b4f8:	00000074 	andeq	r0, r0, r4, ror r0
    b4fc:	18a20c00 	stmiane	r2!, {sl, fp}
    b500:	12050000 	andne	r0, r5, #0
    b504:	000b830a 	andeq	r8, fp, sl, lsl #6
    b508:	03150100 	tsteq	r5, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:36
}
    b50c:	031b0000 	tsteq	fp, #0
    b510:	a20a0000 	andge	r0, sl, #0
    b514:	00000004 	andeq	r0, r0, r4
    b518:	000ba109 	andeq	sl, fp, r9, lsl #2
_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:39
{
    b51c:	0f140500 	svceq	0x00140500
    b520:	00000c05 	andeq	r0, r0, r5, lsl #24
    b524:	000004a8 	andeq	r0, r0, r8, lsr #9
    b528:	00033401 	andeq	r3, r3, r1, lsl #8
    b52c:	00033f00 	andeq	r3, r3, r0, lsl #30
    b530:	04a20a00 	strteq	r0, [r2], #2560	; 0xa00
    b534:	250b0000 	strcs	r0, [fp, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:40
    Regs(hal::Timer_Reg::Load) = delay;
    b538:	00000000 	andeq	r0, r0, r0
    b53c:	000ba109 	andeq	sl, fp, r9, lsl #2
    b540:	0f150500 	svceq	0x00150500
    b544:	00000bac 	andeq	r0, r0, ip, lsr #23
    b548:	000004a8 	andeq	r0, r0, r8, lsr #9
    b54c:	00035801 	andeq	r5, r3, r1, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:43
    reg.counter_32b = 1;
    b550:	00036300 	andeq	r6, r3, r0, lsl #6
    b554:	04a20a00 	strteq	r0, [r2], #2560	; 0xa00
    b558:	d10b0000 	mrsle	r0, (UNDEF: 11)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:44
    reg.interrupt_enabled = 1;
    b55c:	00000001 	andeq	r0, r0, r1
    b560:	000ba109 	andeq	sl, fp, r9, lsl #2
    b564:	0f160500 	svceq	0x00160500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:45
    reg.timer_enabled = 1;
    b568:	00000c89 	andeq	r0, r0, r9, lsl #25
    b56c:	000004a8 	andeq	r0, r0, r8, lsr #9
    b570:	00037c01 	andeq	r7, r3, r1, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:46
    reg.prescaler = static_cast<uint8_t>(prescaler);
    b574:	00038700 	andeq	r8, r3, r0, lsl #14
    b578:	04a20a00 	strteq	r0, [r2], #2560	; 0xa00
    b57c:	6e0b0000 	cdpvs	0, 0, cr0, cr11, cr0, {0}
    b580:	00000002 	andeq	r0, r0, r2
    b584:	000ba109 	andeq	sl, fp, r9, lsl #2
    b588:	0f170500 	svceq	0x00170500
    b58c:	00000c34 	andeq	r0, r0, r4, lsr ip
    b590:	000004a8 	andeq	r0, r0, r8, lsr #9
    b594:	0003a001 	andeq	sl, r3, r1
    b598:	0003ab00 	andeq	sl, r3, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:48
    Regs(hal::Timer_Reg::Control) = *reinterpret_cast<unsigned int*>(&reg);
    b59c:	04a20a00 	strteq	r0, [r2], #2560	; 0xa00
    b5a0:	740b0000 	strvc	r0, [fp], #-0
    b5a4:	00000000 	andeq	r0, r0, r0
    b5a8:	000ba109 	andeq	sl, fp, r9, lsl #2
    b5ac:	0f180500 	svceq	0x00180500
    b5b0:	00000bf4 	strdeq	r0, [r0], -r4
    b5b4:	000004a8 	andeq	r0, r0, r8, lsr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:50
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b5b8:	0003c401 	andeq	ip, r3, r1, lsl #8
    b5bc:	0003cf00 	andeq	ip, r3, r0, lsl #30
    b5c0:	04a20a00 	strteq	r0, [r2], #2560	; 0xa00
    b5c4:	c40b0000 	strgt	r0, [fp], #-0
    b5c8:	00000001 	andeq	r0, r0, r1
    b5cc:	000ab41c 	andeq	fp, sl, ip, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:52
    mCallback = callback;
    b5d0:	111b0500 	tstne	fp, r0, lsl #10
    b5d4:	00000a84 	andeq	r0, r0, r4, lsl #21
    b5d8:	000003e3 	andeq	r0, r0, r3, ror #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:53
}
    b5dc:	000003e9 	andeq	r0, r0, r9, ror #7
    b5e0:	0004a20a 	andeq	sl, r4, sl, lsl #4
    b5e4:	a71c0000 	ldrge	r0, [ip, -r0]
_ZN6CTimer7DisableEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:56
{
    b5e8:	0500000a 	streq	r0, [r0, #-10]
    b5ec:	0c45111c 	stfeqe	f1, [r5], {28}
    b5f0:	03fd0000 	mvnseq	r0, #0
    b5f4:	04030000 	streq	r0, [r3], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:57
    volatile TTimer_Ctl_Flags& reg = reinterpret_cast<volatile TTimer_Ctl_Flags&>(Regs(hal::Timer_Reg::Control));
    b5f8:	a20a0000 	andge	r0, sl, #0
    b5fc:	00000004 	andeq	r0, r0, r4
    b600:	000a5f1c 	andeq	r5, sl, ip, lsl pc
    b604:	111d0500 	tstne	sp, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:59
    reg.interrupt_enabled = 0;
    b608:	00000b2d 	andeq	r0, r0, sp, lsr #22
    b60c:	00000417 	andeq	r0, r0, r7, lsl r4
    b610:	0000041d 	andeq	r0, r0, sp, lsl r4
    b614:	0004a20a 	andeq	sl, r4, sl, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:60
    reg.timer_enabled = 0;
    b618:	e11c0000 	tst	ip, r0
    b61c:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    b620:	0c1e0a1f 			; <UNDEFINED> instruction: 0x0c1e0a1f
    b624:	04310000 	ldrteq	r0, [r1], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:61
}
    b628:	04370000 	ldrteq	r0, [r7], #-0
    b62c:	a20a0000 	andge	r0, sl, #0
    b630:	00000004 	andeq	r0, r0, r4
_ZN6CTimer12IRQ_CallbackEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:64
{
    b634:	000aa21c 	andeq	sl, sl, ip, lsl r2
    b638:	0a210500 	beq	84ca40 <_bss_end+0x83ad90>
    b63c:	00000bbf 			; <UNDEFINED> instruction: 0x00000bbf
    b640:	0000044b 	andeq	r0, r0, fp, asr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:65
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b644:	00000460 	andeq	r0, r0, r0, ror #8
    b648:	0004a20a 	andeq	sl, r4, sl, lsl #4
    b64c:	00740b00 	rsbseq	r0, r4, r0, lsl #22
    b650:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
    b654:	0b000004 	bleq	b66c <_ZN6CTimer12IRQ_CallbackEv+0x38>
    b658:	00000074 	andeq	r0, r0, r4, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:67
    if (mCallback)
    b65c:	0b4f0800 	bleq	13cd664 <_bss_end+0x13bb9b4>
    b660:	2b050000 	blcs	14b668 <_bss_end+0x1399b8>
    b664:	0004ba23 	andeq	fp, r4, r3, lsr #20
    b668:	16080000 	strne	r0, [r8], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:68
        mCallback();
    b66c:	0500000c 	streq	r0, [r0, #-12]
    b670:	0074122c 	rsbseq	r1, r4, ip, lsr #4
    b674:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:69
}
    b678:	00000bd6 	ldrdeq	r0, [r0], -r6
    b67c:	74122d05 	ldrvc	r2, [r2], #-3333	; 0xfffff2fb
    b680:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
_ZN6CTimer20Is_Timer_IRQ_PendingEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:72
{
    b684:	000bdf08 	andeq	sp, fp, r8, lsl #30
    b688:	0f2e0500 	svceq	0x002e0500
    b68c:	00000293 	muleq	r0, r3, r2
    b690:	0a51080c 	beq	144d6c8 <_bss_end+0x143ba18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:73
    return Regs(hal::Timer_Reg::IRQ_Masked);
    b694:	2f050000 	svccs	0x00050000
    b698:	00026e12 	andeq	r6, r2, r2, lsl lr
    b69c:	0e001400 	cfcpyseq	mvf1, mvf0
    b6a0:	00026104 	andeq	r6, r2, r4, lsl #2
    b6a4:	61041d00 	tstvs	r4, r0, lsl #26
    b6a8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    b6ac:	00002504 	andeq	r2, r0, r4, lsl #10
    b6b0:	4b040e00 	blmi	10eeb8 <_bss_end+0xfd208>
    b6b4:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b6b8:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    b6bc:	000b681e 	andeq	r6, fp, lr, lsl r8
    b6c0:	11320500 	teqne	r2, r0, lsl #10
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b6c4:	00000261 	andeq	r0, r0, r1, ror #4
    b6c8:	0001d113 	andeq	sp, r1, r3, lsl r1
    b6cc:	0004db00 	andeq	sp, r4, r0, lsl #22
    b6d0:	00741400 	rsbseq	r1, r4, r0, lsl #8
    b6d4:	00040000 	andeq	r0, r4, r0
    b6d8:	003c971f 	eorseq	r9, ip, pc, lsl r7
    b6dc:	0d9d0100 	ldfeqs	f0, [sp]
    b6e0:	000004cb 	andeq	r0, r0, fp, asr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74 (discriminator 1)
    b6e4:	0b480305 	bleq	120c300 <_bss_end+0x11fa650>
    b6e8:	7c200001 	stcvc	0, cr0, [r0], #-4
    b6ec:	0100003d 	tsteq	r0, sp, lsr r0
    b6f0:	3d8e06a3 	stccc	6, cr0, [lr, #652]	; 0x28c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:4
CTimer sTimer(hal::Timer_Base);
    b6f4:	f1640000 			; <UNDEFINED> instruction: 0xf1640000
    b6f8:	01500000 	cmpeq	r0, r0
    b6fc:	9c010000 	stcls	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b700:	0000055b 	andeq	r0, r0, fp, asr r5
    b704:	01006921 	tsteq	r0, r1, lsr #18
    b708:	003f12ae 	eorseq	r1, pc, lr, lsr #5
    b70c:	91020000 	mrsls	r0, (UNDEF: 2)
    b710:	3daa226c 	sfmcc	f2, 4, [sl, #432]!	; 0x1b0
    b714:	b0010000 	andlt	r0, r1, r0
_GLOBAL__sub_I_sTimer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b718:	00007b13 	andeq	r7, r0, r3, lsl fp
    b71c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    b720:	003d5222 	eorseq	r5, sp, r2, lsr #4
    b724:	0eb50100 	frdeqs	f0, f5, f0
    b728:	00000063 	andeq	r0, r0, r3, rrx
    b72c:	21749102 	cmncs	r4, r2, lsl #2
    b730:	006d756e 	rsbeq	r7, sp, lr, ror #10
_ZN5CTRNGC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:8
CTRNG::CTRNG(uint32_t trng_reg_base)
    b734:	630eb601 	movwvs	fp, #58881	; 0xe601
    b738:	02000000 	andeq	r0, r0, #0
    b73c:	fc236091 	stc2	0, cr6, [r3], #-580	; 0xfffffdbc
    b740:	b80000f1 	stmdalt	r0, {r0, r4, r5, r6, r7}
    b744:	21000000 	mrscs	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:10
, mOpened(0)
    b748:	0067736d 	rsbeq	r7, r7, sp, ror #6
    b74c:	d115bf01 	tstle	r5, r1, lsl #30
    b750:	02000001 	andeq	r0, r0, #1
    b754:	00007091 	muleq	r0, r1, r0
    b758:	003de320 	eorseq	lr, sp, r0, lsr #6
    b75c:	067c0100 	ldrbteq	r0, [ip], -r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:13
}
    b760:	00003e12 	andeq	r3, r0, r2, lsl lr
    b764:	0000f078 	andeq	pc, r0, r8, ror r0	; <UNPREDICTABLE>
    b768:	000000ec 	andeq	r0, r0, ip, ror #1
    b76c:	059f9c01 	ldreq	r9, [pc, #3073]	; c375 <_ZN5IFileC1Ev+0x25>
    b770:	69210000 	stmdbvs	r1!, {}	; <UNPREDICTABLE>
_ZN5CTRNG4OpenEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:16
{
    b774:	127e0100 	rsbsne	r0, lr, #0, 2
    b778:	0000003f 	andeq	r0, r0, pc, lsr r0
    b77c:	21709102 	cmncs	r0, r2, lsl #2
    b780:	80010066 	andhi	r0, r1, r6, rrx
    b784:	0000630e 	andeq	r6, r0, lr, lsl #6
    b788:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19
    if (mOpened && exclusive)
    b78c:	003daf22 	eorseq	sl, sp, r2, lsr #30
    b790:	0a870100 	beq	fe1cbb98 <_bss_end+0xfe1b9ee8>
    b794:	0000059f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    b798:	006c9102 	rsbeq	r9, ip, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19 (discriminator 1)
    b79c:	00002513 	andeq	r2, r0, r3, lsl r5
    b7a0:	0005af00 	andeq	sl, r5, r0, lsl #30
    b7a4:	00741400 	rsbseq	r1, r4, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:20
        return false;
    b7a8:	00010000 	andeq	r0, r1, r0
    b7ac:	003e9220 	eorseq	r9, lr, r0, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:22
    mOpened++;
    b7b0:	06620100 	strbteq	r0, [r2], -r0, lsl #2
    b7b4:	00003d9c 	muleq	r0, ip, sp
    b7b8:	0000ef88 	andeq	lr, r0, r8, lsl #31
    b7bc:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7c0:	05e49c01 	strbeq	r9, [r4, #3073]!	; 0xc01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:24
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] = TRNG_Warmup_Count;
    b7c4:	69210000 	stmdbvs	r1!, {}	; <UNPREDICTABLE>
    b7c8:	12640100 	rsbne	r0, r4, #0, 2
    b7cc:	0000003f 	andeq	r0, r0, pc, lsr r0
    b7d0:	21709102 	cmncs	r0, r2, lsl #2
    b7d4:	66010066 	strvs	r0, [r1], -r6, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:25
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Int_Mask)] |=
    b7d8:	0000630e 	andeq	r6, r0, lr, lsl #6
    b7dc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b7e0:	3dd92000 	ldclcc	0, cr2, [r9]
    b7e4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    b7e8:	003ca706 	eorseq	sl, ip, r6, lsl #14
    b7ec:	00ee9800 	rsceq	r9, lr, r0, lsl #16
    b7f0:	0000f000 	andeq	pc, r0, r0
    b7f4:	199c0100 	ldmibne	ip, {r8}
    b7f8:	21000006 	tstcs	r0, r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:27
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] |= 1; // zapneme TRNG
    b7fc:	4a010069 	bmi	4b9a8 <_bss_end+0x39cf8>
    b800:	00003f12 	andeq	r3, r0, r2, lsl pc
    b804:	70910200 	addsvc	r0, r1, r0, lsl #4
    b808:	01006621 	tsteq	r0, r1, lsr #12
    b80c:	00630e4c 	rsbeq	r0, r3, ip, asr #28
    b810:	91020000 	mrsls	r0, (UNDEF: 2)
    b814:	cf200074 	svcgt	0x00200074
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:30
    while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    b818:	0100003d 	tsteq	r0, sp, lsr r0
    b81c:	3e620626 	cdpcc	6, 6, cr0, cr2, cr6, {1}
    b820:	ed580000 	ldcl	0, cr0, [r8, #-0]
    b824:	01400000 	mrseq	r0, (UNDEF: 64)
    b828:	9c010000 	stcls	0, cr0, [r1], {-0}
    b82c:	0000068a 	andeq	r0, r0, sl, lsl #13
    b830:	01006921 	tsteq	r0, r1, lsr #18
    b834:	003f1228 	eorseq	r1, pc, r8, lsr #4
    b838:	91020000 	mrsls	r0, (UNDEF: 2)
    b83c:	736d2168 	cmnvc	sp, #104, 2
    b840:	2a010067 	bcs	4b9e4 <_bss_end+0x39d34>
    b844:	0001d111 	andeq	sp, r1, r1, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:33
    return true;
    b848:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:34
}
    b84c:	01006621 	tsteq	r0, r1, lsr #12
    b850:	00630e2c 	rsbeq	r0, r3, ip, lsr #28
    b854:	91020000 	mrsls	r0, (UNDEF: 2)
    b858:	3c922270 	lfmcc	f2, 4, [r2], {112}	; 0x70
_ZN5CTRNG5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:37
{
    b85c:	2d010000 	stccs	0, cr0, [r1, #-0]
    b860:	0000630e 	andeq	r6, r0, lr, lsl #6
    b864:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b868:	003e3a22 	eorseq	r3, lr, r2, lsr #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:38
    if (!mOpened)
    b86c:	0e340100 	rsfeqs	f0, f4, f0
    b870:	00000063 	andeq	r0, r0, r3, rrx
    b874:	22649102 	rsbcs	r9, r4, #-2147483648	; 0x80000000
    b878:	00003ca0 	andeq	r3, r0, r0, lsr #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:41
    mOpened--;
    b87c:	510a3501 	tstpl	sl, r1, lsl #10
    b880:	02000002 	andeq	r0, r0, #2
    b884:	24005491 	strcs	r5, [r0], #-1169	; 0xfffffb6f
    b888:	00003dc5 	andeq	r3, r0, r5, asr #27
    b88c:	b7060c01 	strlt	r0, [r6, -r1, lsl #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:43
    if (mOpened == 0)
    b890:	6800003d 	stmdavs	r0, {r0, r2, r3, r4, r5}
    b894:	f00000ec 			; <UNDEFINED> instruction: 0xf00000ec
    b898:	01000000 	mrseq	r0, (UNDEF: 0)
    b89c:	0069219c 	mlseq	r9, ip, r1, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:44
        mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] = 0;
    b8a0:	3f120e01 	svccc	0x00120e01
    b8a4:	02000000 	andeq	r0, r0, #0
    b8a8:	66217091 			; <UNDEFINED> instruction: 0x66217091
    b8ac:	0e100100 	mufeqs	f0, f0, f0
    b8b0:	00000063 	andeq	r0, r0, r3, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:39
        return;
    b8b4:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:45
}
    b8b8:	0002b900 	andeq	fp, r2, r0, lsl #18
    b8bc:	5f000400 	svcpl	0x00000400
    b8c0:	04000031 	streq	r0, [r0], #-49	; 0xffffffcf
_ZNK5CTRNG9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:48
{
    b8c4:	00001401 	andeq	r1, r0, r1, lsl #8
    b8c8:	3f2d0400 	svccc	0x002d0400
    b8cc:	00c50000 	sbceq	r0, r5, r0
    b8d0:	f2b40000 	vext.8	d0, d4, d0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:49
    return (mOpened > 0);
    b8d4:	018c0000 	orreq	r0, ip, r0
    b8d8:	43a10000 			; <UNDEFINED> instruction: 0x43a10000
    b8dc:	01020000 	mrseq	r0, (UNDEF: 2)
    b8e0:	00057308 	andeq	r7, r5, r8, lsl #6
    b8e4:	00250300 	eoreq	r0, r5, r0, lsl #6
    b8e8:	02020000 	andeq	r0, r2, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:50
}
    b8ec:	00059905 	andeq	r9, r5, r5, lsl #18
    b8f0:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    b8f4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    b8f8:	6a080102 	bvs	20bd08 <_bss_end+0x1fa058>
_ZN5CTRNG17Get_Random_NumberEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:53
{
    b8fc:	02000005 	andeq	r0, r0, #5
    b900:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    b904:	e4050000 	str	r0, [r5], #-0
    b908:	04000005 	streq	r0, [r0], #-5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:54
    if (mOpened == 0)
    b90c:	005e0709 	subseq	r0, lr, r9, lsl #14
    b910:	4d030000 	stcmi	0, cr0, [r3, #-0]
    b914:	02000000 	andeq	r0, r0, #0
    b918:	45960704 	ldrmi	r0, [r6, #1796]	; 0x704
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:55
        return 4; // https://xkcd.com/221/
    b91c:	61060000 	mrsvs	r0, (UNDEF: 6)
    b920:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:61
    return mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Data)];
    b924:	00003804 	andeq	r3, r0, r4, lsl #16
    b928:	0c430300 	mcrreq	3, 0, r0, r3, cr0
    b92c:	00000084 	andeq	r0, r0, r4, lsl #1
    b930:	00229007 	eoreq	r9, r2, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b934:	25070000 	strcs	r0, [r7, #-0]
    b938:	01000020 	tsteq	r0, r0, lsr #32
    b93c:	1c440800 	mcrrne	8, 0, r0, r4, cr0
    b940:	06020000 	streq	r0, [r2], -r0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b944:	0000591a 	andeq	r5, r0, sl, lsl r9
    b948:	08030500 	stmdaeq	r3, {r8, sl}
    b94c:	08000107 	stmdaeq	r0, {r0, r1, r2, r8}
    b950:	00001c75 	andeq	r1, r0, r5, ror ip
    b954:	591a0802 	ldmdbpl	sl, {r1, fp}
    b958:	05000000 	streq	r0, [r0, #-0]
    b95c:	01070c03 	tsteq	r7, r3, lsl #24
    b960:	1d930800 	ldcne	8, cr0, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62 (discriminator 1)
    b964:	0a020000 	beq	8b96c <_bss_end+0x79cbc>
    b968:	0000591a 	andeq	r5, r0, sl, lsl r9
    b96c:	10030500 	andne	r0, r3, r0, lsl #10
    b970:	08000107 	stmdaeq	r0, {r0, r1, r2, r8}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:3
CTRNG sTRNG(hal::TRNG_Base);
    b974:	00001b79 	andeq	r1, r0, r9, ror fp
    b978:	591a0c02 	ldmdbpl	sl, {r1, sl, fp}
    b97c:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b980:	01071403 	tsteq	r7, r3, lsl #8
    b984:	24320600 	ldrtcs	r0, [r2], #-1536	; 0xfffffa00
    b988:	04050000 	streq	r0, [r5], #-0
    b98c:	00000038 	andeq	r0, r0, r8, lsr r0
    b990:	f10c0e02 			; <UNDEFINED> instruction: 0xf10c0e02
    b994:	07000000 	streq	r0, [r0, -r0]
_GLOBAL__sub_I_sTRNG():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b998:	00001d37 	andeq	r1, r0, r7, lsr sp
    b99c:	1e3d0700 	cdpne	7, 3, cr0, cr13, cr0, {0}
    b9a0:	07010000 	streq	r0, [r1, -r0]
    b9a4:	00001cdb 	ldrdeq	r1, [r0], -fp
    b9a8:	01020002 	tsteq	r2, r2
    b9ac:	00454d02 	subeq	r4, r5, r2, lsl #26
    b9b0:	2c040900 			; <UNDEFINED> instruction: 0x2c040900
_ZN11CFilesystemC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:10
CFilesystem::CFilesystem()
    b9b4:	0a000000 	beq	b9bc <_ZN11CFilesystemC1Ev+0x8>
    b9b8:	00003f0d 	andeq	r3, r0, sp, lsl #30
    b9bc:	b50a3901 	strlt	r3, [sl, #-2305]	; 0xfffff6ff
    b9c0:	4d00003e 	stcmi	0, cr0, [r0, #-248]	; 0xffffff08
    b9c4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    b9c8:	500000f3 	strdpl	r0, [r0], -r3
    b9cc:	01000000 	mrseq	r0, (UNDEF: 0)
    b9d0:	0001599c 	muleq	r1, ip, r9
    b9d4:	3d570b00 	vldrcc	d16, [r7, #-0]
    b9d8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    b9dc:	00004d19 	andeq	r4, r0, r9, lsl sp
    b9e0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b9e4:	003f800b 	eorseq	r8, pc, fp
    b9e8:	30390100 	eorscc	r0, r9, r0, lsl #2
    b9ec:	00000065 	andeq	r0, r0, r5, rrx
    b9f0:	0b689102 	bleq	1a2fe00 <_bss_end+0x1a1e150>
    b9f4:	00003efd 	strdeq	r3, [r0], -sp
    b9f8:	59413901 	stmdbpl	r1, {r0, r8, fp, ip, sp}^
    b9fc:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:14
    mRoot.parent = nullptr;
    ba00:	130c6491 	movwne	r6, #50321	; 0xc491
    ba04:	0100003f 	tsteq	r0, pc, lsr r0
    ba08:	004d0e3b 	subeq	r0, sp, fp, lsr lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:15
    mRoot.next = nullptr;
    ba0c:	91020000 	mrsls	r0, (UNDEF: 2)
    ba10:	040d0074 	streq	r0, [sp], #-116	; 0xffffff8c
    ba14:	003f900e 	eorseq	r9, pc, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:16
    mRoot.children = &mRoot_Dev;
    ba18:	06330100 	ldrteq	r0, [r3], -r0, lsl #2
    ba1c:	00003f03 	andeq	r3, r0, r3, lsl #30
    ba20:	0000f3c4 	andeq	pc, r0, r4, asr #7
    ba24:	0000002c 	andeq	r0, r0, ip, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:17
    mRoot.isDirectory = true;
    ba28:	01859c01 	orreq	r9, r5, r1, lsl #24
    ba2c:	570b0000 	strpl	r0, [fp, -r0]
    ba30:	0100003d 	tsteq	r0, sp, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:18
    mRoot.driver_idx = NoFilesystemDriver;
    ba34:	004d1533 	subeq	r1, sp, r3, lsr r5
    ba38:	91020000 	mrsls	r0, (UNDEF: 2)
    ba3c:	380a0074 	stmdacc	sl, {r2, r4, r5, r6}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:19
    mRoot.name[0] = '\0';
    ba40:	01000004 	tsteq	r0, r4
    ba44:	3eef0a26 	vfmacc.f32	s1, s30, s13
    ba48:	004d0000 	subeq	r0, sp, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:21
    mRoot_Dev.parent = &mRoot;
    ba4c:	f3740000 	vhadd.u<illegal width 64>	d16, d4, d0
    ba50:	00500000 	subseq	r0, r0, r0
    ba54:	9c010000 	stcls	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:22
    mRoot_Dev.children = nullptr;
    ba58:	000001e0 	andeq	r0, r0, r0, ror #3
    ba5c:	003d570b 	eorseq	r5, sp, fp, lsl #14
    ba60:	19260100 	stmdbne	r6!, {r8}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:23
    mRoot_Dev.next = &mRoot_Sys;
    ba64:	0000004d 	andeq	r0, r0, sp, asr #32
    ba68:	0b6c9102 	bleq	1b2fe78 <_bss_end+0x1b1e1c8>
    ba6c:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    ba70:	f82b2601 			; <UNDEFINED> instruction: 0xf82b2601
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:24
    mRoot_Dev.isDirectory = true;
    ba74:	02000000 	andeq	r0, r0, #0
    ba78:	480b6891 	stmdami	fp, {r0, r4, r7, fp, sp, lr}
    ba7c:	0100000e 	tsteq	r0, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:25
    mRoot_Dev.driver_idx = NoFilesystemDriver;
    ba80:	004d3c26 	subeq	r3, sp, r6, lsr #24
    ba84:	91020000 	mrsls	r0, (UNDEF: 2)
    ba88:	3f8a0c64 	svccc	0x008a0c64
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:26
    strncpy(mRoot_Dev.name, "DEV", 4);
    ba8c:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    ba90:	00004d0e 	andeq	r4, r0, lr, lsl #26
    ba94:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    ba98:	07150a00 	ldreq	r0, [r5, -r0, lsl #20]
    ba9c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    baa0:	003f1b0a 	eorseq	r1, pc, sl, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:28
    mRoot_Sys.parent = &mRoot;
    baa4:	00004d00 	andeq	r4, r0, r0, lsl #26
    baa8:	00f32400 	rscseq	r2, r3, r0, lsl #8
    baac:	00005000 	andeq	r5, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:29
    mRoot_Sys.children = nullptr;
    bab0:	3b9c0100 	blcc	fe70beb8 <_bss_end+0xfe6fa208>
    bab4:	0b000002 	bleq	bac4 <_ZN11CFilesystemC1Ev+0x110>
    bab8:	00003d57 	andeq	r3, r0, r7, asr sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:30
    mRoot_Sys.next = &mRoot_Mnt;
    babc:	4d181901 	vldrmi.16	s2, [r8, #-2]	; <UNPREDICTABLE>
    bac0:	02000000 	andeq	r0, r0, #0
    bac4:	ba0b6c91 	blt	2e6d10 <_bss_end+0x2d5060>
    bac8:	0100000c 	tsteq	r0, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:31
    mRoot_Sys.isDirectory = true;
    bacc:	02412a19 	subeq	r2, r1, #102400	; 0x19000
    bad0:	91020000 	mrsls	r0, (UNDEF: 2)
    bad4:	0e480b68 	vmlseq.f64	d16, d8, d24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:32
    mRoot_Sys.driver_idx = NoFilesystemDriver;
    bad8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    badc:	00004d3b 	andeq	r4, r0, fp, lsr sp
    bae0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:33
    strncpy(mRoot_Sys.name, "SYS", 4);
    bae4:	003f270c 	eorseq	r2, pc, ip, lsl #14
    bae8:	0e1b0100 	mufeqe	f0, f3, f0
    baec:	0000004d 	andeq	r0, r0, sp, asr #32
    baf0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    baf4:	00250409 	eoreq	r0, r5, r9, lsl #8
    baf8:	3b030000 	blcc	cbb00 <_bss_end+0xb9e50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:35
    mRoot_Mnt.parent = &mRoot;
    bafc:	0a000002 	beq	bb0c <_ZN11CFilesystemC1Ev+0x158>
    bb00:	00003e9c 	muleq	r0, ip, lr
    bb04:	d30a0d01 	movwle	r0, #44289	; 0xad01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:36
    mRoot_Mnt.children = nullptr;
    bb08:	4d00003e 	stcmi	0, cr0, [r0, #-248]	; 0xffffff08
    bb0c:	e0000000 	and	r0, r0, r0
    bb10:	440000f2 	strmi	r0, [r0], #-242	; 0xffffff0e
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:37
    mRoot_Mnt.next = nullptr;
    bb14:	01000000 	mrseq	r0, (UNDEF: 0)
    bb18:	0002929c 	muleq	r2, ip, r2
    bb1c:	3eac0b00 	vfmacc.f64	d0, d12, d0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:38
    mRoot_Mnt.isDirectory = true;
    bb20:	0d010000 	stceq	0, cr0, [r1, #-0]
    bb24:	0000f81b 	andeq	pc, r0, fp, lsl r8	; <UNPREDICTABLE>
    bb28:	6c910200 	lfmvs	f0, 4, [r1], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:39
    mRoot_Mnt.driver_idx = NoFilesystemDriver;
    bb2c:	00036e0b 	andeq	r6, r3, fp, lsl #28
    bb30:	350d0100 	strcc	r0, [sp, #-256]	; 0xffffff00
    bb34:	000000cc 	andeq	r0, r0, ip, asr #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:40
    strncpy(mRoot_Mnt.name, "MNT", 4);
    bb38:	0c689102 	stfeqp	f1, [r8], #-8
    bb3c:	00003d57 	andeq	r3, r0, r7, asr sp
    bb40:	4d0e0f01 	stcmi	15, cr0, [lr, #-4]
    bb44:	02000000 	andeq	r0, r0, #0
    bb48:	0f007491 	svceq	0x00007491
    bb4c:	00003f79 	andeq	r3, r0, r9, ror pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:41
}
    bb50:	a10a0301 	tstge	sl, r1, lsl #6
    bb54:	4d00003e 	stcmi	0, cr0, [r0, #-248]	; 0xffffff08
    bb58:	b4000000 	strlt	r0, [r0], #-0
    bb5c:	2c0000f2 	stccs	0, cr0, [r0], {242}	; 0xf2
    bb60:	01000000 	mrseq	r0, (UNDEF: 0)
    bb64:	6970109c 	ldmdbvs	r0!, {r2, r3, r4, r7, ip}^
    bb68:	05010064 	streq	r0, [r1, #-100]	; 0xffffff9c
_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:44
{
    bb6c:	00004d0e 	andeq	r4, r0, lr, lsl #26
    bb70:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    bb74:	032e0000 			; <UNDEFINED> instruction: 0x032e0000
    bb78:	00040000 	andeq	r0, r4, r0
    bb7c:	0000326b 	andeq	r3, r0, fp, ror #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:45
    TFS_Tree_Node* child = children;
    bb80:	00140104 	andseq	r0, r4, r4, lsl #2
    bb84:	a1040000 	mrsge	r0, (UNDEF: 4)
    bb88:	c500003f 	strgt	r0, [r0, #-63]	; 0xffffffc1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bb8c:	40000000 	andmi	r0, r0, r0
    bb90:	b80000f4 	stmdalt	r0, {r2, r4, r5, r6, r7}
    bb94:	70000004 	andvc	r0, r0, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:49
        if (strncmp(child->name, name, MaxFilenameLength) == 0)
    bb98:	02000045 	andeq	r0, r0, #69	; 0x45
    bb9c:	00000049 	andeq	r0, r0, r9, asr #32
    bba0:	000be803 	andeq	lr, fp, r3, lsl #16
    bba4:	10050100 	andne	r0, r5, r0, lsl #2
    bba8:	00000061 	andeq	r0, r0, r1, rrx
    bbac:	32313011 	eorscc	r3, r1, #17
    bbb0:	36353433 			; <UNDEFINED> instruction: 0x36353433
    bbb4:	41393837 	teqmi	r9, r7, lsr r8
    bbb8:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
    bbbc:	04000046 	streq	r0, [r0], #-70	; 0xffffffba
    bbc0:	25010301 	strcs	r0, [r1, #-769]	; 0xfffffcff
    bbc4:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:50
            return child;
    bbc8:	00000074 	andeq	r0, r0, r4, ror r0
    bbcc:	00000061 	andeq	r0, r0, r1, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:52
        child = child->next;
    bbd0:	00006606 	andeq	r6, r0, r6, lsl #12
    bbd4:	07001000 	streq	r1, [r0, -r0]
    bbd8:	00000051 	andeq	r0, r0, r1, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bbdc:	96070408 	strls	r0, [r7], -r8, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:55
    return nullptr;
    bbe0:	08000045 	stmdaeq	r0, {r0, r2, r6}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:56
}
    bbe4:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    bbe8:	6d070000 	stcvs	0, cr0, [r7, #-0]
    bbec:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
_ZN11CFilesystem10InitializeEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:59
{
    bbf0:	0000002a 	andeq	r0, r0, sl, lsr #32
    bbf4:	00401d0a 	subeq	r1, r0, sl, lsl #26
    bbf8:	06640100 	strbteq	r0, [r4], -r0, lsl #2
    bbfc:	0000400d 	andeq	r4, r0, sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:60
    sMonitor << "Initializing the FS\n";
    bc00:	0000f878 	andeq	pc, r0, r8, ror r8	; <UNPREDICTABLE>
    bc04:	00000080 	andeq	r0, r0, r0, lsl #1
    bc08:	00fb9c01 	rscseq	r9, fp, r1, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67
    for (i = 0; i < gFS_Drivers_Count; i++)
    bc0c:	730b0000 	movwvc	r0, #45056	; 0xb000
    bc10:	01006372 	tsteq	r0, r2, ror r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 1)
    bc14:	00fb1964 	rscseq	r1, fp, r4, ror #18
    bc18:	91020000 	mrsls	r0, (UNDEF: 2)
    bc1c:	73640b64 	cmnvc	r4, #100, 22	; 0x19000
    bc20:	64010074 	strvs	r0, [r1], #-116	; 0xffffff8c
    bc24:	00010224 	andeq	r0, r1, r4, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:69
        const TFS_Driver* ptr = &gFS_Drivers[i];
    bc28:	60910200 	addsvs	r0, r1, r0, lsl #4
    bc2c:	6d756e0b 	ldclvs	14, cr6, [r5, #-44]!	; 0xffffffd4
    bc30:	2d640100 	stfcse	f0, [r4, #-0]
    bc34:	00000104 	andeq	r0, r0, r4, lsl #2
    bc38:	0c5c9102 	ldfeqp	f1, [ip], {2}
    bc3c:	00004077 	andeq	r4, r0, r7, ror r0
    bc40:	0b116601 	bleq	46544c <_bss_end+0x45379c>
    bc44:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:71
        mpPtr = ptr->mountPoint;
    bc48:	060c7091 			; <UNDEFINED> instruction: 0x060c7091
    bc4c:	01000040 	tsteq	r0, r0, asr #32
    bc50:	01110b67 	tsteq	r1, r7, ror #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:73
        sMonitor << "mount point = " << mpPtr << "\n";
    bc54:	91020000 	mrsls	r0, (UNDEF: 2)
    bc58:	f8a00d6c 			; <UNDEFINED> instruction: 0xf8a00d6c
    bc5c:	00480000 	subeq	r0, r8, r0
    bc60:	690e0000 	stmdbvs	lr, {}	; <UNPREDICTABLE>
    bc64:	0e690100 	poweqe	f0, f1, f0
    bc68:	00000104 	andeq	r0, r0, r4, lsl #2
    bc6c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    bc70:	01040f00 	tsteq	r4, r0, lsl #30
    bc74:	10000001 	andne	r0, r0, r1
    bc78:	04120411 	ldreq	r0, [r2], #-1041	; 0xfffffbef
    bc7c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:75
        TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bc80:	74040f00 	strvc	r0, [r4], #-3840	; 0xfffff100
    bc84:	0f000000 	svceq	0x00000000
    bc88:	00006d04 	andeq	r6, r0, r4, lsl #26
    bc8c:	3f9b0a00 	svccc	0x009b0a00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    bc90:	5c010000 	stcpl	0, cr0, [r1], {-0}
    bc94:	003fef06 	eorseq	lr, pc, r6, lsl #30
    bc98:	00f81000 	rscseq	r1, r8, r0
    bc9c:	00006800 	andeq	r6, r0, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bca0:	769c0100 	ldrvc	r0, [ip], r0, lsl #2
    bca4:	13000001 	movwne	r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 1)
    bca8:	00004070 	andeq	r4, r0, r0, ror r0
    bcac:	02125c01 	andseq	r5, r2, #256	; 0x100
    bcb0:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 2)
    bcb4:	96136c91 			; <UNDEFINED> instruction: 0x96136c91
    bcb8:	01000012 	tsteq	r0, r2, lsl r0
    bcbc:	01041e5c 	tsteq	r4, ip, asr lr
    bcc0:	91020000 	mrsls	r0, (UNDEF: 2)
    bcc4:	656d0e68 	strbvs	r0, [sp, #-3688]!	; 0xfffff198
    bcc8:	5e01006d 	cdppl	0, 0, cr0, cr1, cr13, {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81
                if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bccc:	0001110b 	andeq	r1, r1, fp, lsl #2
    bcd0:	70910200 	addsvc	r0, r1, r0, lsl #4
    bcd4:	00f82c0d 	rscseq	r2, r8, sp, lsl #24
    bcd8:	00003c00 	andeq	r3, r0, r0, lsl #24
    bcdc:	00690e00 	rsbeq	r0, r9, r0, lsl #28
    bce0:	040e6001 	streq	r6, [lr], #-1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81 (discriminator 1)
    bce4:	02000001 	andeq	r0, r0, #1
    bce8:	00007491 	muleq	r0, r1, r4
    bcec:	00402414 	subeq	r2, r0, r4, lsl r4
    bcf0:	05520100 	ldrbeq	r0, [r2, #-256]	; 0xffffff00
    bcf4:	0000403d 	andeq	r4, r0, sp, lsr r0
    bcf8:	00000104 	andeq	r0, r0, r4, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:84 (discriminator 3)
                tmpName[j] = mpPtr[j];
    bcfc:	0000f7bc 			; <UNDEFINED> instruction: 0x0000f7bc
    bd00:	00000054 	andeq	r0, r0, r4, asr r0
    bd04:	01af9c01 			; <UNDEFINED> instruction: 0x01af9c01
    bd08:	730b0000 	movwvc	r0, #45056	; 0xb000
    bd0c:	18520100 	ldmdane	r2, {r8}^
    bd10:	0000010b 	andeq	r0, r0, fp, lsl #2
    bd14:	0e6c9102 	lgneqe	f1, f2
    bd18:	54010069 	strpl	r0, [r1], #-105	; 0xffffff97
    bd1c:	00010409 	andeq	r0, r1, r9, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 3)
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bd20:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    bd24:	40601400 	rsbmi	r1, r0, r0, lsl #8
    bd28:	42010000 	andmi	r0, r1, #0
    bd2c:	00402b05 	subeq	r2, r0, r5, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:87
            tmpName[j] = '\0';
    bd30:	00010400 	andeq	r0, r1, r0, lsl #8
    bd34:	00f71000 	rscseq	r1, r7, r0
    bd38:	0000ac00 	andeq	sl, r0, r0, lsl #24
    bd3c:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    bd40:	0b000002 	bleq	bd50 <_ZN11CFilesystem10InitializeEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:89
            mpPtr += j;
    bd44:	01003173 	tsteq	r0, r3, ror r1
    bd48:	010b1942 	tsteq	fp, r2, asr #18
    bd4c:	91020000 	mrsls	r0, (UNDEF: 2)
    bd50:	32730b6c 	rsbscc	r0, r3, #108, 22	; 0x1b000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:90
            if (mpPtr[0] != '\0')
    bd54:	29420100 	stmdbcs	r2, {r8}^
    bd58:	0000010b 	andeq	r0, r0, fp, lsl #2
    bd5c:	0b689102 	bleq	1a3016c <_bss_end+0x1a1e4bc>
    bd60:	006d756e 	rsbeq	r7, sp, lr, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:92
                mpPtr += 1;
    bd64:	04314201 	ldrteq	r4, [r1], #-513	; 0xfffffdff
    bd68:	02000001 	andeq	r0, r0, #1
    bd6c:	750e6491 	strvc	r6, [lr, #-1169]	; 0xfffffb6f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:95
            sMonitor << "finding child = " << tmpName << '\n';
    bd70:	44010031 	strmi	r0, [r1], #-49	; 0xffffffcf
    bd74:	00021513 	andeq	r1, r2, r3, lsl r5
    bd78:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    bd7c:	0032750e 	eorseq	r7, r2, lr, lsl #10
    bd80:	15174401 	ldrne	r4, [r7, #-1025]	; 0xfffffbff
    bd84:	02000002 	andeq	r0, r0, #2
    bd88:	08007691 	stmdaeq	r0, {r0, r4, r7, r9, sl, ip, sp, lr}
    bd8c:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    bd90:	68140000 	ldmdavs	r4, {}	; <UNPREDICTABLE>
    bd94:	01000040 	tsteq	r0, r0, asr #32
    bd98:	404f0736 	submi	r0, pc, r6, lsr r7	; <UNPREDICTABLE>
    bd9c:	01110000 	tsteq	r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:97
            tmpNode = node->Find_Child(tmpName);
    bda0:	f6500000 			; <UNDEFINED> instruction: 0xf6500000
    bda4:	00c00000 	sbceq	r0, r0, r0
    bda8:	9c010000 	stcls	0, cr0, [r1], {-0}
    bdac:	00000275 	andeq	r0, r0, r5, ror r2
    bdb0:	003f9613 	eorseq	r9, pc, r3, lsl r6	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:99
            if (tmpNode)
    bdb4:	15360100 	ldrne	r0, [r6, #-256]!	; 0xffffff00
    bdb8:	00000111 	andeq	r0, r0, r1, lsl r1
    bdbc:	0b6c9102 	bleq	1b301cc <_bss_end+0x1b1e51c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:101
                node = tmpNode;
    bdc0:	00637273 	rsbeq	r7, r3, r3, ror r2
    bdc4:	0b273601 	bleq	9d95d0 <_bss_end+0x9c7920>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:102
                sMonitor << "child " << tmpName << " was found\n";
    bdc8:	02000001 	andeq	r0, r0, #1
    bdcc:	6e0b6891 	mcrvs	8, 0, r6, cr11, cr1, {4}
    bdd0:	01006d75 	tsteq	r0, r5, ror sp
    bdd4:	01043036 	tsteq	r4, r6, lsr r0
    bdd8:	91020000 	mrsls	r0, (UNDEF: 2)
    bddc:	00690e64 	rsbeq	r0, r9, r4, ror #28
    bde0:	04093801 	streq	r3, [r9], #-2049	; 0xfffff7ff
    bde4:	02000001 	andeq	r0, r0, #1
    bde8:	14007491 	strne	r7, [r0], #-1169	; 0xfffffb6f
    bdec:	0000404a 	andeq	r4, r0, sl, asr #32
    bdf0:	fb052401 	blx	154dfe <_bss_end+0x14314e>
    bdf4:	0400003f 	streq	r0, [r0], #-63	; 0xffffffc1
    bdf8:	b4000001 	strlt	r0, [r0], #-1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:107
                tmpNode = sKernelMem.Alloc<TFS_Tree_Node>();
    bdfc:	9c0000f5 	stcls	0, cr0, [r0], {245}	; 0xf5
    be00:	01000000 	mrseq	r0, (UNDEF: 0)
    be04:	0002b29c 	muleq	r2, ip, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:108
                strncpy(tmpNode->name, tmpName, MaxFilenameLength);
    be08:	0cb21300 	ldceq	3, cr1, [r2]
    be0c:	24010000 	strcs	r0, [r1], #-0
    be10:	00010b16 	andeq	r0, r1, r6, lsl fp
    be14:	6c910200 	lfmvs	f0, 4, [r1], {0}
    be18:	000cab0c 	andeq	sl, ip, ip, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:109
                tmpNode->parent = node;
    be1c:	09260100 	stmdbeq	r6!, {r8}
    be20:	00000104 	andeq	r0, r0, r4, lsl #2
    be24:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:110
                tmpNode->children = nullptr;
    be28:	000aa215 	andeq	sl, sl, r5, lsl r2
    be2c:	06080100 	streq	r0, [r8], -r0, lsl #2
    be30:	0000407e 	andeq	r4, r0, lr, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:111
                tmpNode->driver_idx = NoFilesystemDriver; // zatim - mozna se neco dole zmeni
    be34:	0000f440 	andeq	pc, r0, r0, asr #8
    be38:	00000174 	andeq	r0, r0, r4, ror r1
    be3c:	b2139c01 	andslt	r9, r3, #256	; 0x100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:112
                tmpNode->isDirectory = true;
    be40:	0100000c 	tsteq	r0, ip
    be44:	00661808 	rsbeq	r1, r6, r8, lsl #16
    be48:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:113
                tmpNode->next = node->children;
    be4c:	0cab1364 	stceq	3, cr1, [fp], #400	; 0x190
    be50:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    be54:	00011125 	andeq	r1, r1, r5, lsr #2
    be58:	60910200 	addsvs	r0, r1, r0, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:114
                node->children = tmpNode;
    be5c:	001afe13 	andseq	pc, sl, r3, lsl lr	; <UNPREDICTABLE>
    be60:	3a080100 	bcc	20c268 <_bss_end+0x1fa5b8>
    be64:	00000066 	andeq	r0, r0, r6, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:116
                node = tmpNode;
    be68:	0e5c9102 	logeqe	f1, f2
    be6c:	0a010069 	beq	4c018 <_bss_end+0x3a368>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:118
                sMonitor << "child was not found\n";
    be70:	00010409 	andeq	r0, r1, r9, lsl #8
    be74:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    be78:	00f50c0d 	rscseq	r0, r5, sp, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:119
                sMonitor << "creating: " << node->name << "\n";
    be7c:	00009800 	andeq	r9, r0, r0, lsl #16
    be80:	006a0e00 	rsbeq	r0, sl, r0, lsl #28
    be84:	040e1c01 	streq	r1, [lr], #-3073	; 0xfffff3ff
    be88:	02000001 	andeq	r0, r0, #1
    be8c:	340d7091 	strcc	r7, [sp], #-145	; 0xffffff6f
    be90:	600000f5 	strdvs	r0, [r0], -r5
    be94:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    be98:	1e010063 	cdpne	0, 0, cr0, cr1, cr3, {3}
    be9c:	00006d0e 	andeq	r6, r0, lr, lsl #26
    bea0:	6f910200 	svcvs	0x00910200
    bea4:	00000000 	andeq	r0, r0, r0
    bea8:	000009f9 	strdeq	r0, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    beac:	33920004 	orrscc	r0, r2, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:126
        if (node->driver_idx != NoFilesystemDriver)
    beb0:	01040000 	mrseq	r0, (UNDEF: 4)
    beb4:	00000014 	andeq	r0, r0, r4, lsl r0
    beb8:	0040ba04 	subeq	fp, r0, r4, lsl #20
    bebc:	0000c500 	andeq	ip, r0, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:129 (discriminator 2)
        node->driver_idx = i; // timto predavame veskere manipulace driveru
    bec0:	00f8f800 	rscseq	pc, r8, r0, lsl #16
    bec4:	0004b400 	andeq	fp, r4, r0, lsl #8
    bec8:	0047fb00 	subeq	pc, r7, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:132 (discriminator 2)
        ptr->driver->On_Register();
    becc:	08010200 	stmdaeq	r1, {r9}
    bed0:	00000573 	andeq	r0, r0, r3, ror r5
    bed4:	00002503 	andeq	r2, r0, r3, lsl #10
    bed8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    bedc:	00000599 	muleq	r0, r9, r5
    bee0:	69050404 	stmdbvs	r5, {r2, sl}
    bee4:	0300746e 	movweq	r7, #1134	; 0x46e
    bee8:	00000038 	andeq	r0, r0, r8, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 2)
    for (i = 0; i < gFS_Drivers_Count; i++)
    beec:	00098205 	andeq	r8, r9, r5, lsl #4
    bef0:	07070200 	streq	r0, [r7, -r0, lsl #4]
    bef4:	00000055 	andeq	r0, r0, r5, asr r0
    bef8:	00004403 	andeq	r4, r0, r3, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:135
    sMonitor << "Finished FS initialization\n\n";
    befc:	08010200 	stmdaeq	r1, {r9}
    bf00:	0000056a 	andeq	r0, r0, sl, ror #10
    bf04:	00079805 	andeq	r9, r7, r5, lsl #16
    bf08:	07080200 	streq	r0, [r8, -r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:127
            return;
    bf0c:	0000006d 	andeq	r0, r0, sp, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:136
}
    bf10:	00005c03 	andeq	r5, r0, r3, lsl #24
    bf14:	07020200 	streq	r0, [r2, -r0, lsl #4]
    bf18:	000003dc 	ldrdeq	r0, [r0], -ip
    bf1c:	0005e405 	andeq	lr, r5, r5, lsl #8
    bf20:	07090200 	streq	r0, [r9, -r0, lsl #4]
    bf24:	00000085 	andeq	r0, r0, r5, lsl #1
    bf28:	00007403 	andeq	r7, r0, r3, lsl #8
    bf2c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    bf30:	00004596 	muleq	r0, r6, r5
    bf34:	00008503 	andeq	r8, r0, r3, lsl #10
    bf38:	3d290600 	stccc	6, cr0, [r9, #-0]
    bf3c:	03080000 	movweq	r0, #32768	; 0x8000
    bf40:	01d50706 	bicseq	r0, r5, r6, lsl #14
    bf44:	86070000 	strhi	r0, [r7], -r0
    bf48:	0300003d 	movweq	r0, #61	; 0x3d
_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:139
{
    bf4c:	00740e0a 	rsbseq	r0, r4, sl, lsl #28
    bf50:	07000000 	streq	r0, [r0, -r0]
    bf54:	00000765 	andeq	r0, r0, r5, ror #14
    bf58:	da0a0c03 	ble	28ef6c <_bss_end+0x27d2bc>
    bf5c:	04000001 	streq	r0, [r0], #-1
    bf60:	003d2908 	eorseq	r2, sp, r8, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:142
    sMonitor << "opening file: " << path << "\n";
    bf64:	05100300 	ldreq	r0, [r0, #-768]	; 0xfffffd00
    bf68:	00003e79 	andeq	r3, r0, r9, ror lr
    bf6c:	000001e6 	andeq	r0, r0, r6, ror #3
    bf70:	0000d101 	andeq	sp, r0, r1, lsl #2
    bf74:	0000dc00 	andeq	sp, r0, r0, lsl #24
    bf78:	01e60900 	mvneq	r0, r0, lsl #18
    bf7c:	f10a0000 	cpsie	,#0
    bf80:	00000001 	andeq	r0, r0, r1
    bf84:	003d2808 	eorseq	r2, sp, r8, lsl #16
    bf88:	11120300 	tstne	r2, r0, lsl #6
    bf8c:	00003e4b 	andeq	r3, r0, fp, asr #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:146
    mpPtr = path;
    bf90:	000001f7 	strdeq	r0, [r0], -r7
    bf94:	0000f501 	andeq	pc, r0, r1, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:148
    TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bf98:	00010000 	andeq	r0, r1, r0
    bf9c:	01e60900 	mvneq	r0, r0, lsl #18
    bfa0:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    bfa4:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    bfa8:	00073f08 	andeq	r3, r7, r8, lsl #30
    bfac:	0a150300 	beq	54cbb4 <_bss_end+0x53af04>
    bfb0:	00003d5c 	andeq	r3, r0, ip, asr sp
    bfb4:	000001da 	ldrdeq	r0, [r0], -sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bfb8:	00011901 	andeq	r1, r1, r1, lsl #18
    bfbc:	00011f00 	andeq	r1, r1, r0, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 1)
    bfc0:	01f90900 	mvnseq	r0, r0, lsl #18
    bfc4:	0b000000 	bleq	bfcc <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x80>
    bfc8:	00000f40 	andeq	r0, r0, r0, asr #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 2)
    bfcc:	200a1803 	andcs	r1, sl, r3, lsl #16
    bfd0:	0100003e 	tsteq	r0, lr, lsr r0
    bfd4:	00000134 	andeq	r0, r0, r4, lsr r1
    bfd8:	0000013a 	andeq	r0, r0, sl, lsr r1
    bfdc:	0001e609 	andeq	lr, r1, r9, lsl #12
    bfe0:	a20b0000 	andge	r0, fp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154
            if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bfe4:	03000018 	movweq	r0, #24
    bfe8:	3d370a1b 	vldmdbcc	r7!, {s0-s26}
    bfec:	4f010000 	svcmi	0x00010000
    bff0:	5a000001 	bpl	bffc <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xb0>
    bff4:	09000001 	stmdbeq	r0, {r0}
    bff8:	000001e6 	andeq	r0, r0, r6, ror #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154 (discriminator 1)
    bffc:	0001da0a 	andeq	sp, r1, sl, lsl #20
    c000:	c50b0000 	strgt	r0, [fp, #-0]
    c004:	0300000f 	movweq	r0, #15
    c008:	3c710a1d 			; <UNDEFINED> instruction: 0x3c710a1d
    c00c:	6f010000 	svcvs	0x00010000
    c010:	84000001 	strhi	r0, [r0], #-1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:157 (discriminator 3)
            tmpName[j] = mpPtr[j];
    c014:	09000001 	stmdbeq	r0, {r0}
    c018:	000001e6 	andeq	r0, r0, r6, ror #3
    c01c:	00005c0a 	andeq	r5, r0, sl, lsl #24
    c020:	005c0a00 	subseq	r0, ip, r0, lsl #20
    c024:	da0a0000 	ble	28c02c <_bss_end+0x27a37c>
    c028:	00000001 	andeq	r0, r0, r1
    c02c:	003e700b 	eorseq	r7, lr, fp
    c030:	0a1f0300 	beq	7ccc38 <_bss_end+0x7baf88>
    c034:	00003d08 	andeq	r3, r0, r8, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 3)
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c038:	00019901 	andeq	r9, r1, r1, lsl #18
    c03c:	0001ae00 	andeq	sl, r1, r0, lsl #28
    c040:	01e60900 	mvneq	r0, r0, lsl #18
    c044:	5c0a0000 	stcpl	0, cr0, [sl], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:160
        tmpName[j] = '\0';
    c048:	0a000000 	beq	c050 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x104>
    c04c:	0000005c 	andeq	r0, r0, ip, asr r0
    c050:	0000250a 	andeq	r2, r0, sl, lsl #10
    c054:	400c0000 	andmi	r0, ip, r0
    c058:	0300003e 	movweq	r0, #62	; 0x3e
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:162
        mpPtr += j;
    c05c:	3ded0a21 			; <UNDEFINED> instruction: 0x3ded0a21
    c060:	bf010000 	svclt	0x00010000
    c064:	09000001 	stmdbeq	r0, {r0}
    c068:	000001e6 	andeq	r0, r0, r6, ror #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:163
        if (mpPtr[0] != '\0')
    c06c:	00005c0a 	andeq	r5, r0, sl, lsl #24
    c070:	005c0a00 	subseq	r0, ip, r0, lsl #20
    c074:	f10a0000 	cpsie	,#0
    c078:	00000001 	andeq	r0, r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:165
            mpPtr += 1;
    c07c:	00910300 	addseq	r0, r1, r0, lsl #6
    c080:	01020000 	mrseq	r0, (UNDEF: 2)
    c084:	00454d02 	subeq	r4, r5, r2, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:168
        tmpNode = node->Find_Child(tmpName);
    c088:	01da0300 	bicseq	r0, sl, r0, lsl #6
    c08c:	040d0000 	streq	r0, [sp], #-0
    c090:	00000091 	muleq	r0, r1, r0
    c094:	0001e603 	andeq	lr, r1, r3, lsl #12
    c098:	2c040d00 	stccs	13, cr0, [r4], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:169
        if (tmpNode)
    c09c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    c0a0:	d5040d04 	strle	r0, [r4, #-3332]	; 0xfffff2fc
    c0a4:	03000001 	movweq	r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:170
            node = tmpNode;
    c0a8:	000001f9 	strdeq	r0, [r0], -r9
    c0ac:	001c440f 	andseq	r4, ip, pc, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:172
        if (tmpNode->driver_idx != NoFilesystemDriver)
    c0b0:	1a060400 	bne	18d0b8 <_bss_end+0x17b408>
    c0b4:	00000080 	andeq	r0, r0, r0, lsl #1
    c0b8:	072c0305 	streq	r0, [ip, -r5, lsl #6]!
    c0bc:	750f0001 	strvc	r0, [pc, #-1]	; c0c3 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x177>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:174
            return gFS_Drivers[tmpNode->driver_idx].driver->Open_File(mpPtr, mode);
    c0c0:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    c0c4:	00801a08 	addeq	r1, r0, r8, lsl #20
    c0c8:	03050000 	movweq	r0, #20480	; 0x5000
    c0cc:	00010730 	andeq	r0, r1, r0, lsr r7
    c0d0:	001d930f 	andseq	r9, sp, pc, lsl #6
    c0d4:	1a0a0400 	bne	28d0dc <_bss_end+0x27b42c>
    c0d8:	00000080 	andeq	r0, r0, r0, lsl #1
    c0dc:	07340305 	ldreq	r0, [r4, -r5, lsl #6]!
    c0e0:	790f0001 	stmdbvc	pc, {r0}	; <UNPREDICTABLE>
    c0e4:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    c0e8:	00801a0c 	addeq	r1, r0, ip, lsl #20
    c0ec:	03050000 	movweq	r0, #20480	; 0x5000
    c0f0:	00010738 	andeq	r0, r1, r8, lsr r7
    c0f4:	00130610 	andseq	r0, r3, r0, lsl r6
    c0f8:	44010700 	strmi	r0, [r1], #-1792	; 0xfffff900
    c0fc:	05000000 	streq	r0, [r0, #-0]
    c100:	027d0c06 	rsbseq	r0, sp, #1536	; 0x600
    c104:	4e110000 	cdpmi	0, 1, cr0, cr1, cr0, {0}
    c108:	0000706f 	andeq	r7, r0, pc, rrx
    c10c:	000f4012 	andeq	r4, pc, r2, lsl r0	; <UNPREDICTABLE>
    c110:	a2120100 	andsge	r0, r2, #0, 2
    c114:	02000018 	andeq	r0, r0, #24
    c118:	00114812 	andseq	r4, r1, r2, lsl r8
    c11c:	3f120300 	svccc	0x00120300
    c120:	04000010 	streq	r0, [r0], #-16
    c124:	10981300 	addsne	r1, r8, r0, lsl #6
    c128:	05050000 	streq	r0, [r5, #-0]
    c12c:	02ae0822 	adceq	r0, lr, #2228224	; 0x220000
    c130:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    c134:	0e240500 	cfsh64eq	mvdx0, mvdx4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:176
        else if (!tmpNode->isDirectory)
    c138:	0000005c 	andeq	r0, r0, ip, asr r0
    c13c:	00791400 	rsbseq	r1, r9, r0, lsl #8
    c140:	5c0e2505 	cfstr32pl	mvfx2, [lr], {5}
    c144:	02000000 	andeq	r0, r0, #0
    c148:	74657314 	strbtvc	r7, [r5], #-788	; 0xfffffcec
    c14c:	0d260500 	cfstr32eq	mvfx0, [r6, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    c150:	00000044 	andeq	r0, r0, r4, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:177
            break;
    c154:	15130004 	ldrne	r0, [r3, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:180
    sMonitor << "failed to open: " << path << "\n";
    c158:	0100000e 	tsteq	r0, lr
    c15c:	c9082a05 	stmdbgt	r8, {r0, r2, r9, fp, sp}
    c160:	14000002 	strne	r0, [r0], #-2
    c164:	00646d63 	rsbeq	r6, r4, r3, ror #26
    c168:	4c162c05 	ldcmi	12, cr2, [r6], {5}
    c16c:	00000002 	andeq	r0, r0, r2
    c170:	408a1300 	addmi	r1, sl, r0, lsl #6
    c174:	05010000 	streq	r0, [r1, #-0]
    c178:	02e40830 	rsceq	r0, r4, #48, 16	; 0x300000
    c17c:	b7070000 	strlt	r0, [r7, -r0]
    c180:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:183
    return nullptr;
    c184:	02ae1c32 	adceq	r1, lr, #12800	; 0x3200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
}
    c188:	00000000 	andeq	r0, r0, r0
    c18c:	000dd913 	andeq	sp, sp, r3, lsl r9
    c190:	36050200 	strcc	r0, [r5], -r0, lsl #4
    c194:	00030c08 	andeq	r0, r3, r8, lsl #24
    c198:	13b70700 			; <UNDEFINED> instruction: 0x13b70700
    c19c:	38050000 	stmdacc	r5, {}	; <UNPREDICTABLE>
    c1a0:	0002ae1c 	andeq	sl, r2, ip, lsl lr
    c1a4:	ef070000 	svc	0x00070000
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c1a8:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    c1ac:	00440d39 	subeq	r0, r4, r9, lsr sp
    c1b0:	00010000 	andeq	r0, r1, r0
    c1b4:	00117613 	andseq	r7, r1, r3, lsl r6
    c1b8:	3d050800 	stccc	8, cr0, [r5, #-0]
    c1bc:	00034108 	andeq	r4, r3, r8, lsl #2
    c1c0:	13b70700 			; <UNDEFINED> instruction: 0x13b70700
    c1c4:	3f050000 	svccc	0x00050000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
    c1c8:	0002ae1c 	andeq	sl, r2, ip, lsl lr
    c1cc:	d5070000 	strle	r0, [r7, #-0]
    c1d0:	0500002c 	streq	r0, [r0, #-44]	; 0xffffffd4
    c1d4:	005c0e40 	subseq	r0, ip, r0, asr #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:8
CFilesystem sFilesystem;
    c1d8:	07010000 	streq	r0, [r1, -r0]
    c1dc:	00000e65 	andeq	r0, r0, r5, ror #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
}
    c1e0:	7d194205 	lfmvc	f4, 4, [r9, #-20]	; 0xffffffec
    c1e4:	03000002 	movweq	r0, #2
    c1e8:	0ec31300 	cdpeq	3, 12, cr1, cr3, cr0, {0}
    c1ec:	050b0000 	streq	r0, [fp, #-0]
    c1f0:	03a40846 			; <UNDEFINED> instruction: 0x03a40846
_GLOBAL__sub_I_sFilesystem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c1f4:	b7070000 	strlt	r0, [r7, -r0]
    c1f8:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    c1fc:	02ae1c48 	adceq	r1, lr, #72, 24	; 0x4800
    c200:	14000000 	strne	r0, [r0], #-0
    c204:	05003178 	streq	r3, [r0, #-376]	; 0xfffffe88
    c208:	005c0e49 	subseq	r0, ip, r9, asr #28
    c20c:	14010000 	strne	r0, [r1], #-0
_ZN11CFilesystem13TFS_Tree_NodeC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:80
    struct TFS_Tree_Node
    c210:	05003179 	streq	r3, [r0, #-377]	; 0xfffffe87
    c214:	005c1249 	subseq	r1, ip, r9, asr #4
    c218:	14030000 	strne	r0, [r3], #-0
    c21c:	4a050077 	bmi	14c400 <_bss_end+0x13a750>
    c220:	00005c0e 	andeq	r5, r0, lr, lsl #24
    c224:	68140500 	ldmdavs	r4, {r8, sl}
    c228:	114a0500 	cmpne	sl, r0, lsl #10
    c22c:	0000005c 	andeq	r0, r0, ip, asr r0
    c230:	0e960707 	cdpeq	7, 9, cr0, cr6, cr7, {0}
    c234:	4b050000 	blmi	14c23c <_bss_end+0x13a58c>
    c238:	0000440d 	andeq	r4, r0, sp, lsl #8
    c23c:	65070900 	strvs	r0, [r7, #-2304]	; 0xfffff700
    c240:	0500000e 	streq	r0, [r0, #-14]
    c244:	00440d4d 	subeq	r0, r4, sp, asr #26
    c248:	000a0000 	andeq	r0, sl, r0
_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    c24c:	6c616815 	stclvs	8, cr6, [r1], #-84	; 0xffffffac
    c250:	0b050600 	bleq	14da58 <_bss_end+0x13bda8>
    c254:	0000045e 	andeq	r0, r0, lr, asr r4
    c258:	00048716 	andeq	r8, r4, r6, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    c25c:	1c070600 	stcne	6, cr0, [r7], {-0}
    c260:	0000008c 	andeq	r0, r0, ip, lsl #1
    c264:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    c268:	0005cc16 	andeq	ip, r5, r6, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    c26c:	1d0a0600 	stcne	6, cr0, [sl, #-0]
    c270:	0000046a 	andeq	r0, r0, sl, ror #8
    c274:	20000000 	andcs	r0, r0, r0
_ZN5IFile4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:43
    virtual uint32_t Read(char* buffer, uint32_t num)
    c278:	00045216 	andeq	r5, r4, r6, lsl r2
    c27c:	1d0d0600 	stcne	6, cr0, [sp, #-0]
    c280:	0000046a 	andeq	r0, r0, sl, ror #8
    c284:	20200000 	eorcs	r0, r0, r0
    c288:	00058a17 	andeq	r8, r5, r7, lsl sl
    c28c:	18100600 	ldmdane	r0, {r9, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:45
        return 0;
    c290:	00000080 	andeq	r0, r0, r0, lsl #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:46
    };
    c294:	03731636 	cmneq	r3, #56623104	; 0x3600000
    c298:	42060000 	andmi	r0, r6, #0
    c29c:	00046a1d 	andeq	r6, r4, sp, lsl sl
    c2a0:	21500000 	cmpcs	r0, r0
_ZN5IFile5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:49
    virtual uint32_t Write(const char* buffer, uint32_t num)
    c2a4:	034a1620 	movteq	r1, #42528	; 0xa620
    c2a8:	71060000 	mrsvc	r0, (UNDEF: 6)
    c2ac:	00046a1d 	andeq	r6, r4, sp, lsl sl
    c2b0:	00b20000 	adcseq	r0, r2, r0
    c2b4:	02b61620 	adcseq	r1, r6, #32, 12	; 0x2000000
    c2b8:	a4060000 	strge	r0, [r6], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:51
        return 0;
    c2bc:	00046a1d 	andeq	r6, r4, sp, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:52
    };
    c2c0:	00b40000 	adcseq	r0, r4, r0
    c2c4:	03641620 	cmneq	r4, #32, 12	; 0x2000000
    c2c8:	b3060000 	movwlt	r0, #24576	; 0x6000
    c2cc:	00046a1d 	andeq	r6, r4, sp, lsl sl
_ZN5IFile5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:54
    virtual bool Close()
    c2d0:	10400000 	subne	r0, r0, r0
    c2d4:	03311620 	teqeq	r1, #32, 12	; 0x2000000
    c2d8:	be060000 	cdplt	0, 0, cr0, cr6, cr0, {0}
    c2dc:	00046a1d 	andeq	r6, r4, sp, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:56
        return true;
    c2e0:	20500000 	subscs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:57
    };
    c2e4:	03ef1620 	mvneq	r1, #32, 12	; 0x2000000
    c2e8:	bf060000 	svclt	0x00060000
    c2ec:	00046a1d 	andeq	r6, r4, sp, lsl sl
    c2f0:	80400000 	subhi	r0, r0, r0
_ZN5IFile5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr)
    c2f4:	045c1620 	ldrbeq	r1, [ip], #-1568	; 0xfffff9e0
    c2f8:	c0060000 	andgt	r0, r6, r0
    c2fc:	00046a1d 	andeq	r6, r4, sp, lsl sl
    c300:	80500000 	subshi	r0, r0, r0
    c304:	b0180020 	andslt	r0, r8, r0, lsr #32
    c308:	02000003 	andeq	r0, r0, #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:61
        return false;
    c30c:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:62
    };
    c310:	63030000 	movwvs	r0, #12288	; 0x3000
    c314:	18000004 	stmdane	r0, {r2}
    c318:	000003c0 	andeq	r0, r0, r0, asr #7
    c31c:	0003d018 	andeq	sp, r3, r8, lsl r0
_Znwj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:42
{
    c320:	03e01800 	mvneq	r1, #0, 16
    c324:	ed180000 	ldc	0, cr0, [r8, #-0]
    c328:	18000003 	stmdane	r0, {r0, r1}
    c32c:	000003fd 	strdeq	r0, [r0], -sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:43
    return sKernelMem.Alloc(size);
    c330:	00040d18 	andeq	r0, r4, r8, lsl sp
    c334:	041d1800 	ldreq	r1, [sp], #-2048	; 0xfffff800
    c338:	2d180000 	ldccs	0, cr0, [r8, #-0]
    c33c:	18000004 	stmdane	r0, {r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:44
}
    c340:	0000043d 	andeq	r0, r0, sp, lsr r4
    c344:	00044d18 	andeq	r4, r4, r8, lsl sp
    c348:	411b1900 	tstmi	fp, r0, lsl #18
    c34c:	04070000 	streq	r0, [r7], #-0
_ZN5IFileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:36
class IFile
    c350:	00073d0b 	andeq	r3, r7, fp, lsl #26
    c354:	41101700 	tstmi	r0, r0, lsl #14
    c358:	07070000 	streq	r0, [r7, -r0]
    c35c:	00006818 	andeq	r6, r0, r8, lsl r8
    c360:	47170600 	ldrmi	r0, [r7, -r0, lsl #12]
    c364:	07000041 	streq	r0, [r0, -r1, asr #32]
    c368:	00681809 	rsbeq	r1, r8, r9, lsl #16
    c36c:	17080000 	strne	r0, [r8, -r0]
    c370:	00004153 	andeq	r4, r0, r3, asr r1
    c374:	68180c07 	ldmdavs	r8, {r0, r1, r2, sl, fp}
    c378:	20000000 	andcs	r0, r0, r0
    c37c:	00413e17 	subeq	r3, r1, r7, lsl lr
    c380:	180e0700 	stmdane	lr, {r8, r9, sl}
_ZN5IFileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    virtual ~IFile() = default;
    c384:	00000068 	andeq	r0, r0, r8, rrx
    c388:	41051780 	smlabbmi	r5, r0, r7, r1
    c38c:	11070000 	mrsne	r0, (UNDEF: 7)
    c390:	0001e114 	andeq	lr, r1, r4, lsl r1
    c394:	a81a0100 	ldmdage	sl, {r8}
    c398:	07000040 	streq	r0, [r0, -r0, asr #32]
    c39c:	07671314 			; <UNDEFINED> instruction: 0x07671314
    c3a0:	02400000 	subeq	r0, r0, #0
	...
    c3ac:	00002f00 	andeq	r2, r0, r0, lsl #30
    c3b0:	00070000 	andeq	r0, r7, r0
    c3b4:	14000007 	strne	r0, [r0], #-7
_ZN5IFileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    c3b8:	147f147f 	ldrbtne	r1, [pc], #-1151	; c3c0 <_ZN5IFileD0Ev+0x8>
    c3bc:	7f2a2400 	svcvc	0x002a2400
    c3c0:	2300122a 	movwcs	r1, #554	; 0x22a
    c3c4:	62640813 	rsbvs	r0, r4, #1245184	; 0x130000
    c3c8:	55493600 	strbpl	r3, [r9, #-1536]	; 0xfffffa00
    c3cc:	00005022 	andeq	r5, r0, r2, lsr #32
    c3d0:	00000305 	andeq	r0, r0, r5, lsl #6
    c3d4:	221c0000 	andscs	r0, ip, #0
    c3d8:	00000041 	andeq	r0, r0, r1, asr #32
    c3dc:	001c2241 	andseq	r2, ip, r1, asr #4
    c3e0:	3e081400 	cfcpyscc	mvf1, mvf8
    c3e4:	08001408 	stmdaeq	r0, {r3, sl, ip}
    c3e8:	08083e08 	stmdaeq	r8, {r3, r9, sl, fp, ip, sp}
_ZN10CGPIO_FileC2Eibb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:21
    CGPIO_File(int pinNo, bool read, bool write)
    c3ec:	a0000000 	andge	r0, r0, r0
    c3f0:	08000060 	stmdaeq	r0, {r5, r6}
    c3f4:	08080808 	stmdaeq	r8, {r3, fp}
    c3f8:	60600000 	rsbvs	r0, r0, r0
    c3fc:	20000000 	andcs	r0, r0, r0
    c400:	02040810 	andeq	r0, r4, #16, 16	; 0x100000
    c404:	49513e00 	ldmdbmi	r1, {r9, sl, fp, ip, sp}^
    c408:	00003e45 	andeq	r3, r0, r5, asr #28
    c40c:	00407f42 	subeq	r7, r0, r2, asr #30
    c410:	51614200 	cmnpl	r1, r0, lsl #4
    c414:	21004649 	tstcs	r0, r9, asr #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:24
    , mWrite(write)
    c418:	314b4541 	cmpcc	fp, r1, asr #10
    c41c:	12141800 	andsne	r1, r4, #0, 16
    c420:	2700107f 	smlsdxcs	r0, pc, r0, r1	; <UNPREDICTABLE>
    c424:	39454545 	stmdbcc	r5, {r0, r2, r6, r8, sl, lr}^
    c428:	494a3c00 	stmdbmi	sl, {sl, fp, ip, sp}^
    c42c:	01003049 	tsteq	r0, r9, asr #32
    c430:	03050971 	movweq	r0, #22897	; 0x5971
    c434:	49493600 	stmdbmi	r9, {r9, sl, ip, sp}^
    c438:	06003649 	streq	r3, [r0], -r9, asr #12
    c43c:	1e294949 	vnmulne.f16	s8, s18, s18	; <UNPREDICTABLE>
    c440:	36360000 	ldrtcc	r0, [r6], -r0
    c444:	00000000 	andeq	r0, r0, r0
    c448:	00003656 	andeq	r3, r0, r6, asr r6
    c44c:	22140800 	andscs	r0, r4, #0, 16
    c450:	14000041 	strne	r0, [r0], #-65	; 0xffffffbf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:27
    }
    c454:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
    c458:	22410000 	subcs	r0, r1, #0
    c45c:	02000814 	andeq	r0, r0, #20, 16	; 0x140000
    c460:	06095101 	streq	r5, [r9], -r1, lsl #2
    c464:	59493200 	stmdbpl	r9, {r9, ip, sp}^
_ZN10CGPIO_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c468:	7c003e51 	stcvc	14, cr3, [r0], {81}	; 0x51
    c46c:	7c121112 	ldfvcs	f1, [r2], {18}
    c470:	49497f00 	stmdbmi	r9, {r8, r9, sl, fp, ip, sp, lr}^
    c474:	3e003649 	cfmadd32cc	mvax2, mvfx3, mvfx0, mvfx9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c478:	22414141 	subcs	r4, r1, #1073741840	; 0x40000010
    c47c:	41417f00 	cmpmi	r1, r0, lsl #30
    c480:	7f001c22 	svcvc	0x00001c22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:32
        Close();
    c484:	41494949 	cmpmi	r9, r9, asr #18
    c488:	09097f00 	stmdbeq	r9, {r8, r9, sl, fp, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c48c:	3e000109 	adfccs	f0, f0, #1.0
    c490:	7a494941 	bvc	125e99c <_bss_end+0x124ccec>
    c494:	08087f00 	stmdaeq	r8, {r8, r9, sl, fp, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c498:	00007f08 	andeq	r7, r0, r8, lsl #30
    c49c:	00417f41 	subeq	r7, r1, r1, asr #30
    c4a0:	41402000 	mrsmi	r2, (UNDEF: 64)
    c4a4:	7f00013f 	svcvc	0x0000013f
    c4a8:	41221408 			; <UNDEFINED> instruction: 0x41221408
_ZN10CGPIO_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c4ac:	40407f00 	submi	r7, r0, r0, lsl #30
    c4b0:	7f004040 	svcvc	0x00004040
    c4b4:	7f020c02 	svcvc	0x00020c02
    c4b8:	08047f00 	stmdaeq	r4, {r8, r9, sl, fp, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c4bc:	3e007f10 	mcrcc	15, 0, r7, cr0, cr0, {0}
    c4c0:	3e414141 	dvfccsm	f4, f1, f1
    c4c4:	09097f00 	stmdbeq	r9, {r8, r9, sl, fp, ip, sp, lr}
    c4c8:	3e000609 	cfmadd32cc	mvax0, mvfx0, mvfx0, mvfx9
    c4cc:	5e215141 	sufplsm	f5, f1, f1
    c4d0:	19097f00 	stmdbne	r9, {r8, r9, sl, fp, ip, sp, lr}
    c4d4:	46004629 	strmi	r4, [r0], -r9, lsr #12
    c4d8:	31494949 	cmpcc	r9, r9, asr #18
    c4dc:	7f010100 	svcvc	0x00010100
_ZN10CGPIO_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:35
    virtual uint32_t Read(char* buffer, uint32_t num) override
    c4e0:	3f000101 	svccc	0x00000101
    c4e4:	3f404040 	svccc	0x00404040
    c4e8:	40201f00 	eormi	r1, r0, r0, lsl #30
    c4ec:	3f001f20 	svccc	0x00001f20
    c4f0:	3f403840 	svccc	0x00403840
    c4f4:	08146300 	ldmdaeq	r4, {r8, r9, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37
        if (num > 0 && buffer != nullptr)
    c4f8:	07006314 	smladeq	r0, r4, r3, r6
    c4fc:	07087008 	streq	r7, [r8, -r8]
    c500:	49516100 	ldmdbmi	r1, {r8, sp, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37 (discriminator 1)
    c504:	00004345 	andeq	r4, r0, r5, asr #6
    c508:	0041417f 	subeq	r4, r1, pc, ror r1
    c50c:	552a5500 	strpl	r5, [sl, #-1280]!	; 0xfffffb00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40
            buffer[0] = sGPIO.Get_Input(mPinNo) ? '1' : '0';
    c510:	0000552a 	andeq	r5, r0, sl, lsr #10
    c514:	007f4141 	rsbseq	r4, pc, r1, asr #2
    c518:	01020400 	tsteq	r2, r0, lsl #8
    c51c:	40000402 	andmi	r0, r0, r2, lsl #8
    c520:	40404040 	submi	r4, r0, r0, asr #32
    c524:	02010000 	andeq	r0, r1, #0
    c528:	20000004 	andcs	r0, r0, r4
    c52c:	78545454 	ldmdavc	r4, {r2, r4, r6, sl, ip, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 1)
    c530:	44487f00 	strbmi	r7, [r8], #-3840	; 0xfffff100
    c534:	38003844 	stmdacc	r0, {r2, r6, fp, ip, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 2)
    c538:	20444444 	subcs	r4, r4, r4, asr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 4)
    c53c:	44443800 	strbmi	r3, [r4], #-2048	; 0xfffff800
    c540:	38007f48 	stmdacc	r0, {r3, r6, r8, r9, sl, fp, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:41 (discriminator 4)
            return 1;
    c544:	18545454 	ldmdane	r4, {r2, r4, r6, sl, ip, lr}^
    c548:	097e0800 	ldmdbeq	lr!, {fp}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:44
        return 0;
    c54c:	18000201 	stmdane	r0, {r0, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:45
    }
    c550:	7ca4a4a4 	cfstrsvc	mvf10, [r4], #656	; 0x290
    c554:	04087f00 	streq	r7, [r8], #-3840	; 0xfffff100
    c558:	00007804 	andeq	r7, r0, r4, lsl #16
    c55c:	00407d44 	subeq	r7, r0, r4, asr #26
_ZN10CGPIO_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:47
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c560:	84804000 	strhi	r4, [r0], #0
    c564:	7f00007d 	svcvc	0x0000007d
    c568:	00442810 	subeq	r2, r4, r0, lsl r8
    c56c:	7f410000 	svcvc	0x00410000
    c570:	7c000040 	stcvc	0, cr0, [r0], {64}	; 0x40
    c574:	78041804 	stmdavc	r4, {r2, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49
        if (num > 0 && buffer != nullptr)
    c578:	04087c00 	streq	r7, [r8], #-3072	; 0xfffff400
    c57c:	38007804 	stmdacc	r0, {r2, fp, ip, sp, lr}
    c580:	38444444 	stmdacc	r4, {r2, r6, sl, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49 (discriminator 1)
    c584:	2424fc00 	strtcs	pc, [r4], #-3072	; 0xfffff400
    c588:	18001824 	stmdane	r0, {r2, r5, fp, ip}
    c58c:	fc182424 	ldc2	4, cr2, [r8], {36}	; 0x24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:52
            sGPIO.Set_Output(mPinNo, (buffer[0] != '0'));
    c590:	04087c00 	streq	r7, [r8], #-3072	; 0xfffff400
    c594:	48000804 	stmdami	r0, {r2, fp}
    c598:	20545454 	subscs	r5, r4, r4, asr r4
    c59c:	443f0400 	ldrtmi	r0, [pc], #-1024	; c5a4 <_ZN10CGPIO_File5WriteEPKcj+0x44>
    c5a0:	3c002040 	stccc	0, cr2, [r0], {64}	; 0x40
    c5a4:	7c204040 	stcvc	0, cr4, [r0], #-256	; 0xffffff00
    c5a8:	40201c00 	eormi	r1, r0, r0, lsl #24
    c5ac:	3c001c20 	stccc	12, cr1, [r0], {32}
    c5b0:	3c403040 	mcrrcc	0, 4, r3, r0, cr0
    c5b4:	10284400 	eorne	r4, r8, r0, lsl #8
    c5b8:	1c004428 	cfstrsne	mvf4, [r0], {40}	; 0x28
    c5bc:	7ca0a0a0 	stcvc	0, cr10, [r0], #640	; 0x280
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:53
            return 1;
    c5c0:	54644400 	strbtpl	r4, [r4], #-1024	; 0xfffffc00
    c5c4:	0000444c 	andeq	r4, r0, ip, asr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:56
        return 0;
    c5c8:	00007708 	andeq	r7, r0, r8, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:57
    }
    c5cc:	7f000000 	svcvc	0x00000000
    c5d0:	00000000 	andeq	r0, r0, r0
    c5d4:	00000877 	andeq	r0, r0, r7, ror r8
    c5d8:	10081000 	andne	r1, r8, r0
_ZN10CGPIO_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:59
    virtual bool Close() override
    c5dc:	00000008 	andeq	r0, r0, r8
    c5e0:	00000000 	andeq	r0, r0, r0
    c5e4:	04ad1800 	strteq	r1, [sp], #2048	; 0x800
    c5e8:	ba180000 	blt	60c5f0 <_bss_end+0x5fa940>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61
        if (!mRead && !mWrite)
    c5ec:	18000004 	stmdane	r0, {r2}
    c5f0:	000004c7 	andeq	r0, r0, r7, asr #9
    c5f4:	0004d418 	andeq	sp, r4, r8, lsl r4
    c5f8:	04e11800 	strbteq	r1, [r1], #2048	; 0x800
    c5fc:	501b0000 	andspl	r0, fp, r0
    c600:	67000000 	strvs	r0, [r0, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61 (discriminator 1)
    c604:	1c000007 	stcne	0, cr0, [r0], {7}
    c608:	00000085 	andeq	r0, r0, r5, lsl #1
    c60c:	0300023f 	movweq	r0, #575	; 0x23f
    c610:	00000756 	andeq	r0, r0, r6, asr r7
    c614:	0004ee18 	andeq	lr, r4, r8, lsl lr
    c618:	01ae1d00 			; <UNDEFINED> instruction: 0x01ae1d00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:62
            return false;
    c61c:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    c620:	00078b06 	andeq	r8, r7, r6, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:65
        sGPIO.Free_Pin(mPinNo, mRead, mWrite);
    c624:	00fcfc00 	rscseq	pc, ip, r0, lsl #24
    c628:	0000b000 	andeq	fp, r0, r0
    c62c:	de9c0100 	fmllee	f0, f4, f0
    c630:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    c634:	0000032c 	andeq	r0, r0, ip, lsr #6
    c638:	000001ec 	andeq	r0, r0, ip, ror #3
    c63c:	1f6c9102 	svcne	0x006c9102
    c640:	68010078 	stmdavs	r1, {r3, r4, r5, r6}
    c644:	00005c29 	andeq	r5, r0, r9, lsr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:66
        mRead = mWrite = false;
    c648:	6a910200 	bvs	fe44ce50 <_bss_end+0xfe43b1a0>
    c64c:	0100791f 	tsteq	r0, pc, lsl r9
    c650:	005c3568 	subseq	r3, ip, r8, ror #10
    c654:	91020000 	mrsls	r0, (UNDEF: 2)
    c658:	74731f68 	ldrbtvc	r1, [r3], #-3944	; 0xfffff098
    c65c:	68010072 	stmdavs	r1, {r1, r4, r5, r6}
    c660:	0001f144 	andeq	pc, r1, r4, asr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:68
        return true;
    c664:	64910200 	ldrvs	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:69
    }
    c668:	00697820 	rsbeq	r7, r9, r0, lsr #16
    c66c:	5c0e6d01 	stcpl	13, cr6, [lr], {1}
    c670:	02000000 	andeq	r0, r0, #0
    c674:	70207691 	mlavc	r0, r1, r6, r7
_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:71
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c678:	01007274 	tsteq	r0, r4, ror r2
    c67c:	01f1116e 	mvnseq	r1, lr, ror #2
    c680:	91020000 	mrsls	r0, (UNDEF: 2)
    c684:	1f1d0070 	svcne	0x001d0070
    c688:	01000001 	tsteq	r0, r1
    c68c:	07f8065d 	ubfxeq	r0, sp, #12, #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:74
        return false;
    c690:	fca40000 	stc2	0, cr0, [r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:75
    }
    c694:	00580000 	subseq	r0, r8, r0
    c698:	9c010000 	stcls	0, cr0, [r1], {-0}
    c69c:	00000814 	andeq	r0, r0, r4, lsl r8
    c6a0:	00032c1e 	andeq	r2, r3, lr, lsl ip
_ZN15CGPIO_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:82
    virtual void On_Register() override
    c6a4:	0001ec00 	andeq	lr, r1, r0, lsl #24
    c6a8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    c6ac:	746b7020 	strbtvc	r7, [fp], #-32	; 0xffffffe0
    c6b0:	23620100 	cmncs	r2, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:85
    }
    c6b4:	000002c9 	andeq	r0, r0, r9, asr #5
    c6b8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    c6bc:	0001841d 	andeq	r8, r1, sp, lsl r4
    c6c0:	063c0100 	ldrteq	r0, [ip], -r0, lsl #2
_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:87
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    c6c4:	0000082e 	andeq	r0, r0, lr, lsr #16
    c6c8:	0000fb3c 	andeq	pc, r0, ip, lsr fp	; <UNPREDICTABLE>
    c6cc:	00000168 	andeq	r0, r0, r8, ror #2
    c6d0:	08809c01 	stmeq	r0, {r0, sl, fp, ip, pc}
    c6d4:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
    c6d8:	ec000003 	stc	0, cr0, [r0], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89
        if (mode != NFile_Open_Mode::Read_Only && mode != NFile_Open_Mode::Write_Only)
    c6dc:	02000001 	andeq	r0, r0, #1
    c6e0:	781f5c91 	ldmdavc	pc, {r0, r4, r7, sl, fp, ip, lr}	; <UNPREDICTABLE>
    c6e4:	273c0100 	ldrcs	r0, [ip, -r0, lsl #2]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89 (discriminator 1)
    c6e8:	0000005c 	andeq	r0, r0, ip, asr r0
    c6ec:	1f5a9102 	svcne	0x005a9102
    c6f0:	3c010079 	stccc	0, cr0, [r1], {121}	; 0x79
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:90
            return nullptr;
    c6f4:	00005c33 	andeq	r5, r0, r3, lsr ip
    c6f8:	58910200 	ldmpl	r1, {r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:94
        int gpionum = atoi(path);
    c6fc:	0100631f 	tsteq	r0, pc, lsl r3
    c700:	00253b3c 	eoreq	r3, r5, ip, lsr fp
    c704:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95
        if (gpionum < 0 || gpionum >= hal::GPIO_Pin_Count)
    c708:	75622057 	strbvc	r2, [r2, #-87]!	; 0xffffffa9
    c70c:	45010066 	strmi	r0, [r1, #-102]	; 0xffffff9a
    c710:	0008800a 	andeq	r8, r8, sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95 (discriminator 1)
    c714:	60910200 	addsvs	r0, r1, r0, lsl #4
    c718:	72747020 	rsbsvc	r7, r4, #32
    c71c:	1e470100 	dvfnes	f0, f7, f0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:96
            return nullptr;
    c720:	00000890 	muleq	r0, r0, r8
    c724:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:98
        if (mode == NFile_Open_Mode::Read_Only)
    c728:	0000251b 	andeq	r2, r0, fp, lsl r5
    c72c:	00089000 	andeq	r9, r8, r0
    c730:	00852100 	addeq	r2, r5, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:100
            if (!sGPIO.Reserve_Pin(gpionum, true, false))
    c734:	00100000 	andseq	r0, r0, r0
    c738:	0341040d 	movteq	r0, #5133	; 0x140d
    c73c:	5a1d0000 	bpl	74c744 <_bss_end+0x73aa94>
    c740:	01000001 	tsteq	r0, r1
    c744:	08b0062d 	ldmeq	r0!, {r0, r2, r3, r5, r9, sl}
    c748:	fa500000 	blx	140c750 <_bss_end+0x13faaa0>
    c74c:	00ec0000 	rsceq	r0, ip, r0
    c750:	9c010000 	stcls	0, cr0, [r1], {-0}
    c754:	000008f5 	strdeq	r0, [r0], -r5
    c758:	00032c1e 	andeq	r2, r3, lr, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:101
                return nullptr;
    c75c:	0001ec00 	andeq	lr, r1, r0, lsl #24
    c760:	6c910200 	lfmvs	f0, 4, [r1], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:103
            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Input);
    c764:	0100781f 	tsteq	r0, pc, lsl r8
    c768:	005c282d 	subseq	r2, ip, sp, lsr #16
    c76c:	91020000 	mrsls	r0, (UNDEF: 2)
    c770:	00791f6a 	rsbseq	r1, r9, sl, ror #30
    c774:	5c342d01 	ldcpl	13, cr2, [r4], #-4
    c778:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:107
            if (!sGPIO.Reserve_Pin(gpionum, false, true))
    c77c:	731f6891 	tstvc	pc, #9502720	; 0x910000
    c780:	01007465 	tsteq	r0, r5, ror #8
    c784:	01da3c2d 	bicseq	r3, sl, sp, lsr #24
    c788:	91020000 	mrsls	r0, (UNDEF: 2)
    c78c:	6b702067 	blvs	1c14930 <_bss_end+0x1c02c80>
    c790:	33010074 	movwcc	r0, #4212	; 0x1074
    c794:	00030c26 	andeq	r0, r3, r6, lsr #24
    c798:	70910200 	addsvc	r0, r1, r0, lsl #4
    c79c:	013a1d00 	teqeq	sl, r0, lsl #26
    c7a0:	22010000 	andcs	r0, r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:108
                return nullptr;
    c7a4:	00090f06 	andeq	r0, r9, r6, lsl #30
    c7a8:	00f9d400 	rscseq	sp, r9, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:110
            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Output);
    c7ac:	00007c00 	andeq	r7, r0, r0, lsl #24
    c7b0:	3a9c0100 	bcc	fe70cbb8 <_bss_end+0xfe6faf08>
    c7b4:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    c7b8:	0000032c 	andeq	r0, r0, ip, lsr #6
    c7bc:	000001ec 	andeq	r0, r0, ip, ror #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:114
        new CGPIO_File(gpionum, mode == NFile_Open_Mode::Read_Only, mode == NFile_Open_Mode::Write_Only);
    c7c0:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    c7c4:	000012ef 	andeq	r1, r0, pc, ror #5
    c7c8:	da202201 	ble	814fd4 <_bss_end+0x803324>
    c7cc:	02000001 	andeq	r0, r0, #1
    c7d0:	70206b91 	mlavc	r0, r1, fp, r6
    c7d4:	0100746b 	tsteq	r0, fp, ror #8
    c7d8:	02e41b27 	rsceq	r1, r4, #39936	; 0x9c00
    c7dc:	91020000 	mrsls	r0, (UNDEF: 2)
    c7e0:	00230074 	eoreq	r0, r3, r4, ror r0
    c7e4:	01000001 	tsteq	r0, r1
    c7e8:	0954061d 	ldmdbeq	r4, {r0, r2, r3, r4, r9, sl}^
    c7ec:	f9ac0000 			; <UNDEFINED> instruction: 0xf9ac0000
    c7f0:	00280000 	eoreq	r0, r8, r0
    c7f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    c7f8:	00000961 	andeq	r0, r0, r1, ror #18
    c7fc:	00032c1e 	andeq	r2, r3, lr, lsl ip
    c800:	0001ff00 	andeq	pc, r1, r0, lsl #30
    c804:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:116
        return f;
    c808:	00dc2400 	sbcseq	r2, ip, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:117
    }
    c80c:	13010000 	movwne	r0, #4096	; 0x1000
    c810:	0001f701 	andeq	pc, r1, r1, lsl #14
    c814:	00097600 	andeq	r7, r9, r0, lsl #12
    c818:	09890000 	stmibeq	r9, {}	; <UNPREDICTABLE>
_ZN13CMonitor_FileC2Ei():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:15
    CMonitor_File(int channel)
    c81c:	2c250000 	stccs	0, cr0, [r5], #-0
    c820:	ec000003 	stc	0, cr0, [r0], {3}
    c824:	25000001 	strcs	r0, [r0, #-1]
    c828:	00002e56 	andeq	r2, r0, r6, asr lr
    c82c:	0000003f 	andeq	r0, r0, pc, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:16
    : mChannel(channel)
    c830:	09612600 	stmdbeq	r1!, {r9, sl, sp}^
    c834:	415e0000 	cmpmi	lr, r0
    c838:	09a40000 	stmibeq	r4!, {}	; <UNPREDICTABLE>
    c83c:	f9600000 			; <UNDEFINED> instruction: 0xf9600000
    c840:	004c0000 	subeq	r0, ip, r0
    c844:	9c010000 	stcls	0, cr0, [r1], {-0}
    c848:	000009ad 	andeq	r0, r0, sp, lsr #19
    c84c:	00097627 	andeq	r7, r9, r7, lsr #12
    c850:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:18
    }
    c854:	00b82800 	adcseq	r2, r8, r0, lsl #16
    c858:	0b010000 	bleq	4c860 <_bss_end+0x3abb0>
    c85c:	0009be01 	andeq	fp, r9, r1, lsl #28
    c860:	09d40000 	ldmibeq	r4, {}^	; <UNPREDICTABLE>
    c864:	2c250000 	stccs	0, cr0, [r5], #-0
_ZN13CMonitor_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c868:	ec000003 	stc	0, cr0, [r0], {3}
    c86c:	29000001 	stmdbcs	r0, {r0}
    c870:	00001e14 	andeq	r1, r0, r4, lsl lr
    c874:	f12a0b01 			; <UNDEFINED> instruction: 0xf12a0b01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c878:	00000001 	andeq	r0, r0, r1
    c87c:	0009ad2a 	andeq	sl, r9, sl, lsr #26
    c880:	00412500 	subeq	r2, r1, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:22
        Close();
    c884:	0009eb00 	andeq	lr, r9, r0, lsl #22
    c888:	00f8f800 	rscseq	pc, r8, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c88c:	00006800 	andeq	r6, r0, r0, lsl #16
    c890:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
    c894:	000009be 			; <UNDEFINED> instruction: 0x000009be
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c898:	27749102 	ldrbcs	r9, [r4, -r2, lsl #2]!
    c89c:	000009c7 	andeq	r0, r0, r7, asr #19
    c8a0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c8a4:	00039900 	andeq	r9, r3, r0, lsl #18
    c8a8:	23000400 	movwcs	r0, #1024	; 0x400
_ZN13CMonitor_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c8ac:	04000036 	streq	r0, [r0], #-54	; 0xffffffca
    c8b0:	00439601 	subeq	r9, r3, r1, lsl #12
    c8b4:	45bc0400 	ldrmi	r0, [ip, #1024]!	; 0x400
    c8b8:	42e30000 	rscmi	r0, r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c8bc:	03380000 	teqeq	r8, #0
    c8c0:	00000000 	andeq	r0, r0, r0
    c8c4:	4b2e0000 	blmi	b8c8cc <_bss_end+0xb7ac1c>
    c8c8:	73020000 	movwvc	r0, #8192	; 0x2000
    c8cc:	05006474 	streq	r6, [r0, #-1140]	; 0xfffffb8c
    c8d0:	00029200 	andeq	r9, r2, r0, lsl #4
    c8d4:	41b60300 			; <UNDEFINED> instruction: 0x41b60300
    c8d8:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    c8dc:	03044101 	movweq	r4, #16641	; 0x4101
_ZN13CMonitor_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:25
    virtual uint32_t Read(char* buffer, uint32_t num) override
    c8e0:	3041011e 	subcc	r0, r1, lr, lsl r1
    c8e4:	05000000 	streq	r0, [r0, #-0]
    c8e8:	000045ac 	andeq	r4, r0, ip, lsr #11
    c8ec:	3d0d3502 	cfstr32cc	mvfx3, [sp, #-8]
    c8f0:	06000002 	streq	r0, [r0], -r2
    c8f4:	000045ae 	andeq	r4, r0, lr, lsr #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:27
        return 0;
    c8f8:	0b500204 	bleq	140d110 <_bss_end+0x13fb460>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:28
    }
    c8fc:	0000022f 	andeq	r0, r0, pc, lsr #4
    c900:	00462d07 	subeq	r2, r6, r7, lsl #26
    c904:	0d520200 	lfmeq	f0, 2, [r2, #-0]
    c908:	000002d3 	ldrdeq	r0, [r0], -r3
_ZN13CMonitor_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:30
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c90c:	45ae0800 	strmi	r0, [lr, #2048]!	; 0x800
    c910:	54020000 	strpl	r0, [r2], #-0
    c914:	0042a610 	subeq	sl, r2, r0, lsl r6
    c918:	0002d500 	andeq	sp, r2, r0, lsl #10
    c91c:	00008000 	andeq	r8, r0, r0
    c920:	00008b00 	andeq	r8, r0, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32
        if (num > 0 && buffer != nullptr)
    c924:	02d50900 	sbcseq	r0, r5, #0, 18
    c928:	d30a0000 	movwle	r0, #40960	; 0xa000
    c92c:	00000002 	andeq	r0, r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32 (discriminator 1)
    c930:	0043860b 	subeq	r8, r3, fp, lsl #12
    c934:	0c560200 	lfmeq	f0, 2, [r6], {-0}
    c938:	000044bb 			; <UNDEFINED> instruction: 0x000044bb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:34
            if (mChannel == 0)
    c93c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c940:	000000a5 	andeq	r0, r0, r5, lsr #1
    c944:	0002d509 	andeq	sp, r2, r9, lsl #10
    c948:	a30b0000 	movwge	r0, #45056	; 0xb000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:36
                sMonitor << buffer;
    c94c:	02000041 	andeq	r0, r0, #65	; 0x41
    c950:	41ef0c57 	mvnmi	r0, r7, asr ip
    c954:	00b90000 	adcseq	r0, r9, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:37
                return num;
    c958:	00bf0000 	adcseq	r0, pc, r0
    c95c:	d5090000 	strle	r0, [r9, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:41
        return 0;
    c960:	00000002 	andeq	r0, r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:42
    }
    c964:	0046e80c 	subeq	lr, r6, ip, lsl #16
    c968:	0d590200 	lfmeq	f0, 2, [r9, #-0]
    c96c:	0000455c 	andeq	r4, r0, ip, asr r5
    c970:	000002d3 	ldrdeq	r0, [r0], -r3
_ZN13CMonitor_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:44
    virtual bool Close() override
    c974:	000000d7 	ldrdeq	r0, [r0], -r7
    c978:	000000dd 	ldrdeq	r0, [r0], -sp
    c97c:	0002db09 	andeq	sp, r2, r9, lsl #22
    c980:	ae0d0000 	cdpge	0, 0, cr0, cr13, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:46
        if (mChannel < 0)
    c984:	02000045 	andeq	r0, r0, #69	; 0x45
    c988:	41c50761 	bicmi	r0, r5, r1, ror #14
    c98c:	02d50000 	sbcseq	r0, r5, #0
    c990:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:47
            return false;
    c994:	fc000000 	stc2	0, cr0, [r0], {-0}
    c998:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:53
        mChannel = -1;
    c99c:	000002d5 	ldrdeq	r0, [r0], -r5
    c9a0:	45ae0d00 	strmi	r0, [lr, #3328]!	; 0xd00
    c9a4:	63020000 	movwvs	r0, #8192	; 0x2000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:55
        return true;
    c9a8:	00417507 	subeq	r7, r1, r7, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:56
    }
    c9ac:	0002d500 	andeq	sp, r2, r0, lsl #10
    c9b0:	01150100 	tsteq	r5, r0, lsl #2
    c9b4:	01200000 			; <UNDEFINED> instruction: 0x01200000
    c9b8:	d5090000 	strle	r0, [r9, #-0]
_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:58
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c9bc:	0a000002 	beq	c9cc <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x10>
    c9c0:	000002e1 	andeq	r0, r0, r1, ror #5
    c9c4:	45ae0d00 	strmi	r0, [lr, #3328]!	; 0xd00
    c9c8:	66020000 	strvs	r0, [r2], -r0
    c9cc:	00460207 	subeq	r0, r6, r7, lsl #4
    c9d0:	0002d500 	andeq	sp, r2, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:60
        if (mChannel == 0)
    c9d4:	01390100 	teqeq	r9, r0, lsl #2
    c9d8:	01440000 	mrseq	r0, (UNDEF: 68)
    c9dc:	d5090000 	strle	r0, [r9, #-0]
    c9e0:	0a000002 	beq	c9f0 <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:62
            return true;
    c9e4:	0000025b 	andeq	r0, r0, fp, asr r2
    c9e8:	45ae0d00 	strmi	r0, [lr, #3328]!	; 0xd00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:65
        return false;
    c9ec:	6a020000 	bvs	8c9f4 <_bss_end+0x7ad44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:66
    }
    c9f0:	00451707 	subeq	r1, r5, r7, lsl #14
    c9f4:	0002d500 	andeq	sp, r2, r0, lsl #10
    c9f8:	015d0100 	cmpeq	sp, r0, lsl #2
    c9fc:	01680000 	cmneq	r8, r0
_ZN18CMonitor_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:72
    virtual void On_Register() override
    ca00:	d5090000 	strle	r0, [r9, #-0]
    ca04:	0a000002 	beq	ca14 <_ZN18CMonitor_FS_Driver11On_RegisterEv+0x14>
    ca08:	000002e7 	andeq	r0, r0, r7, ror #5
    ca0c:	437c0d00 	cmnmi	ip, #0, 26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:74
    }
    ca10:	77020000 	strvc	r0, [r2, -r0]
    ca14:	00422307 	subeq	r2, r2, r7, lsl #6
    ca18:	0002ed00 	andeq	lr, r2, r0, lsl #26
    ca1c:	01810100 	orreq	r0, r1, r0, lsl #2
_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:76
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    ca20:	018c0000 	orreq	r0, ip, r0
    ca24:	d5090000 	strle	r0, [r9, #-0]
    ca28:	0a000002 	beq	ca38 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x18>
    ca2c:	000002e1 	andeq	r0, r0, r1, ror #5
    ca30:	437c0d00 	cmnmi	ip, #0, 26
    ca34:	7b020000 	blvc	8ca3c <_bss_end+0x7ad8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:78
        int channel = atoi(path);
    ca38:	00466c07 	subeq	r6, r6, r7, lsl #24
    ca3c:	0002ed00 	andeq	lr, r2, r0, lsl #26
    ca40:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:79
        if (channel != 0)
    ca44:	01b00000 	movseq	r0, r0
    ca48:	d5090000 	strle	r0, [r9, #-0]
    ca4c:	0a000002 	beq	ca5c <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:80
            return nullptr;
    ca50:	000002e7 	andeq	r0, r0, r7, ror #5
    ca54:	44500d00 	ldrbmi	r0, [r0], #-3328	; 0xfffff300
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:82
        CMonitor_File* f = new CMonitor_File(channel);
    ca58:	82020000 	andhi	r0, r2, #0
    ca5c:	0044ed07 	subeq	lr, r4, r7, lsl #26
    ca60:	0002d300 	andeq	sp, r2, r0, lsl #6
    ca64:	01c90100 	biceq	r0, r9, r0, lsl #2
    ca68:	01d40000 	bicseq	r0, r4, r0
    ca6c:	d5090000 	strle	r0, [r9, #-0]
    ca70:	09000002 	stmdbeq	r0, {r1}
    ca74:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:84
        return f;
    ca78:	45f40e00 	ldrbmi	r0, [r4, #3584]!	; 0xe00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:85
    }
    ca7c:	85020000 	strhi	r0, [r2, #-0]
    ca80:	00434c07 	subeq	r4, r3, r7, lsl #24
    ca84:	01e90100 	mvneq	r0, r0, lsl #2
_ZN21CSegment_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:16
    CSegment_Display_File()
    ca88:	01f40000 	mvnseq	r0, r0
    ca8c:	d5090000 	strle	r0, [r9, #-0]
    ca90:	0a000002 	beq	caa0 <_ZN21CSegment_Display_FileC1Ev+0x18>
    ca94:	000002ed 	andeq	r0, r0, sp, ror #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:17
    : mOpened(true)
    ca98:	45440f00 	strbmi	r0, [r4, #-3840]	; 0xfffff100
    ca9c:	91020000 	mrsls	r0, (UNDEF: 2)
    caa0:	00447b10 	subeq	r7, r4, r0, lsl fp
    caa4:	0002f300 	andeq	pc, r2, r0, lsl #6
    caa8:	020d0100 	andeq	r0, sp, #0, 2
    caac:	02130000 	andseq	r0, r3, #0
    cab0:	db090000 	blle	24cab8 <_bss_end+0x23ae08>
    cab4:	00000002 	andeq	r0, r0, r2
    cab8:	00464110 	subeq	r4, r6, r0, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:20
    }
    cabc:	079a0200 	ldreq	r0, [sl, r0, lsl #4]
    cac0:	000046a9 	andeq	r4, r0, r9, lsr #13
    cac4:	000002fa 	strdeq	r0, [r0], -sl
    cac8:	00022801 	andeq	r2, r2, r1, lsl #16
    cacc:	02db0900 	sbcseq	r0, fp, #0, 18
_ZN21CSegment_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cad0:	00000000 	andeq	r0, r0, r0
    cad4:	00004e11 	andeq	r4, r0, r1, lsl lr
    cad8:	4a021200 	bmi	912e0 <_bss_end+0x7f630>
    cadc:	00024510 	andeq	r4, r2, r0, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cae0:	02120000 	andseq	r0, r2, #0
    cae4:	004e1a3a 	subeq	r1, lr, sl, lsr sl
    cae8:	d1130000 	tstle	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:24
        Close();
    caec:	02000042 	andeq	r0, r0, #66	; 0x42
    caf0:	426a0846 	rsbmi	r0, sl, #4587520	; 0x460000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    caf4:	025b0000 	subseq	r0, fp, #0
    caf8:	4e0a0000 	cdpmi	0, 0, cr0, cr10, cr0, {0}
    cafc:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cb00:	00447114 	subeq	r7, r4, r4, lsl r1
    cb04:	010c0300 	mrseq	r0, LR_mon
    cb08:	0002ce1d 	andeq	ip, r2, sp, lsl lr
    cb0c:	46561500 	ldrbmi	r1, [r6], -r0, lsl #10
    cb10:	68110000 	ldmdavs	r1, {}	; <UNPREDICTABLE>
_ZN21CSegment_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cb14:	14000002 	strne	r0, [r0], #-2
    cb18:	000041be 			; <UNDEFINED> instruction: 0x000041be
    cb1c:	1a010803 	bne	4eb30 <_bss_end+0x3ce80>
    cb20:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cb24:	0044a716 	subeq	sl, r4, r6, lsl r7
    cb28:	0a680400 	beq	1a0db30 <_bss_end+0x19fbe80>
    cb2c:	4251160d 	subsmi	r1, r1, #13631488	; 0xd00000
    cb30:	bc040000 	stclt	0, cr0, [r4], {-0}
    cb34:	17000d0a 	strne	r0, [r0, -sl, lsl #26]
    cb38:	00004552 	andeq	r4, r0, r2, asr r5
    cb3c:	0b012003 	bleq	54b50 <_bss_end+0x42ea0>
    cb40:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    cb44:	0041b603 	subeq	fp, r1, r3, lsl #12
_ZN21CSegment_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:27
    virtual uint32_t Read(char* buffer, uint32_t num) override
    cb48:	01220300 			; <UNDEFINED> instruction: 0x01220300
    cb4c:	22030441 	andcs	r0, r3, #1090519040	; 0x41000000
    cb50:	029f4101 	addseq	r4, pc, #1073741824	; 0x40000000
    cb54:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    cb58:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    cb5c:	04190074 	ldreq	r0, [r9], #-116	; 0xffffff8c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:30
        if (num > 0)
    cb60:	00459607 	subeq	r9, r5, r7, lsl #12
    cb64:	05081900 	streq	r1, [r8, #-2304]	; 0xfffff700
    cb68:	000001c5 	andeq	r0, r0, r5, asr #3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:32
            buffer[0] = sSegment_Display.Read();
    cb6c:	60040819 	andvs	r0, r4, r9, lsl r8
    cb70:	1a000046 	bne	cc90 <_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv+0x28>
    cb74:	0000445f 	andeq	r4, r0, pc, asr r4
    cb78:	041c041b 	ldreq	r0, [ip], #-1051	; 0xfffffbe5
    cb7c:	0000004e 	andeq	r0, r0, lr, asr #32
    cb80:	022f041c 	eoreq	r0, pc, #28, 8	; 0x1c000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:33
            return 1;
    cb84:	041d0000 	ldreq	r0, [sp], #-0
    cb88:	0000022f 	andeq	r0, r0, pc, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:36
        return 0;
    cb8c:	004e041e 	subeq	r0, lr, lr, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:37
    }
    cb90:	041d0000 	ldreq	r0, [sp], #-0
    cb94:	0000004e 	andeq	r0, r0, lr, asr #32
    cb98:	4d020119 	stfmis	f0, [r2, #-100]	; 0xffffff9c
    cb9c:	1c000045 	stcne	0, cr0, [r0], {69}	; 0x45
_ZN21CSegment_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:39
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    cba0:	00026d04 	andeq	r6, r2, r4, lsl #26
    cba4:	08011900 	stmdaeq	r1, {r8, fp, ip}
    cba8:	0000056a 	andeq	r0, r0, sl, ror #10
    cbac:	dc070219 	sfmle	f0, 4, [r7], {25}
    cbb0:	19000003 	stmdbne	r0, {r0, r1}
    cbb4:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42
        for (uint32_t i = 0; i < num; i++)
    cbb8:	08190000 	ldmdaeq	r9, {}	; <UNPREDICTABLE>
    cbbc:	00458c07 	subeq	r8, r5, r7, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 3)
    cbc0:	06011900 	streq	r1, [r1], -r0, lsl #18
    cbc4:	0000056c 	andeq	r0, r0, ip, ror #10
    cbc8:	99050219 	stmdbls	r5, {r0, r3, r4, r9}
    cbcc:	19000005 	stmdbne	r0, {r0, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:43 (discriminator 2)
            sSegment_Display.Write(buffer[i]);
    cbd0:	01ca0504 	biceq	r0, sl, r4, lsl #10
    cbd4:	04190000 	ldreq	r0, [r9], #-0
    cbd8:	0041ae07 	subeq	sl, r1, r7, lsl #28
    cbdc:	10021900 	andne	r1, r2, r0, lsl #18
    cbe0:	000045a3 	andeq	r4, r0, r3, lsr #11
    cbe4:	f9100419 			; <UNDEFINED> instruction: 0xf9100419
    cbe8:	1f000045 	svcne	0x00000045
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cbec:	00004699 	muleq	r0, r9, r6
    cbf0:	90011e01 	andls	r1, r1, r1, lsl #28
    cbf4:	d3000043 	movwle	r0, #67	; 0x43
    cbf8:	ac000002 	stcge	0, cr0, [r0], {2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:45
        return num;
    cbfc:	040000fd 	streq	r0, [r0], #-253	; 0xffffff03
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:46
    }
    cc00:	01000000 	mrseq	r0, (UNDEF: 0)
    cc04:	0003899c 	muleq	r3, ip, r9
    cc08:	7a732000 	bvc	1cd4c10 <_bss_end+0x1cc2f60>
    cc0c:	1d1e0100 	ldfnes	f0, [lr, #-0]
_ZN21CSegment_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:48
    virtual bool Close() override
    cc10:	00000272 	andeq	r0, r0, r2, ror r2
    cc14:	00000004 	andeq	r0, r0, r4
    cc18:	00000000 	andeq	r0, r0, r0
    cc1c:	00fdb021 	rscseq	fp, sp, r1, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:50
        if (!mOpened)
    cc20:	00039000 	andeq	r9, r3, r0
    cc24:	50012200 	andpl	r2, r1, r0, lsl #4
    cc28:	5001f303 	andpl	pc, r1, r3, lsl #6
    cc2c:	01190000 	tsteq	r9, r0
    cc30:	00057308 	andeq	r7, r5, r8, lsl #6
    cc34:	25a92300 	strcs	r2, [r9, #768]!	; 0x300
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:51
            return false;
    cc38:	29430000 	stmdbcs	r3, {}^	; <UNPREDICTABLE>
    cc3c:	7e060000 	cdpvc	0, 0, cr0, cr6, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:53
        sSegment_Display.Close();
    cc40:	0022001a 	eoreq	r0, r2, sl, lsl r0
    cc44:	00020000 	andeq	r0, r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:54
        mOpened = false;
    cc48:	00003855 	andeq	r3, r0, r5, asr r8
    cc4c:	4d300104 	ldfmis	f0, [r0, #-16]!
    cc50:	fdb00000 	ldc2	0, cr0, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:56
        return true;
    cc54:	ffbc0000 			; <UNDEFINED> instruction: 0xffbc0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:57
    }
    cc58:	46ef0000 	strbtmi	r0, [pc], r0
    cc5c:	471f0000 	ldrmi	r0, [pc, -r0]
    cc60:	47870000 	strmi	r0, [r7, r0]
    cc64:	80010000 	andhi	r0, r1, r0
_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cc68:	00000022 	andeq	r0, r0, r2, lsr #32
    cc6c:	38690002 	stmdacc	r9!, {r1}^
    cc70:	01040000 	mrseq	r0, (UNDEF: 4)
    cc74:	00004dad 	andeq	r4, r0, sp, lsr #27
    cc78:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc
    cc7c:	0000ffc0 	andeq	pc, r0, r0, asr #31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:61
        return false;
    cc80:	000046ef 	andeq	r4, r0, pc, ror #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:62
    }
    cc84:	0000471f 	andeq	r4, r0, pc, lsl r7
    cc88:	00004787 	andeq	r4, r0, r7, lsl #15
    cc8c:	032a8001 			; <UNDEFINED> instruction: 0x032a8001
    cc90:	00040000 	andeq	r0, r4, r0
_ZN26CSegment_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:68
    virtual void On_Register() override
    cc94:	0000387d 	andeq	r3, r0, sp, ror r8
    cc98:	48b30104 	ldmmi	r3!, {r2, r8}
    cc9c:	600c0000 	andvs	r0, ip, r0
    cca0:	1f00004a 	svcne	0x0000004a
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:71
    }
    cca4:	0d000047 	stceq	0, cr0, [r0, #-284]	; 0xfffffee4
    cca8:	0200004e 	andeq	r0, r0, #78	; 0x4e
    ccac:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    ccb0:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:73
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    ccb4:	00459607 	subeq	r9, r5, r7, lsl #12
    ccb8:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    ccbc:	000001c5 	andeq	r0, r0, r5, asr #3
    ccc0:	60040803 	andvs	r0, r4, r3, lsl #16
    ccc4:	03000046 	movweq	r0, #70	; 0x46
    ccc8:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:77
        if (!sSegment_Display.Open())
    cccc:	01030000 	mrseq	r0, (UNDEF: 3)
    ccd0:	00056c06 	andeq	r6, r5, r6, lsl #24
    ccd4:	4c150400 	cfldrsmi	mvf0, [r5], {-0}
    ccd8:	01070000 	mrseq	r0, (UNDEF: 7)
    ccdc:	00000039 	andeq	r0, r0, r9, lsr r0
    cce0:	d4061701 	strle	r1, [r6], #-1793	; 0xfffff8ff
    cce4:	05000001 	streq	r0, [r0, #-1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:78
            return nullptr;
    cce8:	000047c2 	andeq	r4, r0, r2, asr #15
    ccec:	4cc40500 	cfstr64mi	mvdx0, [r4], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:80
        CSegment_Display_File* f = new CSegment_Display_File();
    ccf0:	05010000 	streq	r0, [r1, #-0]
    ccf4:	00004995 	muleq	r0, r5, r9
    ccf8:	4a530502 	bmi	14ce108 <_bss_end+0x14bc458>
    ccfc:	05030000 	streq	r0, [r3, #-0]
    cd00:	00004c2e 	andeq	r4, r0, lr, lsr #24
    cd04:	4cd40504 	cfldr64mi	mvdx0, [r4], {4}
    cd08:	05050000 	streq	r0, [r5, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:82
        return f;
    cd0c:	00004c44 	andeq	r4, r0, r4, asr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:83
    }
    cd10:	4a900506 	bmi	fe40e130 <_bss_end+0xfe3fc480>
    cd14:	05070000 	streq	r0, [r7, #-0]
    cd18:	00004bbf 			; <UNDEFINED> instruction: 0x00004bbf
    cd1c:	4bcd0508 	blmi	ff34e144 <_bss_end+0xff33c494>
_ZN20CShift_Register_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:16
    CShift_Register_File()
    cd20:	05090000 	streq	r0, [r9, #-0]
    cd24:	00004bdb 	ldrdeq	r4, [r0], -fp
    cd28:	4ae2050a 	bmi	ff88e158 <_bss_end+0xff87c4a8>
    cd2c:	050b0000 	streq	r0, [fp, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:17
    : mOpened(true)
    cd30:	00004ad2 	ldrdeq	r4, [r0], -r2
    cd34:	47de050c 	ldrbmi	r0, [lr, ip, lsl #10]
    cd38:	050d0000 	streq	r0, [sp, #-0]
    cd3c:	000047f7 	strdeq	r4, [r0], -r7
    cd40:	4ac3050e 	bmi	ff0ce180 <_bss_end+0xff0bc4d0>
    cd44:	050f0000 	streq	r0, [pc, #-0]	; cd4c <_ZN20CShift_Register_FileC1Ev+0x2c>
    cd48:	00004c87 	andeq	r4, r0, r7, lsl #25
    cd4c:	4c040510 	cfstr32mi	mvfx0, [r4], {16}
    cd50:	05110000 	ldreq	r0, [r1, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:20
    }
    cd54:	00004c78 	andeq	r4, r0, r8, ror ip
    cd58:	48a40512 	stmiami	r4!, {r1, r4, r8, sl}
    cd5c:	05130000 	ldreq	r0, [r3, #-0]
    cd60:	00004821 	andeq	r4, r0, r1, lsr #16
    cd64:	47eb0514 			; <UNDEFINED> instruction: 0x47eb0514
_ZN20CShift_Register_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    cd68:	05150000 	ldreq	r0, [r5, #-0]
    cd6c:	00004b61 	andeq	r4, r0, r1, ror #22
    cd70:	48580516 	ldmdami	r8, {r1, r2, r4, r8, sl}^
    cd74:	05170000 	ldreq	r0, [r7, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    cd78:	00004793 	muleq	r0, r3, r7
    cd7c:	4c6a0518 	cfstr64mi	mvdx0, [sl], #-96	; 0xffffffa0
    cd80:	05190000 	ldreq	r0, [r9, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:24
        Close();
    cd84:	00004a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    cd88:	4b79051a 	blmi	1e4e1f8 <_bss_end+0x1e3c548>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    cd8c:	051b0000 	ldreq	r0, [fp, #-0]
    cd90:	0000482c 	andeq	r4, r0, ip, lsr #16
    cd94:	4a38051c 	bmi	e0e20c <_bss_end+0xdfc55c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    cd98:	051d0000 	ldreq	r0, [sp, #-0]
    cd9c:	00004987 	andeq	r4, r0, r7, lsl #19
    cda0:	4bf6051e 	blmi	ffd8e220 <_bss_end+0xffd7c570>
    cda4:	051f0000 	ldreq	r0, [pc, #-0]	; cdac <_ZN20CShift_Register_FileD0Ev>
    cda8:	00004c52 	andeq	r4, r0, r2, asr ip
_ZN20CShift_Register_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    cdac:	4c930520 	cfldr32mi	mvfx0, [r3], {32}
    cdb0:	05210000 	streq	r0, [r1, #-0]!
    cdb4:	00004ca1 	andeq	r4, r0, r1, lsr #25
    cdb8:	4ab60522 	bmi	fed8e248 <_bss_end+0xfed7c598>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    cdbc:	05230000 	streq	r0, [r3, #-0]!
    cdc0:	000049fc 	strdeq	r4, [r0], -ip
    cdc4:	483b0524 	ldmdami	fp!, {r2, r5, r8, sl}
    cdc8:	05250000 	streq	r0, [r5, #-0]!
    cdcc:	00004a83 	andeq	r4, r0, r3, lsl #21
    cdd0:	49a10526 	stmibmi	r1!, {r1, r2, r5, r8, sl}
    cdd4:	05270000 	streq	r0, [r7, #-0]!
    cdd8:	00004c21 	andeq	r4, r0, r1, lsr #24
    cddc:	49b10528 	ldmibmi	r1!, {r3, r5, r8, sl}
_ZN20CShift_Register_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:27
    virtual uint32_t Read(char* buffer, uint32_t num) override
    cde0:	05290000 	streq	r0, [r9, #-0]!
    cde4:	000049c0 	andeq	r4, r0, r0, asr #19
    cde8:	49cf052a 	stmibmi	pc, {r1, r3, r5, r8, sl}^	; <UNPREDICTABLE>
    cdec:	052b0000 	streq	r0, [fp, #-0]!
    cdf0:	000049de 	ldrdeq	r4, [r0], -lr
    cdf4:	496c052c 	stmdbmi	ip!, {r2, r3, r5, r8, sl}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:31
        return 0;
    cdf8:	052d0000 	streq	r0, [sp, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:32
    }
    cdfc:	000049ed 	andeq	r4, r0, sp, ror #19
    ce00:	4bb0052e 	blmi	fec0e2c0 <_bss_end+0xfebfc610>
    ce04:	052f0000 	streq	r0, [pc, #-0]!	; ce0c <_ZN20CShift_Register_File5WriteEPKcj>
    ce08:	00004a0b 	andeq	r4, r0, fp, lsl #20
_ZN20CShift_Register_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:34
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    ce0c:	4a1a0530 	bmi	68e2d4 <_bss_end+0x67c624>
    ce10:	05310000 	ldreq	r0, [r1, #-0]!
    ce14:	000047cc 	andeq	r4, r0, ip, asr #15
    ce18:	4b010532 	blmi	4e2e8 <_bss_end+0x3c638>
    ce1c:	05330000 	ldreq	r0, [r3, #-0]!
    ce20:	00004b11 	andeq	r4, r0, r1, lsl fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38
        for (uint32_t i = 0; i < num; i++)
    ce24:	4b210534 	blmi	84e2fc <_bss_end+0x83c64c>
    ce28:	05350000 	ldreq	r0, [r5, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 3)
    ce2c:	0000495a 	andeq	r4, r0, sl, asr r9
    ce30:	4b310536 	blmi	c4e310 <_bss_end+0xc3c660>
    ce34:	05370000 	ldreq	r0, [r7, #-0]!
    ce38:	00004b41 	andeq	r4, r0, r1, asr #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:39 (discriminator 2)
            sShift_Register.Shift_In(static_cast<uint8_t>(buffer[i]));
    ce3c:	4b510538 	blmi	144e324 <_bss_end+0x143c674>
    ce40:	05390000 	ldreq	r0, [r9, #-0]!
    ce44:	0000484b 	andeq	r4, r0, fp, asr #16
    ce48:	4804053a 	stmdami	r4, {r1, r3, r4, r5, r8, sl}
    ce4c:	053b0000 	ldreq	r0, [fp, #-0]!
    ce50:	00004a29 	andeq	r4, r0, r9, lsr #20
    ce54:	47a3053c 			; <UNDEFINED> instruction: 0x47a3053c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    ce58:	053d0000 	ldreq	r0, [sp, #-0]!
    ce5c:	00004b6c 	andeq	r4, r0, ip, ror #22
    ce60:	8b06003e 	blhi	18cf60 <_bss_end+0x17b2b0>
    ce64:	02000048 	andeq	r0, r0, #72	; 0x48
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:41
        return num;
    ce68:	08026b01 	stmdaeq	r2, {r0, r8, r9, fp, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:42
    }
    ce6c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    ce70:	004a4e07 	subeq	r4, sl, r7, lsl #28
    ce74:	02700100 	rsbseq	r0, r0, #0, 2
    ce78:	00004714 	andeq	r4, r0, r4, lsl r7
_ZN20CShift_Register_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:44
    virtual bool Close() override
    ce7c:	67070000 	strvs	r0, [r7, -r0]
    ce80:	01000049 	tsteq	r0, r9, asr #32
    ce84:	47140271 			; <UNDEFINED> instruction: 0x47140271
    ce88:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:46
        if (!mOpened)
    ce8c:	01d40800 	bicseq	r0, r4, r0, lsl #16
    ce90:	ff090000 			; <UNDEFINED> instruction: 0xff090000
    ce94:	14000001 	strne	r0, [r0], #-1
    ce98:	0a000002 	beq	cea8 <_ZN20CShift_Register_File5CloseEv+0x2c>
    ce9c:	00000024 	andeq	r0, r0, r4, lsr #32
    cea0:	04080011 	streq	r0, [r8], #-17	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:47
            return false;
    cea4:	0b000002 	bleq	ceb4 <_ZN20CShift_Register_File5CloseEv+0x38>
    cea8:	00004aef 	andeq	r4, r0, pc, ror #21
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:49
        sShift_Register.Close();
    ceac:	26027401 	strcs	r7, [r2], -r1, lsl #8
    ceb0:	00000214 	andeq	r0, r0, r4, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:50
        mOpened = false;
    ceb4:	0a3d3a24 	beq	f5b74c <_bss_end+0xf49a9c>
    ceb8:	243d0f3d 	ldrtcs	r0, [sp], #-3901	; 0xfffff0c3
    cebc:	023d323d 	eorseq	r3, sp, #-805306365	; 0xd0000003
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:52
        return true;
    cec0:	133d053d 	teqne	sp, #255852544	; 0xf400000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:53
    }
    cec4:	0c3d0d3d 	ldceq	13, cr0, [sp], #-244	; 0xffffff0c
    cec8:	113d233d 	teqne	sp, sp, lsr r3
    cecc:	013d263d 	teqeq	sp, sp, lsr r6
    ced0:	083d173d 	ldmdaeq	sp!, {r0, r2, r3, r4, r5, r8, r9, sl, ip}
_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:55
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    ced4:	003d093d 	eorseq	r0, sp, sp, lsr r9
    ced8:	07020300 	streq	r0, [r2, -r0, lsl #6]
    cedc:	000003dc 	ldrdeq	r0, [r0], -ip
    cee0:	73080103 	movwvc	r0, #33027	; 0x8103
    cee4:	0c000005 	stceq	0, cr0, [r0], {5}
    cee8:	0259040d 	subseq	r0, r9, #218103808	; 0xd000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:57
        return false;
    ceec:	af0e0000 	svcge	0x000e0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:58
    }
    cef0:	0700004c 	streq	r0, [r0, -ip, asr #32]
    cef4:	00003901 	andeq	r3, r0, r1, lsl #18
    cef8:	04f70200 	ldrbteq	r0, [r7], #512	; 0x200
    cefc:	00029e06 	andeq	r9, r2, r6, lsl #28
_ZN25CShift_Register_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:64
    virtual void On_Register() override
    cf00:	48650500 	stmdami	r5!, {r8, sl}^
    cf04:	05000000 	streq	r0, [r0, #-0]
    cf08:	00004870 	andeq	r4, r0, r0, ror r8
    cf0c:	48820501 	stmmi	r2, {r0, r8, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:67
    }
    cf10:	05020000 	streq	r0, [r2, #-0]
    cf14:	0000489c 	muleq	r0, ip, r8
    cf18:	4be90503 	blmi	ffa4e32c <_bss_end+0xffa3c67c>
    cf1c:	05040000 	streq	r0, [r4, #-0]
_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:69
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cf20:	0000497b 	andeq	r4, r0, fp, ror r9
    cf24:	4ba20505 	blmi	fe88e340 <_bss_end+0xfe87c690>
    cf28:	00060000 	andeq	r0, r6, r0
    cf2c:	99050203 	stmdbls	r5, {r0, r1, r9}
    cf30:	03000005 	movweq	r0, #5
    cf34:	458c0708 	strmi	r0, [ip, #1800]	; 0x708
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:73
        if (!sShift_Register.Open())
    cf38:	04030000 	streq	r0, [r3], #-0
    cf3c:	0047bc04 	subeq	fp, r7, r4, lsl #24
    cf40:	03080300 	movweq	r0, #33536	; 0x8300
    cf44:	000047b4 			; <UNDEFINED> instruction: 0x000047b4
    cf48:	65040803 	strvs	r0, [r4, #-2051]	; 0xfffff7fd
    cf4c:	03000046 	movweq	r0, #70	; 0x46
    cf50:	4b930310 	blmi	fe4cdb98 <_bss_end+0xfe4bbee8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:74
            return nullptr;
    cf54:	8a0f0000 	bhi	3ccf5c <_bss_end+0x3bb2ac>
    cf58:	0300004b 	movweq	r0, #75	; 0x4b
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:76
        CShift_Register_File* f = new CShift_Register_File();
    cf5c:	025a102a 	subseq	r1, sl, #42	; 0x2a
    cf60:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
    cf64:	df000002 	svcle	0x00000002
    cf68:	10000002 	andne	r0, r0, r2
    cf6c:	3bb11100 	blcc	fec51374 <_bss_end+0xfec3f6c4>
    cf70:	2f030000 	svccs	0x00030000
    cf74:	0002d411 	andeq	sp, r2, r1, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:78
        return f;
    cf78:	3be31100 	blcc	ff8d1380 <_bss_end+0xff8bf6d0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:79
    }
    cf7c:	30030000 	andcc	r0, r3, r0
    cf80:	0002d411 	andeq	sp, r2, r1, lsl r4
    cf84:	02c80900 	sbceq	r0, r8, #0, 18
    cf88:	03070000 	movweq	r0, #28672	; 0x7000
_ZN10CTRNG_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:16
    CTRNG_File()
    cf8c:	240a0000 	strcs	r0, [sl], #-0
    cf90:	01000000 	mrseq	r0, (UNDEF: 0)
    cf94:	02df1200 	sbcseq	r1, pc, #0, 4
    cf98:	33040000 	movwcc	r0, #16384	; 0x4000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:17
    {
    cf9c:	02f70a09 	rscseq	r0, r7, #36864	; 0x9000
    cfa0:	03050000 	movweq	r0, #20480	; 0x5000
    cfa4:	00010afc 	strdeq	r0, [r1], -ip
    cfa8:	0002eb12 	andeq	lr, r2, r2, lsl fp
    cfac:	09340400 	ldmdbeq	r4!, {sl}
    cfb0:	0002f70a 	andeq	pc, r2, sl, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:19
    }
    cfb4:	30030500 	andcc	r0, r3, r0, lsl #10
    cfb8:	0000010b 	andeq	r0, r0, fp, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	110e1b0e 	tstne	lr, lr, lsl #22
       c:	10061201 	andne	r1, r6, r1, lsl #4
      10:	02000017 	andeq	r0, r0, #23
      14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
      18:	0b3a0e03 	bleq	e8382c <_bss_end+0xe71b7c>
      1c:	0b390b3b 	bleq	e42d10 <_bss_end+0xe31060>
      20:	06120111 			; <UNDEFINED> instruction: 0x06120111
      24:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      28:	03000019 	movweq	r0, #25
      2c:	0e030139 	mcreq	1, 0, r0, cr3, cr9, {1}
      30:	0b3b0b3a 	bleq	ec2d20 <_bss_end+0xeb1070>
      34:	00001301 	andeq	r1, r0, r1, lsl #6
      38:	3f012e04 	svccc	0x00012e04
      3c:	3a0e0319 	bcc	380ca8 <_bss_end+0x36eff8>
      40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      44:	01193c0b 	tsteq	r9, fp, lsl #24
      48:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
      4c:	13490005 	movtne	r0, #36869	; 0x9005
      50:	16060000 	strne	r0, [r6], -r0
      54:	3a0e0300 	bcc	380c5c <_bss_end+0x36efac>
      58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      5c:	0013490b 	andseq	r4, r3, fp, lsl #18
      60:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
      64:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
      68:	0b3b0b3a 	bleq	ec2d58 <_bss_end+0xeb10a8>
      6c:	13490b39 	movtne	r0, #39737	; 0x9b39
      70:	0000193c 	andeq	r1, r0, ip, lsr r9
      74:	0b000f08 	bleq	3c9c <CPSR_IRQ_INHIBIT+0x3c1c>
      78:	0013490b 	andseq	r4, r3, fp, lsl #18
      7c:	00240900 	eoreq	r0, r4, r0, lsl #18
      80:	0b3e0b0b 	bleq	f82cb4 <_bss_end+0xf71004>
      84:	00000e03 	andeq	r0, r0, r3, lsl #28
      88:	47012e0a 	strmi	r2, [r1, -sl, lsl #28]
      8c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      90:	97184006 	ldrls	r4, [r8, -r6]
      94:	13011942 	movwne	r1, #6466	; 0x1942
      98:	050b0000 	streq	r0, [fp, #-0]
      9c:	02134900 	andseq	r4, r3, #0, 18
      a0:	0c000018 	stceq	0, cr0, [r0], {24}
      a4:	08030005 	stmdaeq	r3, {r0, r2}
      a8:	0b3b0b3a 	bleq	ec2d98 <_bss_end+0xeb10e8>
      ac:	13490b39 	movtne	r0, #39737	; 0x9b39
      b0:	00001802 	andeq	r1, r0, r2, lsl #16
      b4:	0b00240d 	bleq	90f0 <_ZN16CI2C_Transaction11Set_AddressEt+0x18>
      b8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      bc:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
      c0:	1347012e 	movtne	r0, #28974	; 0x712e
      c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
      c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      cc:	00000019 	andeq	r0, r0, r9, lsl r0
      d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
      d4:	030b130e 	movweq	r1, #45838	; 0xb30e
      d8:	110e1b0e 	tstne	lr, lr, lsl #22
      dc:	10061201 	andne	r1, r6, r1, lsl #4
      e0:	02000017 	andeq	r0, r0, #23
      e4:	0b0b0024 	bleq	2c017c <_bss_end+0x2ae4cc>
      e8:	0e030b3e 	vmoveq.16	d3[0], r0
      ec:	24030000 	strcs	r0, [r3], #-0
      f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      f4:	0008030b 	andeq	r0, r8, fp, lsl #6
      f8:	00160400 	andseq	r0, r6, r0, lsl #8
      fc:	0b3a0e03 	bleq	e83910 <_bss_end+0xe71c60>
     100:	0b390b3b 	bleq	e42df4 <_bss_end+0xe31144>
     104:	00001349 	andeq	r1, r0, r9, asr #6
     108:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     10c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     110:	13490035 	movtne	r0, #36917	; 0x9035
     114:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
     118:	3a080301 	bcc	200d24 <_bss_end+0x1ef074>
     11c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     120:	0013010b 	andseq	r0, r3, fp, lsl #2
     124:	00340800 	eorseq	r0, r4, r0, lsl #16
     128:	0b3a0e03 	bleq	e8393c <_bss_end+0xe71c8c>
     12c:	0b390b3b 	bleq	e42e20 <_bss_end+0xe31170>
     130:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     134:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
     138:	34090000 	strcc	r0, [r9], #-0
     13c:	3a0e0300 	bcc	380d44 <_bss_end+0x36f094>
     140:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     144:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     148:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
     14c:	0a000019 	beq	1b8 <CPSR_IRQ_INHIBIT+0x138>
     150:	0e030104 	adfeqs	f0, f3, f4
     154:	0b3e196d 	bleq	f86710 <_bss_end+0xf74a60>
     158:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     15c:	0b3b0b3a 	bleq	ec2e4c <_bss_end+0xeb119c>
     160:	13010b39 	movwne	r0, #6969	; 0x1b39
     164:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     168:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     16c:	0c00000b 	stceq	0, cr0, [r0], {11}
     170:	13470034 	movtne	r0, #28724	; 0x7034
     174:	020d0000 	andeq	r0, sp, #0
     178:	0b0e0301 	bleq	380d84 <_bss_end+0x36f0d4>
     17c:	3b0b3a0b 	blcc	2ce9b0 <_bss_end+0x2bcd00>
     180:	010b390b 	tsteq	fp, fp, lsl #18
     184:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     188:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     18c:	0b3b0b3a 	bleq	ec2e7c <_bss_end+0xeb11cc>
     190:	13490b39 	movtne	r0, #39737	; 0x9b39
     194:	00000b38 	andeq	r0, r0, r8, lsr fp
     198:	3f012e0f 	svccc	0x00012e0f
     19c:	3a0e0319 	bcc	380e08 <_bss_end+0x36f158>
     1a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1a4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     1a8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     1ac:	01136419 	tsteq	r3, r9, lsl r4
     1b0:	10000013 	andne	r0, r0, r3, lsl r0
     1b4:	13490005 	movtne	r0, #36869	; 0x9005
     1b8:	00001934 	andeq	r1, r0, r4, lsr r9
     1bc:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     1c0:	12000013 	andne	r0, r0, #19
     1c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     1c8:	0b3a0e03 	bleq	e839dc <_bss_end+0xe71d2c>
     1cc:	0b390b3b 	bleq	e42ec0 <_bss_end+0xe31210>
     1d0:	0b320e6e 	bleq	c83b90 <_bss_end+0xc71ee0>
     1d4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     1d8:	00001301 	andeq	r1, r0, r1, lsl #6
     1dc:	3f012e13 	svccc	0x00012e13
     1e0:	3a0e0319 	bcc	380e4c <_bss_end+0x36f19c>
     1e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1e8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     1ec:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     1f0:	00136419 	andseq	r6, r3, r9, lsl r4
     1f4:	000f1400 	andeq	r1, pc, r0, lsl #8
     1f8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     1fc:	01150000 	tsteq	r5, r0
     200:	01134901 	tsteq	r3, r1, lsl #18
     204:	16000013 			; <UNDEFINED> instruction: 0x16000013
     208:	13490021 	movtne	r0, #36897	; 0x9021
     20c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     210:	0b001017 	bleq	4274 <CPSR_IRQ_INHIBIT+0x41f4>
     214:	0013490b 	andseq	r4, r3, fp, lsl #18
     218:	00341800 	eorseq	r1, r4, r0, lsl #16
     21c:	0b3a0e03 	bleq	e83a30 <_bss_end+0xe71d80>
     220:	0b390b3b 	bleq	e42f14 <_bss_end+0xe31264>
     224:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     228:	0000193c 	andeq	r1, r0, ip, lsr r9
     22c:	47003419 	smladmi	r0, r9, r4, r3
     230:	3b0b3a13 	blcc	2cea84 <_bss_end+0x2bcdd4>
     234:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     238:	1a000018 	bne	2a0 <CPSR_IRQ_INHIBIT+0x220>
     23c:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     240:	01111934 	tsteq	r1, r4, lsr r9
     244:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     248:	00194296 	mulseq	r9, r6, r2
     24c:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     250:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     254:	06120111 			; <UNDEFINED> instruction: 0x06120111
     258:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     25c:	00130119 	andseq	r0, r3, r9, lsl r1
     260:	00051c00 	andeq	r1, r5, r0, lsl #24
     264:	0b3a0e03 	bleq	e83a78 <_bss_end+0xe71dc8>
     268:	0b390b3b 	bleq	e42f5c <_bss_end+0xe312ac>
     26c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     270:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     274:	3a134701 	bcc	4d1e80 <_bss_end+0x4c01d0>
     278:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     27c:	1113640b 	tstne	r3, fp, lsl #8
     280:	40061201 	andmi	r1, r6, r1, lsl #4
     284:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     288:	00001301 	andeq	r1, r0, r1, lsl #6
     28c:	0300051e 	movweq	r0, #1310	; 0x51e
     290:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     294:	00180219 	andseq	r0, r8, r9, lsl r2
     298:	00051f00 	andeq	r1, r5, r0, lsl #30
     29c:	0b3a0803 	bleq	e822b0 <_bss_end+0xe70600>
     2a0:	0b390b3b 	bleq	e42f94 <_bss_end+0xe312e4>
     2a4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     2a8:	34200000 	strtcc	r0, [r0], #-0
     2ac:	3a0e0300 	bcc	380eb4 <_bss_end+0x36f204>
     2b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     2b8:	21000018 	tstcs	r0, r8, lsl r0
     2bc:	1347012e 	movtne	r0, #28974	; 0x712e
     2c0:	0b3b0b3a 	bleq	ec2fb0 <_bss_end+0xeb1300>
     2c4:	13640b39 	cmnne	r4, #58368	; 0xe400
     2c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     2cc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     2d0:	00130119 	andseq	r0, r3, r9, lsl r1
     2d4:	00342200 	eorseq	r2, r4, r0, lsl #4
     2d8:	0b3a0803 	bleq	e822ec <_bss_end+0xe7063c>
     2dc:	0b390b3b 	bleq	e42fd0 <_bss_end+0xe31320>
     2e0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     2e4:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     2e8:	3a134701 	bcc	4d1ef4 <_bss_end+0x4c0244>
     2ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2f0:	2013640b 	andscs	r6, r3, fp, lsl #8
     2f4:	0013010b 	andseq	r0, r3, fp, lsl #2
     2f8:	00052400 	andeq	r2, r5, r0, lsl #8
     2fc:	13490e03 	movtne	r0, #40451	; 0x9e03
     300:	00001934 	andeq	r1, r0, r4, lsr r9
     304:	03000525 	movweq	r0, #1317	; 0x525
     308:	3b0b3a0e 	blcc	2ceb48 <_bss_end+0x2bce98>
     30c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     310:	26000013 			; <UNDEFINED> instruction: 0x26000013
     314:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     318:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     31c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     320:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     324:	27000019 	smladcs	r0, r9, r0, r0
     328:	13310005 	teqne	r1, #5
     32c:	00001802 	andeq	r1, r0, r2, lsl #16
     330:	01110100 	tsteq	r1, r0, lsl #2
     334:	0b130e25 	bleq	4c3bd0 <_bss_end+0x4b1f20>
     338:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     33c:	01111755 	tsteq	r1, r5, asr r7
     340:	00001710 	andeq	r1, r0, r0, lsl r7
     344:	0b002402 	bleq	9354 <_ZN8CMonitor6ScrollEv+0xe0>
     348:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     34c:	0300000e 	movweq	r0, #14
     350:	13490026 	movtne	r0, #36902	; 0x9026
     354:	24040000 	strcs	r0, [r4], #-0
     358:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     35c:	0008030b 	andeq	r0, r8, fp, lsl #6
     360:	00350500 	eorseq	r0, r5, r0, lsl #10
     364:	00001349 	andeq	r1, r0, r9, asr #6
     368:	03001606 	movweq	r1, #1542	; 0x606
     36c:	3b0b3a0e 	blcc	2cebac <_bss_end+0x2bcefc>
     370:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     374:	07000013 	smladeq	r0, r3, r0, r0
     378:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
     37c:	0b3b0b3a 	bleq	ec306c <_bss_end+0xeb13bc>
     380:	13010b39 	movwne	r0, #6969	; 0x1b39
     384:	34080000 	strcc	r0, [r8], #-0
     388:	3a0e0300 	bcc	380f90 <_bss_end+0x36f2e0>
     38c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     390:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     394:	6c061c19 	stcvs	12, cr1, [r6], {25}
     398:	09000019 	stmdbeq	r0, {r0, r3, r4}
     39c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3a0:	0b3b0b3a 	bleq	ec3090 <_bss_end+0xeb13e0>
     3a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     3a8:	0b1c193c 	bleq	7068a0 <_bss_end+0x6f4bf0>
     3ac:	0000196c 	andeq	r1, r0, ip, ror #18
     3b0:	0301040a 	movweq	r0, #5130	; 0x140a
     3b4:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     3b8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     3bc:	3b0b3a13 	blcc	2cec10 <_bss_end+0x2bcf60>
     3c0:	000b390b 	andeq	r3, fp, fp, lsl #18
     3c4:	00280b00 	eoreq	r0, r8, r0, lsl #22
     3c8:	0b1c0e03 	bleq	703bdc <_bss_end+0x6f1f2c>
     3cc:	340c0000 	strcc	r0, [ip], #-0
     3d0:	00134700 	andseq	r4, r3, r0, lsl #14
     3d4:	00340d00 	eorseq	r0, r4, r0, lsl #26
     3d8:	0b3a0e03 	bleq	e83bec <_bss_end+0xe71f3c>
     3dc:	0b390b3b 	bleq	e430d0 <_bss_end+0xe31420>
     3e0:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
     3e4:	00001802 	andeq	r1, r0, r2, lsl #16
     3e8:	0301020e 	movweq	r0, #4622	; 0x120e
     3ec:	3a0b0b0e 	bcc	2c302c <_bss_end+0x2b137c>
     3f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3f4:	0013010b 	andseq	r0, r3, fp, lsl #2
     3f8:	000d0f00 	andeq	r0, sp, r0, lsl #30
     3fc:	0b3a0e03 	bleq	e83c10 <_bss_end+0xe71f60>
     400:	0b390b3b 	bleq	e430f4 <_bss_end+0xe31444>
     404:	0b381349 	bleq	e05130 <_bss_end+0xdf3480>
     408:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     40c:	03193f01 	tsteq	r9, #1, 30
     410:	3b0b3a0e 	blcc	2cec50 <_bss_end+0x2bcfa0>
     414:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     418:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     41c:	8b193c0b 	blhi	64f450 <_bss_end+0x63d7a0>
     420:	13640b01 	cmnne	r4, #1024	; 0x400
     424:	00001301 	andeq	r1, r0, r1, lsl #6
     428:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     42c:	00193413 	andseq	r3, r9, r3, lsl r4
     430:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     434:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     438:	0b3b0b3a 	bleq	ec3128 <_bss_end+0xeb1478>
     43c:	0e6e0b39 	vmoveq.8	d14[5], r0
     440:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     444:	00001364 	andeq	r1, r0, r4, ror #6
     448:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
     44c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     450:	13490101 	movtne	r0, #37121	; 0x9101
     454:	00001301 	andeq	r1, r0, r1, lsl #6
     458:	49002115 	stmdbmi	r0, {r0, r2, r4, r8, sp}
     45c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     460:	000f1600 	andeq	r1, pc, r0, lsl #12
     464:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     468:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     46c:	03193f01 	tsteq	r9, #1, 30
     470:	3b0b3a08 	blcc	2cec98 <_bss_end+0x2bcfe8>
     474:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     478:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     47c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     480:	00130113 	andseq	r0, r3, r3, lsl r1
     484:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     488:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     48c:	0b3b0b3a 	bleq	ec317c <_bss_end+0xeb14cc>
     490:	0e6e0b39 	vmoveq.8	d14[5], r0
     494:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     498:	13011364 	movwne	r1, #4964	; 0x1364
     49c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     4a0:	03193f01 	tsteq	r9, #1, 30
     4a4:	3b0b3a0e 	blcc	2cece4 <_bss_end+0x2bd034>
     4a8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     4ac:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     4b0:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     4b4:	00130113 	andseq	r0, r3, r3, lsl r1
     4b8:	00101a00 	andseq	r1, r0, r0, lsl #20
     4bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     4c0:	341b0000 	ldrcc	r0, [fp], #-0
     4c4:	3a0e0300 	bcc	3810cc <_bss_end+0x36f41c>
     4c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4cc:	3f13490b 	svccc	0x0013490b
     4d0:	00193c19 	andseq	r3, r9, r9, lsl ip
     4d4:	01041c00 	tsteq	r4, r0, lsl #24
     4d8:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     4dc:	0b0b0b3e 	bleq	2c31dc <_bss_end+0x2b152c>
     4e0:	0b3a1349 	bleq	e8520c <_bss_end+0xe7355c>
     4e4:	0b390b3b 	bleq	e431d8 <_bss_end+0xe31528>
     4e8:	00001301 	andeq	r1, r0, r1, lsl #6
     4ec:	3f012e1d 	svccc	0x00012e1d
     4f0:	3a0e0319 	bcc	38115c <_bss_end+0x36f4ac>
     4f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4f8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     4fc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     500:	00136419 	andseq	r6, r3, r9, lsl r4
     504:	00341e00 	eorseq	r1, r4, r0, lsl #28
     508:	0b3a1347 	bleq	e8522c <_bss_end+0xe7357c>
     50c:	0b390b3b 	bleq	e43200 <_bss_end+0xe31550>
     510:	00001802 	andeq	r1, r0, r2, lsl #16
     514:	03002e1f 	movweq	r2, #3615	; 0xe1f
     518:	1119340e 	tstne	r9, lr, lsl #8
     51c:	40061201 	andmi	r1, r6, r1, lsl #4
     520:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     524:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     528:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
     52c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     530:	96184006 	ldrls	r4, [r8], -r6
     534:	13011942 	movwne	r1, #6466	; 0x1942
     538:	05210000 	streq	r0, [r1, #-0]!
     53c:	3a0e0300 	bcc	381144 <_bss_end+0x36f494>
     540:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     544:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     548:	22000018 	andcs	r0, r0, #24
     54c:	1347012e 	movtne	r0, #28974	; 0x712e
     550:	0b3b0b3a 	bleq	ec3240 <_bss_end+0xeb1590>
     554:	13640b39 	cmnne	r4, #58368	; 0xe400
     558:	06120111 			; <UNDEFINED> instruction: 0x06120111
     55c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     560:	00130119 	andseq	r0, r3, r9, lsl r1
     564:	00052300 	andeq	r2, r5, r0, lsl #6
     568:	13490e03 	movtne	r0, #40451	; 0x9e03
     56c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
     570:	0b240000 	bleq	900578 <_bss_end+0x8ee8c8>
     574:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     578:	25000006 	strcs	r0, [r0, #-6]
     57c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     580:	0b3b0b3a 	bleq	ec3270 <_bss_end+0xeb15c0>
     584:	13490b39 	movtne	r0, #39737	; 0x9b39
     588:	00001802 	andeq	r1, r0, r2, lsl #16
     58c:	03000526 	movweq	r0, #1318	; 0x526
     590:	3b0b3a08 	blcc	2cedb8 <_bss_end+0x2bd108>
     594:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     598:	00180213 	andseq	r0, r8, r3, lsl r2
     59c:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
     5a0:	0b3a1347 	bleq	e852c4 <_bss_end+0xe73614>
     5a4:	0b390b3b 	bleq	e43298 <_bss_end+0xe315e8>
     5a8:	01111364 	tsteq	r1, r4, ror #6
     5ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     5b0:	01194297 			; <UNDEFINED> instruction: 0x01194297
     5b4:	28000013 	stmdacs	r0, {r0, r1, r4}
     5b8:	1347012e 	movtne	r0, #28974	; 0x712e
     5bc:	0b3b0b3a 	bleq	ec32ac <_bss_end+0xeb15fc>
     5c0:	13640b39 	cmnne	r4, #58368	; 0xe400
     5c4:	13010b20 	movwne	r0, #6944	; 0x1b20
     5c8:	05290000 	streq	r0, [r9, #-0]!
     5cc:	490e0300 	stmdbmi	lr, {r8, r9}
     5d0:	00193413 	andseq	r3, r9, r3, lsl r4
     5d4:	00052a00 	andeq	r2, r5, r0, lsl #20
     5d8:	0b3a0e03 	bleq	e83dec <_bss_end+0xe7213c>
     5dc:	0b390b3b 	bleq	e432d0 <_bss_end+0xe31620>
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	31012e2b 	tstcc	r1, fp, lsr #28
     5e8:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     5ec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     5f0:	96184006 	ldrls	r4, [r8], -r6
     5f4:	13011942 	movwne	r1, #6466	; 0x1942
     5f8:	052c0000 	streq	r0, [ip, #-0]!
     5fc:	02133100 	andseq	r3, r3, #0, 2
     600:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
     604:	1347012e 	movtne	r0, #28974	; 0x712e
     608:	0b201364 	bleq	8053a0 <_bss_end+0x7f36f0>
     60c:	00001301 	andeq	r1, r0, r1, lsl #6
     610:	31012e2e 	tstcc	r1, lr, lsr #28
     614:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     618:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     61c:	97184006 	ldrls	r4, [r8, -r6]
     620:	13011942 	movwne	r1, #6466	; 0x1942
     624:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     628:	64134701 	ldrvs	r4, [r3], #-1793	; 0xfffff8ff
     62c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     630:	97184006 	ldrls	r4, [r8, -r6]
     634:	00001942 	andeq	r1, r0, r2, asr #18
     638:	01110100 	tsteq	r1, r0, lsl #2
     63c:	0b130e25 	bleq	4c3ed8 <_bss_end+0x4b2228>
     640:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     644:	01111755 	tsteq	r1, r5, asr r7
     648:	00001710 	andeq	r1, r0, r0, lsl r7
     64c:	03010202 	movweq	r0, #4610	; 0x1202
     650:	3a0b0b0e 	bcc	2c3290 <_bss_end+0x2b15e0>
     654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     658:	0013010b 	andseq	r0, r3, fp, lsl #2
     65c:	01040300 	mrseq	r0, LR_abt
     660:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     664:	0b0b0b3e 	bleq	2c3364 <_bss_end+0x2b16b4>
     668:	0b3a1349 	bleq	e85394 <_bss_end+0xe736e4>
     66c:	0b390b3b 	bleq	e43360 <_bss_end+0xe316b0>
     670:	13010b32 	movwne	r0, #6962	; 0x1b32
     674:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     678:	1c080300 	stcne	3, cr0, [r8], {-0}
     67c:	0500000b 	streq	r0, [r0, #-11]
     680:	13490026 	movtne	r0, #36902	; 0x9026
     684:	13060000 	movwne	r0, #24576	; 0x6000
     688:	0b0e0301 	bleq	381294 <_bss_end+0x36f5e4>
     68c:	3b0b3a0b 	blcc	2ceec0 <_bss_end+0x2bd210>
     690:	010b390b 	tsteq	fp, fp, lsl #18
     694:	07000013 	smladeq	r0, r3, r0, r0
     698:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     69c:	0b3b0b3a 	bleq	ec338c <_bss_end+0xeb16dc>
     6a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6a4:	00000b38 	andeq	r0, r0, r8, lsr fp
     6a8:	03000d08 	movweq	r0, #3336	; 0xd08
     6ac:	3b0b3a0e 	blcc	2ceeec <_bss_end+0x2bd23c>
     6b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6b4:	32193f13 	andscc	r3, r9, #19, 30	; 0x4c
     6b8:	1c193c0b 	ldcne	12, cr3, [r9], {11}
     6bc:	00196c0b 	andseq	r6, r9, fp, lsl #24
     6c0:	000d0900 	andeq	r0, sp, r0, lsl #18
     6c4:	0b3a0e03 	bleq	e83ed8 <_bss_end+0xe72228>
     6c8:	0b390b3b 	bleq	e433bc <_bss_end+0xe3170c>
     6cc:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     6d0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     6d4:	0000196c 	andeq	r1, r0, ip, ror #18
     6d8:	3f012e0a 	svccc	0x00012e0a
     6dc:	3a0e0319 	bcc	381348 <_bss_end+0x36f698>
     6e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6e4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     6e8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     6ec:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
     6f0:	00130113 	andseq	r0, r3, r3, lsl r1
     6f4:	00050b00 	andeq	r0, r5, r0, lsl #22
     6f8:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     6fc:	050c0000 	streq	r0, [ip, #-0]
     700:	00134900 	andseq	r4, r3, r0, lsl #18
     704:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     708:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     70c:	0b3b0b3a 	bleq	ec33fc <_bss_end+0xeb174c>
     710:	0e6e0b39 	vmoveq.8	d14[5], r0
     714:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     718:	13011364 	movwne	r1, #4964	; 0x1364
     71c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     720:	03193f01 	tsteq	r9, #1, 30
     724:	3b0b3a0e 	blcc	2cef64 <_bss_end+0x2bd2b4>
     728:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     72c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     730:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     734:	00130113 	andseq	r0, r3, r3, lsl r1
     738:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
     73c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     740:	0b3b0b3a 	bleq	ec3430 <_bss_end+0xeb1780>
     744:	0e6e0b39 	vmoveq.8	d14[5], r0
     748:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     74c:	00001301 	andeq	r1, r0, r1, lsl #6
     750:	03000d10 	movweq	r0, #3344	; 0xd10
     754:	3b0b3a0e 	blcc	2cef94 <_bss_end+0x2bd2e4>
     758:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     75c:	000b3813 	andeq	r3, fp, r3, lsl r8
     760:	00241100 	eoreq	r1, r4, r0, lsl #2
     764:	0b3e0b0b 	bleq	f83398 <_bss_end+0xf716e8>
     768:	00000e03 	andeq	r0, r0, r3, lsl #28
     76c:	0b000f12 	bleq	43bc <CPSR_IRQ_INHIBIT+0x433c>
     770:	0013490b 	andseq	r4, r3, fp, lsl #18
     774:	00101300 	andseq	r1, r0, r0, lsl #6
     778:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     77c:	35140000 	ldrcc	r0, [r4, #-0]
     780:	00134900 	andseq	r4, r3, r0, lsl #18
     784:	00341500 	eorseq	r1, r4, r0, lsl #10
     788:	0b3a0e03 	bleq	e83f9c <_bss_end+0xe722ec>
     78c:	0b390b3b 	bleq	e43480 <_bss_end+0xe317d0>
     790:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     794:	0000193c 	andeq	r1, r0, ip, lsr r9
     798:	47003416 	smladmi	r0, r6, r4, r3
     79c:	3b0b3a13 	blcc	2ceff0 <_bss_end+0x2bd340>
     7a0:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     7a4:	17000018 	smladne	r0, r8, r0, r0
     7a8:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     7ac:	01111934 	tsteq	r1, r4, lsr r9
     7b0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7b4:	00194296 	mulseq	r9, r6, r2
     7b8:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     7bc:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     7c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     7c4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     7c8:	00130119 	andseq	r0, r3, r9, lsl r1
     7cc:	00051900 	andeq	r1, r5, r0, lsl #18
     7d0:	0b3a0e03 	bleq	e83fe4 <_bss_end+0xe72334>
     7d4:	0b390b3b 	bleq	e434c8 <_bss_end+0xe31818>
     7d8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     7dc:	241a0000 	ldrcs	r0, [sl], #-0
     7e0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7e4:	0008030b 	andeq	r0, r8, fp, lsl #6
     7e8:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     7ec:	0b3a1347 	bleq	e85510 <_bss_end+0xe73860>
     7f0:	0b390b3b 	bleq	e434e4 <_bss_end+0xe31834>
     7f4:	01111364 	tsteq	r1, r4, ror #6
     7f8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7fc:	01194296 			; <UNDEFINED> instruction: 0x01194296
     800:	1c000013 	stcne	0, cr0, [r0], {19}
     804:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     808:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     80c:	00001802 	andeq	r1, r0, r2, lsl #16
     810:	0300341d 	movweq	r3, #1053	; 0x41d
     814:	3b0b3a08 	blcc	2cf03c <_bss_end+0x2bd38c>
     818:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     81c:	00180213 	andseq	r0, r8, r3, lsl r2
     820:	010b1e00 	tsteq	fp, r0, lsl #28
     824:	06120111 			; <UNDEFINED> instruction: 0x06120111
     828:	051f0000 	ldreq	r0, [pc, #-0]	; 830 <CPSR_IRQ_INHIBIT+0x7b0>
     82c:	3a080300 	bcc	201434 <_bss_end+0x1ef784>
     830:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     834:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     838:	20000018 	andcs	r0, r0, r8, lsl r0
     83c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     840:	0b3b0b3a 	bleq	ec3530 <_bss_end+0xeb1880>
     844:	13490b39 	movtne	r0, #39737	; 0x9b39
     848:	1802196c 	stmdane	r2, {r2, r3, r5, r6, r8, fp, ip}
     84c:	34210000 	strtcc	r0, [r1], #-0
     850:	3a0e0300 	bcc	381458 <_bss_end+0x36f7a8>
     854:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     858:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     85c:	22000018 	andcs	r0, r0, #24
     860:	13490101 	movtne	r0, #37121	; 0x9101
     864:	00001301 	andeq	r1, r0, r1, lsl #6
     868:	49002123 	stmdbmi	r0, {r0, r1, r5, r8, sp}
     86c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     870:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     874:	0b3a1347 	bleq	e85598 <_bss_end+0xe738e8>
     878:	0b390b3b 	bleq	e4356c <_bss_end+0xe318bc>
     87c:	01111364 	tsteq	r1, r4, ror #6
     880:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     884:	01194297 			; <UNDEFINED> instruction: 0x01194297
     888:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     88c:	0111010b 	tsteq	r1, fp, lsl #2
     890:	13010612 	movwne	r0, #5650	; 0x1612
     894:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
     898:	3a134701 	bcc	4d24a4 <_bss_end+0x4c07f4>
     89c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8a0:	2013640b 	andscs	r6, r3, fp, lsl #8
     8a4:	0013010b 	andseq	r0, r3, fp, lsl #2
     8a8:	00052700 	andeq	r2, r5, r0, lsl #14
     8ac:	13490e03 	movtne	r0, #40451	; 0x9e03
     8b0:	00001934 	andeq	r1, r0, r4, lsr r9
     8b4:	03000528 	movweq	r0, #1320	; 0x528
     8b8:	3b0b3a0e 	blcc	2cf0f8 <_bss_end+0x2bd448>
     8bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8c0:	29000013 	stmdbcs	r0, {r0, r1, r4}
     8c4:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     8c8:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     8cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     8d0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     8d4:	2a000019 	bcs	940 <CPSR_IRQ_INHIBIT+0x8c0>
     8d8:	13310005 	teqne	r1, #5
     8dc:	00001802 	andeq	r1, r0, r2, lsl #16
     8e0:	01110100 	tsteq	r1, r0, lsl #2
     8e4:	0b130e25 	bleq	4c4180 <_bss_end+0x4b24d0>
     8e8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     8ec:	01111755 	tsteq	r1, r5, asr r7
     8f0:	00001710 	andeq	r1, r0, r0, lsl r7
     8f4:	0b002402 	bleq	9904 <_ZN16CDisplay_SSD13064OpenEii+0x18>
     8f8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     8fc:	0300000e 	movweq	r0, #14
     900:	13490026 	movtne	r0, #36902	; 0x9026
     904:	24040000 	strcs	r0, [r4], #-0
     908:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     90c:	0008030b 	andeq	r0, r8, fp, lsl #6
     910:	00160500 	andseq	r0, r6, r0, lsl #10
     914:	0b3a0e03 	bleq	e84128 <_bss_end+0xe72478>
     918:	0b390b3b 	bleq	e4360c <_bss_end+0xe3195c>
     91c:	00001349 	andeq	r1, r0, r9, asr #6
     920:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     924:	07000013 	smladeq	r0, r3, r0, r0
     928:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
     92c:	0b3b0b3a 	bleq	ec361c <_bss_end+0xeb196c>
     930:	13010b39 	movwne	r0, #6969	; 0x1b39
     934:	34080000 	strcc	r0, [r8], #-0
     938:	3a0e0300 	bcc	381540 <_bss_end+0x36f890>
     93c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     940:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     944:	6c061c19 	stcvs	12, cr1, [r6], {25}
     948:	09000019 	stmdbeq	r0, {r0, r3, r4}
     94c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     950:	0b3b0b3a 	bleq	ec3640 <_bss_end+0xeb1990>
     954:	13490b39 	movtne	r0, #39737	; 0x9b39
     958:	0b1c193c 	bleq	706e50 <_bss_end+0x6f51a0>
     95c:	0000196c 	andeq	r1, r0, ip, ror #18
     960:	0301040a 	movweq	r0, #5130	; 0x140a
     964:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     968:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     96c:	3b0b3a13 	blcc	2cf1c0 <_bss_end+0x2bd510>
     970:	000b390b 	andeq	r3, fp, fp, lsl #18
     974:	00280b00 	eoreq	r0, r8, r0, lsl #22
     978:	0b1c0e03 	bleq	70418c <_bss_end+0x6f24dc>
     97c:	340c0000 	strcc	r0, [ip], #-0
     980:	00134700 	andseq	r4, r3, r0, lsl #14
     984:	00340d00 	eorseq	r0, r4, r0, lsl #26
     988:	0b3a0e03 	bleq	e8419c <_bss_end+0xe724ec>
     98c:	0b390b3b 	bleq	e43680 <_bss_end+0xe319d0>
     990:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
     994:	00001802 	andeq	r1, r0, r2, lsl #16
     998:	0301020e 	movweq	r0, #4622	; 0x120e
     99c:	3a0b0b0e 	bcc	2c35dc <_bss_end+0x2b192c>
     9a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9a4:	0013010b 	andseq	r0, r3, fp, lsl #2
     9a8:	000d0f00 	andeq	r0, sp, r0, lsl #30
     9ac:	0b3a0e03 	bleq	e841c0 <_bss_end+0xe72510>
     9b0:	0b390b3b 	bleq	e436a4 <_bss_end+0xe319f4>
     9b4:	0b381349 	bleq	e056e0 <_bss_end+0xdf3a30>
     9b8:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     9bc:	03193f01 	tsteq	r9, #1, 30
     9c0:	3b0b3a0e 	blcc	2cf200 <_bss_end+0x2bd550>
     9c4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     9c8:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     9cc:	8b193c0b 	blhi	64fa00 <_bss_end+0x63dd50>
     9d0:	13640b01 	cmnne	r4, #1024	; 0x400
     9d4:	00001301 	andeq	r1, r0, r1, lsl #6
     9d8:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     9dc:	00193413 	andseq	r3, r9, r3, lsl r4
     9e0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     9e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     9e8:	0b3b0b3a 	bleq	ec36d8 <_bss_end+0xeb1a28>
     9ec:	0e6e0b39 	vmoveq.8	d14[5], r0
     9f0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     9f4:	13011364 	movwne	r1, #4964	; 0x1364
     9f8:	05130000 	ldreq	r0, [r3, #-0]
     9fc:	00134900 	andseq	r4, r3, r0, lsl #18
     a00:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     a04:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a08:	0b3b0b3a 	bleq	ec36f8 <_bss_end+0xeb1a48>
     a0c:	0e6e0b39 	vmoveq.8	d14[5], r0
     a10:	0b321349 	bleq	c8573c <_bss_end+0xc73a8c>
     a14:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a18:	00001301 	andeq	r1, r0, r1, lsl #6
     a1c:	03002f15 	movweq	r2, #3861	; 0xf15
     a20:	00134908 	andseq	r4, r3, r8, lsl #18
     a24:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
     a28:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a2c:	0b3b0b3a 	bleq	ec371c <_bss_end+0xeb1a6c>
     a30:	0e6e0b39 	vmoveq.8	d14[5], r0
     a34:	0b321349 	bleq	c85760 <_bss_end+0xc73ab0>
     a38:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a3c:	01170000 	tsteq	r7, r0
     a40:	01134901 	tsteq	r3, r1, lsl #18
     a44:	18000013 	stmdane	r0, {r0, r1, r4}
     a48:	13490021 	movtne	r0, #36897	; 0x9021
     a4c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     a50:	0b000f19 	bleq	46bc <CPSR_IRQ_INHIBIT+0x463c>
     a54:	0013490b 	andseq	r4, r3, fp, lsl #18
     a58:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     a5c:	0803193f 	stmdaeq	r3, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     a60:	0b3b0b3a 	bleq	ec3750 <_bss_end+0xeb1aa0>
     a64:	0e6e0b39 	vmoveq.8	d14[5], r0
     a68:	0b321349 	bleq	c85794 <_bss_end+0xc73ae4>
     a6c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a70:	00001301 	andeq	r1, r0, r1, lsl #6
     a74:	3f012e1b 	svccc	0x00012e1b
     a78:	3a0e0319 	bcc	3816e4 <_bss_end+0x36fa34>
     a7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a80:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
     a84:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     a88:	1c000013 	stcne	0, cr0, [r0], {19}
     a8c:	0b0b0010 	bleq	2c0ad4 <_bss_end+0x2aee24>
     a90:	00001349 	andeq	r1, r0, r9, asr #6
     a94:	0300341d 	movweq	r3, #1053	; 0x41d
     a98:	3b0b3a0e 	blcc	2cf2d8 <_bss_end+0x2bd628>
     a9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     aa0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     aa4:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
     aa8:	0e030104 	adfeqs	f0, f3, f4
     aac:	0b3e196d 	bleq	f87068 <_bss_end+0xf753b8>
     ab0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ab4:	0b3b0b3a 	bleq	ec37a4 <_bss_end+0xeb1af4>
     ab8:	13010b39 	movwne	r0, #6969	; 0x1b39
     abc:	281f0000 	ldmdacs	pc, {}	; <UNPREDICTABLE>
     ac0:	1c080300 	stcne	3, cr0, [r8], {-0}
     ac4:	2000000b 	andcs	r0, r0, fp
     ac8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     acc:	0b3a0b0b 	bleq	e83700 <_bss_end+0xe71a50>
     ad0:	0b390b3b 	bleq	e437c4 <_bss_end+0xe31b14>
     ad4:	00001301 	andeq	r1, r0, r1, lsl #6
     ad8:	3f012e21 	svccc	0x00012e21
     adc:	3a0e0319 	bcc	381748 <_bss_end+0x36fa98>
     ae0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ae4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     ae8:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
     aec:	00130113 	andseq	r0, r3, r3, lsl r1
     af0:	000f2200 	andeq	r2, pc, r0, lsl #4
     af4:	00000b0b 	andeq	r0, r0, fp, lsl #22
     af8:	03000d23 	movweq	r0, #3363	; 0xd23
     afc:	3b0b3a08 	blcc	2cf324 <_bss_end+0x2bd674>
     b00:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b04:	000b3813 	andeq	r3, fp, r3, lsl r8
     b08:	00342400 	eorseq	r2, r4, r0, lsl #8
     b0c:	0b3a1347 	bleq	e85830 <_bss_end+0xe73b80>
     b10:	0b390b3b 	bleq	e43804 <_bss_end+0xe31b54>
     b14:	00001802 	andeq	r1, r0, r2, lsl #16
     b18:	03002e25 	movweq	r2, #3621	; 0xe25
     b1c:	1119340e 	tstne	r9, lr, lsl #8
     b20:	40061201 	andmi	r1, r6, r1, lsl #4
     b24:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     b28:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
     b2c:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
     b30:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     b34:	96184006 	ldrls	r4, [r8], -r6
     b38:	13011942 	movwne	r1, #6466	; 0x1942
     b3c:	05270000 	streq	r0, [r7, #-0]!
     b40:	3a0e0300 	bcc	381748 <_bss_end+0x36fa98>
     b44:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b48:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b4c:	28000018 	stmdacs	r0, {r3, r4}
     b50:	1347012e 	movtne	r0, #28974	; 0x712e
     b54:	01111364 	tsteq	r1, r4, ror #6
     b58:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b5c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     b60:	29000013 	stmdbcs	r0, {r0, r1, r4}
     b64:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     b68:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     b6c:	00001802 	andeq	r1, r0, r2, lsl #16
     b70:	0300052a 	movweq	r0, #1322	; 0x52a
     b74:	3b0b3a08 	blcc	2cf39c <_bss_end+0x2bd6ec>
     b78:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b7c:	00180213 	andseq	r0, r8, r3, lsl r2
     b80:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
     b84:	0b3a1347 	bleq	e858a8 <_bss_end+0xe73bf8>
     b88:	0b39053b 	bleq	e4207c <_bss_end+0xe303cc>
     b8c:	01111364 	tsteq	r1, r4, ror #6
     b90:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b94:	01194296 			; <UNDEFINED> instruction: 0x01194296
     b98:	2c000013 	stccs	0, cr0, [r0], {19}
     b9c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     ba0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ba4:	13490b39 	movtne	r0, #39737	; 0x9b39
     ba8:	00001802 	andeq	r1, r0, r2, lsl #16
     bac:	55010b2d 	strpl	r0, [r1, #-2861]	; 0xfffff4d3
     bb0:	00130117 	andseq	r0, r3, r7, lsl r1
     bb4:	010b2e00 	tsteq	fp, r0, lsl #28
     bb8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     bbc:	0b2f0000 	bleq	bc0bc4 <_bss_end+0xbaef14>
     bc0:	00175501 	andseq	r5, r7, r1, lsl #10
     bc4:	00343000 	eorseq	r3, r4, r0
     bc8:	0b3a0e03 	bleq	e843dc <_bss_end+0xe7272c>
     bcc:	0b39053b 	bleq	e420c0 <_bss_end+0xe30410>
     bd0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     bd4:	0b310000 	bleq	c40bdc <_bss_end+0xc2ef2c>
     bd8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     bdc:	00130106 	andseq	r0, r3, r6, lsl #2
     be0:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
     be4:	0b3a1347 	bleq	e85908 <_bss_end+0xe73c58>
     be8:	0b390b3b 	bleq	e438dc <_bss_end+0xe31c2c>
     bec:	01111364 	tsteq	r1, r4, ror #6
     bf0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     bf4:	01194296 			; <UNDEFINED> instruction: 0x01194296
     bf8:	33000013 	movwcc	r0, #19
     bfc:	08030034 	stmdaeq	r3, {r2, r4, r5}
     c00:	0b3b0b3a 	bleq	ec38f0 <_bss_end+0xeb1c40>
     c04:	13490b39 	movtne	r0, #39737	; 0x9b39
     c08:	34340000 	ldrtcc	r0, [r4], #-0
     c0c:	3a0e0300 	bcc	381814 <_bss_end+0x36fb64>
     c10:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c14:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c18:	35000018 	strcc	r0, [r0, #-24]	; 0xffffffe8
     c1c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     c20:	0b3b0b3a 	bleq	ec3910 <_bss_end+0xeb1c60>
     c24:	13490b39 	movtne	r0, #39737	; 0x9b39
     c28:	00001802 	andeq	r1, r0, r2, lsl #16
     c2c:	47012e36 	smladxmi	r1, r6, lr, r2
     c30:	3b0b3a13 	blcc	2cf484 <_bss_end+0x2bd7d4>
     c34:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
     c38:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     c3c:	97184006 	ldrls	r4, [r8, -r6]
     c40:	13011942 	movwne	r1, #6466	; 0x1942
     c44:	05370000 	ldreq	r0, [r7, #-0]!
     c48:	3a0e0300 	bcc	381850 <_bss_end+0x36fba0>
     c4c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c50:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c54:	38000018 	stmdacc	r0, {r3, r4}
     c58:	1347012e 	movtne	r0, #28974	; 0x712e
     c5c:	0b3b0b3a 	bleq	ec394c <_bss_end+0xeb1c9c>
     c60:	13640b39 	cmnne	r4, #58368	; 0xe400
     c64:	13010b20 	movwne	r0, #6944	; 0x1b20
     c68:	05390000 	ldreq	r0, [r9, #-0]!
     c6c:	490e0300 	stmdbmi	lr, {r8, r9}
     c70:	00193413 	andseq	r3, r9, r3, lsl r4
     c74:	00053a00 	andeq	r3, r5, r0, lsl #20
     c78:	0b3a0803 	bleq	e82c8c <_bss_end+0xe70fdc>
     c7c:	0b390b3b 	bleq	e43970 <_bss_end+0xe31cc0>
     c80:	00001349 	andeq	r1, r0, r9, asr #6
     c84:	31012e3b 	tstcc	r1, fp, lsr lr
     c88:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     c8c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     c90:	97184006 	ldrls	r4, [r8, -r6]
     c94:	13011942 	movwne	r1, #6466	; 0x1942
     c98:	053c0000 	ldreq	r0, [ip, #-0]!
     c9c:	02133100 	andseq	r3, r3, #0, 2
     ca0:	3d000018 	stccc	0, cr0, [r0, #-96]	; 0xffffffa0
     ca4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     ca8:	0b3a0e03 	bleq	e844bc <_bss_end+0xe7280c>
     cac:	0b390b3b 	bleq	e439a0 <_bss_end+0xe31cf0>
     cb0:	01110e6e 	tsteq	r1, lr, ror #28
     cb4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     cb8:	00194296 	mulseq	r9, r6, r2
     cbc:	00053e00 	andeq	r3, r5, r0, lsl #28
     cc0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     cc4:	01000000 	mrseq	r0, (UNDEF: 0)
     cc8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     ccc:	0e030b13 	vmoveq.32	d3[0], r0
     cd0:	01110e1b 	tsteq	r1, fp, lsl lr
     cd4:	17100612 			; <UNDEFINED> instruction: 0x17100612
     cd8:	24020000 	strcs	r0, [r2], #-0
     cdc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ce0:	000e030b 	andeq	r0, lr, fp, lsl #6
     ce4:	00240300 	eoreq	r0, r4, r0, lsl #6
     ce8:	0b3e0b0b 	bleq	f8391c <_bss_end+0xf71c6c>
     cec:	00000803 	andeq	r0, r0, r3, lsl #16
     cf0:	03001604 	movweq	r1, #1540	; 0x604
     cf4:	3b0b3a0e 	blcc	2cf534 <_bss_end+0x2bd884>
     cf8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     cfc:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     d00:	13490026 	movtne	r0, #36902	; 0x9026
     d04:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
     d08:	3a080301 	bcc	201914 <_bss_end+0x1efc64>
     d0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d10:	0013010b 	andseq	r0, r3, fp, lsl #2
     d14:	00340700 	eorseq	r0, r4, r0, lsl #14
     d18:	0b3a0e03 	bleq	e8452c <_bss_end+0xe7287c>
     d1c:	0b390b3b 	bleq	e43a10 <_bss_end+0xe31d60>
     d20:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     d24:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
     d28:	34080000 	strcc	r0, [r8], #-0
     d2c:	3a0e0300 	bcc	381934 <_bss_end+0x36fc84>
     d30:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d34:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     d38:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
     d3c:	09000019 	stmdbeq	r0, {r0, r3, r4}
     d40:	13470034 	movtne	r0, #28724	; 0x7034
     d44:	020a0000 	andeq	r0, sl, #0
     d48:	0b0e0301 	bleq	381954 <_bss_end+0x36fca4>
     d4c:	3b0b3a0b 	blcc	2cf580 <_bss_end+0x2bd8d0>
     d50:	010b390b 	tsteq	fp, fp, lsl #18
     d54:	0b000013 	bleq	da8 <CPSR_IRQ_INHIBIT+0xd28>
     d58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     d5c:	0b3b0b3a 	bleq	ec3a4c <_bss_end+0xeb1d9c>
     d60:	13490b39 	movtne	r0, #39737	; 0x9b39
     d64:	00000b38 	andeq	r0, r0, r8, lsr fp
     d68:	3f012e0c 	svccc	0x00012e0c
     d6c:	3a0e0319 	bcc	3819d8 <_bss_end+0x36fd28>
     d70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d74:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     d78:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     d7c:	01136419 	tsteq	r3, r9, lsl r4
     d80:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     d84:	13490005 	movtne	r0, #36869	; 0x9005
     d88:	00001934 	andeq	r1, r0, r4, lsr r9
     d8c:	4900050e 	stmdbmi	r0, {r1, r2, r3, r8, sl}
     d90:	0f000013 	svceq	0x00000013
     d94:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     d98:	0b3a0e03 	bleq	e845ac <_bss_end+0xe728fc>
     d9c:	0b390b3b 	bleq	e43a90 <_bss_end+0xe31de0>
     da0:	0b320e6e 	bleq	c84760 <_bss_end+0xc72ab0>
     da4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     da8:	00001301 	andeq	r1, r0, r1, lsl #6
     dac:	3f012e10 	svccc	0x00012e10
     db0:	3a0e0319 	bcc	381a1c <_bss_end+0x36fd6c>
     db4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     db8:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
     dbc:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     dc0:	11000013 	tstne	r0, r3, lsl r0
     dc4:	0b0b000f 	bleq	2c0e08 <_bss_end+0x2af158>
     dc8:	00001349 	andeq	r1, r0, r9, asr #6
     dcc:	03003412 	movweq	r3, #1042	; 0x412
     dd0:	3b0b3a0e 	blcc	2cf610 <_bss_end+0x2bd960>
     dd4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     dd8:	3c193f13 	ldccc	15, cr3, [r9], {19}
     ddc:	13000019 	movwne	r0, #25
     de0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     de4:	0b3b0b3a 	bleq	ec3ad4 <_bss_end+0xeb1e24>
     de8:	13490b39 	movtne	r0, #39737	; 0x9b39
     dec:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     df0:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     df4:	03193f01 	tsteq	r9, #1, 30
     df8:	3b0b3a0e 	blcc	2cf638 <_bss_end+0x2bd988>
     dfc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     e00:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     e04:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     e08:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     e0c:	13490101 	movtne	r0, #37121	; 0x9101
     e10:	00001301 	andeq	r1, r0, r1, lsl #6
     e14:	49002116 	stmdbmi	r0, {r1, r2, r4, r8, sp}
     e18:	000b2f13 	andeq	r2, fp, r3, lsl pc
     e1c:	00341700 	eorseq	r1, r4, r0, lsl #14
     e20:	0b3a1347 	bleq	e85b44 <_bss_end+0xe73e94>
     e24:	0b390b3b 	bleq	e43b18 <_bss_end+0xe31e68>
     e28:	00001802 	andeq	r1, r0, r2, lsl #16
     e2c:	47003418 	smladmi	r0, r8, r4, r3
     e30:	3b0b3a13 	blcc	2cf684 <_bss_end+0x2bd9d4>
     e34:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     e38:	0018020e 	andseq	r0, r8, lr, lsl #4
     e3c:	002e1900 	eoreq	r1, lr, r0, lsl #18
     e40:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     e44:	06120111 			; <UNDEFINED> instruction: 0x06120111
     e48:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     e4c:	1a000019 	bne	eb8 <CPSR_IRQ_INHIBIT+0xe38>
     e50:	0e03012e 	adfeqsp	f0, f3, #0.5
     e54:	01111934 	tsteq	r1, r4, lsr r9
     e58:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     e5c:	01194296 			; <UNDEFINED> instruction: 0x01194296
     e60:	1b000013 	blne	eb4 <CPSR_IRQ_INHIBIT+0xe34>
     e64:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     e68:	0b3b0b3a 	bleq	ec3b58 <_bss_end+0xeb1ea8>
     e6c:	13490b39 	movtne	r0, #39737	; 0x9b39
     e70:	00001802 	andeq	r1, r0, r2, lsl #16
     e74:	47012e1c 	smladmi	r1, ip, lr, r2
     e78:	3b0b3a13 	blcc	2cf6cc <_bss_end+0x2bda1c>
     e7c:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
     e80:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e84:	97184006 	ldrls	r4, [r8, -r6]
     e88:	13011942 	movwne	r1, #6466	; 0x1942
     e8c:	051d0000 	ldreq	r0, [sp, #-0]
     e90:	490e0300 	stmdbmi	lr, {r8, r9}
     e94:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
     e98:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
     e9c:	1347012e 	movtne	r0, #28974	; 0x712e
     ea0:	0b3b0b3a 	bleq	ec3b90 <_bss_end+0xeb1ee0>
     ea4:	13640b39 	cmnne	r4, #58368	; 0xe400
     ea8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     eac:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     eb0:	00130119 	andseq	r0, r3, r9, lsl r1
     eb4:	00051f00 	andeq	r1, r5, r0, lsl #30
     eb8:	0b3a0803 	bleq	e82ecc <_bss_end+0xe7121c>
     ebc:	0b390b3b 	bleq	e43bb0 <_bss_end+0xe31f00>
     ec0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     ec4:	34200000 	strtcc	r0, [r0], #-0
     ec8:	3a080300 	bcc	201ad0 <_bss_end+0x1efe20>
     ecc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ed0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ed4:	21000018 	tstcs	r0, r8, lsl r0
     ed8:	1347012e 	movtne	r0, #28974	; 0x712e
     edc:	0b3b0b3a 	bleq	ec3bcc <_bss_end+0xeb1f1c>
     ee0:	13640b39 	cmnne	r4, #58368	; 0xe400
     ee4:	13010b20 	movwne	r0, #6944	; 0x1b20
     ee8:	05220000 	streq	r0, [r2, #-0]!
     eec:	490e0300 	stmdbmi	lr, {r8, r9}
     ef0:	00193413 	andseq	r3, r9, r3, lsl r4
     ef4:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     ef8:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
     efc:	01111364 	tsteq	r1, r4, ror #6
     f00:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     f04:	00194297 	mulseq	r9, r7, r2
     f08:	00052400 	andeq	r2, r5, r0, lsl #8
     f0c:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     f10:	01000000 	mrseq	r0, (UNDEF: 0)
     f14:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     f18:	0e030b13 	vmoveq.32	d3[0], r0
     f1c:	01110e1b 	tsteq	r1, fp, lsl lr
     f20:	17100612 			; <UNDEFINED> instruction: 0x17100612
     f24:	24020000 	strcs	r0, [r2], #-0
     f28:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     f2c:	000e030b 	andeq	r0, lr, fp, lsl #6
     f30:	00240300 	eoreq	r0, r4, r0, lsl #6
     f34:	0b3e0b0b 	bleq	f83b68 <_bss_end+0xf71eb8>
     f38:	00000803 	andeq	r0, r0, r3, lsl #16
     f3c:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     f40:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     f44:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     f48:	0b3b0b3a 	bleq	ec3c38 <_bss_end+0xeb1f88>
     f4c:	13490b39 	movtne	r0, #39737	; 0x9b39
     f50:	26060000 	strcs	r0, [r6], -r0
     f54:	00134900 	andseq	r4, r3, r0, lsl #18
     f58:	01390700 	teqeq	r9, r0, lsl #14
     f5c:	0b3a0803 	bleq	e82f70 <_bss_end+0xe712c0>
     f60:	0b390b3b 	bleq	e43c54 <_bss_end+0xe31fa4>
     f64:	00001301 	andeq	r1, r0, r1, lsl #6
     f68:	03003408 	movweq	r3, #1032	; 0x408
     f6c:	3b0b3a0e 	blcc	2cf7ac <_bss_end+0x2bdafc>
     f70:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f74:	1c193c13 	ldcne	12, cr3, [r9], {19}
     f78:	00196c06 	andseq	r6, r9, r6, lsl #24
     f7c:	00340900 	eorseq	r0, r4, r0, lsl #18
     f80:	0b3a0e03 	bleq	e84794 <_bss_end+0xe72ae4>
     f84:	0b390b3b 	bleq	e43c78 <_bss_end+0xe31fc8>
     f88:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     f8c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
     f90:	340a0000 	strcc	r0, [sl], #-0
     f94:	00134700 	andseq	r4, r3, r0, lsl #14
     f98:	01040b00 	tsteq	r4, r0, lsl #22
     f9c:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     fa0:	0b0b0b3e 	bleq	2c3ca0 <_bss_end+0x2b1ff0>
     fa4:	0b3a1349 	bleq	e85cd0 <_bss_end+0xe74020>
     fa8:	0b390b3b 	bleq	e43c9c <_bss_end+0xe31fec>
     fac:	00001301 	andeq	r1, r0, r1, lsl #6
     fb0:	0300280c 	movweq	r2, #2060	; 0x80c
     fb4:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     fb8:	01020d00 	tsteq	r2, r0, lsl #26
     fbc:	0b0b0e03 	bleq	2c47d0 <_bss_end+0x2b2b20>
     fc0:	0b3b0b3a 	bleq	ec3cb0 <_bss_end+0xeb2000>
     fc4:	13010b39 	movwne	r0, #6969	; 0x1b39
     fc8:	0d0e0000 	stceq	0, cr0, [lr, #-0]
     fcc:	3a0e0300 	bcc	381bd4 <_bss_end+0x36ff24>
     fd0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fd4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     fd8:	0f00000b 	svceq	0x0000000b
     fdc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     fe0:	0b3a0e03 	bleq	e847f4 <_bss_end+0xe72b44>
     fe4:	0b390b3b 	bleq	e43cd8 <_bss_end+0xe32028>
     fe8:	13490e6e 	movtne	r0, #40558	; 0x9e6e
     fec:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     ff0:	13011364 	movwne	r1, #4964	; 0x1364
     ff4:	05100000 	ldreq	r0, [r0, #-0]
     ff8:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
     ffc:	11000019 	tstne	r0, r9, lsl r0
    1000:	13490005 	movtne	r0, #36869	; 0x9005
    1004:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    1008:	03193f01 	tsteq	r9, #1, 30
    100c:	3b0b3a0e 	blcc	2cf84c <_bss_end+0x2bdb9c>
    1010:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1014:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    1018:	01136419 	tsteq	r3, r9, lsl r4
    101c:	13000013 	movwne	r0, #19
    1020:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1024:	0b3a0e03 	bleq	e84838 <_bss_end+0xe72b88>
    1028:	0b390b3b 	bleq	e43d1c <_bss_end+0xe3206c>
    102c:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1030:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1034:	00001364 	andeq	r1, r0, r4, ror #6
    1038:	0b000f14 	bleq	4c90 <CPSR_IRQ_INHIBIT+0x4c10>
    103c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1040:	01011500 	tsteq	r1, r0, lsl #10
    1044:	13011349 	movwne	r1, #4937	; 0x1349
    1048:	21160000 	tstcs	r6, r0
    104c:	2f134900 	svccs	0x00134900
    1050:	1700000b 	strne	r0, [r0, -fp]
    1054:	0b0b0010 	bleq	2c109c <_bss_end+0x2af3ec>
    1058:	00001349 	andeq	r1, r0, r9, asr #6
    105c:	03003418 	movweq	r3, #1048	; 0x418
    1060:	3b0b3a0e 	blcc	2cf8a0 <_bss_end+0x2bdbf0>
    1064:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1068:	3c193f13 	ldccc	15, cr3, [r9], {19}
    106c:	19000019 	stmdbne	r0, {r0, r3, r4}
    1070:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1074:	0b3a0e03 	bleq	e84888 <_bss_end+0xe72bd8>
    1078:	0b390b3b 	bleq	e43d6c <_bss_end+0xe320bc>
    107c:	0b320e6e 	bleq	c84a3c <_bss_end+0xc72d8c>
    1080:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1084:	341a0000 	ldrcc	r0, [sl], #-0
    1088:	3a134700 	bcc	4d2c90 <_bss_end+0x4c0fe0>
    108c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1090:	0018020b 	andseq	r0, r8, fp, lsl #4
    1094:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    1098:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    109c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    10a4:	1c000019 	stcne	0, cr0, [r0], {25}
    10a8:	0e03012e 	adfeqsp	f0, f3, #0.5
    10ac:	01111934 	tsteq	r1, r4, lsr r9
    10b0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    10b4:	01194296 			; <UNDEFINED> instruction: 0x01194296
    10b8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    10bc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    10c0:	0b3b0b3a 	bleq	ec3db0 <_bss_end+0xeb2100>
    10c4:	13490b39 	movtne	r0, #39737	; 0x9b39
    10c8:	00001802 	andeq	r1, r0, r2, lsl #16
    10cc:	47012e1e 	smladmi	r1, lr, lr, r2
    10d0:	3b0b3a13 	blcc	2cf924 <_bss_end+0x2bdc74>
    10d4:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    10d8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    10dc:	96184006 	ldrls	r4, [r8], -r6
    10e0:	13011942 	movwne	r1, #6466	; 0x1942
    10e4:	051f0000 	ldreq	r0, [pc, #-0]	; 10ec <CPSR_IRQ_INHIBIT+0x106c>
    10e8:	490e0300 	stmdbmi	lr, {r8, r9}
    10ec:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    10f0:	20000018 	andcs	r0, r0, r8, lsl r0
    10f4:	08030034 	stmdaeq	r3, {r2, r4, r5}
    10f8:	0b3b0b3a 	bleq	ec3de8 <_bss_end+0xeb2138>
    10fc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1100:	00001802 	andeq	r1, r0, r2, lsl #16
    1104:	11010b21 	tstne	r1, r1, lsr #22
    1108:	00061201 	andeq	r1, r6, r1, lsl #4
    110c:	00052200 	andeq	r2, r5, r0, lsl #4
    1110:	0b3a0803 	bleq	e83124 <_bss_end+0xe71474>
    1114:	0b390b3b 	bleq	e43e08 <_bss_end+0xe32158>
    1118:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    111c:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    1120:	3a134701 	bcc	4d2d2c <_bss_end+0x4c107c>
    1124:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1128:	1113640b 	tstne	r3, fp, lsl #8
    112c:	40061201 	andmi	r1, r6, r1, lsl #4
    1130:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1134:	00001301 	andeq	r1, r0, r1, lsl #6
    1138:	47012e24 	strmi	r2, [r1, -r4, lsr #28]
    113c:	3b0b3a13 	blcc	2cf990 <_bss_end+0x2bdce0>
    1140:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    1144:	010b2013 	tsteq	fp, r3, lsl r0
    1148:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    114c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1150:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1154:	05260000 	streq	r0, [r6, #-0]!
    1158:	3a0e0300 	bcc	381d60 <_bss_end+0x3700b0>
    115c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1160:	0013490b 	andseq	r4, r3, fp, lsl #18
    1164:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    1168:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
    116c:	01111364 	tsteq	r1, r4, ror #6
    1170:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1174:	00194297 	mulseq	r9, r7, r2
    1178:	00052800 	andeq	r2, r5, r0, lsl #16
    117c:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    1180:	01000000 	mrseq	r0, (UNDEF: 0)
    1184:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1188:	0e030b13 	vmoveq.32	d3[0], r0
    118c:	01110e1b 	tsteq	r1, fp, lsl lr
    1190:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1194:	24020000 	strcs	r0, [r2], #-0
    1198:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    119c:	000e030b 	andeq	r0, lr, fp, lsl #6
    11a0:	00240300 	eoreq	r0, r4, r0, lsl #6
    11a4:	0b3e0b0b 	bleq	f83dd8 <_bss_end+0xf72128>
    11a8:	00000803 	andeq	r0, r0, r3, lsl #16
    11ac:	03001604 	movweq	r1, #1540	; 0x604
    11b0:	3b0b3a0e 	blcc	2cf9f0 <_bss_end+0x2bdd40>
    11b4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    11b8:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    11bc:	13490026 	movtne	r0, #36902	; 0x9026
    11c0:	35060000 	strcc	r0, [r6, #-0]
    11c4:	00134900 	andseq	r4, r3, r0, lsl #18
    11c8:	01390700 	teqeq	r9, r0, lsl #14
    11cc:	0b3a0803 	bleq	e831e0 <_bss_end+0xe71530>
    11d0:	0b390b3b 	bleq	e43ec4 <_bss_end+0xe32214>
    11d4:	00001301 	andeq	r1, r0, r1, lsl #6
    11d8:	03003408 	movweq	r3, #1032	; 0x408
    11dc:	3b0b3a0e 	blcc	2cfa1c <_bss_end+0x2bdd6c>
    11e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    11e4:	1c193c13 	ldcne	12, cr3, [r9], {19}
    11e8:	00196c06 	andseq	r6, r9, r6, lsl #24
    11ec:	00340900 	eorseq	r0, r4, r0, lsl #18
    11f0:	0b3a0e03 	bleq	e84a04 <_bss_end+0xe72d54>
    11f4:	0b390b3b 	bleq	e43ee8 <_bss_end+0xe32238>
    11f8:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    11fc:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    1200:	040a0000 	streq	r0, [sl], #-0
    1204:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    1208:	0b0b3e19 	bleq	2d0a74 <_bss_end+0x2bedc4>
    120c:	3a13490b 	bcc	4d3640 <_bss_end+0x4c1990>
    1210:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1214:	0013010b 	andseq	r0, r3, fp, lsl #2
    1218:	00280b00 	eoreq	r0, r8, r0, lsl #22
    121c:	0b1c0e03 	bleq	704a30 <_bss_end+0x6f2d80>
    1220:	340c0000 	strcc	r0, [ip], #-0
    1224:	00134700 	andseq	r4, r3, r0, lsl #14
    1228:	01020d00 	tsteq	r2, r0, lsl #26
    122c:	0b0b0e03 	bleq	2c4a40 <_bss_end+0x2b2d90>
    1230:	0b3b0b3a 	bleq	ec3f20 <_bss_end+0xeb2270>
    1234:	13010b39 	movwne	r0, #6969	; 0x1b39
    1238:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    123c:	3a0e0300 	bcc	381e44 <_bss_end+0x370194>
    1240:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1244:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1248:	0f00000b 	svceq	0x0000000b
    124c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1250:	0b3b0b3a 	bleq	ec3f40 <_bss_end+0xeb2290>
    1254:	13490b39 	movtne	r0, #39737	; 0x9b39
    1258:	00000b32 	andeq	r0, r0, r2, lsr fp
    125c:	3f012e10 	svccc	0x00012e10
    1260:	3a0e0319 	bcc	381ecc <_bss_end+0x37021c>
    1264:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1268:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    126c:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1270:	01136419 	tsteq	r3, r9, lsl r4
    1274:	11000013 	tstne	r0, r3, lsl r0
    1278:	13490005 	movtne	r0, #36869	; 0x9005
    127c:	00001934 	andeq	r1, r0, r4, lsr r9
    1280:	49000512 	stmdbmi	r0, {r1, r4, r8, sl}
    1284:	13000013 	movwne	r0, #19
    1288:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    128c:	0b3a0e03 	bleq	e84aa0 <_bss_end+0xe72df0>
    1290:	0b390b3b 	bleq	e43f84 <_bss_end+0xe322d4>
    1294:	0b320e6e 	bleq	c84c54 <_bss_end+0xc72fa4>
    1298:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    129c:	00001301 	andeq	r1, r0, r1, lsl #6
    12a0:	3f012e14 	svccc	0x00012e14
    12a4:	3a0e0319 	bcc	381f10 <_bss_end+0x370260>
    12a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12ac:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    12b0:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    12b4:	00136419 	andseq	r6, r3, r9, lsl r4
    12b8:	000f1500 	andeq	r1, pc, r0, lsl #10
    12bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    12c0:	15160000 	ldrne	r0, [r6, #-0]
    12c4:	17000000 	strne	r0, [r0, -r0]
    12c8:	0b0b0010 	bleq	2c1310 <_bss_end+0x2af660>
    12cc:	00001349 	andeq	r1, r0, r9, asr #6
    12d0:	03003418 	movweq	r3, #1048	; 0x418
    12d4:	3b0b3a0e 	blcc	2cfb14 <_bss_end+0x2bde64>
    12d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    12dc:	3c193f13 	ldccc	15, cr3, [r9], {19}
    12e0:	19000019 	stmdbne	r0, {r0, r3, r4}
    12e4:	13470034 	movtne	r0, #28724	; 0x7034
    12e8:	0b3b0b3a 	bleq	ec3fd8 <_bss_end+0xeb2328>
    12ec:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    12f0:	131a0000 	tstne	sl, #0
    12f4:	0b0e0301 	bleq	381f00 <_bss_end+0x370250>
    12f8:	3b0b3a0b 	blcc	2cfb2c <_bss_end+0x2bde7c>
    12fc:	010b390b 	tsteq	fp, fp, lsl #18
    1300:	1b000013 	blne	1354 <CPSR_IRQ_INHIBIT+0x12d4>
    1304:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1308:	0b3b0b3a 	bleq	ec3ff8 <_bss_end+0xeb2348>
    130c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1310:	0b0d0b0b 	bleq	343f44 <_bss_end+0x332294>
    1314:	0b380b0c 	bleq	e03f4c <_bss_end+0xdf229c>
    1318:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    131c:	3a0e0300 	bcc	381f24 <_bss_end+0x370274>
    1320:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1324:	0b13490b 	bleq	4d3758 <_bss_end+0x4c1aa8>
    1328:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
    132c:	000b380d 	andeq	r3, fp, sp, lsl #16
    1330:	002e1d00 	eoreq	r1, lr, r0, lsl #26
    1334:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    1338:	06120111 			; <UNDEFINED> instruction: 0x06120111
    133c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1340:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    1344:	0e03012e 	adfeqsp	f0, f3, #0.5
    1348:	01111934 	tsteq	r1, r4, lsr r9
    134c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1350:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1354:	1f000013 	svcne	0x00000013
    1358:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    135c:	0b3b0b3a 	bleq	ec404c <_bss_end+0xeb239c>
    1360:	13490b39 	movtne	r0, #39737	; 0x9b39
    1364:	00001802 	andeq	r1, r0, r2, lsl #16
    1368:	47012e20 	strmi	r2, [r1, -r0, lsr #28]
    136c:	3b0b3a13 	blcc	2cfbc0 <_bss_end+0x2bdf10>
    1370:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    1374:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1378:	96184006 	ldrls	r4, [r8], -r6
    137c:	13011942 	movwne	r1, #6466	; 0x1942
    1380:	05210000 	streq	r0, [r1, #-0]!
    1384:	490e0300 	stmdbmi	lr, {r8, r9}
    1388:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    138c:	22000018 	andcs	r0, r0, #24
    1390:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1394:	0b3b0b3a 	bleq	ec4084 <_bss_end+0xeb23d4>
    1398:	13490b39 	movtne	r0, #39737	; 0x9b39
    139c:	00001802 	andeq	r1, r0, r2, lsl #16
    13a0:	47012e23 	strmi	r2, [r1, -r3, lsr #28]
    13a4:	3b0b3a13 	blcc	2cfbf8 <_bss_end+0x2bdf48>
    13a8:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    13ac:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    13b0:	97184006 	ldrls	r4, [r8, -r6]
    13b4:	13011942 	movwne	r1, #6466	; 0x1942
    13b8:	05240000 	streq	r0, [r4, #-0]!
    13bc:	3a080300 	bcc	201fc4 <_bss_end+0x1f0314>
    13c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    13c8:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
    13cc:	1347012e 	movtne	r0, #28974	; 0x712e
    13d0:	0b3b0b3a 	bleq	ec40c0 <_bss_end+0xeb2410>
    13d4:	13640b39 	cmnne	r4, #58368	; 0xe400
    13d8:	13010b20 	movwne	r0, #6944	; 0x1b20
    13dc:	05260000 	streq	r0, [r6, #-0]!
    13e0:	490e0300 	stmdbmi	lr, {r8, r9}
    13e4:	00193413 	andseq	r3, r9, r3, lsl r4
    13e8:	00052700 	andeq	r2, r5, r0, lsl #14
    13ec:	0b3a0e03 	bleq	e84c00 <_bss_end+0xe72f50>
    13f0:	0b390b3b 	bleq	e440e4 <_bss_end+0xe32434>
    13f4:	00001349 	andeq	r1, r0, r9, asr #6
    13f8:	31012e28 	tstcc	r1, r8, lsr #28
    13fc:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    1400:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1404:	97184006 	ldrls	r4, [r8, -r6]
    1408:	00001942 	andeq	r1, r0, r2, asr #18
    140c:	31000529 	tstcc	r0, r9, lsr #10
    1410:	00180213 	andseq	r0, r8, r3, lsl r2
    1414:	11010000 	mrsne	r0, (UNDEF: 1)
    1418:	130e2501 	movwne	r2, #58625	; 0xe501
    141c:	1b0e030b 	blne	382050 <_bss_end+0x3703a0>
    1420:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    1424:	00171006 	andseq	r1, r7, r6
    1428:	00240200 	eoreq	r0, r4, r0, lsl #4
    142c:	0b3e0b0b 	bleq	f84060 <_bss_end+0xf723b0>
    1430:	00000e03 	andeq	r0, r0, r3, lsl #28
    1434:	0b002403 	bleq	a448 <_ZN16CDisplay_SSD13064FlipEv+0x80>
    1438:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    143c:	04000008 	streq	r0, [r0], #-8
    1440:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1444:	0b3b0b3a 	bleq	ec4134 <_bss_end+0xeb2484>
    1448:	13490b39 	movtne	r0, #39737	; 0x9b39
    144c:	26050000 	strcs	r0, [r5], -r0
    1450:	00134900 	andseq	r4, r3, r0, lsl #18
    1454:	00350600 	eorseq	r0, r5, r0, lsl #12
    1458:	00001349 	andeq	r1, r0, r9, asr #6
    145c:	03013907 	movweq	r3, #6407	; 0x1907
    1460:	3b0b3a08 	blcc	2cfc88 <_bss_end+0x2bdfd8>
    1464:	010b390b 	tsteq	fp, fp, lsl #18
    1468:	08000013 	stmdaeq	r0, {r0, r1, r4}
    146c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1470:	0b3b0b3a 	bleq	ec4160 <_bss_end+0xeb24b0>
    1474:	13490b39 	movtne	r0, #39737	; 0x9b39
    1478:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    147c:	0000196c 	andeq	r1, r0, ip, ror #18
    1480:	03003409 	movweq	r3, #1033	; 0x409
    1484:	3b0b3a0e 	blcc	2cfcc4 <_bss_end+0x2be014>
    1488:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    148c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1490:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1494:	01040a00 	tsteq	r4, r0, lsl #20
    1498:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    149c:	0b0b0b3e 	bleq	2c419c <_bss_end+0x2b24ec>
    14a0:	0b3a1349 	bleq	e861cc <_bss_end+0xe7451c>
    14a4:	0b390b3b 	bleq	e44198 <_bss_end+0xe324e8>
    14a8:	00001301 	andeq	r1, r0, r1, lsl #6
    14ac:	0300280b 	movweq	r2, #2059	; 0x80b
    14b0:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    14b4:	00340c00 	eorseq	r0, r4, r0, lsl #24
    14b8:	00001347 	andeq	r1, r0, r7, asr #6
    14bc:	0301020d 	movweq	r0, #4621	; 0x120d
    14c0:	3a0b0b0e 	bcc	2c4100 <_bss_end+0x2b2450>
    14c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    14c8:	0013010b 	andseq	r0, r3, fp, lsl #2
    14cc:	000d0e00 	andeq	r0, sp, r0, lsl #28
    14d0:	0b3a0e03 	bleq	e84ce4 <_bss_end+0xe73034>
    14d4:	0b390b3b 	bleq	e441c8 <_bss_end+0xe32518>
    14d8:	0b381349 	bleq	e06204 <_bss_end+0xdf4554>
    14dc:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    14e0:	03193f01 	tsteq	r9, #1, 30
    14e4:	3b0b3a0e 	blcc	2cfd24 <_bss_end+0x2be074>
    14e8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    14ec:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    14f0:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    14f4:	00130113 	andseq	r0, r3, r3, lsl r1
    14f8:	00051000 	andeq	r1, r5, r0
    14fc:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1500:	05110000 	ldreq	r0, [r1, #-0]
    1504:	00134900 	andseq	r4, r3, r0, lsl #18
    1508:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    150c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1510:	0b3b0b3a 	bleq	ec4200 <_bss_end+0xeb2550>
    1514:	0e6e0b39 	vmoveq.8	d14[5], r0
    1518:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    151c:	13011364 	movwne	r1, #4964	; 0x1364
    1520:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1524:	03193f01 	tsteq	r9, #1, 30
    1528:	3b0b3a0e 	blcc	2cfd68 <_bss_end+0x2be0b8>
    152c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1530:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1534:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1538:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    153c:	0b0b000f 	bleq	2c1580 <_bss_end+0x2af8d0>
    1540:	00001349 	andeq	r1, r0, r9, asr #6
    1544:	03003415 	movweq	r3, #1045	; 0x415
    1548:	3b0b3a0e 	blcc	2cfd88 <_bss_end+0x2be0d8>
    154c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1550:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1554:	16000019 			; <UNDEFINED> instruction: 0x16000019
    1558:	13470034 	movtne	r0, #28724	; 0x7034
    155c:	0b3b0b3a 	bleq	ec424c <_bss_end+0xeb259c>
    1560:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    1564:	34170000 	ldrcc	r0, [r7], #-0
    1568:	3a0e0300 	bcc	382170 <_bss_end+0x3704c0>
    156c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1570:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    1574:	00180219 	andseq	r0, r8, r9, lsl r2
    1578:	002e1800 	eoreq	r1, lr, r0, lsl #16
    157c:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    1580:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1584:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1588:	19000019 	stmdbne	r0, {r0, r3, r4}
    158c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1590:	01111934 	tsteq	r1, r4, lsr r9
    1594:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1598:	01194296 			; <UNDEFINED> instruction: 0x01194296
    159c:	1a000013 	bne	15f0 <CPSR_IRQ_INHIBIT+0x1570>
    15a0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    15a4:	0b3b0b3a 	bleq	ec4294 <_bss_end+0xeb25e4>
    15a8:	13490b39 	movtne	r0, #39737	; 0x9b39
    15ac:	00001802 	andeq	r1, r0, r2, lsl #16
    15b0:	47012e1b 	smladmi	r1, fp, lr, r2
    15b4:	3b0b3a13 	blcc	2cfe08 <_bss_end+0x2be158>
    15b8:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    15bc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    15c0:	97184006 	ldrls	r4, [r8, -r6]
    15c4:	13011942 	movwne	r1, #6466	; 0x1942
    15c8:	051c0000 	ldreq	r0, [ip, #-0]
    15cc:	490e0300 	stmdbmi	lr, {r8, r9}
    15d0:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    15d4:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    15d8:	1347012e 	movtne	r0, #28974	; 0x712e
    15dc:	0b3b0b3a 	bleq	ec42cc <_bss_end+0xeb261c>
    15e0:	13640b39 	cmnne	r4, #58368	; 0xe400
    15e4:	13010b20 	movwne	r0, #6944	; 0x1b20
    15e8:	051e0000 	ldreq	r0, [lr, #-0]
    15ec:	490e0300 	stmdbmi	lr, {r8, r9}
    15f0:	00193413 	andseq	r3, r9, r3, lsl r4
    15f4:	00051f00 	andeq	r1, r5, r0, lsl #30
    15f8:	0b3a0e03 	bleq	e84e0c <_bss_end+0xe7315c>
    15fc:	0b390b3b 	bleq	e442f0 <_bss_end+0xe32640>
    1600:	00001349 	andeq	r1, r0, r9, asr #6
    1604:	31012e20 	tstcc	r1, r0, lsr #28
    1608:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    160c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1610:	97184006 	ldrls	r4, [r8, -r6]
    1614:	00001942 	andeq	r1, r0, r2, asr #18
    1618:	31000521 	tstcc	r0, r1, lsr #10
    161c:	00180213 	andseq	r0, r8, r3, lsl r2
    1620:	11010000 	mrsne	r0, (UNDEF: 1)
    1624:	130e2501 	movwne	r2, #58625	; 0xe501
    1628:	1b0e030b 	blne	38225c <_bss_end+0x3705ac>
    162c:	1117550e 	tstne	r7, lr, lsl #10
    1630:	00171001 	andseq	r1, r7, r1
    1634:	00240200 	eoreq	r0, r4, r0, lsl #4
    1638:	0b3e0b0b 	bleq	f8426c <_bss_end+0xf725bc>
    163c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1640:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    1644:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1648:	0b0b0024 	bleq	2c16e0 <_bss_end+0x2afa30>
    164c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1650:	35050000 	strcc	r0, [r5, #-0]
    1654:	00134900 	andseq	r4, r3, r0, lsl #18
    1658:	00160600 	andseq	r0, r6, r0, lsl #12
    165c:	0b3a0e03 	bleq	e84e70 <_bss_end+0xe731c0>
    1660:	0b390b3b 	bleq	e44354 <_bss_end+0xe326a4>
    1664:	00001349 	andeq	r1, r0, r9, asr #6
    1668:	03003407 	movweq	r3, #1031	; 0x407
    166c:	3b0b3a0e 	blcc	2cfeac <_bss_end+0x2be1fc>
    1670:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1674:	02196c13 	andseq	r6, r9, #4864	; 0x1300
    1678:	08000018 	stmdaeq	r0, {r3, r4}
    167c:	0e030104 	adfeqs	f0, f3, f4
    1680:	0b3e196d 	bleq	f87c3c <_bss_end+0xf75f8c>
    1684:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1688:	0b3b0b3a 	bleq	ec4378 <_bss_end+0xeb26c8>
    168c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1690:	28090000 	stmdacs	r9, {}	; <UNPREDICTABLE>
    1694:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1698:	0a00000b 	beq	16cc <CPSR_IRQ_INHIBIT+0x164c>
    169c:	0e030102 	adfeqs	f0, f3, f2
    16a0:	0b3a0b0b 	bleq	e842d4 <_bss_end+0xe72624>
    16a4:	0b390b3b 	bleq	e44398 <_bss_end+0xe326e8>
    16a8:	00001301 	andeq	r1, r0, r1, lsl #6
    16ac:	0301130b 	movweq	r1, #4875	; 0x130b
    16b0:	3a0b0b0e 	bcc	2c42f0 <_bss_end+0x2b2640>
    16b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16b8:	0013010b 	andseq	r0, r3, fp, lsl #2
    16bc:	000d0c00 	andeq	r0, sp, r0, lsl #24
    16c0:	0b3a0e03 	bleq	e84ed4 <_bss_end+0xe73224>
    16c4:	0b390b3b 	bleq	e443b8 <_bss_end+0xe32708>
    16c8:	0b381349 	bleq	e063f4 <_bss_end+0xdf4744>
    16cc:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    16d0:	03193f01 	tsteq	r9, #1, 30
    16d4:	3b0b3a0e 	blcc	2cff14 <_bss_end+0x2be264>
    16d8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    16dc:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    16e0:	01136419 	tsteq	r3, r9, lsl r4
    16e4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    16e8:	13490005 	movtne	r0, #36869	; 0x9005
    16ec:	00001934 	andeq	r1, r0, r4, lsr r9
    16f0:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
    16f4:	10000013 	andne	r0, r0, r3, lsl r0
    16f8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    16fc:	0e6e0e03 	cdpeq	14, 6, cr0, cr14, cr3, {0}
    1700:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1704:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1708:	0d110000 	ldceq	0, cr0, [r1, #-0]
    170c:	3a0e0300 	bcc	382314 <_bss_end+0x370664>
    1710:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1714:	3f13490b 	svccc	0x0013490b
    1718:	00193c19 	andseq	r3, r9, r9, lsl ip
    171c:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    1720:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1724:	0b3b0b3a 	bleq	ec4414 <_bss_end+0xeb2764>
    1728:	0e6e0b39 	vmoveq.8	d14[5], r0
    172c:	0b321349 	bleq	c86458 <_bss_end+0xc747a8>
    1730:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1734:	00001301 	andeq	r1, r0, r1, lsl #6
    1738:	3f012e13 	svccc	0x00012e13
    173c:	3a0e0319 	bcc	3823a8 <_bss_end+0x3706f8>
    1740:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1744:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    1748:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    174c:	00130113 	andseq	r0, r3, r3, lsl r1
    1750:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    1754:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1758:	0b3b0b3a 	bleq	ec4448 <_bss_end+0xeb2798>
    175c:	0e6e0b39 	vmoveq.8	d14[5], r0
    1760:	0b321349 	bleq	c8648c <_bss_end+0xc747dc>
    1764:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1768:	01150000 	tsteq	r5, r0
    176c:	01134901 	tsteq	r3, r1, lsl #18
    1770:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1774:	13490021 	movtne	r0, #36897	; 0x9021
    1778:	00000b2f 	andeq	r0, r0, pc, lsr #22
    177c:	0b000f17 	bleq	53e0 <CPSR_IRQ_INHIBIT+0x5360>
    1780:	0013490b 	andseq	r4, r3, fp, lsl #18
    1784:	00021800 	andeq	r1, r2, r0, lsl #16
    1788:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    178c:	21190000 	tstcs	r9, r0
    1790:	1a000000 	bne	1798 <CPSR_IRQ_INHIBIT+0x1718>
    1794:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1798:	0b3b0b3a 	bleq	ec4488 <_bss_end+0xeb27d8>
    179c:	13490b39 	movtne	r0, #39737	; 0x9b39
    17a0:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    17a4:	041b0000 	ldreq	r0, [fp], #-0
    17a8:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    17ac:	0b0b3e19 	bleq	2d1018 <_bss_end+0x2bf368>
    17b0:	3a13490b 	bcc	4d3be4 <_bss_end+0x4c1f34>
    17b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17b8:	010b320b 	tsteq	fp, fp, lsl #4
    17bc:	1c000013 	stcne	0, cr0, [r0], {19}
    17c0:	08030028 	stmdaeq	r3, {r3, r5}
    17c4:	00000b1c 	andeq	r0, r0, ip, lsl fp
    17c8:	03000d1d 	movweq	r0, #3357	; 0xd1d
    17cc:	3b0b3a08 	blcc	2cfff4 <_bss_end+0x2be344>
    17d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    17d4:	000b3813 	andeq	r3, fp, r3, lsl r8
    17d8:	000d1e00 	andeq	r1, sp, r0, lsl #28
    17dc:	0b3a0e03 	bleq	e84ff0 <_bss_end+0xe73340>
    17e0:	0b390b3b 	bleq	e444d4 <_bss_end+0xe32824>
    17e4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    17e8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    17ec:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    17f0:	0d1f0000 	ldceq	0, cr0, [pc, #-0]	; 17f8 <CPSR_IRQ_INHIBIT+0x1778>
    17f4:	3a0e0300 	bcc	3823fc <_bss_end+0x37074c>
    17f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17fc:	3f13490b 	svccc	0x0013490b
    1800:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    1804:	00196c19 	andseq	r6, r9, r9, lsl ip
    1808:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
    180c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1810:	0b3b0b3a 	bleq	ec4500 <_bss_end+0xeb2850>
    1814:	0e6e0b39 	vmoveq.8	d14[5], r0
    1818:	0b321349 	bleq	c86544 <_bss_end+0xc74894>
    181c:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    1820:	13011364 	movwne	r1, #4964	; 0x1364
    1824:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1828:	03193f01 	tsteq	r9, #1, 30
    182c:	3b0b3a0e 	blcc	2d006c <_bss_end+0x2be3bc>
    1830:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1834:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    1838:	00130113 	andseq	r0, r3, r3, lsl r1
    183c:	00102200 	andseq	r2, r0, r0, lsl #4
    1840:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1844:	2f230000 	svccs	0x00230000
    1848:	49080300 	stmdbmi	r8, {r8, r9}
    184c:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    1850:	0b0b000f 	bleq	2c1894 <_bss_end+0x2afbe4>
    1854:	34250000 	strtcc	r0, [r5], #-0
    1858:	3a134700 	bcc	4d3460 <_bss_end+0x4c17b0>
    185c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1860:	0018020b 	andseq	r0, r8, fp, lsl #4
    1864:	002e2600 	eoreq	r2, lr, r0, lsl #12
    1868:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    186c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1870:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1874:	27000019 	smladcs	r0, r9, r0, r0
    1878:	0e03012e 	adfeqsp	f0, f3, #0.5
    187c:	01111934 	tsteq	r1, r4, lsr r9
    1880:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1884:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1888:	28000013 	stmdacs	r0, {r0, r1, r4}
    188c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1890:	0b3b0b3a 	bleq	ec4580 <_bss_end+0xeb28d0>
    1894:	13490b39 	movtne	r0, #39737	; 0x9b39
    1898:	00001802 	andeq	r1, r0, r2, lsl #16
    189c:	47012e29 	strmi	r2, [r1, -r9, lsr #28]
    18a0:	11136413 	tstne	r3, r3, lsl r4
    18a4:	40061201 	andmi	r1, r6, r1, lsl #4
    18a8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    18ac:	00001301 	andeq	r1, r0, r1, lsl #6
    18b0:	0300052a 	movweq	r0, #1322	; 0x52a
    18b4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    18b8:	00180219 	andseq	r0, r8, r9, lsl r2
    18bc:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    18c0:	0b3a1347 	bleq	e865e4 <_bss_end+0xe74934>
    18c4:	0b390b3b 	bleq	e445b8 <_bss_end+0xe32908>
    18c8:	01111364 	tsteq	r1, r4, ror #6
    18cc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    18d0:	01194296 			; <UNDEFINED> instruction: 0x01194296
    18d4:	2c000013 	stccs	0, cr0, [r0], {19}
    18d8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    18dc:	0b3b0b3a 	bleq	ec45cc <_bss_end+0xeb291c>
    18e0:	13490b39 	movtne	r0, #39737	; 0x9b39
    18e4:	00001802 	andeq	r1, r0, r2, lsl #16
    18e8:	0300342d 	movweq	r3, #1069	; 0x42d
    18ec:	3b0b3a08 	blcc	2d0114 <_bss_end+0x2be464>
    18f0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    18f4:	00180213 	andseq	r0, r8, r3, lsl r2
    18f8:	010b2e00 	tsteq	fp, r0, lsl #28
    18fc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1900:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
    1904:	3a134701 	bcc	4d3510 <_bss_end+0x4c1860>
    1908:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    190c:	2013640b 	andscs	r6, r3, fp, lsl #8
    1910:	0013010b 	andseq	r0, r3, fp, lsl #2
    1914:	00053000 	andeq	r3, r5, r0
    1918:	13490e03 	movtne	r0, #40451	; 0x9e03
    191c:	00001934 	andeq	r1, r0, r4, lsr r9
    1920:	31012e31 	tstcc	r1, r1, lsr lr
    1924:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    1928:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    192c:	96184006 	ldrls	r4, [r8], -r6
    1930:	13011942 	movwne	r1, #6466	; 0x1942
    1934:	05320000 	ldreq	r0, [r2, #-0]!
    1938:	02133100 	andseq	r3, r3, #0, 2
    193c:	33000018 	movwcc	r0, #24
    1940:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    1944:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    1948:	06120111 			; <UNDEFINED> instruction: 0x06120111
    194c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1950:	00000019 	andeq	r0, r0, r9, lsl r0
    1954:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1958:	030b130e 	movweq	r1, #45838	; 0xb30e
    195c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1960:	10011117 	andne	r1, r1, r7, lsl r1
    1964:	02000017 	andeq	r0, r0, #23
    1968:	0b0b0024 	bleq	2c1a00 <_bss_end+0x2afd50>
    196c:	0e030b3e 	vmoveq.16	d3[0], r0
    1970:	26030000 	strcs	r0, [r3], -r0
    1974:	00134900 	andseq	r4, r3, r0, lsl #18
    1978:	00240400 	eoreq	r0, r4, r0, lsl #8
    197c:	0b3e0b0b 	bleq	f845b0 <_bss_end+0xf72900>
    1980:	00000803 	andeq	r0, r0, r3, lsl #16
    1984:	03001605 	movweq	r1, #1541	; 0x605
    1988:	3b0b3a0e 	blcc	2d01c8 <_bss_end+0x2be518>
    198c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1990:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1994:	13490035 	movtne	r0, #36917	; 0x9035
    1998:	04070000 	streq	r0, [r7], #-0
    199c:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    19a0:	0b0b3e19 	bleq	2d120c <_bss_end+0x2bf55c>
    19a4:	3a13490b 	bcc	4d3dd8 <_bss_end+0x4c2128>
    19a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19ac:	0013010b 	andseq	r0, r3, fp, lsl #2
    19b0:	00280800 	eoreq	r0, r8, r0, lsl #16
    19b4:	0b1c0e03 	bleq	7051c8 <_bss_end+0x6f3518>
    19b8:	34090000 	strcc	r0, [r9], #-0
    19bc:	3a0e0300 	bcc	3825c4 <_bss_end+0x370914>
    19c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19c4:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    19c8:	00180219 	andseq	r0, r8, r9, lsl r2
    19cc:	01020a00 	tsteq	r2, r0, lsl #20
    19d0:	0b0b0e03 	bleq	2c51e4 <_bss_end+0x2b3534>
    19d4:	0b3b0b3a 	bleq	ec46c4 <_bss_end+0xeb2a14>
    19d8:	13010b39 	movwne	r0, #6969	; 0x1b39
    19dc:	130b0000 	movwne	r0, #45056	; 0xb000
    19e0:	0b0e0301 	bleq	3825ec <_bss_end+0x37093c>
    19e4:	3b0b3a0b 	blcc	2d0218 <_bss_end+0x2be568>
    19e8:	010b390b 	tsteq	fp, fp, lsl #18
    19ec:	0c000013 	stceq	0, cr0, [r0], {19}
    19f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    19f4:	0b3b0b3a 	bleq	ec46e4 <_bss_end+0xeb2a34>
    19f8:	13490b39 	movtne	r0, #39737	; 0x9b39
    19fc:	00000b38 	andeq	r0, r0, r8, lsr fp
    1a00:	3f012e0d 	svccc	0x00012e0d
    1a04:	3a0e0319 	bcc	382670 <_bss_end+0x3709c0>
    1a08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a0c:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1a10:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
    1a14:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1a18:	13490005 	movtne	r0, #36869	; 0x9005
    1a1c:	00001934 	andeq	r1, r0, r4, lsr r9
    1a20:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
    1a24:	10000013 	andne	r0, r0, r3, lsl r0
    1a28:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1a2c:	0b3b0b3a 	bleq	ec471c <_bss_end+0xeb2a6c>
    1a30:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a34:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1a38:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    1a3c:	03193f01 	tsteq	r9, #1, 30
    1a40:	3b0b3a0e 	blcc	2d0280 <_bss_end+0x2be5d0>
    1a44:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1a48:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1a4c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1a50:	00130113 	andseq	r0, r3, r3, lsl r1
    1a54:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    1a58:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1a5c:	0b3b0b3a 	bleq	ec474c <_bss_end+0xeb2a9c>
    1a60:	0e6e0b39 	vmoveq.8	d14[5], r0
    1a64:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1a68:	13011364 	movwne	r1, #4964	; 0x1364
    1a6c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1a70:	03193f01 	tsteq	r9, #1, 30
    1a74:	3b0b3a0e 	blcc	2d02b4 <_bss_end+0x2be604>
    1a78:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1a7c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1a80:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1a84:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1a88:	13490101 	movtne	r0, #37121	; 0x9101
    1a8c:	00001301 	andeq	r1, r0, r1, lsl #6
    1a90:	49002115 	stmdbmi	r0, {r0, r2, r4, r8, sp}
    1a94:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1a98:	000f1600 	andeq	r1, pc, r0, lsl #12
    1a9c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1aa0:	02170000 	andseq	r0, r7, #0
    1aa4:	0b0e0301 	bleq	3826b0 <_bss_end+0x370a00>
    1aa8:	3b0b3a0b 	blcc	2d02dc <_bss_end+0x2be62c>
    1aac:	1d0b390b 	vstrne.16	s6, [fp, #-22]	; 0xffffffea	; <UNPREDICTABLE>
    1ab0:	00130113 	andseq	r0, r3, r3, lsl r1
    1ab4:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
    1ab8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1abc:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1ac0:	0b321934 	bleq	c87f98 <_bss_end+0xc762e8>
    1ac4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1ac8:	00001301 	andeq	r1, r0, r1, lsl #6
    1acc:	03000d19 	movweq	r0, #3353	; 0xd19
    1ad0:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
    1ad4:	3219340b 	andscc	r3, r9, #184549376	; 0xb000000
    1ad8:	1a00000b 	bne	1b0c <CPSR_IRQ_INHIBIT+0x1a8c>
    1adc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1ae0:	0b3a0e03 	bleq	e852f4 <_bss_end+0xe73644>
    1ae4:	0b390b3b 	bleq	e447d8 <_bss_end+0xe32b28>
    1ae8:	0b4c0e6e 	bleq	13054a8 <_bss_end+0x12f37f8>
    1aec:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    1af0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1af4:	13011364 	movwne	r1, #4964	; 0x1364
    1af8:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    1afc:	03193f01 	tsteq	r9, #1, 30
    1b00:	3b0b3a0e 	blcc	2d0340 <_bss_end+0x2be690>
    1b04:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1b08:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    1b0c:	1d184d0b 	ldcne	13, cr4, [r8, #-44]	; 0xffffffd4
    1b10:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1b14:	00136419 	andseq	r6, r3, r9, lsl r4
    1b18:	00211c00 	eoreq	r1, r1, r0, lsl #24
    1b1c:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    1b20:	03193f01 	tsteq	r9, #1, 30
    1b24:	3b0b3a0e 	blcc	2d0364 <_bss_end+0x2be6b4>
    1b28:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1b2c:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    1b30:	32131d0b 	andscc	r1, r3, #704	; 0x2c0
    1b34:	8b193c0b 	blhi	650b68 <_bss_end+0x63eeb8>
    1b38:	13640b01 	cmnne	r4, #1024	; 0x400
    1b3c:	00001301 	andeq	r1, r0, r1, lsl #6
    1b40:	3f012e1e 	svccc	0x00012e1e
    1b44:	3a0e0319 	bcc	3827b0 <_bss_end+0x370b00>
    1b48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b4c:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1b50:	4d0b4c13 	stcmi	12, cr4, [fp, #-76]	; 0xffffffb4
    1b54:	32131d18 	andscc	r1, r3, #24, 26	; 0x600
    1b58:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1b5c:	00130113 	andseq	r0, r3, r3, lsl r1
    1b60:	01391f00 	teqeq	r9, r0, lsl #30
    1b64:	0b3a0803 	bleq	e83b78 <_bss_end+0xe71ec8>
    1b68:	0b390b3b 	bleq	e4485c <_bss_end+0xe32bac>
    1b6c:	00001301 	andeq	r1, r0, r1, lsl #6
    1b70:	03003420 	movweq	r3, #1056	; 0x420
    1b74:	3b0b3a0e 	blcc	2d03b4 <_bss_end+0x2be704>
    1b78:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b7c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1b80:	00196c06 	andseq	r6, r9, r6, lsl #24
    1b84:	00342100 	eorseq	r2, r4, r0, lsl #2
    1b88:	0b3a0e03 	bleq	e8539c <_bss_end+0xe736ec>
    1b8c:	0b390b3b 	bleq	e44880 <_bss_end+0xe32bd0>
    1b90:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    1b94:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    1b98:	04220000 	strteq	r0, [r2], #-0
    1b9c:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    1ba0:	0b0b3e19 	bleq	2d140c <_bss_end+0x2bf75c>
    1ba4:	3a13490b 	bcc	4d3fd8 <_bss_end+0x4c2328>
    1ba8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bac:	2300000b 	movwcs	r0, #11
    1bb0:	13470034 	movtne	r0, #28724	; 0x7034
    1bb4:	10240000 	eorne	r0, r4, r0
    1bb8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1bbc:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1bc0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1bc4:	0b3b0b3a 	bleq	ec48b4 <_bss_end+0xeb2c04>
    1bc8:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bcc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1bd0:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    1bd4:	03193f01 	tsteq	r9, #1, 30
    1bd8:	3b0b3a0e 	blcc	2d0418 <_bss_end+0x2be768>
    1bdc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1be0:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    1be4:	01136419 	tsteq	r3, r9, lsl r4
    1be8:	27000013 	smladcs	r0, r3, r0, r0
    1bec:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1bf0:	0b3a0e03 	bleq	e85404 <_bss_end+0xe73754>
    1bf4:	0b390b3b 	bleq	e448e8 <_bss_end+0xe32c38>
    1bf8:	0b320e6e 	bleq	c855b8 <_bss_end+0xc73908>
    1bfc:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1c00:	0f280000 	svceq	0x00280000
    1c04:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1c08:	001c2900 	andseq	r2, ip, r0, lsl #18
    1c0c:	0b381349 	bleq	e06938 <_bss_end+0xdf4c88>
    1c10:	00000b32 	andeq	r0, r0, r2, lsr fp
    1c14:	0300342a 	movweq	r3, #1066	; 0x42a
    1c18:	3b0b3a0e 	blcc	2d0458 <_bss_end+0x2be7a8>
    1c1c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c20:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    1c24:	2b000018 	blcs	1c8c <CPSR_IRQ_INHIBIT+0x1c0c>
    1c28:	0e030104 	adfeqs	f0, f3, f4
    1c2c:	0b3e196d 	bleq	f881e8 <_bss_end+0xf76538>
    1c30:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1c34:	0b3b0b3a 	bleq	ec4924 <_bss_end+0xeb2c74>
    1c38:	0b320b39 	bleq	c84924 <_bss_end+0xc72c74>
    1c3c:	00001301 	andeq	r1, r0, r1, lsl #6
    1c40:	0300282c 	movweq	r2, #2092	; 0x82c
    1c44:	000b1c08 	andeq	r1, fp, r8, lsl #24
    1c48:	000d2d00 	andeq	r2, sp, r0, lsl #26
    1c4c:	0b3a0803 	bleq	e83c60 <_bss_end+0xe71fb0>
    1c50:	0b390b3b 	bleq	e44944 <_bss_end+0xe32c94>
    1c54:	0b381349 	bleq	e06980 <_bss_end+0xdf4cd0>
    1c58:	0d2e0000 	stceq	0, cr0, [lr, #-0]
    1c5c:	3a0e0300 	bcc	382864 <_bss_end+0x370bb4>
    1c60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c64:	3f13490b 	svccc	0x0013490b
    1c68:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    1c6c:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    1c70:	2f000019 	svccs	0x00000019
    1c74:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1c78:	0b3b0b3a 	bleq	ec4968 <_bss_end+0xeb2cb8>
    1c7c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c80:	0b32193f 	bleq	c88184 <_bss_end+0xc764d4>
    1c84:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
    1c88:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    1c8c:	03193f01 	tsteq	r9, #1, 30
    1c90:	3b0b3a0e 	blcc	2d04d0 <_bss_end+0x2be820>
    1c94:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1c98:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1c9c:	63193c0b 	tstvs	r9, #2816	; 0xb00
    1ca0:	01136419 	tsteq	r3, r9, lsl r4
    1ca4:	31000013 	tstcc	r0, r3, lsl r0
    1ca8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1cac:	0b3a0e03 	bleq	e854c0 <_bss_end+0xe73810>
    1cb0:	0b390b3b 	bleq	e449a4 <_bss_end+0xe32cf4>
    1cb4:	193c0e6e 	ldmdbne	ip!, {r1, r2, r3, r5, r6, r9, sl, fp}
    1cb8:	13011364 	movwne	r1, #4964	; 0x1364
    1cbc:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
    1cc0:	03193f01 	tsteq	r9, #1, 30
    1cc4:	3b0b3a0e 	blcc	2d0504 <_bss_end+0x2be854>
    1cc8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1ccc:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1cd0:	8b193c0b 	blhi	650d04 <_bss_end+0x63f054>
    1cd4:	13640b01 	cmnne	r4, #1024	; 0x400
    1cd8:	00001301 	andeq	r1, r0, r1, lsl #6
    1cdc:	3f012e33 	svccc	0x00012e33
    1ce0:	3a080319 	bcc	20294c <_bss_end+0x1f0c9c>
    1ce4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ce8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1cec:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1cf0:	01136419 	tsteq	r3, r9, lsl r4
    1cf4:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    1cf8:	13470034 	movtne	r0, #28724	; 0x7034
    1cfc:	0b3b0b3a 	bleq	ec49ec <_bss_end+0xeb2d3c>
    1d00:	0e6e0b39 	vmoveq.8	d14[5], r0
    1d04:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1d08:	34350000 	ldrtcc	r0, [r5], #-0
    1d0c:	3a134700 	bcc	4d3914 <_bss_end+0x4c1c64>
    1d10:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d14:	020e6e0b 	andeq	r6, lr, #11, 28	; 0xb0
    1d18:	36000018 			; <UNDEFINED> instruction: 0x36000018
    1d1c:	0b0b0042 	bleq	2c1e2c <_bss_end+0x2b017c>
    1d20:	00001349 	andeq	r1, r0, r9, asr #6
    1d24:	3f012e37 	svccc	0x00012e37
    1d28:	3a0e0319 	bcc	382994 <_bss_end+0x370ce4>
    1d2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d30:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1d34:	1d0b4c13 	stcne	12, cr4, [fp, #-76]	; 0xffffffb4
    1d38:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1d3c:	01136419 	tsteq	r3, r9, lsl r4
    1d40:	38000013 	stmdacc	r0, {r0, r1, r4}
    1d44:	13490115 	movtne	r0, #37141	; 0x9115
    1d48:	00001301 	andeq	r1, r0, r1, lsl #6
    1d4c:	00001839 	andeq	r1, r0, r9, lsr r8
    1d50:	000f3a00 	andeq	r3, pc, r0, lsl #20
    1d54:	0e030b0b 	vmlaeq.f64	d0, d3, d11
    1d58:	00001349 	andeq	r1, r0, r9, asr #6
    1d5c:	47012e3b 	smladxmi	r1, fp, lr, r2
    1d60:	11136413 	tstne	r3, r3, lsl r4
    1d64:	40061201 	andmi	r1, r6, r1, lsl #4
    1d68:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1d6c:	00001301 	andeq	r1, r0, r1, lsl #6
    1d70:	0300053c 	movweq	r0, #1340	; 0x53c
    1d74:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    1d78:	00180219 	andseq	r0, r8, r9, lsl r2
    1d7c:	00053d00 	andeq	r3, r5, r0, lsl #26
    1d80:	0b3a0e03 	bleq	e85594 <_bss_end+0xe738e4>
    1d84:	0b390b3b 	bleq	e44a78 <_bss_end+0xe32dc8>
    1d88:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1d8c:	343e0000 	ldrtcc	r0, [lr], #-0
    1d90:	3a080300 	bcc	202998 <_bss_end+0x1f0ce8>
    1d94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d98:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1d9c:	3f000018 	svccc	0x00000018
    1da0:	1347012e 	movtne	r0, #28974	; 0x712e
    1da4:	01111364 	tsteq	r1, r4, ror #6
    1da8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1dac:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1db0:	40000013 	andmi	r0, r0, r3, lsl r0
    1db4:	08030005 	stmdaeq	r3, {r0, r2}
    1db8:	0b3b0b3a 	bleq	ec4aa8 <_bss_end+0xeb2df8>
    1dbc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1dc0:	00001802 	andeq	r1, r0, r2, lsl #16
    1dc4:	47012e41 	strmi	r2, [r1, -r1, asr #28]
    1dc8:	64134913 	ldrvs	r4, [r3], #-2323	; 0xfffff6ed
    1dcc:	010b2013 	tsteq	fp, r3, lsl r0
    1dd0:	42000013 	andmi	r0, r0, #19
    1dd4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1dd8:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1ddc:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
    1de0:	6e133101 	mufvss	f3, f3, f1
    1de4:	1113640e 	tstne	r3, lr, lsl #8
    1de8:	40061201 	andmi	r1, r6, r1, lsl #4
    1dec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1df0:	00001301 	andeq	r1, r0, r1, lsl #6
    1df4:	31000544 	tstcc	r0, r4, asr #10
    1df8:	00180213 	andseq	r0, r8, r3, lsl r2
    1dfc:	012e4500 			; <UNDEFINED> instruction: 0x012e4500
    1e00:	13641347 	cmnne	r4, #469762049	; 0x1c000001
    1e04:	13010b20 	movwne	r0, #6944	; 0x1b20
    1e08:	34460000 	strbcc	r0, [r6], #-0
    1e0c:	3a0e0300 	bcc	382a14 <_bss_end+0x370d64>
    1e10:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e14:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e18:	47000018 	smladmi	r0, r8, r0, r0
    1e1c:	0111010b 	tsteq	r1, fp, lsl #2
    1e20:	13010612 	movwne	r0, #5650	; 0x1612
    1e24:	0b480000 	bleq	1201e2c <_bss_end+0x11f017c>
    1e28:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1e2c:	49000006 	stmdbmi	r0, {r1, r2}
    1e30:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1e34:	0b3b0b3a 	bleq	ec4b24 <_bss_end+0xeb2e74>
    1e38:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e3c:	2e4a0000 	cdpcs	0, 4, cr0, cr10, cr0, {0}
    1e40:	6e133101 	mufvss	f3, f3, f1
    1e44:	1113640e 	tstne	r3, lr, lsl #8
    1e48:	40061201 	andmi	r1, r6, r1, lsl #4
    1e4c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1e50:	00001301 	andeq	r1, r0, r1, lsl #6
    1e54:	47012e4b 	strmi	r2, [r1, -fp, asr #28]
    1e58:	3b0b3a13 	blcc	2d06ac <_bss_end+0x2be9fc>
    1e5c:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    1e60:	010b2013 	tsteq	fp, r3, lsl r0
    1e64:	4c000013 	stcmi	0, cr0, [r0], {19}
    1e68:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1e6c:	0b3a0e03 	bleq	e85680 <_bss_end+0xe739d0>
    1e70:	0b390b3b 	bleq	e44b64 <_bss_end+0xe32eb4>
    1e74:	01110e6e 	tsteq	r1, lr, ror #28
    1e78:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1e7c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1e80:	4d000013 	stcmi	0, cr0, [r0, #-76]	; 0xffffffb4
    1e84:	13490005 	movtne	r0, #36869	; 0x9005
    1e88:	00001802 	andeq	r1, r0, r2, lsl #16
    1e8c:	3f012e4e 	svccc	0x00012e4e
    1e90:	3a0e0319 	bcc	382afc <_bss_end+0x370e4c>
    1e94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e98:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1e9c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1ea0:	96184006 	ldrls	r4, [r8], -r6
    1ea4:	13011942 	movwne	r1, #6466	; 0x1942
    1ea8:	2e4f0000 	cdpcs	0, 4, cr0, cr15, cr0, {0}
    1eac:	64134701 	ldrvs	r4, [r3], #-1793	; 0xfffff8ff
    1eb0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1eb4:	97184006 	ldrls	r4, [r8, -r6]
    1eb8:	00001942 	andeq	r1, r0, r2, asr #18
    1ebc:	01110100 	tsteq	r1, r0, lsl #2
    1ec0:	0b130e25 	bleq	4c575c <_bss_end+0x4b3aac>
    1ec4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1ec8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1ecc:	00001710 	andeq	r1, r0, r0, lsl r7
    1ed0:	0b002402 	bleq	aee0 <_ZN15CShift_RegisterC1Ejjj>
    1ed4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1ed8:	0300000e 	movweq	r0, #14
    1edc:	0b0b0024 	bleq	2c1f74 <_bss_end+0x2b02c4>
    1ee0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1ee4:	16040000 	strne	r0, [r4], -r0
    1ee8:	3a0e0300 	bcc	382af0 <_bss_end+0x370e40>
    1eec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ef0:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ef4:	00260500 	eoreq	r0, r6, r0, lsl #10
    1ef8:	00001349 	andeq	r1, r0, r9, asr #6
    1efc:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1f00:	07000013 	smladeq	r0, r3, r0, r0
    1f04:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    1f08:	0b3b0b3a 	bleq	ec4bf8 <_bss_end+0xeb2f48>
    1f0c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1f10:	34080000 	strcc	r0, [r8], #-0
    1f14:	3a0e0300 	bcc	382b1c <_bss_end+0x370e6c>
    1f18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f1c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    1f20:	6c061c19 	stcvs	12, cr1, [r6], {25}
    1f24:	09000019 	stmdbeq	r0, {r0, r3, r4}
    1f28:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1f2c:	0b3b0b3a 	bleq	ec4c1c <_bss_end+0xeb2f6c>
    1f30:	13490b39 	movtne	r0, #39737	; 0x9b39
    1f34:	0b1c193c 	bleq	70842c <_bss_end+0x6f677c>
    1f38:	0000196c 	andeq	r1, r0, ip, ror #18
    1f3c:	0301040a 	movweq	r0, #5130	; 0x140a
    1f40:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    1f44:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1f48:	3b0b3a13 	blcc	2d079c <_bss_end+0x2beaec>
    1f4c:	010b390b 	tsteq	fp, fp, lsl #18
    1f50:	0b000013 	bleq	1fa4 <CPSR_IRQ_INHIBIT+0x1f24>
    1f54:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1f58:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1f5c:	0300280c 	movweq	r2, #2060	; 0x80c
    1f60:	000b1c08 	andeq	r1, fp, r8, lsl #24
    1f64:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1f68:	00001347 	andeq	r1, r0, r7, asr #6
    1f6c:	0301020e 	movweq	r0, #4622	; 0x120e
    1f70:	3a0b0b0e 	bcc	2c4bb0 <_bss_end+0x2b2f00>
    1f74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f78:	0013010b 	andseq	r0, r3, fp, lsl #2
    1f7c:	000d0f00 	andeq	r0, sp, r0, lsl #30
    1f80:	0b3a0e03 	bleq	e85794 <_bss_end+0xe73ae4>
    1f84:	0b390b3b 	bleq	e44c78 <_bss_end+0xe32fc8>
    1f88:	0b381349 	bleq	e06cb4 <_bss_end+0xdf5004>
    1f8c:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    1f90:	03193f01 	tsteq	r9, #1, 30
    1f94:	3b0b3a0e 	blcc	2d07d4 <_bss_end+0x2beb24>
    1f98:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1f9c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1fa0:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1fa4:	00130113 	andseq	r0, r3, r3, lsl r1
    1fa8:	00051100 	andeq	r1, r5, r0, lsl #2
    1fac:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1fb0:	05120000 	ldreq	r0, [r2, #-0]
    1fb4:	00134900 	andseq	r4, r3, r0, lsl #18
    1fb8:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
    1fbc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1fc0:	0b3b0b3a 	bleq	ec4cb0 <_bss_end+0xeb3000>
    1fc4:	0e6e0b39 	vmoveq.8	d14[5], r0
    1fc8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1fcc:	13011364 	movwne	r1, #4964	; 0x1364
    1fd0:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    1fd4:	03193f01 	tsteq	r9, #1, 30
    1fd8:	3b0b3a0e 	blcc	2d0818 <_bss_end+0x2beb68>
    1fdc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1fe0:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    1fe4:	00136419 	andseq	r6, r3, r9, lsl r4
    1fe8:	000f1500 	andeq	r1, pc, r0, lsl #10
    1fec:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1ff0:	10160000 	andsne	r0, r6, r0
    1ff4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1ff8:	17000013 	smladne	r0, r3, r0, r0
    1ffc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2000:	0b3b0b3a 	bleq	ec4cf0 <_bss_end+0xeb3040>
    2004:	13490b39 	movtne	r0, #39737	; 0x9b39
    2008:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    200c:	16180000 	ldrne	r0, [r8], -r0
    2010:	3a0e0300 	bcc	382c18 <_bss_end+0x370f68>
    2014:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2018:	3213490b 	andscc	r4, r3, #180224	; 0x2c000
    201c:	1900000b 	stmdbne	r0, {r0, r1, r3}
    2020:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2024:	0b3a0e03 	bleq	e85838 <_bss_end+0xe73b88>
    2028:	0b390b3b 	bleq	e44d1c <_bss_end+0xe3306c>
    202c:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2030:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2034:	00001364 	andeq	r1, r0, r4, ror #6
    2038:	0000151a 	andeq	r1, r0, sl, lsl r5
    203c:	00341b00 	eorseq	r1, r4, r0, lsl #22
    2040:	0b3a0e03 	bleq	e85854 <_bss_end+0xe73ba4>
    2044:	0b390b3b 	bleq	e44d38 <_bss_end+0xe33088>
    2048:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    204c:	00001802 	andeq	r1, r0, r2, lsl #16
    2050:	0301131c 	movweq	r1, #4892	; 0x131c
    2054:	3a0b0b0e 	bcc	2c4c94 <_bss_end+0x2b2fe4>
    2058:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    205c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2060:	000d1d00 	andeq	r1, sp, r0, lsl #26
    2064:	0b3a0803 	bleq	e84078 <_bss_end+0xe723c8>
    2068:	0b390b3b 	bleq	e44d5c <_bss_end+0xe330ac>
    206c:	0b381349 	bleq	e06d98 <_bss_end+0xdf50e8>
    2070:	011e0000 	tsteq	lr, r0
    2074:	01134901 	tsteq	r3, r1, lsl #18
    2078:	1f000013 	svcne	0x00000013
    207c:	13490021 	movtne	r0, #36897	; 0x9021
    2080:	00000b2f 	andeq	r0, r0, pc, lsr #22
    2084:	03000220 	movweq	r0, #544	; 0x220
    2088:	00193c0e 	andseq	r3, r9, lr, lsl #24
    208c:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    2090:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2094:	0b3b0b3a 	bleq	ec4d84 <_bss_end+0xeb30d4>
    2098:	0e6e0b39 	vmoveq.8	d14[5], r0
    209c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    20a0:	00001301 	andeq	r1, r0, r1, lsl #6
    20a4:	47003422 	strmi	r3, [r0, -r2, lsr #8]
    20a8:	3b0b3a13 	blcc	2d08fc <_bss_end+0x2bec4c>
    20ac:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    20b0:	23000018 	movwcs	r0, #24
    20b4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    20b8:	0b3b0b3a 	bleq	ec4da8 <_bss_end+0xeb30f8>
    20bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    20c0:	00001802 	andeq	r1, r0, r2, lsl #16
    20c4:	03002e24 	movweq	r2, #3620	; 0xe24
    20c8:	1119340e 	tstne	r9, lr, lsl #8
    20cc:	40061201 	andmi	r1, r6, r1, lsl #4
    20d0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    20d4:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    20d8:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    20dc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    20e0:	96184006 	ldrls	r4, [r8], -r6
    20e4:	13011942 	movwne	r1, #6466	; 0x1942
    20e8:	05260000 	streq	r0, [r6, #-0]!
    20ec:	3a0e0300 	bcc	382cf4 <_bss_end+0x371044>
    20f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    20f8:	27000018 	smladcs	r0, r8, r0, r0
    20fc:	1347012e 	movtne	r0, #28974	; 0x712e
    2100:	0b3b0b3a 	bleq	ec4df0 <_bss_end+0xeb3140>
    2104:	13640b39 	cmnne	r4, #58368	; 0xe400
    2108:	06120111 			; <UNDEFINED> instruction: 0x06120111
    210c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2110:	00130119 	andseq	r0, r3, r9, lsl r1
    2114:	00052800 	andeq	r2, r5, r0, lsl #16
    2118:	13490e03 	movtne	r0, #40451	; 0x9e03
    211c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    2120:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    2124:	3a134701 	bcc	4d3d30 <_bss_end+0x4c2080>
    2128:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    212c:	1113640b 	tstne	r3, fp, lsl #8
    2130:	40061201 	andmi	r1, r6, r1, lsl #4
    2134:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2138:	00001301 	andeq	r1, r0, r1, lsl #6
    213c:	0300052a 	movweq	r0, #1322	; 0x52a
    2140:	3b0b3a08 	blcc	2d0968 <_bss_end+0x2becb8>
    2144:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2148:	00180213 	andseq	r0, r8, r3, lsl r2
    214c:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    2150:	0b3a1347 	bleq	e86e74 <_bss_end+0xe751c4>
    2154:	0b390b3b 	bleq	e44e48 <_bss_end+0xe33198>
    2158:	0b201364 	bleq	806ef0 <_bss_end+0x7f5240>
    215c:	00001301 	andeq	r1, r0, r1, lsl #6
    2160:	0300052c 	movweq	r0, #1324	; 0x52c
    2164:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    2168:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    216c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2170:	0b3b0b3a 	bleq	ec4e60 <_bss_end+0xeb31b0>
    2174:	13490b39 	movtne	r0, #39737	; 0x9b39
    2178:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    217c:	6e133101 	mufvss	f3, f3, f1
    2180:	1113640e 	tstne	r3, lr, lsl #8
    2184:	40061201 	andmi	r1, r6, r1, lsl #4
    2188:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    218c:	00001301 	andeq	r1, r0, r1, lsl #6
    2190:	3100052f 	tstcc	r0, pc, lsr #10
    2194:	00180213 	andseq	r0, r8, r3, lsl r2
    2198:	002e3000 	eoreq	r3, lr, r0
    219c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    21a0:	0b3b0b3a 	bleq	ec4e90 <_bss_end+0xeb31e0>
    21a4:	01110b39 	tsteq	r1, r9, lsr fp
    21a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    21ac:	00194297 	mulseq	r9, r7, r2
    21b0:	002e3100 	eoreq	r3, lr, r0, lsl #2
    21b4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    21b8:	0b3b0b3a 	bleq	ec4ea8 <_bss_end+0xeb31f8>
    21bc:	01110b39 	tsteq	r1, r9, lsr fp
    21c0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    21c4:	00194296 	mulseq	r9, r6, r2
    21c8:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
    21cc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    21d0:	0b3b0b3a 	bleq	ec4ec0 <_bss_end+0xeb3210>
    21d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    21d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    21dc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    21e0:	00130119 	andseq	r0, r3, r9, lsl r1
    21e4:	11010000 	mrsne	r0, (UNDEF: 1)
    21e8:	130e2501 	movwne	r2, #58625	; 0xe501
    21ec:	1b0e030b 	blne	382e20 <_bss_end+0x371170>
    21f0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    21f4:	00171006 	andseq	r1, r7, r6
    21f8:	00240200 	eoreq	r0, r4, r0, lsl #4
    21fc:	0b3e0b0b 	bleq	f84e30 <_bss_end+0xf73180>
    2200:	00000e03 	andeq	r0, r0, r3, lsl #28
    2204:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    2208:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    220c:	0b0b0024 	bleq	2c22a4 <_bss_end+0x2b05f4>
    2210:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2214:	16050000 	strne	r0, [r5], -r0
    2218:	3a0e0300 	bcc	382e20 <_bss_end+0x371170>
    221c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2220:	0013490b 	andseq	r4, r3, fp, lsl #18
    2224:	00350600 	eorseq	r0, r5, r0, lsl #12
    2228:	00001349 	andeq	r1, r0, r9, asr #6
    222c:	03013907 	movweq	r3, #6407	; 0x1907
    2230:	3b0b3a08 	blcc	2d0a58 <_bss_end+0x2beda8>
    2234:	010b390b 	tsteq	fp, fp, lsl #18
    2238:	08000013 	stmdaeq	r0, {r0, r1, r4}
    223c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2240:	0b3b0b3a 	bleq	ec4f30 <_bss_end+0xeb3280>
    2244:	13490b39 	movtne	r0, #39737	; 0x9b39
    2248:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    224c:	0000196c 	andeq	r1, r0, ip, ror #18
    2250:	03003409 	movweq	r3, #1033	; 0x409
    2254:	3b0b3a0e 	blcc	2d0a94 <_bss_end+0x2bede4>
    2258:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    225c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    2260:	00196c0b 	andseq	r6, r9, fp, lsl #24
    2264:	01040a00 	tsteq	r4, r0, lsl #20
    2268:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    226c:	0b0b0b3e 	bleq	2c4f6c <_bss_end+0x2b32bc>
    2270:	0b3a1349 	bleq	e86f9c <_bss_end+0xe752ec>
    2274:	0b390b3b 	bleq	e44f68 <_bss_end+0xe332b8>
    2278:	00001301 	andeq	r1, r0, r1, lsl #6
    227c:	0300280b 	movweq	r2, #2059	; 0x80b
    2280:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    2284:	00280c00 	eoreq	r0, r8, r0, lsl #24
    2288:	0b1c0803 	bleq	70429c <_bss_end+0x6f25ec>
    228c:	340d0000 	strcc	r0, [sp], #-0
    2290:	00134700 	andseq	r4, r3, r0, lsl #14
    2294:	000f0e00 	andeq	r0, pc, r0, lsl #28
    2298:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    229c:	020f0000 	andeq	r0, pc, #0
    22a0:	0b0e0301 	bleq	382eac <_bss_end+0x3711fc>
    22a4:	3b0b3a0b 	blcc	2d0ad8 <_bss_end+0x2bee28>
    22a8:	010b390b 	tsteq	fp, fp, lsl #18
    22ac:	10000013 	andne	r0, r0, r3, lsl r0
    22b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    22b4:	0b3b0b3a 	bleq	ec4fa4 <_bss_end+0xeb32f4>
    22b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    22bc:	00000b38 	andeq	r0, r0, r8, lsr fp
    22c0:	03001611 	movweq	r1, #1553	; 0x611
    22c4:	3b0b3a0e 	blcc	2d0b04 <_bss_end+0x2bee54>
    22c8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    22cc:	000b3213 	andeq	r3, fp, r3, lsl r2
    22d0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    22d4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    22d8:	0b3b0b3a 	bleq	ec4fc8 <_bss_end+0xeb3318>
    22dc:	0e6e0b39 	vmoveq.8	d14[5], r0
    22e0:	0b321349 	bleq	c8700c <_bss_end+0xc7535c>
    22e4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    22e8:	00001301 	andeq	r1, r0, r1, lsl #6
    22ec:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
    22f0:	00193413 	andseq	r3, r9, r3, lsl r4
    22f4:	00051400 	andeq	r1, r5, r0, lsl #8
    22f8:	00001349 	andeq	r1, r0, r9, asr #6
    22fc:	3f012e15 	svccc	0x00012e15
    2300:	3a0e0319 	bcc	382f6c <_bss_end+0x3712bc>
    2304:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2308:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    230c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    2310:	00130113 	andseq	r0, r3, r3, lsl r1
    2314:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    2318:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    231c:	0b3b0b3a 	bleq	ec500c <_bss_end+0xeb335c>
    2320:	0e6e0b39 	vmoveq.8	d14[5], r0
    2324:	0b321349 	bleq	c87050 <_bss_end+0xc753a0>
    2328:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    232c:	15170000 	ldrne	r0, [r7, #-0]
    2330:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2334:	0b0b0010 	bleq	2c237c <_bss_end+0x2b06cc>
    2338:	00001349 	andeq	r1, r0, r9, asr #6
    233c:	03003419 	movweq	r3, #1049	; 0x419
    2340:	3b0b3a0e 	blcc	2d0b80 <_bss_end+0x2beed0>
    2344:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2348:	3c193f13 	ldccc	15, cr3, [r9], {19}
    234c:	1a000019 	bne	23b8 <CPSR_IRQ_INHIBIT+0x2338>
    2350:	0e030104 	adfeqs	f0, f3, f4
    2354:	0b3e196d 	bleq	f88910 <_bss_end+0xf76c60>
    2358:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    235c:	0b3b0b3a 	bleq	ec504c <_bss_end+0xeb339c>
    2360:	0b320b39 	bleq	c8504c <_bss_end+0xc7339c>
    2364:	00001301 	andeq	r1, r0, r1, lsl #6
    2368:	0301131b 	movweq	r1, #4891	; 0x131b
    236c:	3a0b0b0e 	bcc	2c4fac <_bss_end+0x2b32fc>
    2370:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2374:	0013010b 	andseq	r0, r3, fp, lsl #2
    2378:	000d1c00 	andeq	r1, sp, r0, lsl #24
    237c:	0b3a0803 	bleq	e84390 <_bss_end+0xe726e0>
    2380:	0b390b3b 	bleq	e45074 <_bss_end+0xe333c4>
    2384:	0b381349 	bleq	e070b0 <_bss_end+0xdf5400>
    2388:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
    238c:	3a0e0300 	bcc	382f94 <_bss_end+0x3712e4>
    2390:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2394:	3f13490b 	svccc	0x0013490b
    2398:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    239c:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    23a0:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    23a4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    23a8:	0b3b0b3a 	bleq	ec5098 <_bss_end+0xeb33e8>
    23ac:	13490b39 	movtne	r0, #39737	; 0x9b39
    23b0:	0b32193f 	bleq	c888b4 <_bss_end+0xc76c04>
    23b4:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
    23b8:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    23bc:	03193f01 	tsteq	r9, #1, 30
    23c0:	3b0b3a0e 	blcc	2d0c00 <_bss_end+0x2bef50>
    23c4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    23c8:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    23cc:	63193c0b 	tstvs	r9, #2816	; 0xb00
    23d0:	01136419 	tsteq	r3, r9, lsl r4
    23d4:	20000013 	andcs	r0, r0, r3, lsl r0
    23d8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    23dc:	0b3a0e03 	bleq	e85bf0 <_bss_end+0xe73f40>
    23e0:	0b390b3b 	bleq	e450d4 <_bss_end+0xe33424>
    23e4:	193c0e6e 	ldmdbne	ip!, {r1, r2, r3, r5, r6, r9, sl, fp}
    23e8:	13011364 	movwne	r1, #4964	; 0x1364
    23ec:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    23f0:	03193f01 	tsteq	r9, #1, 30
    23f4:	3b0b3a0e 	blcc	2d0c34 <_bss_end+0x2bef84>
    23f8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    23fc:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2400:	00136419 	andseq	r6, r3, r9, lsl r4
    2404:	00342200 	eorseq	r2, r4, r0, lsl #4
    2408:	0b3a0e03 	bleq	e85c1c <_bss_end+0xe73f6c>
    240c:	0b390b3b 	bleq	e45100 <_bss_end+0xe33450>
    2410:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2414:	196c051c 	stmdbne	ip!, {r2, r3, r4, r8, sl}^
    2418:	34230000 	strtcc	r0, [r3], #-0
    241c:	3a0e0300 	bcc	383024 <_bss_end+0x371374>
    2420:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2424:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    2428:	00180219 	andseq	r0, r8, r9, lsl r2
    242c:	01012400 	tsteq	r1, r0, lsl #8
    2430:	13011349 	movwne	r1, #4937	; 0x1349
    2434:	21250000 			; <UNDEFINED> instruction: 0x21250000
    2438:	2f134900 	svccs	0x00134900
    243c:	2600000b 	strcs	r0, [r0], -fp
    2440:	0e030002 	cdpeq	0, 0, cr0, cr3, cr2, {0}
    2444:	0000193c 	andeq	r1, r0, ip, lsr r9
    2448:	3f012e27 	svccc	0x00012e27
    244c:	3a0e0319 	bcc	3830b8 <_bss_end+0x371408>
    2450:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2454:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    2458:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
    245c:	28000013 	stmdacs	r0, {r0, r1, r4}
    2460:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2464:	0b3b0b3a 	bleq	ec5154 <_bss_end+0xeb34a4>
    2468:	13490b39 	movtne	r0, #39737	; 0x9b39
    246c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2470:	21290000 			; <UNDEFINED> instruction: 0x21290000
    2474:	2a000000 	bcs	247c <CPSR_IRQ_INHIBIT+0x23fc>
    2478:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    247c:	0b3a0e03 	bleq	e85c90 <_bss_end+0xe73fe0>
    2480:	0b390b3b 	bleq	e45174 <_bss_end+0xe334c4>
    2484:	01111349 	tsteq	r1, r9, asr #6
    2488:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    248c:	00194296 	mulseq	r9, r6, r2
    2490:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    2494:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2498:	0b3b0b3a 	bleq	ec5188 <_bss_end+0xeb34d8>
    249c:	01110b39 	tsteq	r1, r9, lsr fp
    24a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    24a4:	00194296 	mulseq	r9, r6, r2
    24a8:	11010000 	mrsne	r0, (UNDEF: 1)
    24ac:	130e2501 	movwne	r2, #58625	; 0xe501
    24b0:	1b0e030b 	blne	3830e4 <_bss_end+0x371434>
    24b4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    24b8:	00171006 	andseq	r1, r7, r6
    24bc:	00240200 	eoreq	r0, r4, r0, lsl #4
    24c0:	0b3e0b0b 	bleq	f850f4 <_bss_end+0xf73444>
    24c4:	00000e03 	andeq	r0, r0, r3, lsl #28
    24c8:	0b002403 	bleq	b4dc <_ZN6CTimerC1Em+0x38>
    24cc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    24d0:	04000008 	streq	r0, [r0], #-8
    24d4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    24d8:	0b3b0b3a 	bleq	ec51c8 <_bss_end+0xeb3518>
    24dc:	13490b39 	movtne	r0, #39737	; 0x9b39
    24e0:	26050000 	strcs	r0, [r5], -r0
    24e4:	00134900 	andseq	r4, r3, r0, lsl #18
    24e8:	01130600 	tsteq	r3, r0, lsl #12
    24ec:	0b0b0e03 	bleq	2c5d00 <_bss_end+0x2b4050>
    24f0:	0b3b0b3a 	bleq	ec51e0 <_bss_end+0xeb3530>
    24f4:	13010b39 	movwne	r0, #6969	; 0x1b39
    24f8:	0d070000 	stceq	0, cr0, [r7, #-0]
    24fc:	3a0e0300 	bcc	383104 <_bss_end+0x371454>
    2500:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2504:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2508:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    250c:	0b0b000f 	bleq	2c2550 <_bss_end+0x2b08a0>
    2510:	00001349 	andeq	r1, r0, r9, asr #6
    2514:	03010209 	movweq	r0, #4617	; 0x1209
    2518:	3a0b0b0e 	bcc	2c5158 <_bss_end+0x2b34a8>
    251c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2520:	0013010b 	andseq	r0, r3, fp, lsl #2
    2524:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
    2528:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    252c:	0b3b0b3a 	bleq	ec521c <_bss_end+0xeb356c>
    2530:	0e6e0b39 	vmoveq.8	d14[5], r0
    2534:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2538:	13011364 	movwne	r1, #4964	; 0x1364
    253c:	050b0000 	streq	r0, [fp, #-0]
    2540:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    2544:	0c000019 	stceq	0, cr0, [r0], {25}
    2548:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    254c:	0b3a0e03 	bleq	e85d60 <_bss_end+0xe740b0>
    2550:	0b390b3b 	bleq	e45244 <_bss_end+0xe33594>
    2554:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2558:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    255c:	13011364 	movwne	r1, #4964	; 0x1364
    2560:	050d0000 	streq	r0, [sp, #-0]
    2564:	00134900 	andseq	r4, r3, r0, lsl #18
    2568:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
    256c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2570:	0b3b0b3a 	bleq	ec5260 <_bss_end+0xeb35b0>
    2574:	0e6e0b39 	vmoveq.8	d14[5], r0
    2578:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    257c:	00001364 	andeq	r1, r0, r4, ror #6
    2580:	0b000f0f 	bleq	61c4 <CPSR_IRQ_INHIBIT+0x6144>
    2584:	1000000b 	andne	r0, r0, fp
    2588:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    258c:	0b3b0b3a 	bleq	ec527c <_bss_end+0xeb35cc>
    2590:	13490b39 	movtne	r0, #39737	; 0x9b39
    2594:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2598:	39110000 	ldmdbcc	r1, {}	; <UNPREDICTABLE>
    259c:	3a080301 	bcc	2031a8 <_bss_end+0x1f14f8>
    25a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25a4:	0013010b 	andseq	r0, r3, fp, lsl #2
    25a8:	00341200 	eorseq	r1, r4, r0, lsl #4
    25ac:	0b3a0e03 	bleq	e85dc0 <_bss_end+0xe74110>
    25b0:	0b390b3b 	bleq	e452a4 <_bss_end+0xe335f4>
    25b4:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    25b8:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
    25bc:	34130000 	ldrcc	r0, [r3], #-0
    25c0:	3a0e0300 	bcc	3831c8 <_bss_end+0x371518>
    25c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25c8:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    25cc:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    25d0:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
    25d4:	13470034 	movtne	r0, #28724	; 0x7034
    25d8:	34150000 	ldrcc	r0, [r5], #-0
    25dc:	3a0e0300 	bcc	3831e4 <_bss_end+0x371534>
    25e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25e4:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    25e8:	6c051c19 	stcvs	12, cr1, [r5], {25}
    25ec:	16000019 			; <UNDEFINED> instruction: 0x16000019
    25f0:	0e030102 	adfeqs	f0, f3, f2
    25f4:	0b3a050b 	bleq	e83a28 <_bss_end+0xe71d78>
    25f8:	0b390b3b 	bleq	e452ec <_bss_end+0xe3363c>
    25fc:	00001301 	andeq	r1, r0, r1, lsl #6
    2600:	3f012e17 	svccc	0x00012e17
    2604:	3a0e0319 	bcc	383270 <_bss_end+0x3715c0>
    2608:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    260c:	3c0e6e0b 	stccc	14, cr6, [lr], {11}
    2610:	01136419 	tsteq	r3, r9, lsl r4
    2614:	18000013 	stmdane	r0, {r0, r1, r4}
    2618:	13490101 	movtne	r0, #37121	; 0x9101
    261c:	00001301 	andeq	r1, r0, r1, lsl #6
    2620:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
    2624:	00052f13 	andeq	r2, r5, r3, lsl pc
    2628:	00341a00 	eorseq	r1, r4, r0, lsl #20
    262c:	0b3a1347 	bleq	e87350 <_bss_end+0xe756a0>
    2630:	0b390b3b 	bleq	e45324 <_bss_end+0xe33674>
    2634:	00001802 	andeq	r1, r0, r2, lsl #16
    2638:	03002e1b 	movweq	r2, #3611	; 0xe1b
    263c:	1119340e 	tstne	r9, lr, lsl #8
    2640:	40061201 	andmi	r1, r6, r1, lsl #4
    2644:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2648:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    264c:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    2650:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2654:	96184006 	ldrls	r4, [r8], -r6
    2658:	13011942 	movwne	r1, #6466	; 0x1942
    265c:	051d0000 	ldreq	r0, [sp, #-0]
    2660:	3a0e0300 	bcc	383268 <_bss_end+0x3715b8>
    2664:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2668:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    266c:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    2670:	1347012e 	movtne	r0, #28974	; 0x712e
    2674:	0b3b0b3a 	bleq	ec5364 <_bss_end+0xeb36b4>
    2678:	13640b39 	cmnne	r4, #58368	; 0xe400
    267c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2680:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2684:	00130119 	andseq	r0, r3, r9, lsl r1
    2688:	00051f00 	andeq	r1, r5, r0, lsl #30
    268c:	13490e03 	movtne	r0, #40451	; 0x9e03
    2690:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    2694:	05200000 	streq	r0, [r0, #-0]!
    2698:	3a080300 	bcc	2032a0 <_bss_end+0x1f15f0>
    269c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    26a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    26a4:	21000018 	tstcs	r0, r8, lsl r0
    26a8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    26ac:	0b3b0b3a 	bleq	ec539c <_bss_end+0xeb36ec>
    26b0:	13490b39 	movtne	r0, #39737	; 0x9b39
    26b4:	00001802 	andeq	r1, r0, r2, lsl #16
    26b8:	47012e22 	strmi	r2, [r1, -r2, lsr #28]
    26bc:	3b0b3a13 	blcc	2d0f10 <_bss_end+0x2bf260>
    26c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    26c4:	11136413 	tstne	r3, r3, lsl r4
    26c8:	40061201 	andmi	r1, r6, r1, lsl #4
    26cc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    26d0:	00001301 	andeq	r1, r0, r1, lsl #6
    26d4:	47012e23 	strmi	r2, [r1, -r3, lsr #28]
    26d8:	3b0b3a13 	blcc	2d0f2c <_bss_end+0x2bf27c>
    26dc:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    26e0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    26e4:	96184006 	ldrls	r4, [r8], -r6
    26e8:	13011942 	movwne	r1, #6466	; 0x1942
    26ec:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    26f0:	3a134701 	bcc	4d42fc <_bss_end+0x4c264c>
    26f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    26f8:	2013640b 	andscs	r6, r3, fp, lsl #8
    26fc:	0013010b 	andseq	r0, r3, fp, lsl #2
    2700:	00052500 	andeq	r2, r5, r0, lsl #10
    2704:	13490e03 	movtne	r0, #40451	; 0x9e03
    2708:	00001934 	andeq	r1, r0, r4, lsr r9
    270c:	31012e26 	tstcc	r1, r6, lsr #28
    2710:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    2714:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2718:	96184006 	ldrls	r4, [r8], -r6
    271c:	00001942 	andeq	r1, r0, r2, asr #18
    2720:	31000527 	tstcc	r0, r7, lsr #10
    2724:	00180213 	andseq	r0, r8, r3, lsl r2
    2728:	11010000 	mrsne	r0, (UNDEF: 1)
    272c:	130e2501 	movwne	r2, #58625	; 0xe501
    2730:	1b0e030b 	blne	383364 <_bss_end+0x3716b4>
    2734:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2738:	00171006 	andseq	r1, r7, r6
    273c:	00240200 	eoreq	r0, r4, r0, lsl #4
    2740:	0b3e0b0b 	bleq	f85374 <_bss_end+0xf736c4>
    2744:	00000e03 	andeq	r0, r0, r3, lsl #28
    2748:	0b002403 	bleq	b75c <_ZN5CTRNGC1Ej+0x28>
    274c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2750:	04000008 	streq	r0, [r0], #-8
    2754:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2758:	0b3b0b3a 	bleq	ec5448 <_bss_end+0xeb3798>
    275c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2760:	26050000 	strcs	r0, [r5], -r0
    2764:	00134900 	andseq	r4, r3, r0, lsl #18
    2768:	01390600 	teqeq	r9, r0, lsl #12
    276c:	0b3a0803 	bleq	e84780 <_bss_end+0xe72ad0>
    2770:	0b390b3b 	bleq	e45464 <_bss_end+0xe337b4>
    2774:	00001301 	andeq	r1, r0, r1, lsl #6
    2778:	03003407 	movweq	r3, #1031	; 0x407
    277c:	3b0b3a0e 	blcc	2d0fbc <_bss_end+0x2bf30c>
    2780:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2784:	1c193c13 	ldcne	12, cr3, [r9], {19}
    2788:	00196c06 	andseq	r6, r9, r6, lsl #24
    278c:	00340800 	eorseq	r0, r4, r0, lsl #16
    2790:	0b3a0e03 	bleq	e85fa4 <_bss_end+0xe742f4>
    2794:	0b390b3b 	bleq	e45488 <_bss_end+0xe337d8>
    2798:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    279c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    27a0:	34090000 	strcc	r0, [r9], #-0
    27a4:	00134700 	andseq	r4, r3, r0, lsl #14
    27a8:	00340a00 	eorseq	r0, r4, r0, lsl #20
    27ac:	0b3a0e03 	bleq	e85fc0 <_bss_end+0xe74310>
    27b0:	0b390b3b 	bleq	e454a4 <_bss_end+0xe337f4>
    27b4:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    27b8:	196c051c 	stmdbne	ip!, {r2, r3, r4, r8, sl}^
    27bc:	020b0000 	andeq	r0, fp, #0
    27c0:	0b0e0301 	bleq	3833cc <_bss_end+0x37171c>
    27c4:	3b0b3a05 	blcc	2d0fe0 <_bss_end+0x2bf330>
    27c8:	010b390b 	tsteq	fp, fp, lsl #18
    27cc:	0c000013 	stceq	0, cr0, [r0], {19}
    27d0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    27d4:	0b3b0b3a 	bleq	ec54c4 <_bss_end+0xeb3814>
    27d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    27dc:	00000b38 	andeq	r0, r0, r8, lsr fp
    27e0:	3f012e0d 	svccc	0x00012e0d
    27e4:	3a0e0319 	bcc	383450 <_bss_end+0x3717a0>
    27e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    27ec:	3c0e6e0b 	stccc	14, cr6, [lr], {11}
    27f0:	01136419 	tsteq	r3, r9, lsl r4
    27f4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    27f8:	13490005 	movtne	r0, #36869	; 0x9005
    27fc:	00001934 	andeq	r1, r0, r4, lsr r9
    2800:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
    2804:	10000013 	andne	r0, r0, r3, lsl r0
    2808:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    280c:	0b3a0e03 	bleq	e86020 <_bss_end+0xe74370>
    2810:	0b390b3b 	bleq	e45504 <_bss_end+0xe33854>
    2814:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2818:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    281c:	13011364 	movwne	r1, #4964	; 0x1364
    2820:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    2824:	03193f01 	tsteq	r9, #1, 30
    2828:	3b0b3a0e 	blcc	2d1068 <_bss_end+0x2bf3b8>
    282c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2830:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2834:	00136419 	andseq	r6, r3, r9, lsl r4
    2838:	01011200 	mrseq	r1, R9_usr
    283c:	13011349 	movwne	r1, #4937	; 0x1349
    2840:	21130000 	tstcs	r3, r0
    2844:	2f134900 	svccs	0x00134900
    2848:	14000005 	strne	r0, [r0], #-5
    284c:	0b0b000f 	bleq	2c2890 <_bss_end+0x2b0be0>
    2850:	00001349 	andeq	r1, r0, r9, asr #6
    2854:	03003415 	movweq	r3, #1045	; 0x415
    2858:	3b0b3a0e 	blcc	2d1098 <_bss_end+0x2bf3e8>
    285c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2860:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2864:	16000019 			; <UNDEFINED> instruction: 0x16000019
    2868:	13470034 	movtne	r0, #28724	; 0x7034
    286c:	0b3b0b3a 	bleq	ec555c <_bss_end+0xeb38ac>
    2870:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    2874:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    2878:	340e0300 	strcc	r0, [lr], #-768	; 0xfffffd00
    287c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2880:	96184006 	ldrls	r4, [r8], -r6
    2884:	00001942 	andeq	r1, r0, r2, asr #18
    2888:	03012e18 	movweq	r2, #7704	; 0x1e18
    288c:	1119340e 	tstne	r9, lr, lsl #8
    2890:	40061201 	andmi	r1, r6, r1, lsl #4
    2894:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2898:	00001301 	andeq	r1, r0, r1, lsl #6
    289c:	03000519 	movweq	r0, #1305	; 0x519
    28a0:	3b0b3a0e 	blcc	2d10e0 <_bss_end+0x2bf430>
    28a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    28a8:	00180213 	andseq	r0, r8, r3, lsl r2
    28ac:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
    28b0:	0b3a1347 	bleq	e875d4 <_bss_end+0xe75924>
    28b4:	0b390b3b 	bleq	e455a8 <_bss_end+0xe338f8>
    28b8:	01111364 	tsteq	r1, r4, ror #6
    28bc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    28c0:	01194296 			; <UNDEFINED> instruction: 0x01194296
    28c4:	1b000013 	blne	2918 <CPSR_IRQ_INHIBIT+0x2898>
    28c8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    28cc:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    28d0:	00001802 	andeq	r1, r0, r2, lsl #16
    28d4:	0300051c 	movweq	r0, #1308	; 0x51c
    28d8:	3b0b3a08 	blcc	2d1100 <_bss_end+0x2bf450>
    28dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    28e0:	00180213 	andseq	r0, r8, r3, lsl r2
    28e4:	00341d00 	eorseq	r1, r4, r0, lsl #26
    28e8:	0b3a0803 	bleq	e848fc <_bss_end+0xe72c4c>
    28ec:	0b390b3b 	bleq	e455e0 <_bss_end+0xe33930>
    28f0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    28f4:	0b1e0000 	bleq	7828fc <_bss_end+0x770c4c>
    28f8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    28fc:	1f000006 	svcne	0x00000006
    2900:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2904:	0b3b0b3a 	bleq	ec55f4 <_bss_end+0xeb3944>
    2908:	13490b39 	movtne	r0, #39737	; 0x9b39
    290c:	00001802 	andeq	r1, r0, r2, lsl #16
    2910:	47012e20 	strmi	r2, [r1, -r0, lsr #28]
    2914:	390b3a13 	stmdbcc	fp, {r0, r1, r4, r9, fp, ip, sp}
    2918:	1113640b 	tstne	r3, fp, lsl #8
    291c:	40061201 	andmi	r1, r6, r1, lsl #4
    2920:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2924:	00001301 	andeq	r1, r0, r1, lsl #6
    2928:	47012e21 	strmi	r2, [r1, -r1, lsr #28]
    292c:	3b0b3a13 	blcc	2d1180 <_bss_end+0x2bf4d0>
    2930:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    2934:	010b2013 	tsteq	fp, r3, lsl r0
    2938:	22000013 	andcs	r0, r0, #19
    293c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2940:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    2944:	0b230000 	bleq	8c294c <_bss_end+0x8b0c9c>
    2948:	24000001 	strcs	r0, [r0], #-1
    294c:	08030034 	stmdaeq	r3, {r2, r4, r5}
    2950:	0b3b0b3a 	bleq	ec5640 <_bss_end+0xeb3990>
    2954:	13490b39 	movtne	r0, #39737	; 0x9b39
    2958:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    295c:	6e133101 	mufvss	f3, f3, f1
    2960:	1113640e 	tstne	r3, lr, lsl #8
    2964:	40061201 	andmi	r1, r6, r1, lsl #4
    2968:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    296c:	05260000 	streq	r0, [r6, #-0]!
    2970:	02133100 	andseq	r3, r3, #0, 2
    2974:	27000018 	smladcs	r0, r8, r0, r0
    2978:	1331010b 	teqne	r1, #-1073741822	; 0xc0000002
    297c:	00001301 	andeq	r1, r0, r1, lsl #6
    2980:	31003428 	tstcc	r0, r8, lsr #8
    2984:	29000013 	stmdbcs	r0, {r0, r1, r4}
    2988:	1331010b 	teqne	r1, #-1073741822	; 0xc0000002
    298c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2990:	342a0000 	strtcc	r0, [sl], #-0
    2994:	02133100 	andseq	r3, r3, #0, 2
    2998:	00000018 	andeq	r0, r0, r8, lsl r0
    299c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    29a0:	030b130e 	movweq	r1, #45838	; 0xb30e
    29a4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    29a8:	10011117 	andne	r1, r1, r7, lsl r1
    29ac:	02000017 	andeq	r0, r0, #23
    29b0:	0b0b0024 	bleq	2c2a48 <_bss_end+0x2b0d98>
    29b4:	0e030b3e 	vmoveq.16	d3[0], r0
    29b8:	26030000 	strcs	r0, [r3], -r0
    29bc:	00134900 	andseq	r4, r3, r0, lsl #18
    29c0:	00240400 	eoreq	r0, r4, r0, lsl #8
    29c4:	0b3e0b0b 	bleq	f855f8 <_bss_end+0xf73948>
    29c8:	00000803 	andeq	r0, r0, r3, lsl #16
    29cc:	03001605 	movweq	r1, #1541	; 0x605
    29d0:	3b0b3a0e 	blcc	2d1210 <_bss_end+0x2bf560>
    29d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    29d8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    29dc:	13490035 	movtne	r0, #36917	; 0x9035
    29e0:	34070000 	strcc	r0, [r7], #-0
    29e4:	3a0e0300 	bcc	3835ec <_bss_end+0x37193c>
    29e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    29ec:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    29f0:	00180219 	andseq	r0, r8, r9, lsl r2
    29f4:	01040800 	tsteq	r4, r0, lsl #16
    29f8:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    29fc:	0b0b0b3e 	bleq	2c56fc <_bss_end+0x2b3a4c>
    2a00:	0b3a1349 	bleq	e8772c <_bss_end+0xe75a7c>
    2a04:	0b390b3b 	bleq	e456f8 <_bss_end+0xe33a48>
    2a08:	00001301 	andeq	r1, r0, r1, lsl #6
    2a0c:	03002809 	movweq	r2, #2057	; 0x809
    2a10:	000b1c08 	andeq	r1, fp, r8, lsl #24
    2a14:	00280a00 	eoreq	r0, r8, r0, lsl #20
    2a18:	0b1c0e03 	bleq	70622c <_bss_end+0x6f457c>
    2a1c:	130b0000 	movwne	r0, #45056	; 0xb000
    2a20:	0b0e0301 	bleq	38362c <_bss_end+0x37197c>
    2a24:	3b0b3a0b 	blcc	2d1258 <_bss_end+0x2bf5a8>
    2a28:	010b390b 	tsteq	fp, fp, lsl #18
    2a2c:	0c000013 	stceq	0, cr0, [r0], {19}
    2a30:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2a34:	0b3b0b3a 	bleq	ec5724 <_bss_end+0xeb3a74>
    2a38:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a3c:	00000b38 	andeq	r0, r0, r8, lsr fp
    2a40:	03000d0d 	movweq	r0, #3341	; 0xd0d
    2a44:	3b0b3a0e 	blcc	2d1284 <_bss_end+0x2bf5d4>
    2a48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2a4c:	000b3813 	andeq	r3, fp, r3, lsl r8
    2a50:	01010e00 	tsteq	r1, r0, lsl #28
    2a54:	13011349 	movwne	r1, #4937	; 0x1349
    2a58:	210f0000 	mrscs	r0, CPSR
    2a5c:	2f134900 	svccs	0x00134900
    2a60:	1000000b 	andne	r0, r0, fp
    2a64:	0b0b000f 	bleq	2c2aa8 <_bss_end+0x2b0df8>
    2a68:	00001349 	andeq	r1, r0, r9, asr #6
    2a6c:	03010211 	movweq	r0, #4625	; 0x1211
    2a70:	3a0b0b0e 	bcc	2c56b0 <_bss_end+0x2b3a00>
    2a74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2a78:	01131d0b 	tsteq	r3, fp, lsl #26
    2a7c:	12000013 	andne	r0, r0, #19
    2a80:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2a84:	0b381349 	bleq	e077b0 <_bss_end+0xdf5b00>
    2a88:	0b321934 	bleq	c88f60 <_bss_end+0xc772b0>
    2a8c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    2a90:	03193f01 	tsteq	r9, #1, 30
    2a94:	3b0b3a0e 	blcc	2d12d4 <_bss_end+0x2bf624>
    2a98:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2a9c:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    2aa0:	32131d0b 	andscc	r1, r3, #704	; 0x2c0
    2aa4:	8b193c0b 	blhi	651ad8 <_bss_end+0x63fe28>
    2aa8:	13640b01 	cmnne	r4, #1024	; 0x400
    2aac:	00001301 	andeq	r1, r0, r1, lsl #6
    2ab0:	49000514 	stmdbmi	r0, {r2, r4, r8, sl}
    2ab4:	00193413 	andseq	r3, r9, r3, lsl r4
    2ab8:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
    2abc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2ac0:	0b3b0b3a 	bleq	ec57b0 <_bss_end+0xeb3b00>
    2ac4:	0e6e0b39 	vmoveq.8	d14[5], r0
    2ac8:	0b4c1349 	bleq	13077f4 <_bss_end+0x12f5b44>
    2acc:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    2ad0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2ad4:	13011364 	movwne	r1, #4964	; 0x1364
    2ad8:	05160000 	ldreq	r0, [r6, #-0]
    2adc:	00134900 	andseq	r4, r3, r0, lsl #18
    2ae0:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    2ae4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2ae8:	0b3b0b3a 	bleq	ec57d8 <_bss_end+0xeb3b28>
    2aec:	0e6e0b39 	vmoveq.8	d14[5], r0
    2af0:	0b4c1349 	bleq	130781c <_bss_end+0x12f5b6c>
    2af4:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    2af8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2afc:	00001364 	andeq	r1, r0, r4, ror #6
    2b00:	03010218 	movweq	r0, #4632	; 0x1218
    2b04:	3a0b0b0e 	bcc	2c5744 <_bss_end+0x2b3a94>
    2b08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b0c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2b10:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    2b14:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2b18:	0b3b0b3a 	bleq	ec5808 <_bss_end+0xeb3b58>
    2b1c:	0e6e0b39 	vmoveq.8	d14[5], r0
    2b20:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2b24:	00001364 	andeq	r1, r0, r4, ror #6
    2b28:	03000d1a 	movweq	r0, #3354	; 0xd1a
    2b2c:	3b0b3a0e 	blcc	2d136c <_bss_end+0x2bf6bc>
    2b30:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2b34:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2b38:	1b000019 	blne	2ba4 <CPSR_IRQ_INHIBIT+0x2b24>
    2b3c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2b40:	0b3a0e03 	bleq	e86354 <_bss_end+0xe746a4>
    2b44:	0b390b3b 	bleq	e45838 <_bss_end+0xe33b88>
    2b48:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2b4c:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2b50:	13011364 	movwne	r1, #4964	; 0x1364
    2b54:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    2b58:	03193f01 	tsteq	r9, #1, 30
    2b5c:	3b0b3a0e 	blcc	2d139c <_bss_end+0x2bf6ec>
    2b60:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2b64:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2b68:	01136419 	tsteq	r3, r9, lsl r4
    2b6c:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    2b70:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2b74:	0b3a0e03 	bleq	e86388 <_bss_end+0xe746d8>
    2b78:	0b390b3b 	bleq	e4586c <_bss_end+0xe33bbc>
    2b7c:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2b80:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2b84:	00001364 	andeq	r1, r0, r4, ror #6
    2b88:	0300021e 	movweq	r0, #542	; 0x21e
    2b8c:	00193c0e 	andseq	r3, r9, lr, lsl #24
    2b90:	00211f00 	eoreq	r1, r1, r0, lsl #30
    2b94:	34200000 	strtcc	r0, [r0], #-0
    2b98:	3a0e0300 	bcc	3837a0 <_bss_end+0x371af0>
    2b9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ba0:	3f13490b 	svccc	0x0013490b
    2ba4:	00193c19 	andseq	r3, r9, r9, lsl ip
    2ba8:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    2bac:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2bb0:	0b3b0b3a 	bleq	ec58a0 <_bss_end+0xeb3bf0>
    2bb4:	0e6e0b39 	vmoveq.8	d14[5], r0
    2bb8:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    2bbc:	00001301 	andeq	r1, r0, r1, lsl #6
    2bc0:	3f012e22 	svccc	0x00012e22
    2bc4:	3a0e0319 	bcc	383830 <_bss_end+0x371b80>
    2bc8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2bcc:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    2bd0:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    2bd4:	23000013 	movwcs	r0, #19
    2bd8:	0b0b0010 	bleq	2c2c20 <_bss_end+0x2b0f70>
    2bdc:	00001349 	andeq	r1, r0, r9, asr #6
    2be0:	03010424 	movweq	r0, #5156	; 0x1424
    2be4:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    2be8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2bec:	3b0b3a13 	blcc	2d1440 <_bss_end+0x2bf790>
    2bf0:	320b390b 	andcc	r3, fp, #180224	; 0x2c000
    2bf4:	0013010b 	andseq	r0, r3, fp, lsl #2
    2bf8:	000d2500 	andeq	r2, sp, r0, lsl #10
    2bfc:	0b3a0e03 	bleq	e86410 <_bss_end+0xe74760>
    2c00:	0b390b3b 	bleq	e458f4 <_bss_end+0xe33c44>
    2c04:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2c08:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2c0c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    2c10:	0d260000 	stceq	0, cr0, [r6, #-0]
    2c14:	3a0e0300 	bcc	38381c <_bss_end+0x371b6c>
    2c18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c1c:	3f13490b 	svccc	0x0013490b
    2c20:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    2c24:	00196c19 	andseq	r6, r9, r9, lsl ip
    2c28:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    2c2c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2c30:	0b3b0b3a 	bleq	ec5920 <_bss_end+0xeb3c70>
    2c34:	0e6e0b39 	vmoveq.8	d14[5], r0
    2c38:	0b321349 	bleq	c87964 <_bss_end+0xc75cb4>
    2c3c:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    2c40:	13011364 	movwne	r1, #4964	; 0x1364
    2c44:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    2c48:	03193f01 	tsteq	r9, #1, 30
    2c4c:	3b0b3a0e 	blcc	2d148c <_bss_end+0x2bf7dc>
    2c50:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2c54:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    2c58:	01136419 	tsteq	r3, r9, lsl r4
    2c5c:	29000013 	stmdbcs	r0, {r0, r1, r4}
    2c60:	0803002f 	stmdaeq	r3, {r0, r1, r2, r3, r5}
    2c64:	00001349 	andeq	r1, r0, r9, asr #6
    2c68:	0b000f2a 	bleq	6918 <CPSR_IRQ_INHIBIT+0x6898>
    2c6c:	2b00000b 	blcs	2ca0 <CPSR_IRQ_INHIBIT+0x2c20>
    2c70:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    2c74:	0b3b0b3a 	bleq	ec5964 <_bss_end+0xeb3cb4>
    2c78:	13010b39 	movwne	r0, #6969	; 0x1b39
    2c7c:	342c0000 	strtcc	r0, [ip], #-0
    2c80:	3a0e0300 	bcc	383888 <_bss_end+0x371bd8>
    2c84:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c88:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    2c8c:	6c061c19 	stcvs	12, cr1, [r6], {25}
    2c90:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    2c94:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2c98:	0b3b0b3a 	bleq	ec5988 <_bss_end+0xeb3cd8>
    2c9c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ca0:	0b1c193c 	bleq	709198 <_bss_end+0x6f74e8>
    2ca4:	0000196c 	andeq	r1, r0, ip, ror #18
    2ca8:	4700342e 	strmi	r3, [r0, -lr, lsr #8]
    2cac:	2f000013 	svccs	0x00000013
    2cb0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2cb4:	0b3b0b3a 	bleq	ec59a4 <_bss_end+0xeb3cf4>
    2cb8:	13490b39 	movtne	r0, #39737	; 0x9b39
    2cbc:	051c193c 	ldreq	r1, [ip, #-2364]	; 0xfffff6c4
    2cc0:	0000196c 	andeq	r1, r0, ip, ror #18
    2cc4:	03010230 	movweq	r0, #4656	; 0x1230
    2cc8:	3a050b0e 	bcc	145908 <_bss_end+0x133c58>
    2ccc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2cd0:	0013010b 	andseq	r0, r3, fp, lsl #2
    2cd4:	00213100 	eoreq	r3, r1, r0, lsl #2
    2cd8:	052f1349 	streq	r1, [pc, #-841]!	; 2997 <CPSR_IRQ_INHIBIT+0x2917>
    2cdc:	34320000 	ldrtcc	r0, [r2], #-0
    2ce0:	3a134700 	bcc	4d48e8 <_bss_end+0x4c2c38>
    2ce4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ce8:	0018020b 	andseq	r0, r8, fp, lsl #4
    2cec:	01153300 	tsteq	r5, r0, lsl #6
    2cf0:	13011349 	movwne	r1, #4937	; 0x1349
    2cf4:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
    2cf8:	35000000 	strcc	r0, [r0, #-0]
    2cfc:	0b0b000f 	bleq	2c2d40 <_bss_end+0x2b1090>
    2d00:	13490e03 	movtne	r0, #40451	; 0x9e03
    2d04:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
    2d08:	340e0300 	strcc	r0, [lr], #-768	; 0xfffffd00
    2d0c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2d10:	96184006 	ldrls	r4, [r8], -r6
    2d14:	00001942 	andeq	r1, r0, r2, asr #18
    2d18:	03012e37 	movweq	r2, #7735	; 0x1e37
    2d1c:	1119340e 	tstne	r9, lr, lsl #8
    2d20:	40061201 	andmi	r1, r6, r1, lsl #4
    2d24:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2d28:	00001301 	andeq	r1, r0, r1, lsl #6
    2d2c:	03000538 	movweq	r0, #1336	; 0x538
    2d30:	3b0b3a0e 	blcc	2d1570 <_bss_end+0x2bf8c0>
    2d34:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2d38:	00180213 	andseq	r0, r8, r3, lsl r2
    2d3c:	012e3900 			; <UNDEFINED> instruction: 0x012e3900
    2d40:	13641347 	cmnne	r4, #469762049	; 0x1c000001
    2d44:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2d48:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2d4c:	00130119 	andseq	r0, r3, r9, lsl r1
    2d50:	00053a00 	andeq	r3, r5, r0, lsl #20
    2d54:	13490e03 	movtne	r0, #40451	; 0x9e03
    2d58:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    2d5c:	2e3b0000 	cdpcs	0, 3, cr0, cr11, cr0, {0}
    2d60:	3a134701 	bcc	4d496c <_bss_end+0x4c2cbc>
    2d64:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d68:	1113640b 	tstne	r3, fp, lsl #8
    2d6c:	40061201 	andmi	r1, r6, r1, lsl #4
    2d70:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2d74:	00001301 	andeq	r1, r0, r1, lsl #6
    2d78:	0300053c 	movweq	r0, #1340	; 0x53c
    2d7c:	3b0b3a0e 	blcc	2d15bc <_bss_end+0x2bf90c>
    2d80:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2d84:	00180213 	andseq	r0, r8, r3, lsl r2
    2d88:	00053d00 	andeq	r3, r5, r0, lsl #26
    2d8c:	0b3a0803 	bleq	e84da0 <_bss_end+0xe730f0>
    2d90:	0b390b3b 	bleq	e45a84 <_bss_end+0xe33dd4>
    2d94:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2d98:	0b3e0000 	bleq	f82da0 <_bss_end+0xf710f0>
    2d9c:	00175501 	andseq	r5, r7, r1, lsl #10
    2da0:	00343f00 	eorseq	r3, r4, r0, lsl #30
    2da4:	0b3a0803 	bleq	e84db8 <_bss_end+0xe73108>
    2da8:	0b390b3b 	bleq	e45a9c <_bss_end+0xe33dec>
    2dac:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2db0:	2e400000 	cdpcs	0, 4, cr0, cr0, cr0, {0}
    2db4:	3a134701 	bcc	4d49c0 <_bss_end+0x4c2d10>
    2db8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2dbc:	1113640b 	tstne	r3, fp, lsl #8
    2dc0:	40061201 	andmi	r1, r6, r1, lsl #4
    2dc4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2dc8:	00001301 	andeq	r1, r0, r1, lsl #6
    2dcc:	03003441 	movweq	r3, #1089	; 0x441
    2dd0:	3b0b3a0e 	blcc	2d1610 <_bss_end+0x2bf960>
    2dd4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2dd8:	00180213 	andseq	r0, r8, r3, lsl r2
    2ddc:	010b4200 	mrseq	r4, R11_fiq
    2de0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2de4:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
    2de8:	3a134701 	bcc	4d49f4 <_bss_end+0x4c2d44>
    2dec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2df0:	2013640b 	andscs	r6, r3, fp, lsl #8
    2df4:	0013010b 	andseq	r0, r3, fp, lsl #2
    2df8:	00054400 	andeq	r4, r5, r0, lsl #8
    2dfc:	13490e03 	movtne	r0, #40451	; 0x9e03
    2e00:	00001934 	andeq	r1, r0, r4, lsr r9
    2e04:	31012e45 	tstcc	r1, r5, asr #28
    2e08:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    2e0c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2e10:	97184006 	ldrls	r4, [r8, -r6]
    2e14:	00001942 	andeq	r1, r0, r2, asr #18
    2e18:	31000546 	tstcc	r0, r6, asr #10
    2e1c:	00180213 	andseq	r0, r8, r3, lsl r2
    2e20:	11010000 	mrsne	r0, (UNDEF: 1)
    2e24:	11061000 	mrsne	r1, (UNDEF: 6)
    2e28:	03011201 	movweq	r1, #4609	; 0x1201
    2e2c:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2e30:	0005130e 	andeq	r1, r5, lr, lsl #6
    2e34:	11010000 	mrsne	r0, (UNDEF: 1)
    2e38:	55061000 	strpl	r1, [r6, #-0]
    2e3c:	1b0e0306 	blne	383a5c <_bss_end+0x371dac>
    2e40:	130e250e 	movwne	r2, #58638	; 0xe50e
    2e44:	00000005 	andeq	r0, r0, r5
    2e48:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2e4c:	030b130e 	movweq	r1, #45838	; 0xb30e
    2e50:	110e1b0e 	tstne	lr, lr, lsl #22
    2e54:	10061201 	andne	r1, r6, r1, lsl #4
    2e58:	02000017 	andeq	r0, r0, #23
    2e5c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2e60:	0b3b0b3a 	bleq	ec5b50 <_bss_end+0xeb3ea0>
    2e64:	13490b39 	movtne	r0, #39737	; 0x9b39
    2e68:	0f030000 	svceq	0x00030000
    2e6c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2e70:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    2e74:	00000015 	andeq	r0, r0, r5, lsl r0
    2e78:	03003405 	movweq	r3, #1029	; 0x405
    2e7c:	3b0b3a0e 	blcc	2d16bc <_bss_end+0x2bfa0c>
    2e80:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e84:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2e88:	06000019 			; <UNDEFINED> instruction: 0x06000019
    2e8c:	0b0b0024 	bleq	2c2f24 <_bss_end+0x2b1274>
    2e90:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2e94:	01070000 	mrseq	r0, (UNDEF: 7)
    2e98:	01134901 	tsteq	r3, r1, lsl #18
    2e9c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2ea0:	13490021 	movtne	r0, #36897	; 0x9021
    2ea4:	0000062f 	andeq	r0, r0, pc, lsr #12
    2ea8:	0b002409 	bleq	bed4 <_ZN11CFilesystem10InitializeEv+0x2e4>
    2eac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2eb0:	0a00000e 	beq	2ef0 <CPSR_IRQ_INHIBIT+0x2e70>
    2eb4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2eb8:	0b3a0e03 	bleq	e866cc <_bss_end+0xe74a1c>
    2ebc:	0b390b3b 	bleq	e45bb0 <_bss_end+0xe33f00>
    2ec0:	01111349 	tsteq	r1, r9, asr #6
    2ec4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2ec8:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2ecc:	0b000013 	bleq	2f20 <CPSR_IRQ_INHIBIT+0x2ea0>
    2ed0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2ed4:	0b3b0b3a 	bleq	ec5bc4 <_bss_end+0xeb3f14>
    2ed8:	13490b39 	movtne	r0, #39737	; 0x9b39
    2edc:	00001802 	andeq	r1, r0, r2, lsl #16
    2ee0:	3f012e0c 	svccc	0x00012e0c
    2ee4:	3a0e0319 	bcc	383b50 <_bss_end+0x371ea0>
    2ee8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2eec:	1113490b 	tstne	r3, fp, lsl #18
    2ef0:	40061201 	andmi	r1, r6, r1, lsl #4
    2ef4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2ef8:	00001301 	andeq	r1, r0, r1, lsl #6
    2efc:	0300340d 	movweq	r3, #1037	; 0x40d
    2f00:	3b0b3a08 	blcc	2d1728 <_bss_end+0x2bfa78>
    2f04:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2f08:	00180213 	andseq	r0, r8, r3, lsl r2
    2f0c:	11010000 	mrsne	r0, (UNDEF: 1)
    2f10:	130e2501 	movwne	r2, #58625	; 0xe501
    2f14:	1b0e030b 	blne	383b48 <_bss_end+0x371e98>
    2f18:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2f1c:	00171006 	andseq	r1, r7, r6
    2f20:	00240200 	eoreq	r0, r4, r0, lsl #4
    2f24:	0b3e0b0b 	bleq	f85b58 <_bss_end+0xf73ea8>
    2f28:	00000e03 	andeq	r0, r0, r3, lsl #28
    2f2c:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    2f30:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    2f34:	0b0b0024 	bleq	2c2fcc <_bss_end+0x2b131c>
    2f38:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2f3c:	35050000 	strcc	r0, [r5, #-0]
    2f40:	00134900 	andseq	r4, r3, r0, lsl #18
    2f44:	00160600 	andseq	r0, r6, r0, lsl #12
    2f48:	0b3a0e03 	bleq	e8675c <_bss_end+0xe74aac>
    2f4c:	0b390b3b 	bleq	e45c40 <_bss_end+0xe33f90>
    2f50:	00001349 	andeq	r1, r0, r9, asr #6
    2f54:	03010207 	movweq	r0, #4615	; 0x1207
    2f58:	3a0b0b0e 	bcc	2c5b98 <_bss_end+0x2b3ee8>
    2f5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f60:	0013010b 	andseq	r0, r3, fp, lsl #2
    2f64:	000d0800 	andeq	r0, sp, r0, lsl #16
    2f68:	0b3a0e03 	bleq	e8677c <_bss_end+0xe74acc>
    2f6c:	0b390b3b 	bleq	e45c60 <_bss_end+0xe33fb0>
    2f70:	0b381349 	bleq	e07c9c <_bss_end+0xdf5fec>
    2f74:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    2f78:	03193f01 	tsteq	r9, #1, 30
    2f7c:	3b0b3a0e 	blcc	2d17bc <_bss_end+0x2bfb0c>
    2f80:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2f84:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    2f88:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    2f8c:	00130113 	andseq	r0, r3, r3, lsl r1
    2f90:	00050a00 	andeq	r0, r5, r0, lsl #20
    2f94:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    2f98:	050b0000 	streq	r0, [fp, #-0]
    2f9c:	00134900 	andseq	r4, r3, r0, lsl #18
    2fa0:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    2fa4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2fa8:	0b3b0b3a 	bleq	ec5c98 <_bss_end+0xeb3fe8>
    2fac:	0e6e0b39 	vmoveq.8	d14[5], r0
    2fb0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2fb4:	13011364 	movwne	r1, #4964	; 0x1364
    2fb8:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    2fbc:	03193f01 	tsteq	r9, #1, 30
    2fc0:	3b0b3a0e 	blcc	2d1800 <_bss_end+0x2bfb50>
    2fc4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2fc8:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2fcc:	00136419 	andseq	r6, r3, r9, lsl r4
    2fd0:	000f0e00 	andeq	r0, pc, r0, lsl #28
    2fd4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2fd8:	0f0f0000 	svceq	0x000f0000
    2fdc:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2fe0:	00341000 	eorseq	r1, r4, r0
    2fe4:	0b3a0e03 	bleq	e867f8 <_bss_end+0xe74b48>
    2fe8:	0b390b3b 	bleq	e45cdc <_bss_end+0xe3402c>
    2fec:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    2ff0:	00001802 	andeq	r1, r0, r2, lsl #16
    2ff4:	03010411 	movweq	r0, #5137	; 0x1411
    2ff8:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    2ffc:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    3000:	3b0b3a13 	blcc	2d1854 <_bss_end+0x2bfba4>
    3004:	010b390b 	tsteq	fp, fp, lsl #18
    3008:	12000013 	andne	r0, r0, #19
    300c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    3010:	00000b1c 	andeq	r0, r0, ip, lsl fp
    3014:	49010113 	stmdbmi	r1, {r0, r1, r4, r8}
    3018:	00130113 	andseq	r0, r3, r3, lsl r1
    301c:	00211400 	eoreq	r1, r1, r0, lsl #8
    3020:	0b2f1349 	bleq	bc7d4c <_bss_end+0xbb609c>
    3024:	04150000 	ldreq	r0, [r5], #-0
    3028:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    302c:	0b0b3e19 	bleq	2d2898 <_bss_end+0x2c0be8>
    3030:	3a13490b 	bcc	4d5464 <_bss_end+0x4c37b4>
    3034:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3038:	010b320b 	tsteq	fp, fp, lsl #4
    303c:	16000013 			; <UNDEFINED> instruction: 0x16000013
    3040:	08030028 	stmdaeq	r3, {r3, r5}
    3044:	00000b1c 	andeq	r0, r0, ip, lsl fp
    3048:	03011317 	movweq	r1, #4887	; 0x1317
    304c:	3a0b0b0e 	bcc	2c5c8c <_bss_end+0x2b3fdc>
    3050:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3054:	0013010b 	andseq	r0, r3, fp, lsl #2
    3058:	000d1800 	andeq	r1, sp, r0, lsl #16
    305c:	0b3a0803 	bleq	e85070 <_bss_end+0xe733c0>
    3060:	0b390b3b 	bleq	e45d54 <_bss_end+0xe340a4>
    3064:	0b381349 	bleq	e07d90 <_bss_end+0xdf60e0>
    3068:	0d190000 	ldceq	0, cr0, [r9, #-0]
    306c:	3a0e0300 	bcc	383c74 <_bss_end+0x371fc4>
    3070:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3074:	3f13490b 	svccc	0x0013490b
    3078:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    307c:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    3080:	1a000019 	bne	30ec <CPSR_IRQ_INHIBIT+0x306c>
    3084:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    3088:	0b3b0b3a 	bleq	ec5d78 <_bss_end+0xeb40c8>
    308c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3090:	0b32193f 	bleq	c89594 <_bss_end+0xc778e4>
    3094:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
    3098:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    309c:	03193f01 	tsteq	r9, #1, 30
    30a0:	3b0b3a0e 	blcc	2d18e0 <_bss_end+0x2bfc30>
    30a4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    30a8:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    30ac:	63193c0b 	tstvs	r9, #2816	; 0xb00
    30b0:	01136419 	tsteq	r3, r9, lsl r4
    30b4:	1c000013 	stcne	0, cr0, [r0], {19}
    30b8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    30bc:	0b3a0e03 	bleq	e868d0 <_bss_end+0xe74c20>
    30c0:	0b390b3b 	bleq	e45db4 <_bss_end+0xe34104>
    30c4:	193c0e6e 	ldmdbne	ip!, {r1, r2, r3, r5, r6, r9, sl, fp}
    30c8:	13011364 	movwne	r1, #4964	; 0x1364
    30cc:	101d0000 	andsne	r0, sp, r0
    30d0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    30d4:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    30d8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    30dc:	0b3b0b3a 	bleq	ec5dcc <_bss_end+0xeb411c>
    30e0:	13490b39 	movtne	r0, #39737	; 0x9b39
    30e4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    30e8:	341f0000 	ldrcc	r0, [pc], #-0	; 30f0 <CPSR_IRQ_INHIBIT+0x3070>
    30ec:	3a0e0300 	bcc	383cf4 <_bss_end+0x372044>
    30f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    30f4:	3f13490b 	svccc	0x0013490b
    30f8:	00180219 	andseq	r0, r8, r9, lsl r2
    30fc:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
    3100:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3104:	0b3b0b3a 	bleq	ec5df4 <_bss_end+0xeb4144>
    3108:	0e6e0b39 	vmoveq.8	d14[5], r0
    310c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3110:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    3114:	00130119 	andseq	r0, r3, r9, lsl r1
    3118:	00342100 	eorseq	r2, r4, r0, lsl #2
    311c:	0b3a0803 	bleq	e85130 <_bss_end+0xe73480>
    3120:	0b390b3b 	bleq	e45e14 <_bss_end+0xe34164>
    3124:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3128:	34220000 	strtcc	r0, [r2], #-0
    312c:	3a0e0300 	bcc	383d34 <_bss_end+0x372084>
    3130:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3134:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3138:	23000018 	movwcs	r0, #24
    313c:	0111010b 	tsteq	r1, fp, lsl #2
    3140:	00000612 	andeq	r0, r0, r2, lsl r6
    3144:	3f012e24 	svccc	0x00012e24
    3148:	3a0e0319 	bcc	383db4 <_bss_end+0x372104>
    314c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3150:	110e6e0b 	tstne	lr, fp, lsl #28
    3154:	40061201 	andmi	r1, r6, r1, lsl #4
    3158:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    315c:	01000000 	mrseq	r0, (UNDEF: 0)
    3160:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    3164:	0e030b13 	vmoveq.32	d3[0], r0
    3168:	01110e1b 	tsteq	r1, fp, lsl lr
    316c:	17100612 			; <UNDEFINED> instruction: 0x17100612
    3170:	24020000 	strcs	r0, [r2], #-0
    3174:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    3178:	000e030b 	andeq	r0, lr, fp, lsl #6
    317c:	00260300 	eoreq	r0, r6, r0, lsl #6
    3180:	00001349 	andeq	r1, r0, r9, asr #6
    3184:	0b002404 	bleq	c19c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    3188:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    318c:	05000008 	streq	r0, [r0, #-8]
    3190:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    3194:	0b3b0b3a 	bleq	ec5e84 <_bss_end+0xeb41d4>
    3198:	13490b39 	movtne	r0, #39737	; 0x9b39
    319c:	04060000 	streq	r0, [r6], #-0
    31a0:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    31a4:	0b0b3e19 	bleq	2d2a10 <_bss_end+0x2c0d60>
    31a8:	3a13490b 	bcc	4d55dc <_bss_end+0x4c392c>
    31ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31b0:	0013010b 	andseq	r0, r3, fp, lsl #2
    31b4:	00280700 	eoreq	r0, r8, r0, lsl #14
    31b8:	0b1c0e03 	bleq	7069cc <_bss_end+0x6f4d1c>
    31bc:	34080000 	strcc	r0, [r8], #-0
    31c0:	3a0e0300 	bcc	383dc8 <_bss_end+0x372118>
    31c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31c8:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    31cc:	00180219 	andseq	r0, r8, r9, lsl r2
    31d0:	000f0900 	andeq	r0, pc, r0, lsl #18
    31d4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    31d8:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    31dc:	03193f01 	tsteq	r9, #1, 30
    31e0:	3b0b3a0e 	blcc	2d1a20 <_bss_end+0x2bfd70>
    31e4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    31e8:	1113490e 	tstne	r3, lr, lsl #18
    31ec:	40061201 	andmi	r1, r6, r1, lsl #4
    31f0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    31f4:	00001301 	andeq	r1, r0, r1, lsl #6
    31f8:	0300050b 	movweq	r0, #1291	; 0x50b
    31fc:	3b0b3a0e 	blcc	2d1a3c <_bss_end+0x2bfd8c>
    3200:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3204:	00180213 	andseq	r0, r8, r3, lsl r2
    3208:	00340c00 	eorseq	r0, r4, r0, lsl #24
    320c:	0b3a0e03 	bleq	e86a20 <_bss_end+0xe74d70>
    3210:	0b390b3b 	bleq	e45f04 <_bss_end+0xe34254>
    3214:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3218:	0f0d0000 	svceq	0x000d0000
    321c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    3220:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
    3224:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3228:	0b3b0b3a 	bleq	ec5f18 <_bss_end+0xeb4268>
    322c:	0e6e0b39 	vmoveq.8	d14[5], r0
    3230:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3234:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    3238:	00130119 	andseq	r0, r3, r9, lsl r1
    323c:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    3240:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3244:	0b3b0b3a 	bleq	ec5f34 <_bss_end+0xeb4284>
    3248:	0e6e0b39 	vmoveq.8	d14[5], r0
    324c:	01111349 	tsteq	r1, r9, asr #6
    3250:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3254:	00194297 	mulseq	r9, r7, r2
    3258:	00341000 	eorseq	r1, r4, r0
    325c:	0b3a0803 	bleq	e85270 <_bss_end+0xe735c0>
    3260:	0b390b3b 	bleq	e45f54 <_bss_end+0xe342a4>
    3264:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3268:	01000000 	mrseq	r0, (UNDEF: 0)
    326c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    3270:	0e030b13 	vmoveq.32	d3[0], r0
    3274:	01110e1b 	tsteq	r1, fp, lsl lr
    3278:	17100612 			; <UNDEFINED> instruction: 0x17100612
    327c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    3280:	00130101 	andseq	r0, r3, r1, lsl #2
    3284:	00340300 	eorseq	r0, r4, r0, lsl #6
    3288:	0b3a0e03 	bleq	e86a9c <_bss_end+0xe74dec>
    328c:	0b390b3b 	bleq	e45f80 <_bss_end+0xe342d0>
    3290:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    3294:	00000a1c 	andeq	r0, r0, ip, lsl sl
    3298:	3a003a04 	bcc	11ab0 <sPage_Manager+0xe1c>
    329c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32a0:	0013180b 	andseq	r1, r3, fp, lsl #16
    32a4:	01010500 	tsteq	r1, r0, lsl #10
    32a8:	13011349 	movwne	r1, #4937	; 0x1349
    32ac:	21060000 	mrscs	r0, (UNDEF: 6)
    32b0:	2f134900 	svccs	0x00134900
    32b4:	0700000b 	streq	r0, [r0, -fp]
    32b8:	13490026 	movtne	r0, #36902	; 0x9026
    32bc:	24080000 	strcs	r0, [r8], #-0
    32c0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    32c4:	000e030b 	andeq	r0, lr, fp, lsl #6
    32c8:	00340900 	eorseq	r0, r4, r0, lsl #18
    32cc:	00001347 	andeq	r1, r0, r7, asr #6
    32d0:	3f012e0a 	svccc	0x00012e0a
    32d4:	3a0e0319 	bcc	383f40 <_bss_end+0x372290>
    32d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32dc:	110e6e0b 	tstne	lr, fp, lsl #28
    32e0:	40061201 	andmi	r1, r6, r1, lsl #4
    32e4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    32e8:	00001301 	andeq	r1, r0, r1, lsl #6
    32ec:	0300050b 	movweq	r0, #1291	; 0x50b
    32f0:	3b0b3a08 	blcc	2d1b18 <_bss_end+0x2bfe68>
    32f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    32f8:	00180213 	andseq	r0, r8, r3, lsl r2
    32fc:	00340c00 	eorseq	r0, r4, r0, lsl #24
    3300:	0b3a0e03 	bleq	e86b14 <_bss_end+0xe74e64>
    3304:	0b390b3b 	bleq	e45ff8 <_bss_end+0xe34348>
    3308:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    330c:	0b0d0000 	bleq	343314 <_bss_end+0x331664>
    3310:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    3314:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    3318:	08030034 	stmdaeq	r3, {r2, r4, r5}
    331c:	0b3b0b3a 	bleq	ec600c <_bss_end+0xeb435c>
    3320:	13490b39 	movtne	r0, #39737	; 0x9b39
    3324:	00001802 	andeq	r1, r0, r2, lsl #16
    3328:	0b000f0f 	bleq	6f6c <CPSR_IRQ_INHIBIT+0x6eec>
    332c:	0013490b 	andseq	r4, r3, fp, lsl #18
    3330:	00261000 	eoreq	r1, r6, r0
    3334:	0f110000 	svceq	0x00110000
    3338:	000b0b00 	andeq	r0, fp, r0, lsl #22
    333c:	00241200 	eoreq	r1, r4, r0, lsl #4
    3340:	0b3e0b0b 	bleq	f85f74 <_bss_end+0xf742c4>
    3344:	00000803 	andeq	r0, r0, r3, lsl #16
    3348:	03000513 	movweq	r0, #1299	; 0x513
    334c:	3b0b3a0e 	blcc	2d1b8c <_bss_end+0x2bfedc>
    3350:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3354:	00180213 	andseq	r0, r8, r3, lsl r2
    3358:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    335c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3360:	0b3b0b3a 	bleq	ec6050 <_bss_end+0xeb43a0>
    3364:	0e6e0b39 	vmoveq.8	d14[5], r0
    3368:	01111349 	tsteq	r1, r9, asr #6
    336c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3370:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3374:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    3378:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    337c:	0b3a0e03 	bleq	e86b90 <_bss_end+0xe74ee0>
    3380:	0b390b3b 	bleq	e46074 <_bss_end+0xe343c4>
    3384:	01110e6e 	tsteq	r1, lr, ror #28
    3388:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    338c:	00194296 	mulseq	r9, r6, r2
    3390:	11010000 	mrsne	r0, (UNDEF: 1)
    3394:	130e2501 	movwne	r2, #58625	; 0xe501
    3398:	1b0e030b 	blne	383fcc <_bss_end+0x37231c>
    339c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    33a0:	00171006 	andseq	r1, r7, r6
    33a4:	00240200 	eoreq	r0, r4, r0, lsl #4
    33a8:	0b3e0b0b 	bleq	f85fdc <_bss_end+0xf7432c>
    33ac:	00000e03 	andeq	r0, r0, r3, lsl #28
    33b0:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    33b4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    33b8:	0b0b0024 	bleq	2c3450 <_bss_end+0x2b17a0>
    33bc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    33c0:	16050000 	strne	r0, [r5], -r0
    33c4:	3a0e0300 	bcc	383fcc <_bss_end+0x37231c>
    33c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    33cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    33d0:	01020600 	tsteq	r2, r0, lsl #12
    33d4:	0b0b0e03 	bleq	2c6be8 <_bss_end+0x2b4f38>
    33d8:	0b3b0b3a 	bleq	ec60c8 <_bss_end+0xeb4418>
    33dc:	13010b39 	movwne	r0, #6969	; 0x1b39
    33e0:	0d070000 	stceq	0, cr0, [r7, #-0]
    33e4:	3a0e0300 	bcc	383fec <_bss_end+0x37233c>
    33e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    33ec:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    33f0:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    33f4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    33f8:	0b3a0e03 	bleq	e86c0c <_bss_end+0xe74f5c>
    33fc:	0b390b3b 	bleq	e460f0 <_bss_end+0xe34440>
    3400:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    3404:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    3408:	13011364 	movwne	r1, #4964	; 0x1364
    340c:	05090000 	streq	r0, [r9, #-0]
    3410:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    3414:	0a000019 	beq	3480 <CPSR_IRQ_INHIBIT+0x3400>
    3418:	13490005 	movtne	r0, #36869	; 0x9005
    341c:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    3420:	03193f01 	tsteq	r9, #1, 30
    3424:	3b0b3a0e 	blcc	2d1c64 <_bss_end+0x2bffb4>
    3428:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    342c:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    3430:	01136419 	tsteq	r3, r9, lsl r4
    3434:	0c000013 	stceq	0, cr0, [r0], {19}
    3438:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    343c:	0b3a0e03 	bleq	e86c50 <_bss_end+0xe74fa0>
    3440:	0b390b3b 	bleq	e46134 <_bss_end+0xe34484>
    3444:	0b320e6e 	bleq	c86e04 <_bss_end+0xc75154>
    3448:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    344c:	0f0d0000 	svceq	0x000d0000
    3450:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    3454:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    3458:	0b0b000f 	bleq	2c349c <_bss_end+0x2b17ec>
    345c:	340f0000 	strcc	r0, [pc], #-0	; 3464 <CPSR_IRQ_INHIBIT+0x33e4>
    3460:	3a0e0300 	bcc	384068 <_bss_end+0x3723b8>
    3464:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3468:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    346c:	00180219 	andseq	r0, r8, r9, lsl r2
    3470:	01041000 	mrseq	r1, (UNDEF: 4)
    3474:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    3478:	0b0b0b3e 	bleq	2c6178 <_bss_end+0x2b44c8>
    347c:	0b3a1349 	bleq	e881a8 <_bss_end+0xe764f8>
    3480:	0b390b3b 	bleq	e46174 <_bss_end+0xe344c4>
    3484:	00001301 	andeq	r1, r0, r1, lsl #6
    3488:	03002811 	movweq	r2, #2065	; 0x811
    348c:	000b1c08 	andeq	r1, fp, r8, lsl #24
    3490:	00281200 	eoreq	r1, r8, r0, lsl #4
    3494:	0b1c0e03 	bleq	706ca8 <_bss_end+0x6f4ff8>
    3498:	13130000 	tstne	r3, #0
    349c:	0b0e0301 	bleq	3840a8 <_bss_end+0x3723f8>
    34a0:	3b0b3a0b 	blcc	2d1cd4 <_bss_end+0x2c0024>
    34a4:	010b390b 	tsteq	fp, fp, lsl #18
    34a8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    34ac:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    34b0:	0b3b0b3a 	bleq	ec61a0 <_bss_end+0xeb44f0>
    34b4:	13490b39 	movtne	r0, #39737	; 0x9b39
    34b8:	00000b38 	andeq	r0, r0, r8, lsr fp
    34bc:	03013915 	movweq	r3, #6421	; 0x1915
    34c0:	3b0b3a08 	blcc	2d1ce8 <_bss_end+0x2c0038>
    34c4:	010b390b 	tsteq	fp, fp, lsl #18
    34c8:	16000013 			; <UNDEFINED> instruction: 0x16000013
    34cc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    34d0:	0b3b0b3a 	bleq	ec61c0 <_bss_end+0xeb4510>
    34d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    34d8:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    34dc:	0000196c 	andeq	r1, r0, ip, ror #18
    34e0:	03003417 	movweq	r3, #1047	; 0x417
    34e4:	3b0b3a0e 	blcc	2d1d24 <_bss_end+0x2c0074>
    34e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    34ec:	1c193c13 	ldcne	12, cr3, [r9], {19}
    34f0:	00196c0b 	andseq	r6, r9, fp, lsl #24
    34f4:	00341800 	eorseq	r1, r4, r0, lsl #16
    34f8:	00001347 	andeq	r1, r0, r7, asr #6
    34fc:	03013919 	movweq	r3, #6425	; 0x1919
    3500:	3b0b3a0e 	blcc	2d1d40 <_bss_end+0x2c0090>
    3504:	010b390b 	tsteq	fp, fp, lsl #18
    3508:	1a000013 	bne	355c <CPSR_IRQ_INHIBIT+0x34dc>
    350c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3510:	0b3b0b3a 	bleq	ec6200 <_bss_end+0xeb4550>
    3514:	13490b39 	movtne	r0, #39737	; 0x9b39
    3518:	031c193c 	tsteq	ip, #60, 18	; 0xf0000
    351c:	011b0000 	tsteq	fp, r0
    3520:	01134901 	tsteq	r3, r1, lsl #18
    3524:	1c000013 	stcne	0, cr0, [r0], {19}
    3528:	13490021 	movtne	r0, #36897	; 0x9021
    352c:	0000052f 	andeq	r0, r0, pc, lsr #10
    3530:	47012e1d 	smladmi	r1, sp, lr, r2
    3534:	3b0b3a13 	blcc	2d1d88 <_bss_end+0x2c00d8>
    3538:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    353c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    3540:	96184006 	ldrls	r4, [r8], -r6
    3544:	13011942 	movwne	r1, #6466	; 0x1942
    3548:	051e0000 	ldreq	r0, [lr, #-0]
    354c:	490e0300 	stmdbmi	lr, {r8, r9}
    3550:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    3554:	1f000018 	svcne	0x00000018
    3558:	08030005 	stmdaeq	r3, {r0, r2}
    355c:	0b3b0b3a 	bleq	ec624c <_bss_end+0xeb459c>
    3560:	13490b39 	movtne	r0, #39737	; 0x9b39
    3564:	00001802 	andeq	r1, r0, r2, lsl #16
    3568:	03003420 	movweq	r3, #1056	; 0x420
    356c:	3b0b3a08 	blcc	2d1d94 <_bss_end+0x2c00e4>
    3570:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3574:	00180213 	andseq	r0, r8, r3, lsl r2
    3578:	00212100 	eoreq	r2, r1, r0, lsl #2
    357c:	0b2f1349 	bleq	bc82a8 <_bss_end+0xbb65f8>
    3580:	05220000 	streq	r0, [r2, #-0]!
    3584:	3a0e0300 	bcc	38418c <_bss_end+0x3724dc>
    3588:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    358c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3590:	23000018 	movwcs	r0, #24
    3594:	1347012e 	movtne	r0, #28974	; 0x712e
    3598:	0b3b0b3a 	bleq	ec6288 <_bss_end+0xeb45d8>
    359c:	13640b39 	cmnne	r4, #58368	; 0xe400
    35a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    35a4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    35a8:	00130119 	andseq	r0, r3, r9, lsl r1
    35ac:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    35b0:	0b3a1347 	bleq	e882d4 <_bss_end+0xe76624>
    35b4:	0b390b3b 	bleq	e462a8 <_bss_end+0xe345f8>
    35b8:	13641349 	cmnne	r4, #603979777	; 0x24000001
    35bc:	13010b20 	movwne	r0, #6944	; 0x1b20
    35c0:	05250000 	streq	r0, [r5, #-0]!
    35c4:	490e0300 	stmdbmi	lr, {r8, r9}
    35c8:	00193413 	andseq	r3, r9, r3, lsl r4
    35cc:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    35d0:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
    35d4:	01111364 	tsteq	r1, r4, ror #6
    35d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    35dc:	01194296 			; <UNDEFINED> instruction: 0x01194296
    35e0:	27000013 	smladcs	r0, r3, r0, r0
    35e4:	13310005 	teqne	r1, #5
    35e8:	00001802 	andeq	r1, r0, r2, lsl #16
    35ec:	47012e28 	strmi	r2, [r1, -r8, lsr #28]
    35f0:	3b0b3a13 	blcc	2d1e44 <_bss_end+0x2c0194>
    35f4:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    35f8:	010b2013 	tsteq	fp, r3, lsl r0
    35fc:	29000013 	stmdbcs	r0, {r0, r1, r4}
    3600:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    3604:	0b3b0b3a 	bleq	ec62f4 <_bss_end+0xeb4644>
    3608:	13490b39 	movtne	r0, #39737	; 0x9b39
    360c:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    3610:	6e133101 	mufvss	f3, f3, f1
    3614:	1113640e 	tstne	r3, lr, lsl #8
    3618:	40061201 	andmi	r1, r6, r1, lsl #4
    361c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3620:	01000000 	mrseq	r0, (UNDEF: 0)
    3624:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    3628:	0e030b13 	vmoveq.32	d3[0], r0
    362c:	17550e1b 	smmlane	r5, fp, lr, r0
    3630:	17100111 			; <UNDEFINED> instruction: 0x17100111
    3634:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    3638:	3a080301 	bcc	204244 <_bss_end+0x1f2594>
    363c:	010b3b0b 	tsteq	fp, fp, lsl #22
    3640:	03000013 	movweq	r0, #19
    3644:	0e030039 	mcreq	0, 0, r0, cr3, cr9, {1}
    3648:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    364c:	01890b39 	orreq	r0, r9, r9, lsr fp
    3650:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3654:	0b3a003a 	bleq	e83744 <_bss_end+0xe71a94>
    3658:	0b39053b 	bleq	e44b4c <_bss_end+0xe32e9c>
    365c:	00001318 	andeq	r1, r0, r8, lsl r3
    3660:	03013905 	movweq	r3, #6405	; 0x1905
    3664:	3b0b3a0e 	blcc	2d1ea4 <_bss_end+0x2c01f4>
    3668:	010b390b 	tsteq	fp, fp, lsl #18
    366c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    3670:	0e030102 	adfeqs	f0, f3, f2
    3674:	0b3a0b0b 	bleq	e862a8 <_bss_end+0xe745f8>
    3678:	0b390b3b 	bleq	e4636c <_bss_end+0xe346bc>
    367c:	00001301 	andeq	r1, r0, r1, lsl #6
    3680:	03000d07 	movweq	r0, #3335	; 0xd07
    3684:	3b0b3a0e 	blcc	2d1ec4 <_bss_end+0x2c0214>
    3688:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    368c:	000b3813 	andeq	r3, fp, r3, lsl r8
    3690:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
    3694:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3698:	0b3b0b3a 	bleq	ec6388 <_bss_end+0xeb46d8>
    369c:	0e6e0b39 	vmoveq.8	d14[5], r0
    36a0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    36a4:	13641963 	cmnne	r4, #1622016	; 0x18c000
    36a8:	00001301 	andeq	r1, r0, r1, lsl #6
    36ac:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    36b0:	00193413 	andseq	r3, r9, r3, lsl r4
    36b4:	00050a00 	andeq	r0, r5, r0, lsl #20
    36b8:	00001349 	andeq	r1, r0, r9, asr #6
    36bc:	3f012e0b 	svccc	0x00012e0b
    36c0:	3a0e0319 	bcc	38432c <_bss_end+0x37267c>
    36c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    36c8:	3c0e6e0b 	stccc	14, cr6, [lr], {11}
    36cc:	01136419 	tsteq	r3, r9, lsl r4
    36d0:	0c000013 	stceq	0, cr0, [r0], {19}
    36d4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    36d8:	0b3a0e03 	bleq	e86eec <_bss_end+0xe7523c>
    36dc:	0b390b3b 	bleq	e463d0 <_bss_end+0xe34720>
    36e0:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    36e4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    36e8:	00001301 	andeq	r1, r0, r1, lsl #6
    36ec:	3f012e0d 	svccc	0x00012e0d
    36f0:	3a0e0319 	bcc	38435c <_bss_end+0x3726ac>
    36f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    36f8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    36fc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    3700:	01136419 	tsteq	r3, r9, lsl r4
    3704:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    3708:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    370c:	0b3a0e03 	bleq	e86f20 <_bss_end+0xe75270>
    3710:	0b390b3b 	bleq	e46404 <_bss_end+0xe34754>
    3714:	0b320e6e 	bleq	c870d4 <_bss_end+0xc75424>
    3718:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    371c:	00001301 	andeq	r1, r0, r1, lsl #6
    3720:	3f012e0f 	svccc	0x00012e0f
    3724:	3a0e0319 	bcc	384390 <_bss_end+0x3726e0>
    3728:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    372c:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    3730:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    3734:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
    3738:	00130113 	andseq	r0, r3, r3, lsl r1
    373c:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
    3740:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3744:	0b3b0b3a 	bleq	ec6434 <_bss_end+0xeb4784>
    3748:	0e6e0b39 	vmoveq.8	d14[5], r0
    374c:	0b321349 	bleq	c88478 <_bss_end+0xc767c8>
    3750:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    3754:	26110000 	ldrcs	r0, [r1], -r0
    3758:	00134900 	andseq	r4, r3, r0, lsl #18
    375c:	00081200 	andeq	r1, r8, r0, lsl #4
    3760:	0b3b0b3a 	bleq	ec6450 <_bss_end+0xeb47a0>
    3764:	13180b39 	tstne	r8, #58368	; 0xe400
    3768:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    376c:	03193f01 	tsteq	r9, #1, 30
    3770:	3b0b3a0e 	blcc	2d1fb0 <_bss_end+0x2c0300>
    3774:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3778:	1901870e 	stmdbne	r1, {r1, r2, r3, r8, r9, sl, pc}
    377c:	1301193c 	movwne	r1, #6460	; 0x193c
    3780:	16140000 	ldrne	r0, [r4], -r0
    3784:	3a0e0300 	bcc	38438c <_bss_end+0x3726dc>
    3788:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    378c:	0013490b 	andseq	r4, r3, fp, lsl #18
    3790:	00021500 	andeq	r1, r2, r0, lsl #10
    3794:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    3798:	39160000 	ldmdbcc	r6, {}	; <UNPREDICTABLE>
    379c:	3a0e0300 	bcc	3843a4 <_bss_end+0x3726f4>
    37a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    37a4:	1700000b 	strne	r0, [r0, -fp]
    37a8:	0e030139 	mcreq	1, 0, r0, cr3, cr9, {1}
    37ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    37b0:	13010b39 	movwne	r0, #6969	; 0x1b39
    37b4:	24180000 	ldrcs	r0, [r8], #-0
    37b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    37bc:	0008030b 	andeq	r0, r8, fp, lsl #6
    37c0:	00241900 	eoreq	r1, r4, r0, lsl #18
    37c4:	0b3e0b0b 	bleq	f863f8 <_bss_end+0xf74748>
    37c8:	00000e03 	andeq	r0, r0, r3, lsl #28
    37cc:	03003b1a 	movweq	r3, #2842	; 0xb1a
    37d0:	1b00000e 	blne	3810 <CPSR_IRQ_INHIBIT+0x3790>
    37d4:	0b0b000f 	bleq	2c3818 <_bss_end+0x2b1b68>
    37d8:	0f1c0000 	svceq	0x001c0000
    37dc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    37e0:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    37e4:	0b0b0010 	bleq	2c382c <_bss_end+0x2b1b7c>
    37e8:	00001349 	andeq	r1, r0, r9, asr #6
    37ec:	0b00421e 	bleq	1406c <_bss_end+0x23bc>
    37f0:	0013490b 	andseq	r4, r3, fp, lsl #18
    37f4:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    37f8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    37fc:	0b3b0b3a 	bleq	ec64ec <_bss_end+0xeb483c>
    3800:	0e6e0b39 	vmoveq.8	d14[5], r0
    3804:	01111349 	tsteq	r1, r9, asr #6
    3808:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    380c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3810:	20000013 	andcs	r0, r0, r3, lsl r0
    3814:	08030005 	stmdaeq	r3, {r0, r2}
    3818:	0b3b0b3a 	bleq	ec6508 <_bss_end+0xeb4858>
    381c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3820:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
    3824:	21000017 	tstcs	r0, r7, lsl r0
    3828:	01018289 	smlabbeq	r1, r9, r2, r8
    382c:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    3830:	00133119 	andseq	r3, r3, r9, lsl r1
    3834:	828a2200 	addhi	r2, sl, #0, 4
    3838:	18020001 	stmdane	r2, {r0}
    383c:	00184291 	mulseq	r8, r1, r2
    3840:	002e2300 	eoreq	r2, lr, r0, lsl #6
    3844:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    3848:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
    384c:	0b3b0b3a 	bleq	ec653c <_bss_end+0xeb488c>
    3850:	00000b39 	andeq	r0, r0, r9, lsr fp
    3854:	00110100 	andseq	r0, r1, r0, lsl #2
    3858:	01110610 	tsteq	r1, r0, lsl r6
    385c:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    3860:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    3864:	00000513 	andeq	r0, r0, r3, lsl r5
    3868:	00110100 	andseq	r0, r1, r0, lsl #2
    386c:	01110610 	tsteq	r1, r0, lsl r6
    3870:	0e030112 	mcreq	1, 0, r0, cr3, cr2, {0}
    3874:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    3878:	00000513 	andeq	r0, r0, r3, lsl r5
    387c:	01110100 	tsteq	r1, r0, lsl #2
    3880:	0b130e25 	bleq	4c711c <_bss_end+0x4b546c>
    3884:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    3888:	00001710 	andeq	r1, r0, r0, lsl r7
    388c:	0b002402 	bleq	c89c <_ZN13CMonitor_FileD1Ev+0x34>
    3890:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    3894:	03000008 	movweq	r0, #8
    3898:	0b0b0024 	bleq	2c3930 <_bss_end+0x2b1c80>
    389c:	0e030b3e 	vmoveq.16	d3[0], r0
    38a0:	04040000 	streq	r0, [r4], #-0
    38a4:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
    38a8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    38ac:	3b0b3a13 	blcc	2d2100 <_bss_end+0x2c0450>
    38b0:	010b390b 	tsteq	fp, fp, lsl #18
    38b4:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    38b8:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    38bc:	00000b1c 	andeq	r0, r0, ip, lsl fp
    38c0:	03011306 	movweq	r1, #4870	; 0x1306
    38c4:	3a0b0b0e 	bcc	2c6504 <_bss_end+0x2b4854>
    38c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    38cc:	0013010b 	andseq	r0, r3, fp, lsl #2
    38d0:	000d0700 	andeq	r0, sp, r0, lsl #14
    38d4:	0b3a0e03 	bleq	e870e8 <_bss_end+0xe75438>
    38d8:	0b39053b 	bleq	e44dcc <_bss_end+0xe3311c>
    38dc:	0b381349 	bleq	e08608 <_bss_end+0xdf6958>
    38e0:	26080000 	strcs	r0, [r8], -r0
    38e4:	00134900 	andseq	r4, r3, r0, lsl #18
    38e8:	01010900 	tsteq	r1, r0, lsl #18
    38ec:	13011349 	movwne	r1, #4937	; 0x1349
    38f0:	210a0000 	mrscs	r0, (UNDEF: 10)
    38f4:	2f134900 	svccs	0x00134900
    38f8:	0b00000b 	bleq	392c <CPSR_IRQ_INHIBIT+0x38ac>
    38fc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3900:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3904:	13490b39 	movtne	r0, #39737	; 0x9b39
    3908:	00000a1c 	andeq	r0, r0, ip, lsl sl
    390c:	2700150c 	strcs	r1, [r0, -ip, lsl #10]
    3910:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
    3914:	0b0b000f 	bleq	2c3958 <_bss_end+0x2b1ca8>
    3918:	00001349 	andeq	r1, r0, r9, asr #6
    391c:	0301040e 	movweq	r0, #5134	; 0x140e
    3920:	0b0b3e0e 	bleq	2d3160 <_bss_end+0x2c14b0>
    3924:	3a13490b 	bcc	4d5d58 <_bss_end+0x4c40a8>
    3928:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    392c:	0013010b 	andseq	r0, r3, fp, lsl #2
    3930:	00160f00 	andseq	r0, r6, r0, lsl #30
    3934:	0b3a0e03 	bleq	e87148 <_bss_end+0xe75498>
    3938:	0b390b3b 	bleq	e4662c <_bss_end+0xe3497c>
    393c:	00001349 	andeq	r1, r0, r9, asr #6
    3940:	00002110 	andeq	r2, r0, r0, lsl r1
    3944:	00341100 	eorseq	r1, r4, r0, lsl #2
    3948:	0b3a0e03 	bleq	e8715c <_bss_end+0xe754ac>
    394c:	0b390b3b 	bleq	e46640 <_bss_end+0xe34990>
    3950:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    3954:	0000193c 	andeq	r1, r0, ip, lsr r9
    3958:	47003412 	smladmi	r0, r2, r4, r3
    395c:	3b0b3a13 	blcc	2d21b0 <_bss_end+0x2c0500>
    3960:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3964:	00180213 	andseq	r0, r8, r3, lsl r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	000080ac 	andeq	r8, r0, ip, lsr #1
  14:	000000d8 	ldrdeq	r0, [r0], -r8
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	012a0002 			; <UNDEFINED> instruction: 0x012a0002
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00008184 	andeq	r8, r0, r4, lsl #3
  34:	0000088c 	andeq	r0, r0, ip, lsl #17
	...
  40:	0000002c 	andeq	r0, r0, ip, lsr #32
  44:	0a430002 	beq	10c0054 <_bss_end+0x10ae3a4>
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	00008a10 	andeq	r8, r0, r0, lsl sl
  54:	000006c8 	andeq	r0, r0, r8, asr #13
  58:	000090d8 	ldrdeq	r9, [r0], -r8
  5c:	00000034 	andeq	r0, r0, r4, lsr r0
  60:	0000910c 	andeq	r9, r0, ip, lsl #2
  64:	00000048 	andeq	r0, r0, r8, asr #32
	...
  70:	00000034 	andeq	r0, r0, r4, lsr r0
  74:	14b90002 	ldrtne	r0, [r9], #2
  78:	00040000 	andeq	r0, r4, r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	00009154 	andeq	r9, r0, r4, asr r1
  84:	00000648 	andeq	r0, r0, r8, asr #12
  88:	0000979c 	muleq	r0, ip, r7
  8c:	00000038 	andeq	r0, r0, r8, lsr r0
  90:	000097d4 	ldrdeq	r9, [r0], -r4
  94:	00000088 	andeq	r0, r0, r8, lsl #1
  98:	0000985c 	andeq	r9, r0, ip, asr r8
  9c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  a8:	0000003c 	andeq	r0, r0, ip, lsr r0
  ac:	1b710002 	blne	1c400bc <_bss_end+0x1c2e40c>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	00009888 	andeq	r9, r0, r8, lsl #17
  bc:	00001278 	andeq	r1, r0, r8, ror r2
  c0:	0000ab00 	andeq	sl, r0, r0, lsl #22
  c4:	00000030 	andeq	r0, r0, r0, lsr r0
  c8:	0000ab30 	andeq	sl, r0, r0, lsr fp
  cc:	00000070 	andeq	r0, r0, r0, ror r0
  d0:	0000aba0 	andeq	sl, r0, r0, lsr #23
  d4:	00000070 	andeq	r0, r0, r0, ror r0
  d8:	0000ac10 	andeq	sl, r0, r0, lsl ip
  dc:	0000006c 	andeq	r0, r0, ip, rrx
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	2c490002 	mcrrcs	0, 0, r0, r9, cr2
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	0000ac7c 	andeq	sl, r0, ip, ror ip
  fc:	00000264 	andeq	r0, r0, r4, ror #4
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	31840002 	orrcc	r0, r4, r2
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	0000aee0 	andeq	sl, r0, r0, ror #29
 11c:	000005c4 	andeq	r0, r0, r4, asr #11
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	388a0002 	stmcc	sl, {r1}
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	0000b4a4 	andeq	fp, r0, r4, lsr #9
 13c:	00000290 	muleq	r0, r0, r2
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	3e350002 	cdpcc	0, 3, cr0, cr5, cr2, {0}
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	0000b734 	andeq	fp, r0, r4, lsr r7
 15c:	00000280 	andeq	r0, r0, r0, lsl #5
	...
 168:	0000002c 	andeq	r0, r0, ip, lsr #32
 16c:	42210002 	eormi	r0, r1, #2
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	0000b9b4 			; <UNDEFINED> instruction: 0x0000b9b4
 17c:	0000085c 	andeq	r0, r0, ip, asr r8
 180:	0000c210 	andeq	ip, r0, r0, lsl r2
 184:	0000003c 	andeq	r0, r0, ip, lsr r0
 188:	0000c24c 	andeq	ip, r0, ip, asr #4
 18c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 198:	0000020c 	andeq	r0, r0, ip, lsl #4
 19c:	4ad30002 	bmi	ff4c01ac <_bss_end+0xff4ae4fc>
 1a0:	00040000 	andeq	r0, r4, r0
 1a4:	00000000 	andeq	r0, r0, r0
 1a8:	0000c278 	andeq	ip, r0, r8, ror r2
 1ac:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b0:	0000c2a4 	andeq	ip, r0, r4, lsr #5
 1b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b8:	0000c2d0 	ldrdeq	ip, [r0], -r0
 1bc:	00000024 	andeq	r0, r0, r4, lsr #32
 1c0:	0000c2f4 	strdeq	ip, [r0], -r4
 1c4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1c8:	0000c320 	andeq	ip, r0, r0, lsr #6
 1cc:	00000030 	andeq	r0, r0, r0, lsr r0
 1d0:	0000ab00 	andeq	sl, r0, r0, lsl #22
 1d4:	00000030 	andeq	r0, r0, r0, lsr r0
 1d8:	0000c350 	andeq	ip, r0, r0, asr r3
 1dc:	00000034 	andeq	r0, r0, r4, lsr r0
 1e0:	0000c384 	andeq	ip, r0, r4, lsl #7
 1e4:	00000034 	andeq	r0, r0, r4, lsr r0
 1e8:	0000c3b8 			; <UNDEFINED> instruction: 0x0000c3b8
 1ec:	00000034 	andeq	r0, r0, r4, lsr r0
 1f0:	0000c3ec 	andeq	ip, r0, ip, ror #7
 1f4:	0000007c 	andeq	r0, r0, ip, ror r0
 1f8:	0000c468 	andeq	ip, r0, r8, ror #8
 1fc:	00000044 	andeq	r0, r0, r4, asr #32
 200:	0000c4ac 	andeq	ip, r0, ip, lsr #9
 204:	00000034 	andeq	r0, r0, r4, lsr r0
 208:	0000c4e0 	andeq	ip, r0, r0, ror #9
 20c:	00000080 	andeq	r0, r0, r0, lsl #1
 210:	0000c560 	andeq	ip, r0, r0, ror #10
 214:	0000007c 	andeq	r0, r0, ip, ror r0
 218:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
 21c:	0000009c 	muleq	r0, ip, r0
 220:	0000c678 	andeq	ip, r0, r8, ror r6
 224:	0000002c 	andeq	r0, r0, ip, lsr #32
 228:	0000c6a4 	andeq	ip, r0, r4, lsr #13
 22c:	00000020 	andeq	r0, r0, r0, lsr #32
 230:	0000c6c4 	andeq	ip, r0, r4, asr #13
 234:	00000158 	andeq	r0, r0, r8, asr r1
 238:	0000c81c 	andeq	ip, r0, ip, lsl r8
 23c:	0000004c 	andeq	r0, r0, ip, asr #32
 240:	0000c868 	andeq	ip, r0, r8, ror #16
 244:	00000044 	andeq	r0, r0, r4, asr #32
 248:	0000c8ac 	andeq	ip, r0, ip, lsr #17
 24c:	00000034 	andeq	r0, r0, r4, lsr r0
 250:	0000c8e0 	andeq	ip, r0, r0, ror #17
 254:	0000002c 	andeq	r0, r0, ip, lsr #32
 258:	0000c90c 	andeq	ip, r0, ip, lsl #18
 25c:	00000068 	andeq	r0, r0, r8, rrx
 260:	0000c974 	andeq	ip, r0, r4, ror r9
 264:	00000048 	andeq	r0, r0, r8, asr #32
 268:	0000c9bc 			; <UNDEFINED> instruction: 0x0000c9bc
 26c:	00000044 	andeq	r0, r0, r4, asr #32
 270:	0000ca00 	andeq	ip, r0, r0, lsl #20
 274:	00000020 	andeq	r0, r0, r0, lsr #32
 278:	0000ca20 	andeq	ip, r0, r0, lsr #20
 27c:	00000068 	andeq	r0, r0, r8, rrx
 280:	0000ca88 	andeq	ip, r0, r8, lsl #21
 284:	00000048 	andeq	r0, r0, r8, asr #32
 288:	0000cad0 	ldrdeq	ip, [r0], -r0
 28c:	00000044 	andeq	r0, r0, r4, asr #32
 290:	0000cb14 	andeq	ip, r0, r4, lsl fp
 294:	00000034 	andeq	r0, r0, r4, lsr r0
 298:	0000cb48 	andeq	ip, r0, r8, asr #22
 29c:	00000058 	andeq	r0, r0, r8, asr r0
 2a0:	0000cba0 	andeq	ip, r0, r0, lsr #23
 2a4:	00000070 	andeq	r0, r0, r0, ror r0
 2a8:	0000cc10 	andeq	ip, r0, r0, lsl ip
 2ac:	00000058 	andeq	r0, r0, r8, asr r0
 2b0:	0000cc68 	andeq	ip, r0, r8, ror #24
 2b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2b8:	0000cc94 	muleq	r0, r4, ip
 2bc:	00000020 	andeq	r0, r0, r0, lsr #32
 2c0:	0000ccb4 			; <UNDEFINED> instruction: 0x0000ccb4
 2c4:	0000006c 	andeq	r0, r0, ip, rrx
 2c8:	0000cd20 	andeq	ip, r0, r0, lsr #26
 2cc:	00000048 	andeq	r0, r0, r8, asr #32
 2d0:	0000cd68 	andeq	ip, r0, r8, ror #26
 2d4:	00000044 	andeq	r0, r0, r4, asr #32
 2d8:	0000cdac 	andeq	ip, r0, ip, lsr #27
 2dc:	00000034 	andeq	r0, r0, r4, lsr r0
 2e0:	0000cde0 	andeq	ip, r0, r0, ror #27
 2e4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2e8:	0000ce0c 	andeq	ip, r0, ip, lsl #28
 2ec:	00000070 	andeq	r0, r0, r0, ror r0
 2f0:	0000ce7c 	andeq	ip, r0, ip, ror lr
 2f4:	00000058 	andeq	r0, r0, r8, asr r0
 2f8:	0000ced4 	ldrdeq	ip, [r0], -r4
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	0000cf00 	andeq	ip, r0, r0, lsl #30
 304:	00000020 	andeq	r0, r0, r0, lsr #32
 308:	0000cf20 	andeq	ip, r0, r0, lsr #30
 30c:	0000006c 	andeq	r0, r0, ip, rrx
 310:	0000cf8c 	andeq	ip, r0, ip, lsl #31
 314:	0000003c 	andeq	r0, r0, ip, lsr r0
 318:	0000cfc8 	andeq	ip, r0, r8, asr #31
 31c:	00000044 	andeq	r0, r0, r4, asr #32
 320:	0000d00c 	andeq	sp, r0, ip
 324:	00000034 	andeq	r0, r0, r4, lsr r0
 328:	0000d040 	andeq	sp, r0, r0, asr #32
 32c:	000000e8 	andeq	r0, r0, r8, ror #1
 330:	0000d128 	andeq	sp, r0, r8, lsr #2
 334:	0000002c 	andeq	r0, r0, ip, lsr #32
 338:	0000d154 	andeq	sp, r0, r4, asr r1
 33c:	00000058 	andeq	r0, r0, r8, asr r0
 340:	0000d1ac 	andeq	sp, r0, ip, lsr #3
 344:	0000002c 	andeq	r0, r0, ip, lsr #32
 348:	0000d1d8 	ldrdeq	sp, [r0], -r8
 34c:	00000020 	andeq	r0, r0, r0, lsr #32
 350:	0000d1f8 	strdeq	sp, [r0], -r8
 354:	00000084 	andeq	r0, r0, r4, lsl #1
 358:	0000d27c 	andeq	sp, r0, ip, ror r2
 35c:	00000048 	andeq	r0, r0, r8, asr #32
 360:	0000d2c4 	andeq	sp, r0, r4, asr #5
 364:	00000044 	andeq	r0, r0, r4, asr #32
 368:	0000d308 	andeq	sp, r0, r8, lsl #6
 36c:	00000034 	andeq	r0, r0, r4, lsr r0
 370:	0000d33c 	andeq	sp, r0, ip, lsr r3
 374:	0000002c 	andeq	r0, r0, ip, lsr #32
 378:	0000d368 	andeq	sp, r0, r8, ror #6
 37c:	0000003c 	andeq	r0, r0, ip, lsr r0
 380:	0000d3a4 	andeq	sp, r0, r4, lsr #7
 384:	00000058 	andeq	r0, r0, r8, asr r0
 388:	0000d3fc 	strdeq	sp, [r0], -ip
 38c:	0000002c 	andeq	r0, r0, ip, lsr #32
 390:	0000d428 	andeq	sp, r0, r8, lsr #8
 394:	00000020 	andeq	r0, r0, r0, lsr #32
 398:	0000d448 	andeq	sp, r0, r8, asr #8
 39c:	00000074 	andeq	r0, r0, r4, ror r0
	...
 3a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ac:	7d7c0002 	ldclvc	0, cr0, [ip, #-8]!
 3b0:	00040000 	andeq	r0, r4, r0
 3b4:	00000000 	andeq	r0, r0, r0
 3b8:	0000d4bc 			; <UNDEFINED> instruction: 0x0000d4bc
 3bc:	000002e4 	andeq	r0, r0, r4, ror #5
	...
 3c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3cc:	889f0002 	ldmhi	pc, {r1}	; <UNPREDICTABLE>
 3d0:	00040000 	andeq	r0, r4, r0
 3d4:	00000000 	andeq	r0, r0, r0
 3d8:	0000d7a0 	andeq	sp, r0, r0, lsr #15
 3dc:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
 3e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ec:	961f0002 	ldrls	r0, [pc], -r2
 3f0:	00040000 	andeq	r0, r4, r0
 3f4:	00000000 	andeq	r0, r0, r0
 3f8:	0000d848 	andeq	sp, r0, r8, asr #16
 3fc:	0000036c 	andeq	r0, r0, ip, ror #6
	...
 408:	0000001c 	andeq	r0, r0, ip, lsl r0
 40c:	9b1a0002 	blls	68041c <_bss_end+0x66e76c>
 410:	00040000 	andeq	r0, r4, r0
 414:	00000000 	andeq	r0, r0, r0
 418:	0000dbb4 			; <UNDEFINED> instruction: 0x0000dbb4
 41c:	000002a4 	andeq	r0, r0, r4, lsr #5
	...
 428:	0000002c 	andeq	r0, r0, ip, lsr #32
 42c:	9f520002 	svcls	0x00520002
 430:	00040000 	andeq	r0, r4, r0
 434:	00000000 	andeq	r0, r0, r0
 438:	0000de58 	andeq	sp, r0, r8, asr lr
 43c:	00000bd4 	ldrdeq	r0, [r0], -r4
 440:	0000ea2c 	andeq	lr, r0, ip, lsr #20
 444:	0000002c 	andeq	r0, r0, ip, lsr #32
 448:	0000ea58 	andeq	lr, r0, r8, asr sl
 44c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	b0660002 	rsblt	r0, r6, r2
 460:	00040000 	andeq	r0, r4, r0
 464:	00000000 	andeq	r0, r0, r0
 468:	0000ea84 	andeq	lr, r0, r4, lsl #21
 46c:	0000005c 	andeq	r0, r0, ip, asr r0
	...
 478:	00000024 	andeq	r0, r0, r4, lsr #32
 47c:	b08c0002 	addlt	r0, ip, r2
 480:	00040000 	andeq	r0, r4, r0
 484:	00000000 	andeq	r0, r0, r0
 488:	00008000 	andeq	r8, r0, r0
 48c:	000000ac 	andeq	r0, r0, ip, lsr #1
 490:	0000eae0 	andeq	lr, r0, r0, ror #21
 494:	00000070 	andeq	r0, r0, r0, ror r0
	...
 4a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4a4:	b0ae0002 	adclt	r0, lr, r2
 4a8:	00040000 	andeq	r0, r4, r0
 4ac:	00000000 	andeq	r0, r0, r0
 4b0:	0000eb50 	andeq	lr, r0, r0, asr fp
 4b4:	00000118 	andeq	r0, r0, r8, lsl r1
	...
 4c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4c4:	b1fd0002 	mvnslt	r0, r2
 4c8:	00040000 	andeq	r0, r4, r0
 4cc:	00000000 	andeq	r0, r0, r0
 4d0:	0000ec68 	andeq	lr, r0, r8, ror #24
 4d4:	0000064c 	andeq	r0, r0, ip, asr #12
	...
 4e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4e4:	b8b90002 	ldmlt	r9!, {r1}
 4e8:	00040000 	andeq	r0, r4, r0
 4ec:	00000000 	andeq	r0, r0, r0
 4f0:	0000f2b4 			; <UNDEFINED> instruction: 0x0000f2b4
 4f4:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
 500:	0000001c 	andeq	r0, r0, ip, lsl r0
 504:	bb760002 	bllt	1d80514 <_bss_end+0x1d6e864>
 508:	00040000 	andeq	r0, r4, r0
 50c:	00000000 	andeq	r0, r0, r0
 510:	0000f440 	andeq	pc, r0, r0, asr #8
 514:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
	...
 520:	0000001c 	andeq	r0, r0, ip, lsl r0
 524:	bea80002 	cdplt	0, 10, cr0, cr8, cr2, {0}
 528:	00040000 	andeq	r0, r4, r0
 52c:	00000000 	andeq	r0, r0, r0
 530:	0000f8f8 	strdeq	pc, [r0], -r8
 534:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
	...
 540:	0000001c 	andeq	r0, r0, ip, lsl r0
 544:	c8a50002 	stmiagt	r5!, {r1}
 548:	00040000 	andeq	r0, r4, r0
 54c:	00000000 	andeq	r0, r0, r0
 550:	0000fdac 	andeq	pc, r0, ip, lsr #27
 554:	00000004 	andeq	r0, r0, r4
	...
 560:	0000001c 	andeq	r0, r0, ip, lsl r0
 564:	cc420002 	mcrrgt	0, 0, r0, r2, cr2
 568:	00040000 	andeq	r0, r4, r0
 56c:	00000000 	andeq	r0, r0, r0
 570:	0000fdb0 			; <UNDEFINED> instruction: 0x0000fdb0
 574:	0000020c 	andeq	r0, r0, ip, lsl #4
	...
 580:	0000001c 	andeq	r0, r0, ip, lsl r0
 584:	cc680002 	stclgt	0, cr0, [r8], #-8
 588:	00040000 	andeq	r0, r4, r0
 58c:	00000000 	andeq	r0, r0, r0
 590:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc
 594:	00000004 	andeq	r0, r0, r4
	...
 5a0:	00000014 	andeq	r0, r0, r4, lsl r0
 5a4:	cc8e0002 	stcgt	0, cr0, [lr], {2}
 5a8:	00040000 	andeq	r0, r4, r0
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000000a5 	andeq	r0, r0, r5, lsr #1
       4:	006c0003 	rsbeq	r0, ip, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2f010000 	svccs	0x00010000
      1c:	2f746e6d 	svccs	0x00746e6d
      20:	73552f63 	cmpvc	r5, #396	; 0x18c
      24:	2f737265 	svccs	0x00737265
      28:	6162754b 	cmnvs	r2, fp, asr #10
      2c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
      30:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
      34:	5a2f7374 	bpl	bdce0c <_bss_end+0xbcb15c>
      38:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; fffffeac <_bss_end+0xfffee1fc>
      3c:	2f657461 	svccs	0x00657461
      40:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
      44:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
      48:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
      4c:	2f433249 	svccs	0x00433249
      50:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
      54:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
      58:	00006372 	andeq	r6, r0, r2, ror r3
      5c:	2e787863 	cdpcs	8, 7, cr7, cr8, cr3, {3}
      60:	00707063 	rsbseq	r7, r0, r3, rrx
      64:	3c000001 	stccc	0, cr0, [r0], {1}
      68:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
      6c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
      70:	0000003e 	andeq	r0, r0, lr, lsr r0
      74:	05050000 	streq	r0, [r5, #-0]
      78:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
      7c:	03000080 	movweq	r0, #128	; 0x80
      80:	1105010a 	tstne	r5, sl, lsl #2
      84:	4a100583 	bmi	401698 <_bss_end+0x3ef9e8>
      88:	85830505 	strhi	r0, [r3, #1285]	; 0x505
      8c:	05831305 	streq	r1, [r3, #773]	; 0x305
      90:	83856705 	orrhi	r6, r5, #1310720	; 0x140000
      94:	4c860105 	stfmis	f0, [r6], {5}
      98:	4c854c85 	stcmi	12, cr4, [r5], {133}	; 0x85
      9c:	00050585 	andeq	r0, r5, r5, lsl #11
      a0:	4b010402 	blmi	410b0 <_bss_end+0x2f400>
      a4:	01000202 	tsteq	r0, r2, lsl #4
      a8:	0003cd01 	andeq	ip, r3, r1, lsl #26
      ac:	2d000300 	stccs	3, cr0, [r0, #-0]
      b0:	02000001 	andeq	r0, r0, #1
      b4:	0d0efb01 	vstreq	d15, [lr, #-4]
      b8:	01010100 	mrseq	r0, (UNDEF: 17)
      bc:	00000001 	andeq	r0, r0, r1
      c0:	01000001 	tsteq	r0, r1
      c4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
      c8:	552f632f 	strpl	r6, [pc, #-815]!	; fffffda1 <_bss_end+0xfffee0f1>
      cc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
      d0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
      d4:	6f442f61 	svcvs	0x00442f61
      d8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
      dc:	2f73746e 	svccs	0x0073746e
      e0:	6f72655a 	svcvs	0x0072655a
      e4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
      e8:	6178652f 	cmnvs	r8, pc, lsr #10
      ec:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
      f0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
      f4:	4332492d 	teqmi	r2, #737280	; 0xb4000
      f8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
      fc:	2f6c656e 	svccs	0x006c656e
     100:	2f637273 	svccs	0x00637273
     104:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     108:	00737265 	rsbseq	r7, r3, r5, ror #4
     10c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     110:	552f632f 	strpl	r6, [pc, #-815]!	; fffffde9 <_bss_end+0xfffee139>
     114:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     118:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     11c:	6f442f61 	svcvs	0x00442f61
     120:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     124:	2f73746e 	svccs	0x0073746e
     128:	6f72655a 	svcvs	0x0072655a
     12c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     130:	6178652f 	cmnvs	r8, pc, lsr #10
     134:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     138:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     13c:	4332492d 	teqmi	r2, #737280	; 0xb4000
     140:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     144:	2f6c656e 	svccs	0x006c656e
     148:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     14c:	2f656475 	svccs	0x00656475
     150:	72616f62 	rsbvc	r6, r1, #392	; 0x188
     154:	70722f64 	rsbsvc	r2, r2, r4, ror #30
     158:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
     15c:	2f006c61 	svccs	0x00006c61
     160:	2f746e6d 	svccs	0x00746e6d
     164:	73552f63 	cmpvc	r5, #396	; 0x18c
     168:	2f737265 	svccs	0x00737265
     16c:	6162754b 	cmnvs	r2, fp, asr #10
     170:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     174:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     178:	5a2f7374 	bpl	bdcf50 <_bss_end+0xbcb2a0>
     17c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; fffffff0 <_bss_end+0xfffee340>
     180:	2f657461 	svccs	0x00657461
     184:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     188:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     18c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     190:	2f433249 	svccs	0x00433249
     194:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     198:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
     19c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1a0:	642f6564 	strtvs	r6, [pc], #-1380	; 1a8 <CPSR_IRQ_INHIBIT+0x128>
     1a4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     1a8:	00007372 	andeq	r7, r0, r2, ror r3
     1ac:	6f697067 	svcvs	0x00697067
     1b0:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
     1b4:	00000100 	andeq	r0, r0, r0, lsl #2
     1b8:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
     1bc:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     1c0:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
     1c4:	00020068 	andeq	r0, r2, r8, rrx
     1c8:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     1cc:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     1d0:	69000003 	stmdbvs	r0, {r0, r1}
     1d4:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
     1d8:	00682e66 	rsbeq	r2, r8, r6, ror #28
     1dc:	00000002 	andeq	r0, r0, r2
     1e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     1e4:	00818402 	addeq	r8, r1, r2, lsl #8
     1e8:	09051900 	stmdbeq	r5, {r8, fp, ip}
     1ec:	2e38059f 	mrccs	5, 1, r0, cr8, cr15, {4}
     1f0:	054c0b05 	strbeq	r0, [ip, #-2821]	; 0xfffff4fb
     1f4:	0b054a0a 	bleq	152a24 <_bss_end+0x140d74>
     1f8:	4a0a0567 	bmi	28179c <_bss_end+0x26faec>
     1fc:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     200:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
     204:	0f056710 	svceq	0x00056710
     208:	8209054c 	andhi	r0, r9, #76, 10	; 0x13000000
     20c:	0b031405 	bleq	c5228 <_bss_end+0xb3578>
     210:	081a054a 	ldmdaeq	sl, {r1, r3, r6, r8, sl}
     214:	660d0520 	strvs	r0, [sp], -r0, lsr #10
     218:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
     21c:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
     220:	1005d705 	andne	sp, r5, r5, lsl #14
     224:	4c0b0567 	cfstr32mi	mvfx0, [fp], {103}	; 0x67
     228:	01040200 	mrseq	r0, R12_usr
     22c:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     230:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     234:	04020009 	streq	r0, [r2], #-9
     238:	052e0604 	streq	r0, [lr, #-1540]!	; 0xfffff9fc
     23c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     240:	0d054b04 	vstreq	d4, [r5, #-16]
     244:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     248:	000c054a 	andeq	r0, ip, sl, asr #10
     24c:	4c040402 	cfstrsmi	mvf0, [r4], {2}
     250:	852f0105 	strhi	r0, [pc, #-261]!	; 153 <CPSR_IRQ_INHIBIT+0xd3>
     254:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
     258:	0b056710 	bleq	159ea0 <_bss_end+0x1481f0>
     25c:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     260:	00660601 	rsbeq	r0, r6, r1, lsl #12
     264:	4a020402 	bmi	81274 <_bss_end+0x6f5c4>
     268:	02000905 	andeq	r0, r0, #81920	; 0x14000
     26c:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
     270:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
     274:	054b0404 	strbeq	r0, [fp, #-1028]	; 0xfffffbfc
     278:	0402000d 	streq	r0, [r2], #-13
     27c:	0c054a04 			; <UNDEFINED> instruction: 0x0c054a04
     280:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     284:	2f01054c 	svccs	0x0001054c
     288:	d7050585 	strle	r0, [r5, -r5, lsl #11]
     28c:	05671005 	strbeq	r1, [r7, #-5]!
     290:	02004c0b 	andeq	r4, r0, #2816	; 0xb00
     294:	66060104 	strvs	r0, [r6], -r4, lsl #2
     298:	02040200 	andeq	r0, r4, #0, 4
     29c:	0009054a 	andeq	r0, r9, sl, asr #10
     2a0:	06040402 	streq	r0, [r4], -r2, lsl #8
     2a4:	0013052e 	andseq	r0, r3, lr, lsr #10
     2a8:	4b040402 	blmi	1012b8 <_bss_end+0xef608>
     2ac:	02000d05 	andeq	r0, r0, #320	; 0x140
     2b0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
     2b4:	0402000c 	streq	r0, [r2], #-12
     2b8:	01054c04 	tsteq	r5, r4, lsl #24
     2bc:	1d05852f 	cfstr32ne	mvfx8, [r5, #-188]	; 0xffffff44
     2c0:	ba0905bc 	blt	2419b8 <_bss_end+0x22fd08>
     2c4:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     2c8:	17054d12 	smladne	r5, r2, sp, r4
     2cc:	4a20054c 	bmi	801804 <_bss_end+0x7efb54>
     2d0:	059f0f05 	ldreq	r0, [pc, #3845]	; 11dd <CPSR_IRQ_INHIBIT+0x115d>
     2d4:	0805660b 	stmdaeq	r5, {r0, r1, r3, r9, sl, sp, lr}
     2d8:	6711054a 	ldrvs	r0, [r1, -sl, asr #10]
     2dc:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
     2e0:	0e056805 	cdpeq	8, 0, cr6, cr5, cr5, {0}
     2e4:	6610054a 	ldrvs	r0, [r0], -sl, asr #10
     2e8:	78030905 	stmdavc	r3, {r0, r2, r8, fp}
     2ec:	03010566 	movweq	r0, #5478	; 0x1566
     2f0:	054d2e09 	strbeq	r2, [sp, #-3593]	; 0xfffff1f7
     2f4:	0905a01d 	stmdbeq	r5, {r0, r2, r3, r4, sp, pc}
     2f8:	4a0505ba 	bmi	1419e8 <_bss_end+0x12fd38>
     2fc:	054b2005 	strbeq	r2, [fp, #-5]
     300:	32054c29 	andcc	r4, r5, #10496	; 0x2900
     304:	8234054a 	eorshi	r0, r4, #310378496	; 0x12800000
     308:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
     30c:	04020001 	streq	r0, [r2], #-1
     310:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
     314:	3505d80b 	strcc	sp, [r5, #-2059]	; 0xfffff7f5
     318:	00240566 	eoreq	r0, r4, r6, ror #10
     31c:	4a020402 	bmi	8132c <_bss_end+0x6f67c>
     320:	02000905 	andeq	r0, r0, #81920	; 0x14000
     324:	05f20204 	ldrbeq	r0, [r2, #516]!	; 0x204
     328:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     32c:	54054a03 	strpl	r4, [r5], #-2563	; 0xfffff5fd
     330:	06040200 	streq	r0, [r4], -r0, lsl #4
     334:	00380566 	eorseq	r0, r8, r6, ror #10
     338:	f2060402 	vshl.s8	d0, d2, d6
     33c:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     340:	004a0704 	subeq	r0, sl, r4, lsl #14
     344:	06080402 	streq	r0, [r8], -r2, lsl #8
     348:	0005054a 	andeq	r0, r5, sl, asr #10
     34c:	060a0402 	streq	r0, [sl], -r2, lsl #8
     350:	4d15052e 	cfldr32mi	mvfx0, [r5, #-184]	; 0xffffff48
     354:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
     358:	15054a0e 	strne	r4, [r5, #-2574]	; 0xfffff5f2
     35c:	2e100566 	cfmsc32cs	mvfx0, mvfx0, mvfx6
     360:	05480905 	strbeq	r0, [r8, #-2309]	; 0xfffff6fb
     364:	054d3101 	strbeq	r3, [sp, #-257]	; 0xfffffeff
     368:	0905a01c 	stmdbeq	r5, {r2, r3, r4, sp, pc}
     36c:	4a0505ba 	bmi	141a5c <_bss_end+0x12fdac>
     370:	054b1005 	strbeq	r1, [fp, #-5]
     374:	16054c0d 	strne	r4, [r5], -sp, lsl #24
     378:	8218054a 	andshi	r0, r8, #310378496	; 0x12800000
     37c:	054a2005 	strbeq	r2, [sl, #-5]
     380:	01052e22 	tsteq	r5, r2, lsr #28
     384:	01040200 	mrseq	r0, R12_usr
     388:	0e056983 	vmlaeq.f16	s12, s11, s6	; <UNPREDICTABLE>
     38c:	05675b08 	strbeq	r5, [r7, #-2824]!	; 0xfffff4f8
     390:	31056805 	tstcc	r5, r5, lsl #16
     394:	01040200 	mrseq	r0, R12_usr
     398:	00330566 	eorseq	r0, r3, r6, ror #10
     39c:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
     3a0:	02003f05 	andeq	r3, r0, #5, 30
     3a4:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     3a8:	0402000e 	streq	r0, [r2], #-14
     3ac:	10052e01 	andne	r2, r5, r1, lsl #28
     3b0:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
     3b4:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     3b8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     3bc:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     3c0:	4105ba01 	tstmi	r5, r1, lsl #20
     3c4:	01040200 	mrseq	r0, R12_usr
     3c8:	000f054a 	andeq	r0, pc, sl, asr #10
     3cc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     3d0:	054b1005 	strbeq	r1, [fp, #-5]
     3d4:	2a054c05 	bcs	1533f0 <_bss_end+0x141740>
     3d8:	9e320567 	cdpls	5, 3, cr0, cr2, cr7, {3}
     3dc:	20082a05 	andcs	r2, r8, r5, lsl #20
     3e0:	05d80505 	ldrbeq	r0, [r8, #1285]	; 0x505
     3e4:	3305672b 	movwcc	r6, #22315	; 0x572b
     3e8:	082b05ba 	stmdaeq	fp!, {r1, r3, r4, r5, r7, r8, sl}
     3ec:	f40c0520 	vst3.8	{d0,d2,d4}, [ip :128], r0
     3f0:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     3f4:	59080e05 	stmdbpl	r8, {r0, r2, r9, sl, fp}
     3f8:	68050567 	stmdavs	r5, {r0, r1, r2, r5, r6, r8, sl}
     3fc:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     400:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     404:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     408:	41059e01 	tstmi	r5, r1, lsl #28
     40c:	01040200 	mrseq	r0, R12_usr
     410:	000e054a 	andeq	r0, lr, sl, asr #10
     414:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     418:	054b1005 	strbeq	r1, [fp, #-5]
     41c:	35054c05 	strcc	r4, [r5, #-3077]	; 0xfffff3fb
     420:	01040200 	mrseq	r0, R12_usr
     424:	00370566 	eorseq	r0, r7, r6, ror #10
     428:	ba010402 	blt	41438 <_bss_end+0x2f788>
     42c:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
     430:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     434:	0402000f 	streq	r0, [r2], #-15
     438:	10052e01 	andne	r2, r5, r1, lsl #28
     43c:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
     440:	05672a05 	strbeq	r2, [r7, #-2565]!	; 0xfffff5fb
     444:	2a059e34 	bcs	167d1c <_bss_end+0x15606c>
     448:	05052008 	streq	r2, [r5, #-8]
     44c:	672b05f4 			; <UNDEFINED> instruction: 0x672b05f4
     450:	05ba3505 	ldreq	r3, [sl, #1285]!	; 0x505
     454:	0520082b 	streq	r0, [r0, #-2091]!	; 0xfffff7d5
     458:	0522080c 	streq	r0, [r2, #-2060]!	; 0xfffff7f4
     45c:	9e662f01 	cdpls	15, 6, cr2, cr6, cr1, {0}
     460:	01040200 	mrseq	r0, R12_usr
     464:	23056606 	movwcs	r6, #22022	; 0x5606
     468:	7eef0306 	cdpvc	3, 14, cr0, cr15, cr6, {0}
     46c:	03010582 	movweq	r0, #5506	; 0x1582
     470:	ba660191 	blt	1980abc <_bss_end+0x196ee0c>
     474:	000a024a 	andeq	r0, sl, sl, asr #4
     478:	03410101 	movteq	r0, #4353	; 0x1101
     47c:	00030000 	andeq	r0, r3, r0
     480:	00000135 	andeq	r0, r0, r5, lsr r1
     484:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     488:	0101000d 	tsteq	r1, sp
     48c:	00000101 	andeq	r0, r0, r1, lsl #2
     490:	00000100 	andeq	r0, r0, r0, lsl #2
     494:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
     498:	2f632f74 	svccs	0x00632f74
     49c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     4a0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     4a4:	442f6162 	strtmi	r6, [pc], #-354	; 4ac <CPSR_IRQ_INHIBIT+0x42c>
     4a8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     4ac:	73746e65 	cmnvc	r4, #1616	; 0x650
     4b0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     4b4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     4b8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     4bc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     4c0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     4c4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     4c8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     4cc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     4d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     4d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     4d8:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     4dc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     4e0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     4e4:	2f632f74 	svccs	0x00632f74
     4e8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     4ec:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     4f0:	442f6162 	strtmi	r6, [pc], #-354	; 4f8 <CPSR_IRQ_INHIBIT+0x478>
     4f4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     4f8:	73746e65 	cmnvc	r4, #1616	; 0x650
     4fc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     500:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     504:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     508:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     50c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     510:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     514:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     518:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     51c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     520:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     524:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     528:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     52c:	2f632f74 	svccs	0x00632f74
     530:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     534:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     538:	442f6162 	strtmi	r6, [pc], #-354	; 540 <CPSR_IRQ_INHIBIT+0x4c0>
     53c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     540:	73746e65 	cmnvc	r4, #1616	; 0x650
     544:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     548:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     54c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     550:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     554:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     558:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     55c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     560:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     564:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     568:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     56c:	616f622f 	cmnvs	pc, pc, lsr #4
     570:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
     574:	2f306970 	svccs	0x00306970
     578:	006c6168 	rsbeq	r6, ip, r8, ror #2
     57c:	63326900 	teqvs	r2, #0, 18
     580:	0100682e 	tsteq	r0, lr, lsr #16
     584:	32690000 	rsbcc	r0, r9, #0
     588:	70632e63 	rsbvc	r2, r3, r3, ror #28
     58c:	00020070 	andeq	r0, r2, r0, ror r0
     590:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     594:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     598:	00030068 	andeq	r0, r3, r8, rrx
     59c:	72657000 	rsbvc	r7, r5, #0
     5a0:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
     5a4:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
     5a8:	0300682e 	movweq	r6, #2094	; 0x82e
     5ac:	70670000 	rsbvc	r0, r7, r0
     5b0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     5b4:	00000100 	andeq	r0, r0, r0, lsl #2
     5b8:	000a0500 	andeq	r0, sl, r0, lsl #10
     5bc:	90d80205 	sbcsls	r0, r8, r5, lsl #4
     5c0:	1a030000 	bne	c05c8 <_bss_end+0xae918>
     5c4:	bc120501 	cfldr32lt	mvfx0, [r2], {1}
     5c8:	02670505 	rsbeq	r0, r7, #20971520	; 0x1400000
     5cc:	01010008 	tsteq	r1, r8
     5d0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
     5d4:	00910c02 	addseq	r0, r1, r2, lsl #24
     5d8:	01180300 	tsteq	r8, r0, lsl #6
     5dc:	001c0282 	andseq	r0, ip, r2, lsl #5
     5e0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     5e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     5e8:	008a1002 	addeq	r1, sl, r2
     5ec:	13051800 	movwne	r1, #22528	; 0x5800
     5f0:	080105da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl}
     5f4:	0c0585e7 	cfstr32eq	mvfx8, [r5], {231}	; 0xe7
     5f8:	4a16059f 	bmi	581c7c <_bss_end+0x56ffcc>
     5fc:	052e3005 	streq	r3, [lr, #-5]!
     600:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     604:	0e058334 	mcreq	3, 0, r8, cr5, cr4, {1}
     608:	4a100585 	bmi	401c24 <_bss_end+0x3eff74>
     60c:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
     610:	0105ba05 	tsteq	r5, r5, lsl #20
     614:	1b056930 	blne	15aadc <_bss_end+0x148e2c>
     618:	d6090583 	strle	r0, [r9], -r3, lsl #11
     61c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     620:	1b054b10 	blne	153268 <_bss_end+0x1415b8>
     624:	d609054c 	strle	r0, [r9], -ip, asr #10
     628:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     62c:	10054c17 	andne	r4, r5, r7, lsl ip
     630:	4f1c05bb 	svcmi	0x001c05bb
     634:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
     638:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     63c:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
     640:	2005831e 	andcs	r8, r5, lr, lsl r3
     644:	4c1c0582 	cfldr32mi	mvfx0, [ip], {130}	; 0x82
     648:	bc1305bb 	cfldr32lt	mvfx0, [r3], {187}	; 0xbb
     64c:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
     650:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     654:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
     658:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     65c:	2805f324 	stmdacs	r5, {r2, r5, r8, r9, ip, sp, lr, pc}
     660:	2e260582 	cfsh64cs	mvdx0, mvdx6, #-62
     664:	052f2205 	streq	r2, [pc, #-517]!	; 467 <CPSR_IRQ_INHIBIT+0x3e7>
     668:	13058224 	movwne	r8, #21028	; 0x5224
     66c:	001c054c 	andseq	r0, ip, ip, asr #10
     670:	4a030402 	bmi	c1680 <_bss_end+0xaf9d0>
     674:	02003005 	andeq	r3, r0, #5
     678:	05830204 	streq	r0, [r3, #516]	; 0x204
     67c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     680:	30058202 	andcc	r8, r5, r2, lsl #4
     684:	02040200 	andeq	r0, r4, #0, 4
     688:	00260582 	eoreq	r0, r6, r2, lsl #11
     68c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     690:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     694:	052d0204 	streq	r0, [sp, #-516]!	; 0xfffffdfc
     698:	1f05851d 	svcne	0x0005851d
     69c:	4c1e0582 	cfldr32mi	mvfx0, [lr], {130}	; 0x82
     6a0:	05822005 	streq	r2, [r2, #5]
     6a4:	01054c0f 	tsteq	r5, pc, lsl #24
     6a8:	2405a14b 	strcs	sl, [r5], #-331	; 0xfffffeb5
     6ac:	822805f3 	eorhi	r0, r8, #1019215872	; 0x3cc00000
     6b0:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
     6b4:	24052f22 	strcs	r2, [r5], #-3874	; 0xfffff0de
     6b8:	4c1d0582 	cfldr32mi	mvfx0, [sp], {130}	; 0x82
     6bc:	05821f05 	streq	r1, [r2, #3845]	; 0xf05
     6c0:	20054c1e 	andcs	r4, r5, lr, lsl ip
     6c4:	4d0f0582 	cfstr32mi	mvfx0, [pc, #-520]	; 4c4 <CPSR_IRQ_INHIBIT+0x444>
     6c8:	054c1305 	strbeq	r1, [ip, #-773]	; 0xfffffcfb
     6cc:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     6d0:	30054a03 	andcc	r4, r5, r3, lsl #20
     6d4:	02040200 	andeq	r0, r4, #0, 4
     6d8:	00180583 	andseq	r0, r8, r3, lsl #11
     6dc:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
     6e0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     6e4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     6e8:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     6ec:	05056602 	streq	r6, [r5, #-1538]	; 0xfffff9fe
     6f0:	02040200 	andeq	r0, r4, #0, 4
     6f4:	84010549 	strhi	r0, [r1], #-1353	; 0xfffffab7
     6f8:	bb1605a1 	bllt	581d84 <_bss_end+0x5700d4>
     6fc:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     700:	1f054b10 	svcne	0x00054b10
     704:	671a0568 	ldrvs	r0, [sl, -r8, ror #10]
     708:	05671d05 	strbeq	r1, [r7, #-3333]!	; 0xfffff2fb
     70c:	0105bc0c 	tsteq	r5, ip, lsl #24
     710:	1605694b 	strne	r6, [r5], -fp, asr #18
     714:	4a0905d7 	bmi	241e78 <_bss_end+0x2301c8>
     718:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     71c:	09054d1e 	stmdbeq	r5, {r1, r2, r3, r4, r8, sl, fp, lr}
     720:	66050568 	strvs	r0, [r5], -r8, ror #10
     724:	02002005 	andeq	r2, r0, #5
     728:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     72c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     730:	34054a01 	strcc	r4, [r5], #-2561	; 0xfffff5ff
     734:	4a24054d 	bmi	901c70 <_bss_end+0x8effc0>
     738:	05823405 	streq	r3, [r2, #1029]	; 0x405
     73c:	22052e26 	andcs	r2, r5, #608	; 0x260
     740:	8232052f 	eorshi	r0, r2, #197132288	; 0xbc00000
     744:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     748:	2e053017 	mcrcs	0, 0, r3, cr5, cr7, {0}
     74c:	03040200 	movweq	r0, #16896	; 0x4200
     750:	001e054a 	andseq	r0, lr, sl, asr #10
     754:	4a030402 	bmi	c1764 <_bss_end+0xafab4>
     758:	02002005 	andeq	r2, r0, #5
     75c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     760:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     764:	3d05bb02 	vstrcc	d11, [r5, #-8]
     768:	02040200 	andeq	r0, r4, #0, 4
     76c:	0024052e 	eoreq	r0, r4, lr, lsr #10
     770:	66020402 	strvs	r0, [r2], -r2, lsl #8
     774:	02003d05 	andeq	r3, r0, #320	; 0x140
     778:	05820204 	streq	r0, [r2, #516]	; 0x204
     77c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     780:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
     784:	02040200 	andeq	r0, r4, #0, 4
     788:	851d052d 	ldrhi	r0, [sp, #-1325]	; 0xfffffad3
     78c:	05821f05 	streq	r1, [r2, #3845]	; 0xf05
     790:	20054c1e 	andcs	r4, r5, lr, lsl ip
     794:	4c0f0582 	cfstr32mi	mvfx0, [pc], {130}	; 0x82
     798:	6f030905 	svcvs	0x00030905
     79c:	01054f66 	tsteq	r5, r6, ror #30
     7a0:	822e0d03 	eorhi	r0, lr, #3, 26	; 0xc0
     7a4:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
     7a8:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
     7ac:	80030620 	andhi	r0, r3, r0, lsr #12
     7b0:	0105827f 	tsteq	r5, pc, ror r2
     7b4:	9e018003 	cdpls	0, 0, cr8, cr1, cr3, {0}
     7b8:	0a024aba 	beq	932a8 <_bss_end+0x815f8>
     7bc:	dd010100 	stfles	f0, [r1, #-0]
     7c0:	03000003 	movweq	r0, #3
     7c4:	0000c300 	andeq	ip, r0, r0, lsl #6
     7c8:	fb010200 	blx	40fd2 <_bss_end+0x2f322>
     7cc:	01000d0e 	tsteq	r0, lr, lsl #26
     7d0:	00010101 	andeq	r0, r1, r1, lsl #2
     7d4:	00010000 	andeq	r0, r1, r0
     7d8:	6d2f0100 	stfvss	f0, [pc, #-0]	; 7e0 <CPSR_IRQ_INHIBIT+0x760>
     7dc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     7e0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     7e4:	4b2f7372 	blmi	bdd5b4 <_bss_end+0xbcb904>
     7e8:	2f616275 	svccs	0x00616275
     7ec:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     7f0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     7f4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     7f8:	614d6f72 	hvcvs	55026	; 0xd6f2
     7fc:	652f6574 	strvs	r6, [pc, #-1396]!	; 290 <CPSR_IRQ_INHIBIT+0x210>
     800:	706d6178 	rsbvc	r6, sp, r8, ror r1
     804:	2f73656c 	svccs	0x0073656c
     808:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     80c:	6b2f4332 	blvs	bd14dc <_bss_end+0xbbf82c>
     810:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     814:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     818:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     81c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     820:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 65c <CPSR_IRQ_INHIBIT+0x5dc>
     824:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     828:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     82c:	4b2f7372 	blmi	bdd5fc <_bss_end+0xbcb94c>
     830:	2f616275 	svccs	0x00616275
     834:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     838:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     83c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     840:	614d6f72 	hvcvs	55026	; 0xd6f2
     844:	652f6574 	strvs	r6, [pc, #-1396]!	; 2d8 <CPSR_IRQ_INHIBIT+0x258>
     848:	706d6178 	rsbvc	r6, sp, r8, ror r1
     84c:	2f73656c 	svccs	0x0073656c
     850:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     854:	6b2f4332 	blvs	bd1524 <_bss_end+0xbbf874>
     858:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     85c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     860:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     864:	72642f65 	rsbvc	r2, r4, #404	; 0x194
     868:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     86c:	6d000073 	stcvs	0, cr0, [r0, #-460]	; 0xfffffe34
     870:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     874:	632e726f 			; <UNDEFINED> instruction: 0x632e726f
     878:	01007070 	tsteq	r0, r0, ror r0
     87c:	6f6d0000 	svcvs	0x006d0000
     880:	6f74696e 	svcvs	0x0074696e
     884:	00682e72 	rsbeq	r2, r8, r2, ror lr
     888:	00000002 	andeq	r0, r0, r2
     88c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     890:	00915402 	addseq	r5, r1, r2, lsl #8
     894:	0e051600 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx0
     898:	322605d7 	eorcc	r0, r6, #901775360	; 0x35c00000
     89c:	22020105 	andcs	r0, r2, #1073741825	; 0x40000001
     8a0:	9e090314 	mcrls	3, 0, r0, cr9, cr4, {0}
     8a4:	05831105 	streq	r1, [r3, #261]	; 0x105
     8a8:	22054c17 	andcs	r4, r5, #5888	; 0x1700
     8ac:	01040200 	mrseq	r0, R12_usr
     8b0:	0020054a 	eoreq	r0, r0, sl, asr #10
     8b4:	4a010402 	bmi	418c4 <_bss_end+0x2fc14>
     8b8:	05681b05 	strbeq	r1, [r8, #-2821]!	; 0xfffff4fb
     8bc:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     8c0:	24054a03 	strcs	r4, [r5], #-2563	; 0xfffff5fd
     8c4:	03040200 	movweq	r0, #16896	; 0x4200
     8c8:	000d054a 	andeq	r0, sp, sl, asr #10
     8cc:	68020402 	stmdavs	r2, {r1, sl}
     8d0:	02001c05 	andeq	r1, r0, #1280	; 0x500
     8d4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     8d8:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     8dc:	25054a02 	strcs	r4, [r5, #-2562]	; 0xfffff5fe
     8e0:	02040200 	andeq	r0, r4, #0, 4
     8e4:	0028054a 	eoreq	r0, r8, sl, asr #10
     8e8:	4a020402 	bmi	818f8 <_bss_end+0x6fc48>
     8ec:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     8f0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     8f4:	04020009 	streq	r0, [r2], #-9
     8f8:	05054802 	streq	r4, [r5, #-2050]	; 0xfffff7fe
     8fc:	02040200 	andeq	r0, r4, #0, 4
     900:	89010580 	stmdbhi	r1, {r7, r8, sl}
     904:	05661203 	strbeq	r1, [r6, #-515]!	; 0xfffffdfd
     908:	22058317 	andcs	r8, r5, #1543503872	; 0x5c000000
     90c:	01040200 	mrseq	r0, R12_usr
     910:	0020054a 	eoreq	r0, r0, sl, asr #10
     914:	4a010402 	bmi	41924 <_bss_end+0x2fc74>
     918:	05681b05 	strbeq	r1, [r8, #-2821]!	; 0xfffff4fb
     91c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     920:	24054a03 	strcs	r4, [r5], #-2563	; 0xfffff5fd
     924:	03040200 	movweq	r0, #16896	; 0x4200
     928:	0032054a 	eorseq	r0, r2, sl, asr #10
     92c:	68020402 	stmdavs	r2, {r1, sl}
     930:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
     934:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     938:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
     93c:	4a054a02 	bmi	15314c <_bss_end+0x14149c>
     940:	02040200 	andeq	r0, r4, #0, 4
     944:	004d054a 	subeq	r0, sp, sl, asr #10
     948:	4a020402 	bmi	81958 <_bss_end+0x6fca8>
     94c:	02000d05 	andeq	r0, r0, #320	; 0x140
     950:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     954:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
     958:	22054a02 	andcs	r4, r5, #8192	; 0x2000
     95c:	02040200 	andeq	r0, r4, #0, 4
     960:	0020054a 	eoreq	r0, r0, sl, asr #10
     964:	4a020402 	bmi	81974 <_bss_end+0x6fcc4>
     968:	02002b05 	andeq	r2, r0, #5120	; 0x1400
     96c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     970:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     974:	4d054a02 	vstrmi	s8, [r5, #-8]
     978:	02040200 	andeq	r0, r4, #0, 4
     97c:	0030052e 	eorseq	r0, r0, lr, lsr #10
     980:	4a020402 	bmi	81990 <_bss_end+0x6fce0>
     984:	02000905 	andeq	r0, r0, #81920	; 0x14000
     988:	052c0204 	streq	r0, [ip, #-516]!	; 0xfffffdfc
     98c:	04020005 	streq	r0, [r2], #-5
     990:	17058002 	strne	r8, [r5, -r2]
     994:	0022058a 	eoreq	r0, r2, sl, lsl #11
     998:	4a030402 	bmi	c19a8 <_bss_end+0xafcf8>
     99c:	02002005 	andeq	r2, r0, #5
     9a0:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
     9a4:	04020009 	streq	r0, [r2], #-9
     9a8:	15056802 	strne	r6, [r5, #-2050]	; 0xfffff7fe
     9ac:	02040200 	andeq	r0, r4, #0, 4
     9b0:	001e054a 	andseq	r0, lr, sl, asr #10
     9b4:	4a020402 	bmi	819c4 <_bss_end+0x6fd14>
     9b8:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     9bc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     9c0:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     9c4:	2e054a02 	vmlacs.f32	s8, s10, s4
     9c8:	02040200 	andeq	r0, r4, #0, 4
     9cc:	0031052e 	eorseq	r0, r1, lr, lsr #10
     9d0:	4a020402 	bmi	819e0 <_bss_end+0x6fd30>
     9d4:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     9d8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     9dc:	04020005 	streq	r0, [r2], #-5
     9e0:	01054802 	tsteq	r5, r2, lsl #16
     9e4:	05058a86 	streq	r8, [r5, #-2694]	; 0xfffff57a
     9e8:	680905bb 	stmdavs	r9, {r0, r1, r3, r4, r5, r7, r8, sl}
     9ec:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     9f0:	1f054a21 	svcne	0x00054a21
     9f4:	2e35054a 	cdpcs	5, 3, cr0, cr5, cr10, {2}
     9f8:	054a2a05 	strbeq	r2, [sl, #-2565]	; 0xfffff5fb
     9fc:	38052e36 	stmdacc	r5, {r1, r2, r4, r5, r9, sl, fp, sp}
     a00:	4b14052e 	blmi	501ec0 <_bss_end+0x4f0210>
     a04:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     a08:	05678614 	strbeq	r8, [r7, #-1556]!	; 0xfffff9ec
     a0c:	12054a09 	andne	r4, r5, #36864	; 0x9000
     a10:	4c0d0569 	cfstr32mi	mvfx0, [sp], {105}	; 0x69
     a14:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     a18:	059f1705 	ldreq	r1, [pc, #1797]	; 1125 <CPSR_IRQ_INHIBIT+0x10a5>
     a1c:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     a20:	25054a03 	strcs	r4, [r5, #-2563]	; 0xfffff5fd
     a24:	03040200 	movweq	r0, #16896	; 0x4200
     a28:	00170582 	andseq	r0, r7, r2, lsl #11
     a2c:	4c020402 	cfstrsmi	mvf0, [r2], {2}
     a30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     a34:	05d40204 	ldrbeq	r0, [r4, #516]	; 0x204
     a38:	0d058716 	stceq	7, cr8, [r5, #-88]	; 0xffffffa8
     a3c:	2f01054c 	svccs	0x0001054c
     a40:	9f130569 	svcls	0x00130569
     a44:	05680d05 	strbeq	r0, [r8, #-3333]!	; 0xfffff2fb
     a48:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
     a4c:	0905a333 	stmdbeq	r5, {r0, r1, r4, r5, r8, r9, sp, pc}
     a50:	830e054a 	movwhi	r0, #58698	; 0xe54a
     a54:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
     a58:	01054c0d 	tsteq	r5, sp, lsl #24
     a5c:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
     a60:	681205bb 	ldmdavs	r2, {r0, r1, r3, r4, r5, r7, r8, sl}
     a64:	69160586 	ldmdbvs	r6, {r1, r2, r7, r8, sl}
     a68:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
     a6c:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
     a70:	1205d709 	andne	sp, r5, #2359296	; 0x240000
     a74:	6827054c 	stmdavs	r7!, {r2, r3, r6, r8, sl}
     a78:	05ba2d05 	ldreq	r2, [sl, #3333]!	; 0xd05
     a7c:	11054a10 	tstne	r5, r0, lsl sl
     a80:	4a2d052e 	bmi	b41f40 <_bss_end+0xb30290>
     a84:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
     a88:	0a052f0f 	beq	14c6cc <_bss_end+0x13aa1c>
     a8c:	610505a0 	smlatbvs	r5, r0, r5, r0
     a90:	68100536 	ldmdavs	r0, {r1, r2, r4, r5, r8, sl}
     a94:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
     a98:	13054a22 	movwne	r4, #23074	; 0x5a22
     a9c:	2f0a052e 	svccs	0x000a052e
     aa0:	05690c05 	strbeq	r0, [r9, #-3077]!	; 0xfffff3fb
     aa4:	0f052e0d 	svceq	0x00052e0d
     aa8:	4b06054a 	blmi	181fd8 <_bss_end+0x170328>
     aac:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
     ab0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
     ab4:	17054a03 	strne	r4, [r5, -r3, lsl #20]
     ab8:	03040200 	movweq	r0, #16896	; 0x4200
     abc:	001b059e 	mulseq	fp, lr, r5
     ac0:	68020402 	stmdavs	r2, {r1, sl}
     ac4:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
     ac8:	05820204 	streq	r0, [r2, #516]	; 0x204
     acc:	0402000e 	streq	r0, [r2], #-14
     ad0:	20054a02 	andcs	r4, r5, r2, lsl #20
     ad4:	02040200 	andeq	r0, r4, #0, 4
     ad8:	0021054b 	eoreq	r0, r1, fp, asr #10
     adc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     ae0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ae4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     ae8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     aec:	21058202 	tstcs	r5, r2, lsl #4
     af0:	02040200 	andeq	r0, r4, #0, 4
     af4:	0017054a 	andseq	r0, r7, sl, asr #10
     af8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     afc:	02001005 	andeq	r1, r0, #5
     b00:	052f0204 	streq	r0, [pc, #-516]!	; 904 <CPSR_IRQ_INHIBIT+0x884>
     b04:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     b08:	13052e02 	movwne	r2, #24066	; 0x5e02
     b0c:	02040200 	andeq	r0, r4, #0, 4
     b10:	0005054a 	andeq	r0, r5, sl, asr #10
     b14:	46020402 	strmi	r0, [r2], -r2, lsl #8
     b18:	82880105 	addhi	r0, r8, #1073741825	; 0x40000001
     b1c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
     b20:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
     b24:	e1030627 	tst	r3, r7, lsr #12
     b28:	0105827e 	tsteq	r5, lr, ror r2
     b2c:	9e019f03 	cdpls	15, 0, cr9, cr1, cr3, {0}
     b30:	0a024a9e 	beq	935b0 <_bss_end+0x81900>
     b34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b38:	02050001 	andeq	r0, r5, #1
     b3c:	0000979c 	muleq	r0, ip, r7
     b40:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
     b44:	05678310 	strbeq	r8, [r7, #-784]!	; 0xfffffcf0
     b48:	08026701 	stmdaeq	r2, {r0, r8, r9, sl, sp, lr}
     b4c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b50:	02050001 	andeq	r0, r5, #1
     b54:	000097d4 	ldrdeq	r9, [r0], -r4
     b58:	05012103 	streq	r2, [r1, #-259]	; 0xfffffefd
     b5c:	17058312 	smladne	r5, r2, r3, r8
     b60:	4a05054a 	bmi	142090 <_bss_end+0x1303e0>
     b64:	674c1405 	strbvs	r1, [ip, -r5, lsl #8]
     b68:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     b6c:	17056912 	smladne	r5, r2, r9, r6
     b70:	4a05054a 	bmi	1420a0 <_bss_end+0x1303f0>
     b74:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
     b78:	1f054b16 	svcne	0x00054b16
     b7c:	2e14054a 	cfmac32cs	mvfx0, mvfx4, mvfx10
     b80:	024c0105 	subeq	r0, ip, #1073741825	; 0x40000001
     b84:	01010006 	tsteq	r1, r6
     b88:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     b8c:	00985c02 	addseq	r5, r8, r2, lsl #24
     b90:	00c00300 	sbceq	r0, r0, r0, lsl #6
     b94:	83130501 	tsthi	r3, #4194304	; 0x400000
     b98:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
     b9c:	01010008 	tsteq	r1, r8
     ba0:	000007e2 	andeq	r0, r0, r2, ror #15
     ba4:	020c0003 	andeq	r0, ip, #3
     ba8:	01020000 	mrseq	r0, (UNDEF: 2)
     bac:	000d0efb 	strdeq	r0, [sp], -fp
     bb0:	01010101 	tsteq	r1, r1, lsl #2
     bb4:	01000000 	mrseq	r0, (UNDEF: 0)
     bb8:	2f010000 	svccs	0x00010000
     bbc:	2f746e6d 	svccs	0x00746e6d
     bc0:	73552f63 	cmpvc	r5, #396	; 0x18c
     bc4:	2f737265 	svccs	0x00737265
     bc8:	6162754b 	cmnvs	r2, fp, asr #10
     bcc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     bd0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     bd4:	5a2f7374 	bpl	bdd9ac <_bss_end+0xbcbcfc>
     bd8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; a4c <CPSR_IRQ_INHIBIT+0x9cc>
     bdc:	2f657461 	svccs	0x00657461
     be0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     be4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     be8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     bec:	2f433249 	svccs	0x00433249
     bf0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     bf4:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
     bf8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     bfc:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; a74 <CPSR_IRQ_INHIBIT+0x9f4>
     c00:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
     c04:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; a28 <CPSR_IRQ_INHIBIT+0x9a8>
     c08:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     c0c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     c10:	4b2f7372 	blmi	bdd9e0 <_bss_end+0xbcbd30>
     c14:	2f616275 	svccs	0x00616275
     c18:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c1c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c20:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     c24:	614d6f72 	hvcvs	55026	; 0xd6f2
     c28:	652f6574 	strvs	r6, [pc, #-1396]!	; 6bc <CPSR_IRQ_INHIBIT+0x63c>
     c2c:	706d6178 	rsbvc	r6, sp, r8, ror r1
     c30:	2f73656c 	svccs	0x0073656c
     c34:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     c38:	6b2f4332 	blvs	bd1908 <_bss_end+0xbbfc58>
     c3c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     c40:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     c44:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     c48:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c4c:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; a88 <CPSR_IRQ_INHIBIT+0xa08>
     c50:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     c54:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     c58:	4b2f7372 	blmi	bdda28 <_bss_end+0xbcbd78>
     c5c:	2f616275 	svccs	0x00616275
     c60:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c64:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c68:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     c6c:	614d6f72 	hvcvs	55026	; 0xd6f2
     c70:	652f6574 	strvs	r6, [pc, #-1396]!	; 704 <CPSR_IRQ_INHIBIT+0x684>
     c74:	706d6178 	rsbvc	r6, sp, r8, ror r1
     c78:	2f73656c 	svccs	0x0073656c
     c7c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     c80:	6b2f4332 	blvs	bd1950 <_bss_end+0xbbfca0>
     c84:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     c88:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     c8c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     c90:	72642f65 	rsbvc	r2, r4, #404	; 0x194
     c94:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c98:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; ad4 <CPSR_IRQ_INHIBIT+0xa54>
     c9c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     ca0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     ca4:	4b2f7372 	blmi	bdda74 <_bss_end+0xbcbdc4>
     ca8:	2f616275 	svccs	0x00616275
     cac:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     cb0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     cb4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     cb8:	614d6f72 	hvcvs	55026	; 0xd6f2
     cbc:	652f6574 	strvs	r6, [pc, #-1396]!	; 750 <CPSR_IRQ_INHIBIT+0x6d0>
     cc0:	706d6178 	rsbvc	r6, sp, r8, ror r1
     cc4:	2f73656c 	svccs	0x0073656c
     cc8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     ccc:	6b2f4332 	blvs	bd199c <_bss_end+0xbbfcec>
     cd0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     cd4:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     cd8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     cdc:	6f622f65 	svcvs	0x00622f65
     ce0:	2f647261 	svccs	0x00647261
     ce4:	30697072 	rsbcc	r7, r9, r2, ror r0
     ce8:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
     cec:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     cf0:	2f632f74 	svccs	0x00632f74
     cf4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     cf8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     cfc:	442f6162 	strtmi	r6, [pc], #-354	; d04 <CPSR_IRQ_INHIBIT+0xc84>
     d00:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     d04:	73746e65 	cmnvc	r4, #1616	; 0x650
     d08:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     d0c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     d10:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     d14:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     d18:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     d1c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     d20:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     d24:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     d28:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     d2c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     d30:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     d34:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     d38:	6972622f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, r9, sp, lr}^
     d3c:	73656764 	cmnvc	r5, #100, 14	; 0x1900000
     d40:	656b0000 	strbvs	r0, [fp, #-0]!
     d44:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     d48:	6165685f 	cmnvs	r5, pc, asr r8
     d4c:	00682e70 	rsbeq	r2, r8, r0, ror lr
     d50:	6f000001 	svcvs	0x00000001
     d54:	5f64656c 	svcpl	0x0064656c
     d58:	31647373 	smccc	18227	; 0x4733
     d5c:	2e363033 	mrccs	0, 1, r3, cr6, cr3, {1}
     d60:	00707063 	rsbseq	r7, r0, r3, rrx
     d64:	69000002 	stmdbvs	r0, {r1}
     d68:	682e6332 	stmdavs	lr!, {r1, r4, r5, r8, r9, sp, lr}
     d6c:	00000300 	andeq	r0, r0, r0, lsl #6
     d70:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
     d74:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     d78:	00000400 	andeq	r0, r0, r0, lsl #8
     d7c:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
     d80:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     d84:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
     d88:	00040068 	andeq	r0, r4, r8, rrx
     d8c:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
     d90:	73735f64 	cmnvc	r3, #100, 30	; 0x190
     d94:	30333164 	eorscc	r3, r3, r4, ror #2
     d98:	00682e36 	rsbeq	r2, r8, r6, lsr lr
     d9c:	64000003 	strvs	r0, [r0], #-3
     da0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     da4:	705f7961 	subsvc	r7, pc, r1, ror #18
     da8:	6f746f72 	svcvs	0x00746f72
     dac:	2e6c6f63 	cdpcs	15, 6, cr6, cr12, cr3, {3}
     db0:	00050068 	andeq	r0, r5, r8, rrx
     db4:	01050000 	mrseq	r0, (UNDEF: 5)
     db8:	00020500 	andeq	r0, r2, r0, lsl #10
     dbc:	030000ab 	movweq	r0, #171	; 0xab
     dc0:	1405013d 	strne	r0, [r5], #-317	; 0xfffffec3
     dc4:	6701059f 			; <UNDEFINED> instruction: 0x6701059f
     dc8:	01000802 	tsteq	r0, r2, lsl #16
     dcc:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     dd0:	02050001 	andeq	r0, r5, #1
     dd4:	00009888 	andeq	r9, r0, r8, lsl #17
     dd8:	a30c051a 	movwge	r0, #50458	; 0xc51a
     ddc:	ca080105 	bgt	2011f8 <_bss_end+0x1ef548>
     de0:	bb0a05a1 	bllt	28246c <_bss_end+0x2707bc>
     de4:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
     de8:	05056609 	streq	r6, [r5, #-1545]	; 0xfffff9f7
     dec:	4b10054a 	blmi	40231c <_bss_end+0x3f066c>
     df0:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
     df4:	05056914 	streq	r6, [r5, #-2324]	; 0xfffff6ec
     df8:	4b1f054a 	blmi	7c2328 <_bss_end+0x7b0678>
     dfc:	059e1505 	ldreq	r1, [lr, #1285]	; 0x505
     e00:	0c052e10 	stceq	14, cr2, [r5], {16}
     e04:	670d0568 	strvs	r0, [sp, -r8, ror #10]
     e08:	056b1b05 	strbeq	r1, [fp, #-2821]!	; 0xfffff4fb
     e0c:	22054a24 	andcs	r4, r5, #36, 20	; 0x24000
     e10:	2e2c054a 	cfsh64cs	mvdx0, mvdx12, #42
     e14:	059e2f05 	ldreq	r2, [lr, #3845]	; 0xf05
     e18:	1405820d 	strne	r8, [r5], #-525	; 0xfffffdf3
     e1c:	4a40054f 	bmi	1002360 <_bss_end+0xff06b0>
     e20:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     e24:	5605d63a 			; <UNDEFINED> instruction: 0x5605d63a
     e28:	d67505d6 			; <UNDEFINED> instruction: 0xd67505d6
     e2c:	05d71c05 	ldrbeq	r1, [r7, #3077]	; 0xc05
     e30:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     e34:	8714054a 	ldrhi	r0, [r4, -sl, asr #10]
     e38:	054a4005 	strbeq	r4, [sl, #-5]
     e3c:	3405841c 	strcc	r8, [r5], #-1052	; 0xfffffbe4
     e40:	663605d6 			; <UNDEFINED> instruction: 0x663605d6
     e44:	05840905 	streq	r0, [r4, #2309]	; 0x905
     e48:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     e4c:	4a400588 	bmi	1002474 <_bss_end+0xff07c4>
     e50:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     e54:	5005d63a 	andpl	sp, r5, sl, lsr r6
     e58:	d74205d6 			; <UNDEFINED> instruction: 0xd74205d6
     e5c:	054a4805 	strbeq	r4, [sl, #-2053]	; 0xfffff7fb
     e60:	09059f1c 	stmdbeq	r5, {r2, r3, r4, r8, r9, sl, fp, ip, pc}
     e64:	4a1d05bc 	bmi	74255c <_bss_end+0x7308ac>
     e68:	05871405 	streq	r1, [r7, #1029]	; 0x405
     e6c:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     e70:	d62d0584 	strtle	r0, [sp], -r4, lsl #11
     e74:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     e78:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     e7c:	4a400588 	bmi	10024a4 <_bss_end+0xff07f4>
     e80:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     e84:	4e05d63a 	mcrmi	6, 0, sp, cr5, cr10, {1}
     e88:	d74505d6 			; <UNDEFINED> instruction: 0xd74505d6
     e8c:	054a4b05 	strbeq	r4, [sl, #-2821]	; 0xfffff4fb
     e90:	09059e5d 	stmdbeq	r5, {r0, r2, r3, r4, r6, r9, sl, fp, ip, pc}
     e94:	4a1d05bc 	bmi	74258c <_bss_end+0x7308dc>
     e98:	05871405 	streq	r1, [r7, #1029]	; 0x405
     e9c:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     ea0:	d63a0584 	ldrtle	r0, [sl], -r4, lsl #11
     ea4:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     ea8:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     eac:	4a400587 	bmi	10024d0 <_bss_end+0xff0820>
     eb0:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     eb4:	0905d62d 	stmdbeq	r5, {r0, r2, r3, r5, r9, sl, ip, lr, pc}
     eb8:	4a1d05bc 	bmi	7425b0 <_bss_end+0x730900>
     ebc:	05871405 	streq	r1, [r7, #1029]	; 0x405
     ec0:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     ec4:	d63a0584 	ldrtle	r0, [sl], -r4, lsl #11
     ec8:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     ecc:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     ed0:	4a400587 	bmi	10024f4 <_bss_end+0xff0844>
     ed4:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     ed8:	0905d62d 	stmdbeq	r5, {r0, r2, r3, r5, r9, sl, ip, lr, pc}
     edc:	4a1d05bc 	bmi	7425d4 <_bss_end+0x730924>
     ee0:	05871405 	streq	r1, [r7, #1029]	; 0x405
     ee4:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     ee8:	d63a0584 	ldrtle	r0, [sl], -r4, lsl #11
     eec:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     ef0:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     ef4:	4a400587 	bmi	1002518 <_bss_end+0xff0868>
     ef8:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     efc:	0905d62d 	stmdbeq	r5, {r0, r2, r3, r5, r9, sl, ip, lr, pc}
     f00:	4a1d05bc 	bmi	7425f8 <_bss_end+0x730948>
     f04:	05881405 	streq	r1, [r8, #1029]	; 0x405
     f08:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     f0c:	d63a0584 	ldrtle	r0, [sl], -r4, lsl #11
     f10:	05d64d05 	ldrbeq	r4, [r6, #3333]	; 0xd05
     f14:	1c05d662 	stcne	6, cr13, [r5], {98}	; 0x62
     f18:	d63b05d7 			; <UNDEFINED> instruction: 0xd63b05d7
     f1c:	05d65d05 	ldrbeq	r5, [r6, #3333]	; 0xd05
     f20:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     f24:	850a054a 	strhi	r0, [sl, #-1354]	; 0xfffffab6
     f28:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     f2c:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
     f30:	3c05d710 	stccc	7, cr13, [r5], {16}
     f34:	8418054a 	ldrhi	r0, [r8], #-1354	; 0xfffffab6
     f38:	05ba4405 	ldreq	r4, [sl, #1029]!	; 0x405
     f3c:	0505ba4d 	streq	fp, [r5, #-2637]	; 0xfffff5b3
     f40:	4a190568 	bmi	6424e8 <_bss_end+0x630838>
     f44:	69830105 	stmibvs	r3, {r0, r2, r8}
     f48:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
     f4c:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
     f50:	4f14054a 	svcmi	0x0014054a
     f54:	054a4005 	strbeq	r4, [sl, #-5]
     f58:	3a05841c 	bcc	161fd0 <_bss_end+0x150320>
     f5c:	bc0905d6 	cfstr32lt	mvfx0, [r9], {214}	; 0xd6
     f60:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     f64:	0f058505 	svceq	0x00058505
     f68:	4c0c054a 	cfstr32mi	mvfx0, [ip], {74}	; 0x4a
     f6c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     f70:	0402000c 	streq	r0, [r2], #-12
     f74:	0d054a01 	vstreq	s8, [r5, #-4]
     f78:	03090568 	movweq	r0, #38248	; 0x9568
     f7c:	01058271 	tsteq	r5, r1, ror r2
     f80:	4d2e1003 	stcmi	0, cr1, [lr, #-12]!
     f84:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
     f88:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     f8c:	0905bb0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp, pc}
     f90:	4a05054a 	bmi	1424c0 <_bss_end+0x130810>
     f94:	004d1305 	subeq	r1, sp, r5, lsl #6
     f98:	06010402 	streq	r0, [r1], -r2, lsl #8
     f9c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     fa0:	02004a02 	andeq	r4, r0, #8192	; 0x2000
     fa4:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
     fa8:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
     fac:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
     fb0:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     fb4:	2a054a04 	bcs	1537cc <_bss_end+0x141b1c>
     fb8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     fbc:	000f054a 	andeq	r0, pc, sl, asr #10
     fc0:	9e040402 	cdpls	4, 0, cr0, cr4, cr2, {0}
     fc4:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     fc8:	054c0404 	strbeq	r0, [ip, #-1028]	; 0xfffffbfc
     fcc:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
     fd0:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
     fd4:	02040200 	andeq	r0, r4, #0, 4
     fd8:	00110583 	andseq	r0, r1, r3, lsl #11
     fdc:	4a020402 	bmi	81fec <_bss_end+0x7033c>
     fe0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     fe4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     fe8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     fec:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
     ff0:	02040200 	andeq	r0, r4, #0, 4
     ff4:	85090549 	strhi	r0, [r9, #-1353]	; 0xfffffab7
     ff8:	05667703 	strbeq	r7, [r6, #-1795]!	; 0xfffff8fd
     ffc:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
    1000:	d70a054d 	strle	r0, [sl, -sp, asr #10]
    1004:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1008:	054d4a05 	strbeq	r4, [sp, #-2565]	; 0xfffff5fb
    100c:	18056709 	stmdane	r5, {r0, r3, r8, r9, sl, sp, lr}
    1010:	4a1f054a 	bmi	7c2540 <_bss_end+0x7b0890>
    1014:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    1018:	2d05ba33 	vstrcs	s22, [r5, #-204]	; 0xffffff34
    101c:	4a27054a 	bmi	9c254c <_bss_end+0x9b089c>
    1020:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    1024:	27054a1f 	smladcs	r5, pc, sl, r4	; <UNPREDICTABLE>
    1028:	d809054a 	stmdale	r9, {r1, r3, r6, r8, sl}
    102c:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    1030:	27054a1f 	smladcs	r5, pc, sl, r4	; <UNPREDICTABLE>
    1034:	ba34054a 	blt	d02564 <_bss_end+0xcf08b4>
    1038:	054a2e05 	strbeq	r2, [sl, #-3589]	; 0xfffff1fb
    103c:	09054a27 	stmdbeq	r5, {r0, r1, r2, r5, r9, fp, lr}
    1040:	4a1f059e 	bmi	7c26c0 <_bss_end+0x7b0a10>
    1044:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    1048:	0105d109 	tsteq	r5, r9, lsl #2
    104c:	0a056934 	beq	15b524 <_bss_end+0x149874>
    1050:	4a090583 	bmi	242664 <_bss_end+0x2309b4>
    1054:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1058:	40055114 	andmi	r5, r5, r4, lsl r1
    105c:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
    1060:	05d63a05 	ldrbeq	r3, [r6, #2565]	; 0xa05
    1064:	5305d64b 	movwpl	sp, #22091	; 0x564b
    1068:	d66805d6 			; <UNDEFINED> instruction: 0xd66805d6
    106c:	05d70f05 	ldrbeq	r0, [r7, #3845]	; 0xf05
    1070:	1e05d617 	mcrne	6, 0, sp, cr5, cr7, {0}
    1074:	4a20054a 	bmi	8025a4 <_bss_end+0x7f08f4>
    1078:	05840905 	streq	r0, [r4, #2309]	; 0x905
    107c:	13054a1d 	movwne	r4, #23069	; 0x5a1d
    1080:	4c180586 	cfldr32mi	mvfx0, [r8], {134}	; 0x86
    1084:	054a2205 	strbeq	r2, [sl, #-517]	; 0xfffffdfb
    1088:	0f054a2a 	svceq	0x00054a2a
    108c:	4c0e059e 	cfstr32mi	mvfx0, [lr], {158}	; 0x9e
    1090:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    1094:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1098:	40058414 	andmi	r8, r5, r4, lsl r4
    109c:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
    10a0:	05bb1205 	ldreq	r1, [fp, #517]!	; 0x205
    10a4:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    10a8:	13054a03 	movwne	r4, #23043	; 0x5a03
    10ac:	02040200 	andeq	r0, r4, #0, 4
    10b0:	001d0568 	andseq	r0, sp, r8, ror #10
    10b4:	4a020402 	bmi	820c4 <_bss_end+0x70414>
    10b8:	02002005 	andeq	r2, r0, #5
    10bc:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    10c0:	04020009 	streq	r0, [r2], #-9
    10c4:	02008002 	andeq	r8, r0, #2
    10c8:	05880204 	streq	r0, [r8, #516]	; 0x204
    10cc:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    10d0:	23054a02 	movwcs	r4, #23042	; 0x5a02
    10d4:	02040200 	andeq	r0, r4, #0, 4
    10d8:	05827503 	streq	r7, [r2, #1283]	; 0x503
    10dc:	04020005 	streq	r0, [r2], #-5
    10e0:	09056602 	stmdbeq	r5, {r1, r9, sl, sp, lr}
    10e4:	052e6d03 	streq	r6, [lr, #-3331]!	; 0xfffff2fd
    10e8:	2e200301 	cdpcs	3, 2, cr0, cr0, cr1, {0}
    10ec:	bb05054d 	bllt	142628 <_bss_end+0x130978>
    10f0:	05691605 	strbeq	r1, [r9, #-1541]!	; 0xfffff9fb
    10f4:	11056805 	tstne	r5, r5, lsl #16
    10f8:	0d052808 	stceq	8, cr2, [r5, #-32]	; 0xffffffe0
    10fc:	2a05334b 	bcs	14de30 <_bss_end+0x13c180>
    1100:	4c190569 	cfldr32mi	mvfx0, [r9], {105}	; 0x69
    1104:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
    1108:	0534d80d 	ldreq	sp, [r4, #-2061]!	; 0xfffff7f3
    110c:	28056935 	stmdacs	r5, {r0, r2, r4, r5, r8, fp, sp, lr}
    1110:	681b054d 	ldmdavs	fp, {r0, r2, r3, r6, r8, sl}
    1114:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    1118:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    111c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1120:	2005ba03 	andcs	fp, r5, r3, lsl #20
    1124:	02040200 	andeq	r0, r4, #0, 4
    1128:	001a0567 	andseq	r0, sl, r7, ror #10
    112c:	ba020402 	blt	8213c <_bss_end+0x7048c>
    1130:	02002805 	andeq	r2, r0, #327680	; 0x50000
    1134:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1138:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    113c:	3105ba02 	tstcc	r5, r2, lsl #20
    1140:	02040200 	andeq	r0, r4, #0, 4
    1144:	001a052e 	andseq	r0, sl, lr, lsr #10
    1148:	4a020402 	bmi	82158 <_bss_end+0x704a8>
    114c:	02000d05 	andeq	r0, r0, #320	; 0x140
    1150:	03b90204 			; <UNDEFINED> instruction: 0x03b90204
    1154:	2c058209 	sfmcs	f0, 1, [r5], {9}
    1158:	4c1c0569 	cfldr32mi	mvfx0, [ip], {105}	; 0x69
    115c:	056a1605 	strbeq	r1, [sl, #-1541]!	; 0xfffff9fb
    1160:	1f054a0d 	svcne	0x00054a0d
    1164:	002c054c 	eoreq	r0, ip, ip, asr #10
    1168:	ba010402 	blt	42178 <_bss_end+0x304c8>
    116c:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    1170:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1174:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    1178:	3805d601 	stmdacc	r5, {r0, r9, sl, ip, lr, pc}
    117c:	01040200 	mrseq	r0, R12_usr
    1180:	002e05ba 	strhteq	r0, [lr], -sl
    1184:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1188:	054c2305 	strbeq	r2, [ip, #-773]	; 0xfffffcfb
    118c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    1190:	3905ba03 	stmdbcc	r5, {r0, r1, r9, fp, ip, sp, pc}
    1194:	03040200 	movweq	r0, #16896	; 0x4200
    1198:	0043052e 	subeq	r0, r3, lr, lsr #10
    119c:	d6030402 	strle	r0, [r3], -r2, lsl #8
    11a0:	02003c05 	andeq	r3, r0, #1280	; 0x500
    11a4:	05ba0304 	ldreq	r0, [sl, #772]!	; 0x304
    11a8:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    11ac:	39052e03 	stmdbcc	r5, {r0, r1, r9, sl, fp, sp}
    11b0:	02040200 	andeq	r0, r4, #0, 4
    11b4:	0046054c 	subeq	r0, r6, ip, asr #10
    11b8:	ba020402 	blt	821c8 <_bss_end+0x70518>
    11bc:	02004405 	andeq	r4, r0, #83886080	; 0x5000000
    11c0:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    11c4:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    11c8:	5205ba02 	andpl	fp, r5, #8192	; 0x2000
    11cc:	02040200 	andeq	r0, r4, #0, 4
    11d0:	004b054a 	subeq	r0, fp, sl, asr #10
    11d4:	ba020402 	blt	821e4 <_bss_end+0x70534>
    11d8:	02002805 	andeq	r2, r0, #327680	; 0x50000
    11dc:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    11e0:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    11e4:	34054c02 	strcc	r4, [r5], #-3074	; 0xfffff3fe
    11e8:	02040200 	andeq	r0, r4, #0, 4
    11ec:	0037054a 	eorseq	r0, r7, sl, asr #10
    11f0:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    11f4:	02004605 	andeq	r4, r0, #5242880	; 0x500000
    11f8:	05820204 	streq	r0, [r2, #516]	; 0x204
    11fc:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    1200:	39052e02 	stmdbcc	r5, {r1, r9, sl, fp, sp}
    1204:	02040200 	andeq	r0, r4, #0, 4
    1208:	004d054a 	subeq	r0, sp, sl, asr #10
    120c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1210:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    1214:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1218:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    121c:	1105b602 	tstne	r5, r2, lsl #12
    1220:	02040200 	andeq	r0, r4, #0, 4
    1224:	031f0580 	tsteq	pc, #128, 10	; 0x20000000
    1228:	2f058218 	svccs	0x00058218
    122c:	01040200 	mrseq	r0, R12_usr
    1230:	0028054a 	eoreq	r0, r8, sl, asr #10
    1234:	d6010402 	strle	r0, [r1], -r2, lsl #8
    1238:	05682305 	strbeq	r2, [r8, #-773]!	; 0xfffffcfb
    123c:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    1240:	2c054a03 			; <UNDEFINED> instruction: 0x2c054a03
    1244:	03040200 	movweq	r0, #16896	; 0x4200
    1248:	003805d6 	ldrsbteq	r0, [r8], -r6
    124c:	68020402 	stmdavs	r2, {r1, sl}
    1250:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1254:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    1258:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    125c:	35054a02 	strcc	r4, [r5, #-2562]	; 0xfffff5fe
    1260:	02040200 	andeq	r0, r4, #0, 4
    1264:	0038056d 	eorseq	r0, r8, sp, ror #10
    1268:	4a020402 	bmi	82278 <_bss_end+0x705c8>
    126c:	02004005 	andeq	r4, r0, #5
    1270:	05820204 	streq	r0, [r2, #516]	; 0x204
    1274:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    1278:	4e056602 	cfmadd32mi	mvax0, mvfx6, mvfx5, mvfx2
    127c:	02040200 	andeq	r0, r4, #0, 4
    1280:	0024052e 	eoreq	r0, r4, lr, lsr #10
    1284:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1288:	02002c05 	andeq	r2, r0, #1280	; 0x500
    128c:	05860204 	streq	r0, [r6, #516]	; 0x204
    1290:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    1294:	3605d602 	strcc	sp, [r5], -r2, lsl #12
    1298:	02040200 	andeq	r0, r4, #0, 4
    129c:	0038054a 	eorseq	r0, r8, sl, asr #10
    12a0:	d6020402 	strle	r0, [r2], -r2, lsl #8
    12a4:	02004405 	andeq	r4, r0, #83886080	; 0x5000000
    12a8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    12ac:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    12b0:	1505ba02 	strne	fp, [r5, #-2562]	; 0xfffff5fe
    12b4:	02040200 	andeq	r0, r4, #0, 4
    12b8:	059e7303 	ldreq	r7, [lr, #771]	; 0x303
    12bc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    12c0:	09058002 	stmdbeq	r5, {r1, pc}
    12c4:	827fad03 	rsbshi	sl, pc, #3, 26	; 0xc0
    12c8:	13031105 	movwne	r1, #12549	; 0x3105
    12cc:	4a0d034a 	bmi	341ffc <_bss_end+0x33034c>
    12d0:	0a030d05 	beq	c46ec <_bss_end+0xb2a3c>
    12d4:	5111054a 	tstpl	r1, sl, asr #10
    12d8:	36030d05 	strcc	r0, [r3], -r5, lsl #26
    12dc:	3101054a 	tstcc	r1, sl, asr #10
    12e0:	02009e4a 	andeq	r9, r0, #1184	; 0x4a0
    12e4:	66060104 	strvs	r0, [r6], -r4, lsl #2
    12e8:	03062805 	movweq	r2, #26629	; 0x6805
    12ec:	05827d99 	streq	r7, [r2, #3481]	; 0xd99
    12f0:	02e70301 	rsceq	r0, r7, #67108864	; 0x4000000
    12f4:	024aba66 	subeq	fp, sl, #417792	; 0x66000
    12f8:	0101000a 	tsteq	r1, sl
    12fc:	17050304 	strne	r0, [r5, -r4, lsl #6]
    1300:	30020500 	andcc	r0, r2, r0, lsl #10
    1304:	030000ab 	movweq	r0, #171	; 0xab
    1308:	0d050121 	stfeqs	f0, [r5, #-132]	; 0xffffff7c
    130c:	4a0905a0 	bmi	242994 <_bss_end+0x230ce4>
    1310:	054b1505 	strbeq	r1, [fp, #-1285]	; 0xfffffafb
    1314:	11054c1c 	tstne	r5, ip, lsl ip
    1318:	4a1a054a 	bmi	682848 <_bss_end+0x670b98>
    131c:	05661c05 	strbeq	r1, [r6, #-3077]!	; 0xfffff3fb
    1320:	0505a011 	streq	sl, [r5, #-17]	; 0xffffffef
    1324:	0008022f 	andeq	r0, r8, pc, lsr #4
    1328:	03040101 	movweq	r0, #16641	; 0x4101
    132c:	05001705 	streq	r1, [r0, #-1797]	; 0xfffff8fb
    1330:	00aba002 	adceq	sl, fp, r2
    1334:	01210300 			; <UNDEFINED> instruction: 0x01210300
    1338:	05a00d05 	streq	r0, [r0, #3333]!	; 0xd05
    133c:	15054a09 	strne	r4, [r5, #-2569]	; 0xfffff5f7
    1340:	4c1c054b 	cfldr32mi	mvfx0, [ip], {75}	; 0x4b
    1344:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    1348:	1c054a1a 			; <UNDEFINED> instruction: 0x1c054a1a
    134c:	a0110566 	andsge	r0, r1, r6, ror #10
    1350:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    1354:	01010008 	tsteq	r1, r8
    1358:	17050304 	strne	r0, [r5, -r4, lsl #6]
    135c:	10020500 	andne	r0, r2, r0, lsl #10
    1360:	030000ac 	movweq	r0, #172	; 0xac
    1364:	0d050121 	stfeqs	f0, [r5, #-132]	; 0xffffff7c
    1368:	4a0905a0 	bmi	2429f0 <_bss_end+0x230d40>
    136c:	054b1505 	strbeq	r1, [fp, #-1285]	; 0xfffffafb
    1370:	1a054c11 	bne	1543bc <_bss_end+0x14270c>
    1374:	661e054a 	ldrvs	r0, [lr], -sl, asr #10
    1378:	054a1c05 	strbeq	r1, [sl, #-3077]	; 0xfffff3fb
    137c:	05058411 	streq	r8, [r5, #-1041]	; 0xfffffbef
    1380:	0008022f 	andeq	r0, r8, pc, lsr #4
    1384:	020b0101 	andeq	r0, fp, #1073741824	; 0x40000000
    1388:	00030000 	andeq	r0, r3, r0
    138c:	00000154 	andeq	r0, r0, r4, asr r1
    1390:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1394:	0101000d 	tsteq	r1, sp
    1398:	00000101 	andeq	r0, r0, r1, lsl #2
    139c:	00000100 	andeq	r0, r0, r0, lsl #2
    13a0:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    13a4:	2f632f74 	svccs	0x00632f74
    13a8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    13ac:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    13b0:	442f6162 	strtmi	r6, [pc], #-354	; 13b8 <CPSR_IRQ_INHIBIT+0x1338>
    13b4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    13b8:	73746e65 	cmnvc	r4, #1616	; 0x650
    13bc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    13c0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    13c4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    13c8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    13cc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    13d0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    13d4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    13d8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    13dc:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    13e0:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    13e4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    13e8:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    13ec:	2f632f74 	svccs	0x00632f74
    13f0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    13f4:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    13f8:	442f6162 	strtmi	r6, [pc], #-354	; 1400 <CPSR_IRQ_INHIBIT+0x1380>
    13fc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1400:	73746e65 	cmnvc	r4, #1616	; 0x650
    1404:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1408:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    140c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1410:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1414:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1418:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    141c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1420:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1424:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1428:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    142c:	616f622f 	cmnvs	pc, pc, lsr #4
    1430:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    1434:	2f306970 	svccs	0x00306970
    1438:	006c6168 	rsbeq	r6, ip, r8, ror #2
    143c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1440:	552f632f 	strpl	r6, [pc, #-815]!	; 1119 <CPSR_IRQ_INHIBIT+0x1099>
    1444:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1448:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    144c:	6f442f61 	svcvs	0x00442f61
    1450:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1454:	2f73746e 	svccs	0x0073746e
    1458:	6f72655a 	svcvs	0x0072655a
    145c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1460:	6178652f 	cmnvs	r8, pc, lsr #10
    1464:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1468:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    146c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1470:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1474:	2f6c656e 	svccs	0x006c656e
    1478:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    147c:	2f656475 	svccs	0x00656475
    1480:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1484:	00737265 	rsbseq	r7, r3, r5, ror #4
    1488:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
    148c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1490:	70736964 	rsbsvc	r6, r3, r4, ror #18
    1494:	2e79616c 	rpwcsez	f6, f1, #4.0
    1498:	00707063 	rsbseq	r7, r0, r3, rrx
    149c:	69000001 	stmdbvs	r0, {r0}
    14a0:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
    14a4:	00682e66 	rsbeq	r2, r8, r6, ror #28
    14a8:	70000002 	andvc	r0, r0, r2
    14ac:	70697265 	rsbvc	r7, r9, r5, ror #4
    14b0:	61726568 	cmnvs	r2, r8, ror #10
    14b4:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    14b8:	00000200 	andeq	r0, r0, r0, lsl #4
    14bc:	66696873 			; <UNDEFINED> instruction: 0x66696873
    14c0:	67657274 			; <UNDEFINED> instruction: 0x67657274
    14c4:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    14c8:	00682e72 	rsbeq	r2, r8, r2, ror lr
    14cc:	73000003 	movwvc	r0, #3
    14d0:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    14d4:	6964746e 	stmdbvs	r4!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    14d8:	616c7073 	smcvs	50947	; 0xc703
    14dc:	00682e79 	rsbeq	r2, r8, r9, ror lr
    14e0:	00000003 	andeq	r0, r0, r3
    14e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    14e8:	00ac7c02 	adceq	r7, ip, r2, lsl #24
    14ec:	00fb0300 	rscseq	r0, fp, r0, lsl #6
    14f0:	840f0501 	strhi	r0, [pc], #-1281	; 14f8 <CPSR_IRQ_INHIBIT+0x1478>
    14f4:	a1bd0105 			; <UNDEFINED> instruction: 0xa1bd0105
    14f8:	05830905 	streq	r0, [r3, #2309]	; 0x905
    14fc:	10054a05 	andne	r4, r5, r5, lsl #20
    1500:	4c1e054b 	cfldr32mi	mvfx0, [lr], {75}	; 0x4b
    1504:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    1508:	10054a05 	andne	r4, r5, r5, lsl #20
    150c:	4c0d054b 	cfstr32mi	mvfx0, [sp], {75}	; 0x4b
    1510:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
    1514:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    1518:	0905830a 	stmdbeq	r5, {r1, r3, r8, r9, pc}
    151c:	4a05054a 	bmi	142a4c <_bss_end+0x130d9c>
    1520:	054d1a05 	strbeq	r1, [sp, #-2565]	; 0xfffff5fb
    1524:	09054c0d 	stmdbeq	r5, {r0, r2, r3, sl, fp, lr}
    1528:	3301057e 	movwcc	r0, #5502	; 0x157e
    152c:	830c0569 	movwhi	r0, #50537	; 0xc569
    1530:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
    1534:	05bb0a05 	ldreq	r0, [fp, #2565]!	; 0xa05
    1538:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
    153c:	4d0d054a 	cfstr32mi	mvfx0, [sp, #-296]	; 0xfffffed8
    1540:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    1544:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1548:	12056601 	andne	r6, r5, #1048576	; 0x100000
    154c:	01040200 	mrseq	r0, R12_usr
    1550:	4e44052e 	cdpmi	5, 4, cr0, cr4, cr14, {1}
    1554:	052e4805 	streq	r4, [lr, #-2053]!	; 0xfffff7fb
    1558:	1d052e4c 	stcne	14, cr2, [r5, #-304]	; 0xfffffed0
    155c:	0309054a 	movweq	r0, #38218	; 0x954a
    1560:	0550ba77 	ldrbeq	fp, [r0, #-2679]	; 0xfffff589
    1564:	05853201 	streq	r3, [r5, #513]	; 0x201
    1568:	0905830a 	stmdbeq	r5, {r1, r3, r8, r9, pc}
    156c:	4a05054a 	bmi	142a9c <_bss_end+0x130dec>
    1570:	054b1005 	strbeq	r1, [fp, #-5]
    1574:	01054c0c 	tsteq	r5, ip, lsl #24
    1578:	009e824b 	addseq	r8, lr, fp, asr #4
    157c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1580:	06120566 	ldreq	r0, [r2], -r6, ror #10
    1584:	827ecf03 	rsbshi	ip, lr, #3, 30
    1588:	b1030105 	tstlt	r3, r5, lsl #2
    158c:	4a9e4a01 	bmi	fe793d98 <_bss_end+0xfe7820e8>
    1590:	01000a02 	tsteq	r0, r2, lsl #20
    1594:	00028c01 	andeq	r8, r2, r1, lsl #24
    1598:	49000300 	stmdbmi	r0, {r8, r9}
    159c:	02000001 	andeq	r0, r0, #1
    15a0:	0d0efb01 	vstreq	d15, [lr, #-4]
    15a4:	01010100 	mrseq	r0, (UNDEF: 17)
    15a8:	00000001 	andeq	r0, r0, r1
    15ac:	01000001 	tsteq	r0, r1
    15b0:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    15b4:	552f632f 	strpl	r6, [pc, #-815]!	; 128d <CPSR_IRQ_INHIBIT+0x120d>
    15b8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    15bc:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    15c0:	6f442f61 	svcvs	0x00442f61
    15c4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    15c8:	2f73746e 	svccs	0x0073746e
    15cc:	6f72655a 	svcvs	0x0072655a
    15d0:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    15d4:	6178652f 	cmnvs	r8, pc, lsr #10
    15d8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    15dc:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    15e0:	4332492d 	teqmi	r2, #737280	; 0xb4000
    15e4:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    15e8:	2f6c656e 	svccs	0x006c656e
    15ec:	2f637273 	svccs	0x00637273
    15f0:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    15f4:	00737265 	rsbseq	r7, r3, r5, ror #4
    15f8:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    15fc:	552f632f 	strpl	r6, [pc, #-815]!	; 12d5 <CPSR_IRQ_INHIBIT+0x1255>
    1600:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1604:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1608:	6f442f61 	svcvs	0x00442f61
    160c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1610:	2f73746e 	svccs	0x0073746e
    1614:	6f72655a 	svcvs	0x0072655a
    1618:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    161c:	6178652f 	cmnvs	r8, pc, lsr #10
    1620:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1624:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1628:	4332492d 	teqmi	r2, #737280	; 0xb4000
    162c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1630:	2f6c656e 	svccs	0x006c656e
    1634:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1638:	2f656475 	svccs	0x00656475
    163c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    1640:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    1644:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    1648:	2f006c61 	svccs	0x00006c61
    164c:	2f746e6d 	svccs	0x00746e6d
    1650:	73552f63 	cmpvc	r5, #396	; 0x18c
    1654:	2f737265 	svccs	0x00737265
    1658:	6162754b 	cmnvs	r2, fp, asr #10
    165c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1660:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1664:	5a2f7374 	bpl	bde43c <_bss_end+0xbcc78c>
    1668:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 14dc <CPSR_IRQ_INHIBIT+0x145c>
    166c:	2f657461 	svccs	0x00657461
    1670:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1674:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1678:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    167c:	2f433249 	svccs	0x00433249
    1680:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1684:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1688:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    168c:	642f6564 	strtvs	r6, [pc], #-1380	; 1694 <CPSR_IRQ_INHIBIT+0x1614>
    1690:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1694:	00007372 	andeq	r7, r0, r2, ror r3
    1698:	66696873 			; <UNDEFINED> instruction: 0x66696873
    169c:	67657274 			; <UNDEFINED> instruction: 0x67657274
    16a0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    16a4:	70632e72 	rsbvc	r2, r3, r2, ror lr
    16a8:	00010070 	andeq	r0, r1, r0, ror r0
    16ac:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    16b0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    16b4:	00020068 	andeq	r0, r2, r8, rrx
    16b8:	72657000 	rsbvc	r7, r5, #0
    16bc:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    16c0:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    16c4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    16c8:	70670000 	rsbvc	r0, r7, r0
    16cc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    16d0:	00000300 	andeq	r0, r0, r0, lsl #6
    16d4:	66696873 			; <UNDEFINED> instruction: 0x66696873
    16d8:	67657274 			; <UNDEFINED> instruction: 0x67657274
    16dc:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    16e0:	00682e72 	rsbeq	r2, r8, r2, ror lr
    16e4:	00000003 	andeq	r0, r0, r3
    16e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    16ec:	00aee002 	adceq	lr, lr, r2
    16f0:	16051800 	strne	r1, [r5], -r0, lsl #16
    16f4:	080105d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl}
    16f8:	0905a123 	stmdbeq	r5, {r0, r1, r5, r8, sp, pc}
    16fc:	4a050583 	bmi	142d10 <_bss_end+0x131060>
    1700:	054b1005 	strbeq	r1, [fp, #-5]
    1704:	09054e1b 	stmdbeq	r5, {r0, r1, r3, r4, r9, sl, fp, lr}
    1708:	4a0505d6 	bmi	142e68 <_bss_end+0x1311b8>
    170c:	054b1005 	strbeq	r1, [fp, #-5]
    1710:	09054c1b 	stmdbeq	r5, {r0, r1, r3, r4, sl, fp, lr}
    1714:	4a0505d6 	bmi	142e74 <_bss_end+0x1311c4>
    1718:	054c1705 	strbeq	r1, [ip, #-1797]	; 0xfffff8fb
    171c:	1b05bb10 	blne	170364 <_bss_end+0x15e6b4>
    1720:	d609054d 	strle	r0, [r9], -sp, asr #10
    1724:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1728:	05bb4c17 	ldreq	r4, [fp, #3095]!	; 0xc17
    172c:	1c05bb10 			; <UNDEFINED> instruction: 0x1c05bb10
    1730:	05bbbb4e 	ldreq	fp, [fp, #2894]!	; 0xb4e
    1734:	0c05bc0d 	stceq	12, cr11, [r5], {13}
    1738:	2f010568 	svccs	0x00010568
    173c:	830a0585 	movwhi	r0, #42373	; 0xa585
    1740:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1744:	1c054a05 			; <UNDEFINED> instruction: 0x1c054a05
    1748:	05bbbb4e 	ldreq	fp, [fp, #2894]!	; 0xb4e
    174c:	bbbbbd13 	bllt	feef0ba0 <_bss_end+0xfeedeef0>
    1750:	05bc0d05 	ldreq	r0, [ip, #3333]!	; 0xd05
    1754:	82740309 	rsbshi	r0, r4, #603979776	; 0x24000000
    1758:	0d030105 	stfeqs	f0, [r3, #-20]	; 0xffffffec
    175c:	0c05692e 			; <UNDEFINED> instruction: 0x0c05692e
    1760:	4b010583 	blmi	42d74 <_bss_end+0x310c4>
    1764:	bb0a0585 	bllt	282d80 <_bss_end+0x2710d0>
    1768:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    176c:	15054a05 	strne	r4, [r5, #-2565]	; 0xfffff5fb
    1770:	05bcbd50 	ldreq	fp, [ip, #3408]!	; 0xd50
    1774:	1305bd0c 	movwne	fp, #23820	; 0x5d0c
    1778:	03040200 	movweq	r0, #16896	; 0x4200
    177c:	0005054a 	andeq	r0, r5, sl, asr #10
    1780:	d6020402 	strle	r0, [r2], -r2, lsl #8
    1784:	05861505 	streq	r1, [r6, #1285]	; 0x505
    1788:	1305bd0c 	movwne	fp, #23820	; 0x5d0c
    178c:	03040200 	movweq	r0, #16896	; 0x4200
    1790:	0005054a 	andeq	r0, r5, sl, asr #10
    1794:	d6020402 	strle	r0, [r2], -r2, lsl #8
    1798:	05861505 	streq	r1, [r6, #1285]	; 0x505
    179c:	d6680309 	strbtle	r0, [r8], -r9, lsl #6
    17a0:	19030105 	stmdbne	r3, {r0, r2, r8}
    17a4:	0a05692e 	beq	15bc64 <_bss_end+0x149fb4>
    17a8:	4a0905bb 	bmi	242e9c <_bss_end+0x2311ec>
    17ac:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    17b0:	0e055015 	mcreq	0, 0, r5, cr5, cr5, {0}
    17b4:	001705bd 			; <UNDEFINED> instruction: 0x001705bd
    17b8:	4a010402 	bmi	427c8 <_bss_end+0x30b18>
    17bc:	05681905 	strbeq	r1, [r8, #-2309]!	; 0xfffff6fb
    17c0:	2c054a27 			; <UNDEFINED> instruction: 0x2c054a27
    17c4:	4a32052e 	bmi	c82c84 <_bss_end+0xc70fd4>
    17c8:	d72e1905 	strle	r1, [lr, -r5, lsl #18]!
    17cc:	05bc1005 	ldreq	r1, [ip, #5]!
    17d0:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    17d4:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    17d8:	02040200 	andeq	r0, r4, #0, 4
    17dc:	851905d6 	ldrhi	r0, [r9, #-1494]	; 0xfffffa2a
    17e0:	05bc1005 	ldreq	r1, [ip, #5]!
    17e4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    17e8:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    17ec:	02040200 	andeq	r0, r4, #0, 4
    17f0:	000505d6 	ldrdeq	r0, [r5], -r6
    17f4:	03020402 	movweq	r0, #9218	; 0x2402
    17f8:	15058276 	strne	r8, [r5, #-630]	; 0xfffffd8a
    17fc:	05820f03 	streq	r0, [r2, #3843]	; 0xf03
    1800:	d6690309 	strbtle	r0, [r9], -r9, lsl #6
    1804:	18030105 	stmdane	r3, {r0, r2, r8}
    1808:	009e662e 	addseq	r6, lr, lr, lsr #12
    180c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1810:	06280566 	strteq	r0, [r8], -r6, ror #10
    1814:	827f8503 	rsbshi	r8, pc, #12582912	; 0xc00000
    1818:	fb030105 	blx	c1c36 <_bss_end+0xaff86>
    181c:	4a9e9e00 	bmi	fe7a9024 <_bss_end+0xfe797374>
    1820:	01000a02 	tsteq	r0, r2, lsl #20
    1824:	0001cf01 	andeq	ip, r1, r1, lsl #30
    1828:	2f000300 	svccs	0x00000300
    182c:	02000001 	andeq	r0, r0, #1
    1830:	0d0efb01 	vstreq	d15, [lr, #-4]
    1834:	01010100 	mrseq	r0, (UNDEF: 17)
    1838:	00000001 	andeq	r0, r0, r1
    183c:	01000001 	tsteq	r0, r1
    1840:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1844:	552f632f 	strpl	r6, [pc, #-815]!	; 151d <CPSR_IRQ_INHIBIT+0x149d>
    1848:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    184c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1850:	6f442f61 	svcvs	0x00442f61
    1854:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1858:	2f73746e 	svccs	0x0073746e
    185c:	6f72655a 	svcvs	0x0072655a
    1860:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1864:	6178652f 	cmnvs	r8, pc, lsr #10
    1868:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    186c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1870:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1874:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1878:	2f6c656e 	svccs	0x006c656e
    187c:	2f637273 	svccs	0x00637273
    1880:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1884:	00737265 	rsbseq	r7, r3, r5, ror #4
    1888:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    188c:	552f632f 	strpl	r6, [pc, #-815]!	; 1565 <CPSR_IRQ_INHIBIT+0x14e5>
    1890:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1894:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1898:	6f442f61 	svcvs	0x00442f61
    189c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    18a0:	2f73746e 	svccs	0x0073746e
    18a4:	6f72655a 	svcvs	0x0072655a
    18a8:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    18ac:	6178652f 	cmnvs	r8, pc, lsr #10
    18b0:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    18b4:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    18b8:	4332492d 	teqmi	r2, #737280	; 0xb4000
    18bc:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    18c0:	2f6c656e 	svccs	0x006c656e
    18c4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    18c8:	2f656475 	svccs	0x00656475
    18cc:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    18d0:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    18d4:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    18d8:	2f006c61 	svccs	0x00006c61
    18dc:	2f746e6d 	svccs	0x00746e6d
    18e0:	73552f63 	cmpvc	r5, #396	; 0x18c
    18e4:	2f737265 	svccs	0x00737265
    18e8:	6162754b 	cmnvs	r2, fp, asr #10
    18ec:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    18f0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    18f4:	5a2f7374 	bpl	bde6cc <_bss_end+0xbcca1c>
    18f8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 176c <CPSR_IRQ_INHIBIT+0x16ec>
    18fc:	2f657461 	svccs	0x00657461
    1900:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1904:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1908:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    190c:	2f433249 	svccs	0x00433249
    1910:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1914:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1918:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    191c:	642f6564 	strtvs	r6, [pc], #-1380	; 1924 <CPSR_IRQ_INHIBIT+0x18a4>
    1920:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1924:	00007372 	andeq	r7, r0, r2, ror r3
    1928:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    192c:	70632e72 	rsbvc	r2, r3, r2, ror lr
    1930:	00010070 	andeq	r0, r1, r0, ror r0
    1934:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    1938:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    193c:	00020068 	andeq	r0, r2, r8, rrx
    1940:	72657000 	rsbvc	r7, r5, #0
    1944:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    1948:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    194c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1950:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    1954:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    1958:	00030068 	andeq	r0, r3, r8, rrx
    195c:	01050000 	mrseq	r0, (UNDEF: 5)
    1960:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
    1964:	030000b4 	movweq	r0, #180	; 0xb4
    1968:	0f050119 	svceq	0x00050119
    196c:	2f14059f 	svccs	0x0014059f
    1970:	a1a10105 			; <UNDEFINED> instruction: 0xa1a10105
    1974:	059f0c05 	ldreq	r0, [pc, #3077]	; 2581 <CPSR_IRQ_INHIBIT+0x2501>
    1978:	36054a18 			; <UNDEFINED> instruction: 0x36054a18
    197c:	4b01052e 	blmi	42e3c <_bss_end+0x3118c>
    1980:	d71e0585 	ldrle	r0, [lr, -r5, lsl #11]
    1984:	05822005 	streq	r2, [r2, #5]
    1988:	1b054d15 	blne	154de4 <_bss_end+0x143134>
    198c:	67170567 	ldrvs	r0, [r7, -r7, ror #10]
    1990:	05671505 	strbeq	r1, [r7, #-1285]!	; 0xfffffafb
    1994:	46056613 			; <UNDEFINED> instruction: 0x46056613
    1998:	2e2105d8 	mcrcs	5, 1, r0, cr1, cr8, {6}
    199c:	05822505 	streq	r2, [r2, #1285]	; 0x505
    19a0:	05302e23 	ldreq	r2, [r0, #-3619]!	; 0xfffff1dd
    19a4:	0f058225 	svceq	0x00058225
    19a8:	6701054c 	strvs	r0, [r1, -ip, asr #10]
    19ac:	836f0569 	cmnhi	pc, #440401920	; 0x1a400000
    19b0:	05841b05 	streq	r1, [r4, #2821]	; 0xb05
    19b4:	01058317 	tsteq	r5, r7, lsl r3
    19b8:	23056983 	movwcs	r6, #22915	; 0x5983
    19bc:	82250583 	eorhi	r0, r5, #549453824	; 0x20c00000
    19c0:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    19c4:	09054a05 	stmdbeq	r5, {r0, r2, r9, fp, lr}
    19c8:	4a12054b 	bmi	482efc <_bss_end+0x47124c>
    19cc:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    19d0:	05832b05 	streq	r2, [r3, #2821]	; 0xb05
    19d4:	2b058210 	blcs	16221c <_bss_end+0x15056c>
    19d8:	8301052e 	movwhi	r0, #5422	; 0x152e
    19dc:	02009e66 	andeq	r9, r0, #1632	; 0x660
    19e0:	66060104 	strvs	r0, [r6], -r4, lsl #2
    19e4:	03061e05 	movweq	r1, #28165	; 0x6e05
    19e8:	05827fba 	streq	r7, [r2, #4026]	; 0xfba
    19ec:	00c60301 	sbceq	r0, r6, r1, lsl #6
    19f0:	024aba66 	subeq	fp, sl, #417792	; 0x66000
    19f4:	0101000a 	tsteq	r1, sl
    19f8:	000001ea 	andeq	r0, r0, sl, ror #3
    19fc:	012d0003 			; <UNDEFINED> instruction: 0x012d0003
    1a00:	01020000 	mrseq	r0, (UNDEF: 2)
    1a04:	000d0efb 	strdeq	r0, [sp], -fp
    1a08:	01010101 	tsteq	r1, r1, lsl #2
    1a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a10:	2f010000 	svccs	0x00010000
    1a14:	2f746e6d 	svccs	0x00746e6d
    1a18:	73552f63 	cmpvc	r5, #396	; 0x18c
    1a1c:	2f737265 	svccs	0x00737265
    1a20:	6162754b 	cmnvs	r2, fp, asr #10
    1a24:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1a28:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1a2c:	5a2f7374 	bpl	bde804 <_bss_end+0xbccb54>
    1a30:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 18a4 <CPSR_IRQ_INHIBIT+0x1824>
    1a34:	2f657461 	svccs	0x00657461
    1a38:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1a3c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1a40:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1a44:	2f433249 	svccs	0x00433249
    1a48:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1a4c:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    1a50:	642f6372 	strtvs	r6, [pc], #-882	; 1a58 <CPSR_IRQ_INHIBIT+0x19d8>
    1a54:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1a58:	2f007372 	svccs	0x00007372
    1a5c:	2f746e6d 	svccs	0x00746e6d
    1a60:	73552f63 	cmpvc	r5, #396	; 0x18c
    1a64:	2f737265 	svccs	0x00737265
    1a68:	6162754b 	cmnvs	r2, fp, asr #10
    1a6c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1a70:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1a74:	5a2f7374 	bpl	bde84c <_bss_end+0xbccb9c>
    1a78:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 18ec <CPSR_IRQ_INHIBIT+0x186c>
    1a7c:	2f657461 	svccs	0x00657461
    1a80:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1a84:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1a88:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1a8c:	2f433249 	svccs	0x00433249
    1a90:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1a94:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1a98:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1a9c:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    1aa0:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    1aa4:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    1aa8:	61682f30 	cmnvs	r8, r0, lsr pc
    1aac:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 1904 <CPSR_IRQ_INHIBIT+0x1884>
    1ab0:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1ab4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1ab8:	4b2f7372 	blmi	bde888 <_bss_end+0xbccbd8>
    1abc:	2f616275 	svccs	0x00616275
    1ac0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1ac4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1ac8:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1acc:	614d6f72 	hvcvs	55026	; 0xd6f2
    1ad0:	652f6574 	strvs	r6, [pc, #-1396]!	; 1564 <CPSR_IRQ_INHIBIT+0x14e4>
    1ad4:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1ad8:	2f73656c 	svccs	0x0073656c
    1adc:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1ae0:	6b2f4332 	blvs	bd27b0 <_bss_end+0xbc0b00>
    1ae4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1ae8:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1aec:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1af0:	72642f65 	rsbvc	r2, r4, #404	; 0x194
    1af4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1af8:	74000073 	strvc	r0, [r0], #-115	; 0xffffff8d
    1afc:	2e676e72 	mcrcs	14, 3, r6, cr7, cr2, {3}
    1b00:	00707063 	rsbseq	r7, r0, r3, rrx
    1b04:	70000001 	andvc	r0, r0, r1
    1b08:	70697265 	rsbvc	r7, r9, r5, ror #4
    1b0c:	61726568 	cmnvs	r2, r8, ror #10
    1b10:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    1b14:	00000200 	andeq	r0, r0, r0, lsl #4
    1b18:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    1b1c:	0300682e 	movweq	r6, #2094	; 0x82e
    1b20:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1b24:	66656474 			; <UNDEFINED> instruction: 0x66656474
    1b28:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1b2c:	05000000 	streq	r0, [r0, #-0]
    1b30:	02050001 	andeq	r0, r5, #1
    1b34:	0000b734 	andeq	fp, r0, r4, lsr r7
    1b38:	a00c0519 	andge	r0, ip, r9, lsl r5
    1b3c:	a1bd0105 			; <UNDEFINED> instruction: 0xa1bd0105
    1b40:	05bd0905 	ldreq	r0, [sp, #2309]!	; 0x905
    1b44:	11054a05 	tstne	r5, r5, lsl #20
    1b48:	01040200 	mrseq	r0, R12_usr
    1b4c:	6710054a 	ldrvs	r0, [r0, -sl, asr #10]
    1b50:	054c0505 	strbeq	r0, [ip, #-1285]	; 0xfffffafb
    1b54:	05054a0c 	streq	r4, [r5, #-2572]	; 0xfffff5f4
    1b58:	4a3c0568 	bmi	f03100 <_bss_end+0xef1450>
    1b5c:	052e3e05 	streq	r3, [lr, #-3589]!	; 0xfffff1fb
    1b60:	3e054b05 	vmlacc.f64	d4, d5, d5
    1b64:	2e40054a 	cdpcs	5, 4, cr0, cr0, cr10, {2}
    1b68:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1b6c:	40054a3e 	andmi	r4, r5, lr, lsr sl
    1b70:	4c05052e 	cfstr32mi	mvfx0, [r5], {46}	; 0x2e
    1b74:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
    1b78:	3f052e05 	svccc	0x00052e05
    1b7c:	4d0e054a 	cfstr32mi	mvfx0, [lr, #-296]	; 0xfffffed8
    1b80:	054a4505 	strbeq	r4, [sl, #-1285]	; 0xfffffafb
    1b84:	0c054a47 			; <UNDEFINED> instruction: 0x0c054a47
    1b88:	ba05052e 	blt	143048 <_bss_end+0x131398>
    1b8c:	05310c05 	ldreq	r0, [r1, #-3077]!	; 0xfffff3fb
    1b90:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    1b94:	0505830a 	streq	r8, [r5, #-778]	; 0xfffffcf6
    1b98:	0c054d4a 	stceq	13, cr4, [r5], {74}	; 0x4a
    1b9c:	6809054a 	stmdavs	r9, {r1, r3, r6, r8, sl}
    1ba0:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1ba4:	43054b09 	movwmi	r4, #23305	; 0x5b09
    1ba8:	6109054a 	tstvs	r9, sl, asr #10
    1bac:	69340105 	ldmdbvs	r4!, {r0, r2, r8}
    1bb0:	05830d05 	streq	r0, [r3, #3333]	; 0xd05
    1bb4:	01054a18 	tsteq	r5, r8, lsl sl
    1bb8:	09058583 	stmdbeq	r5, {r0, r1, r7, r8, sl, pc}
    1bbc:	4a050583 	bmi	1431d0 <_bss_end+0x131520>
    1bc0:	054b1005 	strbeq	r1, [fp, #-5]
    1bc4:	4105500c 	tstmi	r5, ip
    1bc8:	4b01054a 	blmi	430f8 <_bss_end+0x31448>
    1bcc:	02009e82 	andeq	r9, r0, #2080	; 0x820
    1bd0:	66060104 	strvs	r0, [r6], -r4, lsl #2
    1bd4:	03061b05 	movweq	r1, #27397	; 0x6b05
    1bd8:	01058245 	tsteq	r5, r5, asr #4
    1bdc:	ba663b03 	blt	19907f0 <_bss_end+0x197eb40>
    1be0:	000a024a 	andeq	r0, sl, sl, asr #4
    1be4:	04ca0101 	strbeq	r0, [sl], #257	; 0x101
    1be8:	00030000 	andeq	r0, r3, r0
    1bec:	000001d3 	ldrdeq	r0, [r0], -r3
    1bf0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1bf4:	0101000d 	tsteq	r1, sp
    1bf8:	00000101 	andeq	r0, r0, r1, lsl #2
    1bfc:	00000100 	andeq	r0, r0, r0, lsl #2
    1c00:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    1c04:	2f632f74 	svccs	0x00632f74
    1c08:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1c0c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1c10:	442f6162 	strtmi	r6, [pc], #-354	; 1c18 <CPSR_IRQ_INHIBIT+0x1b98>
    1c14:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1c18:	73746e65 	cmnvc	r4, #1616	; 0x650
    1c1c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1c20:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1c24:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1c28:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1c2c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1c30:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1c34:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1c38:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1c3c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1c40:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1c44:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    1c48:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1c4c:	552f632f 	strpl	r6, [pc, #-815]!	; 1925 <CPSR_IRQ_INHIBIT+0x18a5>
    1c50:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1c54:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1c58:	6f442f61 	svcvs	0x00442f61
    1c5c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1c60:	2f73746e 	svccs	0x0073746e
    1c64:	6f72655a 	svcvs	0x0072655a
    1c68:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1c6c:	6178652f 	cmnvs	r8, pc, lsr #10
    1c70:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1c74:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1c78:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1c7c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1c80:	2f6c656e 	svccs	0x006c656e
    1c84:	2f637273 	svccs	0x00637273
    1c88:	2f007366 	svccs	0x00007366
    1c8c:	2f746e6d 	svccs	0x00746e6d
    1c90:	73552f63 	cmpvc	r5, #396	; 0x18c
    1c94:	2f737265 	svccs	0x00737265
    1c98:	6162754b 	cmnvs	r2, fp, asr #10
    1c9c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1ca0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1ca4:	5a2f7374 	bpl	bdea7c <_bss_end+0xbccdcc>
    1ca8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1b1c <CPSR_IRQ_INHIBIT+0x1a9c>
    1cac:	2f657461 	svccs	0x00657461
    1cb0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1cb4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1cb8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1cbc:	2f433249 	svccs	0x00433249
    1cc0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1cc4:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1cc8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1ccc:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 1b44 <CPSR_IRQ_INHIBIT+0x1ac4>
    1cd0:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    1cd4:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 1af8 <CPSR_IRQ_INHIBIT+0x1a78>
    1cd8:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1cdc:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1ce0:	4b2f7372 	blmi	bdeab0 <_bss_end+0xbcce00>
    1ce4:	2f616275 	svccs	0x00616275
    1ce8:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1cec:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1cf0:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1cf4:	614d6f72 	hvcvs	55026	; 0xd6f2
    1cf8:	652f6574 	strvs	r6, [pc, #-1396]!	; 178c <CPSR_IRQ_INHIBIT+0x170c>
    1cfc:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1d00:	2f73656c 	svccs	0x0073656c
    1d04:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1d08:	6b2f4332 	blvs	bd29d8 <_bss_end+0xbc0d28>
    1d0c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1d10:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1d14:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d18:	72642f65 	rsbvc	r2, r4, #404	; 0x194
    1d1c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1d20:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1b5c <CPSR_IRQ_INHIBIT+0x1adc>
    1d24:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1d28:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1d2c:	4b2f7372 	blmi	bdeafc <_bss_end+0xbcce4c>
    1d30:	2f616275 	svccs	0x00616275
    1d34:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1d38:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1d3c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1d40:	614d6f72 	hvcvs	55026	; 0xd6f2
    1d44:	652f6574 	strvs	r6, [pc, #-1396]!	; 17d8 <CPSR_IRQ_INHIBIT+0x1758>
    1d48:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1d4c:	2f73656c 	svccs	0x0073656c
    1d50:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1d54:	6b2f4332 	blvs	bd2a24 <_bss_end+0xbc0d74>
    1d58:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1d5c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1d60:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d64:	6f622f65 	svcvs	0x00622f65
    1d68:	2f647261 	svccs	0x00647261
    1d6c:	30697072 	rsbcc	r7, r9, r2, ror r0
    1d70:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    1d74:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    1d78:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1d7c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1d80:	0100682e 	tsteq	r0, lr, lsr #16
    1d84:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    1d88:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1d8c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1d90:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    1d94:	00000200 	andeq	r0, r0, r0, lsl #4
    1d98:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1d9c:	685f6c65 	ldmdavs	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1da0:	2e706165 	rpwcssz	f6, f0, f5
    1da4:	00030068 	andeq	r0, r3, r8, rrx
    1da8:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    1dac:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    1db0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1db4:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1db8:	66656474 			; <UNDEFINED> instruction: 0x66656474
    1dbc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1dc0:	05000000 	streq	r0, [r0, #-0]
    1dc4:	0205000c 	andeq	r0, r5, #12
    1dc8:	0000c210 	andeq	ip, r0, r0, lsl r2
    1dcc:	0100cf03 	tsteq	r0, r3, lsl #30
    1dd0:	00160282 	andseq	r0, r6, r2, lsl #5
    1dd4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1dd8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1ddc:	00b9b402 	adcseq	fp, r9, r2, lsl #8
    1de0:	01090300 	mrseq	r0, (UNDEF: 57)
    1de4:	05821a05 	streq	r1, [r2, #2565]	; 0xa05
    1de8:	05cc0812 	strbeq	r0, [ip, #2066]	; 0x812
    1dec:	16056710 			; <UNDEFINED> instruction: 0x16056710
    1df0:	4a140567 	bmi	503394 <_bss_end+0x4f16e4>
    1df4:	054b1705 	strbeq	r1, [fp, #-1797]	; 0xfffff8fb
    1df8:	13056716 	movwne	r6, #22294	; 0x5716
    1dfc:	68180567 	ldmdavs	r8, {r0, r1, r2, r5, r6, r8, sl}
    1e00:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    1e04:	16054b18 			; <UNDEFINED> instruction: 0x16054b18
    1e08:	4a140567 	bmi	5033ac <_bss_end+0x4f16fc>
    1e0c:	054b1b05 	strbeq	r1, [fp, #-2821]	; 0xfffff4fb
    1e10:	1705671a 	smladne	r5, sl, r7, r6
    1e14:	4a0c0567 	bmi	3033b8 <_bss_end+0x2f1708>
    1e18:	05841805 	streq	r1, [r4, #2053]	; 0x805
    1e1c:	18052e16 	stmdane	r5, {r1, r2, r4, r9, sl, fp, sp}
    1e20:	6716054b 	ldrvs	r0, [r6, -fp, asr #10]
    1e24:	054a1405 	strbeq	r1, [sl, #-1029]	; 0xfffffbfb
    1e28:	1a054b1b 	bne	154a9c <_bss_end+0x142dec>
    1e2c:	67170567 	ldrvs	r0, [r7, -r7, ror #10]
    1e30:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1e34:	16058418 			; <UNDEFINED> instruction: 0x16058418
    1e38:	4b18052e 	blmi	6032f8 <_bss_end+0x5f1648>
    1e3c:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    1e40:	1a05671b 	bne	15bab4 <_bss_end+0x149e04>
    1e44:	67170567 	ldrvs	r0, [r7, -r7, ror #10]
    1e48:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1e4c:	05d98301 	ldrbeq	r8, [r9, #769]	; 0x301
    1e50:	12059f14 	andne	r9, r5, #20, 30	; 0x50
    1e54:	681c0568 	ldmdavs	ip, {r3, r5, r6, r8, sl}
    1e58:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    1e5c:	09059e3b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r9, sl, fp, ip, pc}
    1e60:	4b140582 	blmi	503470 <_bss_end+0x4f17c0>
    1e64:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
    1e68:	0c056105 	stfeqs	f6, [r5], {5}
    1e6c:	2f010536 	svccs	0x00010536
    1e70:	83110569 	tsthi	r1, #440401920	; 0x1a400000
    1e74:	056d0c05 	strbeq	r0, [sp, #-3077]!	; 0xfffff3fb
    1e78:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    1e7c:	15054a01 	strne	r4, [r5, #-2561]	; 0xfffff5ff
    1e80:	01040200 	mrseq	r0, R12_usr
    1e84:	0013052e 	andseq	r0, r3, lr, lsr #10
    1e88:	4a010402 	bmi	42e98 <_bss_end+0x311e8>
    1e8c:	054c1b05 	strbeq	r1, [ip, #-2821]	; 0xfffff4fb
    1e90:	1505f40f 	strne	pc, [r5, #-1039]	; 0xfffffbf1
    1e94:	82290568 	eorhi	r0, r9, #104, 10	; 0x1a000000
    1e98:	05823205 	streq	r3, [r2, #517]	; 0x205
    1e9c:	28056818 	stmdacs	r5, {r3, r4, fp, sp, lr}
    1ea0:	4c17054a 	cfldr32mi	mvfx0, [r7], {74}	; 0x4a
    1ea4:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    1ea8:	19054c14 	stmdbne	r5, {r2, r4, sl, fp, lr}
    1eac:	01040200 	mrseq	r0, R12_usr
    1eb0:	002b054a 	eoreq	r0, fp, sl, asr #10
    1eb4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1eb8:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    1ebc:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1ec0:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    1ec4:	2b052e02 	blcs	14d6d4 <_bss_end+0x13ba24>
    1ec8:	02040200 	andeq	r0, r4, #0, 4
    1ecc:	4c1b0566 	cfldr32mi	mvfx0, [fp], {102}	; 0x66
    1ed0:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
    1ed4:	2e056611 	mcrcs	6, 0, r6, cr5, cr1, {0}
    1ed8:	01040200 	mrseq	r0, R12_usr
    1edc:	002f054a 	eoreq	r0, pc, sl, asr #10
    1ee0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1ee4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    1ee8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    1eec:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1ef0:	25054d03 	strcs	r4, [r5, #-3331]	; 0xfffff2fd
    1ef4:	03040200 	movweq	r0, #16896	; 0x4200
    1ef8:	001c052e 	andseq	r0, ip, lr, lsr #10
    1efc:	66030402 	strvs	r0, [r3], -r2, lsl #8
    1f00:	02000d05 	andeq	r0, r0, #320	; 0x140
    1f04:	05990304 	ldreq	r0, [r9, #772]	; 0x304
    1f08:	16058a18 			; <UNDEFINED> instruction: 0x16058a18
    1f0c:	2e1305a0 	cfcvtd32cs	mvfx0, mvd3
    1f10:	05671805 	strbeq	r1, [r7, #-2053]!	; 0xfffff7fb
    1f14:	17054a0d 	strne	r4, [r5, -sp, lsl #20]
    1f18:	6919054c 	ldmdbvs	r9, {r2, r3, r6, r8, sl}
    1f1c:	05822f05 	streq	r2, [r2, #3845]	; 0xf05
    1f20:	27059e3a 	smladxcs	r5, sl, lr, r9
    1f24:	a00d0568 	andge	r0, sp, r8, ror #10
    1f28:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    1f2c:	29054b1d 	stmdbcs	r5, {r0, r2, r3, r4, r8, r9, fp, lr}
    1f30:	9e340582 	cfadd32ls	mvfx0, mvfx4, mvfx2
    1f34:	05873a05 	streq	r3, [r7, #2565]	; 0xa05
    1f38:	18056722 	stmdane	r5, {r1, r5, r8, r9, sl, sp, lr}
    1f3c:	8321052e 			; <UNDEFINED> instruction: 0x8321052e
    1f40:	05672305 	strbeq	r2, [r7, #-773]!	; 0xfffffcfb
    1f44:	26056725 	strcs	r6, [r5], -r5, lsr #14
    1f48:	67270567 	strvs	r0, [r7, -r7, ror #10]!
    1f4c:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    1f50:	16054b20 	strne	r4, [r5], -r0, lsr #22
    1f54:	4c1d0568 	cfldr32mi	mvfx0, [sp], {104}	; 0x68
    1f58:	82330567 	eorshi	r0, r3, #432013312	; 0x19c00000
    1f5c:	059e3b05 	ldreq	r3, [lr, #2821]	; 0xb05
    1f60:	66560309 	ldrbvs	r0, [r6], -r9, lsl #6
    1f64:	31031305 	tstcc	r3, r5, lsl #6
    1f68:	4a09052e 	bmi	243428 <_bss_end+0x231778>
    1f6c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    1f70:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    1f74:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1f78:	0e052e02 	cdpeq	14, 0, cr2, cr5, cr2, {0}
    1f7c:	02040200 	andeq	r0, r4, #0, 4
    1f80:	0022054d 	eoreq	r0, r2, sp, asr #10
    1f84:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    1f88:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    1f8c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1f90:	04020005 	streq	r0, [r2], #-5
    1f94:	7fbf0302 	svcvc	0x00bf0302
    1f98:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    1f9c:	058200c4 	streq	r0, [r2, #196]	; 0xc4
    1fa0:	8278030d 	rsbshi	r0, r8, #872415232	; 0x34000000
    1fa4:	09030105 	stmdbeq	r3, {r0, r2, r8}
    1fa8:	05cb082e 	strbeq	r0, [fp, #2094]	; 0x82e
    1fac:	2505bd11 	strcs	fp, [r5, #-3345]	; 0xfffff2ef
    1fb0:	822d0582 	eorhi	r0, sp, #545259520	; 0x20800000
    1fb4:	056a0b05 	strbeq	r0, [sl, #-2821]!	; 0xfffff4fb
    1fb8:	24054c14 	strcs	r4, [r5], #-3092	; 0xfffff3ec
    1fbc:	4c13054a 	cfldr32mi	mvfx0, [r3], {74}	; 0x4a
    1fc0:	054a1505 	strbeq	r1, [sl, #-1285]	; 0xfffffafb
    1fc4:	15054c10 	strne	r4, [r5, #-3088]	; 0xfffff3f0
    1fc8:	01040200 	mrseq	r0, R12_usr
    1fcc:	0027054a 	eoreq	r0, r7, sl, asr #10
    1fd0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1fd4:	02003005 	andeq	r3, r0, #5
    1fd8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1fdc:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1fe0:	27052e02 	strcs	r2, [r5, -r2, lsl #28]
    1fe4:	02040200 	andeq	r0, r4, #0, 4
    1fe8:	4c170566 	cfldr32mi	mvfx0, [r7], {102}	; 0x66
    1fec:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    1ff0:	2a05660d 	bcs	15b82c <_bss_end+0x149b7c>
    1ff4:	01040200 	mrseq	r0, R12_usr
    1ff8:	002b054a 	eoreq	r0, fp, sl, asr #10
    1ffc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2000:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    2004:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    2008:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    200c:	21054d03 	tstcs	r5, r3, lsl #26
    2010:	03040200 	movweq	r0, #16896	; 0x4200
    2014:	0018052e 	andseq	r0, r8, lr, lsr #10
    2018:	66030402 	strvs	r0, [r3], -r2, lsl #8
    201c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2020:	05990304 	ldreq	r0, [r9, #772]	; 0x304
    2024:	12058a14 	andne	r8, r5, #20, 20	; 0x14000
    2028:	2e0f05a0 	cfsh32cs	mvfx0, mvfx15, #-48
    202c:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    2030:	13054a09 	movwne	r4, #23049	; 0x5a09
    2034:	6923054c 	stmdbvs	r3!, {r2, r3, r6, r8, sl}
    2038:	059f0905 	ldreq	r0, [pc, #2309]	; 2945 <CPSR_IRQ_INHIBIT+0x28c5>
    203c:	16056712 			; <UNDEFINED> instruction: 0x16056712
    2040:	4a09054c 	bmi	243578 <_bss_end+0x2318c8>
    2044:	054c2905 	strbeq	r2, [ip, #-2309]	; 0xfffff6fb
    2048:	29054a35 	stmdbcs	r5, {r0, r2, r4, r5, r9, fp, lr}
    204c:	823505f2 	eorshi	r0, r5, #1015021568	; 0x3c800000
    2050:	05f25205 	ldrbeq	r5, [r2, #517]!	; 0x205
    2054:	52056646 	andpl	r6, r5, #73400320	; 0x4600000
    2058:	301c0582 	andscc	r0, ip, r2, lsl #11
    205c:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
    2060:	05054a0e 	streq	r4, [r5, #-2574]	; 0xfffff5f2
    2064:	054a6603 	strbeq	r6, [sl, #-1539]	; 0xfffff9fd
    2068:	2e1b030d 	cdpcs	3, 1, cr0, cr11, cr13, {0}
    206c:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    2070:	2f058227 	svccs	0x00058227
    2074:	690c0582 	stmdbvs	ip, {r1, r7, r8, sl}
    2078:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    207c:	f22f0104 	vrhadd.s32	d0, d15, d4
    2080:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    2084:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    2088:	d003060d 	andle	r0, r3, sp, lsl #12
    208c:	0105827e 	tsteq	r5, lr, ror r2
    2090:	4a01b003 	bmi	6e0a4 <_bss_end+0x5c3f4>
    2094:	0a024a9e 	beq	94b14 <_bss_end+0x82e64>
    2098:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    209c:	00080503 	andeq	r0, r8, r3, lsl #10
    20a0:	c24c0205 	subgt	r0, ip, #1342177280	; 0x50000000
    20a4:	1d030000 	stcne	0, cr0, [r3, #-0]
    20a8:	842a0501 	strthi	r0, [sl], #-1281	; 0xfffffaff
    20ac:	02830505 	addeq	r0, r3, #20971520	; 0x1400000
    20b0:	01010006 	tsteq	r1, r6
    20b4:	00000b8e 	andeq	r0, r0, lr, lsl #23
    20b8:	03520003 	cmpeq	r2, #3
    20bc:	01020000 	mrseq	r0, (UNDEF: 2)
    20c0:	000d0efb 	strdeq	r0, [sp], -fp
    20c4:	01010101 	tsteq	r1, r1, lsl #2
    20c8:	01000000 	mrseq	r0, (UNDEF: 0)
    20cc:	2f010000 	svccs	0x00010000
    20d0:	2f746e6d 	svccs	0x00746e6d
    20d4:	73552f63 	cmpvc	r5, #396	; 0x18c
    20d8:	2f737265 	svccs	0x00737265
    20dc:	6162754b 	cmnvs	r2, fp, asr #10
    20e0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    20e4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    20e8:	5a2f7374 	bpl	bdeec0 <_bss_end+0xbcd210>
    20ec:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1f60 <CPSR_IRQ_INHIBIT+0x1ee0>
    20f0:	2f657461 	svccs	0x00657461
    20f4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    20f8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    20fc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2100:	2f433249 	svccs	0x00433249
    2104:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2108:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    210c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2110:	662f6564 	strtvs	r6, [pc], -r4, ror #10
    2114:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1f50 <CPSR_IRQ_INHIBIT+0x1ed0>
    2118:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    211c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2120:	4b2f7372 	blmi	bdeef0 <_bss_end+0xbcd240>
    2124:	2f616275 	svccs	0x00616275
    2128:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    212c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2130:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2134:	614d6f72 	hvcvs	55026	; 0xd6f2
    2138:	652f6574 	strvs	r6, [pc, #-1396]!	; 1bcc <CPSR_IRQ_INHIBIT+0x1b4c>
    213c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2140:	2f73656c 	svccs	0x0073656c
    2144:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2148:	6b2f4332 	blvs	bd2e18 <_bss_end+0xbc1168>
    214c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2150:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2154:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2158:	656d2f65 	strbvs	r2, [sp, #-3941]!	; 0xfffff09b
    215c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2160:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2164:	2f632f74 	svccs	0x00632f74
    2168:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    216c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2170:	442f6162 	strtmi	r6, [pc], #-354	; 2178 <CPSR_IRQ_INHIBIT+0x20f8>
    2174:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2178:	73746e65 	cmnvc	r4, #1616	; 0x650
    217c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2180:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2184:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2188:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    218c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2190:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2194:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2198:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    219c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    21a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    21a4:	2f73662f 	svccs	0x0073662f
    21a8:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    21ac:	00737265 	rsbseq	r7, r3, r5, ror #4
    21b0:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    21b4:	552f632f 	strpl	r6, [pc, #-815]!	; 1e8d <CPSR_IRQ_INHIBIT+0x1e0d>
    21b8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    21bc:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    21c0:	6f442f61 	svcvs	0x00442f61
    21c4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    21c8:	2f73746e 	svccs	0x0073746e
    21cc:	6f72655a 	svcvs	0x0072655a
    21d0:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    21d4:	6178652f 	cmnvs	r8, pc, lsr #10
    21d8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    21dc:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    21e0:	4332492d 	teqmi	r2, #737280	; 0xb4000
    21e4:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    21e8:	2f6c656e 	svccs	0x006c656e
    21ec:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    21f0:	2f656475 	svccs	0x00656475
    21f4:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    21f8:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    21fc:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    2200:	2f006c61 	svccs	0x00006c61
    2204:	2f746e6d 	svccs	0x00746e6d
    2208:	73552f63 	cmpvc	r5, #396	; 0x18c
    220c:	2f737265 	svccs	0x00737265
    2210:	6162754b 	cmnvs	r2, fp, asr #10
    2214:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2218:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    221c:	5a2f7374 	bpl	bdeff4 <_bss_end+0xbcd344>
    2220:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 2094 <CPSR_IRQ_INHIBIT+0x2014>
    2224:	2f657461 	svccs	0x00657461
    2228:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    222c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    2230:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2234:	2f433249 	svccs	0x00433249
    2238:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    223c:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2240:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2244:	702f6564 	eorvc	r6, pc, r4, ror #10
    2248:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    224c:	2f007373 	svccs	0x00007373
    2250:	2f746e6d 	svccs	0x00746e6d
    2254:	73552f63 	cmpvc	r5, #396	; 0x18c
    2258:	2f737265 	svccs	0x00737265
    225c:	6162754b 	cmnvs	r2, fp, asr #10
    2260:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2264:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    2268:	5a2f7374 	bpl	bdf040 <_bss_end+0xbcd390>
    226c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 20e0 <CPSR_IRQ_INHIBIT+0x2060>
    2270:	2f657461 	svccs	0x00657461
    2274:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    2278:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    227c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2280:	2f433249 	svccs	0x00433249
    2284:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2288:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    228c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2290:	642f6564 	strtvs	r6, [pc], #-1380	; 2298 <CPSR_IRQ_INHIBIT+0x2218>
    2294:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2298:	2f007372 	svccs	0x00007372
    229c:	2f746e6d 	svccs	0x00746e6d
    22a0:	73552f63 	cmpvc	r5, #396	; 0x18c
    22a4:	2f737265 	svccs	0x00737265
    22a8:	6162754b 	cmnvs	r2, fp, asr #10
    22ac:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    22b0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    22b4:	5a2f7374 	bpl	bdf08c <_bss_end+0xbcd3dc>
    22b8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 212c <CPSR_IRQ_INHIBIT+0x20ac>
    22bc:	2f657461 	svccs	0x00657461
    22c0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    22c4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    22c8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    22cc:	2f433249 	svccs	0x00433249
    22d0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    22d4:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    22d8:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
    22dc:	66000073 			; <UNDEFINED> instruction: 0x66000073
    22e0:	73656c69 	cmnvc	r5, #26880	; 0x6900
    22e4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    22e8:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    22ec:	6b000001 	blvs	22f8 <CPSR_IRQ_INHIBIT+0x2278>
    22f0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    22f4:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    22f8:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    22fc:	00000200 	andeq	r0, r0, r0, lsl #4
    2300:	6f697067 	svcvs	0x00697067
    2304:	2e73665f 	mrccs	6, 3, r6, cr3, cr15, {2}
    2308:	00030068 	andeq	r0, r3, r8, rrx
    230c:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    2310:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2314:	2e73665f 	mrccs	6, 3, r6, cr3, cr15, {2}
    2318:	00030068 	andeq	r0, r3, r8, rrx
    231c:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
    2320:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2324:	70736964 	rsbsvc	r6, r3, r4, ror #18
    2328:	5f79616c 	svcpl	0x0079616c
    232c:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    2330:	00000300 	andeq	r0, r0, r0, lsl #6
    2334:	66696873 			; <UNDEFINED> instruction: 0x66696873
    2338:	67657274 			; <UNDEFINED> instruction: 0x67657274
    233c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2340:	73665f72 	cmnvc	r6, #456	; 0x1c8
    2344:	0300682e 	movweq	r6, #2094	; 0x82e
    2348:	72740000 	rsbsvc	r0, r4, #0
    234c:	665f676e 	ldrbvs	r6, [pc], -lr, ror #14
    2350:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2354:	6f000003 	svcvs	0x00000003
    2358:	5f64656c 	svcpl	0x0064656c
    235c:	31647373 	smccc	18227	; 0x4733
    2360:	5f363033 	svcpl	0x00363033
    2364:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    2368:	00000300 	andeq	r0, r0, r0, lsl #6
    236c:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    2370:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    2374:	00000400 	andeq	r0, r0, r0, lsl #8
    2378:	2e697773 	mcrcs	7, 3, r7, cr9, cr3, {3}
    237c:	00050068 	andeq	r0, r5, r8, rrx
    2380:	72657000 	rsbvc	r7, r5, #0
    2384:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    2388:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    238c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    2390:	70670000 	rsbvc	r0, r7, r0
    2394:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    2398:	00000600 	andeq	r0, r0, r0, lsl #12
    239c:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    23a0:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    23a4:	00060068 	andeq	r0, r6, r8, rrx
    23a8:	69687300 	stmdbvs	r8!, {r8, r9, ip, sp, lr}^
    23ac:	65727466 	ldrbvs	r7, [r2, #-1126]!	; 0xfffffb9a
    23b0:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    23b4:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    23b8:	00000600 	andeq	r0, r0, r0, lsl #12
    23bc:	6d676573 	cfstr64vs	mvdx6, [r7, #-460]!	; 0xfffffe34
    23c0:	64746e65 	ldrbtvs	r6, [r4], #-3685	; 0xfffff19b
    23c4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    23c8:	682e7961 	stmdavs	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    23cc:	00000600 	andeq	r0, r0, r0, lsl #12
    23d0:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    23d4:	0600682e 	streq	r6, [r0], -lr, lsr #16
    23d8:	32690000 	rsbcc	r0, r9, #0
    23dc:	00682e63 	rsbeq	r2, r8, r3, ror #28
    23e0:	6f000006 	svcvs	0x00000006
    23e4:	5f64656c 	svcpl	0x0064656c
    23e8:	31647373 	smccc	18227	; 0x4733
    23ec:	2e363033 	mrccs	0, 1, r3, cr6, cr3, {1}
    23f0:	00060068 	andeq	r0, r6, r8, rrx
    23f4:	6c696600 	stclvs	6, cr6, [r9], #-0
    23f8:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    23fc:	5f6d6574 	svcpl	0x006d6574
    2400:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2404:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    2408:	00707063 	rsbseq	r7, r0, r3, rrx
    240c:	00000007 	andeq	r0, r0, r7
    2410:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2414:	00c27802 	sbceq	r7, r2, r2, lsl #16
    2418:	012a0300 			; <UNDEFINED> instruction: 0x012a0300
    241c:	05bc1005 	ldreq	r1, [ip, #5]!
    2420:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2424:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2428:	02050016 	andeq	r0, r5, #22
    242c:	0000c2a4 	andeq	ip, r0, r4, lsr #5
    2430:	05013003 	streq	r3, [r1, #-3]
    2434:	0505bc10 	streq	fp, [r5, #-3088]	; 0xfffff3f0
    2438:	0008022f 	andeq	r0, r8, pc, lsr #4
    243c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
    2440:	d0020500 	andle	r0, r2, r0, lsl #10
    2444:	030000c2 	movweq	r0, #194	; 0xc2
    2448:	10050135 	andne	r0, r5, r5, lsr r1
    244c:	2f050584 	svccs	0x00050584
    2450:	01000802 	tsteq	r0, r2, lsl #16
    2454:	00120501 	andseq	r0, r2, r1, lsl #10
    2458:	c2f40205 	rscsgt	r0, r4, #1342177280	; 0x50000000
    245c:	3a030000 	bcc	c2464 <_bss_end+0xb07b4>
    2460:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    2464:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2468:	01010008 	tsteq	r1, r8
    246c:	01050204 	tsteq	r5, r4, lsl #4
    2470:	20020500 	andcs	r0, r2, r0, lsl #10
    2474:	030000c3 	movweq	r0, #195	; 0xc3
    2478:	1c050129 	stfnes	f0, [r5], {41}	; 0x29
    247c:	83010583 	movwhi	r0, #5507	; 0x1583
    2480:	01000802 	tsteq	r0, r2, lsl #16
    2484:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2488:	02050001 	andeq	r0, r5, #1
    248c:	0000ab00 	andeq	sl, r0, r0, lsl #22
    2490:	05013d03 	streq	r3, [r1, #-3331]	; 0xfffff2fd
    2494:	01059f14 	tsteq	r5, r4, lsl pc
    2498:	00080267 	andeq	r0, r8, r7, ror #4
    249c:	07050101 	streq	r0, [r5, -r1, lsl #2]
    24a0:	50020500 	andpl	r0, r2, r0, lsl #10
    24a4:	030000c3 	movweq	r0, #195	; 0xc3
    24a8:	02820123 	addeq	r0, r2, #-1073741816	; 0xc0000008
    24ac:	01010012 	tsteq	r1, r2, lsl r0
    24b0:	05000d05 	streq	r0, [r0, #-3333]	; 0xfffff2fb
    24b4:	00c38402 	sbceq	r8, r3, r2, lsl #8
    24b8:	01260300 			; <UNDEFINED> instruction: 0x01260300
    24bc:	00120282 	andseq	r0, r2, r2, lsl #5
    24c0:	0d050101 	stfeqs	f0, [r5, #-4]
    24c4:	b8020500 	stmdalt	r2, {r8, sl}
    24c8:	030000c3 	movweq	r0, #195	; 0xc3
    24cc:	02820126 	addeq	r0, r2, #-2147483639	; 0x80000009
    24d0:	01010012 	tsteq	r1, r2, lsl r0
    24d4:	05050304 	streq	r0, [r5, #-772]	; 0xfffffcfc
    24d8:	ec020500 	cfstr32	mvfx0, [r2], {-0}
    24dc:	030000c3 	movweq	r0, #195	; 0xc3
    24e0:	13050114 	movwne	r0, #20756	; 0x5114
    24e4:	05055b08 	streq	r5, [r5, #-2824]	; 0xfffff4f8
    24e8:	0a02cb08 	beq	b5110 <_bss_end+0xa3460>
    24ec:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    24f0:	00050503 	andeq	r0, r5, r3, lsl #10
    24f4:	c4680205 	strbtgt	r0, [r8], #-517	; 0xfffffdfb
    24f8:	1c030000 	stcne	0, cr0, [r3], {-0}
    24fc:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    2500:	48050568 	stmdami	r5, {r3, r5, r6, r8, sl}
    2504:	000a0269 	andeq	r0, sl, r9, ror #4
    2508:	03040101 	movweq	r0, #16641	; 0x4101
    250c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2510:	00c4ac02 	sbceq	sl, r4, r2, lsl #24
    2514:	011c0300 	tsteq	ip, r0, lsl #6
    2518:	00120286 	andseq	r0, r2, r6, lsl #5
    251c:	03040101 	movweq	r0, #16641	; 0x4101
    2520:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2524:	00c4e002 	sbceq	lr, r4, r2
    2528:	01220300 			; <UNDEFINED> instruction: 0x01220300
    252c:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
    2530:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    2534:	29056601 	stmdbcs	r5, {r0, r9, sl, sp, lr}
    2538:	4a280569 	bmi	a03ae4 <_bss_end+0x9f1e34>
    253c:	00823105 	addeq	r3, r2, r5, lsl #2
    2540:	06010402 	streq	r0, [r1], -r2, lsl #8
    2544:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    2548:	17054a02 	strne	r4, [r5, -r2, lsl #20]
    254c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2550:	14052e06 	strne	r2, [r5], #-3590	; 0xfffff1fa
    2554:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2558:	4d10054b 	cfldr32mi	mvfx0, [r0, #-300]	; 0xfffffed4
    255c:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2560:	01010008 	tsteq	r1, r8
    2564:	16050304 	strne	r0, [r5], -r4, lsl #6
    2568:	60020500 	andvs	r0, r2, r0, lsl #10
    256c:	030000c5 	movweq	r0, #197	; 0xc5
    2570:	0905012e 	stmdbeq	r5, {r1, r2, r3, r5, r8}
    2574:	001505bc 			; <UNDEFINED> instruction: 0x001505bc
    2578:	66010402 	strvs	r0, [r1], -r2, lsl #8
    257c:	05691e05 	strbeq	r1, [r9, #-3589]!	; 0xfffff1fb
    2580:	2f054a1d 	svccs	0x00054a1d
    2584:	4a1d052e 	bmi	743a44 <_bss_end+0x731d94>
    2588:	05d71405 	ldrbeq	r1, [r7, #1029]	; 0x405
    258c:	05054d10 	streq	r4, [r5, #-3344]	; 0xfffff2f0
    2590:	0008022f 	andeq	r0, r8, pc, lsr #4
    2594:	03040101 	movweq	r0, #16641	; 0x4101
    2598:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    259c:	00c5dc02 	sbceq	sp, r5, r2, lsl #24
    25a0:	013a0300 	teqeq	sl, r0, lsl #6
    25a4:	05840e05 	streq	r0, [r4, #3589]	; 0xe05
    25a8:	09054a0d 	stmdbeq	r5, {r0, r2, r3, r9, fp, lr}
    25ac:	0018054a 	andseq	r0, r8, sl, asr #10
    25b0:	4a010402 	bmi	435c0 <_bss_end+0x31910>
    25b4:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    25b8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    25bc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    25c0:	054b4a01 	strbeq	r4, [fp, #-2561]	; 0xfffff5ff
    25c4:	17054d18 	smladne	r5, r8, sp, r4
    25c8:	d718054a 	ldrle	r0, [r8, -sl, asr #10]
    25cc:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    25d0:	10054a0f 	andne	r4, r5, pc, lsl #20
    25d4:	2f05054c 	svccs	0x0005054c
    25d8:	01000802 	tsteq	r0, r2, lsl #16
    25dc:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    25e0:	02050012 	andeq	r0, r5, #18
    25e4:	0000c678 	andeq	ip, r0, r8, ror r6
    25e8:	0100c603 	tsteq	r0, r3, lsl #12
    25ec:	05bd1005 	ldreq	r1, [sp, #5]!
    25f0:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    25f4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    25f8:	00120503 	andseq	r0, r2, r3, lsl #10
    25fc:	c6a40205 	strtgt	r0, [r4], r5, lsl #4
    2600:	d1030000 	mrsle	r0, (UNDEF: 3)
    2604:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    2608:	00080285 	andeq	r0, r8, r5, lsl #5
    260c:	03040101 	movweq	r0, #16641	; 0x4101
    2610:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
    2614:	00c6c402 	sbceq	ip, r6, r2, lsl #8
    2618:	00d60300 	sbcseq	r0, r6, r0, lsl #6
    261c:	bc090501 	cfstr32lt	mvfx0, [r9], {1}
    2620:	02003005 	andeq	r3, r0, #5
    2624:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    2628:	1b056714 	blne	15c280 <_bss_end+0x14a5d0>
    262c:	6709054e 	strvs	r0, [r9, -lr, asr #10]
    2630:	02001c05 	andeq	r1, r0, #1280	; 0x500
    2634:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    2638:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    263c:	14052e01 	strne	r2, [r5], #-3585	; 0xfffff1ff
    2640:	4c09054b 	cfstr32mi	mvfx0, [r9], {75}	; 0x4b
    2644:	05682305 	strbeq	r2, [r8, #-773]!	; 0xfffffcfb
    2648:	0d05ba11 	vstreq	s22, [r5, #-68]	; 0xffffffbc
    264c:	4b18054a 	blmi	603b7c <_bss_end+0x5f1ecc>
    2650:	054c2405 	strbeq	r2, [ip, #-1029]	; 0xfffffbfb
    2654:	1105be23 	tstne	r5, r3, lsr #28
    2658:	4a0d05ba 	bmi	343d48 <_bss_end+0x332098>
    265c:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    2660:	68054c24 	stmdavs	r5, {r2, r5, sl, fp, lr}
    2664:	021005a2 	andseq	r0, r0, #679477248	; 0x28800000
    2668:	05051424 	streq	r1, [r5, #-1060]	; 0xfffffbdc
    266c:	0008022f 	andeq	r0, r8, pc, lsr #4
    2670:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    2674:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2678:	00c81c02 	sbceq	r1, r8, r2, lsl #24
    267c:	010e0300 	mrseq	r0, ELR_hyp
    2680:	059f1705 	ldreq	r1, [pc, #1797]	; 2d8d <CPSR_IRQ_INHIBIT+0x2d0d>
    2684:	02220805 	eoreq	r0, r2, #327680	; 0x50000
    2688:	0101000a 	tsteq	r1, sl
    268c:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
    2690:	68020500 	stmdavs	r2, {r8, sl}
    2694:	030000c8 	movweq	r0, #200	; 0xc8
    2698:	05830113 	streq	r0, [r3, #275]	; 0x113
    269c:	0505670e 	streq	r6, [r5, #-1806]	; 0xfffff8f2
    26a0:	0a026849 	beq	9c7cc <_bss_end+0x8ab1c>
    26a4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    26a8:	00050504 	andeq	r0, r5, r4, lsl #10
    26ac:	c8ac0205 	stmiagt	ip!, {r0, r2, r9}
    26b0:	13030000 	movwne	r0, #12288	; 0x3000
    26b4:	12028501 	andne	r8, r2, #4194304	; 0x400000
    26b8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    26bc:	00160504 	andseq	r0, r6, r4, lsl #10
    26c0:	c8e00205 	stmiagt	r0!, {r0, r2, r9}^
    26c4:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    26c8:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    26cc:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    26d0:	01010008 	tsteq	r1, r8
    26d4:	16050404 	strne	r0, [r5], -r4, lsl #8
    26d8:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    26dc:	030000c9 	movweq	r0, #201	; 0xc9
    26e0:	0905011d 	stmdbeq	r5, {r0, r2, r3, r4, r8}
    26e4:	001505bc 			; <UNDEFINED> instruction: 0x001505bc
    26e8:	66010402 	strvs	r0, [r1], -r2, lsl #8
    26ec:	05681105 	strbeq	r1, [r8, #-261]!	; 0xfffffefb
    26f0:	1d054a0d 	vstrne	s8, [r5, #-52]	; 0xffffffcc
    26f4:	6718054c 	ldrvs	r0, [r8, -ip, asr #10]
    26f8:	054e1005 	strbeq	r1, [lr, #-5]
    26fc:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2700:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2704:	00120504 	andseq	r0, r2, r4, lsl #10
    2708:	c9740205 	ldmdbgt	r4!, {r0, r2, r9}^
    270c:	2b030000 	blcs	c2714 <_bss_end+0xb0a64>
    2710:	840d0501 	strhi	r0, [sp], #-1281	; 0xfffffaff
    2714:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    2718:	12054b14 	andne	r4, r5, #20, 22	; 0x5000
    271c:	68100550 	ldmdavs	r0, {r4, r6, r8, sl}
    2720:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2724:	01010008 	tsteq	r1, r8
    2728:	12050404 	andne	r0, r5, #4, 8	; 0x4000000
    272c:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    2730:	030000c9 	movweq	r0, #201	; 0xc9
    2734:	0d050139 	stfeqs	f0, [r5, #-228]	; 0xffffff1c
    2738:	4a0905bc 	bmi	243e30 <_bss_end+0x232180>
    273c:	054c1405 	strbeq	r1, [ip, #-1029]	; 0xfffffbfb
    2740:	05054d10 	streq	r4, [r5, #-3344]	; 0xfffff2f0
    2744:	0008022f 	andeq	r0, r8, pc, lsr #4
    2748:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    274c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2750:	00ca0002 	sbceq	r0, sl, r2
    2754:	00c70300 	sbceq	r0, r7, r0, lsl #6
    2758:	84050501 	strhi	r0, [r5], #-1281	; 0xfffffaff
    275c:	01000802 	tsteq	r0, r2, lsl #16
    2760:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    2764:	02050014 	andeq	r0, r5, #20
    2768:	0000ca20 	andeq	ip, r0, r0, lsr #20
    276c:	0100cb03 	tsteq	r0, r3, lsl #22
    2770:	05bc1b05 	ldreq	r1, [ip, #2821]!	; 0xb05
    2774:	14056709 	strne	r6, [r5], #-1801	; 0xfffff8f7
    2778:	4c350567 	cfldr32mi	mvfx0, [r5], #-412	; 0xfffffe64
    277c:	05f41005 	ldrbeq	r1, [r4, #5]!
    2780:	06022f05 	streq	r2, [r2], -r5, lsl #30
    2784:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2788:	00050505 	andeq	r0, r5, r5, lsl #10
    278c:	ca880205 	bgt	fe202fa8 <_bss_end+0xfe1f12f8>
    2790:	0f030000 	svceq	0x00030000
    2794:	83130501 	tsthi	r3, #4194304	; 0x400000
    2798:	23080505 	movwcs	r0, #34053	; 0x8505
    279c:	01000a02 	tsteq	r0, r2, lsl #20
    27a0:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    27a4:	02050005 	andeq	r0, r5, #5
    27a8:	0000cad0 	ldrdeq	ip, [r0], -r0
    27ac:	83011503 	movwhi	r1, #5379	; 0x1503
    27b0:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    27b4:	02684905 	rsbeq	r4, r8, #81920	; 0x14000
    27b8:	0101000a 	tsteq	r1, sl
    27bc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
    27c0:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
    27c4:	030000cb 	movweq	r0, #203	; 0xcb
    27c8:	02850115 	addeq	r0, r5, #1073741829	; 0x40000005
    27cc:	01010012 	tsteq	r1, r2, lsl r0
    27d0:	16050504 	strne	r0, [r5], -r4, lsl #10
    27d4:	48020500 	stmdami	r2, {r8, sl}
    27d8:	030000cb 	movweq	r0, #203	; 0xcb
    27dc:	0905011a 	stmdbeq	r5, {r1, r3, r4, r8}
    27e0:	682e05bd 	stmdavs	lr!, {r0, r2, r3, r4, r5, r7, r8, sl}
    27e4:	05821705 	streq	r1, [r2, #1797]	; 0x705
    27e8:	10054b14 	andne	r4, r5, r4, lsl fp
    27ec:	2f05054d 	svccs	0x0005054d
    27f0:	01000802 	tsteq	r0, r2, lsl #16
    27f4:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    27f8:	02050016 	andeq	r0, r5, #22
    27fc:	0000cba0 	andeq	ip, r0, r0, lsr #23
    2800:	05012603 	streq	r2, [r1, #-1539]	; 0xfffff9fd
    2804:	2005bd17 	andcs	fp, r5, r7, lsl sp
    2808:	03040200 	movweq	r0, #16896	; 0x4200
    280c:	002c054a 	eoreq	r0, ip, sl, asr #10
    2810:	83020402 	movwhi	r0, #9218	; 0x2402
    2814:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    2818:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    281c:	04020009 	streq	r0, [r2], #-9
    2820:	10058102 	andne	r8, r5, r2, lsl #2
    2824:	2f050585 	svccs	0x00050585
    2828:	01000802 	tsteq	r0, r2, lsl #16
    282c:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    2830:	02050012 	andeq	r0, r5, #18
    2834:	0000cc10 	andeq	ip, r0, r0, lsl ip
    2838:	05012f03 	streq	r2, [r1, #-3843]	; 0xfffff0fd
    283c:	0d05840e 	cfstrseq	mvf8, [r5, #-56]	; 0xffffffc8
    2840:	4a09054a 	bmi	243d70 <_bss_end+0x2320c0>
    2844:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    2848:	11054c1f 	tstne	r5, pc, lsl ip
    284c:	6810054b 	ldmdavs	r0, {r0, r1, r3, r6, r8, sl}
    2850:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2854:	01010008 	tsteq	r1, r8
    2858:	12050504 	andne	r0, r5, #4, 10	; 0x1000000
    285c:	68020500 	stmdavs	r2, {r8, sl}
    2860:	030000cc 	movweq	r0, #204	; 0xcc
    2864:	1005013a 	andne	r0, r5, sl, lsr r1
    2868:	2f0505bc 	svccs	0x000505bc
    286c:	01000802 	tsteq	r0, r2, lsl #16
    2870:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    2874:	02050012 	andeq	r0, r5, #18
    2878:	0000cc94 	muleq	r0, r4, ip
    287c:	0100c303 	tsteq	r0, r3, lsl #6
    2880:	02850505 	addeq	r0, r5, #20971520	; 0x1400000
    2884:	01010008 	tsteq	r1, r8
    2888:	14050504 	strne	r0, [r5], #-1284	; 0xfffffafc
    288c:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
    2890:	030000cc 	movweq	r0, #204	; 0xcc
    2894:	050100c8 	streq	r0, [r1, #-200]	; 0xffffff38
    2898:	0d05be23 	stceq	14, cr11, [r5, #-140]	; 0xffffff74
    289c:	4a090566 	bmi	243e3c <_bss_end+0x23218c>
    28a0:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    28a4:	10054c3e 	andne	r4, r5, lr, lsr ip
    28a8:	2f0505d8 	svccs	0x000505d8
    28ac:	01000802 	tsteq	r0, r2, lsl #16
    28b0:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    28b4:	02050005 	andeq	r0, r5, #5
    28b8:	0000cd20 	andeq	ip, r0, r0, lsr #26
    28bc:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    28c0:	05058313 	streq	r8, [r5, #-787]	; 0xfffffced
    28c4:	0a022308 	beq	8b4ec <_bss_end+0x7983c>
    28c8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    28cc:	00050506 	andeq	r0, r5, r6, lsl #10
    28d0:	cd680205 	sfmgt	f0, 2, [r8, #-20]!	; 0xffffffec
    28d4:	15030000 	strne	r0, [r3, #-0]
    28d8:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    28dc:	49050567 	stmdbmi	r5, {r0, r1, r2, r5, r6, r8, sl}
    28e0:	000a0268 	andeq	r0, sl, r8, ror #4
    28e4:	06040101 	streq	r0, [r4], -r1, lsl #2
    28e8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    28ec:	00cdac02 	sbceq	sl, sp, r2, lsl #24
    28f0:	01150300 	tsteq	r5, r0, lsl #6
    28f4:	00120285 	andseq	r0, r2, r5, lsl #5
    28f8:	06040101 	streq	r0, [r4], -r1, lsl #2
    28fc:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2900:	00cde002 	sbceq	lr, sp, r2
    2904:	011a0300 	tsteq	sl, r0, lsl #6
    2908:	05be1005 	ldreq	r1, [lr, #5]!
    290c:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2910:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2914:	00160506 	andseq	r0, r6, r6, lsl #10
    2918:	ce0c0205 	cdpgt	2, 0, cr0, cr12, cr5, {0}
    291c:	21030000 	mrscs	r0, (UNDEF: 3)
    2920:	be170501 	cfmul32lt	mvfx0, mvfx7, mvfx1
    2924:	02002005 	andeq	r2, r0, #5
    2928:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    292c:	04020043 	streq	r0, [r2], #-67	; 0xffffffbd
    2930:	25058302 	strcs	r8, [r5, #-770]	; 0xfffffcfe
    2934:	02040200 	andeq	r0, r4, #0, 4
    2938:	00090566 	andeq	r0, r9, r6, ror #10
    293c:	81020402 	tsthi	r2, r2, lsl #8
    2940:	05851005 	streq	r1, [r5, #5]
    2944:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2948:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    294c:	00120506 	andseq	r0, r2, r6, lsl #10
    2950:	ce7c0205 	cdpgt	2, 7, cr0, cr12, cr5, {0}
    2954:	2b030000 	blcs	c295c <_bss_end+0xb0cac>
    2958:	840e0501 	strhi	r0, [lr], #-1281	; 0xfffffaff
    295c:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    2960:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2964:	4c1e054b 	cfldr32mi	mvfx0, [lr], {75}	; 0x4b
    2968:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    296c:	05056810 	streq	r6, [r5, #-2064]	; 0xfffff7f0
    2970:	0008022f 	andeq	r0, r8, pc, lsr #4
    2974:	06040101 	streq	r0, [r4], -r1, lsl #2
    2978:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    297c:	00ced402 	sbceq	sp, lr, r2, lsl #8
    2980:	01360300 	teqeq	r6, r0, lsl #6
    2984:	05bc1005 	ldreq	r1, [ip, #5]!
    2988:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    298c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2990:	00120506 	andseq	r0, r2, r6, lsl #10
    2994:	cf000205 	svcgt	0x00000205
    2998:	3f030000 	svccc	0x00030000
    299c:	85050501 	strhi	r0, [r5, #-1281]	; 0xfffffaff
    29a0:	01000802 	tsteq	r0, r2, lsl #16
    29a4:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    29a8:	02050014 	andeq	r0, r5, #20
    29ac:	0000cf20 	andeq	ip, r0, r0, lsr #30
    29b0:	0100c403 	tsteq	r0, r3, lsl #8
    29b4:	05be2205 	ldreq	r2, [lr, #517]!	; 0x205
    29b8:	0905660d 	stmdbeq	r5, {r0, r2, r3, r9, sl, sp, lr}
    29bc:	4b14054a 	blmi	503eec <_bss_end+0x4f223c>
    29c0:	054c3c05 	strbeq	r3, [ip, #-3077]	; 0xfffff3fb
    29c4:	0505d810 	streq	sp, [r5, #-2064]	; 0xfffff7f0
    29c8:	0008022f 	andeq	r0, r8, pc, lsr #4
    29cc:	07040101 	streq	r0, [r4, -r1, lsl #2]
    29d0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    29d4:	00cf8c02 	sbceq	r8, pc, r2, lsl #24
    29d8:	010f0300 	mrseq	r0, SP_hyp
    29dc:	0a02bc83 	beq	b1bf0 <_bss_end+0x9ff40>
    29e0:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    29e4:	00050507 	andeq	r0, r5, r7, lsl #10
    29e8:	cfc80205 	svcgt	0x00c80205
    29ec:	14030000 	strne	r0, [r3], #-0
    29f0:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    29f4:	49050567 	stmdbmi	r5, {r0, r1, r2, r5, r6, r8, sl}
    29f8:	000a0268 	andeq	r0, sl, r8, ror #4
    29fc:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2a00:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2a04:	00d00c02 	sbcseq	r0, r0, r2, lsl #24
    2a08:	01140300 	tsteq	r4, r0, lsl #6
    2a0c:	00120285 	andseq	r0, r2, r5, lsl #5
    2a10:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2a14:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2a18:	00d04002 	sbcseq	r4, r0, r2
    2a1c:	01190300 	tsteq	r9, r0, lsl #6
    2a20:	05bc1805 	ldreq	r1, [ip, #2053]!	; 0x805
    2a24:	12056713 	andne	r6, r5, #4980736	; 0x4c0000
    2a28:	0019054b 	andseq	r0, r9, fp, asr #10
    2a2c:	4a030402 	bmi	c3a3c <_bss_end+0xb1d8c>
    2a30:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    2a34:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    2a38:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    2a3c:	13056702 	movwne	r6, #22274	; 0x5702
    2a40:	02040200 	andeq	r0, r4, #0, 4
    2a44:	002e052e 	eoreq	r0, lr, lr, lsr #10
    2a48:	66020402 	strvs	r0, [r2], -r2, lsl #8
    2a4c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    2a50:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    2a54:	04020009 	streq	r0, [r2], #-9
    2a58:	14052d02 	strne	r2, [r5], #-3330	; 0xfffff2fe
    2a5c:	4a090585 	bmi	244078 <_bss_end+0x2323c8>
    2a60:	056a2105 	strbeq	r2, [sl, #-261]!	; 0xfffffefb
    2a64:	26054a16 			; <UNDEFINED> instruction: 0x26054a16
    2a68:	03040200 	movweq	r0, #16896	; 0x4200
    2a6c:	0028052e 	eoreq	r0, r8, lr, lsr #10
    2a70:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    2a74:	02004905 	andeq	r4, r0, #81920	; 0x14000
    2a78:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    2a7c:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    2a80:	19056602 	stmdbne	r5, {r1, r9, sl, sp, lr}
    2a84:	02040200 	andeq	r0, r4, #0, 4
    2a88:	001d052e 	andseq	r0, sp, lr, lsr #10
    2a8c:	4a020402 	bmi	83a9c <_bss_end+0x71dec>
    2a90:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    2a94:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2a98:	0402000d 	streq	r0, [r2], #-13
    2a9c:	10052d02 	andne	r2, r5, r2, lsl #26
    2aa0:	2f050586 	svccs	0x00050586
    2aa4:	01000802 	tsteq	r0, r2, lsl #16
    2aa8:	05070401 	streq	r0, [r7, #-1025]	; 0xfffffbff
    2aac:	02050016 	andeq	r0, r5, #22
    2ab0:	0000d128 	andeq	sp, r0, r8, lsr #2
    2ab4:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    2ab8:	0505be10 	streq	fp, [r5, #-3600]	; 0xfffff1f0
    2abc:	0008022f 	andeq	r0, r8, pc, lsr #4
    2ac0:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2ac4:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2ac8:	00d15402 	sbcseq	r5, r1, r2, lsl #8
    2acc:	01320300 	teqeq	r2, r0, lsl #6
    2ad0:	05840e05 	streq	r0, [r4, #3589]	; 0xe05
    2ad4:	09054a0d 	stmdbeq	r5, {r0, r2, r3, r9, fp, lr}
    2ad8:	4b14054a 	blmi	504008 <_bss_end+0x4f2358>
    2adc:	4b11054c 	blmi	444014 <_bss_end+0x432364>
    2ae0:	05681005 	strbeq	r1, [r8, #-5]!
    2ae4:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2ae8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2aec:	00120507 	andseq	r0, r2, r7, lsl #10
    2af0:	d1ac0205 			; <UNDEFINED> instruction: 0xd1ac0205
    2af4:	3d030000 	stccc	0, cr0, [r3, #-0]
    2af8:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    2afc:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2b00:	01010008 	tsteq	r1, r8
    2b04:	12050704 	andne	r0, r5, #4, 14	; 0x100000
    2b08:	d8020500 	stmdale	r2, {r8, sl}
    2b0c:	030000d1 	movweq	r0, #209	; 0xd1
    2b10:	050100c6 	streq	r0, [r1, #-198]	; 0xffffff3a
    2b14:	08028505 	stmdaeq	r2, {r0, r2, r8, sl, pc}
    2b18:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2b1c:	00140507 	andseq	r0, r4, r7, lsl #10
    2b20:	d1f80205 	mvnsle	r0, r5, lsl #4
    2b24:	cb030000 	blgt	c2b2c <_bss_end+0xb0e7c>
    2b28:	18050100 	stmdane	r5, {r8}
    2b2c:	080d05be 	stmdaeq	sp, {r1, r2, r3, r4, r5, r7, r8, sl}
    2b30:	4a090520 	bmi	243fb8 <_bss_end+0x232308>
    2b34:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    2b38:	10054c28 	andne	r4, r5, r8, lsr #24
    2b3c:	2f0505d8 	svccs	0x000505d8
    2b40:	01000802 	tsteq	r0, r2, lsl #16
    2b44:	05080401 	streq	r0, [r8, #-1025]	; 0xfffffbff
    2b48:	02050005 	andeq	r0, r5, #5
    2b4c:	0000d27c 	andeq	sp, r0, ip, ror r2
    2b50:	05011003 	streq	r1, [r1, #-3]
    2b54:	05058313 	streq	r8, [r5, #-787]	; 0xfffffced
    2b58:	0a022308 	beq	8b780 <_bss_end+0x79ad0>
    2b5c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2b60:	00050508 	andeq	r0, r5, r8, lsl #10
    2b64:	d2c40205 	sbcle	r0, r4, #1342177280	; 0x50000000
    2b68:	16030000 	strne	r0, [r3], -r0
    2b6c:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    2b70:	49050567 	stmdbmi	r5, {r0, r1, r2, r5, r6, r8, sl}
    2b74:	000a0268 	andeq	r0, sl, r8, ror #4
    2b78:	08040101 	stmdaeq	r4, {r0, r8}
    2b7c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2b80:	00d30802 	sbcseq	r0, r3, r2, lsl #16
    2b84:	01160300 	tsteq	r6, r0, lsl #6
    2b88:	00120285 	andseq	r0, r2, r5, lsl #5
    2b8c:	08040101 	stmdaeq	r4, {r0, r8}
    2b90:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2b94:	00d33c02 	sbcseq	r3, r3, r2, lsl #24
    2b98:	011b0300 	tsteq	fp, r0, lsl #6
    2b9c:	05be1005 	ldreq	r1, [lr, #5]!
    2ba0:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2ba4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2ba8:	00160508 	andseq	r0, r6, r8, lsl #10
    2bac:	d3680205 	cmnle	r8, #1342177280	; 0x50000000
    2bb0:	22030000 	andcs	r0, r3, #0
    2bb4:	bc320501 	cfldr32lt	mvfx0, [r2], #-4
    2bb8:	05841005 	streq	r1, [r4, #5]
    2bbc:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2bc0:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2bc4:	00120508 	andseq	r0, r2, r8, lsl #10
    2bc8:	d3a40205 			; <UNDEFINED> instruction: 0xd3a40205
    2bcc:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    2bd0:	840e0501 	strhi	r0, [lr], #-1281	; 0xfffffaff
    2bd4:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    2bd8:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2bdc:	4c1f054b 	cfldr32mi	mvfx0, [pc], {75}	; 0x4b
    2be0:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    2be4:	05056810 	streq	r6, [r5, #-2064]	; 0xfffff7f0
    2be8:	0008022f 	andeq	r0, r8, pc, lsr #4
    2bec:	08040101 	stmdaeq	r4, {r0, r8}
    2bf0:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2bf4:	00d3fc02 	sbcseq	pc, r3, r2, lsl #24
    2bf8:	01340300 	teqeq	r4, r0, lsl #6
    2bfc:	05bc1005 	ldreq	r1, [ip, #5]!
    2c00:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2c04:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2c08:	00120508 	andseq	r0, r2, r8, lsl #10
    2c0c:	d4280205 	strtle	r0, [r8], #-517	; 0xfffffdfb
    2c10:	3d030000 	stccc	0, cr0, [r3, #-0]
    2c14:	85050501 	strhi	r0, [r5, #-1281]	; 0xfffffaff
    2c18:	01000802 	tsteq	r0, r2, lsl #16
    2c1c:	05080401 	streq	r0, [r8, #-1025]	; 0xfffffbff
    2c20:	02050014 	andeq	r0, r5, #20
    2c24:	0000d448 	andeq	sp, r0, r8, asr #8
    2c28:	0100c203 	tsteq	r0, r3, lsl #4
    2c2c:	05be2305 	ldreq	r2, [lr, #773]!	; 0x305
    2c30:	09059e0d 	stmdbeq	r5, {r0, r2, r3, r9, sl, fp, ip, pc}
    2c34:	4c14054a 	cfldr32mi	mvfx0, [r4], {74}	; 0x4a
    2c38:	054c3805 	strbeq	r3, [ip, #-2053]	; 0xfffff7fb
    2c3c:	0505d810 	streq	sp, [r5, #-2064]	; 0xfffff7f0
    2c40:	0008022f 	andeq	r0, r8, pc, lsr #4
    2c44:	03290101 			; <UNDEFINED> instruction: 0x03290101
    2c48:	00030000 	andeq	r0, r3, r0
    2c4c:	00000262 	andeq	r0, r0, r2, ror #4
    2c50:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2c54:	0101000d 	tsteq	r1, sp
    2c58:	00000101 	andeq	r0, r0, r1, lsl #2
    2c5c:	00000100 	andeq	r0, r0, r0, lsl #2
    2c60:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    2c64:	2f632f74 	svccs	0x00632f74
    2c68:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2c6c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2c70:	442f6162 	strtmi	r6, [pc], #-354	; 2c78 <CPSR_IRQ_INHIBIT+0x2bf8>
    2c74:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2c78:	73746e65 	cmnvc	r4, #1616	; 0x650
    2c7c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2c80:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2c84:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2c88:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2c8c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2c90:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2c94:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2c98:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2c9c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2ca0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2ca4:	2f632f74 	svccs	0x00632f74
    2ca8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2cac:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2cb0:	442f6162 	strtmi	r6, [pc], #-354	; 2cb8 <CPSR_IRQ_INHIBIT+0x2c38>
    2cb4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2cb8:	73746e65 	cmnvc	r4, #1616	; 0x650
    2cbc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2cc0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2cc4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2cc8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2ccc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2cd0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2cd4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2cd8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2cdc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2ce0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2ce4:	616f622f 	cmnvs	pc, pc, lsr #4
    2ce8:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    2cec:	2f306970 	svccs	0x00306970
    2cf0:	006c6168 	rsbeq	r6, ip, r8, ror #2
    2cf4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2cf8:	552f632f 	strpl	r6, [pc, #-815]!	; 29d1 <CPSR_IRQ_INHIBIT+0x2951>
    2cfc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2d00:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2d04:	6f442f61 	svcvs	0x00442f61
    2d08:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2d0c:	2f73746e 	svccs	0x0073746e
    2d10:	6f72655a 	svcvs	0x0072655a
    2d14:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2d18:	6178652f 	cmnvs	r8, pc, lsr #10
    2d1c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2d20:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2d24:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2d28:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2d2c:	2f6c656e 	svccs	0x006c656e
    2d30:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2d34:	00656475 	rsbeq	r6, r5, r5, ror r4
    2d38:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2d3c:	552f632f 	strpl	r6, [pc, #-815]!	; 2a15 <CPSR_IRQ_INHIBIT+0x2995>
    2d40:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2d44:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2d48:	6f442f61 	svcvs	0x00442f61
    2d4c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2d50:	2f73746e 	svccs	0x0073746e
    2d54:	6f72655a 	svcvs	0x0072655a
    2d58:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2d5c:	6178652f 	cmnvs	r8, pc, lsr #10
    2d60:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2d64:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2d68:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2d6c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2d70:	2f6c656e 	svccs	0x006c656e
    2d74:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2d78:	2f656475 	svccs	0x00656475
    2d7c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2d80:	00737265 	rsbseq	r7, r3, r5, ror #4
    2d84:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2d88:	552f632f 	strpl	r6, [pc, #-815]!	; 2a61 <CPSR_IRQ_INHIBIT+0x29e1>
    2d8c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2d90:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2d94:	6f442f61 	svcvs	0x00442f61
    2d98:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2d9c:	2f73746e 	svccs	0x0073746e
    2da0:	6f72655a 	svcvs	0x0072655a
    2da4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2da8:	6178652f 	cmnvs	r8, pc, lsr #10
    2dac:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2db0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2db4:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2db8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2dbc:	2f6c656e 	svccs	0x006c656e
    2dc0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2dc4:	2f656475 	svccs	0x00656475
    2dc8:	636f7270 	cmnvs	pc, #112, 4
    2dcc:	00737365 	rsbseq	r7, r3, r5, ror #6
    2dd0:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2dd4:	552f632f 	strpl	r6, [pc, #-815]!	; 2aad <CPSR_IRQ_INHIBIT+0x2a2d>
    2dd8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2ddc:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2de0:	6f442f61 	svcvs	0x00442f61
    2de4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2de8:	2f73746e 	svccs	0x0073746e
    2dec:	6f72655a 	svcvs	0x0072655a
    2df0:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2df4:	6178652f 	cmnvs	r8, pc, lsr #10
    2df8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2dfc:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2e00:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2e04:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2e08:	2f6c656e 	svccs	0x006c656e
    2e0c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2e10:	2f656475 	svccs	0x00656475
    2e14:	00007366 	andeq	r7, r0, r6, ror #6
    2e18:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    2e1c:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2e20:	6f635f74 	svcvs	0x00635f74
    2e24:	6f72746e 	svcvs	0x0072746e
    2e28:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2e2c:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    2e30:	00000100 	andeq	r0, r0, r0, lsl #2
    2e34:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    2e38:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    2e3c:	00000200 	andeq	r0, r0, r0, lsl #4
    2e40:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    2e44:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    2e48:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    2e4c:	00020068 	andeq	r0, r2, r8, rrx
    2e50:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    2e54:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2e58:	635f7470 	cmpvs	pc, #112, 8	; 0x70000000
    2e5c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    2e60:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    2e64:	00682e72 	rsbeq	r2, r8, r2, ror lr
    2e68:	74000003 	strvc	r0, [r0], #-3
    2e6c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2e70:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    2e74:	72700000 	rsbsvc	r0, r0, #0
    2e78:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2e7c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2e80:	73000005 	movwvc	r0, #5
    2e84:	682e6977 	stmdavs	lr!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}
    2e88:	00000500 	andeq	r0, r0, r0, lsl #10
    2e8c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    2e90:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    2e94:	682e6d65 	stmdavs	lr!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
    2e98:	00000600 	andeq	r0, r0, r0, lsl #12
    2e9c:	636f7270 	cmnvs	pc, #112, 4
    2ea0:	5f737365 	svcpl	0x00737365
    2ea4:	616e616d 	cmnvs	lr, sp, ror #2
    2ea8:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    2eac:	00050068 	andeq	r0, r5, r8, rrx
    2eb0:	01050000 	mrseq	r0, (UNDEF: 5)
    2eb4:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    2eb8:	030000d4 	movweq	r0, #212	; 0xd4
    2ebc:	4c050112 	stfmis	f0, [r5], {18}
    2ec0:	2e130568 	cfmsc32cs	mvfx0, mvfx3, mvfx8
    2ec4:	05300505 	ldreq	r0, [r0, #-1285]!	; 0xfffffafb
    2ec8:	2b05d961 	blcs	179454 <_bss_end+0x1677a4>
    2ecc:	080d052e 	stmdaeq	sp, {r1, r2, r3, r5, r8, sl}
    2ed0:	30670525 	rsbcc	r0, r7, r5, lsr #10
    2ed4:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
    2ed8:	3125080d 			; <UNDEFINED> instruction: 0x3125080d
    2edc:	a12f0105 			; <UNDEFINED> instruction: 0xa12f0105
    2ee0:	054f2405 	strbeq	r2, [pc, #-1029]	; 2ae3 <CPSR_IRQ_INHIBIT+0x2a63>
    2ee4:	1c056605 	stcne	6, cr6, [r5], {5}
    2ee8:	4b01054b 	blmi	4441c <_bss_end+0x3276c>
    2eec:	056a3069 	strbeq	r3, [sl, #-105]!	; 0xffffff97
    2ef0:	38059f13 	stmdacc	r5, {r0, r1, r4, r8, r9, sl, fp, ip, pc}
    2ef4:	4d01052e 	cfstr32mi	mvfx0, [r1, #-184]	; 0xffffff48
    2ef8:	9f0c05a1 	svcls	0x000c05a1
    2efc:	054a1c05 	strbeq	r1, [sl, #-3077]	; 0xfffff3fb
    2f00:	01052e3a 	tsteq	r5, sl, lsr lr
    2f04:	4305854b 	movwmi	r8, #21835	; 0x554b
    2f08:	2e40059f 	mcrcs	5, 2, r0, cr0, cr15, {4}
    2f0c:	054a3905 	strbeq	r3, [sl, #-2309]	; 0xfffff6fb
    2f10:	3b058240 	blcc	163818 <_bss_end+0x151b68>
    2f14:	2f01052e 	svccs	0x0001052e
    2f18:	9f440569 	svcls	0x00440569
    2f1c:	052e4105 	streq	r4, [lr, #-261]!	; 0xfffffefb
    2f20:	41054a3a 	tstmi	r5, sl, lsr sl
    2f24:	2e3c0582 	cfadd32cs	mvfx0, mvfx12, mvfx2
    2f28:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    2f2c:	059f1805 	ldreq	r1, [pc, #2053]	; 3739 <CPSR_IRQ_INHIBIT+0x36b9>
    2f30:	08054d15 	stmdaeq	r5, {r0, r2, r4, r8, sl, fp, lr}
    2f34:	4973054a 	ldmdbmi	r3!, {r1, r3, r6, r8, sl}^
    2f38:	05830805 	streq	r0, [r3, #2053]	; 0x805
    2f3c:	01052d75 	tsteq	r5, r5, ror sp
    2f40:	18056930 	stmdane	r5, {r4, r5, r8, fp, sp, lr}
    2f44:	4d15059f 	cfldr32mi	mvfx0, [r5, #-636]	; 0xfffffd84
    2f48:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    2f4c:	08054975 	stmdaeq	r5, {r0, r2, r4, r5, r6, r8, fp, lr}
    2f50:	2d770583 	cfldr64cs	mvdx0, [r7, #-524]!	; 0xfffffdf4
    2f54:	66300105 	ldrtvs	r0, [r0], -r5, lsl #2
    2f58:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    2f5c:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    2f60:	a9030643 	stmdbge	r3, {r0, r1, r6, r9, sl}
    2f64:	0105827f 	tsteq	r5, pc, ror r2
    2f68:	6600d703 	strvs	sp, [r0], -r3, lsl #14
    2f6c:	0a024aba 	beq	95a5c <_bss_end+0x83dac>
    2f70:	f5010100 			; <UNDEFINED> instruction: 0xf5010100
    2f74:	03000002 	movweq	r0, #2
    2f78:	0002b600 	andeq	fp, r2, r0, lsl #12
    2f7c:	fb010200 	blx	43786 <_bss_end+0x31ad6>
    2f80:	01000d0e 	tsteq	r0, lr, lsl #26
    2f84:	00010101 	andeq	r0, r1, r1, lsl #2
    2f88:	00010000 	andeq	r0, r1, r0
    2f8c:	6d2f0100 	stfvss	f0, [pc, #-0]	; 2f94 <CPSR_IRQ_INHIBIT+0x2f14>
    2f90:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2f94:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2f98:	4b2f7372 	blmi	bdfd68 <_bss_end+0xbce0b8>
    2f9c:	2f616275 	svccs	0x00616275
    2fa0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2fa4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2fa8:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2fac:	614d6f72 	hvcvs	55026	; 0xd6f2
    2fb0:	652f6574 	strvs	r6, [pc, #-1396]!	; 2a44 <CPSR_IRQ_INHIBIT+0x29c4>
    2fb4:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2fb8:	2f73656c 	svccs	0x0073656c
    2fbc:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2fc0:	6b2f4332 	blvs	bd3c90 <_bss_end+0xbc1fe0>
    2fc4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2fc8:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    2fcc:	6d2f0063 	stcvs	0, cr0, [pc, #-396]!	; 2e48 <CPSR_IRQ_INHIBIT+0x2dc8>
    2fd0:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2fd4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2fd8:	4b2f7372 	blmi	bdfda8 <_bss_end+0xbce0f8>
    2fdc:	2f616275 	svccs	0x00616275
    2fe0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2fe4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2fe8:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2fec:	614d6f72 	hvcvs	55026	; 0xd6f2
    2ff0:	652f6574 	strvs	r6, [pc, #-1396]!	; 2a84 <CPSR_IRQ_INHIBIT+0x2a04>
    2ff4:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2ff8:	2f73656c 	svccs	0x0073656c
    2ffc:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3000:	6b2f4332 	blvs	bd3cd0 <_bss_end+0xbc2020>
    3004:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3008:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    300c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3010:	6f622f65 	svcvs	0x00622f65
    3014:	2f647261 	svccs	0x00647261
    3018:	30697072 	rsbcc	r7, r9, r2, ror r0
    301c:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    3020:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3024:	2f632f74 	svccs	0x00632f74
    3028:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    302c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3030:	442f6162 	strtmi	r6, [pc], #-354	; 3038 <CPSR_IRQ_INHIBIT+0x2fb8>
    3034:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3038:	73746e65 	cmnvc	r4, #1616	; 0x650
    303c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3040:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3044:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3048:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    304c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3050:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3054:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3058:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    305c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3060:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3064:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    3068:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    306c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3070:	2f632f74 	svccs	0x00632f74
    3074:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3078:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    307c:	442f6162 	strtmi	r6, [pc], #-354	; 3084 <CPSR_IRQ_INHIBIT+0x3004>
    3080:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3084:	73746e65 	cmnvc	r4, #1616	; 0x650
    3088:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    308c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3090:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3094:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3098:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    309c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    30a0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    30a4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    30a8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    30ac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    30b0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    30b4:	2f632f74 	svccs	0x00632f74
    30b8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    30bc:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    30c0:	442f6162 	strtmi	r6, [pc], #-354	; 30c8 <CPSR_IRQ_INHIBIT+0x3048>
    30c4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    30c8:	73746e65 	cmnvc	r4, #1616	; 0x650
    30cc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    30d0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    30d4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    30d8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    30dc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    30e0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    30e4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    30e8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    30ec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    30f0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    30f4:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    30f8:	0079726f 	rsbseq	r7, r9, pc, ror #4
    30fc:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3100:	552f632f 	strpl	r6, [pc, #-815]!	; 2dd9 <CPSR_IRQ_INHIBIT+0x2d59>
    3104:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3108:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    310c:	6f442f61 	svcvs	0x00442f61
    3110:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3114:	2f73746e 	svccs	0x0073746e
    3118:	6f72655a 	svcvs	0x0072655a
    311c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3120:	6178652f 	cmnvs	r8, pc, lsr #10
    3124:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3128:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    312c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3130:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3134:	2f6c656e 	svccs	0x006c656e
    3138:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    313c:	2f656475 	svccs	0x00656475
    3140:	636f7270 	cmnvs	pc, #112, 4
    3144:	00737365 	rsbseq	r7, r3, r5, ror #6
    3148:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    314c:	552f632f 	strpl	r6, [pc, #-815]!	; 2e25 <CPSR_IRQ_INHIBIT+0x2da5>
    3150:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3154:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3158:	6f442f61 	svcvs	0x00442f61
    315c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3160:	2f73746e 	svccs	0x0073746e
    3164:	6f72655a 	svcvs	0x0072655a
    3168:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    316c:	6178652f 	cmnvs	r8, pc, lsr #10
    3170:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3174:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3178:	4332492d 	teqmi	r2, #737280	; 0xb4000
    317c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3180:	2f6c656e 	svccs	0x006c656e
    3184:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3188:	2f656475 	svccs	0x00656475
    318c:	00007366 	andeq	r7, r0, r6, ror #6
    3190:	6e69616d 	powvsez	f6, f1, #5.0
    3194:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    3198:	00000100 	andeq	r0, r0, r0, lsl #2
    319c:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    31a0:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    31a4:	00000200 	andeq	r0, r0, r0, lsl #4
    31a8:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    31ac:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    31b0:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    31b4:	00020068 	andeq	r0, r2, r8, rrx
    31b8:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    31bc:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    31c0:	00000300 	andeq	r0, r0, r0, lsl #6
    31c4:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    31c8:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    31cc:	00030068 	andeq	r0, r3, r8, rrx
    31d0:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    31d4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    31d8:	635f7470 	cmpvs	pc, #112, 8	; 0x70000000
    31dc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    31e0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    31e4:	00682e72 	rsbeq	r2, r8, r2, ror lr
    31e8:	6d000004 	stcvs	0, cr0, [r0, #-16]
    31ec:	616d6d65 	cmnvs	sp, r5, ror #26
    31f0:	00682e70 	rsbeq	r2, r8, r0, ror lr
    31f4:	70000005 	andvc	r0, r0, r5
    31f8:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    31fc:	682e7373 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
    3200:	00000600 	andeq	r0, r0, r0, lsl #12
    3204:	2e697773 	mcrcs	7, 3, r7, cr9, cr3, {3}
    3208:	00060068 	andeq	r0, r6, r8, rrx
    320c:	6c696600 	stclvs	6, cr6, [r9], #-0
    3210:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    3214:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    3218:	00070068 	andeq	r0, r7, r8, rrx
    321c:	6f727000 	svcvs	0x00727000
    3220:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3224:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    3228:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    322c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    3230:	05000000 	streq	r0, [r0, #-0]
    3234:	02050001 	andeq	r0, r5, #1
    3238:	0000d7a0 	andeq	sp, r0, r0, lsr #15
    323c:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    3240:	01054b19 	tsteq	r5, r9, lsl fp
    3244:	660b034b 	strvs	r0, [fp], -fp, asr #6
    3248:	0b031305 	bleq	c7e64 <_bss_end+0xb61b4>
    324c:	4d1b054a 	cfldr32mi	mvfx0, [fp, #-296]	; 0xfffffed8
    3250:	894f1f05 	stmdbhi	pc, {r0, r2, r8, r9, sl, fp, ip}^	; <UNPREDICTABLE>
    3254:	05852405 	streq	r2, [r5, #1029]	; 0x405
    3258:	23056912 	movwcs	r6, #22802	; 0x5912
    325c:	690f05a1 	stmdbvs	pc, {r0, r5, r7, r8, sl}	; <UNPREDICTABLE>
    3260:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3264:	02310104 	eorseq	r0, r1, #4, 2
    3268:	01010012 	tsteq	r1, r2, lsl r0
    326c:	0000028c 	andeq	r0, r0, ip, lsl #5
    3270:	01500003 	cmpeq	r0, r3
    3274:	01020000 	mrseq	r0, (UNDEF: 2)
    3278:	000d0efb 	strdeq	r0, [sp], -fp
    327c:	01010101 	tsteq	r1, r1, lsl #2
    3280:	01000000 	mrseq	r0, (UNDEF: 0)
    3284:	2f010000 	svccs	0x00010000
    3288:	2f746e6d 	svccs	0x00746e6d
    328c:	73552f63 	cmpvc	r5, #396	; 0x18c
    3290:	2f737265 	svccs	0x00737265
    3294:	6162754b 	cmnvs	r2, fp, asr #10
    3298:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    329c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    32a0:	5a2f7374 	bpl	be0078 <_bss_end+0xbce3c8>
    32a4:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3118 <CPSR_IRQ_INHIBIT+0x3098>
    32a8:	2f657461 	svccs	0x00657461
    32ac:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    32b0:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    32b4:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    32b8:	2f433249 	svccs	0x00433249
    32bc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    32c0:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    32c4:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 3104 <CPSR_IRQ_INHIBIT+0x3084>
    32c8:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    32cc:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 30f0 <CPSR_IRQ_INHIBIT+0x3070>
    32d0:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    32d4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    32d8:	4b2f7372 	blmi	be00a8 <_bss_end+0xbce3f8>
    32dc:	2f616275 	svccs	0x00616275
    32e0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    32e4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    32e8:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    32ec:	614d6f72 	hvcvs	55026	; 0xd6f2
    32f0:	652f6574 	strvs	r6, [pc, #-1396]!	; 2d84 <CPSR_IRQ_INHIBIT+0x2d04>
    32f4:	706d6178 	rsbvc	r6, sp, r8, ror r1
    32f8:	2f73656c 	svccs	0x0073656c
    32fc:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3300:	6b2f4332 	blvs	bd3fd0 <_bss_end+0xbc2320>
    3304:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3308:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    330c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3310:	6f622f65 	svcvs	0x00622f65
    3314:	2f647261 	svccs	0x00647261
    3318:	30697072 	rsbcc	r7, r9, r2, ror r0
    331c:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    3320:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3324:	2f632f74 	svccs	0x00632f74
    3328:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    332c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3330:	442f6162 	strtmi	r6, [pc], #-354	; 3338 <CPSR_IRQ_INHIBIT+0x32b8>
    3334:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3338:	73746e65 	cmnvc	r4, #1616	; 0x650
    333c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3340:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3344:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3348:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    334c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3350:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3354:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3358:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    335c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3360:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3364:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    3368:	0079726f 	rsbseq	r7, r9, pc, ror #4
    336c:	72656b00 	rsbvc	r6, r5, #0, 22
    3370:	5f6c656e 	svcpl	0x006c656e
    3374:	70616568 	rsbvc	r6, r1, r8, ror #10
    3378:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    337c:	00000100 	andeq	r0, r0, r0, lsl #2
    3380:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    3384:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    3388:	00000200 	andeq	r0, r0, r0, lsl #4
    338c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3390:	685f6c65 	ldmdavs	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    3394:	2e706165 	rpwcssz	f6, f0, f5
    3398:	00030068 	andeq	r0, r3, r8, rrx
    339c:	72657000 	rsbvc	r7, r5, #0
    33a0:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    33a4:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    33a8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    33ac:	656d0000 	strbvs	r0, [sp, #-0]!
    33b0:	70616d6d 	rsbvc	r6, r1, sp, ror #26
    33b4:	0300682e 	movweq	r6, #2094	; 0x82e
    33b8:	61700000 	cmnvs	r0, r0
    33bc:	2e736567 	cdpcs	5, 7, cr6, cr3, cr7, {3}
    33c0:	00030068 	andeq	r0, r3, r8, rrx
    33c4:	01050000 	mrseq	r0, (UNDEF: 5)
    33c8:	48020500 	stmdami	r2, {r8, sl}
    33cc:	170000d8 			; <UNDEFINED> instruction: 0x170000d8
    33d0:	05861d05 	streq	r1, [r6, #3333]	; 0xd05
    33d4:	0105660c 	tsteq	r5, ip, lsl #12
    33d8:	6d05854b 	cfstr32vs	mvfx8, [r5, #-300]	; 0xfffffed4
    33dc:	666f0583 	strbtvs	r0, [pc], -r3, lsl #11
    33e0:	672f1105 	strvs	r1, [pc, -r5, lsl #2]!
    33e4:	68140567 	ldmdavs	r4, {r0, r1, r2, r5, r6, r8, sl}
    33e8:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
    33ec:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
    33f0:	1d059f20 	stcne	15, cr9, [r5, #-128]	; 0xffffff80
    33f4:	0029056a 	eoreq	r0, r9, sl, ror #10
    33f8:	66010402 	strvs	r0, [r1], -r2, lsl #8
    33fc:	02001d05 	andeq	r1, r0, #320	; 0x140
    3400:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3404:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    3408:	31054a02 	tstcc	r5, r2, lsl #20
    340c:	02040200 	andeq	r0, r4, #0, 4
    3410:	680f054a 	stmdavs	pc, {r1, r3, r6, r8, sl}	; <UNPREDICTABLE>
    3414:	33640505 	cmncc	r4, #20971520	; 0x1400000
    3418:	506a1005 	rsbpl	r1, sl, r5
    341c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    3420:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    3424:	58056601 	stmdapl	r5, {r0, r9, sl, sp, lr}
    3428:	01040200 	mrseq	r0, R12_usr
    342c:	001d054a 	andseq	r0, sp, sl, asr #10
    3430:	4a010402 	bmi	44440 <_bss_end+0x32790>
    3434:	054c1805 	strbeq	r1, [ip, #-2053]	; 0xfffff7fb
    3438:	4b056830 	blmi	15d500 <_bss_end+0x14b850>
    343c:	4920056d 	stmdbmi	r0!, {r0, r2, r3, r5, r6, r8, sl}
    3440:	05691905 	strbeq	r1, [r9, #-2309]!	; 0xfffff6fb
    3444:	25054a1e 	strcs	r4, [r5, #-2590]	; 0xfffff5e2
    3448:	2e10054a 	cfmac32cs	mvfx0, mvfx0, mvfx10
    344c:	6719054c 	ldrvs	r0, [r9, -ip, asr #10]
    3450:	054a1005 	strbeq	r1, [sl, #-5]
    3454:	11054b13 	tstne	r5, r3, lsl fp
    3458:	14056867 	strne	r6, [r5], #-2151	; 0xfffff799
    345c:	692c0567 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, sl}
    3460:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
    3464:	059f2005 	ldreq	r2, [pc, #5]	; 3471 <CPSR_IRQ_INHIBIT+0x33f1>
    3468:	10056914 	andne	r6, r5, r4, lsl r9
    346c:	4a050569 	bmi	144a18 <_bss_end+0x132d68>
    3470:	02001f05 	andeq	r1, r0, #5, 30
    3474:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3478:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    347c:	15054a01 	strne	r4, [r5, #-2561]	; 0xfffff5ff
    3480:	01040200 	mrseq	r0, R12_usr
    3484:	1f054c2e 	svcne	0x00054c2e
    3488:	4a25054a 	bmi	9449b8 <_bss_end+0x932d08>
    348c:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    3490:	2405831e 	strcs	r8, [r5], #-798	; 0xfffffce2
    3494:	2e15054a 	cfmac32cs	mvfx0, mvfx5, mvfx10
    3498:	054b1005 	strbeq	r1, [fp, #-5]
    349c:	10054a1b 	andne	r4, r5, fp, lsl sl
    34a0:	4a05054e 	bmi	1449e0 <_bss_end+0x132d30>
    34a4:	02001f05 	andeq	r1, r0, #5, 30
    34a8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    34ac:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    34b0:	15054a01 	strne	r4, [r5, #-2561]	; 0xfffff5ff
    34b4:	01040200 	mrseq	r0, R12_usr
    34b8:	4c10052e 	cfldr32mi	mvfx0, [r0], {46}	; 0x2e
    34bc:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    34c0:	1b052e25 	blne	14ed5c <_bss_end+0x13d0ac>
    34c4:	2e10054a 	cfmac32cs	mvfx0, mvfx0, mvfx10
    34c8:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    34cc:	24054b10 	strcs	r4, [r5], #-2832	; 0xfffff4f0
    34d0:	4a1b054a 	bmi	6c4a00 <_bss_end+0x6b2d50>
    34d4:	052f1005 	streq	r1, [pc, #-5]!	; 34d7 <CPSR_IRQ_INHIBIT+0x3457>
    34d8:	1b054a24 	blne	155d70 <_bss_end+0x1440c0>
    34dc:	3001054a 	andcc	r0, r1, sl, asr #10
    34e0:	02009e82 	andeq	r9, r0, #2080	; 0x820
    34e4:	66060104 	strvs	r0, [r6], -r4, lsl #2
    34e8:	03061605 	movweq	r1, #26117	; 0x6605
    34ec:	05827fa5 	streq	r7, [r2, #4005]	; 0xfa5
    34f0:	00db0301 	sbcseq	r0, fp, r1, lsl #6
    34f4:	024a9e4a 	subeq	r9, sl, #1184	; 0x4a0
    34f8:	0101000a 	tsteq	r1, sl
    34fc:	00000201 	andeq	r0, r0, r1, lsl #4
    3500:	01390003 	teqeq	r9, r3
    3504:	01020000 	mrseq	r0, (UNDEF: 2)
    3508:	000d0efb 	strdeq	r0, [sp], -fp
    350c:	01010101 	tsteq	r1, r1, lsl #2
    3510:	01000000 	mrseq	r0, (UNDEF: 0)
    3514:	2f010000 	svccs	0x00010000
    3518:	2f746e6d 	svccs	0x00746e6d
    351c:	73552f63 	cmpvc	r5, #396	; 0x18c
    3520:	2f737265 	svccs	0x00737265
    3524:	6162754b 	cmnvs	r2, fp, asr #10
    3528:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    352c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3530:	5a2f7374 	bpl	be0308 <_bss_end+0xbce658>
    3534:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 33a8 <CPSR_IRQ_INHIBIT+0x3328>
    3538:	2f657461 	svccs	0x00657461
    353c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3540:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3544:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3548:	2f433249 	svccs	0x00433249
    354c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3550:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    3554:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 3394 <CPSR_IRQ_INHIBIT+0x3314>
    3558:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    355c:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 3380 <CPSR_IRQ_INHIBIT+0x3300>
    3560:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3564:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3568:	4b2f7372 	blmi	be0338 <_bss_end+0xbce688>
    356c:	2f616275 	svccs	0x00616275
    3570:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3574:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3578:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    357c:	614d6f72 	hvcvs	55026	; 0xd6f2
    3580:	652f6574 	strvs	r6, [pc, #-1396]!	; 3014 <CPSR_IRQ_INHIBIT+0x2f94>
    3584:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3588:	2f73656c 	svccs	0x0073656c
    358c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3590:	6b2f4332 	blvs	bd4260 <_bss_end+0xbc25b0>
    3594:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3598:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    359c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    35a0:	6f622f65 	svcvs	0x00622f65
    35a4:	2f647261 	svccs	0x00647261
    35a8:	30697072 	rsbcc	r7, r9, r2, ror r0
    35ac:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    35b0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    35b4:	2f632f74 	svccs	0x00632f74
    35b8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    35bc:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    35c0:	442f6162 	strtmi	r6, [pc], #-354	; 35c8 <CPSR_IRQ_INHIBIT+0x3548>
    35c4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    35c8:	73746e65 	cmnvc	r4, #1616	; 0x650
    35cc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    35d0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    35d4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    35d8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    35dc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    35e0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    35e4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    35e8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    35ec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    35f0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    35f4:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    35f8:	0079726f 	rsbseq	r7, r9, pc, ror #4
    35fc:	67617000 	strbvs	r7, [r1, -r0]!
    3600:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    3604:	01007070 	tsteq	r0, r0, ror r0
    3608:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    360c:	66656474 			; <UNDEFINED> instruction: 0x66656474
    3610:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3614:	65700000 	ldrbvs	r0, [r0, #-0]!
    3618:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    361c:	6c617265 	sfmvs	f7, 2, [r1], #-404	; 0xfffffe6c
    3620:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3624:	6d000002 	stcvs	0, cr0, [r0, #-8]
    3628:	616d6d65 	cmnvs	sp, r5, ror #26
    362c:	00682e70 	rsbeq	r2, r8, r0, ror lr
    3630:	70000003 	andvc	r0, r0, r3
    3634:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    3638:	0300682e 	movweq	r6, #2094	; 0x82e
    363c:	05000000 	streq	r0, [r0, #-0]
    3640:	02050001 	andeq	r0, r5, #1
    3644:	0000dbb4 			; <UNDEFINED> instruction: 0x0000dbb4
    3648:	850e0516 	strhi	r0, [lr, #-1302]	; 0xfffffaea
    364c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    3650:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    3654:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    3658:	19052e03 	stmdbne	r5, {r0, r1, r9, sl, fp, sp}
    365c:	02040200 	andeq	r0, r4, #0, 4
    3660:	00050567 	andeq	r0, r5, r7, ror #10
    3664:	9d020402 	cfstrsls	mvf0, [r2, #-8]
    3668:	bd860105 	stflts	f0, [r6, #20]
    366c:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
    3670:	2405671f 	strcs	r6, [r5], #-1823	; 0xfffff8e1
    3674:	6636054a 	ldrtvs	r0, [r6], -sl, asr #10
    3678:	054a2905 	strbeq	r2, [sl, #-2309]	; 0xfffff6fb
    367c:	01054a24 	tsteq	r5, r4, lsr #20
    3680:	2d1f05bd 	cfldr32cs	mvfx0, [pc, #-756]	; 3394 <CPSR_IRQ_INHIBIT+0x3314>
    3684:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    3688:	2b056638 	blcs	15cf70 <_bss_end+0x14b2c0>
    368c:	4a24054a 	bmi	904bbc <_bss_end+0x8f2f0c>
    3690:	85f30105 	ldrbhi	r0, [r3, #261]!	; 0x105
    3694:	05890c05 	streq	r0, [r9, #3077]	; 0xc05
    3698:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    369c:	1b054a01 	blne	155ea8 <_bss_end+0x1441f8>
    36a0:	82090585 	andhi	r0, r9, #557842432	; 0x21400000
    36a4:	054d1405 	strbeq	r1, [sp, #-1029]	; 0xfffffbfb
    36a8:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    36ac:	24054a01 	strcs	r4, [r5], #-2561	; 0xfffff5ff
    36b0:	9e320568 	cdpls	5, 3, cr0, cr2, cr8, {3}
    36b4:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    36b8:	24054d31 	strcs	r4, [r5], #-3377	; 0xfffff2cf
    36bc:	6719054a 	ldrvs	r0, [r9, -sl, asr #10]
    36c0:	05832b05 	streq	r2, [r3, #2821]	; 0xb05
    36c4:	0d054a3d 	vstreq	s8, [r5, #-244]	; 0xffffff0c
    36c8:	02040200 	andeq	r0, r4, #0, 4
    36cc:	054a7903 	strbeq	r7, [sl, #-2307]	; 0xfffff6fd
    36d0:	04020005 	streq	r0, [r2], #-5
    36d4:	827a0302 	rsbshi	r0, sl, #134217728	; 0x8000000
    36d8:	13030c05 	movwne	r0, #15365	; 0x3c05
    36dc:	2f010582 	svccs	0x00010582
    36e0:	a1090585 	smlabbge	r9, r5, r5, r0
    36e4:	66bb0105 	ldrtvs	r0, [fp], r5, lsl #2
    36e8:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    36ec:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    36f0:	4a03060f 	bmi	c4f34 <_bss_end+0xb3284>
    36f4:	03010582 	movweq	r0, #5506	; 0x1582
    36f8:	4a9e4a36 	bmi	fe795fd8 <_bss_end+0xfe784328>
    36fc:	01000a02 	tsteq	r0, r2, lsl #20
    3700:	0006da01 	andeq	sp, r6, r1, lsl #20
    3704:	7c000300 	stcvc	3, cr0, [r0], {-0}
    3708:	02000002 	andeq	r0, r0, #2
    370c:	0d0efb01 	vstreq	d15, [lr, #-4]
    3710:	01010100 	mrseq	r0, (UNDEF: 17)
    3714:	00000001 	andeq	r0, r0, r1
    3718:	01000001 	tsteq	r0, r1
    371c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3720:	552f632f 	strpl	r6, [pc, #-815]!	; 33f9 <CPSR_IRQ_INHIBIT+0x3379>
    3724:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3728:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    372c:	6f442f61 	svcvs	0x00442f61
    3730:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3734:	2f73746e 	svccs	0x0073746e
    3738:	6f72655a 	svcvs	0x0072655a
    373c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3740:	6178652f 	cmnvs	r8, pc, lsr #10
    3744:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3748:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    374c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3750:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3754:	2f6c656e 	svccs	0x006c656e
    3758:	2f637273 	svccs	0x00637273
    375c:	636f7270 	cmnvs	pc, #112, 4
    3760:	00737365 	rsbseq	r7, r3, r5, ror #6
    3764:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3768:	552f632f 	strpl	r6, [pc, #-815]!	; 3441 <CPSR_IRQ_INHIBIT+0x33c1>
    376c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3770:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3774:	6f442f61 	svcvs	0x00442f61
    3778:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    377c:	2f73746e 	svccs	0x0073746e
    3780:	6f72655a 	svcvs	0x0072655a
    3784:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3788:	6178652f 	cmnvs	r8, pc, lsr #10
    378c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3790:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3794:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3798:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    379c:	2f6c656e 	svccs	0x006c656e
    37a0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    37a4:	2f656475 	svccs	0x00656475
    37a8:	6f6d656d 	svcvs	0x006d656d
    37ac:	2f007972 	svccs	0x00007972
    37b0:	2f746e6d 	svccs	0x00746e6d
    37b4:	73552f63 	cmpvc	r5, #396	; 0x18c
    37b8:	2f737265 	svccs	0x00737265
    37bc:	6162754b 	cmnvs	r2, fp, asr #10
    37c0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    37c4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    37c8:	5a2f7374 	bpl	be05a0 <_bss_end+0xbce8f0>
    37cc:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3640 <CPSR_IRQ_INHIBIT+0x35c0>
    37d0:	2f657461 	svccs	0x00657461
    37d4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    37d8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    37dc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    37e0:	2f433249 	svccs	0x00433249
    37e4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    37e8:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    37ec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    37f0:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    37f4:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    37f8:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    37fc:	61682f30 	cmnvs	r8, r0, lsr pc
    3800:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 3658 <CPSR_IRQ_INHIBIT+0x35d8>
    3804:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3808:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    380c:	4b2f7372 	blmi	be05dc <_bss_end+0xbce92c>
    3810:	2f616275 	svccs	0x00616275
    3814:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3818:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    381c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3820:	614d6f72 	hvcvs	55026	; 0xd6f2
    3824:	652f6574 	strvs	r6, [pc, #-1396]!	; 32b8 <CPSR_IRQ_INHIBIT+0x3238>
    3828:	706d6178 	rsbvc	r6, sp, r8, ror r1
    382c:	2f73656c 	svccs	0x0073656c
    3830:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3834:	6b2f4332 	blvs	bd4504 <_bss_end+0xbc2854>
    3838:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    383c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    3840:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3844:	72702f65 	rsbsvc	r2, r0, #404	; 0x194
    3848:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    384c:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 3688 <CPSR_IRQ_INHIBIT+0x3608>
    3850:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3854:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3858:	4b2f7372 	blmi	be0628 <_bss_end+0xbce978>
    385c:	2f616275 	svccs	0x00616275
    3860:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3864:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3868:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    386c:	614d6f72 	hvcvs	55026	; 0xd6f2
    3870:	652f6574 	strvs	r6, [pc, #-1396]!	; 3304 <CPSR_IRQ_INHIBIT+0x3284>
    3874:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3878:	2f73656c 	svccs	0x0073656c
    387c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3880:	6b2f4332 	blvs	bd4550 <_bss_end+0xbc28a0>
    3884:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3888:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    388c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3890:	73662f65 	cmnvc	r6, #404	; 0x194
    3894:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3898:	2f632f74 	svccs	0x00632f74
    389c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    38a0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    38a4:	442f6162 	strtmi	r6, [pc], #-354	; 38ac <CPSR_IRQ_INHIBIT+0x382c>
    38a8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    38ac:	73746e65 	cmnvc	r4, #1616	; 0x650
    38b0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    38b4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    38b8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    38bc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    38c0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    38c4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    38c8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    38cc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    38d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    38d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    38d8:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    38dc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    38e0:	72700000 	rsbsvc	r0, r0, #0
    38e4:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    38e8:	616d5f73 	smcvs	54771	; 0xd5f3
    38ec:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    38f0:	70632e72 	rsbvc	r2, r3, r2, ror lr
    38f4:	00010070 	andeq	r0, r1, r0, ror r0
    38f8:	72656b00 	rsbvc	r6, r5, #0, 22
    38fc:	5f6c656e 	svcpl	0x006c656e
    3900:	70616568 	rsbvc	r6, r1, r8, ror #10
    3904:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3908:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    390c:	66656474 			; <UNDEFINED> instruction: 0x66656474
    3910:	0300682e 	movweq	r6, #2094	; 0x82e
    3914:	72700000 	rsbsvc	r0, r0, #0
    3918:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    391c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3920:	66000004 	strvs	r0, [r0], -r4
    3924:	73656c69 	cmnvc	r5, #26880	; 0x6900
    3928:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    392c:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    3930:	73000005 	movwvc	r0, #5
    3934:	682e6977 	stmdavs	lr!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}
    3938:	00000400 	andeq	r0, r0, r0, lsl #8
    393c:	636f7270 	cmnvs	pc, #112, 4
    3940:	5f737365 	svcpl	0x00737365
    3944:	616e616d 	cmnvs	lr, sp, ror #2
    3948:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    394c:	00040068 	andeq	r0, r4, r8, rrx
    3950:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    3954:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    3958:	0600682e 	streq	r6, [r0], -lr, lsr #16
    395c:	65700000 	ldrbvs	r0, [r0, #-0]!
    3960:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3964:	6c617265 	sfmvs	f7, 2, [r1], #-404	; 0xfffffe6c
    3968:	00682e73 	rsbeq	r2, r8, r3, ror lr
    396c:	6d000003 	stcvs	0, cr0, [r0, #-12]
    3970:	616d6d65 	cmnvs	sp, r5, ror #26
    3974:	00682e70 	rsbeq	r2, r8, r0, ror lr
    3978:	70000002 	andvc	r0, r0, r2
    397c:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    3980:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3984:	05000000 	streq	r0, [r0, #-0]
    3988:	02050001 	andeq	r0, r5, #1
    398c:	0000de58 	andeq	sp, r0, r8, asr lr
    3990:	05011303 	streq	r1, [r1, #-771]	; 0xfffffcfd
    3994:	0105851d 	tsteq	r5, sp, lsl r5
    3998:	05a12308 	streq	r2, [r1, #776]!	; 0x308
    399c:	1f05830c 	svcne	0x0005830c
    39a0:	0021054a 	eoreq	r0, r1, sl, asr #10
    39a4:	4a010402 	bmi	449b4 <_bss_end+0x32d04>
    39a8:	02001f05 	andeq	r1, r0, #5, 30
    39ac:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    39b0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    39b4:	1f052e01 	svcne	0x00052e01
    39b8:	02040200 	andeq	r0, r4, #0, 4
    39bc:	0001052e 	andeq	r0, r1, lr, lsr #10
    39c0:	2f050402 	svccs	0x00050402
    39c4:	83480585 	movthi	r0, #34181	; 0x8585
    39c8:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    39cc:	054b4a14 	strbeq	r4, [fp, #-2580]	; 0xfffff5ec
    39d0:	1e056705 	cdpne	7, 0, cr6, cr5, cr5, {0}
    39d4:	4c34054a 	cfldr32mi	mvfx0, [r4], #-296	; 0xfffffed8
    39d8:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    39dc:	13054c0b 	movwne	r4, #23563	; 0x5c0b
    39e0:	4a110568 	bmi	444f88 <_bss_end+0x4332d8>
    39e4:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    39e8:	0f054a13 	svceq	0x00054a13
    39ec:	4b21054a 	blmi	844f1c <_bss_end+0x83326c>
    39f0:	4a190568 	bmi	644f98 <_bss_end+0x6332e8>
    39f4:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    39f8:	1c056813 	stcne	8, cr6, [r5], {19}
    39fc:	03040200 	movweq	r0, #16896	; 0x4200
    3a00:	001f054a 	andseq	r0, pc, sl, asr #10
    3a04:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    3a08:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3a0c:	05d50204 	ldrbeq	r0, [r5, #516]	; 0x204
    3a10:	1805851a 	stmdane	r5, {r1, r3, r4, r8, sl, pc}
    3a14:	4b01054a 	blmi	44f44 <_bss_end+0x33294>
    3a18:	9f480585 	svcls	0x00480585
    3a1c:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    3a20:	054b4a14 	strbeq	r4, [fp, #-2580]	; 0xfffff5ec
    3a24:	1e056705 	cdpne	7, 0, cr6, cr5, cr5, {0}
    3a28:	4b18054a 	blmi	604f58 <_bss_end+0x5f32a8>
    3a2c:	05680905 	strbeq	r0, [r8, #-2309]!	; 0xfffff6fb
    3a30:	1c054a05 			; <UNDEFINED> instruction: 0x1c054a05
    3a34:	6934054c 	ldmdbvs	r4!, {r2, r3, r6, r8, sl}
    3a38:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    3a3c:	13054c0b 	movwne	r4, #23563	; 0x5c0b
    3a40:	4a110568 	bmi	444fe8 <_bss_end+0x433338>
    3a44:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    3a48:	0f054a13 	svceq	0x00054a13
    3a4c:	4b21054a 	blmi	844f7c <_bss_end+0x8332cc>
    3a50:	4a190568 	bmi	644ff8 <_bss_end+0x633348>
    3a54:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    3a58:	0567681a 	strbeq	r6, [r7, #-2074]!	; 0xfffff7e6
    3a5c:	5305674f 	movwpl	r6, #22351	; 0x574f
    3a60:	2e1a0566 	cfmsc32cs	mvfx0, mvfx10, mvfx6
    3a64:	054c1305 	strbeq	r1, [ip, #-773]	; 0xfffffcfb
    3a68:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    3a6c:	1f054a03 	svcne	0x00054a03
    3a70:	02040200 	andeq	r0, r4, #0, 4
    3a74:	00050567 	andeq	r0, r5, r7, ror #10
    3a78:	d5020402 	strle	r0, [r2, #-1026]	; 0xfffffbfe
    3a7c:	05851105 	streq	r1, [r5, #261]	; 0x105
    3a80:	4b058244 	blmi	164398 <_bss_end+0x1526e8>
    3a84:	831105ba 	tsthi	r1, #780140544	; 0x2e800000
    3a88:	05823605 	streq	r3, [r2, #1541]	; 0x605
    3a8c:	6305825d 	movwvs	r8, #21085	; 0x525d
    3a90:	681205ba 	ldmdavs	r2, {r1, r3, r4, r5, r7, r8, sl}
    3a94:	084b0105 	stmdaeq	fp, {r0, r2, r8}^
    3a98:	8409055b 	strhi	r0, [r9], #-1371	; 0xfffffaa5
    3a9c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    3aa0:	1d054d09 	stcne	13, cr4, [r5, #-36]	; 0xffffffdc
    3aa4:	2e23054a 	cfsh64cs	mvdx0, mvdx3, #42
    3aa8:	052e3005 	streq	r3, [lr, #-5]!
    3aac:	21054d0d 	tstcs	r5, sp, lsl #26
    3ab0:	2e27054a 	cfsh64cs	mvdx0, mvdx7, #42
    3ab4:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    3ab8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    3abc:	50054a01 	andpl	r4, r5, r1, lsl #20
    3ac0:	01040200 	mrseq	r0, R12_usr
    3ac4:	0056054a 	subseq	r0, r6, sl, asr #10
    3ac8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3acc:	02003905 	andeq	r3, r0, #81920	; 0x14000
    3ad0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3ad4:	33055120 	movwcc	r5, #20768	; 0x5120
    3ad8:	0035054a 	eorseq	r0, r5, sl, asr #10
    3adc:	4a010402 	bmi	44aec <_bss_end+0x32e3c>
    3ae0:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    3ae4:	004a0104 	subeq	r0, sl, r4, lsl #2
    3ae8:	06020402 	streq	r0, [r2], -r2, lsl #8
    3aec:	0019054a 	andseq	r0, r9, sl, asr #10
    3af0:	06040402 	streq	r0, [r4], -r2, lsl #8
    3af4:	0005054a 	andeq	r0, r5, sl, asr #10
    3af8:	2f040402 	svccs	0x00040402
    3afc:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    3b00:	18056a12 	stmdane	r5, {r1, r4, r9, fp, sp, lr}
    3b04:	2e64054a 	cdpcs	5, 6, cr0, cr4, cr10, {2}
    3b08:	02004005 	andeq	r4, r0, #5
    3b0c:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3b10:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    3b14:	37054a01 	strcc	r4, [r5, -r1, lsl #20]
    3b18:	01040200 	mrseq	r0, R12_usr
    3b1c:	0012052e 	andseq	r0, r2, lr, lsr #10
    3b20:	4b020402 	blmi	84b30 <_bss_end+0x72e80>
    3b24:	02001805 	andeq	r1, r0, #327680	; 0x50000
    3b28:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    3b2c:	04020064 	streq	r0, [r2], #-100	; 0xffffff9c
    3b30:	09052d02 	stmdbeq	r5, {r1, r8, sl, fp, sp}
    3b34:	6812054d 	ldmdavs	r2, {r0, r2, r3, r6, r8, sl}
    3b38:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
    3b3c:	05053112 	streq	r3, [r5, #-274]	; 0xfffffeee
    3b40:	05667703 	strbeq	r7, [r6, #-1795]!	; 0xfffff8fd
    3b44:	2e0d0311 	mcrcs	3, 0, r0, cr13, cr1, {0}
    3b48:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    3b4c:	47056933 	smladxmi	r5, r3, r9, r6
    3b50:	2e09054a 	cfsh32cs	mvfx0, mvfx9, #42
    3b54:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    3b58:	31052e4d 	tstcc	r5, sp, asr #28
    3b5c:	2f09052e 	svccs	0x0009052e
    3b60:	05310e05 	ldreq	r0, [r1, #-3589]!	; 0xfffff1fb
    3b64:	8260030d 	rsbhi	r0, r0, #872415232	; 0x34000000
    3b68:	21030105 	tstcs	r3, r5, lsl #2
    3b6c:	09054d2e 	stmdbeq	r5, {r1, r2, r3, r5, r8, sl, fp, lr}
    3b70:	4a1d05a1 	bmi	7451fc <_bss_end+0x73354c>
    3b74:	052e2305 	streq	r2, [lr, #-773]!	; 0xfffffcfb
    3b78:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    3b7c:	4a1d054b 	bmi	7450b0 <_bss_end+0x733400>
    3b80:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    3b84:	19054d05 	stmdbne	r5, {r0, r2, r8, sl, fp, lr}
    3b88:	2e2d054a 	cfsh64cs	mvdx0, mvdx13, #42
    3b8c:	054c1a05 	strbeq	r1, [ip, #-2565]	; 0xfffff5fb
    3b90:	13054a2e 	movwne	r4, #23086	; 0x5a2e
    3b94:	2f21052e 	svccs	0x0021052e
    3b98:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    3b9c:	18052e0a 	stmdane	r5, {r1, r3, r9, sl, fp, sp}
    3ba0:	672f0585 	strvs	r0, [pc, -r5, lsl #11]!
    3ba4:	054a4305 	strbeq	r4, [sl, #-773]	; 0xfffffcfb
    3ba8:	19052e05 	stmdbne	r5, {r0, r2, r9, sl, fp, sp}
    3bac:	2e49054a 	cdpcs	5, 4, cr0, cr9, cr10, {2}
    3bb0:	052e2d05 	streq	r2, [lr, #-3333]!	; 0xfffff2fb
    3bb4:	19052f05 	stmdbne	r5, {r0, r2, r8, r9, sl, fp, sp}
    3bb8:	2e25054a 	cfsh64cs	mvdx0, mvdx5, #42
    3bbc:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    3bc0:	1d056725 	stcne	7, cr6, [r5, #-148]	; 0xffffff6c
    3bc4:	6901054a 	stmdbvs	r1, {r1, r3, r6, r8, sl}
    3bc8:	052d1f05 	streq	r1, [sp, #-3845]!	; 0xfffff0fb
    3bcc:	01054a17 	tsteq	r5, r7, lsl sl
    3bd0:	30056967 	andcc	r6, r5, r7, ror #18
    3bd4:	670505a1 	strvs	r0, [r5, -r1, lsr #11]
    3bd8:	05671005 	strbeq	r1, [r7, #-5]!
    3bdc:	1c054d13 	stcne	13, cr4, [r5], {19}
    3be0:	01040200 	mrseq	r0, R12_usr
    3be4:	6924054a 	stmdbvs	r4!, {r1, r3, r6, r8, sl}
    3be8:	05ba0905 	ldreq	r0, [sl, #2309]!	; 0x905
    3bec:	14054c26 	strne	r4, [r5], #-3110	; 0xfffff3da
    3bf0:	000505d7 	ldrdeq	r0, [r5], -r7
    3bf4:	03020402 	movweq	r0, #9218	; 0x2402
    3bf8:	0c054a7a 			; <UNDEFINED> instruction: 0x0c054a7a
    3bfc:	05820b03 	streq	r0, [r2, #2819]	; 0xb03
    3c00:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    3c04:	05059f30 	streq	r9, [r5, #-3888]	; 0xfffff0d0
    3c08:	00120567 	andseq	r0, r2, r7, ror #10
    3c0c:	66010402 	strvs	r0, [r1], -r2, lsl #8
    3c10:	05671005 	strbeq	r1, [r7, #-5]!
    3c14:	05054c26 	streq	r4, [r5, #-3110]	; 0xfffff3da
    3c18:	4b1005ba 	blmi	405308 <_bss_end+0x3f3658>
    3c1c:	054c2305 	strbeq	r2, [ip, #-773]	; 0xfffffcfb
    3c20:	0105d70c 	tsteq	r5, ip, lsl #14
    3c24:	0a056a2f 	beq	15e4e8 <_bss_end+0x14c838>
    3c28:	4a0505d8 	bmi	145390 <_bss_end+0x1336e0>
    3c2c:	6919054d 	ldmdbvs	r9, {r0, r2, r3, r6, r8, sl}
    3c30:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3c34:	17052e33 	smladxne	r5, r3, lr, r2
    3c38:	4b0d052e 	blmi	3450f8 <_bss_end+0x333448>
    3c3c:	7a030905 	bvc	c6058 <_bss_end+0xb43a8>
    3c40:	3601052e 	strcc	r0, [r1], -lr, lsr #10
    3c44:	d80a056a 	stmdale	sl, {r1, r3, r5, r6, r8, sl}
    3c48:	4d4a0505 	cfstr64mi	mvdx0, [sl, #-20]	; 0xffffffec
    3c4c:	23081705 	movwcs	r1, #34565	; 0x8705
    3c50:	05682805 	strbeq	r2, [r8, #-2053]!	; 0xfffff7fb
    3c54:	2c05bb0d 			; <UNDEFINED> instruction: 0x2c05bb0d
    3c58:	82170569 	andshi	r0, r7, #440401920	; 0x1a400000
    3c5c:	054d1805 	strbeq	r1, [sp, #-2053]	; 0xfffff7fb
    3c60:	1a054a0d 	bne	15649c <_bss_end+0x1447ec>
    3c64:	8219054c 	andshi	r0, r9, #76, 10	; 0x13000000
    3c68:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    3c6c:	18052e11 	stmdane	r5, {r0, r4, r9, sl, fp, sp}
    3c70:	01040200 	mrseq	r0, R12_usr
    3c74:	000d054a 	andeq	r0, sp, sl, asr #10
    3c78:	a0010402 	andge	r0, r1, r2, lsl #8
    3c7c:	05311705 	ldreq	r1, [r1, #-1797]!	; 0xfffff8fb
    3c80:	3305680d 	movwcc	r6, #22541	; 0x580d
    3c84:	01040200 	mrseq	r0, R12_usr
    3c88:	00470566 	subeq	r0, r7, r6, ror #10
    3c8c:	4a010402 	bmi	44c9c <_bss_end+0x32fec>
    3c90:	02005c05 	andeq	r5, r0, #1280	; 0x500
    3c94:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3c98:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3c9c:	19059e01 	stmdbne	r5, {r0, r9, sl, fp, ip, pc}
    3ca0:	4a2d054d 	bmi	b451dc <_bss_end+0xb3352c>
    3ca4:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3ca8:	2d059e19 	stccs	14, cr9, [r5, #-100]	; 0xffffff9c
    3cac:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3cb0:	059e6905 	ldreq	r6, [lr, #2309]	; 0x905
    3cb4:	17056649 	strne	r6, [r5, -r9, asr #12]
    3cb8:	4b0d0582 	blmi	3452c8 <_bss_end+0x333618>
    3cbc:	05311705 	ldreq	r1, [r1, #-1797]!	; 0xfffff8fb
    3cc0:	3305680d 	movwcc	r6, #22541	; 0x580d
    3cc4:	01040200 	mrseq	r0, R12_usr
    3cc8:	00470566 	subeq	r0, r7, r6, ror #10
    3ccc:	4a010402 	bmi	44cdc <_bss_end+0x3302c>
    3cd0:	02005c05 	andeq	r5, r0, #1280	; 0x500
    3cd4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3cd8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3cdc:	19059e01 	stmdbne	r5, {r0, r9, sl, fp, ip, pc}
    3ce0:	4a2d054d 	bmi	b4521c <_bss_end+0xb3356c>
    3ce4:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3ce8:	2d059e19 	stccs	14, cr9, [r5, #-100]	; 0xffffff9c
    3cec:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3cf0:	059e7005 	ldreq	r7, [lr, #5]
    3cf4:	1705664a 	strne	r6, [r5, -sl, asr #12]
    3cf8:	4b0d0582 	blmi	345308 <_bss_end+0x333658>
    3cfc:	00330531 	eorseq	r0, r3, r1, lsr r5
    3d00:	66010402 	strvs	r0, [r1], -r2, lsl #8
    3d04:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    3d08:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3d0c:	0402005c 	streq	r0, [r2], #-92	; 0xffffffa4
    3d10:	2f052e01 	svccs	0x00052e01
    3d14:	01040200 	mrseq	r0, R12_usr
    3d18:	4d19059e 	cfldr32mi	mvfx0, [r9, #-632]	; 0xfffffd88
    3d1c:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3d20:	19052e42 	stmdbne	r5, {r1, r6, r9, sl, fp, sp}
    3d24:	4a2d059e 	bmi	b453a4 <_bss_end+0xb336f4>
    3d28:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3d2c:	4a059e4b 	bmi	16b660 <_bss_end+0x1599b0>
    3d30:	82170566 	andshi	r0, r7, #427819008	; 0x19800000
    3d34:	054b1f05 	strbeq	r1, [fp, #-3845]	; 0xfffff0fb
    3d38:	0531680d 	ldreq	r6, [r1, #-2061]!	; 0xfffff7f3
    3d3c:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    3d40:	47056601 	strmi	r6, [r5, -r1, lsl #12]
    3d44:	01040200 	mrseq	r0, R12_usr
    3d48:	005c054a 	subseq	r0, ip, sl, asr #10
    3d4c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3d50:	02002f05 	andeq	r2, r0, #5, 30
    3d54:	059e0104 	ldreq	r0, [lr, #260]	; 0x104
    3d58:	2d054d19 	stccs	13, cr4, [r5, #-100]	; 0xffffff9c
    3d5c:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3d60:	059e1905 	ldreq	r1, [lr, #2309]	; 0x905
    3d64:	42054a2d 	andmi	r4, r5, #184320	; 0x2d000
    3d68:	9f66052e 	svcls	0x0066052e
    3d6c:	05654a05 	strbeq	r4, [r5, #-2565]!	; 0xfffff5fb
    3d70:	0d059e17 	stceq	14, cr9, [r5, #-92]	; 0xffffffa4
    3d74:	0309054c 	movweq	r0, #38220	; 0x954c
    3d78:	11052e4a 	tstne	r5, sl, asr #28
    3d7c:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    3d80:	4a0a030d 	bmi	2849bc <_bss_end+0x272d0c>
    3d84:	03501105 	cmpeq	r0, #1073741825	; 0x40000001
    3d88:	03514a09 	cmpeq	r1, #36864	; 0x9000
    3d8c:	01054a09 	tsteq	r5, r9, lsl #20
    3d90:	009e6635 	addseq	r6, lr, r5, lsr r6
    3d94:	06010402 	streq	r0, [r1], -r2, lsl #8
    3d98:	06120566 	ldreq	r0, [r2], -r6, ror #10
    3d9c:	827dfd03 	rsbshi	pc, sp, #3, 26	; 0xc0
    3da0:	83030105 	movwhi	r0, #12549	; 0x3105
    3da4:	4a9e4a02 	bmi	fe7965b4 <_bss_end+0xfe784904>
    3da8:	01000a02 	tsteq	r0, r2, lsl #20
    3dac:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3db0:	02050008 	andeq	r0, r5, #8
    3db4:	0000ea2c 	andeq	lr, r0, ip, lsr #20
    3db8:	05011d03 	streq	r1, [r1, #-3331]	; 0xfffff2fd
    3dbc:	0505842a 	streq	r8, [r5, #-1066]	; 0xfffffbd6
    3dc0:	00060283 	andeq	r0, r6, r3, lsl #5
    3dc4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3dc8:	05000805 	streq	r0, [r0, #-2053]	; 0xfffff7fb
    3dcc:	00ea5802 	rsceq	r5, sl, r2, lsl #16
    3dd0:	011d0300 	tsteq	sp, r0, lsl #6
    3dd4:	05842a05 	streq	r2, [r4, #2565]	; 0xa05
    3dd8:	06028305 	streq	r8, [r2], -r5, lsl #6
    3ddc:	90010100 	andls	r0, r1, r0, lsl #2
    3de0:	03000000 	movweq	r0, #0
    3de4:	00006700 	andeq	r6, r0, r0, lsl #14
    3de8:	fb010200 	blx	445f2 <_bss_end+0x32942>
    3dec:	01000d0e 	tsteq	r0, lr, lsl #26
    3df0:	00010101 	andeq	r0, r1, r1, lsl #2
    3df4:	00010000 	andeq	r0, r1, r0
    3df8:	6d2f0100 	stfvss	f0, [pc, #-0]	; 3e00 <CPSR_IRQ_INHIBIT+0x3d80>
    3dfc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3e00:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3e04:	4b2f7372 	blmi	be0bd4 <_bss_end+0xbcef24>
    3e08:	2f616275 	svccs	0x00616275
    3e0c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3e10:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3e14:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3e18:	614d6f72 	hvcvs	55026	; 0xd6f2
    3e1c:	652f6574 	strvs	r6, [pc, #-1396]!	; 38b0 <CPSR_IRQ_INHIBIT+0x3830>
    3e20:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3e24:	2f73656c 	svccs	0x0073656c
    3e28:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3e2c:	6b2f4332 	blvs	bd4afc <_bss_end+0xbc2e4c>
    3e30:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3e34:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3e38:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
    3e3c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3e40:	73000073 	movwvc	r0, #115	; 0x73
    3e44:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    3e48:	00732e68 	rsbseq	r2, r3, r8, ror #28
    3e4c:	00000001 	andeq	r0, r0, r1
    3e50:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    3e54:	160000ea 	strne	r0, [r0], -sl, ror #1
    3e58:	2f2f362f 	svccs	0x002f362f
    3e5c:	2f302f2f 	svccs	0x00302f2f
    3e60:	2f352f2f 	svccs	0x00352f2f
    3e64:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
    3e68:	2f2f2f2f 	svccs	0x002f2f2f
    3e6c:	02022f2f 	andeq	r2, r2, #47, 30	; 0xbc
    3e70:	c3010100 	movwgt	r0, #4352	; 0x1100
    3e74:	03000000 	movweq	r0, #0
    3e78:	00005e00 	andeq	r5, r0, r0, lsl #28
    3e7c:	fb010200 	blx	44686 <_bss_end+0x329d6>
    3e80:	01000d0e 	tsteq	r0, lr, lsl #26
    3e84:	00010101 	andeq	r0, r1, r1, lsl #2
    3e88:	00010000 	andeq	r0, r1, r0
    3e8c:	6d2f0100 	stfvss	f0, [pc, #-0]	; 3e94 <CPSR_IRQ_INHIBIT+0x3e14>
    3e90:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3e94:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3e98:	4b2f7372 	blmi	be0c68 <_bss_end+0xbcefb8>
    3e9c:	2f616275 	svccs	0x00616275
    3ea0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3ea4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3ea8:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3eac:	614d6f72 	hvcvs	55026	; 0xd6f2
    3eb0:	652f6574 	strvs	r6, [pc, #-1396]!	; 3944 <CPSR_IRQ_INHIBIT+0x38c4>
    3eb4:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3eb8:	2f73656c 	svccs	0x0073656c
    3ebc:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3ec0:	6b2f4332 	blvs	bd4b90 <_bss_end+0xbc2ee0>
    3ec4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3ec8:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3ecc:	73000063 	movwvc	r0, #99	; 0x63
    3ed0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3ed4:	0100732e 	tsteq	r0, lr, lsr #6
    3ed8:	00000000 	andeq	r0, r0, r0
    3edc:	80000205 	andhi	r0, r0, r5, lsl #4
    3ee0:	0d030000 	stceq	0, cr0, [r3, #-0]
    3ee4:	2f2f2f01 	svccs	0x002f2f01
    3ee8:	2f2f2f2f 	svccs	0x002f2f2f
    3eec:	20081f03 	andcs	r1, r8, r3, lsl #30
    3ef0:	2f2f322f 	svccs	0x002f322f
    3ef4:	2f31312f 	svccs	0x0031312f
    3ef8:	2f2f312f 	svccs	0x002f312f
    3efc:	312f2f31 			; <UNDEFINED> instruction: 0x312f2f31
    3f00:	2f312f2f 	svccs	0x00312f2f
    3f04:	2f2f302f 	svccs	0x002f302f
    3f08:	0202302f 	andeq	r3, r2, #47	; 0x2f
    3f0c:	00010100 	andeq	r0, r1, r0, lsl #2
    3f10:	eae00205 	b	ff80472c <_bss_end+0xff7f2a7c>
    3f14:	e5030000 	str	r0, [r3, #-0]
    3f18:	322f0100 	eorcc	r0, pc, #0, 2
    3f1c:	2f2f2f2f 	svccs	0x002f2f2f
    3f20:	2f323231 	svccs	0x00323231
    3f24:	2f2f2f2f 	svccs	0x002f2f2f
    3f28:	2f2f332f 	svccs	0x002f332f
    3f2c:	302f302f 	eorcc	r3, pc, pc, lsr #32
    3f30:	332f3030 			; <UNDEFINED> instruction: 0x332f3030
    3f34:	00020233 	andeq	r0, r2, r3, lsr r2
    3f38:	00e30101 	rsceq	r0, r3, r1, lsl #2
    3f3c:	00030000 	andeq	r0, r3, r0
    3f40:	00000062 	andeq	r0, r0, r2, rrx
    3f44:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    3f48:	0101000d 	tsteq	r1, sp
    3f4c:	00000101 	andeq	r0, r0, r1, lsl #2
    3f50:	00000100 	andeq	r0, r0, r0, lsl #2
    3f54:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    3f58:	2f632f74 	svccs	0x00632f74
    3f5c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3f60:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3f64:	442f6162 	strtmi	r6, [pc], #-354	; 3f6c <CPSR_IRQ_INHIBIT+0x3eec>
    3f68:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3f6c:	73746e65 	cmnvc	r4, #1616	; 0x650
    3f70:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3f74:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3f78:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3f7c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3f80:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3f84:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3f88:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3f8c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3f90:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3f94:	74730000 	ldrbtvc	r0, [r3], #-0
    3f98:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    3f9c:	70632e70 	rsbvc	r2, r3, r0, ror lr
    3fa0:	00010070 	andeq	r0, r1, r0, ror r0
    3fa4:	01050000 	mrseq	r0, (UNDEF: 5)
    3fa8:	50020500 	andpl	r0, r2, r0, lsl #10
    3fac:	030000eb 	movweq	r0, #235	; 0xeb
    3fb0:	0c050114 	stfeqs	f0, [r5], {20}
    3fb4:	0022056a 	eoreq	r0, r2, sl, ror #10
    3fb8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3fbc:	02000c05 	andeq	r0, r0, #1280	; 0x500
    3fc0:	05bb0204 	ldreq	r0, [fp, #516]!	; 0x204
    3fc4:	04020005 	streq	r0, [r2], #-5
    3fc8:	0c056502 	cfstr32eq	mvfx6, [r5], {2}
    3fcc:	2f010585 	svccs	0x00010585
    3fd0:	6b1005bd 	blvs	4056cc <_bss_end+0x3f3a1c>
    3fd4:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    3fd8:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    3fdc:	0402000a 	streq	r0, [r2], #-10
    3fe0:	11058302 	tstne	r5, r2, lsl #6
    3fe4:	02040200 	andeq	r0, r4, #0, 4
    3fe8:	0005054a 	andeq	r0, r5, sl, asr #10
    3fec:	2d020402 	cfstrscs	mvf0, [r2, #-8]
    3ff0:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    3ff4:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
    3ff8:	27056a10 	smladcs	r5, r0, sl, r6
    3ffc:	03040200 	movweq	r0, #16896	; 0x4200
    4000:	000a054a 	andeq	r0, sl, sl, asr #10
    4004:	83020402 	movwhi	r0, #9218	; 0x2402
    4008:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    400c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    4010:	04020005 	streq	r0, [r2], #-5
    4014:	0c052d02 	stceq	13, cr2, [r5], {2}
    4018:	2f010585 	svccs	0x00010585
    401c:	01000a02 	tsteq	r0, r2, lsl #20
    4020:	00037c01 	andeq	r7, r3, r1, lsl #24
    4024:	dd000300 	stcle	3, cr0, [r0, #-0]
    4028:	02000001 	andeq	r0, r0, #1
    402c:	0d0efb01 	vstreq	d15, [lr, #-4]
    4030:	01010100 	mrseq	r0, (UNDEF: 17)
    4034:	00000001 	andeq	r0, r0, r1
    4038:	01000001 	tsteq	r0, r1
    403c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    4040:	552f632f 	strpl	r6, [pc, #-815]!	; 3d19 <CPSR_IRQ_INHIBIT+0x3c99>
    4044:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4048:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    404c:	6f442f61 	svcvs	0x00442f61
    4050:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4054:	2f73746e 	svccs	0x0073746e
    4058:	6f72655a 	svcvs	0x0072655a
    405c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    4060:	6178652f 	cmnvs	r8, pc, lsr #10
    4064:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4068:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    406c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    4070:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4074:	2f6c656e 	svccs	0x006c656e
    4078:	00637273 	rsbeq	r7, r3, r3, ror r2
    407c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    4080:	552f632f 	strpl	r6, [pc, #-815]!	; 3d59 <CPSR_IRQ_INHIBIT+0x3cd9>
    4084:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4088:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    408c:	6f442f61 	svcvs	0x00442f61
    4090:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4094:	2f73746e 	svccs	0x0073746e
    4098:	6f72655a 	svcvs	0x0072655a
    409c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    40a0:	6178652f 	cmnvs	r8, pc, lsr #10
    40a4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    40a8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    40ac:	4332492d 	teqmi	r2, #737280	; 0xb4000
    40b0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    40b4:	2f6c656e 	svccs	0x006c656e
    40b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    40bc:	2f656475 	svccs	0x00656475
    40c0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    40c4:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    40c8:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    40cc:	2f006c61 	svccs	0x00006c61
    40d0:	2f746e6d 	svccs	0x00746e6d
    40d4:	73552f63 	cmpvc	r5, #396	; 0x18c
    40d8:	2f737265 	svccs	0x00737265
    40dc:	6162754b 	cmnvs	r2, fp, asr #10
    40e0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    40e4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    40e8:	5a2f7374 	bpl	be0ec0 <_bss_end+0xbcf210>
    40ec:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3f60 <CPSR_IRQ_INHIBIT+0x3ee0>
    40f0:	2f657461 	svccs	0x00657461
    40f4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    40f8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    40fc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    4100:	2f433249 	svccs	0x00433249
    4104:	75647473 	strbvc	r7, [r4, #-1139]!	; 0xfffffb8d
    4108:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    410c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4110:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4114:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    4118:	2f632f74 	svccs	0x00632f74
    411c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    4120:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    4124:	442f6162 	strtmi	r6, [pc], #-354	; 412c <CPSR_IRQ_INHIBIT+0x40ac>
    4128:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    412c:	73746e65 	cmnvc	r4, #1616	; 0x650
    4130:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    4134:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    4138:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    413c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    4140:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    4144:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    4148:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    414c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    4150:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4154:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4158:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    415c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    4160:	552f632f 	strpl	r6, [pc, #-815]!	; 3e39 <CPSR_IRQ_INHIBIT+0x3db9>
    4164:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4168:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    416c:	6f442f61 	svcvs	0x00442f61
    4170:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4174:	2f73746e 	svccs	0x0073746e
    4178:	6f72655a 	svcvs	0x0072655a
    417c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    4180:	6178652f 	cmnvs	r8, pc, lsr #10
    4184:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4188:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    418c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    4190:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4194:	2f6c656e 	svccs	0x006c656e
    4198:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    419c:	2f656475 	svccs	0x00656475
    41a0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    41a4:	656b2f2e 	strbvs	r2, [fp, #-3886]!	; 0xfffff0d2
    41a8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    41ac:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    41b0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    41b4:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    41b8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    41bc:	65740000 	ldrbvs	r0, [r4, #-0]!
    41c0:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    41c4:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    41c8:	73657373 	cmnvc	r5, #-872415231	; 0xcc000001
    41cc:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    41d0:	00000100 	andeq	r0, r0, r0, lsl #2
    41d4:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    41d8:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    41dc:	00000200 	andeq	r0, r0, r0, lsl #4
    41e0:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
    41e4:	0300682e 	movweq	r6, #2094	; 0x82e
    41e8:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    41ec:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    41f0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    41f4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    41f8:	6f6d0000 	svcvs	0x006d0000
    41fc:	6f74696e 	svcvs	0x0074696e
    4200:	00682e72 	rsbeq	r2, r8, r2, ror lr
    4204:	00000005 	andeq	r0, r0, r5
    4208:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    420c:	00ec6802 	rsceq	r6, ip, r2, lsl #16
    4210:	010c0300 	mrseq	r0, LR_mon
    4214:	05691605 	strbeq	r1, [r9, #-1541]!	; 0xfffff9fb
    4218:	11058410 	tstne	r5, r0, lsl r4
    421c:	8233052f 	eorshi	r0, r3, #197132288	; 0xbc00000
    4220:	05823805 	streq	r3, [r2, #2053]	; 0x805
    4224:	0e05670f 	cdpeq	7, 0, cr6, cr5, cr15, {0}
    4228:	84100532 	ldrhi	r0, [r0], #-1330	; 0xffffface
    422c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    4230:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    4234:	04020009 	streq	r0, [r2], #-9
    4238:	0e05d602 	cfmadd32eq	mvax0, mvfx13, mvfx5, mvfx2
    423c:	84100585 	ldrhi	r0, [r0], #-1413	; 0xfffffa7b
    4240:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    4244:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    4248:	04020009 	streq	r0, [r2], #-9
    424c:	0105d602 	tsteq	r5, r2, lsl #12
    4250:	11054408 	tstne	r5, r8, lsl #8
    4254:	4c160569 	cfldr32mi	mvfx0, [r6], {105}	; 0x69
    4258:	05831905 	streq	r1, [r3, #2309]	; 0x905
    425c:	11058410 	tstne	r5, r0, lsl r4
    4260:	8237052f 	eorshi	r0, r7, #197132288	; 0xbc00000
    4264:	05823c05 	streq	r3, [r2, #3077]	; 0xc05
    4268:	39056711 	stmdbcc	r5, {r0, r4, r8, r9, sl, sp, lr}
    426c:	82410582 	subhi	r0, r1, #545259520	; 0x20800000
    4270:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
    4274:	0e05350d 	cfsh32eq	mvfx3, mvfx5, #13
    4278:	830d05a0 	movwhi	r0, #54688	; 0xd5a0
    427c:	05a02005 	streq	r2, [r0, #5]!
    4280:	1005820e 	andne	r8, r5, lr, lsl #4
    4284:	001705a0 	andseq	r0, r7, r0, lsr #11
    4288:	4a030402 	bmi	c5298 <_bss_end+0xb35e8>
    428c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4290:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    4294:	08090301 	stmdaeq	r9, {r0, r8, r9}
    4298:	69160558 	ldmdbvs	r6, {r3, r4, r6, r8, sl}
    429c:	05841005 	streq	r1, [r4, #5]
    42a0:	33052f11 	movwcc	r2, #24337	; 0x5f11
    42a4:	82380582 	eorshi	r0, r8, #545259520	; 0x20800000
    42a8:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
    42ac:	1005320e 	andne	r3, r5, lr, lsl #4
    42b0:	00170584 	andseq	r0, r7, r4, lsl #11
    42b4:	4a030402 	bmi	c52c4 <_bss_end+0xb3614>
    42b8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    42bc:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    42c0:	1005850e 	andne	r8, r5, lr, lsl #10
    42c4:	00170584 	andseq	r0, r7, r4, lsl #11
    42c8:	4a030402 	bmi	c52d8 <_bss_end+0xb3628>
    42cc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    42d0:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    42d4:	05440801 	strbeq	r0, [r4, #-2049]	; 0xfffff7ff
    42d8:	10056916 	andne	r6, r5, r6, lsl r9
    42dc:	2f110584 	svccs	0x00110584
    42e0:	05823305 	streq	r3, [r2, #773]	; 0x305
    42e4:	0f058238 	svceq	0x00058238
    42e8:	320e0567 	andcc	r0, lr, #432013312	; 0x19c00000
    42ec:	05841005 	streq	r1, [r4, #5]
    42f0:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    42f4:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    42f8:	02040200 	andeq	r0, r4, #0, 4
    42fc:	850e05d6 	strhi	r0, [lr, #-1494]	; 0xfffffa2a
    4300:	05841005 	streq	r1, [r4, #5]
    4304:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4308:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    430c:	02040200 	andeq	r0, r4, #0, 4
    4310:	080105d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl}
    4314:	69160544 	ldmdbvs	r6, {r2, r6, r8, sl}
    4318:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
    431c:	11058410 	tstne	r5, r0, lsl r4
    4320:	8233052f 	eorshi	r0, r3, #197132288	; 0xbc00000
    4324:	05823805 	streq	r3, [r2, #2053]	; 0x805
    4328:	0a05670f 	beq	15df6c <_bss_end+0x14c2bc>
    432c:	4e160530 	cfmvr64hmi	r0, mvdx6
    4330:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    4334:	056a4c18 	strbeq	r4, [sl, #-3096]!	; 0xfffff3e8
    4338:	0e052e0d 	cdpeq	14, 0, cr2, cr5, cr13, {0}
    433c:	a0100569 	andsge	r0, r0, r9, ror #10
    4340:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    4344:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    4348:	04020009 	streq	r0, [r2], #-9
    434c:	0105d602 	tsteq	r5, r2, lsl #12
    4350:	20080e03 	andcs	r0, r8, r3, lsl #28
    4354:	0c032205 	sfmeq	f2, 4, [r3], {5}
    4358:	830f0566 	movwhi	r0, #62822	; 0xf566
    435c:	05831405 	streq	r1, [r3, #1029]	; 0x405
    4360:	1e059f0e 	cdpne	15, 0, cr9, cr5, cr14, {0}
    4364:	830e0568 	movwhi	r0, #58728	; 0xe568
    4368:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    436c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4370:	05054a03 	streq	r4, [r5, #-2563]	; 0xfffff5fd
    4374:	02040200 	andeq	r0, r4, #0, 4
    4378:	880d05d6 	stmdahi	sp, {r1, r2, r4, r6, r7, r8, sl}
    437c:	059f2805 	ldreq	r2, [pc, #2053]	; 4b89 <CPSR_IRQ_INHIBIT+0x4b09>
    4380:	1305f215 	movwne	pc, #21013	; 0x5215	; <UNPREDICTABLE>
    4384:	83180568 	tsthi	r8, #104, 10	; 0x1a000000
    4388:	059f1205 	ldreq	r1, [pc, #517]	; 4595 <CPSR_IRQ_INHIBIT+0x4515>
    438c:	17056810 	smladne	r5, r0, r8, r6
    4390:	03040200 	movweq	r0, #16896	; 0x4200
    4394:	0009054a 	andeq	r0, r9, sl, asr #10
    4398:	d6020402 	strle	r0, [r2], -r2, lsl #8
    439c:	01001202 	tsteq	r0, r2, lsl #4
    43a0:	0001cb01 	andeq	ip, r1, r1, lsl #22
    43a4:	6d000300 	stcvs	3, cr0, [r0, #-0]
    43a8:	02000001 	andeq	r0, r0, #1
    43ac:	0d0efb01 	vstreq	d15, [lr, #-4]
    43b0:	01010100 	mrseq	r0, (UNDEF: 17)
    43b4:	00000001 	andeq	r0, r0, r1
    43b8:	01000001 	tsteq	r0, r1
    43bc:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    43c0:	552f632f 	strpl	r6, [pc, #-815]!	; 4099 <CPSR_IRQ_INHIBIT+0x4019>
    43c4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    43c8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    43cc:	6f442f61 	svcvs	0x00442f61
    43d0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    43d4:	2f73746e 	svccs	0x0073746e
    43d8:	6f72655a 	svcvs	0x0072655a
    43dc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    43e0:	6178652f 	cmnvs	r8, pc, lsr #10
    43e4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    43e8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    43ec:	4332492d 	teqmi	r2, #737280	; 0xb4000
    43f0:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    43f4:	2f62696c 	svccs	0x0062696c
    43f8:	00637273 	rsbeq	r7, r3, r3, ror r2
    43fc:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    4400:	552f632f 	strpl	r6, [pc, #-815]!	; 40d9 <CPSR_IRQ_INHIBIT+0x4059>
    4404:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4408:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    440c:	6f442f61 	svcvs	0x00442f61
    4410:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4414:	2f73746e 	svccs	0x0073746e
    4418:	6f72655a 	svcvs	0x0072655a
    441c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    4420:	6178652f 	cmnvs	r8, pc, lsr #10
    4424:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4428:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    442c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    4430:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4434:	2f6c656e 	svccs	0x006c656e
    4438:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    443c:	2f656475 	svccs	0x00656475
    4440:	2f007366 	svccs	0x00007366
    4444:	2f746e6d 	svccs	0x00746e6d
    4448:	73552f63 	cmpvc	r5, #396	; 0x18c
    444c:	2f737265 	svccs	0x00737265
    4450:	6162754b 	cmnvs	r2, fp, asr #10
    4454:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    4458:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    445c:	5a2f7374 	bpl	be1234 <_bss_end+0xbcf584>
    4460:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 42d4 <CPSR_IRQ_INHIBIT+0x4254>
    4464:	2f657461 	svccs	0x00657461
    4468:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    446c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    4470:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    4474:	2f433249 	svccs	0x00433249
    4478:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    447c:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    4480:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4484:	702f6564 	eorvc	r6, pc, r4, ror #10
    4488:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    448c:	2f007373 	svccs	0x00007373
    4490:	2f746e6d 	svccs	0x00746e6d
    4494:	73552f63 	cmpvc	r5, #396	; 0x18c
    4498:	2f737265 	svccs	0x00737265
    449c:	6162754b 	cmnvs	r2, fp, asr #10
    44a0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    44a4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    44a8:	5a2f7374 	bpl	be1280 <_bss_end+0xbcf5d0>
    44ac:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 4320 <CPSR_IRQ_INHIBIT+0x42a0>
    44b0:	2f657461 	svccs	0x00657461
    44b4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    44b8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    44bc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    44c0:	2f433249 	svccs	0x00433249
    44c4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    44c8:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    44cc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    44d0:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    44d4:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    44d8:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    44dc:	61682f30 	cmnvs	r8, r0, lsr pc
    44e0:	7300006c 	movwvc	r0, #108	; 0x6c
    44e4:	69666474 	stmdbvs	r6!, {r2, r4, r5, r6, sl, sp, lr}^
    44e8:	632e656c 			; <UNDEFINED> instruction: 0x632e656c
    44ec:	01007070 	tsteq	r0, r0, ror r0
    44f0:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    44f4:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    44f8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    44fc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4500:	77730000 	ldrbvc	r0, [r3, -r0]!
    4504:	00682e69 	rsbeq	r2, r8, r9, ror #28
    4508:	69000003 	stmdbvs	r0, {r0, r1}
    450c:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
    4510:	00682e66 	rsbeq	r2, r8, r6, ror #28
    4514:	00000004 	andeq	r0, r0, r4
    4518:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    451c:	00f2b402 	rscseq	fp, r2, r2, lsl #8
    4520:	05051500 	streq	r1, [r5, #-1280]	; 0xfffffb00
    4524:	0c052f69 	stceq	15, cr2, [r5], {105}	; 0x69
    4528:	2f01054c 	svccs	0x0001054c
    452c:	a1050585 	smlabbge	r5, r5, r5, r0
    4530:	052f4b4b 	streq	r4, [pc, #-2891]!	; 39ed <CPSR_IRQ_INHIBIT+0x396d>
    4534:	01054c0c 	tsteq	r5, ip, lsl #24
    4538:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
    453c:	4b4b4bbd 	blmi	12d7438 <_bss_end+0x12c5788>
    4540:	4c0c052f 	cfstr32mi	mvfx0, [ip], {47}	; 0x2f
    4544:	852f0105 	strhi	r0, [pc, #-261]!	; 4447 <CPSR_IRQ_INHIBIT+0x43c7>
    4548:	4bbd0505 	blmi	fef45964 <_bss_end+0xfef33cb4>
    454c:	052f4b4b 	streq	r4, [pc, #-2891]!	; 3a09 <CPSR_IRQ_INHIBIT+0x3989>
    4550:	01054c0c 	tsteq	r5, ip, lsl #24
    4554:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
    4558:	01054b83 	smlabbeq	r5, r3, fp, r4
    455c:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
    4560:	4b4b4bbd 	blmi	12d745c <_bss_end+0x12c57ac>
    4564:	4c0c052f 	cfstr32mi	mvfx0, [ip], {47}	; 0x2f
    4568:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    456c:	01010008 	tsteq	r1, r8
    4570:	00000287 	andeq	r0, r0, r7, lsl #5
    4574:	00640003 	rsbeq	r0, r4, r3
    4578:	01020000 	mrseq	r0, (UNDEF: 2)
    457c:	000d0efb 	strdeq	r0, [sp], -fp
    4580:	01010101 	tsteq	r1, r1, lsl #2
    4584:	01000000 	mrseq	r0, (UNDEF: 0)
    4588:	2f010000 	svccs	0x00010000
    458c:	2f746e6d 	svccs	0x00746e6d
    4590:	73552f63 	cmpvc	r5, #396	; 0x18c
    4594:	2f737265 	svccs	0x00737265
    4598:	6162754b 	cmnvs	r2, fp, asr #10
    459c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    45a0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    45a4:	5a2f7374 	bpl	be137c <_bss_end+0xbcf6cc>
    45a8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 441c <CPSR_IRQ_INHIBIT+0x439c>
    45ac:	2f657461 	svccs	0x00657461
    45b0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    45b4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    45b8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    45bc:	2f433249 	svccs	0x00433249
    45c0:	6c647473 	cfstrdvs	mvd7, [r4], #-460	; 0xfffffe34
    45c4:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
    45c8:	00006372 	andeq	r6, r0, r2, ror r3
    45cc:	73647473 	cmnvc	r4, #1929379840	; 0x73000000
    45d0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    45d4:	70632e67 	rsbvc	r2, r3, r7, ror #28
    45d8:	00010070 	andeq	r0, r1, r0, ror r0
    45dc:	01050000 	mrseq	r0, (UNDEF: 5)
    45e0:	40020500 	andmi	r0, r2, r0, lsl #10
    45e4:	1a0000f4 	bne	49bc <CPSR_IRQ_INHIBIT+0x493c>
    45e8:	05bb0905 	ldreq	r0, [fp, #2309]!	; 0x905
    45ec:	27054c12 	smladcs	r5, r2, ip, r4
    45f0:	ba100568 	blt	405b98 <_bss_end+0x3f3ee8>
    45f4:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
    45f8:	13054a2d 	movwne	r4, #23085	; 0x5a2d
    45fc:	2f0f054a 	svccs	0x000f054a
    4600:	059f0a05 	ldreq	r0, [pc, #2565]	; 500d <CPSR_IRQ_INHIBIT+0x4f8d>
    4604:	05356205 	ldreq	r6, [r5, #-517]!	; 0xfffffdfb
    4608:	11056810 	tstne	r5, r0, lsl r8
    460c:	4a22052e 	bmi	885acc <_bss_end+0x873e1c>
    4610:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    4614:	0c052f0a 	stceq	15, cr2, [r5], {10}
    4618:	2e0d0569 	cfsh32cs	mvfx0, mvfx13, #57
    461c:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    4620:	0e054b06 	vmlaeq.f64	d4, d5, d6
    4624:	001c0568 	andseq	r0, ip, r8, ror #10
    4628:	4a030402 	bmi	c5638 <_bss_end+0xb3988>
    462c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    4630:	059e0304 	ldreq	r0, [lr, #772]	; 0x304
    4634:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    4638:	1e056802 	cdpne	8, 0, cr6, cr5, cr2, {0}
    463c:	02040200 	andeq	r0, r4, #0, 4
    4640:	000e0582 	andeq	r0, lr, r2, lsl #11
    4644:	4a020402 	bmi	85654 <_bss_end+0x739a4>
    4648:	02002005 	andeq	r2, r0, #5
    464c:	054b0204 	strbeq	r0, [fp, #-516]	; 0xfffffdfc
    4650:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    4654:	12052e02 	andne	r2, r5, #2, 28
    4658:	02040200 	andeq	r0, r4, #0, 4
    465c:	0015054a 	andseq	r0, r5, sl, asr #10
    4660:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    4664:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    4668:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    466c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4670:	10052e02 	andne	r2, r5, r2, lsl #28
    4674:	02040200 	andeq	r0, r4, #0, 4
    4678:	0011052f 	andseq	r0, r1, pc, lsr #10
    467c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    4680:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    4684:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    4688:	04020005 	streq	r0, [r2], #-5
    468c:	01054602 	tsteq	r5, r2, lsl #12
    4690:	09058588 	stmdbeq	r5, {r3, r7, r8, sl, pc}
    4694:	4c0c0583 	cfstr32mi	mvfx0, [ip], {131}	; 0x83
    4698:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
    469c:	0d054c10 	stceq	12, cr4, [r5, #-64]	; 0xffffffc0
    46a0:	4a0905bb 	bmi	245d94 <_bss_end+0x2340e4>
    46a4:	02001d05 	andeq	r1, r0, #320	; 0x140
    46a8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    46ac:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    46b0:	13054a01 	movwne	r4, #23041	; 0x5a01
    46b4:	4a1a054d 	bmi	685bf0 <_bss_end+0x673f40>
    46b8:	052e1005 	streq	r1, [lr, #-5]!
    46bc:	0505680e 	streq	r6, [r5, #-2062]	; 0xfffff7f2
    46c0:	05667803 	strbeq	r7, [r6, #-2051]!	; 0xfffff7fd
    46c4:	2e0b030c 	cdpcs	3, 0, cr0, cr11, cr12, {0}
    46c8:	852f0105 	strhi	r0, [pc, #-261]!	; 45cb <CPSR_IRQ_INHIBIT+0x454b>
    46cc:	05bd0c05 	ldreq	r0, [sp, #3077]!	; 0xc05
    46d0:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    46d4:	20054a04 	andcs	r4, r5, r4, lsl #20
    46d8:	02040200 	andeq	r0, r4, #0, 4
    46dc:	00210582 	eoreq	r0, r1, r2, lsl #11
    46e0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    46e4:	02001905 	andeq	r1, r0, #81920	; 0x14000
    46e8:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    46ec:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    46f0:	18054b03 	stmdane	r5, {r0, r1, r8, r9, fp, lr}
    46f4:	03040200 	movweq	r0, #16896	; 0x4200
    46f8:	000e052e 	andeq	r0, lr, lr, lsr #10
    46fc:	4a030402 	bmi	c570c <_bss_end+0xb3a5c>
    4700:	02000f05 	andeq	r0, r0, #5, 30
    4704:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    4708:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    470c:	11054a03 	tstne	r5, r3, lsl #20
    4710:	03040200 	movweq	r0, #16896	; 0x4200
    4714:	0005052e 	andeq	r0, r5, lr, lsr #10
    4718:	2d030402 	cfstrscs	mvf0, [r3, #-8]
    471c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    4720:	00840204 	addeq	r0, r4, r4, lsl #4
    4724:	83010402 	movwhi	r0, #5122	; 0x1402
    4728:	02000f05 	andeq	r0, r0, #5, 30
    472c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4730:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4734:	05054a01 	streq	r4, [r5, #-2561]	; 0xfffff5ff
    4738:	01040200 	mrseq	r0, R12_usr
    473c:	850c0549 	strhi	r0, [ip, #-1353]	; 0xfffffab7
    4740:	852f0105 	strhi	r0, [pc, #-261]!	; 4643 <CPSR_IRQ_INHIBIT+0x45c3>
    4744:	05bc0f05 	ldreq	r0, [ip, #3845]!	; 0xf05
    4748:	20056612 	andcs	r6, r5, r2, lsl r6
    474c:	660c05bc 			; <UNDEFINED> instruction: 0x660c05bc
    4750:	054b2005 	strbeq	r2, [fp, #-5]
    4754:	0905660c 	stmdbeq	r5, {r2, r3, r9, sl, sp, lr}
    4758:	8314054b 	tsthi	r4, #314572800	; 0x12c00000
    475c:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    4760:	14056709 	strne	r6, [r5], #-1801	; 0xfffff8f7
    4764:	4d0c0567 	cfstr32mi	mvfx0, [ip, #-412]	; 0xfffffe64
    4768:	852f0105 	strhi	r0, [pc, #-261]!	; 466b <CPSR_IRQ_INHIBIT+0x45eb>
    476c:	05830905 	streq	r0, [r3, #2309]	; 0x905
    4770:	0f054c0e 	svceq	0x00054c0e
    4774:	6611052e 	ldrvs	r0, [r1], -lr, lsr #10
    4778:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
    477c:	0c056505 	cfstr32eq	mvfx6, [r5], {5}
    4780:	2f010531 	svccs	0x00010531
    4784:	9f0b0585 	svcls	0x000b0585
    4788:	054c0e05 	strbeq	r0, [ip, #-3589]	; 0xfffff1fb
    478c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4790:	0d054a03 	vstreq	s8, [r5, #-12]
    4794:	02040200 	andeq	r0, r4, #0, 4
    4798:	000e0583 	andeq	r0, lr, r3, lsl #11
    479c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    47a0:	02001005 	andeq	r1, r0, #5
    47a4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    47a8:	04020005 	streq	r0, [r2], #-5
    47ac:	01054902 	tsteq	r5, r2, lsl #18
    47b0:	11058584 	smlabbne	r5, r4, r5, r8
    47b4:	4b0b05bb 	blmi	2c5ea8 <_bss_end+0x2b41f8>
    47b8:	054c0e05 	strbeq	r0, [ip, #-3589]	; 0xfffff1fb
    47bc:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    47c0:	1c054a03 			; <UNDEFINED> instruction: 0x1c054a03
    47c4:	02040200 	andeq	r0, r4, #0, 4
    47c8:	001d0583 	andseq	r0, sp, r3, lsl #11
    47cc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    47d0:	02001005 	andeq	r1, r0, #5
    47d4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    47d8:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    47dc:	1d052e02 	stcne	14, cr2, [r5, #-8]
    47e0:	02040200 	andeq	r0, r4, #0, 4
    47e4:	0013054a 	andseq	r0, r3, sl, asr #10
    47e8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    47ec:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    47f0:	052d0204 	streq	r0, [sp, #-516]!	; 0xfffffdfc
    47f4:	08028401 	stmdaeq	r2, {r0, sl, pc}
    47f8:	2f010100 	svccs	0x00010100
    47fc:	03000003 	movweq	r0, #3
    4800:	0001f100 	andeq	pc, r1, r0, lsl #2
    4804:	fb010200 	blx	4500e <_bss_end+0x3335e>
    4808:	01000d0e 	tsteq	r0, lr, lsl #26
    480c:	00010101 	andeq	r0, r1, r1, lsl #2
    4810:	00010000 	andeq	r0, r1, r0
    4814:	6d2f0100 	stfvss	f0, [pc, #-0]	; 481c <CPSR_IRQ_INHIBIT+0x479c>
    4818:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    481c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    4820:	4b2f7372 	blmi	be15f0 <_bss_end+0xbcf940>
    4824:	2f616275 	svccs	0x00616275
    4828:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    482c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    4830:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    4834:	614d6f72 	hvcvs	55026	; 0xd6f2
    4838:	652f6574 	strvs	r6, [pc, #-1396]!	; 42cc <CPSR_IRQ_INHIBIT+0x424c>
    483c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    4840:	2f73656c 	svccs	0x0073656c
    4844:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    4848:	732f4332 			; <UNDEFINED> instruction: 0x732f4332
    484c:	74756474 	ldrbtvc	r6, [r5], #-1140	; 0xfffffb8c
    4850:	2f736c69 	svccs	0x00736c69
    4854:	00637273 	rsbeq	r7, r3, r3, ror r2
    4858:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    485c:	552f632f 	strpl	r6, [pc, #-815]!	; 4535 <CPSR_IRQ_INHIBIT+0x44b5>
    4860:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4864:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    4868:	6f442f61 	svcvs	0x00442f61
    486c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4870:	2f73746e 	svccs	0x0073746e
    4874:	6f72655a 	svcvs	0x0072655a
    4878:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    487c:	6178652f 	cmnvs	r8, pc, lsr #10
    4880:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4884:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    4888:	4332492d 	teqmi	r2, #737280	; 0xb4000
    488c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4890:	2f6c656e 	svccs	0x006c656e
    4894:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4898:	2f656475 	svccs	0x00656475
    489c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    48a0:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    48a4:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    48a8:	2f006c61 	svccs	0x00006c61
    48ac:	2f746e6d 	svccs	0x00746e6d
    48b0:	73552f63 	cmpvc	r5, #396	; 0x18c
    48b4:	2f737265 	svccs	0x00737265
    48b8:	6162754b 	cmnvs	r2, fp, asr #10
    48bc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    48c0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    48c4:	5a2f7374 	bpl	be169c <_bss_end+0xbcf9ec>
    48c8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 473c <CPSR_IRQ_INHIBIT+0x46bc>
    48cc:	2f657461 	svccs	0x00657461
    48d0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    48d4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    48d8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    48dc:	2f433249 	svccs	0x00433249
    48e0:	75647473 	strbvc	r7, [r4, #-1139]!	; 0xfffffb8d
    48e4:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    48e8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    48ec:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    48f0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    48f4:	2f632f74 	svccs	0x00632f74
    48f8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    48fc:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    4900:	442f6162 	strtmi	r6, [pc], #-354	; 4908 <CPSR_IRQ_INHIBIT+0x4888>
    4904:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    4908:	73746e65 	cmnvc	r4, #1616	; 0x650
    490c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    4910:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    4914:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    4918:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    491c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    4920:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    4924:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    4928:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    492c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4930:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4934:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    4938:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    493c:	552f632f 	strpl	r6, [pc, #-815]!	; 4615 <CPSR_IRQ_INHIBIT+0x4595>
    4940:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4944:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    4948:	6f442f61 	svcvs	0x00442f61
    494c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4950:	2f73746e 	svccs	0x0073746e
    4954:	6f72655a 	svcvs	0x0072655a
    4958:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    495c:	6178652f 	cmnvs	r8, pc, lsr #10
    4960:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4964:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    4968:	4332492d 	teqmi	r2, #737280	; 0xb4000
    496c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4970:	2f6c656e 	svccs	0x006c656e
    4974:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4978:	2f656475 	svccs	0x00656475
    497c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    4980:	2f737265 	svccs	0x00737265
    4984:	64697262 	strbtvs	r7, [r9], #-610	; 0xfffffd9e
    4988:	00736567 	rsbseq	r6, r3, r7, ror #10
    498c:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
    4990:	70632e64 	rsbvc	r2, r3, r4, ror #28
    4994:	00010070 	andeq	r0, r1, r0, ror r0
    4998:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    499c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    49a0:	00020068 	andeq	r0, r2, r8, rrx
    49a4:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
    49a8:	00682e64 	rsbeq	r2, r8, r4, ror #28
    49ac:	66000003 	strvs	r0, [r0], -r3
    49b0:	73656c69 	cmnvc	r5, #26880	; 0x6900
    49b4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    49b8:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    49bc:	64000004 	strvs	r0, [r0], #-4
    49c0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    49c4:	705f7961 	subsvc	r7, pc, r1, ror #18
    49c8:	6f746f72 	svcvs	0x00746f72
    49cc:	2e6c6f63 	cdpcs	15, 6, cr6, cr12, cr3, {3}
    49d0:	00050068 	andeq	r0, r5, r8, rrx
    49d4:	72657000 	rsbvc	r7, r5, #0
    49d8:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    49dc:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    49e0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    49e4:	6c6f0000 	stclvs	0, cr0, [pc], #-0	; 49ec <CPSR_IRQ_INHIBIT+0x496c>
    49e8:	665f6465 	ldrbvs	r6, [pc], -r5, ror #8
    49ec:	2e746e6f 	cdpcs	14, 7, cr6, cr4, cr15, {3}
    49f0:	00010068 	andeq	r0, r1, r8, rrx
    49f4:	01050000 	mrseq	r0, (UNDEF: 5)
    49f8:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    49fc:	030000f8 	movweq	r0, #248	; 0xf8
    4a00:	1005010a 	andne	r0, r5, sl, lsl #2
    4a04:	05a1839f 	streq	r8, [r1, #927]!	; 0x39f
    4a08:	0d054a18 	vstreq	s8, [r5, #-96]	; 0xffffffa0
    4a0c:	4b010582 	blmi	4601c <_bss_end+0x3436c>
    4a10:	85090584 	strhi	r0, [r9, #-1412]	; 0xfffffa7c
    4a14:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    4a18:	0e054c11 	mcreq	12, 0, r4, cr5, cr1, {0}
    4a1c:	84010567 	strhi	r0, [r1], #-1383	; 0xfffffa99
    4a20:	830c0585 	movwhi	r0, #50565	; 0xc585
    4a24:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
    4a28:	05bb0a05 	ldreq	r0, [fp, #2565]!	; 0xa05
    4a2c:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
    4a30:	4e14054a 	cfmac32mi	mvfx0, mvfx4, mvfx10
    4a34:	004b1205 	subeq	r1, fp, r5, lsl #4
    4a38:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a3c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    4a40:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4a44:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    4a48:	0402000a 	streq	r0, [r2], #-10
    4a4c:	052f0604 	streq	r0, [pc, #-1540]!	; 4450 <CPSR_IRQ_INHIBIT+0x43d0>
    4a50:	0105d109 	tsteq	r5, r9, lsl #2
    4a54:	0a054d34 	beq	157f2c <_bss_end+0x14627c>
    4a58:	09059108 	stmdbeq	r5, {r3, r8, ip, pc}
    4a5c:	4a05054a 	bmi	145f8c <_bss_end+0x1342dc>
    4a60:	054f1405 	strbeq	r1, [pc, #-1029]	; 4663 <CPSR_IRQ_INHIBIT+0x45e3>
    4a64:	11054b0f 	tstne	r5, pc, lsl #22
    4a68:	1305f39f 	movwne	pc, #21407	; 0x539f	; <UNPREDICTABLE>
    4a6c:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    4a70:	00660601 	rsbeq	r0, r6, r1, lsl #12
    4a74:	4a020402 	bmi	85a84 <_bss_end+0x73dd4>
    4a78:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a7c:	000a052e 	andeq	r0, sl, lr, lsr #10
    4a80:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a84:	0309052f 	movweq	r0, #38191	; 0x952f
    4a88:	0105d677 	tsteq	r5, r7, ror r6
    4a8c:	4d2e0a03 	vstmdbmi	lr!, {s0-s2}
    4a90:	91080a05 	tstls	r8, r5, lsl #20
    4a94:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    4a98:	054e4a05 	strbeq	r4, [lr, #-2565]	; 0xfffff5fb
    4a9c:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    4aa0:	23056601 	movwcs	r6, #22017	; 0x5601
    4aa4:	01040200 	mrseq	r0, R12_usr
    4aa8:	4f1e052e 	svcmi	0x001e052e
    4aac:	054b1505 	strbeq	r1, [fp, #-1285]	; 0xfffffafb
    4ab0:	05bb670c 	ldreq	r6, [fp, #1804]!	; 0x70c
    4ab4:	2108bb0d 	tstcs	r8, sp, lsl #22
    4ab8:	21081005 	tstcs	r8, r5
    4abc:	05684405 	strbeq	r4, [r8, #-1029]!	; 0xfffffbfb
    4ac0:	40052e51 	andmi	r2, r5, r1, asr lr
    4ac4:	9e0c052e 	cfsh32ls	mvfx0, mvfx12, #30
    4ac8:	490b054b 	stmdbmi	fp, {r0, r1, r3, r6, r8, sl}
    4acc:	0b030a05 	bleq	c72e8 <_bss_end+0xb5638>
    4ad0:	03090566 	movweq	r0, #38246	; 0x9566
    4ad4:	054ed665 	strbeq	sp, [lr, #-1637]	; 0xfffff99b
    4ad8:	2e180301 	cdpcs	3, 1, cr0, cr8, cr1, {0}
    4adc:	830a0569 	movwhi	r0, #42345	; 0xa569
    4ae0:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    4ae4:	14054a05 	strne	r4, [r5], #-2565	; 0xfffff5fb
    4ae8:	4c0a054e 	cfstr32mi	mvfx0, [sl], {78}	; 0x4e
    4aec:	05d10905 	ldrbeq	r0, [r1, #2309]	; 0x905
    4af0:	054d3401 	strbeq	r3, [sp, #-1025]	; 0xfffffbff
    4af4:	0521080a 	streq	r0, [r1, #-2058]!	; 0xfffff7f6
    4af8:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
    4afc:	4d0e054a 	cfstr32mi	mvfx0, [lr, #-296]	; 0xfffffed8
    4b00:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    4b04:	19054c0c 	stmdbne	r5, {r2, r3, sl, fp, lr}
    4b08:	0020054a 	eoreq	r0, r0, sl, asr #10
    4b0c:	4a010402 	bmi	45b1c <_bss_end+0x33e6c>
    4b10:	02001905 	andeq	r1, r0, #81920	; 0x14000
    4b14:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    4b18:	0c054c11 	stceq	12, cr4, [r5], {17}
    4b1c:	050567bb 	streq	r6, [r5, #-1979]	; 0xfffff845
    4b20:	29090562 	stmdbcs	r9, {r1, r5, r6, r8, sl}
    4b24:	0b030105 	bleq	c4f40 <_bss_end+0xb3290>
    4b28:	0004022e 	andeq	r0, r4, lr, lsr #4
    4b2c:	01fe0101 	mvnseq	r0, r1, lsl #2
    4b30:	00030000 	andeq	r0, r3, r0
    4b34:	000001e1 	andeq	r0, r0, r1, ror #3
    4b38:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    4b3c:	0101000d 	tsteq	r1, sp
    4b40:	00000101 	andeq	r0, r0, r1, lsl #2
    4b44:	00000100 	andeq	r0, r0, r0, lsl #2
    4b48:	2f2e2e01 	svccs	0x002e2e01
    4b4c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4b50:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4b54:	2f2e2e2f 	svccs	0x002e2e2f
    4b58:	732f2e2e 			; <UNDEFINED> instruction: 0x732f2e2e
    4b5c:	6c2f6372 	stcvs	3, cr6, [pc], #-456	; 499c <CPSR_IRQ_INHIBIT+0x491c>
    4b60:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4b64:	2b2b6364 	blcs	add8fc <_bss_end+0xacbc4c>
    4b68:	2f33762d 	svccs	0x0033762d
    4b6c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4b70:	2b637075 	blcs	18e0d4c <_bss_end+0x18cf09c>
    4b74:	622f002b 	eorvs	r0, pc, #43	; 0x2b
    4b78:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4b7c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4b80:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    4b84:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    4b88:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4b8c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4b90:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4b94:	6944672d 	stmdbvs	r4, {r0, r2, r3, r5, r8, r9, sl, sp, lr}^
    4b98:	2f433745 	svccs	0x00433745
    4b9c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4ba0:	2b636474 	blcs	18ddd78 <_bss_end+0x18cc0c8>
    4ba4:	72612d2b 	rsbvc	r2, r1, #2752	; 0xac0
    4ba8:	6f6e2d6d 	svcvs	0x006e2d6d
    4bac:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4bb0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4bb4:	622f3731 	eorvs	r3, pc, #12845056	; 0xc40000
    4bb8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4bbc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4bc0:	7435762f 	ldrtvc	r7, [r5], #-1583	; 0xfffff9d1
    4bc4:	61682f65 	cmnvs	r8, r5, ror #30
    4bc8:	6c2f6472 	cfstrsvs	mvf6, [pc], #-456	; 4a08 <CPSR_IRQ_INHIBIT+0x4988>
    4bcc:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4bd0:	2b2b6364 	blcs	add968 <_bss_end+0xacbcb8>
    4bd4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4bd8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4bdc:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    4be0:	622f0073 	eorvs	r0, pc, #115	; 0x73
    4be4:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4be8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4bec:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    4bf0:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    4bf4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4bf8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4bfc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4c00:	6944672d 	stmdbvs	r4, {r0, r2, r3, r5, r8, r9, sl, sp, lr}^
    4c04:	2f433745 	svccs	0x00433745
    4c08:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4c0c:	2b636474 	blcs	18ddde4 <_bss_end+0x18cc134>
    4c10:	72612d2b 	rsbvc	r2, r1, #2752	; 0xac0
    4c14:	6f6e2d6d 	svcvs	0x006e2d6d
    4c18:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4c1c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4c20:	622f3731 	eorvs	r3, pc, #12845056	; 0xc40000
    4c24:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4c28:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4c2c:	7435762f 	ldrtvc	r7, [r5], #-1583	; 0xfffff9d1
    4c30:	61682f65 	cmnvs	r8, r5, ror #30
    4c34:	6c2f6472 	cfstrsvs	mvf6, [pc], #-456	; 4a74 <CPSR_IRQ_INHIBIT+0x49f4>
    4c38:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4c3c:	2b2b6364 	blcs	add9d4 <_bss_end+0xacbd24>
    4c40:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4c44:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4c48:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4c4c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4c50:	61652d65 	cmnvs	r5, r5, ror #26
    4c54:	622f6962 	eorvs	r6, pc, #1605632	; 0x188000
    4c58:	00737469 	rsbseq	r7, r3, r9, ror #8
    4c5c:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    4c60:	6c2f646c 	cfstrsvs	mvf6, [pc], #-432	; 4ab8 <CPSR_IRQ_INHIBIT+0x4a38>
    4c64:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4c68:	2b2b6364 	blcs	adda00 <_bss_end+0xacbd50>
    4c6c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    4c70:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4c74:	61652d65 	cmnvs	r5, r5, ror #26
    4c78:	672d6962 	strvs	r6, [sp, -r2, ror #18]!
    4c7c:	37456944 	strbcc	r6, [r5, -r4, asr #18]
    4c80:	696c2f43 	stmdbvs	ip!, {r0, r1, r6, r8, r9, sl, fp, sp}^
    4c84:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4c88:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    4c8c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4c90:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    4c94:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4c98:	37312d69 	ldrcc	r2, [r1, -r9, ror #26]!
    4c9c:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    4ca0:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    4ca4:	762f6d72 			; <UNDEFINED> instruction: 0x762f6d72
    4ca8:	2f657435 	svccs	0x00657435
    4cac:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    4cb0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4cb4:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    4cb8:	692f2b2b 	stmdbvs	pc!, {r0, r1, r3, r5, r8, r9, fp, sp}	; <UNPREDICTABLE>
    4cbc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4cc0:	00006564 	andeq	r6, r0, r4, ror #10
    4cc4:	5f77656e 	svcpl	0x0077656e
    4cc8:	2e76706f 	cdpcs	0, 7, cr7, cr6, cr15, {3}
    4ccc:	01006363 	tsteq	r0, r3, ror #6
    4cd0:	78650000 	stmdavc	r5!, {}^	; <UNPREDICTABLE>
    4cd4:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4cd8:	5f6e6f69 	svcpl	0x006e6f69
    4cdc:	2e727470 	mrccs	4, 3, r7, cr2, cr0, {3}
    4ce0:	00020068 	andeq	r0, r2, r8, rrx
    4ce4:	2b2b6300 	blcs	add8ec <_bss_end+0xacbc3c>
    4ce8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    4cec:	682e6769 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    4cf0:	00000300 	andeq	r0, r0, r0, lsl #6
    4cf4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    4cf8:	6172745f 	cmnvs	r2, pc, asr r4
    4cfc:	00737469 	rsbseq	r7, r3, r9, ror #8
    4d00:	3c000004 	stccc	0, cr0, [r0], {4}
    4d04:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4d08:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    4d0c:	0000003e 	andeq	r0, r0, lr, lsr r0
    4d10:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
    4d14:	00000100 	andeq	r0, r0, r0, lsl #2
    4d18:	00010500 	andeq	r0, r1, r0, lsl #10
    4d1c:	fdac0205 	stc2	2, cr0, [ip, #20]!
    4d20:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    4d24:	13030501 	movwne	r0, #13569	; 0x3501
    4d28:	01061805 	tsteq	r6, r5, lsl #16
    4d2c:	0101002e 	tsteq	r1, lr, lsr #32
    4d30:	00000079 	andeq	r0, r0, r9, ror r0
    4d34:	00460003 	subeq	r0, r6, r3
    4d38:	01020000 	mrseq	r0, (UNDEF: 2)
    4d3c:	000d0efb 	strdeq	r0, [sp], -fp
    4d40:	01010101 	tsteq	r1, r1, lsl #2
    4d44:	01000000 	mrseq	r0, (UNDEF: 0)
    4d48:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4d4c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4d50:	2f2e2e2f 	svccs	0x002e2e2f
    4d54:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4d58:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4d5c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4d60:	2f636367 	svccs	0x00636367
    4d64:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    4d68:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    4d6c:	00006d72 	andeq	r6, r0, r2, ror sp
    4d70:	3162696c 	cmncc	r2, ip, ror #18
    4d74:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    4d78:	00532e73 	subseq	r2, r3, r3, ror lr
    4d7c:	00000001 	andeq	r0, r0, r1
    4d80:	b0020500 	andlt	r0, r2, r0, lsl #10
    4d84:	030000fd 	movweq	r0, #253	; 0xfd
    4d88:	300108cf 	andcc	r0, r1, pc, asr #17
    4d8c:	2f2f2f2f 	svccs	0x002f2f2f
    4d90:	d002302f 	andle	r3, r2, pc, lsr #32
    4d94:	312f1401 			; <UNDEFINED> instruction: 0x312f1401
    4d98:	4c302f2f 	ldcmi	15, cr2, [r0], #-188	; 0xffffff44
    4d9c:	1f03322f 	svcne	0x0003322f
    4da0:	2f2f2f66 	svccs	0x002f2f66
    4da4:	2f2f2f2f 	svccs	0x002f2f2f
    4da8:	01000202 	tsteq	r0, r2, lsl #4
    4dac:	00005c01 	andeq	r5, r0, r1, lsl #24
    4db0:	46000300 	strmi	r0, [r0], -r0, lsl #6
    4db4:	02000000 	andeq	r0, r0, #0
    4db8:	0d0efb01 	vstreq	d15, [lr, #-4]
    4dbc:	01010100 	mrseq	r0, (UNDEF: 17)
    4dc0:	00000001 	andeq	r0, r0, r1
    4dc4:	01000001 	tsteq	r0, r1
    4dc8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4dcc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4dd0:	2f2e2e2f 	svccs	0x002e2e2f
    4dd4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4dd8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4ddc:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    4de0:	6e6f632f 	cdpvs	3, 6, cr6, cr15, cr15, {1}
    4de4:	2f676966 	svccs	0x00676966
    4de8:	006d7261 	rsbeq	r7, sp, r1, ror #4
    4dec:	62696c00 	rsbvs	r6, r9, #0, 24
    4df0:	6e756631 	mrcvs	6, 3, r6, cr5, cr1, {1}
    4df4:	532e7363 			; <UNDEFINED> instruction: 0x532e7363
    4df8:	00000100 	andeq	r0, r0, r0, lsl #2
    4dfc:	02050000 	andeq	r0, r5, #0
    4e00:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc
    4e04:	010bb903 	tsteq	fp, r3, lsl #18
    4e08:	01000202 	tsteq	r0, r2, lsl #4
    4e0c:	0000a401 	andeq	sl, r0, r1, lsl #8
    4e10:	9e000300 	cdpls	3, 0, cr0, cr0, cr0, {0}
    4e14:	02000000 	andeq	r0, r0, #0
    4e18:	0d0efb01 	vstreq	d15, [lr, #-4]
    4e1c:	01010100 	mrseq	r0, (UNDEF: 17)
    4e20:	00000001 	andeq	r0, r0, r1
    4e24:	01000001 	tsteq	r0, r1
    4e28:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e2c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e30:	2f2e2e2f 	svccs	0x002e2e2f
    4e34:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e38:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    4e3c:	2f2e2e00 	svccs	0x002e2e00
    4e40:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e44:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e48:	2f2e2e2f 	svccs	0x002e2e2f
    4e4c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4d9c <CPSR_IRQ_INHIBIT+0x4d1c>
    4e50:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    4e54:	2e2e2f63 	cdpcs	15, 2, cr2, cr14, cr3, {3}
    4e58:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    4e5c:	6e6f632f 	cdpvs	3, 6, cr6, cr15, cr15, {1}
    4e60:	2f676966 	svccs	0x00676966
    4e64:	006d7261 	rsbeq	r7, sp, r1, ror #4
    4e68:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e6c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e70:	2f2e2e2f 	svccs	0x002e2e2f
    4e74:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e78:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4e7c:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    4e80:	72610000 	rsbvc	r0, r1, #0
    4e84:	73692d6d 	cmnvc	r9, #6976	; 0x1b40
    4e88:	00682e61 	rsbeq	r2, r8, r1, ror #28
    4e8c:	61000001 	tstvs	r0, r1
    4e90:	682e6d72 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, fp, sp, lr}
    4e94:	00000200 	andeq	r0, r0, r0, lsl #4
    4e98:	2d6c6267 	sfmcs	f6, 2, [ip, #-412]!	; 0xfffffe64
    4e9c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
    4ea0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    4ea4:	6c000003 	stcvs	0, cr0, [r0], {3}
    4ea8:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    4eac:	632e3263 			; <UNDEFINED> instruction: 0x632e3263
    4eb0:	00000300 	andeq	r0, r0, r0, lsl #6
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
       4:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
       8:	5f647261 	svcpl	0x00647261
       c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
      10:	00657361 	rsbeq	r7, r5, r1, ror #6
      14:	20554e47 	subscs	r4, r5, r7, asr #28
      18:	312b2b43 			; <UNDEFINED> instruction: 0x312b2b43
      1c:	30312034 	eorscc	r2, r1, r4, lsr r0
      20:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      24:	32303220 	eorscc	r3, r0, #32, 4
      28:	32363031 	eorscc	r3, r6, #49	; 0x31
      2c:	72282031 	eorvc	r2, r8, #49	; 0x31
      30:	61656c65 	cmnvs	r5, r5, ror #24
      34:	20296573 	eorcs	r6, r9, r3, ror r5
      38:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
      3c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
      40:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      44:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
      48:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      4c:	763d7570 			; <UNDEFINED> instruction: 0x763d7570
      50:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
      54:	6f6c666d 	svcvs	0x006c666d
      58:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
      5c:	683d6962 	ldmdavs	sp!, {r1, r5, r6, r8, fp, sp, lr}
      60:	20647261 	rsbcs	r7, r4, r1, ror #4
      64:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
      68:	66763d75 			; <UNDEFINED> instruction: 0x66763d75
      6c:	6d2d2070 	stcvs	0, cr2, [sp, #-448]!	; 0xfffffe40
      70:	656e7574 	strbvs	r7, [lr, #-1396]!	; 0xfffffa8c
      74:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
      78:	36373131 			; <UNDEFINED> instruction: 0x36373131
      7c:	2d667a6a 	vstmdbcs	r6!, {s15-s120}
      80:	6d2d2073 	stcvs	0, cr2, [sp, #-460]!	; 0xfffffe34
      84:	206d7261 	rsbcs	r7, sp, r1, ror #4
      88:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      8c:	613d6863 	teqvs	sp, r3, ror #16
      90:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
      94:	662b6b7a 			; <UNDEFINED> instruction: 0x662b6b7a
      98:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
      9c:	20672d20 	rsbcs	r2, r7, r0, lsr #26
      a0:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
      a4:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
      a8:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
      ac:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; ffffff1c <_bss_end+0xfffee26c>
      b0:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
      b4:	6f697470 	svcvs	0x00697470
      b8:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
      bc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; ffffff2c <_bss_end+0xfffee27c>
      c0:	69747472 	ldmdbvs	r4!, {r1, r4, r5, r6, sl, ip, sp, lr}^
      c4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
      c8:	2f632f74 	svccs	0x00632f74
      cc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
      d0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
      d4:	442f6162 	strtmi	r6, [pc], #-354	; dc <CPSR_IRQ_INHIBIT+0x5c>
      d8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
      dc:	73746e65 	cmnvc	r4, #1616	; 0x650
      e0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
      e4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
      e8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
      ec:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
      f0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
      f4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
      f8:	75622f43 	strbvc	r2, [r2, #-3907]!	; 0xfffff0bd
      fc:	00646c69 	rsbeq	r6, r4, r9, ror #24
     100:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     104:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
     108:	5f647261 	svcpl	0x00647261
     10c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     110:	6d2f0074 	stcvs	0, cr0, [pc, #-464]!	; ffffff48 <_bss_end+0xfffee298>
     114:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     118:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     11c:	4b2f7372 	blmi	bdceec <_bss_end+0xbcb23c>
     120:	2f616275 	svccs	0x00616275
     124:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     128:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     12c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     130:	614d6f72 	hvcvs	55026	; 0xd6f2
     134:	652f6574 	strvs	r6, [pc, #-1396]!	; fffffbc8 <_bss_end+0xfffedf18>
     138:	706d6178 	rsbvc	r6, sp, r8, ror r1
     13c:	2f73656c 	svccs	0x0073656c
     140:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     144:	6b2f4332 	blvs	bd0e14 <_bss_end+0xbbf164>
     148:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     14c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     150:	78632f63 	stmdavc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
     154:	70632e78 	rsbvc	r2, r3, r8, ror lr
     158:	5f5f0070 	svcpl	0x005f0070
     15c:	5f6f7364 	svcpl	0x006f7364
     160:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     164:	5f00656c 	svcpl	0x0000656c
     168:	6178635f 	cmnvs	r8, pc, asr r3
     16c:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     170:	00746978 	rsbseq	r6, r4, r8, ror r9
     174:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     178:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
     17c:	5f647261 	svcpl	0x00647261
     180:	75716361 	ldrbvc	r6, [r1, #-865]!	; 0xfffffc9f
     184:	00657269 	rsbeq	r7, r5, r9, ror #4
     188:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     18c:	69626178 	stmdbvs	r2!, {r3, r4, r5, r6, r8, sp, lr}^
     190:	5f003176 	svcpl	0x00003176
     194:	6178635f 	cmnvs	r8, pc, asr r3
     198:	7275705f 	rsbsvc	r7, r5, #95	; 0x5f
     19c:	69765f65 	ldmdbvs	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     1a0:	61757472 	cmnvs	r5, r2, ror r4
     1a4:	5f5f006c 	svcpl	0x005f006c
     1a8:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     1ac:	6e755f69 	cdpvs	15, 7, cr5, cr5, cr9, {3}
     1b0:	646e6977 	strbtvs	r6, [lr], #-2423	; 0xfffff689
     1b4:	7070635f 	rsbsvc	r6, r0, pc, asr r3
     1b8:	3172705f 	cmncc	r2, pc, asr r0
     1bc:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     1c0:	64726175 	ldrbtvs	r6, [r2], #-373	; 0xfffffe8b
     1c4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     1c8:	6f6c2067 	svcvs	0x006c2067
     1cc:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     1d0:	5f00746e 	svcpl	0x0000746e
     1d4:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     1d8:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     1dc:	61485f4f 	cmpvs	r8, pc, asr #30
     1e0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     1e4:	52313172 	eorspl	r3, r1, #-2147483620	; 0x8000001c
     1e8:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
     1ec:	505f6576 	subspl	r6, pc, r6, ror r5	; <UNPREDICTABLE>
     1f0:	6a456e69 	bvs	115bb9c <_bss_end+0x1149eec>
     1f4:	41006262 	tstmi	r0, r2, ror #4
     1f8:	305f746c 	subscc	r7, pc, ip, ror #8
     1fc:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     200:	4100315f 	tstmi	r0, pc, asr r1
     204:	325f746c 	subscc	r7, pc, #108, 8	; 0x6c000000
     208:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     20c:	4100335f 	tstmi	r0, pc, asr r3
     210:	345f746c 	ldrbcc	r7, [pc], #-1132	; 218 <CPSR_IRQ_INHIBIT+0x198>
     214:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     218:	6700355f 	smlsdvs	r0, pc, r5, r3	; <UNPREDICTABLE>
     21c:	5f6f6970 	svcpl	0x006f6970
     220:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     224:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     228:	5a5f0072 	bpl	17c03f8 <_bss_end+0x17ae748>
     22c:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     230:	4f495047 	svcmi	0x00495047
     234:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     238:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     23c:	6a453243 	bvs	114cb50 <_bss_end+0x113aea0>
     240:	735f5f00 	cmpvc	pc, #0, 30
     244:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
     248:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     24c:	61697469 	cmnvs	r9, r9, ror #8
     250:	617a696c 	cmnvs	sl, ip, ror #18
     254:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     258:	646e615f 	strbtvs	r6, [lr], #-351	; 0xfffffea1
     25c:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
     260:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     264:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     268:	5f00305f 	svcpl	0x0000305f
     26c:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     270:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     274:	61485f4f 	cmpvs	r8, pc, asr #30
     278:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     27c:	65473972 	strbvs	r3, [r7, #-2418]	; 0xfffff68e
     280:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
     284:	45747570 	ldrbmi	r7, [r4, #-1392]!	; 0xfffffa90
     288:	6553006a 	ldrbvs	r0, [r3, #-106]	; 0xffffff96
     28c:	50475f74 	subpl	r5, r7, r4, ror pc
     290:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
     294:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     298:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     29c:	55505047 	ldrbpl	r5, [r0, #-71]	; 0xffffffb9
     2a0:	4b4c4344 	blmi	1310fb8 <_bss_end+0x12ff308>
     2a4:	50470030 	subpl	r0, r7, r0, lsr r0
     2a8:	43445550 	movtmi	r5, #17744	; 0x4550
     2ac:	00314b4c 	eorseq	r4, r1, ip, asr #22
     2b0:	55505047 	ldrbpl	r5, [r0, #-71]	; 0xffffffb9
     2b4:	69540044 	ldmdbvs	r4, {r2, r6}^
     2b8:	5f72656d 	svcpl	0x0072656d
     2bc:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     2c0:	69506d00 	ldmdbvs	r0, {r8, sl, fp, sp, lr}^
     2c4:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
     2c8:	76726573 			; <UNDEFINED> instruction: 0x76726573
     2cc:	6f697461 	svcvs	0x00697461
     2d0:	525f736e 	subspl	r7, pc, #-1207959551	; 0xb8000001
     2d4:	00646165 	rsbeq	r6, r4, r5, ror #2
     2d8:	5f746547 	svcpl	0x00746547
     2dc:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
     2e0:	50470074 	subpl	r0, r7, r4, ror r0
     2e4:	304e454c 	subcc	r4, lr, ip, asr #10
     2e8:	4c504700 	mrrcmi	7, 0, r4, r0, cr0
     2ec:	00314e45 	eorseq	r4, r1, r5, asr #28
     2f0:	45535047 	ldrbmi	r5, [r3, #-71]	; 0xffffffb9
     2f4:	47003054 	smlsdmi	r0, r4, r0, r3
     2f8:	54455350 	strbpl	r5, [r5], #-848	; 0xfffffcb0
     2fc:	5a5f0031 	bpl	17c03c8 <_bss_end+0x17ae718>
     300:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     304:	4f495047 	svcmi	0x00495047
     308:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     30c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     310:	65724638 	ldrbvs	r4, [r2, #-1592]!	; 0xfffff9c8
     314:	69505f65 	ldmdbvs	r0, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     318:	626a456e 	rsbvs	r4, sl, #461373440	; 0x1b800000
     31c:	50470062 	subpl	r0, r7, r2, rrx
     320:	3056454c 	subscc	r4, r6, ip, asr #10
     324:	4c504700 	mrrcmi	7, 0, r4, r0, cr0
     328:	00315645 	eorseq	r5, r1, r5, asr #12
     32c:	73696874 	cmnvc	r9, #116, 16	; 0x740000
     330:	43534200 	cmpmi	r3, #0, 4
     334:	61425f30 	cmpvs	r2, r0, lsr pc
     338:	5f006573 	svcpl	0x00006573
     33c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     340:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
     344:	5f657a69 	svcpl	0x00657a69
     348:	6e490070 	mcrvs	0, 2, r0, cr9, cr0, {3}
     34c:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     350:	5f747075 	svcpl	0x00747075
     354:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     358:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
     35c:	425f7265 	subsmi	r7, pc, #1342177286	; 0x50000006
     360:	00657361 	rsbeq	r7, r5, r1, ror #6
     364:	474e5254 	smlsldmi	r5, lr, r4, r2
     368:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     36c:	6f6d0065 	svcvs	0x006d0065
     370:	41006564 	tstmi	r0, r4, ror #10
     374:	425f5855 	subsmi	r5, pc, #5570560	; 0x550000
     378:	00657361 	rsbeq	r7, r5, r1, ror #6
     37c:	53465047 	movtpl	r5, #24647	; 0x6047
     380:	00304c45 	eorseq	r4, r0, r5, asr #24
     384:	53465047 	movtpl	r5, #24647	; 0x6047
     388:	00314c45 	eorseq	r4, r1, r5, asr #24
     38c:	53465047 	movtpl	r5, #24647	; 0x6047
     390:	00324c45 	eorseq	r4, r2, r5, asr #24
     394:	53465047 	movtpl	r5, #24647	; 0x6047
     398:	00334c45 	eorseq	r4, r3, r5, asr #24
     39c:	53465047 	movtpl	r5, #24647	; 0x6047
     3a0:	00344c45 	eorseq	r4, r4, r5, asr #24
     3a4:	53465047 	movtpl	r5, #24647	; 0x6047
     3a8:	00354c45 	eorseq	r4, r5, r5, asr #24
     3ac:	4b4e5a5f 	blmi	1396d30 <_bss_end+0x1385080>
     3b0:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     3b4:	5f4f4950 	svcpl	0x004f4950
     3b8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     3bc:	3172656c 	cmncc	r2, ip, ror #10
     3c0:	74654739 	strbtvc	r4, [r5], #-1849	; 0xfffff8c7
     3c4:	4650475f 			; <UNDEFINED> instruction: 0x4650475f
     3c8:	5f4c4553 	svcpl	0x004c4553
     3cc:	61636f4c 	cmnvs	r3, ip, asr #30
     3d0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     3d4:	6a526a45 	bvs	149acf0 <_bss_end+0x1489040>
     3d8:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
     3dc:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     3e0:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
     3e4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     3e8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     3ec:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
     3f0:	5f314353 	svcpl	0x00314353
     3f4:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     3f8:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     3fc:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xfffff0b1
     400:	476d0067 	strbmi	r0, [sp, -r7, rrx]!
     404:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
     408:	4c435047 	mcrrmi	0, 4, r5, r3, cr7
     40c:	47003052 	smlsdmi	r0, r2, r0, r3
     410:	524c4350 	subpl	r4, ip, #80, 6	; 0x40000001
     414:	5a5f0031 	bpl	17c04e0 <_bss_end+0x17ae830>
     418:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     41c:	4f495047 	svcmi	0x00495047
     420:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     424:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     428:	65533031 	ldrbvs	r3, [r3, #-49]	; 0xffffffcf
     42c:	754f5f74 	strbvc	r5, [pc, #-3956]	; fffff4c0 <_bss_end+0xfffed810>
     430:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
     434:	00626a45 	rsbeq	r6, r2, r5, asr #20
     438:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     43c:	65470065 	strbvs	r0, [r7, #-101]	; 0xffffff9b
     440:	50475f74 	subpl	r5, r7, r4, ror pc
     444:	4c455346 	mcrrmi	3, 4, r5, r5, cr6
     448:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     44c:	6f697461 	svcvs	0x00697461
     450:	5047006e 	subpl	r0, r7, lr, rrx
     454:	425f4f49 	subsmi	r4, pc, #292	; 0x124
     458:	00657361 	rsbeq	r7, r5, r1, ror #6
     45c:	32435342 	subcc	r5, r3, #134217729	; 0x8000001
     460:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     464:	65470065 	strbvs	r0, [r7, #-101]	; 0xffffff9b
     468:	50475f74 	subpl	r5, r7, r4, ror pc
     46c:	5f56454c 	svcpl	0x0056454c
     470:	61636f4c 	cmnvs	r3, ip, asr #30
     474:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     478:	52504700 	subspl	r4, r0, #0, 14
     47c:	00304e45 	eorseq	r4, r0, r5, asr #28
     480:	45525047 	ldrbmi	r5, [r2, #-71]	; 0xffffffb9
     484:	4400314e 	strmi	r3, [r0], #-334	; 0xfffffeb2
     488:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     48c:	435f746c 	cmpmi	pc, #108, 8	; 0x6c000000
     490:	6b636f6c 	blvs	18dc248 <_bss_end+0x18ca598>
     494:	7461525f 	strbtvc	r5, [r1], #-607	; 0xfffffda1
     498:	475f0065 	ldrbmi	r0, [pc, -r5, rrx]
     49c:	41424f4c 	cmpmi	r2, ip, asr #30
     4a0:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
     4a4:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
     4a8:	5047735f 	subpl	r7, r7, pc, asr r3
     4ac:	5f004f49 	svcpl	0x00004f49
     4b0:	314b4e5a 	cmpcc	fp, sl, asr lr
     4b4:	50474333 	subpl	r4, r7, r3, lsr r3
     4b8:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     4bc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     4c0:	38317265 	ldmdacc	r1!, {r0, r2, r5, r6, r9, ip, sp, lr}
     4c4:	5f746547 	svcpl	0x00746547
     4c8:	4c435047 	mcrrmi	0, 4, r5, r3, cr7
     4cc:	6f4c5f52 	svcvs	0x004c5f52
     4d0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     4d4:	6a456e6f 	bvs	115be98 <_bss_end+0x114a1e8>
     4d8:	30536a52 	subscc	r6, r3, r2, asr sl
     4dc:	6547005f 	strbvs	r0, [r7, #-95]	; 0xffffffa1
     4e0:	50475f74 	subpl	r5, r7, r4, ror pc
     4e4:	5f524c43 	svcpl	0x00524c43
     4e8:	61636f4c 	cmnvs	r3, ip, asr #30
     4ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     4f0:	69506d00 	ldmdbvs	r0, {r8, sl, fp, sp, lr}^
     4f4:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
     4f8:	76726573 			; <UNDEFINED> instruction: 0x76726573
     4fc:	6f697461 	svcvs	0x00697461
     500:	575f736e 	ldrbpl	r7, [pc, -lr, ror #6]
     504:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     508:	41504700 	cmpmi	r0, r0, lsl #14
     50c:	304e4552 	subcc	r4, lr, r2, asr r5
     510:	41504700 	cmpmi	r0, r0, lsl #14
     514:	314e4552 	cmpcc	lr, r2, asr r5
     518:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     51c:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xfffff0a1
     520:	00747570 	rsbseq	r7, r4, r0, ror r5
     524:	314e5a5f 	cmpcc	lr, pc, asr sl
     528:	50474333 	subpl	r4, r7, r3, lsr r3
     52c:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     530:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     534:	37317265 	ldrcc	r7, [r1, -r5, ror #4]!
     538:	5f746553 	svcpl	0x00746553
     53c:	4f495047 	svcmi	0x00495047
     540:	6e75465f 	mrcvs	6, 3, r4, cr5, cr15, {2}
     544:	6f697463 	svcvs	0x00697463
     548:	316a456e 	cmncc	sl, lr, ror #10
     54c:	50474e34 	subpl	r4, r7, r4, lsr lr
     550:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
     554:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     558:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     55c:	45485047 	strbmi	r5, [r8, #-71]	; 0xffffffb9
     560:	4700304e 	strmi	r3, [r0, -lr, asr #32]
     564:	4e454850 	mcrmi	8, 2, r4, cr5, cr0, {2}
     568:	6e750031 	mrcvs	0, 3, r0, cr5, cr1, {1}
     56c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     570:	63206465 			; <UNDEFINED> instruction: 0x63206465
     574:	00726168 	rsbseq	r6, r2, r8, ror #2
     578:	5f746547 	svcpl	0x00746547
     57c:	4f495047 	svcmi	0x00495047
     580:	6e75465f 	mrcvs	6, 3, r4, cr5, cr15, {2}
     584:	6f697463 	svcvs	0x00697463
     588:	5047006e 	subpl	r0, r7, lr, rrx
     58c:	505f4f49 	subspl	r4, pc, r9, asr #30
     590:	435f6e69 	cmpmi	pc, #1680	; 0x690
     594:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     598:	6f687300 	svcvs	0x00687300
     59c:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     5a0:	4600746e 	strmi	r7, [r0], -lr, ror #8
     5a4:	5f656572 	svcpl	0x00656572
     5a8:	006e6950 	rsbeq	r6, lr, r0, asr r9
     5ac:	6b6e6162 	blvs	1b98b3c <_bss_end+0x1b86e8c>
     5b0:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     5b4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     5b8:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     5bc:	5f4f4950 	svcpl	0x004f4950
     5c0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     5c4:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
     5c8:	006a4534 	rsbeq	r4, sl, r4, lsr r5
     5cc:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     5d0:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     5d4:	425f6c61 	subsmi	r6, pc, #24832	; 0x6100
     5d8:	00657361 	rsbeq	r7, r5, r1, ror #6
     5dc:	5f746962 	svcpl	0x00746962
     5e0:	00786469 	rsbseq	r6, r8, r9, ror #8
     5e4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     5e8:	745f3233 	ldrbvc	r3, [pc], #-563	; 5f0 <CPSR_IRQ_INHIBIT+0x570>
     5ec:	73655200 	cmnvc	r5, #0, 4
     5f0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
     5f4:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
     5f8:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
     5fc:	5a5f0063 	bpl	17c0790 <_bss_end+0x17aeae0>
     600:	33314b4e 	teqcc	r1, #79872	; 0x13800
     604:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     608:	61485f4f 	cmpvs	r8, pc, asr #30
     60c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     610:	47383172 			; <UNDEFINED> instruction: 0x47383172
     614:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     618:	56454c50 			; <UNDEFINED> instruction: 0x56454c50
     61c:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     620:	6f697461 	svcvs	0x00697461
     624:	526a456e 	rsbpl	r4, sl, #461373440	; 0x1b800000
     628:	5f30536a 	svcpl	0x0030536a
     62c:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
     630:	5350475f 	cmppl	r0, #24903680	; 0x17c0000
     634:	4c5f5445 	cfldrdmi	mvd5, [pc], {69}	; 0x45
     638:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     63c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     640:	44455047 	strbmi	r5, [r5], #-71	; 0xffffffb9
     644:	47003053 	smlsdmi	r0, r3, r0, r3
     648:	53444550 	movtpl	r4, #17744	; 0x4550
     64c:	50470031 	subpl	r0, r7, r1, lsr r0
     650:	304e4546 	subcc	r4, lr, r6, asr #10
     654:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     658:	00314e45 	eorseq	r4, r1, r5, asr #28
     65c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     660:	552f632f 	strpl	r6, [pc, #-815]!	; 339 <CPSR_IRQ_INHIBIT+0x2b9>
     664:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     668:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     66c:	6f442f61 	svcvs	0x00442f61
     670:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     674:	2f73746e 	svccs	0x0073746e
     678:	6f72655a 	svcvs	0x0072655a
     67c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     680:	6178652f 	cmnvs	r8, pc, lsr #10
     684:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     688:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     68c:	4332492d 	teqmi	r2, #737280	; 0xb4000
     690:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     694:	2f6c656e 	svccs	0x006c656e
     698:	2f637273 	svccs	0x00637273
     69c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     6a0:	2f737265 	svccs	0x00737265
     6a4:	6f697067 	svcvs	0x00697067
     6a8:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
     6ac:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     6b0:	4333314b 	teqmi	r3, #-1073741806	; 0xc0000012
     6b4:	4f495047 	svcmi	0x00495047
     6b8:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     6bc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     6c0:	65473831 	strbvs	r3, [r7, #-2097]	; 0xfffff7cf
     6c4:	50475f74 	subpl	r5, r7, r4, ror pc
     6c8:	5f544553 	svcpl	0x00544553
     6cc:	61636f4c 	cmnvs	r3, ip, asr #30
     6d0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6d4:	6a526a45 	bvs	149aff0 <_bss_end+0x1489340>
     6d8:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
     6dc:	46415047 	strbmi	r5, [r1], -r7, asr #32
     6e0:	00304e45 	eorseq	r4, r0, r5, asr #28
     6e4:	46415047 	strbmi	r5, [r1], -r7, asr #32
     6e8:	00314e45 	eorseq	r4, r1, r5, asr #28
     6ec:	4b4e5a5f 	blmi	1397070 <_bss_end+0x13853c0>
     6f0:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     6f4:	5f4f4950 	svcpl	0x004f4950
     6f8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     6fc:	3172656c 	cmncc	r2, ip, ror #10
     700:	74654737 	strbtvc	r4, [r5], #-1847	; 0xfffff8c9
     704:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     708:	75465f4f 	strbvc	r5, [r6, #-3919]	; 0xfffff0b1
     70c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     710:	6a456e6f 	bvs	115c0d4 <_bss_end+0x114a424>
     714:	61657200 	cmnvs	r5, r0, lsl #4
     718:	47430064 	strbmi	r0, [r3, -r4, rrx]
     71c:	5f4f4950 	svcpl	0x004f4950
     720:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     724:	0072656c 	rsbseq	r6, r2, ip, ror #10
     728:	70736e55 	rsbsvc	r6, r3, r5, asr lr
     72c:	66696365 	strbtvs	r6, [r9], -r5, ror #6
     730:	00646569 	rsbeq	r6, r4, r9, ror #10
     734:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
     738:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     73c:	49007974 	stmdbmi	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     740:	704f5f73 	subvc	r5, pc, r3, ror pc	; <UNPREDICTABLE>
     744:	64656e65 	strbtvs	r6, [r5], #-3685	; 0xfffff19b
     748:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
     74c:	65445f61 	strbvs	r5, [r4, #-3937]	; 0xfffff09f
     750:	0079616c 	rsbseq	r6, r9, ip, ror #2
     754:	43324943 	teqmi	r2, #1097728	; 0x10c000
     758:	6172545f 	cmnvs	r2, pc, asr r4
     75c:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     760:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     764:	704f6d00 	subvc	r6, pc, r0, lsl #26
     768:	64656e65 	strbtvs	r6, [r5], #-3685	; 0xfffff19b
     76c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     770:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     774:	45324343 	ldrmi	r4, [r2, #-835]!	; 0xfffffcbd
     778:	006a6a6d 	rsbeq	r6, sl, sp, ror #20
     77c:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     780:	43324943 	teqmi	r2, #1097728	; 0x10c000
     784:	67655233 			; <UNDEFINED> instruction: 0x67655233
     788:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
     78c:	42376c61 	eorsmi	r6, r7, #24832	; 0x6100
     790:	525f4353 	subspl	r4, pc, #1275068417	; 0x4c000001
     794:	00456765 	subeq	r6, r5, r5, ror #14
     798:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     79c:	745f3631 	ldrbvc	r3, [pc], #-1585	; 7a4 <CPSR_IRQ_INHIBIT+0x724>
     7a0:	43534200 	cmpmi	r3, #0, 4
     7a4:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
     7a8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     7ac:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     7b0:	57303143 	ldrpl	r3, [r0, -r3, asr #2]!
     7b4:	5f746961 	svcpl	0x00746961
     7b8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     7bc:	00764579 	rsbseq	r4, r6, r9, ror r5
     7c0:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     7c4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     7c8:	6d453443 	cfstrdvs	mvd3, [r5, #-268]	; 0xfffffef4
     7cc:	52006a6a 	andpl	r6, r0, #434176	; 0x6a000
     7d0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     7d4:	6d006576 	cfstr32vs	mvfx6, [r0, #-472]	; 0xfffffe28
     7d8:	505f6e49 	subspl	r6, pc, r9, asr #28
     7dc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     7e0:	00737365 	rsbseq	r7, r3, r5, ror #6
     7e4:	544b4c43 	strbpl	r4, [fp], #-3139	; 0xfffff3bd
     7e8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     7ec:	49433631 	stmdbmi	r3, {r0, r4, r5, r9, sl, ip, sp}^
     7f0:	545f4332 	ldrbpl	r4, [pc], #-818	; 7f8 <CPSR_IRQ_INHIBIT+0x778>
     7f4:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     7f8:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     7fc:	34436e6f 	strbcc	r6, [r3], #-3695	; 0xfffff191
     800:	43007645 	movwmi	r7, #1605	; 0x645
     804:	6b636f6c 	blvs	18dc5bc <_bss_end+0x18ca90c>
     808:	7669445f 			; <UNDEFINED> instruction: 0x7669445f
     80c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     810:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     814:	45353143 	ldrmi	r3, [r5, #-323]!	; 0xfffffebd
     818:	545f646e 	ldrbpl	r6, [pc], #-1134	; 820 <CPSR_IRQ_INHIBIT+0x7a0>
     81c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     820:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     824:	52456e6f 	subpl	r6, r5, #1776	; 0x6f0
     828:	49433631 	stmdbmi	r3, {r0, r4, r5, r9, sl, ip, sp}^
     82c:	545f4332 	ldrbpl	r4, [pc], #-818	; 834 <CPSR_IRQ_INHIBIT+0x7b4>
     830:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     834:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     838:	00626e6f 	rsbeq	r6, r2, pc, ror #28
     83c:	5f646e45 	svcpl	0x00646e45
     840:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     844:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     848:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     84c:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
     850:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     854:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     858:	5f6e6970 	svcpl	0x006e6970
     85c:	006c6373 	rsbeq	r6, ip, r3, ror r3
     860:	6675426d 	ldrbtvs	r4, [r5], -sp, ror #4
     864:	00726566 	rsbseq	r6, r2, r6, ror #10
     868:	61746144 	cmnvs	r4, r4, asr #2
     86c:	4649465f 			; <UNDEFINED> instruction: 0x4649465f
     870:	5a5f004f 	bpl	17c09b4 <_bss_end+0x17aed04>
     874:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
     878:	5f433249 	svcpl	0x00433249
     87c:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     880:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     884:	316e6f69 	cmncc	lr, r9, ror #30
     888:	74655331 	strbtvc	r5, [r5], #-817	; 0xfffffccf
     88c:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     890:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     894:	70007445 	andvc	r7, r0, r5, asr #8
     898:	735f6e69 	cmpvc	pc, #1680	; 0x690
     89c:	5f006164 	svcpl	0x00006164
     8a0:	43344e5a 	teqmi	r4, #1440	; 0x5a0
     8a4:	35433249 	strbcc	r3, [r3, #-585]	; 0xfffffdb7
     8a8:	736f6c43 	cmnvc	pc, #17152	; 0x4300
     8ac:	00764565 	rsbseq	r4, r6, r5, ror #10
     8b0:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     8b4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     8b8:	6e655334 	mcrvs	3, 3, r5, cr5, cr4, {1}
     8bc:	50744564 	rsbspl	r4, r4, r4, ror #10
     8c0:	006a634b 	rsbeq	r6, sl, fp, asr #6
     8c4:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     8c8:	43324943 	teqmi	r2, #1097728	; 0x10c000
     8cc:	65423731 	strbvs	r3, [r2, #-1841]	; 0xfffff8cf
     8d0:	5f6e6967 	svcpl	0x006e6967
     8d4:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     8d8:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     8dc:	456e6f69 	strbmi	r6, [lr, #-3945]!	; 0xfffff097
     8e0:	6f630074 	svcvs	0x00630074
     8e4:	74696d6d 	strbtvc	r6, [r9], #-3437	; 0xfffff293
     8e8:	43536d00 	cmpmi	r3, #0, 26
     8ec:	69505f4c 	ldmdbvs	r0, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     8f0:	416d006e 	cmnmi	sp, lr, rrx
     8f4:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
     8f8:	5f007373 	svcpl	0x00007373
     8fc:	344b4e5a 	strbcc	r4, [fp], #-3674	; 0xfffff1a6
     900:	43324943 	teqmi	r2, #1097728	; 0x10c000
     904:	5f734939 	svcpl	0x00734939
     908:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     90c:	76456465 	strbvc	r6, [r5], -r5, ror #8
     910:	67654200 	strbvs	r4, [r5, -r0, lsl #4]!
     914:	545f6e69 	ldrbpl	r6, [pc], #-3689	; 91c <CPSR_IRQ_INHIBIT+0x89c>
     918:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     91c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     920:	53006e6f 	movwpl	r6, #3695	; 0xe6f
     924:	00646e65 	rsbeq	r6, r4, r5, ror #28
     928:	314e5a5f 	cmpcc	lr, pc, asr sl
     92c:	32494336 	subcc	r4, r9, #-671088640	; 0xd8000000
     930:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     934:	61736e61 	cmnvs	r3, r1, ror #28
     938:	6f697463 	svcvs	0x00697463
     93c:	4532436e 	ldrmi	r4, [r2, #-878]!	; 0xfffffc92
     940:	4c6d0076 	stclmi	0, cr0, [sp], #-472	; 0xfffffe28
     944:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     948:	61440068 	cmpvs	r4, r8, rrx
     94c:	4c5f6174 	ldfmie	f6, [pc], {116}	; 0x74
     950:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     954:	65530068 	ldrbvs	r0, [r3, #-104]	; 0xffffff98
     958:	64415f74 	strbvs	r5, [r1], #-3956	; 0xfffff08c
     95c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
     960:	61570073 	cmpvs	r7, r3, ror r0
     964:	525f7469 	subspl	r7, pc, #1761607680	; 0x69000000
     968:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     96c:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
     970:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
     974:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
     978:	5f495f62 	svcpl	0x00495f62
     97c:	43324973 	teqmi	r2, #1884160	; 0x1cc000
     980:	69750031 	ldmdbvs	r5!, {r0, r4, r5}^
     984:	5f38746e 	svcpl	0x0038746e
     988:	32490074 	subcc	r0, r9, #116	; 0x74
     98c:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     990:	61736e61 	cmnvs	r3, r1, ror #28
     994:	6f697463 	svcvs	0x00697463
     998:	614d5f6e 	cmpvs	sp, lr, ror #30
     99c:	69535f78 	ldmdbvs	r3, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     9a0:	6d00657a 	cfstr32vs	mvfx6, [r0, #-488]	; 0xfffffe18
     9a4:	5f435342 	svcpl	0x00435342
     9a8:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     9ac:	6f6c4300 	svcvs	0x006c4300
     9b0:	6d006573 	cfstr32vs	mvfx6, [r0, #-460]	; 0xfffffe34
     9b4:	5f414453 	svcpl	0x00414453
     9b8:	006e6950 	rsbeq	r6, lr, r0, asr r9
     9bc:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     9c0:	552f632f 	strpl	r6, [pc, #-815]!	; 699 <CPSR_IRQ_INHIBIT+0x619>
     9c4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     9c8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     9cc:	6f442f61 	svcvs	0x00442f61
     9d0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     9d4:	2f73746e 	svccs	0x0073746e
     9d8:	6f72655a 	svcvs	0x0072655a
     9dc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     9e0:	6178652f 	cmnvs	r8, pc, lsr #10
     9e4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     9e8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     9ec:	4332492d 	teqmi	r2, #737280	; 0xb4000
     9f0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     9f4:	2f6c656e 	svccs	0x006c656e
     9f8:	2f637273 	svccs	0x00637273
     9fc:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     a00:	2f737265 	svccs	0x00737265
     a04:	2e633269 	cdpcs	2, 6, cr3, cr3, cr9, {3}
     a08:	00707063 	rsbseq	r7, r0, r3, rrx
     a0c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     a10:	6d007375 	stcvs	3, cr7, [r0, #-468]	; 0xfffffe2c
     a14:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     a18:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     a1c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     a20:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     a24:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     a28:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     a2c:	65523743 	ldrbvs	r3, [r2, #-1859]	; 0xfffff8bd
     a30:	76696563 	strbtvc	r6, [r9], -r3, ror #10
     a34:	50744565 	rsbspl	r4, r4, r5, ror #10
     a38:	5f006a63 	svcpl	0x00006a63
     a3c:	43344e5a 	teqmi	r4, #1440	; 0x5a0
     a40:	34433249 	strbcc	r3, [r3], #-585	; 0xfffffdb7
     a44:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     a48:	76007645 	strvc	r7, [r0], -r5, asr #12
     a4c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     a50:	6e5f6d00 	cdpvs	13, 5, cr6, cr15, cr0, {0}
     a54:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     a58:	61625f72 	smcvs	9714	; 0x25f2
     a5c:	52006573 	andpl	r6, r0, #482344960	; 0x1cc00000
     a60:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     a64:	6d754e5f 	ldclvs	14, cr4, [r5, #-380]!	; 0xfffffe84
     a68:	5f726562 	svcpl	0x00726562
     a6c:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     a70:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     a74:	6f4d4338 	svcvs	0x004d4338
     a78:	6f74696e 	svcvs	0x0074696e
     a7c:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
     a80:	006a6a6a 	rsbeq	r6, sl, sl, ror #20
     a84:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     a88:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     a8c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     a90:	64413331 	strbvs	r3, [r1], #-817	; 0xfffffccf
     a94:	7473756a 	ldrbtvc	r7, [r3], #-1386	; 0xfffffa96
     a98:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
     a9c:	45726f73 	ldrbmi	r6, [r2, #-3955]!	; 0xfffff08d
     aa0:	74690076 	strbtvc	r0, [r9], #-118	; 0xffffff8a
     aa4:	5200616f 	andpl	r6, r0, #-1073741797	; 0xc000001b
     aa8:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     aac:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
     ab0:	00726f73 	rsbseq	r6, r2, r3, ror pc
     ab4:	756a6441 	strbvc	r6, [sl, #-1089]!	; 0xfffffbbf
     ab8:	435f7473 	cmpmi	pc, #1929379840	; 0x73000000
     abc:	6f737275 	svcvs	0x00737275
     ac0:	6d2f0072 	stcvs	0, cr0, [pc, #-456]!	; 900 <CPSR_IRQ_INHIBIT+0x880>
     ac4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     ac8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     acc:	4b2f7372 	blmi	bdd89c <_bss_end+0xbcbbec>
     ad0:	2f616275 	svccs	0x00616275
     ad4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     ad8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     adc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     ae0:	614d6f72 	hvcvs	55026	; 0xd6f2
     ae4:	652f6574 	strvs	r6, [pc, #-1396]!	; 578 <CPSR_IRQ_INHIBIT+0x4f8>
     ae8:	706d6178 	rsbvc	r6, sp, r8, ror r1
     aec:	2f73656c 	svccs	0x0073656c
     af0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     af4:	6b2f4332 	blvs	bd17c4 <_bss_end+0xbbfb14>
     af8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     afc:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     b00:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     b04:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     b08:	6f6d2f73 	svcvs	0x006d2f73
     b0c:	6f74696e 	svcvs	0x0074696e
     b10:	70632e72 	rsbvc	r2, r3, r2, ror lr
     b14:	4e4e0070 	mcrmi	0, 2, r0, cr14, cr0, {3}
     b18:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     b1c:	61425f72 	hvcvs	9714	; 0x25f2
     b20:	54006573 	strpl	r6, [r0], #-1395	; 0xfffffa8d
     b24:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
     b28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     b2c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     b30:	6f4d4338 	svcvs	0x004d4338
     b34:	6f74696e 	svcvs	0x0074696e
     b38:	52373172 	eorspl	r3, r7, #-2147483620	; 0x8000001c
     b3c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     b40:	6d754e5f 	ldclvs	14, cr4, [r5, #-380]!	; 0xfffffe84
     b44:	5f726562 	svcpl	0x00726562
     b48:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     b4c:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
     b50:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
     b54:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b58:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
     b5c:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
     b60:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
     b64:	5f495f62 	svcpl	0x00495f62
     b68:	6e6f4d73 	mcrvs	13, 3, r4, cr15, cr3, {3}
     b6c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b70:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     b74:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b78:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     b7c:	64615f65 	strbtvs	r5, [r1], #-3941	; 0xfffff09b
     b80:	5f007264 	svcpl	0x00007264
     b84:	43384e5a 	teqmi	r8, #1440	; 0x5a0
     b88:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     b8c:	35726f74 	ldrbcc	r6, [r2, #-3956]!	; 0xfffff08c
     b90:	61656c43 	cmnvs	r5, r3, asr #24
     b94:	00764572 	rsbseq	r4, r6, r2, ror r5
     b98:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     b9c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     ba0:	65706f00 	ldrbvs	r6, [r0, #-3840]!	; 0xfffff100
     ba4:	6f746172 	svcvs	0x00746172
     ba8:	003c3c72 	eorseq	r3, ip, r2, ror ip
     bac:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     bb0:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     bb4:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     bb8:	5045736c 	subpl	r7, r5, ip, ror #6
     bbc:	5f00634b 	svcpl	0x0000634b
     bc0:	43384e5a 	teqmi	r8, #1440	; 0x5a0
     bc4:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     bc8:	34726f74 	ldrbtcc	r6, [r2], #-3956	; 0xfffff08c
     bcc:	616f7469 	cmnvs	pc, r9, ror #8
     bd0:	63506a45 	cmpvs	r0, #282624	; 0x45000
     bd4:	5f6d006a 	svcpl	0x006d006a
     bd8:	67696568 	strbvs	r6, [r9, -r8, ror #10]!
     bdc:	6d007468 	cfstrsvs	mvf7, [r0, #-416]	; 0xfffffe60
     be0:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
     be4:	00726f73 	rsbseq	r6, r2, r3, ror pc
     be8:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
     bec:	766e6f43 	strbtvc	r6, [lr], -r3, asr #30
     bf0:	00727241 	rsbseq	r7, r2, r1, asr #4
     bf4:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     bf8:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     bfc:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     c00:	6245736c 	subvs	r7, r5, #108, 6	; 0xb0000001
     c04:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c08:	6f4d4338 	svcvs	0x004d4338
     c0c:	6f74696e 	svcvs	0x0074696e
     c10:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     c14:	5f6d0063 	svcpl	0x006d0063
     c18:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     c1c:	5a5f0068 	bpl	17c0dc4 <_bss_end+0x17af114>
     c20:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c24:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c28:	5336726f 	teqpl	r6, #-268435450	; 0xf0000006
     c2c:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; aa8 <CPSR_IRQ_INHIBIT+0xa28>
     c30:	0076456c 	rsbseq	r4, r6, ip, ror #10
     c34:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     c38:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     c3c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     c40:	6a45736c 	bvs	115d9f8 <_bss_end+0x114bd48>
     c44:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c48:	6f4d4338 	svcvs	0x004d4338
     c4c:	6f74696e 	svcvs	0x0074696e
     c50:	52323172 	eorspl	r3, r2, #-2147483620	; 0x8000001c
     c54:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     c58:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
     c5c:	45726f73 	ldrbmi	r6, [r2, #-3955]!	; 0xfffff08d
     c60:	5a5f0076 	bpl	17c0e40 <_bss_end+0x17af190>
     c64:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c68:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c6c:	3443726f 	strbcc	r7, [r3], #-623	; 0xfffffd91
     c70:	6a6a6a45 	bvs	1a9b58c <_bss_end+0x1a898dc>
     c74:	46454400 	strbmi	r4, [r5], -r0, lsl #8
     c78:	544c5541 	strbpl	r5, [ip], #-1345	; 0xfffffabf
     c7c:	4d554e5f 	ldclmi	14, cr4, [r5, #-380]	; 0xfffffe84
     c80:	5f524542 	svcpl	0x00524542
     c84:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
     c88:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c8c:	6f4d4338 	svcvs	0x004d4338
     c90:	6f74696e 	svcvs	0x0074696e
     c94:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     c98:	315f534e 	cmpcc	pc, lr, asr #6
     c9c:	754e4e32 	strbvc	r4, [lr, #-3634]	; 0xfffff1ce
     ca0:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     ca4:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     ca8:	6f004565 	svcvs	0x00004565
     cac:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
     cb0:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
     cb4:	00747570 	rsbseq	r7, r4, r0, ror r5
     cb8:	75625f73 	strbvc	r5, [r2, #-3955]!	; 0xfffff08d
     cbc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     cc0:	46554200 	ldrbmi	r4, [r5], -r0, lsl #4
     cc4:	5f524546 	svcpl	0x00524546
     cc8:	455a4953 	ldrbmi	r4, [sl, #-2387]	; 0xfffff6ad
     ccc:	65486d00 	strbvs	r6, [r8, #-3328]	; 0xfffff300
     cd0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     cd4:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
     cd8:	74535f61 	ldrbvc	r5, [r3], #-3937	; 0xfffff09f
     cdc:	00747261 	rsbseq	r7, r4, r1, ror #4
     ce0:	314e5a5f 	cmpcc	lr, pc, asr sl
     ce4:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     ce8:	616c7073 	smcvs	50947	; 0xc703
     cec:	53535f79 	cmppl	r3, #484	; 0x1e4
     cf0:	30333144 	eorscc	r3, r3, r4, asr #2
     cf4:	6c463436 	cfstrdvs	mvd3, [r6], {54}	; 0x36
     cf8:	76457069 	strbvc	r7, [r5], -r9, rrx
     cfc:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
     d00:	6f437261 	svcvs	0x00437261
     d04:	00726f6c 	rsbseq	r6, r2, ip, ror #30
     d08:	76657270 			; <UNDEFINED> instruction: 0x76657270
     d0c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     d10:	4b433032 	blmi	10ccde0 <_bss_end+0x10bb130>
     d14:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     d18:	65485f6c 	strbvs	r5, [r8, #-3948]	; 0xfffff094
     d1c:	4d5f7061 	ldclmi	0, cr7, [pc, #-388]	; ba0 <CPSR_IRQ_INHIBIT+0xb20>
     d20:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     d24:	35317265 	ldrcc	r7, [r1, #-613]!	; 0xfffffd9b
     d28:	6f6c6c41 	svcvs	0x006c6c41
     d2c:	654e5f63 	strbvs	r5, [lr, #-3939]	; 0xfffff09d
     d30:	505f7478 	subspl	r7, pc, r8, ror r4	; <UNPREDICTABLE>
     d34:	45656761 	strbmi	r6, [r5, #-1889]!	; 0xfffff89f
     d38:	6d2f0076 	stcvs	0, cr0, [pc, #-472]!	; b68 <CPSR_IRQ_INHIBIT+0xae8>
     d3c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     d40:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     d44:	4b2f7372 	blmi	bddb14 <_bss_end+0xbcbe64>
     d48:	2f616275 	svccs	0x00616275
     d4c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     d50:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     d54:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     d58:	614d6f72 	hvcvs	55026	; 0xd6f2
     d5c:	652f6574 	strvs	r6, [pc, #-1396]!	; 7f0 <CPSR_IRQ_INHIBIT+0x770>
     d60:	706d6178 	rsbvc	r6, sp, r8, ror r1
     d64:	2f73656c 	svccs	0x0073656c
     d68:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     d6c:	6b2f4332 	blvs	bd1a3c <_bss_end+0xbbfd8c>
     d70:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     d74:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     d78:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     d7c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     d80:	6c6f2f73 	stclvs	15, cr2, [pc], #-460	; bbc <CPSR_IRQ_INHIBIT+0xb3c>
     d84:	735f6465 	cmpvc	pc, #1694498816	; 0x65000000
     d88:	33316473 	teqcc	r1, #1929379840	; 0x73000000
     d8c:	632e3630 			; <UNDEFINED> instruction: 0x632e3630
     d90:	53007070 	movwpl	r7, #112	; 0x70
     d94:	4c5f7465 	cfldrdmi	mvd7, [pc], {101}	; 0x65
     d98:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
     d9c:	6c6f435f 	stclvs	3, cr4, [pc], #-380	; c28 <CPSR_IRQ_INHIBIT+0xba8>
     da0:	006e6d75 	rsbeq	r6, lr, r5, ror sp
     da4:	314e5a5f 	cmpcc	lr, pc, asr sl
     da8:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     dac:	616c7073 	smcvs	50947	; 0xc703
     db0:	53535f79 	cmppl	r3, #484	; 0x1e4
     db4:	30333144 	eorscc	r3, r3, r4, asr #2
     db8:	50343236 	eorspl	r3, r4, r6, lsr r2
     dbc:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
     dc0:	455f7373 	ldrbmi	r7, [pc, #-883]	; a55 <CPSR_IRQ_INHIBIT+0x9d5>
     dc4:	72657478 	rsbvc	r7, r5, #120, 8	; 0x78000000
     dc8:	5f6c616e 	svcpl	0x006c616e
     dcc:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
     dd0:	45646e61 	strbmi	r6, [r4, #-3681]!	; 0xfffff19f
     dd4:	6a634b50 	bvs	18d3b1c <_bss_end+0x18c1e6c>
     dd8:	69445400 	stmdbvs	r4, {sl, ip, lr}^
     ddc:	616c7073 	smcvs	50947	; 0xc703
     de0:	6c435f79 	mcrrvs	15, 7, r5, r3, cr9
     de4:	5f726165 	svcpl	0x00726165
     de8:	6b636150 	blvs	18d9330 <_bss_end+0x18c7680>
     dec:	53007465 	movwpl	r7, #1125	; 0x465
     df0:	33314453 	teqcc	r1, #1392508928	; 0x53000000
     df4:	435f3630 	cmpmi	pc, #48, 12	; 0x3000000
     df8:	6e00646d 	cdpvs	4, 0, cr6, cr0, cr13, {3}
     dfc:	00747865 	rsbseq	r7, r4, r5, ror #16
     e00:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
     e04:	5f6c656e 	svcpl	0x006c656e
     e08:	70616548 	rsbvc	r6, r1, r8, asr #10
     e0c:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
     e10:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
     e14:	69445400 	stmdbvs	r4, {sl, ip, lr}^
     e18:	616c7073 	smcvs	50947	; 0xc703
     e1c:	61505f79 	cmpvs	r0, r9, ror pc
     e20:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
     e24:	6165485f 	cmnvs	r5, pc, asr r8
     e28:	00726564 	rsbseq	r6, r2, r4, ror #10
     e2c:	69726f48 	ldmdbvs	r2!, {r3, r6, r8, r9, sl, fp, sp, lr}^
     e30:	746e6f7a 	strbtvc	r6, [lr], #-3962	; 0xfffff086
     e34:	535f6c61 	cmppl	pc, #24832	; 0x6100
     e38:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; cb4 <CPSR_IRQ_INHIBIT+0xc34>
     e3c:	72565f6c 	subsvc	r5, r6, #108, 30	; 0x1b0
     e40:	69525f74 	ldmdbvs	r2, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     e44:	00746867 	rsbseq	r6, r4, r7, ror #16
     e48:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     e4c:	69576d00 	ldmdbvs	r7, {r8, sl, fp, sp, lr}^
     e50:	00687464 	rsbeq	r7, r8, r4, ror #8
     e54:	6f6d654d 	svcvs	0x006d654d
     e58:	415f7972 	cmpmi	pc, r2, ror r9	; <UNPREDICTABLE>
     e5c:	5f726464 	svcpl	0x00726464
     e60:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
     e64:	72696600 	rsbvc	r6, r9, #0, 12
     e68:	5f007473 	svcpl	0x00007473
     e6c:	314b4e5a 	cmpcc	fp, sl, asr lr
     e70:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     e74:	616c7073 	smcvs	50947	; 0xc703
     e78:	53535f79 	cmppl	r3, #484	; 0x1e4
     e7c:	30333144 	eorscc	r3, r3, r4, asr #2
     e80:	73493936 	movtvc	r3, #39222	; 0x9936
     e84:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
     e88:	4564656e 	strbmi	r6, [r4, #-1390]!	; 0xfffffa92
     e8c:	5a5f0076 	bpl	17c106c <_bss_end+0x17af3bc>
     e90:	76506c64 	ldrbvc	r6, [r0], -r4, ror #24
     e94:	6676006a 	ldrbtvs	r0, [r6], -sl, rrx
     e98:	0070696c 	rsbseq	r6, r0, ip, ror #18
     e9c:	665f7369 	ldrbvs	r7, [pc], -r9, ror #6
     ea0:	00656572 	rsbeq	r6, r5, r2, ror r5
     ea4:	5f746553 	svcpl	0x00746553
     ea8:	5f6d6f43 	svcpl	0x006d6f43
     eac:	736e6950 	cmnvc	lr, #80, 18	; 0x140000
     eb0:	61654400 	cmnvs	r5, r0, lsl #8
     eb4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
     eb8:	5f657461 	svcpl	0x00657461
     ebc:	6f726353 	svcvs	0x00726353
     ec0:	54006c6c 	strpl	r6, [r0], #-3180	; 0xfffff394
     ec4:	70736944 	rsbsvc	r6, r3, r4, asr #18
     ec8:	5f79616c 	svcpl	0x0079616c
     ecc:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
     ed0:	545f736c 	ldrbpl	r7, [pc], #-876	; ed8 <CPSR_IRQ_INHIBIT+0xe58>
     ed4:	65525f6f 	ldrbvs	r5, [r2, #-3951]	; 0xfffff091
     ed8:	41007463 	tstmi	r0, r3, ror #8
     edc:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     ee0:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     ee4:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
     ee8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     eec:	6f6c435f 	svcvs	0x006c435f
     ef0:	445f6b63 	ldrbmi	r6, [pc], #-2915	; ef8 <CPSR_IRQ_INHIBIT+0xe78>
     ef4:	525f7669 	subspl	r7, pc, #110100480	; 0x6900000
     ef8:	6f697461 	svcvs	0x00697461
     efc:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     f00:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0xffffffa1
     f04:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     f08:	505f6567 	subspl	r6, pc, r7, ror #10
     f0c:	6f697265 	svcvs	0x00697265
     f10:	65530064 	ldrbvs	r0, [r3, #-100]	; 0xffffff9c
     f14:	43565f74 	cmpmi	r6, #116, 30	; 0x1d0
     f18:	445f4d4f 	ldrbmi	r4, [pc], #-3407	; f20 <CPSR_IRQ_INHIBIT+0xea0>
     f1c:	63657465 	cmnvs	r5, #1694498816	; 0x65000000
     f20:	5a5f0074 	bpl	17c10f8 <_bss_end+0x17af448>
     f24:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
     f28:	70736944 	rsbsvc	r6, r3, r4, asr #18
     f2c:	5f79616c 	svcpl	0x0079616c
     f30:	31445353 	cmpcc	r4, r3, asr r3
     f34:	34363033 	ldrtcc	r3, [r6], #-51	; 0xffffffcd
     f38:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     f3c:	00696945 	rsbeq	r6, r9, r5, asr #18
     f40:	70696c46 	rsbvc	r6, r9, r6, asr #24
     f44:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
     f48:	6f430065 	svcvs	0x00430065
     f4c:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
     f50:	74535f64 	ldrbvc	r5, [r3], #-3940	; 0xfffff09c
     f54:	00747261 	rsbseq	r7, r4, r1, ror #4
     f58:	314e5a5f 	cmpcc	lr, pc, asr sl
     f5c:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     f60:	616c7073 	smcvs	50947	; 0xc703
     f64:	53535f79 	cmppl	r3, #484	; 0x1e4
     f68:	30333144 	eorscc	r3, r3, r4, asr #2
     f6c:	45324336 	ldrmi	r4, [r2, #-822]!	; 0xfffffcca
     f70:	49433452 	stmdbmi	r3, {r1, r4, r6, sl, ip, sp}^
     f74:	6f004332 	svcvs	0x00004332
     f78:	61726570 	cmnvs	r2, r0, ror r5
     f7c:	3c726f74 	ldclcc	15, cr6, [r2], #-464	; 0xfffffe30
     f80:	753c203c 	ldrvc	r2, [ip, #-60]!	; 0xffffffc4
     f84:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     f88:	2064656e 	rsbcs	r6, r4, lr, ror #10
     f8c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     f90:	6f6c003e 	svcvs	0x006c003e
     f94:	72615077 	rsbvc	r5, r1, #119	; 0x77
     f98:	706f0074 	rsbvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
     f9c:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     fa0:	6420726f 	strtvs	r7, [r0], #-623	; 0xfffffd91
     fa4:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
     fa8:	69440065 	stmdbvs	r4, {r0, r2, r5, r6}^
     fac:	616c7073 	smcvs	50947	; 0xc703
     fb0:	6e4f5f79 	mcrvs	15, 2, r5, cr15, cr9, {3}
     fb4:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     fb8:	6c6f435f 	stclvs	3, cr4, [pc], #-380	; e44 <CPSR_IRQ_INHIBIT+0xdc4>
     fbc:	5f6e6d75 	svcpl	0x006e6d75
     fc0:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     fc4:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     fc8:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
     fcc:	5f006c65 	svcpl	0x00006c65
     fd0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
     fd4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     fd8:	6172545f 	cmnvs	r2, pc, asr r4
     fdc:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     fe0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     fe4:	6849736c 	stmdavs	r9, {r2, r3, r5, r6, r8, r9, ip, sp, lr}^
     fe8:	53524545 	cmppl	r2, #289406976	; 0x11400000
     fec:	544b525f 	strbpl	r5, [fp], #-607	; 0xfffffda1
     ff0:	5a5f005f 	bpl	17c1174 <_bss_end+0x17af4c4>
     ff4:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
     ff8:	5f433249 	svcpl	0x00433249
     ffc:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    1000:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
    1004:	6c6e6f69 	stclvs	15, cr6, [lr], #-420	; 0xfffffe5c
    1008:	45694973 	strbmi	r4, [r9, #-2419]!	; 0xfffff68d
    100c:	5f535245 	svcpl	0x00535245
    1010:	5f544b52 	svcpl	0x00544b52
    1014:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
    1018:	44430061 	strbmi	r0, [r3], #-97	; 0xffffff9f
    101c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1020:	535f7961 	cmppl	pc, #1589248	; 0x184000
    1024:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1028:	44003630 	strmi	r3, [r0], #-1584	; 0xfffff9d0
    102c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1030:	415f7961 	cmpmi	pc, r1, ror #18
    1034:	4f5f6c6c 	svcmi	0x005f6c6c
    1038:	496d006e 	stmdbmi	sp!, {r1, r2, r3, r5, r6}^
    103c:	44004332 	strmi	r4, [r0], #-818	; 0xfffffcce
    1040:	5f776172 	svcpl	0x00776172
    1044:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
    1048:	72415f6c 	subvc	r5, r1, #108, 30	; 0x1b0
    104c:	5f796172 	svcpl	0x00796172
    1050:	525f6f54 	subspl	r6, pc, #84, 30	; 0x150
    1054:	00746365 	rsbseq	r6, r4, r5, ror #6
    1058:	314e5a5f 	cmpcc	lr, pc, asr sl
    105c:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    1060:	616c7073 	smcvs	50947	; 0xc703
    1064:	53535f79 	cmppl	r3, #484	; 0x1e4
    1068:	30333144 	eorscc	r3, r3, r4, asr #2
    106c:	6c433536 	cfstr64vs	mvdx3, [r3], {54}	; 0x36
    1070:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0xfffffe9b
    1074:	65530062 	ldrbvs	r0, [r3, #-98]	; 0xffffff9e
    1078:	72565f74 	subsvc	r5, r6, #116, 30	; 0x1d0
    107c:	63535f74 	cmpvs	r3, #116, 30	; 0x1d0
    1080:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    1084:	6572415f 	ldrbvs	r4, [r2, #-351]!	; 0xfffffea1
    1088:	65530061 	ldrbvs	r0, [r3, #-97]	; 0xffffff9f
    108c:	61505f74 	cmpvs	r0, r4, ror pc
    1090:	415f6567 	cmpmi	pc, r7, ror #10
    1094:	00726464 	rsbseq	r6, r2, r4, ror #8
    1098:	73694454 	cmnvc	r9, #84, 8	; 0x54000000
    109c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    10a0:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    10a4:	535f6c65 	cmppl	pc, #25856	; 0x6500
    10a8:	00636570 	rsbeq	r6, r3, r0, ror r5
    10ac:	5f746553 	svcpl	0x00746553
    10b0:	65707055 	ldrbvs	r7, [r0, #-85]!	; 0xffffffab
    10b4:	6f435f72 	svcvs	0x00435f72
    10b8:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
    10bc:	6f725000 	svcvs	0x00725000
    10c0:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    10c4:	7478455f 	ldrbtvc	r4, [r8], #-1375	; 0xfffffaa1
    10c8:	616e7265 	cmnvs	lr, r5, ror #4
    10cc:	6f435f6c 	svcvs	0x00435f6c
    10d0:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
    10d4:	5a5f0064 	bpl	17c126c <_bss_end+0x17af5bc>
    10d8:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    10dc:	6e72654b 	cdpvs	5, 7, cr6, cr2, cr11, {2}
    10e0:	485f6c65 	ldmdami	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    10e4:	5f706165 	svcpl	0x00706165
    10e8:	616e614d 	cmnvs	lr, sp, asr #2
    10ec:	34726567 	ldrbtcc	r6, [r2], #-1383	; 0xfffffa99
    10f0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    10f4:	00765045 	rsbseq	r5, r6, r5, asr #32
    10f8:	5f6d6f43 	svcpl	0x006d6f43
    10fc:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
    1100:	7269445f 	rsbvc	r4, r9, #1593835520	; 0x5f000000
    1104:	6365445f 	cmnvs	r5, #1593835520	; 0x5f000000
    1108:	65706f00 	ldrbvs	r6, [r0, #-3840]!	; 0xfffff100
    110c:	6f746172 	svcvs	0x00746172
    1110:	203c3c72 	eorscs	r3, ip, r2, ror ip
    1114:	746e693c 	strbtvc	r6, [lr], #-2364	; 0xfffff6c4
    1118:	6553003e 	ldrbvs	r0, [r3, #-62]	; 0xffffffc2
    111c:	754d5f74 	strbvc	r5, [sp, #-3956]	; 0xfffff08c
    1120:	7069746c 	rsbvc	r7, r9, ip, ror #8
    1124:	5f78656c 	svcpl	0x0078656c
    1128:	69746152 	ldmdbvs	r4!, {r1, r4, r6, r8, sp, lr}^
    112c:	6c63006f 	stclvs	0, cr0, [r3], #-444	; 0xfffffe44
    1130:	57726165 	ldrbpl	r6, [r2, -r5, ror #2]!
    1134:	65746968 	ldrbvs	r6, [r4, #-2408]!	; 0xfffff698
    1138:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    113c:	6174535f 	cmnvs	r4, pc, asr r3
    1140:	4c5f7472 	cfldrdmi	mvd7, [pc], {114}	; 0x72
    1144:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1148:	77617244 	strbvc	r7, [r1, -r4, asr #4]!
    114c:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    1150:	415f6c65 	cmpmi	pc, r5, ror #24
    1154:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    1158:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
    115c:	00786449 	rsbseq	r6, r8, r9, asr #8
    1160:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1164:	5f79616c 	svcpl	0x0079616c
    1168:	5f6c6c41 	svcpl	0x006c6c41
    116c:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    1170:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    1174:	44540065 	ldrbmi	r0, [r4], #-101	; 0xffffff9b
    1178:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    117c:	445f7961 	ldrbmi	r7, [pc], #-2401	; 1184 <CPSR_IRQ_INHIBIT+0x1104>
    1180:	5f776172 	svcpl	0x00776172
    1184:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
    1188:	72415f6c 	subvc	r5, r1, #108, 30	; 0x1b0
    118c:	5f796172 	svcpl	0x00796172
    1190:	6b636150 	blvs	18d96d8 <_bss_end+0x18c7a28>
    1194:	5f007465 	svcpl	0x00007465
    1198:	30324e5a 	eorscc	r4, r2, sl, asr lr
    119c:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    11a0:	5f6c656e 	svcpl	0x006c656e
    11a4:	70616548 	rsbvc	r6, r1, r8, asr #10
    11a8:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    11ac:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    11b0:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    11b4:	6a45636f 	bvs	1159f78 <_bss_end+0x11482c8>
    11b8:	61684300 	cmnvs	r8, r0, lsl #6
    11bc:	5f656772 	svcpl	0x00656772
    11c0:	706d7550 	rsbvc	r7, sp, r0, asr r5
    11c4:	726f4e00 	rsbvc	r4, pc, #0, 28
    11c8:	5f6c616d 	svcpl	0x006c616d
    11cc:	70736944 	rsbsvc	r6, r3, r4, asr #18
    11d0:	0079616c 	rsbseq	r6, r9, ip, ror #2
    11d4:	314e5a5f 	cmpcc	lr, pc, asr sl
    11d8:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    11dc:	616c7073 	smcvs	50947	; 0xc703
    11e0:	53535f79 	cmppl	r3, #484	; 0x1e4
    11e4:	30333144 	eorscc	r3, r3, r4, asr #2
    11e8:	45344336 	ldrmi	r4, [r4, #-822]!	; 0xfffffcca
    11ec:	49433452 	stmdbmi	r3, {r1, r4, r6, sl, ip, sp}^
    11f0:	48004332 	stmdami	r0, {r1, r4, r5, r8, r9, lr}
    11f4:	7a69726f 	bvc	1a5dbb8 <_bss_end+0x1a4bf08>
    11f8:	61746e6f 	cmnvs	r4, pc, ror #28
    11fc:	63535f6c 	cmpvs	r3, #108, 30	; 0x1b0
    1200:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    1204:	6769525f 			; <UNDEFINED> instruction: 0x6769525f
    1208:	5f007468 	svcpl	0x00007468
    120c:	424f4c47 	submi	r4, pc, #18176	; 0x4700
    1210:	5f5f4c41 	svcpl	0x005f4c41
    1214:	5f627573 	svcpl	0x00627573
    1218:	44735f49 	ldrbtmi	r5, [r3], #-3913	; 0xfffff0b7
    121c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1220:	535f7961 	cmppl	pc, #1589248	; 0x184000
    1224:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1228:	53003630 	movwpl	r3, #1584	; 0x630
    122c:	445f7465 	ldrbmi	r7, [pc], #-1125	; 1234 <CPSR_IRQ_INHIBIT+0x11b4>
    1230:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1234:	4f5f7961 	svcmi	0x005f7961
    1238:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    123c:	65530074 	ldrbvs	r0, [r3, #-116]	; 0xffffff8c
    1240:	435f646e 	cmpmi	pc, #1845493760	; 0x6e000000
    1244:	616d6d6f 	cmnvs	sp, pc, ror #26
    1248:	5f00646e 	svcpl	0x0000646e
    124c:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    1250:	73694443 	cmnvc	r9, #1124073472	; 0x43000000
    1254:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1258:	4453535f 	ldrbmi	r5, [r3], #-863	; 0xfffffca1
    125c:	36303331 			; <UNDEFINED> instruction: 0x36303331
    1260:	74655339 	strbtvc	r5, [r5], #-825	; 0xfffffcc7
    1264:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    1268:	6a456c65 	bvs	115c404 <_bss_end+0x114a754>
    126c:	4900626a 	stmdbmi	r0, {r1, r3, r5, r6, r9, sp, lr}
    1270:	7265766e 	rsbvc	r7, r5, #115343360	; 0x6e00000
    1274:	5f646574 	svcpl	0x00646574
    1278:	70736944 	rsbsvc	r6, r3, r4, asr #18
    127c:	0079616c 	rsbseq	r6, r9, ip, ror #2
    1280:	31445353 	cmpcc	r4, r3, asr r3
    1284:	5f363033 	svcpl	0x00363033
    1288:	76616c53 			; <UNDEFINED> instruction: 0x76616c53
    128c:	64415f65 	strbvs	r5, [r1], #-3941	; 0xfffff09b
    1290:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1294:	656c0073 	strbvs	r0, [ip, #-115]!	; 0xffffff8d
    1298:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    129c:	6d6f4300 	stclvs	3, cr4, [pc, #-0]	; 12a4 <CPSR_IRQ_INHIBIT+0x1224>
    12a0:	6163535f 	cmnvs	r3, pc, asr r3
    12a4:	69445f6e 	stmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    12a8:	6e495f72 	mcrvs	15, 2, r5, cr9, cr2, {3}
    12ac:	5a5f0063 	bpl	17c1440 <_bss_end+0x17af790>
    12b0:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    12b4:	5f433249 	svcpl	0x00433249
    12b8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    12bc:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
    12c0:	6c6e6f69 	stclvs	15, cr6, [lr], #-420	; 0xfffffe5c
    12c4:	31314973 	teqcc	r1, r3, ror r9
    12c8:	31445353 	cmpcc	r4, r3, asr r3
    12cc:	5f363033 	svcpl	0x00363033
    12d0:	45646d43 	strbmi	r6, [r4, #-3395]!	; 0xfffff2bd
    12d4:	5f535245 	svcpl	0x00535245
    12d8:	5f544b52 	svcpl	0x00544b52
    12dc:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    12e0:	6765535f 			; <UNDEFINED> instruction: 0x6765535f
    12e4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    12e8:	6d65525f 	sfmvs	f5, 2, [r5, #-380]!	; 0xfffffe84
    12ec:	63007061 	movwvs	r7, #97	; 0x61
    12f0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    12f4:	00746553 	rsbseq	r6, r4, r3, asr r5
    12f8:	61746144 	cmnvs	r4, r4, asr #2
    12fc:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    1300:	756e6974 	strbvc	r6, [lr, #-2420]!	; 0xfffff68c
    1304:	444e0065 	strbmi	r0, [lr], #-101	; 0xffffff9b
    1308:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    130c:	435f7961 	cmpmi	pc, #1589248	; 0x184000
    1310:	616d6d6f 	cmnvs	sp, pc, ror #26
    1314:	4400646e 	strmi	r6, [r0], #-1134	; 0xfffffb92
    1318:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    131c:	4f5f7961 	svcmi	0x005f7961
    1320:	5f006666 	svcpl	0x00006666
    1324:	30324e5a 	eorscc	r4, r2, sl, asr lr
    1328:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    132c:	5f6c656e 	svcpl	0x006c656e
    1330:	70616548 	rsbvc	r6, r1, r8, asr #10
    1334:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    1338:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    133c:	76453443 	strbvc	r3, [r5], -r3, asr #8
    1340:	69466d00 	stmdbvs	r6, {r8, sl, fp, sp, lr}^
    1344:	00747372 	rsbseq	r7, r4, r2, ror r3
    1348:	314e5a5f 	cmpcc	lr, pc, asr sl
    134c:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    1350:	616c7073 	smcvs	50947	; 0xc703
    1354:	53535f79 	cmppl	r3, #484	; 0x1e4
    1358:	30333144 	eorscc	r3, r3, r4, asr #2
    135c:	53323136 	teqpl	r2, #-2147483635	; 0x8000000d
    1360:	5f646e65 	svcpl	0x00646e65
    1364:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    1368:	45646e61 	strbmi	r6, [r4, #-3681]!	; 0xfffff19f
    136c:	53533131 	cmppl	r3, #1073741836	; 0x4000000c
    1370:	30333144 	eorscc	r3, r3, r4, asr #2
    1374:	6d435f36 	stclvs	15, cr5, [r3, #-216]	; 0xffffff28
    1378:	50006864 	andpl	r6, r0, r4, ror #16
    137c:	6953746b 	ldmdbvs	r3, {r0, r1, r3, r5, r6, sl, ip, sp, lr}^
    1380:	4100657a 	tstmi	r0, sl, ror r5
    1384:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    1388:	78654e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    138c:	61505f74 	cmpvs	r0, r4, ror pc
    1390:	48006567 	stmdami	r0, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1394:	7a69726f 	bvc	1a5dd58 <_bss_end+0x1a4c0a8>
    1398:	61746e6f 	cmnvs	r4, pc, ror #28
    139c:	63535f6c 	cmpvs	r3, #108, 30	; 0x1b0
    13a0:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    13a4:	66654c5f 			; <UNDEFINED> instruction: 0x66654c5f
    13a8:	65530074 	ldrbvs	r0, [r3, #-116]	; 0xffffff8c
    13ac:	6f435f74 	svcvs	0x00435f74
    13b0:	6172746e 	cmnvs	r2, lr, ror #8
    13b4:	68007473 	stmdavs	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    13b8:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
    13bc:	4b540072 	blmi	150158c <_bss_end+0x14ef8dc>
    13c0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    13c4:	65485f6c 	strbvs	r5, [r8, #-3948]	; 0xfffff094
    13c8:	435f7061 	cmpmi	pc, #97	; 0x61
    13cc:	6b6e7568 	blvs	1b9e974 <_bss_end+0x1b8ccc4>
    13d0:	6165485f 	cmnvs	r5, pc, asr r8
    13d4:	00726564 	rsbseq	r6, r2, r4, ror #10
    13d8:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    13dc:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    13e0:	7263535f 	rsbvc	r5, r3, #2080374785	; 0x7c000001
    13e4:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
    13e8:	69726f48 	ldmdbvs	r2!, {r3, r6, r8, r9, sl, fp, sp, lr}^
    13ec:	746e6f7a 	strbtvc	r6, [lr], #-3962	; 0xfffff086
    13f0:	535f6c61 	cmppl	pc, #24832	; 0x6100
    13f4:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; 1270 <CPSR_IRQ_INHIBIT+0x11f0>
    13f8:	72565f6c 	subsvc	r5, r6, #108, 30	; 0x1b0
    13fc:	654c5f74 	strbvs	r5, [ip, #-3956]	; 0xfffff08c
    1400:	6f007466 	svcvs	0x00007466
    1404:	61726570 	cmnvs	r2, r0, ror r5
    1408:	3c726f74 	ldclcc	15, cr6, [r2], #-464	; 0xfffffe30
    140c:	533c203c 	teqpl	ip, #60	; 0x3c
    1410:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1414:	435f3630 	cmpmi	pc, #48, 12	; 0x3000000
    1418:	003e646d 	eorseq	r6, lr, sp, ror #8
    141c:	314e5a5f 	cmpcc	lr, pc, asr sl
    1420:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    1424:	616c7073 	smcvs	50947	; 0xc703
    1428:	53535f79 	cmppl	r3, #484	; 0x1e4
    142c:	30333144 	eorscc	r3, r3, r4, asr #2
    1430:	6c433536 	cfstr64vs	mvdx3, [r3], {54}	; 0x36
    1434:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    1438:	5a5f0076 	bpl	17c1618 <_bss_end+0x17af968>
    143c:	35314b4e 	ldrcc	r4, [r1, #-2894]!	; 0xfffff4b2
    1440:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1444:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1448:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    144c:	39726574 	ldmdbcc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1450:	4f5f7349 	svcmi	0x005f7349
    1454:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    1458:	00764564 	rsbseq	r4, r6, r4, ror #10
    145c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1460:	552f632f 	strpl	r6, [pc, #-815]!	; 1139 <CPSR_IRQ_INHIBIT+0x10b9>
    1464:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1468:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    146c:	6f442f61 	svcvs	0x00442f61
    1470:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1474:	2f73746e 	svccs	0x0073746e
    1478:	6f72655a 	svcvs	0x0072655a
    147c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1480:	6178652f 	cmnvs	r8, pc, lsr #10
    1484:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1488:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    148c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1490:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1494:	2f6c656e 	svccs	0x006c656e
    1498:	2f637273 	svccs	0x00637273
    149c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    14a0:	2f737265 	svccs	0x00737265
    14a4:	6d676573 	cfstr64vs	mvdx6, [r7, #-460]!	; 0xfffffe34
    14a8:	64746e65 	ldrbtvs	r6, [r4], #-3685	; 0xfffff19b
    14ac:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    14b0:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
    14b4:	43007070 	movwmi	r7, #112	; 0x70
    14b8:	66696853 			; <UNDEFINED> instruction: 0x66696853
    14bc:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    14c0:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    14c4:	5f007265 	svcpl	0x00007265
    14c8:	314b4e5a 	cmpcc	fp, sl, asr lr
    14cc:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    14d0:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    14d4:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    14d8:	616c7073 	smcvs	50947	; 0xc703
    14dc:	65523479 	ldrbvs	r3, [r2, #-1145]	; 0xfffffb87
    14e0:	76456461 	strbvc	r6, [r5], -r1, ror #8
    14e4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    14e8:	4336314b 	teqmi	r6, #-1073741806	; 0xc0000012
    14ec:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    14f0:	5f746e65 	svcpl	0x00746e65
    14f4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    14f8:	3979616c 	ldmdbcc	r9!, {r2, r3, r5, r6, r8, sp, lr}^
    14fc:	4f5f7349 	svcmi	0x005f7349
    1500:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    1504:	00764564 	rsbseq	r4, r6, r4, ror #10
    1508:	314e5a5f 	cmpcc	lr, pc, asr sl
    150c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    1510:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    1514:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1518:	616c7073 	smcvs	50947	; 0xc703
    151c:	6c433579 	cfstr64vs	mvdx3, [r3], {121}	; 0x79
    1520:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    1524:	446d0076 	strbtmi	r0, [sp], #-118	; 0xffffff8a
    1528:	5f617461 	svcpl	0x00617461
    152c:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1530:	314e5a5f 	cmpcc	lr, pc, asr sl
    1534:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1538:	5f746669 	svcpl	0x00746669
    153c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1540:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1544:	69685338 	stmdbvs	r8!, {r3, r4, r5, r8, r9, ip, lr}^
    1548:	495f7466 	ldmdbmi	pc, {r1, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    154c:	0062456e 	rsbeq	r4, r2, lr, ror #10
    1550:	314e5a5f 	cmpcc	lr, pc, asr sl
    1554:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1558:	5f746669 	svcpl	0x00746669
    155c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1560:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1564:	6a453443 	bvs	114e678 <_bss_end+0x113c9c8>
    1568:	5f006a6a 	svcpl	0x00006a6a
    156c:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    1570:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1574:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1578:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    157c:	35726574 	ldrbcc	r6, [r2, #-1396]!	; 0xfffffa8c
    1580:	736f6c43 	cmnvc	pc, #17152	; 0x4300
    1584:	00764565 	rsbseq	r4, r6, r5, ror #10
    1588:	6f6c436d 	svcvs	0x006c436d
    158c:	505f6b63 	subspl	r6, pc, r3, ror #22
    1590:	5f006e69 	svcpl	0x00006e69
    1594:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    1598:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    159c:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    15a0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    15a4:	38726574 	ldmdacc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    15a8:	66696853 			; <UNDEFINED> instruction: 0x66696853
    15ac:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
    15b0:	5f006845 	svcpl	0x00006845
    15b4:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    15b8:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    15bc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    15c0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    15c4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    15c8:	76453443 	strbvc	r3, [r5], -r3, asr #8
    15cc:	754f6d00 	strbvc	r6, [pc, #-3328]	; 8d4 <CPSR_IRQ_INHIBIT+0x854>
    15d0:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
    15d4:	65534300 	ldrbvs	r4, [r3, #-768]	; 0xfffffd00
    15d8:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    15dc:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    15e0:	616c7073 	smcvs	50947	; 0xc703
    15e4:	5a5f0079 	bpl	17c17d0 <_bss_end+0x17afb20>
    15e8:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    15ec:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    15f0:	5f746e65 	svcpl	0x00746e65
    15f4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    15f8:	4379616c 	cmnmi	r9, #108, 2
    15fc:	00764532 	rsbseq	r4, r6, r2, lsr r5
    1600:	314e5a5f 	cmpcc	lr, pc, asr sl
    1604:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1608:	5f746669 	svcpl	0x00746669
    160c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1610:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1614:	65704f34 	ldrbvs	r4, [r0, #-3892]!	; 0xfffff0cc
    1618:	0076456e 	rsbseq	r4, r6, lr, ror #10
    161c:	6168436d 	cmnvs	r8, sp, ror #6
    1620:	74636172 	strbtvc	r6, [r3], #-370	; 0xfffffe8e
    1624:	4d5f7265 	lfmmi	f7, 2, [pc, #-404]	; 1498 <CPSR_IRQ_INHIBIT+0x1418>
    1628:	5f007061 	svcpl	0x00007061
    162c:	424f4c47 	submi	r4, pc, #18176	; 0x4700
    1630:	5f5f4c41 	svcpl	0x005f4c41
    1634:	5f627573 	svcpl	0x00627573
    1638:	53735f49 	cmnpl	r3, #292	; 0x124
    163c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1640:	445f746e 	ldrbmi	r7, [pc], #-1134	; 1648 <CPSR_IRQ_INHIBIT+0x15c8>
    1644:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1648:	5f007961 	svcpl	0x00007961
    164c:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    1650:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    1654:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1658:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    165c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1660:	69725735 	ldmdbvs	r2!, {r0, r2, r4, r5, r8, r9, sl, ip, lr}^
    1664:	63456574 	movtvs	r6, #21876	; 0x5574
    1668:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    166c:	53433631 	movtpl	r3, #13873	; 0x3631
    1670:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1674:	445f746e 	ldrbmi	r7, [pc], #-1134	; 167c <CPSR_IRQ_INHIBIT+0x15fc>
    1678:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    167c:	34317961 	ldrtcc	r7, [r1], #-2401	; 0xfffff69f
    1680:	6168436d 	cmnvs	r8, sp, ror #6
    1684:	74636172 	strbtvc	r6, [r3], #-370	; 0xfffffe8e
    1688:	4d5f7265 	lfmmi	f7, 2, [pc, #-404]	; 14fc <CPSR_IRQ_INHIBIT+0x147c>
    168c:	00457061 	subeq	r7, r5, r1, rrx
    1690:	74614c6d 	strbtvc	r4, [r1], #-3181	; 0xfffff393
    1694:	505f6863 	subspl	r6, pc, r3, ror #16
    1698:	53006e69 	movwpl	r6, #3689	; 0xe69
    169c:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    16a0:	006e495f 	rsbeq	r4, lr, pc, asr r9
    16a4:	314e5a5f 	cmpcc	lr, pc, asr sl
    16a8:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    16ac:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    16b0:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    16b4:	616c7073 	smcvs	50947	; 0xc703
    16b8:	704f3479 	subvc	r3, pc, r9, ror r4	; <UNPREDICTABLE>
    16bc:	76456e65 	strbvc	r6, [r5], -r5, ror #28
    16c0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    16c4:	53433531 	movtpl	r3, #13617	; 0x3531
    16c8:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    16cc:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    16d0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    16d4:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
    16d8:	006a6a6a 	rsbeq	r6, sl, sl, ror #20
    16dc:	4f4c475f 	svcmi	0x004c475f
    16e0:	5f4c4142 	svcpl	0x004c4142
    16e4:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    16e8:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    16ec:	66696853 			; <UNDEFINED> instruction: 0x66696853
    16f0:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    16f4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    16f8:	62007265 	andvs	r7, r0, #1342177286	; 0x50000006
    16fc:	00657479 	rsbeq	r7, r5, r9, ror r4
    1700:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    1704:	6e69506b 	cdpvs	0, 6, cr5, cr9, cr11, {3}
    1708:	74616c00 	strbtvc	r6, [r1], #-3072	; 0xfffff400
    170c:	69506863 	ldmdbvs	r0, {r0, r1, r5, r6, fp, sp, lr}^
    1710:	6d2f006e 	stcvs	0, cr0, [pc, #-440]!	; 1560 <CPSR_IRQ_INHIBIT+0x14e0>
    1714:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1718:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    171c:	4b2f7372 	blmi	bde4ec <_bss_end+0xbcc83c>
    1720:	2f616275 	svccs	0x00616275
    1724:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1728:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    172c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1730:	614d6f72 	hvcvs	55026	; 0xd6f2
    1734:	652f6574 	strvs	r6, [pc, #-1396]!	; 11c8 <CPSR_IRQ_INHIBIT+0x1148>
    1738:	706d6178 	rsbvc	r6, sp, r8, ror r1
    173c:	2f73656c 	svccs	0x0073656c
    1740:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1744:	6b2f4332 	blvs	bd2414 <_bss_end+0xbc0764>
    1748:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    174c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1750:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
    1754:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1758:	68732f73 	ldmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    175c:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    1760:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1764:	2e726574 	mrccs	5, 3, r6, cr2, cr4, {3}
    1768:	00707063 	rsbseq	r7, r0, r3, rrx
    176c:	61746164 	cmnvs	r4, r4, ror #2
    1770:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1774:	6d69546d 	cfstrdvs	mvd5, [r9, #-436]!	; 0xfffffe4c
    1778:	525f7265 	subspl	r7, pc, #1342177286	; 0x50000006
    177c:	00736765 	rsbseq	r6, r3, r5, ror #14
    1780:	4f4c475f 	svcmi	0x004c475f
    1784:	5f4c4142 	svcpl	0x004c4142
    1788:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    178c:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    1790:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1794:	5a5f0072 	bpl	17c1964 <_bss_end+0x17afcb4>
    1798:	5443364e 	strbpl	r3, [r3], #-1614	; 0xfffff9b2
    179c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    17a0:	73493032 	movtvc	r3, #36914	; 0x9032
    17a4:	6d69545f 	cfstrdvs	mvd5, [r9, #-380]!	; 0xfffffe84
    17a8:	495f7265 	ldmdbmi	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    17ac:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    17b0:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    17b4:	7645676e 	strbvc	r6, [r5], -lr, ror #14
    17b8:	6c616800 	stclvs	8, cr6, [r1], #-0
    17bc:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    17c0:	6265645f 	rsbvs	r6, r5, #1593835520	; 0x5f000000
    17c4:	625f6775 	subsvs	r6, pc, #30670848	; 0x1d40000
    17c8:	6b616572 	blvs	185ad98 <_bss_end+0x18490e8>
    17cc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    17d0:	69544336 	ldmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    17d4:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    17d8:	006d4532 	rsbeq	r4, sp, r2, lsr r5
    17dc:	6f6c6552 	svcvs	0x006c6552
    17e0:	49006461 	stmdbmi	r0, {r0, r5, r6, sl, sp, lr}
    17e4:	435f5152 	cmpmi	pc, #-2147483628	; 0x80000014
    17e8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    17ec:	006b6361 	rsbeq	r6, fp, r1, ror #6
    17f0:	5f515249 	svcpl	0x00515249
    17f4:	6b73614d 	blvs	1cd9d30 <_bss_end+0x1cc8080>
    17f8:	64006465 	strvs	r6, [r0], #-1125	; 0xfffffb9b
    17fc:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1800:	756e7500 	strbvc	r7, [lr, #-1280]!	; 0xfffffb00
    1804:	5f646573 	svcpl	0x00646573
    1808:	6e750030 	mrcvs	0, 3, r0, cr5, cr0, {1}
    180c:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
    1810:	7500315f 	strvc	r3, [r0, #-351]	; 0xfffffea1
    1814:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
    1818:	00325f64 	eorseq	r5, r2, r4, ror #30
    181c:	73756e75 	cmnvc	r5, #1872	; 0x750
    1820:	335f6465 	cmpcc	pc, #1694498816	; 0x65000000
    1824:	756e7500 	strbvc	r7, [lr, #-1280]!	; 0xfffffb00
    1828:	5f646573 	svcpl	0x00646573
    182c:	6f630034 	svcvs	0x00630034
    1830:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    1834:	32335f72 	eorscc	r5, r3, #456	; 0x1c8
    1838:	72500062 	subsvc	r0, r0, #98	; 0x62
    183c:	61637365 	cmnvs	r3, r5, ror #6
    1840:	5f72656c 	svcpl	0x0072656c
    1844:	00363532 	eorseq	r3, r6, r2, lsr r5
    1848:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    184c:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    1850:	45367265 	ldrmi	r7, [r6, #-613]!	; 0xfffffd9b
    1854:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1858:	46504565 	ldrbmi	r4, [r0], -r5, ror #10
    185c:	6a457676 	bvs	115f23c <_bss_end+0x114d58c>
    1860:	544e3631 	strbpl	r3, [lr], #-1585	; 0xfffff9cf
    1864:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1868:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0xffffffa1
    186c:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    1870:	66007265 	strvs	r7, [r0], -r5, ror #4
    1874:	5f656572 	svcpl	0x00656572
    1878:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
    187c:	5f676e69 	svcpl	0x00676e69
    1880:	73657270 	cmnvc	r5, #112, 4
    1884:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    1888:	72660072 	rsbvc	r0, r6, #114	; 0x72
    188c:	725f6565 	subsvc	r6, pc, #423624704	; 0x19400000
    1890:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1894:	655f676e 	ldrbvs	r6, [pc, #-1902]	; 112e <CPSR_IRQ_INHIBIT+0x10ae>
    1898:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    189c:	52490065 	subpl	r0, r9, #101	; 0x65
    18a0:	6c435f51 	mcrrvs	15, 5, r5, r3, cr1
    18a4:	00726165 	rsbseq	r6, r2, r5, ror #2
    18a8:	73657250 	cmnvc	r5, #80, 4
    18ac:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    18b0:	36315f72 	shsub16cc	r5, r1, r2
    18b4:	6c615600 	stclvs	6, cr5, [r1], #-0
    18b8:	69006575 	stmdbvs	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    18bc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    18c0:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    18c4:	616e655f 	cmnvs	lr, pc, asr r5
    18c8:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    18cc:	65725000 	ldrbvs	r5, [r2, #-0]!
    18d0:	7669445f 			; <UNDEFINED> instruction: 0x7669445f
    18d4:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
    18d8:	6d695400 	cfstrdvs	mvd5, [r9, #-0]
    18dc:	525f7265 	subspl	r7, pc, #1342177286	; 0x50000006
    18e0:	5f006765 	svcpl	0x00006765
    18e4:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    18e8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    18ec:	69443772 	stmdbvs	r4, {r1, r4, r5, r6, r8, r9, sl, ip, sp}^
    18f0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    18f4:	00764565 	rsbseq	r4, r6, r5, ror #10
    18f8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    18fc:	65725f72 	ldrbvs	r5, [r2, #-3954]!	; 0xfffff08e
    1900:	61625f67 	cmnvs	r2, r7, ror #30
    1904:	74006573 	strvc	r6, [r0], #-1395	; 0xfffffa8d
    1908:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    190c:	616e655f 	cmnvs	lr, pc, asr r5
    1910:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    1914:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1918:	2f632f74 	svccs	0x00632f74
    191c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1920:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1924:	442f6162 	strtmi	r6, [pc], #-354	; 192c <CPSR_IRQ_INHIBIT+0x18ac>
    1928:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    192c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1930:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1934:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1938:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    193c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1940:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1944:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1948:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    194c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1950:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1954:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1958:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    195c:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	; 0xffffff44
    1960:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
    1964:	54007070 	strpl	r7, [r0], #-112	; 0xffffff90
    1968:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    196c:	74435f72 	strbvc	r5, [r3], #-3954	; 0xfffff08e
    1970:	6c465f6c 	mcrrvs	15, 6, r5, r6, cr12
    1974:	00736761 	rsbseq	r6, r3, r1, ror #14
    1978:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    197c:	61436d00 	cmpvs	r3, r0, lsl #26
    1980:	61626c6c 	cmnvs	r2, ip, ror #24
    1984:	5f006b63 	svcpl	0x00006b63
    1988:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    198c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1990:	65523472 	ldrbvs	r3, [r2, #-1138]	; 0xfffffb8e
    1994:	4e457367 	cdpmi	3, 4, cr7, cr5, cr7, {3}
    1998:	6c616833 	stclvs	8, cr6, [r1], #-204	; 0xffffff34
    199c:	6d695439 	cfstrdvs	mvd5, [r9, #-228]!	; 0xffffff1c
    19a0:	525f7265 	subspl	r7, pc, #1342177286	; 0x50000006
    19a4:	00456765 	subeq	r6, r5, r5, ror #14
    19a8:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    19ac:	5f007265 	svcpl	0x00007265
    19b0:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    19b4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    19b8:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    19bc:	7246006d 	subvc	r0, r6, #109	; 0x6d
    19c0:	525f6565 	subspl	r6, pc, #423624704	; 0x19400000
    19c4:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    19c8:	5000676e 	andpl	r6, r0, lr, ror #14
    19cc:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    19d0:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    19d4:	4900315f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, ip, sp}
    19d8:	69545f73 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19dc:	5f72656d 	svcpl	0x0072656d
    19e0:	5f515249 	svcpl	0x00515249
    19e4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    19e8:	00676e69 	rsbeq	r6, r7, r9, ror #28
    19ec:	6d695454 	cfstrdvs	mvd5, [r9, #-336]!	; 0xfffffeb0
    19f0:	435f7265 	cmpmi	pc, #1342177286	; 0x50000006
    19f4:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    19f8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    19fc:	5f515249 	svcpl	0x00515249
    1a00:	00776152 	rsbseq	r6, r7, r2, asr r1
    1a04:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    1a08:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    1a0c:	32317265 	eorscc	r7, r1, #1342177286	; 0x50000006
    1a10:	5f515249 	svcpl	0x00515249
    1a14:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1a18:	6b636162 	blvs	18d9fa8 <_bss_end+0x18c82f8>
    1a1c:	63007645 	movwvs	r7, #1605	; 0x645
    1a20:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1a24:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1a28:	6e72546d 	cdpvs	4, 7, cr5, cr2, cr13, {3}
    1a2c:	65525f67 	ldrbvs	r5, [r2, #-3943]	; 0xfffff099
    1a30:	65007367 	strvs	r7, [r0, #-871]	; 0xfffffc99
    1a34:	756c6378 	strbvc	r6, [ip, #-888]!	; 0xfffffc88
    1a38:	65766973 	ldrbvs	r6, [r6, #-2419]!	; 0xfffff68d
    1a3c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1a40:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1a44:	3731474e 	ldrcc	r4, [r1, -lr, asr #14]!
    1a48:	5f746547 	svcpl	0x00746547
    1a4c:	646e6152 	strbtvs	r6, [lr], #-338	; 0xfffffeae
    1a50:	4e5f6d6f 	cdpmi	13, 5, cr6, cr15, cr15, {3}
    1a54:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1a58:	00764572 	rsbseq	r4, r6, r2, ror r5
    1a5c:	474e5254 	smlsldmi	r5, lr, r4, r2
    1a60:	7261575f 	rsbvc	r5, r1, #24903680	; 0x17c0000
    1a64:	5f70756d 	svcpl	0x0070756d
    1a68:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1a6c:	6e490074 	mcrvs	0, 2, r0, cr9, cr4, {3}
    1a70:	614d5f74 	hvcvs	54772	; 0xd5f4
    1a74:	2f006b73 	svccs	0x00006b73
    1a78:	2f746e6d 	svccs	0x00746e6d
    1a7c:	73552f63 	cmpvc	r5, #396	; 0x18c
    1a80:	2f737265 	svccs	0x00737265
    1a84:	6162754b 	cmnvs	r2, fp, asr #10
    1a88:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1a8c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1a90:	5a2f7374 	bpl	bde868 <_bss_end+0xbccbb8>
    1a94:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1908 <CPSR_IRQ_INHIBIT+0x1888>
    1a98:	2f657461 	svccs	0x00657461
    1a9c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1aa0:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1aa4:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1aa8:	2f433249 	svccs	0x00433249
    1aac:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1ab0:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    1ab4:	642f6372 	strtvs	r6, [pc], #-882	; 1abc <CPSR_IRQ_INHIBIT+0x1a3c>
    1ab8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1abc:	742f7372 	strtvc	r7, [pc], #-882	; 1ac4 <CPSR_IRQ_INHIBIT+0x1a44>
    1ac0:	2e676e72 	mcrcs	14, 3, r6, cr7, cr2, {3}
    1ac4:	00707063 	rsbseq	r7, r0, r3, rrx
    1ac8:	61746144 	cmnvs	r4, r4, asr #2
    1acc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ad0:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1ad4:	4f34474e 	svcmi	0x0034474e
    1ad8:	456e6570 	strbmi	r6, [lr, #-1392]!	; 0xfffffa90
    1adc:	5a5f0062 	bpl	17c1c6c <_bss_end+0x17affbc>
    1ae0:	43354b4e 	teqmi	r5, #79872	; 0x13800
    1ae4:	474e5254 	smlsldmi	r5, lr, r4, r2
    1ae8:	5f734939 	svcpl	0x00734939
    1aec:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1af0:	76456465 	strbvc	r6, [r5], -r5, ror #8
    1af4:	6e727400 	cdpvs	4, 7, cr7, cr2, cr0, {0}
    1af8:	65725f67 	ldrbvs	r5, [r2, #-3943]!	; 0xfffff099
    1afc:	61625f67 	cmnvs	r2, r7, ror #30
    1b00:	47006573 	smlsdxmi	r0, r3, r5, r6
    1b04:	525f7465 	subspl	r7, pc, #1694498816	; 0x65000000
    1b08:	6f646e61 	svcvs	0x00646e61
    1b0c:	754e5f6d 	strbvc	r5, [lr, #-3949]	; 0xfffff093
    1b10:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1b14:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1b18:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1b1c:	3443474e 	strbcc	r4, [r3], #-1870	; 0xfffff8b2
    1b20:	5f006a45 	svcpl	0x00006a45
    1b24:	43354e5a 	teqmi	r5, #1440	; 0x5a0
    1b28:	474e5254 	smlsldmi	r5, lr, r4, r2
    1b2c:	6f6c4335 	svcvs	0x006c4335
    1b30:	76456573 			; <UNDEFINED> instruction: 0x76456573
    1b34:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1b38:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1b3c:	3243474e 	subcc	r4, r3, #20447232	; 0x1380000
    1b40:	43006a45 	movwmi	r6, #2629	; 0xa45
    1b44:	474e5254 	smlsldmi	r5, lr, r4, r2
    1b48:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    1b4c:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    1b50:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    1b54:	5f495f62 	svcpl	0x00495f62
    1b58:	4e525473 	mrcmi	4, 2, r5, cr2, cr3, {3}
    1b5c:	52540047 	subspl	r0, r4, #71	; 0x47
    1b60:	525f474e 	subspl	r4, pc, #20447232	; 0x1380000
    1b64:	67006765 	strvs	r6, [r0, -r5, ror #14]
    1b68:	445f5346 	ldrbmi	r5, [pc], #-838	; 1b70 <CPSR_IRQ_INHIBIT+0x1af0>
    1b6c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1b70:	435f7372 	cmpmi	pc, #-939524095	; 0xc8000001
    1b74:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1b78:	466f4e00 	strbtmi	r4, [pc], -r0, lsl #28
    1b7c:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1b80:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1b84:	6972446d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, sl, lr}^
    1b88:	00726576 	rsbseq	r6, r2, r6, ror r5
    1b8c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1b90:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1b94:	6d007864 	stcvs	8, cr7, [r0, #-400]	; 0xfffffe70
    1b98:	746f6f52 	strbtvc	r6, [pc], #-3922	; 1ba0 <CPSR_IRQ_INHIBIT+0x1b20>
    1b9c:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
    1ba0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ba4:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1ba8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1bac:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1bb0:	4532436d 	ldrmi	r4, [r2, #-877]!	; 0xfffffc93
    1bb4:	6f6d0076 	svcvs	0x006d0076
    1bb8:	50746e75 	rsbspl	r6, r4, r5, ror lr
    1bbc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1bc0:	696e4900 	stmdbvs	lr!, {r8, fp, lr}^
    1bc4:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1bc8:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1bcc:	5f534667 	svcpl	0x00534667
    1bd0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1bd4:	00737265 	rsbseq	r7, r3, r5, ror #4
    1bd8:	4f4c475f 	svcmi	0x004c475f
    1bdc:	5f4c4142 	svcpl	0x004c4142
    1be0:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    1be4:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    1be8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1bec:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1bf0:	5f006d65 	svcpl	0x00006d65
    1bf4:	30324e5a 	eorscc	r4, r2, sl, asr lr
    1bf8:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    1bfc:	5f6c656e 	svcpl	0x006c656e
    1c00:	70616548 	rsbvc	r6, r1, r8, asr #10
    1c04:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    1c08:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    1c0c:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    1c10:	4e49636f 	cdpmi	3, 4, cr6, cr9, cr15, {3}
    1c14:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1c18:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1c1c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1c20:	5433316d 	ldrtpl	r3, [r3], #-365	; 0xfffffe93
    1c24:	545f5346 	ldrbpl	r5, [pc], #-838	; 1c2c <CPSR_IRQ_INHIBIT+0x1bac>
    1c28:	5f656572 	svcpl	0x00656572
    1c2c:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1c30:	50454545 	subpl	r4, r5, r5, asr #10
    1c34:	00765f54 	rsbseq	r5, r6, r4, asr pc
    1c38:	69447369 	stmdbvs	r4, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    1c3c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
    1c40:	0079726f 	rsbseq	r7, r9, pc, ror #4
    1c44:	4678614d 	ldrbtmi	r6, [r8], -sp, asr #2
    1c48:	69724453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, lr}^
    1c4c:	4e726576 	mrcmi	5, 3, r6, cr2, cr6, {3}
    1c50:	4c656d61 	stclmi	13, cr6, [r5], #-388	; 0xfffffe7c
    1c54:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1c58:	706d0068 	rsbvc	r0, sp, r8, rrx
    1c5c:	00727450 	rsbseq	r7, r2, r0, asr r4
    1c60:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0xfffffe90
    1c64:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
    1c68:	545f5346 	ldrbpl	r5, [pc], #-838	; 1c70 <CPSR_IRQ_INHIBIT+0x1bf0>
    1c6c:	5f656572 	svcpl	0x00656572
    1c70:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1c74:	78614d00 	stmdavc	r1!, {r8, sl, fp, lr}^
    1c78:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1c7c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    1c80:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1c84:	43006874 	movwmi	r6, #2164	; 0x874
    1c88:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1c8c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1c90:	63006d65 	movwvs	r6, #3429	; 0xd65
    1c94:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    1c98:	006e6572 	rsbeq	r6, lr, r2, ror r5
    1c9c:	4e706d74 	mrcmi	13, 3, r6, cr0, cr4, {3}
    1ca0:	0065646f 	rsbeq	r6, r5, pc, ror #8
    1ca4:	314e5a5f 	cmpcc	lr, pc, asr sl
    1ca8:	69464331 	stmdbvs	r6, {r0, r4, r5, r8, r9, lr}^
    1cac:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1cb0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1cb4:	46543331 			; <UNDEFINED> instruction: 0x46543331
    1cb8:	72545f53 	subsvc	r5, r4, #332	; 0x14c
    1cbc:	4e5f6565 	cdpmi	5, 5, cr6, cr15, cr5, {3}
    1cc0:	4365646f 	cmnmi	r5, #1862270976	; 0x6f000000
    1cc4:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1cc8:	4e706d74 	mrcmi	13, 3, r6, cr0, cr4, {3}
    1ccc:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1cd0:	5f534654 	svcpl	0x00534654
    1cd4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1cd8:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
    1cdc:	5f646165 	svcpl	0x00646165
    1ce0:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    1ce4:	5a5f0065 	bpl	17c1e80 <_bss_end+0x17b01d0>
    1ce8:	4331314e 	teqmi	r1, #-2147483629	; 0x80000013
    1cec:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1cf0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1cf4:	4f346d65 	svcmi	0x00346d65
    1cf8:	456e6570 	strbmi	r6, [lr, #-1392]!	; 0xfffffa90
    1cfc:	31634b50 	cmncc	r3, r0, asr fp
    1d00:	69464e35 	stmdbvs	r6, {r0, r2, r4, r5, r9, sl, fp, lr}^
    1d04:	4f5f656c 	svcmi	0x005f656c
    1d08:	5f6e6570 	svcpl	0x006e6570
    1d0c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1d10:	6e694600 	cdpvs	6, 6, cr4, cr9, cr0, {0}
    1d14:	68435f64 	stmdavs	r3, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d18:	00646c69 	rsbeq	r6, r4, r9, ror #24
    1d1c:	6f6f526d 	svcvs	0x006f526d
    1d20:	6e4d5f74 	mcrvs	15, 2, r5, cr13, cr4, {3}
    1d24:	72640074 	rsbvc	r0, r4, #116	; 0x74
    1d28:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1d2c:	6f526d00 	svcvs	0x00526d00
    1d30:	535f746f 	cmppl	pc, #1862270976	; 0x6f000000
    1d34:	52007379 	andpl	r7, r0, #-469762047	; 0xe4000001
    1d38:	5f646165 	svcpl	0x00646165
    1d3c:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1d40:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1d44:	2f632f74 	svccs	0x00632f74
    1d48:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1d4c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1d50:	442f6162 	strtmi	r6, [pc], #-354	; 1d58 <CPSR_IRQ_INHIBIT+0x1cd8>
    1d54:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1d58:	73746e65 	cmnvc	r4, #1616	; 0x650
    1d5c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1d60:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1d64:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1d68:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1d6c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1d70:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1d74:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1d78:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1d7c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1d80:	2f73662f 	svccs	0x0073662f
    1d84:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    1d88:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1d8c:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    1d90:	4d007070 	stcmi	0, cr7, [r0, #-448]	; 0xfffffe40
    1d94:	61507861 	cmpvs	r0, r1, ror #16
    1d98:	654c6874 	strbvs	r6, [ip, #-2164]	; 0xfffff78c
    1d9c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1da0:	6f526d00 	svcvs	0x00526d00
    1da4:	6300746f 	movwvs	r7, #1135	; 0x46f
    1da8:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    1dac:	6c6c4100 	stfvse	f4, [ip], #-0
    1db0:	433c636f 	teqmi	ip, #-1140850687	; 0xbc000001
    1db4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1db8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1dbc:	3a3a6d65 	bcc	e9d358 <_bss_end+0xe8b6a8>
    1dc0:	5f534654 	svcpl	0x00534654
    1dc4:	65657254 	strbvs	r7, [r5, #-596]!	; 0xfffffdac
    1dc8:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 1dd0 <CPSR_IRQ_INHIBIT+0x1d50>
    1dcc:	5f003e65 	svcpl	0x00003e65
    1dd0:	31314e5a 	teqcc	r1, sl, asr lr
    1dd4:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1dd8:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1ddc:	316d6574 	smccc	54868	; 0xd654
    1de0:	53465433 	movtpl	r5, #25651	; 0x6433
    1de4:	6572545f 	ldrbvs	r5, [r2, #-1119]!	; 0xfffffba1
    1de8:	6f4e5f65 	svcvs	0x004e5f65
    1dec:	30316564 	eorscc	r6, r1, r4, ror #10
    1df0:	646e6946 	strbtvs	r6, [lr], #-2374	; 0xfffff6ba
    1df4:	6968435f 	stmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, r9, lr}^
    1df8:	5045646c 	subpl	r6, r5, ip, ror #8
    1dfc:	5f00634b 	svcpl	0x0000634b
    1e00:	31314e5a 	teqcc	r1, sl, asr lr
    1e04:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1e08:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1e0c:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
    1e10:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1e14:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
    1e18:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1e1c:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1e20:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1e24:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1e28:	5433316d 	ldrtpl	r3, [r3], #-365	; 0xfffffe93
    1e2c:	545f5346 	ldrbpl	r5, [pc], #-838	; 1e34 <CPSR_IRQ_INHIBIT+0x1db4>
    1e30:	5f656572 	svcpl	0x00656572
    1e34:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1e38:	76453243 	strbvc	r3, [r5], -r3, asr #4
    1e3c:	69725700 	ldmdbvs	r2!, {r8, r9, sl, ip, lr}^
    1e40:	4f5f6574 	svcmi	0x005f6574
    1e44:	00796c6e 	rsbseq	r6, r9, lr, ror #24
    1e48:	314e5a5f 	cmpcc	lr, pc, asr sl
    1e4c:	69464331 	stmdbvs	r6, {r0, r4, r5, r8, r9, lr}^
    1e50:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1e54:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1e58:	6e493031 	mcrvs	0, 2, r3, cr9, cr1, {1}
    1e5c:	61697469 	cmnvs	r9, r9, ror #8
    1e60:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    1e64:	5f007645 	svcpl	0x00007645
    1e68:	30324e5a 	eorscc	r4, r2, sl, asr lr
    1e6c:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1e70:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1e74:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1e78:	5f726574 	svcpl	0x00726574
    1e7c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1e80:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    1e84:	005f534b 	subseq	r5, pc, fp, asr #6
    1e88:	314e5a5f 	cmpcc	lr, pc, asr sl
    1e8c:	6f4d4333 	svcvs	0x004d4333
    1e90:	6f74696e 	svcvs	0x0074696e
    1e94:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e98:	3244656c 	subcc	r6, r4, #108, 10	; 0x1b000000
    1e9c:	5f007645 	svcpl	0x00007645
    1ea0:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    1ea4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1ea8:	76453044 	strbvc	r3, [r5], -r4, asr #32
    1eac:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1eb0:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    1eb4:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    1eb8:	70007645 	andvc	r7, r0, r5, asr #12
    1ebc:	6f4e6e69 	svcvs	0x004e6e69
    1ec0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ec4:	54433531 	strbpl	r3, [r3], #-1329	; 0xfffffacf
    1ec8:	5f474e52 	svcpl	0x00474e52
    1ecc:	445f5346 	ldrbmi	r5, [pc], #-838	; 1ed4 <CPSR_IRQ_INHIBIT+0x1e54>
    1ed0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1ed4:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    1ed8:	5a5f0076 	bpl	17c20b8 <_bss_end+0x17b0408>
    1edc:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    1ee0:	4f495047 	svcmi	0x00495047
    1ee4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    1ee8:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    1eec:	5f534b52 	svcpl	0x00534b52
    1ef0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ef4:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1ef8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1efc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1f00:	6737316d 	ldrvs	r3, [r7, -sp, ror #2]!
    1f04:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f0c <CPSR_IRQ_INHIBIT+0x1e8c>
    1f08:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f0c:	435f7372 	cmpmi	pc, #-939524095	; 0xc8000001
    1f10:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1f14:	5a5f0045 	bpl	17c2030 <_bss_end+0x17b0380>
    1f18:	4338314e 	teqmi	r8, #-2147483629	; 0x80000013
    1f1c:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1f20:	5f726f74 	svcpl	0x00726f74
    1f24:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f2c <CPSR_IRQ_INHIBIT+0x1eac>
    1f28:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f2c:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    1f30:	5a5f0076 	bpl	17c2110 <_bss_end+0x17b0460>
    1f34:	4335324e 	teqmi	r5, #-536870908	; 0xe0000004
    1f38:	66696853 			; <UNDEFINED> instruction: 0x66696853
    1f3c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    1f40:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1f44:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    1f48:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f4c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f50:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    1f54:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    1f58:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1f5c:	00764572 	rsbseq	r4, r6, r2, ror r5
    1f60:	6f4d437e 	svcvs	0x004d437e
    1f64:	6f74696e 	svcvs	0x0074696e
    1f68:	53465f72 	movtpl	r5, #28530	; 0x6f72
    1f6c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1f70:	00726576 	rsbseq	r6, r2, r6, ror r5
    1f74:	50477366 	subpl	r7, r7, r6, ror #6
    1f78:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    1f7c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f80:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f84:	4d736600 	ldclmi	6, cr6, [r3, #-0]
    1f88:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    1f8c:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    1f90:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f94:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f98:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1f9c:	53433132 	movtpl	r3, #12594	; 0x3132
    1fa0:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1fa4:	445f746e 	ldrbmi	r7, [pc], #-1134	; 1fac <CPSR_IRQ_INHIBIT+0x1f2c>
    1fa8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1fac:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    1fb0:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    1fb4:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    1fb8:	4b504565 	blmi	1413554 <_bss_end+0x14018a4>
    1fbc:	5f006a63 	svcpl	0x00006a63
    1fc0:	33324e5a 	teqcc	r2, #1440	; 0x5a0
    1fc4:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    1fc8:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    1fcc:	616c7073 	smcvs	50947	; 0xc703
    1fd0:	53465f79 	movtpl	r5, #28537	; 0x6f79
    1fd4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1fd8:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    1fdc:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1fe0:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    1fe4:	4b504565 	blmi	1413580 <_bss_end+0x14018d0>
    1fe8:	4e353163 	rsfmisz	f3, f5, f3
    1fec:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1ff0:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    1ff4:	6f4d5f6e 	svcvs	0x004d5f6e
    1ff8:	5f006564 	svcpl	0x00006564
    1ffc:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2000:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2004:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2008:	5f6d6574 	svcpl	0x006d6574
    200c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2010:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2014:	5f007645 	svcpl	0x00007645
    2018:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    201c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2020:	76453444 	strbvc	r3, [r5], -r4, asr #8
    2024:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    2028:	7261505f 	rsbvc	r5, r1, #95	; 0x5f
    202c:	00736d61 	rsbseq	r6, r3, r1, ror #26
    2030:	74765f5f 	ldrbtvc	r5, [r6], #-3935	; 0xfffff0a1
    2034:	705f6c62 	subsvc	r6, pc, r2, ror #24
    2038:	745f7274 	ldrbvc	r7, [pc], #-628	; 2040 <CPSR_IRQ_INHIBIT+0x1fc0>
    203c:	00657079 	rsbeq	r7, r5, r9, ror r0
    2040:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2044:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    2048:	5f746669 	svcpl	0x00746669
    204c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2050:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2054:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2058:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    205c:	5a5f0076 	bpl	17c223c <_bss_end+0x17b058c>
    2060:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2064:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2068:	5f746e65 	svcpl	0x00746e65
    206c:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2070:	5f79616c 	svcpl	0x0079616c
    2074:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2078:	76453044 	strbvc	r3, [r5], -r4, asr #32
    207c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2080:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    2084:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    2088:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    208c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2090:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2094:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2098:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    209c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    20a0:	00764572 	rsbseq	r4, r6, r2, ror r5
    20a4:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    20a8:	65534331 	ldrbvs	r4, [r3, #-817]	; 0xfffffccf
    20ac:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    20b0:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20b4:	616c7073 	smcvs	50947	; 0xc703
    20b8:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20bc:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    20c0:	5f007645 	svcpl	0x00007645
    20c4:	30314e5a 	eorscc	r4, r1, sl, asr lr
    20c8:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    20cc:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    20d0:	3044656c 	subcc	r6, r4, ip, ror #10
    20d4:	5f007645 	svcpl	0x00007645
    20d8:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    20dc:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    20e0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    20e4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    20e8:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    20ec:	5a5f0069 	bpl	17c2298 <_bss_end+0x17b05e8>
    20f0:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    20f4:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    20f8:	5f726f74 	svcpl	0x00726f74
    20fc:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2100:	76453044 	strbvc	r3, [r5], -r4, asr #32
    2104:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2108:	54433531 	strbpl	r3, [r3], #-1329	; 0xfffffacf
    210c:	5f474e52 	svcpl	0x00474e52
    2110:	445f5346 	ldrbmi	r5, [pc], #-838	; 2118 <CPSR_IRQ_INHIBIT+0x2098>
    2114:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2118:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    211c:	5f534b52 	svcpl	0x00534b52
    2120:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2124:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    2128:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    212c:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    2130:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2134:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2138:	4f453443 	svcmi	0x00453443
    213c:	5f005f53 	svcpl	0x00005f53
    2140:	30324e5a 	eorscc	r4, r2, sl, asr lr
    2144:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    2148:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    214c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2150:	5f726574 	svcpl	0x00726574
    2154:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2158:	6f6c4335 	svcvs	0x006c4335
    215c:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2160:	4f494e00 	svcmi	0x00494e00
    2164:	5f6c7443 	svcpl	0x006c7443
    2168:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    216c:	6f697461 	svcvs	0x00697461
    2170:	5a5f006e 	bpl	17c2330 <_bss_end+0x17b0680>
    2174:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2178:	474e5254 	smlsldmi	r5, lr, r4, r2
    217c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2180:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2184:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2188:	6a634b50 	bvs	18d4ed0 <_bss_end+0x18c3220>
    218c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2190:	47433531 	smlaldxmi	r3, r3, r1, r5	; <UNPREDICTABLE>
    2194:	5f4f4950 	svcpl	0x004f4950
    2198:	445f5346 	ldrbmi	r5, [pc], #-838	; 21a0 <CPSR_IRQ_INHIBIT+0x2120>
    219c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21a0:	45344472 	ldrmi	r4, [r4, #-1138]!	; 0xfffffb8e
    21a4:	5a5f0076 	bpl	17c2384 <_bss_end+0x17b06d4>
    21a8:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    21ac:	474e5254 	smlsldmi	r5, lr, r4, r2
    21b0:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    21b4:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    21b8:	5a5f0076 	bpl	17c2398 <_bss_end+0x17b06e8>
    21bc:	4938314e 	ldmdbmi	r8!, {r1, r2, r3, r6, r8, ip, sp}
    21c0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    21c4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    21c8:	445f6d65 	ldrbmi	r6, [pc], #-3429	; 21d0 <CPSR_IRQ_INHIBIT+0x2150>
    21cc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21d0:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    21d4:	5f534b52 	svcpl	0x00534b52
    21d8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    21dc:	47433531 	smlaldxmi	r3, r3, r1, r5	; <UNPREDICTABLE>
    21e0:	5f4f4950 	svcpl	0x004f4950
    21e4:	445f5346 	ldrbmi	r5, [pc], #-838	; 21ec <CPSR_IRQ_INHIBIT+0x216c>
    21e8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21ec:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    21f0:	5f534b52 	svcpl	0x00534b52
    21f4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    21f8:	54433531 	strbpl	r3, [r3], #-1329	; 0xfffffacf
    21fc:	5f474e52 	svcpl	0x00474e52
    2200:	445f5346 	ldrbmi	r5, [pc], #-838	; 2208 <CPSR_IRQ_INHIBIT+0x2188>
    2204:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2208:	4f313172 	svcmi	0x00313172
    220c:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
    2210:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2214:	76457265 	strbvc	r7, [r5], -r5, ror #4
    2218:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    221c:	54433031 	strbpl	r3, [r3], #-49	; 0xffffffcf
    2220:	5f474e52 	svcpl	0x00474e52
    2224:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2228:	76453444 	strbvc	r3, [r5], -r4, asr #8
    222c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2230:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    2234:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    2238:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    223c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2240:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2244:	65704f39 	ldrbvs	r4, [r0, #-3897]!	; 0xfffff0c7
    2248:	69465f6e 	stmdbvs	r6, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    224c:	5045656c 	subpl	r6, r5, ip, ror #10
    2250:	3531634b 	ldrcc	r6, [r1, #-843]!	; 0xfffffcb5
    2254:	6c69464e 	stclvs	6, cr4, [r9], #-312	; 0xfffffec8
    2258:	704f5f65 	subvc	r5, pc, r5, ror #30
    225c:	4d5f6e65 	ldclmi	14, cr6, [pc, #-404]	; 20d0 <CPSR_IRQ_INHIBIT+0x2050>
    2260:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2264:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2268:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    226c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2274 <CPSR_IRQ_INHIBIT+0x21f4>
    2270:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2274:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2278:	72445f53 	subvc	r5, r4, #332	; 0x14c
    227c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2280:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2284:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2288:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    228c:	00764572 	rsbseq	r4, r6, r2, ror r5
    2290:	5f746547 	svcpl	0x00746547
    2294:	61726150 	cmnvs	r2, r0, asr r1
    2298:	5f00736d 	svcpl	0x0000736d
    229c:	30324e5a 	eorscc	r4, r2, sl, asr lr
    22a0:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    22a4:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    22a8:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    22ac:	5f726574 	svcpl	0x00726574
    22b0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    22b4:	61655234 	cmnvs	r5, r4, lsr r2
    22b8:	63504564 	cmpvs	r0, #100, 10	; 0x19000000
    22bc:	576d006a 	strbpl	r0, [sp, -sl, rrx]!
    22c0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    22c4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    22c8:	4f433831 	svcmi	0x00433831
    22cc:	5f44454c 	svcpl	0x0044454c
    22d0:	70736944 	rsbsvc	r6, r3, r4, asr #18
    22d4:	5f79616c 	svcpl	0x0079616c
    22d8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    22dc:	61655234 	cmnvs	r5, r4, lsr r2
    22e0:	63504564 	cmpvs	r0, #100, 10	; 0x19000000
    22e4:	5a5f006a 	bpl	17c2494 <_bss_end+0x17b07e4>
    22e8:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    22ec:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    22f0:	5f746e65 	svcpl	0x00746e65
    22f4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    22f8:	5f79616c 	svcpl	0x0079616c
    22fc:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2300:	6f6c4335 	svcvs	0x006c4335
    2304:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2308:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    230c:	4f433332 	svcmi	0x00433332
    2310:	5f44454c 	svcpl	0x0044454c
    2314:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2318:	5f79616c 	svcpl	0x0079616c
    231c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2324 <CPSR_IRQ_INHIBIT+0x22a4>
    2320:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2324:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    2328:	005f534f 	subseq	r5, pc, pc, asr #6
    232c:	65537366 	ldrbvs	r7, [r3, #-870]	; 0xfffffc9a
    2330:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2334:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2338:	616c7073 	smcvs	50947	; 0xc703
    233c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2340:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2344:	00726576 	rsbseq	r6, r2, r6, ror r5
    2348:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    234c:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    2350:	5f746669 	svcpl	0x00746669
    2354:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2358:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    235c:	5f53465f 	svcpl	0x0053465f
    2360:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2364:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2368:	5f007645 	svcpl	0x00007645
    236c:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2370:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    2374:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    2378:	4335656c 	teqmi	r5, #108, 10	; 0x1b000000
    237c:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    2380:	66007645 	strvs	r7, [r0], -r5, asr #12
    2384:	454c4f73 	strbmi	r4, [ip, #-3955]	; 0xfffff08d
    2388:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    238c:	616c7073 	smcvs	50947	; 0xc703
    2390:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2394:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2398:	00726576 	rsbseq	r6, r2, r6, ror r5
    239c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    23a0:	552f632f 	strpl	r6, [pc, #-815]!	; 2079 <CPSR_IRQ_INHIBIT+0x1ff9>
    23a4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    23a8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    23ac:	6f442f61 	svcvs	0x00442f61
    23b0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    23b4:	2f73746e 	svccs	0x0073746e
    23b8:	6f72655a 	svcvs	0x0072655a
    23bc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    23c0:	6178652f 	cmnvs	r8, pc, lsr #10
    23c4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    23c8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    23cc:	4332492d 	teqmi	r2, #737280	; 0xb4000
    23d0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    23d4:	2f6c656e 	svccs	0x006c656e
    23d8:	2f637273 	svccs	0x00637273
    23dc:	662f7366 	strtvs	r7, [pc], -r6, ror #6
    23e0:	73656c69 	cmnvc	r5, #26880	; 0x6900
    23e4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    23e8:	72645f6d 	rsbvc	r5, r4, #436	; 0x1b4
    23ec:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    23f0:	70632e73 	rsbvc	r2, r3, r3, ror lr
    23f4:	704f0070 	subvc	r0, pc, r0, ror r0	; <UNPREDICTABLE>
    23f8:	465f6e65 	ldrbmi	r6, [pc], -r5, ror #28
    23fc:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2400:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    2404:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2408:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    240c:	5a5f0076 	bpl	17c25ec <_bss_end+0x17b093c>
    2410:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2414:	474e5254 	smlsldmi	r5, lr, r4, r2
    2418:	5f53465f 	svcpl	0x0053465f
    241c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2420:	4f397265 	svcmi	0x00397265
    2424:	5f6e6570 	svcpl	0x006e6570
    2428:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    242c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2430:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    2434:	5f656c69 	svcpl	0x00656c69
    2438:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    243c:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 2444 <CPSR_IRQ_INHIBIT+0x23c4>
    2440:	5a5f0065 	bpl	17c25dc <_bss_end+0x17b092c>
    2444:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2448:	474e5254 	smlsldmi	r5, lr, r4, r2
    244c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2450:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2454:	5a5f0076 	bpl	17c2634 <_bss_end+0x17b0984>
    2458:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    245c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2460:	5f746e65 	svcpl	0x00746e65
    2464:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2468:	5f79616c 	svcpl	0x0079616c
    246c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2470:	76453243 	strbvc	r3, [r5], -r3, asr #4
    2474:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2478:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    247c:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2480:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2484:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2488:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    248c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    2490:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2494:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2498:	616c7073 	smcvs	50947	; 0xc703
    249c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    24a0:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    24a4:	44726576 	ldrbtmi	r6, [r2], #-1398	; 0xfffffa8a
    24a8:	00764534 	rsbseq	r4, r6, r4, lsr r5
    24ac:	314e5a5f 	cmpcc	lr, pc, asr sl
    24b0:	6f4d4333 	svcvs	0x004d4333
    24b4:	6f74696e 	svcvs	0x0074696e
    24b8:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    24bc:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    24c0:	534b5245 	movtpl	r5, #45637	; 0xb245
    24c4:	5a5f005f 	bpl	17c2648 <_bss_end+0x17b0998>
    24c8:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    24cc:	4f495047 	svcmi	0x00495047
    24d0:	5f53465f 	svcpl	0x0053465f
    24d4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    24d8:	31317265 	teqcc	r1, r5, ror #4
    24dc:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    24e0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    24e4:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    24e8:	4f490076 	svcmi	0x00490076
    24ec:	006c7443 	rsbeq	r7, ip, r3, asr #8
    24f0:	314e5a5f 	cmpcc	lr, pc, asr sl
    24f4:	6f4d4333 	svcvs	0x004d4333
    24f8:	6f74696e 	svcvs	0x0074696e
    24fc:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2500:	3243656c 	subcc	r6, r3, #108, 10	; 0x1b000000
    2504:	5f006945 	svcpl	0x00006945
    2508:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    250c:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    2510:	53465f4f 	movtpl	r5, #28495	; 0x6f4f
    2514:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2518:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    251c:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    2520:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2524:	4b504565 	blmi	1413ac0 <_bss_end+0x1401e10>
    2528:	4e353163 	rsfmisz	f3, f5, f3
    252c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2530:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    2534:	6f4d5f6e 	svcvs	0x004d5f6e
    2538:	66006564 	strvs	r6, [r0], -r4, ror #10
    253c:	69685373 	stmdbvs	r8!, {r0, r1, r4, r5, r6, r8, r9, ip, lr}^
    2540:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    2544:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2548:	5f726574 	svcpl	0x00726574
    254c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2554 <CPSR_IRQ_INHIBIT+0x24d4>
    2550:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2554:	5a5f0072 	bpl	17c2724 <_bss_end+0x17b0a74>
    2558:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    255c:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    2560:	5f726f74 	svcpl	0x00726f74
    2564:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2568:	434f4935 	movtmi	r4, #63797	; 0xf935
    256c:	31456c74 	hvccc	22212	; 0x56c4
    2570:	4f494e36 	svcmi	0x00494e36
    2574:	5f6c7443 	svcpl	0x006c7443
    2578:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    257c:	6f697461 	svcvs	0x00697461
    2580:	0076506e 	rsbseq	r5, r6, lr, rrx
    2584:	6168436d 	cmnvs	r8, sp, ror #6
    2588:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    258c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2590:	4f433831 	svcmi	0x00433831
    2594:	5f44454c 	svcpl	0x0044454c
    2598:	70736944 	rsbsvc	r6, r3, r4, asr #18
    259c:	5f79616c 	svcpl	0x0079616c
    25a0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    25a4:	76453244 	strbvc	r3, [r5], -r4, asr #4
    25a8:	6e5a5f00 	cdpvs	15, 5, cr5, cr10, cr0, {0}
    25ac:	5f006a77 	svcpl	0x00006a77
    25b0:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    25b4:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    25b8:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    25bc:	616c7073 	smcvs	50947	; 0xc703
    25c0:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25c4:	4335656c 	teqmi	r5, #108, 10	; 0x1b000000
    25c8:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    25cc:	4f007645 	svcmi	0x00007645
    25d0:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
    25d4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    25d8:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    25dc:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    25e0:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    25e4:	5f00656c 	svcpl	0x0000656c
    25e8:	33324e5a 	teqcc	r2, #1440	; 0x5a0
    25ec:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    25f0:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    25f4:	616c7073 	smcvs	50947	; 0xc703
    25f8:	53465f79 	movtpl	r5, #28537	; 0x6f79
    25fc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2600:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2604:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2608:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    260c:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2610:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2614:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2618:	6a634b50 	bvs	18d5360 <_bss_end+0x18c36b0>
    261c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2620:	53433532 	movtpl	r3, #13618	; 0x3532
    2624:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2628:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    262c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2630:	53465f72 	movtpl	r5, #28530	; 0x6f72
    2634:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2638:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    263c:	4b524534 	blmi	1493b14 <_bss_end+0x1481e64>
    2640:	5f005f53 	svcpl	0x00005f53
    2644:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2648:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    264c:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    2650:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2654:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2658:	4e363145 	rsfmism	f3, f6, f5
    265c:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2660:	704f5f6c 	subvc	r5, pc, ip, ror #30
    2664:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    2668:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    266c:	74630076 	strbtvc	r0, [r3], #-118	; 0xffffff8a
    2670:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
    2674:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2678:	53433132 	movtpl	r3, #12594	; 0x3132
    267c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2680:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2688 <CPSR_IRQ_INHIBIT+0x2608>
    2684:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2688:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    268c:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2690:	4b524534 	blmi	1493b68 <_bss_end+0x1481eb8>
    2694:	5f005f53 	svcpl	0x00005f53
    2698:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    269c:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    26a0:	53465f4f 	movtpl	r5, #28495	; 0x6f4f
    26a4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    26a8:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    26ac:	534f4534 	movtpl	r4, #62772	; 0xf534
    26b0:	5a5f005f 	bpl	17c2834 <_bss_end+0x17b0b84>
    26b4:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    26b8:	4f495047 	svcmi	0x00495047
    26bc:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    26c0:	45344465 	ldrmi	r4, [r4, #-1125]!	; 0xfffffb9b
    26c4:	5a5f0076 	bpl	17c28a4 <_bss_end+0x17b0bf4>
    26c8:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    26cc:	66696853 			; <UNDEFINED> instruction: 0x66696853
    26d0:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    26d4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    26d8:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    26dc:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    26e0:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    26e4:	3631456c 	ldrtcc	r4, [r1], -ip, ror #10
    26e8:	434f494e 	movtmi	r4, #63822	; 0xf94e
    26ec:	4f5f6c74 	svcmi	0x005f6c74
    26f0:	61726570 	cmnvs	r2, r0, ror r5
    26f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    26f8:	5f007650 	svcpl	0x00007650
    26fc:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2700:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2704:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2708:	616c7073 	smcvs	50947	; 0xc703
    270c:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2710:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2714:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2718:	4e363145 	rsfmism	f3, f6, f5
    271c:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2720:	704f5f6c 	subvc	r5, pc, ip, ror #30
    2724:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    2728:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    272c:	5a5f0076 	bpl	17c290c <_bss_end+0x17b0c5c>
    2730:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2734:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2738:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    273c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2740:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2744:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2748:	00764534 	rsbseq	r4, r6, r4, lsr r5
    274c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2750:	69464938 	stmdbvs	r6, {r3, r4, r5, r8, fp, lr}^
    2754:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2758:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    275c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2760:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    2764:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    2768:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    276c:	4b504565 	blmi	1413d08 <_bss_end+0x1402058>
    2770:	4e353163 	rsfmisz	f3, f5, f3
    2774:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2778:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    277c:	6f4d5f6e 	svcvs	0x004d5f6e
    2780:	5f006564 	svcpl	0x00006564
    2784:	31314e5a 	teqcc	r1, sl, asr lr
    2788:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    278c:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2790:	316d6574 	smccc	54868	; 0xd654
    2794:	53466731 	movtpl	r6, #26417	; 0x6731
    2798:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    279c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    27a0:	437e0045 	cmnmi	lr, #69	; 0x45
    27a4:	474e5254 	smlsldmi	r5, lr, r4, r2
    27a8:	5f53465f 	svcpl	0x0053465f
    27ac:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    27b0:	67007265 	strvs	r7, [r0, -r5, ror #4]
    27b4:	6e6f6970 			; <UNDEFINED> instruction: 0x6e6f6970
    27b8:	5f006d75 	svcpl	0x00006d75
    27bc:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    27c0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    27c4:	434f4935 	movtmi	r4, #63797	; 0xf935
    27c8:	31456c74 	hvccc	22212	; 0x56c4
    27cc:	4f494e36 	svcmi	0x00494e36
    27d0:	5f6c7443 	svcpl	0x006c7443
    27d4:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    27d8:	6f697461 	svcvs	0x00697461
    27dc:	0076506e 	rsbseq	r5, r6, lr, rrx
    27e0:	314e5a5f 	cmpcc	lr, pc, asr sl
    27e4:	50474335 	subpl	r4, r7, r5, lsr r3
    27e8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    27ec:	72445f53 	subvc	r5, r4, #332	; 0x14c
    27f0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    27f4:	76453443 	strbvc	r3, [r5], -r3, asr #8
    27f8:	47437e00 	strbmi	r7, [r3, -r0, lsl #28]
    27fc:	5f4f4950 	svcpl	0x004f4950
    2800:	445f5346 	ldrbmi	r5, [pc], #-838	; 2808 <CPSR_IRQ_INHIBIT+0x2788>
    2804:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2808:	5a5f0072 	bpl	17c29d8 <_bss_end+0x17b0d28>
    280c:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2810:	474e5254 	smlsldmi	r5, lr, r4, r2
    2814:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2818:	65523465 	ldrbvs	r3, [r2, #-1125]	; 0xfffffb9b
    281c:	50456461 	subpl	r6, r5, r1, ror #8
    2820:	5f006a63 	svcpl	0x00006a63
    2824:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2828:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    282c:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2830:	5f6d6574 	svcpl	0x006d6574
    2834:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2838:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    283c:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
    2840:	4e6e6950 			; <UNDEFINED> instruction: 0x4e6e6950
    2844:	5a5f006f 	bpl	17c2a08 <_bss_end+0x17b0d58>
    2848:	4336324e 	teqmi	r6, #-536870908	; 0xe0000004
    284c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2850:	5f746e65 	svcpl	0x00746e65
    2854:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2858:	5f79616c 	svcpl	0x0079616c
    285c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2864 <CPSR_IRQ_INHIBIT+0x27e4>
    2860:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2864:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    2868:	005f534f 	subseq	r5, pc, pc, asr #6
    286c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2870:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    2874:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2878:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    287c:	00764530 	rsbseq	r4, r6, r0, lsr r5
    2880:	5047437e 	subpl	r4, r7, lr, ror r3
    2884:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2888:	00656c69 	rsbeq	r6, r5, r9, ror #24
    288c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2890:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    2894:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2898:	43656c69 	cmnmi	r5, #26880	; 0x6900
    289c:	00764534 	rsbseq	r4, r6, r4, lsr r5
    28a0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    28a4:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    28a8:	5f746669 	svcpl	0x00746669
    28ac:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    28b0:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    28b4:	5f53465f 	svcpl	0x0053465f
    28b8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    28bc:	4f397265 	svcmi	0x00397265
    28c0:	5f6e6570 	svcpl	0x006e6570
    28c4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    28c8:	634b5045 	movtvs	r5, #45125	; 0xb045
    28cc:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    28d0:	5f656c69 	svcpl	0x00656c69
    28d4:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    28d8:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 28e0 <CPSR_IRQ_INHIBIT+0x2860>
    28dc:	437e0065 	cmnmi	lr, #101	; 0x65
    28e0:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    28e4:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    28e8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    28ec:	5f53465f 	svcpl	0x0053465f
    28f0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    28f4:	5f007265 	svcpl	0x00007265
    28f8:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    28fc:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2900:	6f6c4335 	svcvs	0x006c4335
    2904:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2908:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    290c:	54433031 	strbpl	r3, [r3], #-49	; 0xffffffcf
    2910:	5f474e52 	svcpl	0x00474e52
    2914:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2918:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    291c:	005f534b 	subseq	r5, pc, fp, asr #6
    2920:	6946497e 	stmdbvs	r6, {r1, r2, r3, r4, r5, r6, r8, fp, lr}^
    2924:	5f00656c 	svcpl	0x0000656c
    2928:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    292c:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2930:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2934:	616c7073 	smcvs	50947	; 0xc703
    2938:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    293c:	3044656c 	subcc	r6, r4, ip, ror #10
    2940:	6f007645 	svcvs	0x00007645
    2944:	61726570 	cmnvs	r2, r0, ror r5
    2948:	20726f74 	rsbscs	r6, r2, r4, ror pc
    294c:	0077656e 	rsbseq	r6, r7, lr, ror #10
    2950:	314e5a5f 	cmpcc	lr, pc, asr sl
    2954:	6f4d4333 	svcvs	0x004d4333
    2958:	6f74696e 	svcvs	0x0074696e
    295c:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2960:	3444656c 	strbcc	r6, [r4], #-1388	; 0xfffffa94
    2964:	7e007645 	cfmadd32vc	mvax2, mvfx7, mvfx0, mvfx5
    2968:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    296c:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    2970:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2974:	5f726574 	svcpl	0x00726574
    2978:	445f5346 	ldrbmi	r5, [pc], #-838	; 2980 <CPSR_IRQ_INHIBIT+0x2900>
    297c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2980:	5a5f0072 	bpl	17c2b50 <_bss_end+0x17b0ea0>
    2984:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2988:	474e5254 	smlsldmi	r5, lr, r4, r2
    298c:	5f53465f 	svcpl	0x0053465f
    2990:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2994:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2998:	5f007645 	svcpl	0x00007645
    299c:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    29a0:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    29a4:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    29a8:	616c7073 	smcvs	50947	; 0xc703
    29ac:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    29b0:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    29b4:	5f007645 	svcpl	0x00007645
    29b8:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    29bc:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    29c0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    29c4:	5f53465f 	svcpl	0x0053465f
    29c8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    29cc:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    29d0:	63007645 	movwvs	r7, #1605	; 0x645
    29d4:	6e6e6168 	powvsez	f6, f6, #0.0
    29d8:	5f006c65 	svcpl	0x00006c65
    29dc:	72747076 	rsbsvc	r7, r4, #118	; 0x76
    29e0:	6946492e 	stmdbvs	r6, {r1, r2, r3, r5, r8, fp, lr}^
    29e4:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    29e8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    29ec:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    29f0:	00726576 	rsbseq	r6, r2, r6, ror r5
    29f4:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    29f8:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    29fc:	5f746669 	svcpl	0x00746669
    2a00:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2a04:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2a08:	5f53465f 	svcpl	0x0053465f
    2a0c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2a10:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2a14:	5f534f45 	svcpl	0x00534f45
    2a18:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2a1c:	47433031 	smlaldxmi	r3, r3, r1, r0	; <UNPREDICTABLE>
    2a20:	5f4f4950 	svcpl	0x004f4950
    2a24:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2a28:	434f4935 	movtmi	r4, #63797	; 0xf935
    2a2c:	31456c74 	hvccc	22212	; 0x56c4
    2a30:	4f494e36 	svcmi	0x00494e36
    2a34:	5f6c7443 	svcpl	0x006c7443
    2a38:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    2a3c:	6f697461 	svcvs	0x00697461
    2a40:	0076506e 	rsbseq	r5, r6, lr, rrx
    2a44:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    2a48:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2a4c:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    2a50:	5f534b52 	svcpl	0x00534b52
    2a54:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2a58:	53433632 	movtpl	r3, #13874	; 0x3632
    2a5c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2a60:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2a68 <CPSR_IRQ_INHIBIT+0x29e8>
    2a64:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2a68:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2a6c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2a70:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2a74:	65704f39 	ldrbvs	r4, [r0, #-3897]!	; 0xfffff0c7
    2a78:	69465f6e 	stmdbvs	r6, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a7c:	5045656c 	subpl	r6, r5, ip, ror #10
    2a80:	3531634b 	ldrcc	r6, [r1, #-843]!	; 0xfffffcb5
    2a84:	6c69464e 	stclvs	6, cr4, [r9], #-312	; 0xfffffec8
    2a88:	704f5f65 	subvc	r5, pc, r5, ror #30
    2a8c:	4d5f6e65 	ldclmi	14, cr6, [pc, #-404]	; 2900 <CPSR_IRQ_INHIBIT+0x2880>
    2a90:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2a94:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2a98:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    2a9c:	5f746669 	svcpl	0x00746669
    2aa0:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2aa4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2aa8:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2aac:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2ab0:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2ab4:	6a634b50 	bvs	18d57fc <_bss_end+0x18c3b4c>
    2ab8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2abc:	53433632 	movtpl	r3, #13874	; 0x3632
    2ac0:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2ac4:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2acc <CPSR_IRQ_INHIBIT+0x2a4c>
    2ac8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2acc:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2ad0:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2ad4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2ad8:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2adc:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2ae0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2ae4:	00764572 	rsbseq	r4, r6, r2, ror r5
    2ae8:	4c4f437e 	mcrrmi	3, 7, r4, pc, cr14
    2aec:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2af4 <CPSR_IRQ_INHIBIT+0x2a74>
    2af0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2af4:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2af8:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2afc:	6853437e 	ldmdavs	r3, {r1, r2, r3, r4, r5, r6, r8, r9, lr}^
    2b00:	5f746669 	svcpl	0x00746669
    2b04:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2b08:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2b0c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2b10:	5a5f0065 	bpl	17c2cac <_bss_end+0x17b0ffc>
    2b14:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2b18:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2b1c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    2b20:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2b24:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2b28:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2b2c:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2b30:	314e5a5f 	cmpcc	lr, pc, asr sl
    2b34:	50474330 	subpl	r4, r7, r0, lsr r3
    2b38:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2b3c:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2b40:	62694534 	rsbvs	r4, r9, #52, 10	; 0xd000000
    2b44:	5a5f0062 	bpl	17c2cd4 <_bss_end+0x17b1024>
    2b48:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2b4c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2b50:	5f746e65 	svcpl	0x00746e65
    2b54:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2b58:	5f79616c 	svcpl	0x0079616c
    2b5c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2b60:	76453444 	strbvc	r3, [r5], -r4, asr #8
    2b64:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2b68:	4f433831 	svcmi	0x00433831
    2b6c:	5f44454c 	svcpl	0x0044454c
    2b70:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2b74:	5f79616c 	svcpl	0x0079616c
    2b78:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2b7c:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    2b80:	005f534b 	subseq	r5, pc, fp, asr #6
    2b84:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2b88:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    2b8c:	5f746669 	svcpl	0x00746669
    2b90:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2b94:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2b98:	5f53465f 	svcpl	0x0053465f
    2b9c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2ba0:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2ba4:	5f007645 	svcpl	0x00007645
    2ba8:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    2bac:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2bb0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2bb4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2bb8:	6c433565 	cfstr64vs	mvdx3, [r3], {101}	; 0x65
    2bbc:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    2bc0:	765f0076 			; <UNDEFINED> instruction: 0x765f0076
    2bc4:	2e727470 	mrccs	4, 3, r7, cr2, cr0, {3}
    2bc8:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2bcc:	5a5f0065 	bpl	17c2d68 <_bss_end+0x17b10b8>
    2bd0:	4333324e 	teqmi	r3, #-536870908	; 0xe0000004
    2bd4:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    2bd8:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2bdc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2be0:	5f53465f 	svcpl	0x0053465f
    2be4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2be8:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2bec:	534b5245 	movtpl	r5, #45637	; 0xb245
    2bf0:	5a5f005f 	bpl	17c2d74 <_bss_end+0x17b10c4>
    2bf4:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2bf8:	474e5254 	smlsldmi	r5, lr, r4, r2
    2bfc:	5f53465f 	svcpl	0x0053465f
    2c00:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2c04:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2c08:	5f534f45 	svcpl	0x00534f45
    2c0c:	65526d00 	ldrbvs	r6, [r2, #-3328]	; 0xfffff300
    2c10:	5f006461 	svcpl	0x00006461
    2c14:	31324e5a 	teqcc	r2, sl, asr lr
    2c18:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2c1c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2c20:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2c24:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2c28:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2c2c:	4f493565 	svcmi	0x00493565
    2c30:	456c7443 	strbmi	r7, [ip, #-1091]!	; 0xfffffbbd
    2c34:	494e3631 	stmdbmi	lr, {r0, r4, r5, r9, sl, ip, sp}^
    2c38:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2c3c:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    2c40:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2c44:	76506e6f 	ldrbvc	r6, [r0], -pc, ror #28
    2c48:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2c4c:	53433632 	movtpl	r3, #13874	; 0x3632
    2c50:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2c54:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2c5c <CPSR_IRQ_INHIBIT+0x2bdc>
    2c58:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2c5c:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2c60:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2c64:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2c68:	76453443 	strbvc	r3, [r5], -r3, asr #8
    2c6c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2c70:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    2c74:	3244656c 	subcc	r6, r4, #108, 10	; 0x1b000000
    2c78:	5f007645 	svcpl	0x00007645
    2c7c:	33324e5a 	teqcc	r2, #1440	; 0x5a0
    2c80:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2c84:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2c88:	616c7073 	smcvs	50947	; 0xc703
    2c8c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2c90:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2c94:	44726576 	ldrbtmi	r6, [r2], #-1398	; 0xfffffa8a
    2c98:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2c9c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2ca0:	4c4f4338 	mcrrmi	3, 3, r4, pc, cr8
    2ca4:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2cac <CPSR_IRQ_INHIBIT+0x2c2c>
    2ca8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2cac:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2cb0:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2cb4:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2cb8:	314e5a5f 	cmpcc	lr, pc, asr sl
    2cbc:	4c4f4338 	mcrrmi	3, 3, r4, pc, cr8
    2cc0:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2cc8 <CPSR_IRQ_INHIBIT+0x2c48>
    2cc4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2cc8:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2ccc:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2cd0:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2cd4:	756f6377 	strbvc	r6, [pc, #-887]!	; 2965 <CPSR_IRQ_INHIBIT+0x28e5>
    2cd8:	7700746e 	strvc	r7, [r0, -lr, ror #8]
    2cdc:	00667562 	rsbeq	r7, r6, r2, ror #10
    2ce0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2ce4:	65534331 	ldrbvs	r4, [r3, #-817]	; 0xfffffccf
    2ce8:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2cec:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cf0:	616c7073 	smcvs	50947	; 0xc703
    2cf4:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cf8:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2cfc:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2d00:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2d04:	314e5a5f 	cmpcc	lr, pc, asr sl
    2d08:	6f4d4333 	svcvs	0x004d4333
    2d0c:	6f74696e 	svcvs	0x0074696e
    2d10:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d14:	5735656c 	ldrpl	r6, [r5, -ip, ror #10]!
    2d18:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    2d1c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2d20:	5a5f006a 	bpl	17c2ed0 <_bss_end+0x17b1220>
    2d24:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2d28:	4f495047 	svcmi	0x00495047
    2d2c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2d30:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    2d34:	00626269 	rsbeq	r6, r2, r9, ror #4
    2d38:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2d3c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    2d40:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2d44:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d48:	616c7073 	smcvs	50947	; 0xc703
    2d4c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2d50:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2d54:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2d58:	4b524534 	blmi	1494230 <_bss_end+0x1482580>
    2d5c:	5f005f53 	svcpl	0x00005f53
    2d60:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2d64:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2d68:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2d6c:	616c7073 	smcvs	50947	; 0xc703
    2d70:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d74:	5735656c 	ldrpl	r6, [r5, -ip, ror #10]!
    2d78:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    2d7c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2d80:	5a5f006a 	bpl	17c2f30 <_bss_end+0x17b1280>
    2d84:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2d88:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2d8c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    2d90:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2d94:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2d98:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2d9c:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2da0:	314e5a5f 	cmpcc	lr, pc, asr sl
    2da4:	6f4d4333 	svcvs	0x004d4333
    2da8:	6f74696e 	svcvs	0x0074696e
    2dac:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2db0:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2db4:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2db8:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2dbc:	6946497e 	stmdbvs	r6, {r1, r2, r3, r4, r5, r6, r8, fp, lr}^
    2dc0:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2dc4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2dc8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2dcc:	00726576 	rsbseq	r6, r2, r6, ror r5
    2dd0:	314e5a5f 	cmpcc	lr, pc, asr sl
    2dd4:	50474330 	subpl	r4, r7, r0, lsr r3
    2dd8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2ddc:	34656c69 	strbtcc	r6, [r5], #-3177	; 0xfffff397
    2de0:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    2de4:	6a635045 	bvs	18d6f00 <_bss_end+0x18c5250>
    2de8:	53437e00 	movtpl	r7, #15872	; 0x3e00
    2dec:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2df0:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2df8 <CPSR_IRQ_INHIBIT+0x2d78>
    2df4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2df8:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2dfc:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2e00:	314e5a5f 	cmpcc	lr, pc, asr sl
    2e04:	6f4d4338 	svcvs	0x004d4338
    2e08:	6f74696e 	svcvs	0x0074696e
    2e0c:	53465f72 	movtpl	r5, #28530	; 0x6f72
    2e10:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2e14:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2e18:	4b524534 	blmi	14942f0 <_bss_end+0x1482640>
    2e1c:	5f005f53 	svcpl	0x00005f53
    2e20:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2e24:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    2e28:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2e2c:	4335656c 	teqmi	r5, #108, 10	; 0x1b000000
    2e30:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    2e34:	5f007645 	svcpl	0x00007645
    2e38:	31324e5a 	teqcc	r2, sl, asr lr
    2e3c:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2e40:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2e44:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2e48:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2e4c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2e50:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2e54:	5f5f0076 	svcpl	0x005f0076
    2e58:	635f6e69 	cmpvs	pc, #1680	; 0x690
    2e5c:	00677268 	rsbeq	r7, r7, r8, ror #4
    2e60:	314e5a5f 	cmpcc	lr, pc, asr sl
    2e64:	69464938 	stmdbvs	r6, {r3, r4, r5, r8, fp, lr}^
    2e68:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2e6c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2e70:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2e74:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2e78:	534f4534 	movtpl	r4, #62772	; 0xf534
    2e7c:	5a5f005f 	bpl	17c3000 <_bss_end+0x17b1350>
    2e80:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2e84:	4f495047 	svcmi	0x00495047
    2e88:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2e8c:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2e90:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2e94:	6a634b50 	bvs	18d5bdc <_bss_end+0x18c3f2c>
    2e98:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2e9c:	53433032 	movtpl	r3, #12338	; 0x3032
    2ea0:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2ea4:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2ea8:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2eac:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2eb0:	3044656c 	subcc	r6, r4, ip, ror #10
    2eb4:	5f007645 	svcpl	0x00007645
    2eb8:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2ebc:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2ec0:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2ec4:	5f6d6574 	svcpl	0x006d6574
    2ec8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2ecc:	31317265 	teqcc	r1, r5, ror #4
    2ed0:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    2ed4:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2ed8:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    2edc:	5a5f0076 	bpl	17c30bc <_bss_end+0x17b140c>
    2ee0:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2ee4:	4f495047 	svcmi	0x00495047
    2ee8:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2eec:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2ef0:	73660076 	cmnvc	r6, #118	; 0x76
    2ef4:	474e5254 	smlsldmi	r5, lr, r4, r2
    2ef8:	5f53465f 	svcpl	0x0053465f
    2efc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2f00:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    2f04:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2f08:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2f0c:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2f10:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2f14:	5f53465f 	svcpl	0x0053465f
    2f18:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2f1c:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    2f20:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2f24:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2f28:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2f2c:	5a5f0065 	bpl	17c30c8 <_bss_end+0x17b1418>
    2f30:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2f34:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2f38:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2f3c:	6f435f74 	svcvs	0x00435f74
    2f40:	6f72746e 	svcvs	0x0072746e
    2f44:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2f48:	6e453031 	mcrvs	0, 2, r3, cr5, cr1, {1}
    2f4c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2f50:	5152495f 	cmppl	r2, pc, asr r9
    2f54:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    2f58:	30316c61 	eorscc	r6, r1, r1, ror #24
    2f5c:	5f515249 	svcpl	0x00515249
    2f60:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    2f64:	00456563 	subeq	r6, r5, r3, ror #10
    2f68:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2f6c:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    2f70:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2f74:	5f747075 	svcpl	0x00747075
    2f78:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    2f7c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    2f80:	37317265 	ldrcc	r7, [r1, -r5, ror #4]!
    2f84:	61736944 	cmnvs	r3, r4, asr #18
    2f88:	5f656c62 	svcpl	0x00656c62
    2f8c:	69736142 	ldmdbvs	r3!, {r1, r6, r8, sp, lr}^
    2f90:	52495f63 	subpl	r5, r9, #396	; 0x18c
    2f94:	334e4551 	movtcc	r4, #58705	; 0xe551
    2f98:	316c6168 	cmncc	ip, r8, ror #2
    2f9c:	51524936 	cmppl	r2, r6, lsr r9
    2fa0:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    2fa4:	535f6369 	cmppl	pc, #-1543503871	; 0xa4000001
    2fa8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    2fac:	5f004565 	svcpl	0x00004565
    2fb0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    2fb4:	6f725043 	svcvs	0x00725043
    2fb8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2fbc:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    2fc0:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    2fc4:	72433931 	subvc	r3, r3, #802816	; 0xc4000
    2fc8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2fcc:	69614d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    2fd0:	72505f6e 	subsvc	r5, r0, #440	; 0x1b8
    2fd4:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2fd8:	00764573 	rsbseq	r4, r6, r3, ror r5
    2fdc:	4f4c475f 	svcmi	0x004c475f
    2fe0:	5f4c4142 	svcpl	0x004c4142
    2fe4:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    2fe8:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    2fec:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2ff0:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2ff4:	6c744374 	ldclvs	3, cr4, [r4], #-464	; 0xfffffe30
    2ff8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2ffc:	49433132 	stmdbmi	r3, {r1, r4, r5, r8, ip, sp}^
    3000:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3004:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3008:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    300c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2e44 <CPSR_IRQ_INHIBIT+0x2dc4>
    3010:	3472656c 	ldrbtcc	r6, [r2], #-1388	; 0xfffffa94
    3014:	73676552 	cmnvc	r7, #343932928	; 0x14800000
    3018:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    301c:	34326c61 	ldrtcc	r6, [r2], #-3169	; 0xfffff39f
    3020:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3024:	70757272 	rsbsvc	r7, r5, r2, ror r2
    3028:	6f435f74 	svcvs	0x00435f74
    302c:	6f72746e 	svcvs	0x0072746e
    3030:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    3034:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    3038:	6e550045 	cdpvs	0, 5, cr0, cr5, cr5, {2}
    303c:	5f70616d 	svcpl	0x0070616d
    3040:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3044:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
    3048:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    304c:	55504700 	ldrbpl	r4, [r0, #-1792]	; 0xfffff900
    3050:	61485f31 	cmpvs	r8, r1, lsr pc
    3054:	4d00746c 	cfstrsmi	mvf7, [r0, #-432]	; 0xfffffe50
    3058:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
    305c:	6d00786f 	stcvs	8, cr7, [r0, #-444]	; 0xfffffe44
    3060:	636f7250 	cmnvs	pc, #80, 4
    3064:	5f737365 	svcpl	0x00737365
    3068:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    306c:	6165485f 	cmnvs	r5, pc, asr r8
    3070:	5a5f0064 	bpl	17c3208 <_bss_end+0x17b1558>
    3074:	36314b4e 	ldrtcc	r4, [r1], -lr, asr #22
    3078:	6f725043 	svcvs	0x00725043
    307c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3080:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3084:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3088:	65473931 	strbvs	r3, [r7, #-2353]	; 0xfffff6cf
    308c:	75435f74 	strbvc	r5, [r3, #-3956]	; 0xfffff08c
    3090:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    3094:	72505f74 	subsvc	r5, r0, #116, 30	; 0x1d0
    3098:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    309c:	00764573 	rsbseq	r4, r6, r3, ror r5
    30a0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    30a4:	465f656c 	ldrbmi	r6, [pc], -ip, ror #10
    30a8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    30ac:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    30b0:	57535f6d 	ldrbpl	r5, [r3, -sp, ror #30]
    30b4:	6e450049 	cdpvs	0, 4, cr0, cr5, cr9, {2}
    30b8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    30bc:	5152495f 	cmppl	r2, pc, asr r9
    30c0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    30c4:	49433132 	stmdbmi	r3, {r1, r4, r5, r8, ip, sp}^
    30c8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    30cc:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    30d0:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    30d4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2f0c <CPSR_IRQ_INHIBIT+0x2e8c>
    30d8:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
    30dc:	006d4532 	rsbeq	r4, sp, r2, lsr r5
    30e0:	314e5a5f 	cmpcc	lr, pc, asr sl
    30e4:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    30e8:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    30ec:	614d5f73 	hvcvs	54771	; 0xd5f3
    30f0:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    30f4:	43343172 	teqmi	r4, #-2147483620	; 0x8000001c
    30f8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    30fc:	72505f65 	subsvc	r5, r0, #404	; 0x194
    3100:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3104:	006d4573 	rsbeq	r4, sp, r3, ror r5
    3108:	4957534e 	ldmdbmi	r7, {r1, r2, r3, r6, r8, r9, ip, lr}^
    310c:	6f72505f 	svcvs	0x0072505f
    3110:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3114:	7265535f 	rsbvc	r5, r5, #2080374785	; 0x7c000001
    3118:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    311c:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
    3120:	5f657461 	svcpl	0x00657461
    3124:	636f7250 	cmnvs	pc, #80, 4
    3128:	00737365 	rsbseq	r7, r3, r5, ror #6
    312c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    3130:	50430065 	subpl	r0, r3, r5, rrx
    3134:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3138:	4d5f7373 	ldclmi	3, cr7, [pc, #-460]	; 2f74 <CPSR_IRQ_INHIBIT+0x2ef4>
    313c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    3140:	5f007265 	svcpl	0x00007265
    3144:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    3148:	6f725043 	svcvs	0x00725043
    314c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3150:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3154:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3158:	61483132 	cmpvs	r8, r2, lsr r1
    315c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3160:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    3164:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    3168:	5f6d6574 	svcpl	0x006d6574
    316c:	45495753 	strbmi	r5, [r9, #-1875]	; 0xfffff8ad
    3170:	534e3332 	movtpl	r3, #58162	; 0xe332
    3174:	465f4957 			; <UNDEFINED> instruction: 0x465f4957
    3178:	73656c69 	cmnvc	r5, #26880	; 0x6900
    317c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    3180:	65535f6d 	ldrbvs	r5, [r3, #-3949]	; 0xfffff093
    3184:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    3188:	6a6a6a65 	bvs	1a9db24 <_bss_end+0x1a8be74>
    318c:	54313152 	ldrtpl	r3, [r1], #-338	; 0xfffffeae
    3190:	5f495753 	svcpl	0x00495753
    3194:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    3198:	6f00746c 	svcvs	0x0000746c
    319c:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    31a0:	69665f64 	stmdbvs	r6!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    31a4:	0073656c 	rsbseq	r6, r3, ip, ror #10
    31a8:	55504354 	ldrbpl	r4, [r0, #-852]	; 0xfffffcac
    31ac:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    31b0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    31b4:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
    31b8:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    31bc:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    31c0:	685f7172 	ldmdavs	pc, {r1, r4, r5, r6, r8, ip, sp, lr}^	; <UNPREDICTABLE>
    31c4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    31c8:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    31cc:	455f5152 	ldrbmi	r5, [pc, #-338]	; 3082 <CPSR_IRQ_INHIBIT+0x3002>
    31d0:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    31d4:	00315f65 	eorseq	r5, r1, r5, ror #30
    31d8:	5f515249 	svcpl	0x00515249
    31dc:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    31e0:	325f656c 	subscc	r6, pc, #108, 10	; 0x1b000000
    31e4:	78614d00 	stmdavc	r1!, {r8, sl, fp, lr}^
    31e8:	6f72505f 	svcvs	0x0072505f
    31ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    31f0:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    31f4:	5f64656e 	svcpl	0x0064656e
    31f8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    31fc:	5a5f0073 	bpl	17c33d0 <_bss_end+0x17b1720>
    3200:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    3204:	636f7250 	cmnvs	pc, #80, 4
    3208:	5f737365 	svcpl	0x00737365
    320c:	616e614d 	cmnvs	lr, sp, asr #2
    3210:	31726567 	cmncc	r2, r7, ror #10
    3214:	6d6e5538 	cfstr64vs	mvdx5, [lr, #-224]!	; 0xffffff20
    3218:	465f7061 	ldrbmi	r7, [pc], -r1, rrx
    321c:	5f656c69 	svcpl	0x00656c69
    3220:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    3224:	45746e65 	ldrbmi	r6, [r4, #-3685]!	; 0xfffff19b
    3228:	4155006a 	cmpmi	r5, sl, rrx
    322c:	49005452 	stmdbmi	r0, {r1, r4, r6, sl, ip, lr}
    3230:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3234:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3238:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    323c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 3074 <CPSR_IRQ_INHIBIT+0x2ff4>
    3240:	5f72656c 	svcpl	0x0072656c
    3244:	00676552 	rsbeq	r6, r7, r2, asr r5
    3248:	5f746547 	svcpl	0x00746547
    324c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    3250:	5f746e65 	svcpl	0x00746e65
    3254:	636f7250 	cmnvs	pc, #80, 4
    3258:	00737365 	rsbseq	r7, r3, r5, ror #6
    325c:	5f70614d 	svcpl	0x0070614d
    3260:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3264:	5f6f545f 	svcpl	0x006f545f
    3268:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    326c:	00746e65 	rsbseq	r6, r4, r5, ror #28
    3270:	5f786469 	svcpl	0x00786469
    3274:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    3278:	6e614800 	cdpvs	8, 6, cr4, cr1, cr0, {0}
    327c:	5f656c64 	svcpl	0x00656c64
    3280:	636f7250 	cmnvs	pc, #80, 4
    3284:	5f737365 	svcpl	0x00737365
    3288:	00495753 	subeq	r5, r9, r3, asr r7
    328c:	656c6c49 	strbvs	r6, [ip, #-3145]!	; 0xfffff3b7
    3290:	5f6c6167 	svcpl	0x006c6167
    3294:	65636341 	strbvs	r6, [r3, #-833]!	; 0xfffffcbf
    3298:	315f7373 	cmpcc	pc, r3, ror r3	; <UNPREDICTABLE>
    329c:	6c6c4900 			; <UNDEFINED> instruction: 0x6c6c4900
    32a0:	6c616765 	stclvs	7, cr6, [r1], #-404	; 0xfffffe6c
    32a4:	6363415f 	cmnvs	r3, #-1073741801	; 0xc0000017
    32a8:	5f737365 	svcpl	0x00737365
    32ac:	52490032 	subpl	r0, r9, #50	; 0x32
    32b0:	61425f51 	cmpvs	r2, r1, asr pc
    32b4:	5f636973 	svcpl	0x00636973
    32b8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    32bc:	5f006563 	svcpl	0x00006563
    32c0:	5f495753 	svcpl	0x00495753
    32c4:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    32c8:	5200746c 	andpl	r7, r0, #108, 8	; 0x6c000000
    32cc:	616e6e75 	smcvs	59109	; 0xe6e5
    32d0:	00656c62 	rsbeq	r6, r5, r2, ror #24
    32d4:	7361544e 	cmnvc	r1, #1308622848	; 0x4e000000
    32d8:	74535f6b 	ldrbvc	r5, [r3], #-3947	; 0xfffff095
    32dc:	00657461 	rsbeq	r7, r5, r1, ror #8
    32e0:	746e496d 	strbtvc	r4, [lr], #-2413	; 0xfffff693
    32e4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    32e8:	525f7470 	subspl	r7, pc, #112, 8	; 0x70000000
    32ec:	00736765 	rsbseq	r6, r3, r5, ror #14
    32f0:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    32f4:	6f635f64 	svcvs	0x00635f64
    32f8:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    32fc:	5a5f0072 	bpl	17c34cc <_bss_end+0x17b181c>
    3300:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    3304:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3308:	70757272 	rsbsvc	r7, r5, r2, ror r2
    330c:	6f435f74 	svcvs	0x00435f74
    3310:	6f72746e 	svcvs	0x0072746e
    3314:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    3318:	69443131 	stmdbvs	r4, {r0, r4, r5, r8, ip, sp}^
    331c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    3320:	52495f65 	subpl	r5, r9, #404	; 0x194
    3324:	334e4551 	movtcc	r4, #58705	; 0xe551
    3328:	316c6168 	cmncc	ip, r8, ror #2
    332c:	51524930 	cmppl	r2, r0, lsr r9
    3330:	756f535f 	strbvc	r5, [pc, #-863]!	; 2fd9 <CPSR_IRQ_INHIBIT+0x2f59>
    3334:	45656372 	strbmi	r6, [r5, #-882]!	; 0xfffffc8e
    3338:	68637300 	stmdavs	r3!, {r8, r9, ip, sp, lr}^
    333c:	735f6465 	cmpvc	pc, #1694498816	; 0x65000000
    3340:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    3344:	72705f63 	rsbsvc	r5, r0, #396	; 0x18c
    3348:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    334c:	66007974 			; <UNDEFINED> instruction: 0x66007974
    3350:	5f747361 	svcpl	0x00747361
    3354:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    3358:	70757272 	rsbsvc	r7, r5, r2, ror r2
    335c:	61685f74 	smcvs	34292	; 0x85f4
    3360:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3364:	52490072 	subpl	r0, r9, #114	; 0x72
    3368:	61425f51 	cmpvs	r2, r1, asr pc
    336c:	5f636973 	svcpl	0x00636973
    3370:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    3374:	00676e69 	rsbeq	r6, r7, r9, ror #28
    3378:	61736944 	cmnvs	r3, r4, asr #18
    337c:	5f656c62 	svcpl	0x00656c62
    3380:	00515249 	subseq	r5, r1, r9, asr #4
    3384:	314e5a5f 	cmpcc	lr, pc, asr sl
    3388:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    338c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3390:	614d5f73 	hvcvs	54771	; 0xd5f3
    3394:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3398:	4d393172 	ldfmis	f3, [r9, #-456]!	; 0xfffffe38
    339c:	465f7061 	ldrbmi	r7, [pc], -r1, rrx
    33a0:	5f656c69 	svcpl	0x00656c69
    33a4:	435f6f54 	cmpmi	pc, #84, 30	; 0x150
    33a8:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    33ac:	5045746e 	subpl	r7, r5, lr, ror #8
    33b0:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    33b4:	7300656c 	movwvc	r6, #1388	; 0x56c
    33b8:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    33bc:	695f6563 	ldmdbvs	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    33c0:	746e6564 	strbtvc	r6, [lr], #-1380	; 0xfffffa9c
    33c4:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
    33c8:	4c6d0072 	stclmi	0, cr0, [sp], #-456	; 0xfffffe38
    33cc:	5f747361 	svcpl	0x00747361
    33d0:	00444950 	subeq	r4, r4, r0, asr r9
    33d4:	746e4943 	strbtvc	r4, [lr], #-2371	; 0xfffff6bd
    33d8:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    33dc:	435f7470 	cmpmi	pc, #112, 8	; 0x70000000
    33e0:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    33e4:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    33e8:	52490072 	subpl	r0, r9, #114	; 0x72
    33ec:	61425f51 	cmpvs	r2, r1, asr pc
    33f0:	5f636973 	svcpl	0x00636973
    33f4:	61736944 	cmnvs	r3, r4, asr #18
    33f8:	00656c62 	rsbeq	r6, r5, r2, ror #24
    33fc:	626d6f5a 	rsbvs	r6, sp, #360	; 0x168
    3400:	45006569 	strmi	r6, [r0, #-1385]	; 0xfffffa97
    3404:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    3408:	61425f65 	cmpvs	r2, r5, ror #30
    340c:	5f636973 	svcpl	0x00636973
    3410:	00515249 	subseq	r5, r1, r9, asr #4
    3414:	314e5a5f 	cmpcc	lr, pc, asr sl
    3418:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    341c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3420:	614d5f73 	hvcvs	54771	; 0xd5f3
    3424:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3428:	63533872 	cmpvs	r3, #7471104	; 0x720000
    342c:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    3430:	7645656c 	strbvc	r6, [r5], -ip, ror #10
    3434:	6f6f4400 	svcvs	0x006f4400
    3438:	6c656272 	sfmvs	f6, 2, [r5], #-456	; 0xfffffe38
    343c:	00305f6c 	eorseq	r5, r0, ip, ror #30
    3440:	726f6f44 	rsbvc	r6, pc, #68, 30	; 0x110
    3444:	6c6c6562 	cfstr64vs	mvdx6, [ip], #-392	; 0xfffffe78
    3448:	2f00315f 	svccs	0x0000315f
    344c:	2f746e6d 	svccs	0x00746e6d
    3450:	73552f63 	cmpvc	r5, #396	; 0x18c
    3454:	2f737265 	svccs	0x00737265
    3458:	6162754b 	cmnvs	r2, fp, asr #10
    345c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3460:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3464:	5a2f7374 	bpl	be023c <_bss_end+0xbce58c>
    3468:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 32dc <CPSR_IRQ_INHIBIT+0x325c>
    346c:	2f657461 	svccs	0x00657461
    3470:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3474:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3478:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    347c:	2f433249 	svccs	0x00433249
    3480:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3484:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    3488:	692f6372 	stmdbvs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
    348c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3490:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3494:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    3498:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 32d0 <CPSR_IRQ_INHIBIT+0x3250>
    349c:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
    34a0:	00707063 	rsbseq	r7, r0, r3, rrx
    34a4:	69636166 	stmdbvs	r3!, {r1, r2, r5, r6, r8, sp, lr}^
    34a8:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    34ac:	55504700 	ldrbpl	r4, [r0, #-1792]	; 0xfffff900
    34b0:	61485f30 	cmpvs	r8, r0, lsr pc
    34b4:	4e00746c 	cdpmi	4, 0, cr7, cr0, cr12, {3}
    34b8:	5f495753 	svcpl	0x00495753
    34bc:	69636146 	stmdbvs	r3!, {r1, r2, r6, r8, sp, lr}^
    34c0:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    34c4:	75436d00 	strbvc	r6, [r3, #-3328]	; 0xfffff300
    34c8:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    34cc:	61545f74 	cmpvs	r4, r4, ror pc
    34d0:	4e5f6b73 	vmovmi.s8	r6, d15[3]
    34d4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    34d8:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    34dc:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    34e0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    34e4:	5f747075 	svcpl	0x00747075
    34e8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    34ec:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    34f0:	36317265 	ldrtcc	r7, [r1], -r5, ror #4
    34f4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    34f8:	425f656c 	subsmi	r6, pc, #108, 10	; 0x1b000000
    34fc:	63697361 	cmnvs	r9, #-2080374783	; 0x84000001
    3500:	5152495f 	cmppl	r2, pc, asr r9
    3504:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    3508:	36316c61 	ldrtcc	r6, [r1], -r1, ror #24
    350c:	5f515249 	svcpl	0x00515249
    3510:	69736142 	ldmdbvs	r3!, {r1, r6, r8, sp, lr}^
    3514:	6f535f63 	svcvs	0x00535f63
    3518:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    351c:	5a5f0045 	bpl	17c3638 <_bss_end+0x17b1988>
    3520:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    3524:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3528:	70757272 	rsbsvc	r7, r5, r2, ror r2
    352c:	6f435f74 	svcvs	0x00435f74
    3530:	6f72746e 	svcvs	0x0072746e
    3534:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    3538:	6d453443 	cfstrdvs	mvd3, [r5, #-268]	; 0xfffffef4
    353c:	75706300 	ldrbvc	r6, [r0, #-768]!	; 0xfffffd00
    3540:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    3544:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    3548:	43324900 	teqmi	r2, #0, 18
    354c:	4950535f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    3550:	414c535f 	cmpmi	ip, pc, asr r3
    3554:	495f4556 	ldmdbmi	pc, {r1, r2, r4, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    3558:	0054494e 	subseq	r4, r4, lr, asr #18
    355c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    3560:	616e7265 	cmnvs	lr, r5, ror #4
    3564:	6f735f6c 	svcvs	0x00735f6c
    3568:	61777466 	cmnvs	r7, r6, ror #8
    356c:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    3570:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3574:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3578:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    357c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    3580:	73617400 	cmnvc	r1, #0, 8
    3584:	4946006b 	stmdbmi	r6, {r0, r1, r3, r5, r6}^
    3588:	6f435f51 	svcvs	0x00435f51
    358c:	6f72746e 	svcvs	0x0072746e
    3590:	5454006c 	ldrbpl	r0, [r4], #-108	; 0xffffff94
    3594:	5f6b7361 	svcpl	0x006b7361
    3598:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
    359c:	53007463 	movwpl	r7, #1123	; 0x463
    35a0:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    35a4:	00656c75 	rsbeq	r6, r5, r5, ror ip
    35a8:	314e5a5f 	cmpcc	lr, pc, asr sl
    35ac:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    35b0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    35b4:	614d5f73 	hvcvs	54771	; 0xd5f3
    35b8:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    35bc:	77533972 			; <UNDEFINED> instruction: 0x77533972
    35c0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    35c4:	456f545f 	strbmi	r5, [pc, #-1119]!	; 316d <CPSR_IRQ_INHIBIT+0x30ed>
    35c8:	43383150 	teqmi	r8, #80, 2
    35cc:	636f7250 	cmnvs	pc, #80, 4
    35d0:	5f737365 	svcpl	0x00737365
    35d4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    35d8:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 35e0 <CPSR_IRQ_INHIBIT+0x3560>
    35dc:	52490065 	subpl	r0, r9, #101	; 0x65
    35e0:	61425f51 	cmpvs	r2, r1, asr pc
    35e4:	5f636973 	svcpl	0x00636973
    35e8:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    35ec:	5f00656c 	svcpl	0x0000656c
    35f0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    35f4:	6f725043 	svcvs	0x00725043
    35f8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    35fc:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3600:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3604:	61483831 	cmpvs	r8, r1, lsr r8
    3608:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    360c:	6f72505f 	svcvs	0x0072505f
    3610:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3614:	4957535f 	ldmdbmi	r7, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    3618:	4e303245 	cdpmi	2, 3, cr3, cr0, cr5, {2}
    361c:	5f495753 	svcpl	0x00495753
    3620:	636f7250 	cmnvs	pc, #80, 4
    3624:	5f737365 	svcpl	0x00737365
    3628:	76726553 			; <UNDEFINED> instruction: 0x76726553
    362c:	6a656369 	bvs	195c3d8 <_bss_end+0x194a728>
    3630:	31526a6a 	cmpcc	r2, sl, ror #20
    3634:	57535431 	smmlarpl	r3, r1, r4, r5
    3638:	65525f49 	ldrbvs	r5, [r2, #-3913]	; 0xfffff0b7
    363c:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
    3640:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
    3644:	5f657461 	svcpl	0x00657461
    3648:	6e69614d 	powvsem	f6, f1, #5.0
    364c:	6f72505f 	svcvs	0x0072505f
    3650:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3654:	69775300 	ldmdbvs	r7!, {r8, r9, ip, lr}^
    3658:	5f686374 	svcpl	0x00686374
    365c:	4e006f54 	mcrmi	15, 0, r6, cr0, cr4, {2}
    3660:	5f495753 	svcpl	0x00495753
    3664:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3668:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    366c:	535f6d65 	cmppl	pc, #6464	; 0x1940
    3670:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    3674:	49006563 	stmdbmi	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
    3678:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    367c:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    3680:	315f676e 	cmpcc	pc, lr, ror #14
    3684:	51524900 	cmppl	r2, r0, lsl #18
    3688:	756f535f 	strbvc	r5, [pc, #-863]!	; 3331 <CPSR_IRQ_INHIBIT+0x32b1>
    368c:	00656372 	rsbeq	r6, r5, r2, ror r3
    3690:	61766e49 	cmnvs	r6, r9, asr #28
    3694:	5f64696c 	svcpl	0x0064696c
    3698:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    369c:	4900656c 	stmdbmi	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    36a0:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    36a4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    36a8:	325f676e 	subscc	r6, pc, #28835840	; 0x1b80000
    36ac:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    36b0:	00305f4f 	eorseq	r5, r0, pc, asr #30
    36b4:	4f495047 	svcmi	0x00495047
    36b8:	4700315f 	smlsdmi	r0, pc, r1, r3	; <UNPREDICTABLE>
    36bc:	5f4f4950 	svcpl	0x004f4950
    36c0:	50470032 	subpl	r0, r7, r2, lsr r0
    36c4:	335f4f49 	cmpcc	pc, #292	; 0x124
    36c8:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    36cc:	4449505f 	strbmi	r5, [r9], #-95	; 0xffffffa1
    36d0:	73694400 	cmnvc	r9, #0, 8
    36d4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    36d8:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    36dc:	495f6369 	ldmdbmi	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    36e0:	5f005152 	svcpl	0x00005152
    36e4:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    36e8:	6f725043 	svcvs	0x00725043
    36ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    36f0:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    36f4:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    36f8:	76453443 	strbvc	r3, [r5], -r3, asr #8
    36fc:	756f7300 	strbvc	r7, [pc, #-768]!	; 3404 <CPSR_IRQ_INHIBIT+0x3384>
    3700:	5f656372 	svcpl	0x00656372
    3704:	00786469 	rsbseq	r6, r8, r9, ror #8
    3708:	5f515249 	svcpl	0x00515249
    370c:	61736944 	cmnvs	r3, r4, asr #18
    3710:	5f656c62 	svcpl	0x00656c62
    3714:	52490031 	subpl	r0, r9, #49	; 0x31
    3718:	69445f51 	stmdbvs	r4, {r0, r4, r6, r8, r9, sl, fp, ip, lr}^
    371c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    3720:	00325f65 	eorseq	r5, r2, r5, ror #30
    3724:	5f415750 	svcpl	0x00415750
    3728:	57500030 	smmlarpl	r0, r0, r0, r0
    372c:	00315f41 	eorseq	r5, r1, r1, asr #30
    3730:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3734:	552f632f 	strpl	r6, [pc, #-815]!	; 340d <CPSR_IRQ_INHIBIT+0x338d>
    3738:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    373c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3740:	6f442f61 	svcvs	0x00442f61
    3744:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3748:	2f73746e 	svccs	0x0073746e
    374c:	6f72655a 	svcvs	0x0072655a
    3750:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3754:	6178652f 	cmnvs	r8, pc, lsr #10
    3758:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    375c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3760:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3764:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3768:	2f6c656e 	svccs	0x006c656e
    376c:	2f637273 	svccs	0x00637273
    3770:	6e69616d 	powvsez	f6, f1, #5.0
    3774:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    3778:	67615000 	strbvs	r5, [r1, -r0]!
    377c:	756f4365 	strbvc	r4, [pc, #-869]!	; 341f <CPSR_IRQ_INHIBIT+0x339f>
    3780:	5000746e 	andpl	r7, r0, lr, ror #8
    3784:	6e696761 	cdpvs	7, 6, cr6, cr9, cr1, {3}
    3788:	6d654d67 	stclvs	13, cr4, [r5, #-412]!	; 0xfffffe64
    378c:	5379726f 	cmnpl	r9, #-268435450	; 0xf0000006
    3790:	00657a69 	rsbeq	r7, r5, r9, ror #20
    3794:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    3798:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    379c:	656b5f00 	strbvs	r5, [fp, #-3840]!	; 0xfffff100
    37a0:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    37a4:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    37a8:	6f4c006e 	svcvs	0x004c006e
    37ac:	6d654d77 	stclvs	13, cr4, [r5, #-476]!	; 0xfffffe24
    37b0:	0079726f 	rsbseq	r7, r9, pc, ror #4
    37b4:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    37b8:	6f6d654d 	svcvs	0x006d654d
    37bc:	68007972 	stmdavs	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    37c0:	00327264 	eorseq	r7, r2, r4, ror #4
    37c4:	6f6c6c41 	svcvs	0x006c6c41
    37c8:	61505f63 	cmpvs	r0, r3, ror #30
    37cc:	46006567 	strmi	r6, [r0], -r7, ror #10
    37d0:	5f656572 	svcpl	0x00656572
    37d4:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    37d8:	72614d00 	rsbvc	r4, r1, #0, 26
    37dc:	506d006b 	rsbpl	r0, sp, fp, rrx
    37e0:	5f656761 	svcpl	0x00656761
    37e4:	6d746942 			; <UNDEFINED> instruction: 0x6d746942
    37e8:	5f007061 	svcpl	0x00007061
    37ec:	424f4c47 	submi	r4, pc, #18176	; 0x4700
    37f0:	5f5f4c41 	svcpl	0x005f4c41
    37f4:	5f627573 	svcpl	0x00627573
    37f8:	4b735f49 	blmi	1cdb524 <_bss_end+0x1cc9874>
    37fc:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3800:	6d654d6c 	stclvs	13, cr4, [r5, #-432]!	; 0xfffffe50
    3804:	75686300 	strbvc	r6, [r8, #-768]!	; 0xfffffd00
    3808:	5f006b6e 	svcpl	0x00006b6e
    380c:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    3810:	67615043 	strbvs	r5, [r1, -r3, asr #32]!
    3814:	614d5f65 	cmpvs	sp, r5, ror #30
    3818:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    381c:	41303172 	teqmi	r0, r2, ror r1
    3820:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    3824:	6761505f 			; <UNDEFINED> instruction: 0x6761505f
    3828:	00764565 	rsbseq	r4, r6, r5, ror #10
    382c:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    3830:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    3834:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3838:	6165485f 	cmnvs	r5, pc, asr r8
    383c:	614d5f70 	hvcvs	54768	; 0xd5f0
    3840:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3844:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
    3848:	5a5f0076 	bpl	17c3a28 <_bss_end+0x17b1d78>
    384c:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    3850:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    3854:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3858:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    385c:	72614d34 	rsbvc	r4, r1, #52, 26	; 0xd00
    3860:	626a456b 	rsbvs	r4, sl, #448790528	; 0x1ac00000
    3864:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3868:	50433331 	subpl	r3, r3, r1, lsr r3
    386c:	5f656761 	svcpl	0x00656761
    3870:	616e614d 	cmnvs	lr, sp, asr #2
    3874:	43726567 	cmnmi	r2, #432013312	; 0x19c00000
    3878:	00764534 	rsbseq	r4, r6, r4, lsr r5
    387c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3880:	552f632f 	strpl	r6, [pc, #-815]!	; 3559 <CPSR_IRQ_INHIBIT+0x34d9>
    3884:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3888:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    388c:	6f442f61 	svcvs	0x00442f61
    3890:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3894:	2f73746e 	svccs	0x0073746e
    3898:	6f72655a 	svcvs	0x0072655a
    389c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    38a0:	6178652f 	cmnvs	r8, pc, lsr #10
    38a4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    38a8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    38ac:	4332492d 	teqmi	r2, #737280	; 0xb4000
    38b0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    38b4:	2f6c656e 	svccs	0x006c656e
    38b8:	2f637273 	svccs	0x00637273
    38bc:	6f6d656d 	svcvs	0x006d656d
    38c0:	6b2f7972 	blvs	be1e90 <_bss_end+0xbd01e0>
    38c4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    38c8:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    38cc:	632e7061 			; <UNDEFINED> instruction: 0x632e7061
    38d0:	5f007070 	svcpl	0x00007070
    38d4:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    38d8:	67615043 	strbvs	r5, [r1, -r3, asr #32]!
    38dc:	614d5f65 	cmpvs	sp, r5, ror #30
    38e0:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    38e4:	72463972 	subvc	r3, r6, #1867776	; 0x1c8000
    38e8:	505f6565 	subspl	r6, pc, r5, ror #10
    38ec:	45656761 	strbmi	r6, [r5, #-1889]!	; 0xfffff89f
    38f0:	5043006a 	subpl	r0, r3, sl, rrx
    38f4:	5f656761 	svcpl	0x00656761
    38f8:	616e614d 	cmnvs	lr, sp, asr #2
    38fc:	00726567 	rsbseq	r6, r2, r7, ror #10
    3900:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3904:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    3908:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    390c:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    3910:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    3914:	5f495f62 	svcpl	0x00495f62
    3918:	67615073 			; <UNDEFINED> instruction: 0x67615073
    391c:	614d5f65 	cmpvs	sp, r5, ror #30
    3920:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3924:	6d2f0072 	stcvs	0, cr0, [pc, #-456]!	; 3764 <CPSR_IRQ_INHIBIT+0x36e4>
    3928:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    392c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3930:	4b2f7372 	blmi	be0700 <_bss_end+0xbcea50>
    3934:	2f616275 	svccs	0x00616275
    3938:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    393c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3940:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3944:	614d6f72 	hvcvs	55026	; 0xd6f2
    3948:	652f6574 	strvs	r6, [pc, #-1396]!	; 33dc <CPSR_IRQ_INHIBIT+0x335c>
    394c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3950:	2f73656c 	svccs	0x0073656c
    3954:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3958:	6b2f4332 	blvs	bd4628 <_bss_end+0xbc2978>
    395c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3960:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3964:	656d2f63 	strbvs	r2, [sp, #-3939]!	; 0xfffff09d
    3968:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    396c:	6761702f 	strbvs	r7, [r1, -pc, lsr #32]!
    3970:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    3974:	75007070 	strvc	r7, [r0, #-112]	; 0xffffff90
    3978:	00646573 	rsbeq	r6, r4, r3, ror r5
    397c:	314e5a5f 	cmpcc	lr, pc, asr sl
    3980:	61504333 	cmpvs	r0, r3, lsr r3
    3984:	4d5f6567 	cfldr64mi	mvdx6, [pc, #-412]	; 37f0 <CPSR_IRQ_INHIBIT+0x3770>
    3988:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    398c:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    3990:	66007645 	strvs	r7, [r0], -r5, asr #12
    3994:	70636e75 	rsbvc	r6, r3, r5, ror lr
    3998:	69007274 	stmdbvs	r0, {r2, r4, r5, r6, r9, ip, sp, lr}
    399c:	69665f73 	stmdbvs	r6!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    39a0:	5f747372 	svcpl	0x00747372
    39a4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    39a8:	6c6c4100 	stfvse	f4, [ip], #-0
    39ac:	543c636f 	ldrtpl	r6, [ip], #-879	; 0xfffffc91
    39b0:	6b736154 	blvs	1cdbf08 <_bss_end+0x1cca258>
    39b4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    39b8:	3e746375 	mrccc	3, 3, r6, cr4, cr5, {3}
    39bc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    39c0:	50433631 	subpl	r3, r3, r1, lsr r6
    39c4:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    39c8:	4d5f7373 	ldclmi	3, cr7, [pc, #-460]	; 3804 <CPSR_IRQ_INHIBIT+0x3784>
    39cc:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    39d0:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    39d4:	5f007645 	svcpl	0x00007645
    39d8:	30324e5a 	eorscc	r4, r2, sl, asr lr
    39dc:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    39e0:	5f6c656e 	svcpl	0x006c656e
    39e4:	70616548 	rsbvc	r6, r1, r8, asr #10
    39e8:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    39ec:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    39f0:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    39f4:	3149636f 	cmpcc	r9, pc, ror #6
    39f8:	72504338 	subsvc	r4, r0, #56, 6	; 0xe0000000
    39fc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3a00:	694c5f73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3a04:	4e5f7473 	mrcmi	4, 2, r7, cr15, cr3, {3}
    3a08:	4565646f 	strbmi	r6, [r5, #-1135]!	; 0xfffffb91
    3a0c:	5f545045 	svcpl	0x00545045
    3a10:	475f0076 			; <UNDEFINED> instruction: 0x475f0076
    3a14:	41424f4c 	cmpmi	r2, ip, asr #30
    3a18:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
    3a1c:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    3a20:	7250735f 	subsvc	r7, r0, #2080374785	; 0x7c000001
    3a24:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3a28:	72674d73 	rsbvc	r4, r7, #7360	; 0x1cc0
    3a2c:	72617400 	rsbvc	r7, r1, #0, 8
    3a30:	00746567 	rsbseq	r6, r4, r7, ror #10
    3a34:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3a38:	552f632f 	strpl	r6, [pc, #-815]!	; 3711 <CPSR_IRQ_INHIBIT+0x3691>
    3a3c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3a40:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3a44:	6f442f61 	svcvs	0x00442f61
    3a48:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3a4c:	2f73746e 	svccs	0x0073746e
    3a50:	6f72655a 	svcvs	0x0072655a
    3a54:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3a58:	6178652f 	cmnvs	r8, pc, lsr #10
    3a5c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3a60:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3a64:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3a68:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3a6c:	2f6c656e 	svccs	0x006c656e
    3a70:	2f637273 	svccs	0x00637273
    3a74:	636f7270 	cmnvs	pc, #112, 4
    3a78:	2f737365 	svccs	0x00737365
    3a7c:	636f7270 	cmnvs	pc, #112, 4
    3a80:	5f737365 	svcpl	0x00737365
    3a84:	616e616d 	cmnvs	lr, sp, ror #2
    3a88:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    3a8c:	00707063 	rsbseq	r7, r0, r3, rrx
    3a90:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    3a94:	00746e65 	rsbseq	r6, r4, r5, ror #28
    3a98:	6f6c6c41 	svcvs	0x006c6c41
    3a9c:	50433c63 	subpl	r3, r3, r3, ror #24
    3aa0:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3aa4:	4c5f7373 	mrrcmi	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
    3aa8:	5f747369 	svcpl	0x00747369
    3aac:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    3ab0:	7270003e 	rsbsvc	r0, r0, #62	; 0x3e
    3ab4:	6f6e636f 	svcvs	0x006e636f
    3ab8:	5f006564 	svcpl	0x00006564
    3abc:	30324e5a 	eorscc	r4, r2, sl, asr lr
    3ac0:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    3ac4:	5f6c656e 	svcpl	0x006c656e
    3ac8:	70616548 	rsbvc	r6, r1, r8, asr #10
    3acc:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3ad0:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3ad4:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    3ad8:	3149636f 	cmpcc	r9, pc, ror #6
    3adc:	61545432 	cmpvs	r4, r2, lsr r4
    3ae0:	535f6b73 	cmppl	pc, #117760	; 0x1cc00
    3ae4:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    3ae8:	50454574 	subpl	r4, r5, r4, ror r5
    3aec:	00765f54 	rsbseq	r5, r6, r4, asr pc
    3af0:	5f637673 	svcpl	0x00637673
    3af4:	00786469 	rsbseq	r6, r8, r9, ror #8
    3af8:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3afc:	552f632f 	strpl	r6, [pc, #-815]!	; 37d5 <CPSR_IRQ_INHIBIT+0x3755>
    3b00:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3b04:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3b08:	6f442f61 	svcvs	0x00442f61
    3b0c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3b10:	2f73746e 	svccs	0x0073746e
    3b14:	6f72655a 	svcvs	0x0072655a
    3b18:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3b1c:	6178652f 	cmnvs	r8, pc, lsr #10
    3b20:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3b24:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3b28:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3b2c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3b30:	2f6c656e 	svccs	0x006c656e
    3b34:	2f637273 	svccs	0x00637273
    3b38:	636f7270 	cmnvs	pc, #112, 4
    3b3c:	2f737365 	svccs	0x00737365
    3b40:	74697773 	strbtvc	r7, [r9], #-1907	; 0xfffff88d
    3b44:	732e6863 			; <UNDEFINED> instruction: 0x732e6863
    3b48:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    3b4c:	20534120 	subscs	r4, r3, r0, lsr #2
    3b50:	38332e32 	ldmdacc	r3!, {r1, r4, r5, r9, sl, fp, sp}
    3b54:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3b58:	2f632f74 	svccs	0x00632f74
    3b5c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3b60:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3b64:	442f6162 	strtmi	r6, [pc], #-354	; 3b6c <CPSR_IRQ_INHIBIT+0x3aec>
    3b68:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3b6c:	73746e65 	cmnvc	r4, #1616	; 0x650
    3b70:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3b74:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3b78:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3b7c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3b80:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3b84:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3b88:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3b8c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3b90:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3b94:	6174732f 	cmnvs	r4, pc, lsr #6
    3b98:	732e7472 			; <UNDEFINED> instruction: 0x732e7472
    3b9c:	6f746300 	svcvs	0x00746300
    3ba0:	74705f72 	ldrbtvc	r5, [r0], #-3954	; 0xfffff08e
    3ba4:	625f0072 	subsvs	r0, pc, #114	; 0x72
    3ba8:	735f7373 	cmpvc	pc, #-872415231	; 0xcc000001
    3bac:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3bb0:	435f5f00 	cmpmi	pc, #0, 30
    3bb4:	5f524f54 	svcpl	0x00524f54
    3bb8:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    3bbc:	5f005f5f 	svcpl	0x00005f5f
    3bc0:	4f54445f 	svcmi	0x0054445f
    3bc4:	4e455f52 	mcrmi	15, 2, r5, cr5, cr2, {2}
    3bc8:	005f5f44 	subseq	r5, pc, r4, asr #30
    3bcc:	7070635f 	rsbsvc	r6, r0, pc, asr r3
    3bd0:	7568735f 	strbvc	r7, [r8, #-863]!	; 0xfffffca1
    3bd4:	776f6474 			; <UNDEFINED> instruction: 0x776f6474
    3bd8:	625f006e 	subsvs	r0, pc, #110	; 0x6e
    3bdc:	655f7373 	ldrbvs	r7, [pc, #-883]	; 3871 <CPSR_IRQ_INHIBIT+0x37f1>
    3be0:	5f00646e 	svcpl	0x0000646e
    3be4:	4f54445f 	svcmi	0x0054445f
    3be8:	494c5f52 	stmdbmi	ip, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
    3bec:	5f5f5453 	svcpl	0x005f5453
    3bf0:	6f746400 	svcvs	0x00746400
    3bf4:	74705f72 	ldrbtvc	r5, [r0], #-3954	; 0xfffff08e
    3bf8:	6d2f0072 	stcvs	0, cr0, [pc, #-456]!	; 3a38 <CPSR_IRQ_INHIBIT+0x39b8>
    3bfc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3c00:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3c04:	4b2f7372 	blmi	be09d4 <_bss_end+0xbced24>
    3c08:	2f616275 	svccs	0x00616275
    3c0c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3c10:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3c14:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3c18:	614d6f72 	hvcvs	55026	; 0xd6f2
    3c1c:	652f6574 	strvs	r6, [pc, #-1396]!	; 36b0 <CPSR_IRQ_INHIBIT+0x3630>
    3c20:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3c24:	2f73656c 	svccs	0x0073656c
    3c28:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3c2c:	6b2f4332 	blvs	bd48fc <_bss_end+0xbc2c4c>
    3c30:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3c34:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3c38:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    3c3c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    3c40:	70632e70 	rsbvc	r2, r3, r0, ror lr
    3c44:	5f5f0070 	svcpl	0x005f0070
    3c48:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
    3c4c:	444e455f 	strbmi	r4, [lr], #-1375	; 0xfffffaa1
    3c50:	5f005f5f 	svcpl	0x00005f5f
    3c54:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
    3c58:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    3c5c:	635f0070 	cmpvs	pc, #112	; 0x70
    3c60:	735f7070 	cmpvc	pc, #112	; 0x70
    3c64:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3c68:	66007075 			; <UNDEFINED> instruction: 0x66007075
    3c6c:	7274706e 	rsbsvc	r7, r4, #110	; 0x6e
    3c70:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3c74:	4f433331 	svcmi	0x00433331
    3c78:	5f44454c 	svcpl	0x0044454c
    3c7c:	70736944 	rsbsvc	r6, r3, r4, asr #18
    3c80:	3979616c 	ldmdbcc	r9!, {r2, r3, r5, r6, r8, sp, lr}^
    3c84:	5f746553 	svcpl	0x00746553
    3c88:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
    3c8c:	7474456c 	ldrbtvc	r4, [r4], #-1388	; 0xfffffa94
    3c90:	6e720062 	cdpvs	0, 7, cr0, cr2, cr2, {3}
    3c94:	6d006664 	stcvs	6, cr6, [r0, #-400]	; 0xfffffe70
    3c98:	61737365 	cmnvs	r3, r5, ror #6
    3c9c:	00736567 	rsbseq	r6, r3, r7, ror #10
    3ca0:	626d756e 	rsbvs	r7, sp, #461373440	; 0x1b800000
    3ca4:	5f006675 	svcpl	0x00006675
    3ca8:	7250395a 	subsvc	r3, r0, #1474560	; 0x168000
    3cac:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3cb0:	76335f73 	shsub16vc	r5, r3, r3
    3cb4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3cb8:	2f632f74 	svccs	0x00632f74
    3cbc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3cc0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3cc4:	442f6162 	strtmi	r6, [pc], #-354	; 3ccc <CPSR_IRQ_INHIBIT+0x3c4c>
    3cc8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3ccc:	73746e65 	cmnvc	r4, #1616	; 0x650
    3cd0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3cd4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3cd8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3cdc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3ce0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3ce4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3ce8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3cec:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3cf0:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3cf4:	7365742f 	cmnvc	r5, #788529152	; 0x2f000000
    3cf8:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    3cfc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3d00:	2e736573 	mrccs	5, 3, r6, cr3, cr3, {3}
    3d04:	00707063 	rsbseq	r7, r0, r3, rrx
    3d08:	314e5a5f 	cmpcc	lr, pc, asr sl
    3d0c:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    3d10:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3d18 <CPSR_IRQ_INHIBIT+0x3c98>
    3d14:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3d18:	50387961 	eorspl	r7, r8, r1, ror #18
    3d1c:	435f7475 	cmpmi	pc, #1962934272	; 0x75000000
    3d20:	45726168 	ldrbmi	r6, [r2, #-360]!	; 0xfffffe98
    3d24:	00637474 	rsbeq	r7, r3, r4, ror r4
    3d28:	4c4f437e 	mcrrmi	3, 7, r4, pc, cr14
    3d2c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3d34 <CPSR_IRQ_INHIBIT+0x3cb4>
    3d30:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3d34:	5f007961 	svcpl	0x00007961
    3d38:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    3d3c:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    3d40:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    3d44:	616c7073 	smcvs	50947	; 0xc703
    3d48:	6c433579 	cfstr64vs	mvdx3, [r3], {121}	; 0x79
    3d4c:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0xfffffe9b
    3d50:	72740062 	rsbsvc	r0, r4, #98	; 0x62
    3d54:	665f676e 	ldrbvs	r6, [pc], -lr, ror #14
    3d58:	00656c69 	rsbeq	r6, r5, r9, ror #24
    3d5c:	4b4e5a5f 	blmi	139a6e0 <_bss_end+0x1388a30>
    3d60:	4f433331 	svcmi	0x00433331
    3d64:	5f44454c 	svcpl	0x0044454c
    3d68:	70736944 	rsbsvc	r6, r3, r4, asr #18
    3d6c:	3979616c 	ldmdbcc	r9!, {r2, r3, r5, r6, r8, sp, lr}^
    3d70:	4f5f7349 	svcmi	0x005f7349
    3d74:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    3d78:	00764564 	rsbseq	r4, r6, r4, ror #10
    3d7c:	636f7250 	cmnvs	pc, #80, 4
    3d80:	5f737365 	svcpl	0x00737365
    3d84:	486d0036 	stmdami	sp!, {r1, r2, r4, r5}^
    3d88:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    3d8c:	5a5f0065 	bpl	17c3f28 <_bss_end+0x17b2278>
    3d90:	6f725039 	svcvs	0x00725039
    3d94:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3d98:	0076365f 	rsbseq	r3, r6, pc, asr r6
    3d9c:	50395a5f 	eorspl	r5, r9, pc, asr sl
    3da0:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3da4:	345f7373 	ldrbcc	r7, [pc], #-883	; 3dac <CPSR_IRQ_INHIBIT+0x3d2c>
    3da8:	69640076 	stmdbvs	r4!, {r1, r2, r4, r5, r6}^
    3dac:	6d007073 	stcvs	0, cr7, [r0, #-460]	; 0xfffffe34
    3db0:	61737365 	cmnvs	r3, r5, ror #6
    3db4:	5f006567 	svcpl	0x00006567
    3db8:	7250395a 	subsvc	r3, r0, #1474560	; 0x168000
    3dbc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3dc0:	76315f73 	shsub16vc	r5, r1, r3
    3dc4:	6f725000 	svcvs	0x00725000
    3dc8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3dcc:	5000315f 	andpl	r3, r0, pc, asr r1
    3dd0:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3dd4:	325f7373 	subscc	r7, pc, #-872415231	; 0xcc000001
    3dd8:	6f725000 	svcvs	0x00725000
    3ddc:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3de0:	5000335f 	andpl	r3, r0, pc, asr r3
    3de4:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3de8:	355f7373 	ldrbcc	r7, [pc, #-883]	; 3a7d <CPSR_IRQ_INHIBIT+0x39fd>
    3dec:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3df0:	4f433331 	svcmi	0x00433331
    3df4:	5f44454c 	svcpl	0x0044454c
    3df8:	70736944 	rsbsvc	r6, r3, r4, asr #18
    3dfc:	3179616c 	cmncc	r9, ip, ror #2
    3e00:	74755030 	ldrbtvc	r5, [r5], #-48	; 0xffffffd0
    3e04:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    3e08:	45676e69 	strbmi	r6, [r7, #-3689]!	; 0xfffff197
    3e0c:	4b507474 	blmi	1420fe4 <_bss_end+0x140f334>
    3e10:	5a5f0063 	bpl	17c3fa4 <_bss_end+0x17b22f4>
    3e14:	6f725039 	svcvs	0x00725039
    3e18:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3e1c:	0076355f 	rsbseq	r3, r6, pc, asr r5
    3e20:	314e5a5f 	cmpcc	lr, pc, asr sl
    3e24:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    3e28:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3e30 <CPSR_IRQ_INHIBIT+0x3db0>
    3e2c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3e30:	46347961 	ldrtmi	r7, [r4], -r1, ror #18
    3e34:	4570696c 	ldrbmi	r6, [r0, #-2412]!	; 0xfffff694
    3e38:	64720076 	ldrbtvs	r0, [r2], #-118	; 0xffffff8a
    3e3c:	00667562 	rsbeq	r7, r6, r2, ror #10
    3e40:	5f747550 	svcpl	0x00747550
    3e44:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    3e48:	5f00676e 	svcpl	0x0000676e
    3e4c:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    3e50:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    3e54:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    3e58:	616c7073 	smcvs	50947	; 0xc703
    3e5c:	45344479 	ldrmi	r4, [r4, #-1145]!	; 0xfffffb87
    3e60:	5a5f0076 	bpl	17c4040 <_bss_end+0x17b2390>
    3e64:	6f725039 	svcvs	0x00725039
    3e68:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3e6c:	0076325f 	rsbseq	r3, r6, pc, asr r2
    3e70:	5f747550 	svcpl	0x00747550
    3e74:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    3e78:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3e7c:	4f433331 	svcmi	0x00433331
    3e80:	5f44454c 	svcpl	0x0044454c
    3e84:	70736944 	rsbsvc	r6, r3, r4, asr #18
    3e88:	4379616c 	cmnmi	r9, #108, 2
    3e8c:	4b504534 	blmi	1415364 <_bss_end+0x14036b4>
    3e90:	72500063 	subsvc	r0, r0, #99	; 0x63
    3e94:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3e98:	00345f73 	eorseq	r5, r4, r3, ror pc
    3e9c:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
    3ea0:	365a5f00 	ldrbcc	r5, [sl], -r0, lsl #30
    3ea4:	70746567 	rsbsvc	r6, r4, r7, ror #10
    3ea8:	00766469 	rsbseq	r6, r6, r9, ror #8
    3eac:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    3eb0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    3eb4:	355a5f00 	ldrbcc	r5, [sl, #-3840]	; 0xfffff100
    3eb8:	74636f69 	strbtvc	r6, [r3], #-3945	; 0xfffff097
    3ebc:	36316a6c 	ldrtcc	r6, [r1], -ip, ror #20
    3ec0:	434f494e 	movtmi	r4, #63822	; 0xf94e
    3ec4:	4f5f6c74 	svcmi	0x005f6c74
    3ec8:	61726570 	cmnvs	r2, r0, ror r5
    3ecc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3ed0:	5f007650 	svcpl	0x00007650
    3ed4:	706f345a 	rsbvc	r3, pc, sl, asr r4	; <UNPREDICTABLE>
    3ed8:	4b506e65 	blmi	141f874 <_bss_end+0x140dbc4>
    3edc:	4e353163 	rsfmisz	f3, f5, f3
    3ee0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3ee4:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    3ee8:	6f4d5f6e 	svcvs	0x004d5f6e
    3eec:	5f006564 	svcpl	0x00006564
    3ef0:	7277355a 	rsbsvc	r3, r7, #377487360	; 0x16800000
    3ef4:	6a657469 	bvs	19610a0 <_bss_end+0x194f3f0>
    3ef8:	6a634b50 	bvs	18d6c40 <_bss_end+0x18c4f90>
    3efc:	72617000 	rsbvc	r7, r1, #0
    3f00:	5f006d61 	svcpl	0x00006d61
    3f04:	6c63355a 	cfstr64vs	mvdx3, [r3], #-360	; 0xfffffe98
    3f08:	6a65736f 	bvs	1960ccc <_bss_end+0x194f01c>
    3f0c:	636f6900 	cmnvs	pc, #0, 18
    3f10:	72006c74 	andvc	r6, r0, #116, 24	; 0x7400
    3f14:	6f637465 	svcvs	0x00637465
    3f18:	5f006564 	svcpl	0x00006564
    3f1c:	6572345a 	ldrbvs	r3, [r2, #-1114]!	; 0xfffffba6
    3f20:	506a6461 	rsbpl	r6, sl, r1, ror #8
    3f24:	72006a63 	andvc	r6, r0, #405504	; 0x63000
    3f28:	6d756e64 	ldclvs	14, cr6, [r5, #-400]!	; 0xfffffe70
    3f2c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3f30:	2f632f74 	svccs	0x00632f74
    3f34:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3f38:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3f3c:	442f6162 	strtmi	r6, [pc], #-354	; 3f44 <CPSR_IRQ_INHIBIT+0x3ec4>
    3f40:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3f44:	73746e65 	cmnvc	r4, #1616	; 0x650
    3f48:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3f4c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3f50:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3f54:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3f58:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3f5c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3f60:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    3f64:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    3f68:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3f6c:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    3f70:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    3f74:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    3f78:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
    3f7c:	00646970 	rsbeq	r6, r4, r0, ror r9
    3f80:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    3f84:	6f697461 	svcvs	0x00697461
    3f88:	7277006e 	rsbsvc	r0, r7, #110	; 0x6e
    3f8c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    3f90:	736f6c63 	cmnvc	pc, #25344	; 0x6300
    3f94:	65640065 	strbvs	r0, [r4, #-101]!	; 0xffffff9b
    3f98:	62007473 	andvs	r7, r0, #1929379840	; 0x73000000
    3f9c:	6f72657a 	svcvs	0x0072657a
    3fa0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3fa4:	2f632f74 	svccs	0x00632f74
    3fa8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3fac:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3fb0:	442f6162 	strtmi	r6, [pc], #-354	; 3fb8 <CPSR_IRQ_INHIBIT+0x3f38>
    3fb4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3fb8:	73746e65 	cmnvc	r4, #1616	; 0x650
    3fbc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3fc0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3fc4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3fc8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3fcc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3fd0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3fd4:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    3fd8:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    3fdc:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3fe0:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    3fe4:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    3fe8:	632e676e 			; <UNDEFINED> instruction: 0x632e676e
    3fec:	5f007070 	svcpl	0x00007070
    3ff0:	7a62355a 	bvc	1891560 <_bss_end+0x187f8b0>
    3ff4:	506f7265 	rsbpl	r7, pc, r5, ror #4
    3ff8:	5f006976 	svcpl	0x00006976
    3ffc:	7461345a 	strbtvc	r3, [r1], #-1114	; 0xfffffba6
    4000:	4b50696f 	blmi	141e5c4 <_bss_end+0x140c914>
    4004:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
    4008:	7473646d 	ldrbtvc	r6, [r3], #-1133	; 0xfffffb93
    400c:	365a5f00 	ldrbcc	r5, [sl], -r0, lsl #30
    4010:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
    4014:	4b507970 	blmi	14225dc <_bss_end+0x141092c>
    4018:	69765076 	ldmdbvs	r6!, {r1, r2, r4, r5, r6, ip, lr}^
    401c:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    4020:	00797063 	rsbseq	r7, r9, r3, rrx
    4024:	6c727473 	cfldrdvs	mvd7, [r2], #-460	; 0xfffffe34
    4028:	5f006e65 	svcpl	0x00006e65
    402c:	7473375a 	ldrbtvc	r3, [r3], #-1882	; 0xfffff8a6
    4030:	6d636e72 	stclvs	14, cr6, [r3, #-456]!	; 0xfffffe38
    4034:	634b5070 	movtvs	r5, #45168	; 0xb070
    4038:	695f3053 	ldmdbvs	pc, {r0, r1, r4, r6, ip, sp}^	; <UNPREDICTABLE>
    403c:	365a5f00 	ldrbcc	r5, [sl], -r0, lsl #30
    4040:	6c727473 	cfldrdvs	mvd7, [r2], #-460	; 0xfffffe34
    4044:	4b506e65 	blmi	141f9e0 <_bss_end+0x140dd30>
    4048:	74610063 	strbtvc	r0, [r1], #-99	; 0xffffff9d
    404c:	5f00696f 	svcpl	0x0000696f
    4050:	7473375a 	ldrbtvc	r3, [r3], #-1882	; 0xfffff8a6
    4054:	70636e72 	rsbvc	r6, r3, r2, ror lr
    4058:	50635079 	rsbpl	r5, r3, r9, ror r0
    405c:	0069634b 	rsbeq	r6, r9, fp, asr #6
    4060:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
    4064:	00706d63 	rsbseq	r6, r0, r3, ror #26
    4068:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
    406c:	00797063 	rsbseq	r7, r9, r3, rrx
    4070:	6f6d656d 	svcvs	0x006d656d
    4074:	6d007972 	vstrvs.16	s14, [r0, #-228]	; 0xffffff1c	; <UNPREDICTABLE>
    4078:	72736d65 	rsbsvc	r6, r3, #6464	; 0x1940
    407c:	5a5f0063 	bpl	17c4210 <_bss_end+0x17b2560>
    4080:	6f746934 	svcvs	0x00746934
    4084:	63506a61 	cmpvs	r0, #397312	; 0x61000
    4088:	4454006a 	ldrbmi	r0, [r4], #-106	; 0xffffff96
    408c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    4090:	4e5f7961 	vnmlami.f16	s15, s30, s3	; <UNPREDICTABLE>
    4094:	61506e6f 	cmpvs	r0, pc, ror #28
    4098:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    409c:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
    40a0:	6361505f 	cmnvs	r1, #95	; 0x5f
    40a4:	0074656b 	rsbseq	r6, r4, fp, ror #10
    40a8:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    40ac:	6e6f465f 	mcrvs	6, 3, r4, cr15, cr15, {2}
    40b0:	65445f74 	strbvs	r5, [r4, #-3956]	; 0xfffff08c
    40b4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    40b8:	6d2f0074 	stcvs	0, cr0, [pc, #-464]!	; 3ef0 <CPSR_IRQ_INHIBIT+0x3e70>
    40bc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    40c0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    40c4:	4b2f7372 	blmi	be0e94 <_bss_end+0xbcf1e4>
    40c8:	2f616275 	svccs	0x00616275
    40cc:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    40d0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    40d4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    40d8:	614d6f72 	hvcvs	55026	; 0xd6f2
    40dc:	652f6574 	strvs	r6, [pc, #-1396]!	; 3b70 <CPSR_IRQ_INHIBIT+0x3af0>
    40e0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    40e4:	2f73656c 	svccs	0x0073656c
    40e8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    40ec:	732f4332 			; <UNDEFINED> instruction: 0x732f4332
    40f0:	74756474 	ldrbtvc	r6, [r5], #-1140	; 0xfffffb8c
    40f4:	2f736c69 	svccs	0x00736c69
    40f8:	2f637273 	svccs	0x00637273
    40fc:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
    4100:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    4104:	696c4600 	stmdbvs	ip!, {r9, sl, lr}^
    4108:	68435f70 	stmdavs	r3, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    410c:	00737261 	rsbseq	r7, r3, r1, ror #4
    4110:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    4114:	6469575f 	strbtvs	r5, [r9], #-1887	; 0xfffff8a1
    4118:	4f006874 	svcmi	0x00006874
    411c:	5f44454c 	svcpl	0x0044454c
    4120:	746e6f46 	strbtvc	r6, [lr], #-3910	; 0xfffff0ba
    4124:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    4128:	4f433331 	svcmi	0x00433331
    412c:	5f44454c 	svcpl	0x0044454c
    4130:	70736944 	rsbsvc	r6, r3, r4, asr #18
    4134:	4379616c 	cmnmi	r9, #108, 2
    4138:	4b504532 	blmi	1415608 <_bss_end+0x1403958>
    413c:	68430063 	stmdavs	r3, {r0, r1, r5, r6}^
    4140:	455f7261 	ldrbmi	r7, [pc, #-609]	; 3ee7 <CPSR_IRQ_INHIBIT+0x3e67>
    4144:	4300646e 	movwmi	r6, #1134	; 0x46e
    4148:	5f726168 	svcpl	0x00726168
    414c:	67696548 	strbvs	r6, [r9, -r8, asr #10]!
    4150:	43007468 	movwmi	r7, #1128	; 0x468
    4154:	5f726168 	svcpl	0x00726168
    4158:	69676542 	stmdbvs	r7!, {r1, r6, r8, sl, sp, lr}^
    415c:	5a5f006e 	bpl	17c431c <_bss_end+0x17b266c>
    4160:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    4164:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    4168:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    416c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    4170:	76453244 	strbvc	r3, [r5], -r4, asr #4
    4174:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    4178:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    417c:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4180:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4184:	5f6e6f69 	svcpl	0x006e6f69
    4188:	31727470 	cmncc	r2, r0, ror r4
    418c:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    4190:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    4194:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4198:	34437274 	strbcc	r7, [r3], #-628	; 0xfffffd8c
    419c:	534b5245 	movtpl	r5, #45637	; 0xb245
    41a0:	5f005f30 	svcpl	0x00005f30
    41a4:	65725f4d 	ldrbvs	r5, [r2, #-3917]!	; 0xfffff0b3
    41a8:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    41ac:	63770065 	cmnvs	r7, #101	; 0x65
    41b0:	5f726168 	svcpl	0x00726168
    41b4:	5f5f0074 	svcpl	0x005f0074
    41b8:	31787863 	cmncc	r8, r3, ror #16
    41bc:	69730031 	ldmdbvs	r3!, {r0, r4, r5}^
    41c0:	745f657a 	ldrbvc	r6, [pc], #-1402	; 41c8 <CPSR_IRQ_INHIBIT+0x4148>
    41c4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    41c8:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    41cc:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    41d0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    41d4:	5f6e6f69 	svcpl	0x006e6f69
    41d8:	31727470 	cmncc	r2, r0, ror r4
    41dc:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    41e0:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    41e4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    41e8:	34437274 	strbcc	r7, [r3], #-628	; 0xfffffd8c
    41ec:	5f007645 	svcpl	0x00007645
    41f0:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    41f4:	5f5f3531 	svcpl	0x005f3531
    41f8:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    41fc:	6f697470 	svcvs	0x00697470
    4200:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4204:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4208:	70656378 	rsbvc	r6, r5, r8, ror r3
    420c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4210:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4214:	4d5f3031 	ldclmi	0, cr3, [pc, #-196]	; 4158 <CPSR_IRQ_INHIBIT+0x40d8>
    4218:	6c65725f 	sfmvs	f7, 2, [r5], #-380	; 0xfffffe84
    421c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    4220:	5f007645 	svcpl	0x00007645
    4224:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    4228:	5f5f3531 	svcpl	0x005f3531
    422c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4230:	6f697470 	svcvs	0x00697470
    4234:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4238:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    423c:	70656378 	rsbvc	r6, r5, r8, ror r3
    4240:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4244:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4248:	52455361 	subpl	r5, r5, #-2080374783	; 0x84000001
    424c:	5f30534b 	svcpl	0x0030534b
    4250:	735f5f00 	cmpvc	pc, #0, 30
    4254:	70706177 	rsbsvc	r6, r0, r7, ror r1
    4258:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    425c:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    4260:	65645f68 	strbvs	r5, [r4, #-3944]!	; 0xfffff098
    4264:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
    4268:	5a5f0073 	bpl	17c443c <_bss_end+0x17b278c>
    426c:	37317453 			; <UNDEFINED> instruction: 0x37317453
    4270:	68746572 	ldmdavs	r4!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    4274:	5f776f72 	svcpl	0x00776f72
    4278:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    427c:	6f697470 	svcvs	0x00697470
    4280:	74534e6e 	ldrbvc	r4, [r3], #-3694	; 0xfffff192
    4284:	5f5f3531 	svcpl	0x005f3531
    4288:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    428c:	6f697470 	svcvs	0x00697470
    4290:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4294:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4298:	70656378 	rsbvc	r6, r5, r8, ror r3
    429c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    42a0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    42a4:	5a5f0045 	bpl	17c43c0 <_bss_end+0x17b2710>
    42a8:	3174534e 	cmncc	r4, lr, asr #6
    42ac:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 337f <CPSR_IRQ_INHIBIT+0x32ff>
    42b0:	70656378 	rsbvc	r6, r5, r8, ror r3
    42b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    42b8:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    42bc:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    42c0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    42c4:	5f6e6f69 	svcpl	0x006e6f69
    42c8:	43727470 	cmnmi	r2, #112, 8	; 0x70000000
    42cc:	76504534 			; <UNDEFINED> instruction: 0x76504534
    42d0:	74657200 	strbtvc	r7, [r5], #-512	; 0xfffffe00
    42d4:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
    42d8:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    42dc:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    42e0:	2f006e6f 	svccs	0x00006e6f
    42e4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    42e8:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    42ec:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    42f0:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    42f4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    42f8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    42fc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4300:	44672d69 	strbtmi	r2, [r7], #-3433	; 0xfffff297
    4304:	43374569 	teqmi	r7, #440401920	; 0x1a400000
    4308:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    430c:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    4310:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    4314:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4318:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    431c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4320:	2f37312d 	svccs	0x0037312d
    4324:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4328:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    432c:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    4330:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    4334:	2f647261 	svccs	0x00647261
    4338:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    433c:	2b636474 	blcs	18dd514 <_bss_end+0x18cb864>
    4340:	696c2f2b 	stmdbvs	ip!, {r0, r1, r3, r5, r8, r9, sl, fp, sp}^
    4344:	70757362 	rsbsvc	r7, r5, r2, ror #6
    4348:	002b2b63 	eoreq	r2, fp, r3, ror #22
    434c:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    4350:	5f353174 	svcpl	0x00353174
    4354:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    4358:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    435c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4360:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    4364:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4368:	6f697470 	svcvs	0x00697470
    436c:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4370:	77733472 			; <UNDEFINED> instruction: 0x77733472
    4374:	52457061 	subpl	r7, r5, #97	; 0x61
    4378:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
    437c:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    4380:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
    4384:	4d5f003d 	ldclmi	0, cr0, [pc, #-244]	; 4298 <CPSR_IRQ_INHIBIT+0x4218>
    4388:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    438c:	00666572 	rsbeq	r6, r6, r2, ror r5
    4390:	616e5a5f 	cmnvs	lr, pc, asr sl
    4394:	4e47006a 	cdpmi	0, 4, cr0, cr7, cr10, {3}
    4398:	2b432055 	blcs	10cc4f4 <_bss_end+0x10ba844>
    439c:	2034312b 	eorscs	r3, r4, fp, lsr #2
    43a0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    43a4:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
    43a8:	30313230 	eorscc	r3, r1, r0, lsr r2
    43ac:	20313236 	eorscs	r3, r1, r6, lsr r2
    43b0:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
    43b4:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    43b8:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
    43bc:	616f6c66 	cmnvs	pc, r6, ror #24
    43c0:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    43c4:	61683d69 	cmnvs	r8, r9, ror #26
    43c8:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
    43cc:	6d72616d 	ldfvse	f6, [r2, #-436]!	; 0xfffffe4c
    43d0:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
    43d4:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    43d8:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
    43dc:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
    43e0:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
    43e4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    43e8:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
    43ec:	65743576 	ldrbvs	r3, [r4, #-1398]!	; 0xfffffa8a
    43f0:	2070662b 	rsbscs	r6, r0, fp, lsr #12
    43f4:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    43f8:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    43fc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 426c <CPSR_IRQ_INHIBIT+0x41ec>
    4400:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    4404:	74696369 	strbtvc	r6, [r9], #-873	; 0xfffffc97
    4408:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    440c:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    4410:	2d207365 	stccs	3, cr7, [r0, #-404]!	; 0xfffffe6c
    4414:	6e617266 	cdpvs	2, 6, cr7, cr1, cr6, {3}
    4418:	2d6d6f64 	stclcs	15, cr6, [sp, #-400]!	; 0xfffffe70
    441c:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
    4420:	77656e3d 			; <UNDEFINED> instruction: 0x77656e3d
    4424:	76706f5f 	uhsaxvc	r6, r0, pc	; <UNPREDICTABLE>
    4428:	206f6c2e 	rsbcs	r6, pc, lr, lsr #24
    442c:	7566662d 	strbvc	r6, [r6, #-1581]!	; 0xfffff9d3
    4430:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    4434:	732d6e6f 			; <UNDEFINED> instruction: 0x732d6e6f
    4438:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    443c:	20736e6f 	rsbscs	r6, r3, pc, ror #28
    4440:	6164662d 	cmnvs	r4, sp, lsr #12
    4444:	732d6174 			; <UNDEFINED> instruction: 0x732d6174
    4448:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    444c:	00736e6f 	rsbseq	r6, r3, pc, ror #28
    4450:	6378657e 	cmnvs	r8, #528482304	; 0x1f800000
    4454:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    4458:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    445c:	64007274 	strvs	r7, [r0], #-628	; 0xfffffd8c
    4460:	746c6365 	strbtvc	r6, [ip], #-869	; 0xfffffc9b
    4464:	28657079 	stmdacs	r5!, {r0, r3, r4, r5, r6, ip, sp, lr}^
    4468:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
    446c:	29727470 	ldmdbcs	r2!, {r4, r5, r6, sl, ip, sp, lr}^
    4470:	6c756e00 	ldclvs	14, cr6, [r5], #-0
    4474:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
    4478:	5f00745f 	svcpl	0x0000745f
    447c:	534b4e5a 	movtpl	r4, #48730	; 0xbe5a
    4480:	5f353174 	svcpl	0x00353174
    4484:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    4488:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    448c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4490:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    4494:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4498:	6f697470 	svcvs	0x00697470
    449c:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    44a0:	62766372 	rsbsvs	r6, r6, #-939524095	; 0xc8000001
    44a4:	5f007645 	svcpl	0x00007645
    44a8:	6177735f 	cmnvs	r7, pc, asr r3
    44ac:	62617070 	rsbvs	r7, r1, #112	; 0x70
    44b0:	645f656c 	ldrbvs	r6, [pc], #-1388	; 44b8 <CPSR_IRQ_INHIBIT+0x4438>
    44b4:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    44b8:	5f00736c 	svcpl	0x0000736c
    44bc:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    44c0:	5f5f3531 	svcpl	0x005f3531
    44c4:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    44c8:	6f697470 	svcvs	0x00697470
    44cc:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    44d0:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    44d4:	70656378 	rsbvc	r6, r5, r8, ror r3
    44d8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    44dc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    44e0:	5f4d5f39 	svcpl	0x004d5f39
    44e4:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
    44e8:	76456665 	strbvc	r6, [r5], -r5, ror #12
    44ec:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    44f0:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    44f4:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    44f8:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    44fc:	5f6e6f69 	svcpl	0x006e6f69
    4500:	31727470 	cmncc	r2, r0, ror r4
    4504:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    4508:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    450c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4510:	34447274 	strbcc	r7, [r4], #-628	; 0xfffffd8c
    4514:	5f007645 	svcpl	0x00007645
    4518:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    451c:	5f5f3531 	svcpl	0x005f3531
    4520:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4524:	6f697470 	svcvs	0x00697470
    4528:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    452c:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4530:	70656378 	rsbvc	r6, r5, r8, ror r3
    4534:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4538:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    453c:	4f453443 	svcmi	0x00453443
    4540:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
    4544:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    4548:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
    454c:	6f6f6220 	svcvs	0x006f6220
    4550:	5f5f006c 	svcpl	0x005f006c
    4554:	5f756e67 	svcpl	0x00756e67
    4558:	00787863 	rsbseq	r7, r8, r3, ror #16
    455c:	4b4e5a5f 	blmi	139aee0 <_bss_end+0x1389230>
    4560:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    4564:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4568:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    456c:	5f6e6f69 	svcpl	0x006e6f69
    4570:	31727470 	cmncc	r2, r0, ror r4
    4574:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    4578:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    457c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4580:	5f367274 	svcpl	0x00367274
    4584:	65675f4d 	strbvs	r5, [r7, #-3917]!	; 0xfffff0b3
    4588:	00764574 	rsbseq	r4, r6, r4, ror r5
    458c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    4590:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
    4594:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
    4598:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
    459c:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
    45a0:	6300746e 	movwvs	r7, #1134	; 0x46e
    45a4:	31726168 	cmncc	r2, r8, ror #2
    45a8:	00745f36 	rsbseq	r5, r4, r6, lsr pc
    45ac:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    45b0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    45b4:	5f6e6f69 	svcpl	0x006e6f69
    45b8:	00727470 	rsbseq	r7, r2, r0, ror r4
    45bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    45c0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    45c4:	2f2e2e2f 	svccs	0x002e2e2f
    45c8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    45cc:	72732f2e 	rsbsvc	r2, r3, #46, 30	; 0xb8
    45d0:	696c2f63 	stmdbvs	ip!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    45d4:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    45d8:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    45dc:	6c2f3376 	stcvs	3, cr3, [pc], #-472	; 440c <CPSR_IRQ_INHIBIT+0x438c>
    45e0:	75736269 	ldrbvc	r6, [r3, #-617]!	; 0xfffffd97
    45e4:	2b2b6370 	blcs	add3ac <_bss_end+0xacb6fc>
    45e8:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    45ec:	76706f5f 	uhsaxvc	r6, r0, pc	; <UNPREDICTABLE>
    45f0:	0063632e 	rsbeq	r6, r3, lr, lsr #6
    45f4:	70617773 	rsbvc	r7, r1, r3, ror r7
    45f8:	61686300 	cmnvs	r8, r0, lsl #6
    45fc:	5f323372 	svcpl	0x00323372
    4600:	5a5f0074 	bpl	17c47d8 <_bss_end+0x17b2b28>
    4604:	3174534e 	cmncc	r4, lr, asr #6
    4608:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 36db <CPSR_IRQ_INHIBIT+0x365b>
    460c:	70656378 	rsbvc	r6, r5, r8, ror r3
    4610:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4614:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4618:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    461c:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4620:	5f6e6f69 	svcpl	0x006e6f69
    4624:	43727470 	cmnmi	r2, #112, 8	; 0x70000000
    4628:	6e444534 	mcrvs	5, 2, r4, cr4, cr4, {1}
    462c:	5f4d5f00 	svcpl	0x004d5f00
    4630:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4634:	6f697470 	svcvs	0x00697470
    4638:	626f5f6e 	rsbvs	r5, pc, #440	; 0x1b8
    463c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    4640:	635f5f00 	cmpvs	pc, #0, 30
    4644:	655f6178 	ldrbvs	r6, [pc, #-376]	; 44d4 <CPSR_IRQ_INHIBIT+0x4454>
    4648:	70656378 	rsbvc	r6, r5, r8, ror r3
    464c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4650:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    4654:	79740065 	ldmdbvc	r4!, {r0, r2, r5, r6}^
    4658:	695f6570 	ldmdbvs	pc, {r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    465c:	006f666e 	rsbeq	r6, pc, lr, ror #12
    4660:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    4664:	756f6420 	strbvc	r6, [pc, #-1056]!	; 424c <CPSR_IRQ_INHIBIT+0x41cc>
    4668:	00656c62 	rsbeq	r6, r5, r2, ror #24
    466c:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    4670:	5f353174 	svcpl	0x00353174
    4674:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    4678:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    467c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4680:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    4684:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4688:	6f697470 	svcvs	0x00697470
    468c:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4690:	45536172 	ldrbmi	r6, [r3, #-370]	; 0xfffffe8e
    4694:	5f30534f 	svcpl	0x0030534f
    4698:	65706f00 	ldrbvs	r6, [r0, #-3840]!	; 0xfffff100
    469c:	6f746172 	svcvs	0x00746172
    46a0:	656e2072 	strbvs	r2, [lr, #-114]!	; 0xffffff8e
    46a4:	5d5b2077 	ldclpl	0, cr2, [fp, #-476]	; 0xfffffe24
    46a8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    46ac:	3174534b 	cmncc	r4, fp, asr #6
    46b0:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 3783 <CPSR_IRQ_INHIBIT+0x3703>
    46b4:	70656378 	rsbvc	r6, r5, r8, ror r3
    46b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    46bc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    46c0:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    46c4:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    46c8:	5f6e6f69 	svcpl	0x006e6f69
    46cc:	32727470 	rsbscc	r7, r2, #112, 8	; 0x70000000
    46d0:	635f5f30 	cmpvs	pc, #48, 30	; 0xc0
    46d4:	655f6178 	ldrbvs	r6, [pc, #-376]	; 4564 <CPSR_IRQ_INHIBIT+0x44e4>
    46d8:	70656378 	rsbvc	r6, r5, r8, ror r3
    46dc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    46e0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    46e4:	00764565 	rsbseq	r4, r6, r5, ror #10
    46e8:	675f4d5f 			; <UNDEFINED> instruction: 0x675f4d5f
    46ec:	2e007465 	cdpcs	4, 0, cr7, cr0, cr5, {3}
    46f0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    46f4:	2f2e2e2f 	svccs	0x002e2e2f
    46f8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    46fc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4700:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4704:	2f636367 	svccs	0x00636367
    4708:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    470c:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    4710:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; 4550 <CPSR_IRQ_INHIBIT+0x44d0>
    4714:	66316269 	ldrtvs	r6, [r1], -r9, ror #4
    4718:	73636e75 	cmnvc	r3, #1872	; 0x750
    471c:	2f00532e 	svccs	0x0000532e
    4720:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4724:	63672f64 	cmnvs	r7, #100, 30	; 0x190
    4728:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    472c:	6f6e2d6d 	svcvs	0x006e2d6d
    4730:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4734:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4738:	67665968 	strbvs	r5, [r6, -r8, ror #18]!
    473c:	672f344b 	strvs	r3, [pc, -fp, asr #8]!
    4740:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    4744:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4748:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    474c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4750:	2e30312d 	rsfcssp	f3, f0, #5.0
    4754:	30322d33 	eorscc	r2, r2, r3, lsr sp
    4758:	302e3132 	eorcc	r3, lr, r2, lsr r1
    475c:	75622f37 	strbvc	r2, [r2, #-3895]!	; 0xfffff0c9
    4760:	2f646c69 	svccs	0x00646c69
    4764:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4768:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    476c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4770:	72612f69 	rsbvc	r2, r1, #420	; 0x1a4
    4774:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    4778:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    477c:	2f647261 	svccs	0x00647261
    4780:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    4784:	47006363 	strmi	r6, [r0, -r3, ror #6]
    4788:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
    478c:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
    4790:	69003733 	stmdbvs	r0, {r0, r1, r4, r5, r8, r9, sl, ip, sp}
    4794:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4798:	705f7469 	subsvc	r7, pc, r9, ror #8
    479c:	72646572 	rsbvc	r6, r4, #478150656	; 0x1c800000
    47a0:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    47a4:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    47a8:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    47ac:	625f7066 	subsvs	r7, pc, #102	; 0x66
    47b0:	00657361 	rsbeq	r7, r5, r1, ror #6
    47b4:	706d6f63 	rsbvc	r6, sp, r3, ror #30
    47b8:	2078656c 	rsbscs	r6, r8, ip, ror #10
    47bc:	616f6c66 	cmnvs	pc, r6, ror #24
    47c0:	73690074 	cmnvc	r9, #116	; 0x74
    47c4:	6f6e5f61 	svcvs	0x006e5f61
    47c8:	00746962 	rsbseq	r6, r4, r2, ror #18
    47cc:	5f617369 	svcpl	0x00617369
    47d0:	5f746962 	svcpl	0x00746962
    47d4:	5f65766d 	svcpl	0x0065766d
    47d8:	616f6c66 	cmnvs	pc, r6, ror #24
    47dc:	73690074 	cmnvc	r9, #116	; 0x74
    47e0:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    47e4:	70665f74 	rsbvc	r5, r6, r4, ror pc
    47e8:	69003631 	stmdbvs	r0, {r0, r4, r5, r9, sl, ip, sp}
    47ec:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    47f0:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    47f4:	69006365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, sp, lr}
    47f8:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    47fc:	615f7469 	cmpvs	pc, r9, ror #8
    4800:	00766964 	rsbseq	r6, r6, r4, ror #18
    4804:	5f617369 	svcpl	0x00617369
    4808:	5f746962 	svcpl	0x00746962
    480c:	72697571 	rsbvc	r7, r9, #473956352	; 0x1c400000
    4810:	6f6e5f6b 	svcvs	0x006e5f6b
    4814:	6c6f765f 	stclvs	6, cr7, [pc], #-380	; 46a0 <CPSR_IRQ_INHIBIT+0x4620>
    4818:	6c697461 	cfstrdvs	mvd7, [r9], #-388	; 0xfffffe7c
    481c:	65635f65 	strbvs	r5, [r3, #-3941]!	; 0xfffff09b
    4820:	61736900 	cmnvs	r3, r0, lsl #18
    4824:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4828:	00706d5f 	rsbseq	r6, r0, pc, asr sp
    482c:	5f617369 	svcpl	0x00617369
    4830:	5f746962 	svcpl	0x00746962
    4834:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4838:	69007435 	stmdbvs	r0, {r0, r2, r4, r5, sl, ip, sp, lr}
    483c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4840:	615f7469 	cmpvs	pc, r9, ror #8
    4844:	35766d72 	ldrbcc	r6, [r6, #-3442]!	; 0xfffff28e
    4848:	69006574 	stmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    484c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4850:	6e5f7469 	cdpvs	4, 5, cr7, cr15, cr9, {3}
    4854:	006e6f65 	rsbeq	r6, lr, r5, ror #30
    4858:	5f617369 	svcpl	0x00617369
    485c:	5f746962 	svcpl	0x00746962
    4860:	36316662 	ldrtcc	r6, [r1], -r2, ror #12
    4864:	53504600 	cmppl	r0, #0, 12
    4868:	455f5243 	ldrbmi	r5, [pc, #-579]	; 462d <CPSR_IRQ_INHIBIT+0x45ad>
    486c:	004d554e 	subeq	r5, sp, lr, asr #10
    4870:	43535046 	cmpmi	r3, #70	; 0x46
    4874:	7a6e5f52 	bvc	1b9c5c4 <_bss_end+0x1b8a914>
    4878:	63717663 	cmnvs	r1, #103809024	; 0x6300000
    487c:	554e455f 	strbpl	r4, [lr, #-1375]	; 0xfffffaa1
    4880:	5056004d 	subspl	r0, r6, sp, asr #32
    4884:	4e455f52 	mcrmi	15, 2, r5, cr5, cr2, {2}
    4888:	66004d55 			; <UNDEFINED> instruction: 0x66004d55
    488c:	5f746962 	svcpl	0x00746962
    4890:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    4894:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    4898:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    489c:	455f3050 	ldrbmi	r3, [pc, #-80]	; 4854 <CPSR_IRQ_INHIBIT+0x47d4>
    48a0:	004d554e 	subeq	r5, sp, lr, asr #10
    48a4:	5f617369 	svcpl	0x00617369
    48a8:	5f746962 	svcpl	0x00746962
    48ac:	70797263 	rsbsvc	r7, r9, r3, ror #4
    48b0:	47006f74 	smlsdxmi	r0, r4, pc, r6	; <UNPREDICTABLE>
    48b4:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
    48b8:	31203731 			; <UNDEFINED> instruction: 0x31203731
    48bc:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    48c0:	30322031 	eorscc	r2, r2, r1, lsr r0
    48c4:	36303132 			; <UNDEFINED> instruction: 0x36303132
    48c8:	28203132 	stmdacs	r0!, {r1, r4, r5, r8, ip, sp}
    48cc:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    48d0:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    48d4:	616d2d20 	cmnvs	sp, r0, lsr #26
    48d8:	2d206d72 	stccs	13, cr6, [r0, #-456]!	; 0xfffffe38
    48dc:	6f6c666d 	svcvs	0x006c666d
    48e0:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
    48e4:	683d6962 	ldmdavs	sp!, {r1, r5, r6, r8, fp, sp, lr}
    48e8:	20647261 	rsbcs	r7, r4, r1, ror #4
    48ec:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
    48f0:	613d6863 	teqvs	sp, r3, ror #16
    48f4:	35766d72 	ldrbcc	r6, [r6, #-3442]!	; 0xfffff28e
    48f8:	662b6574 			; <UNDEFINED> instruction: 0x662b6574
    48fc:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
    4900:	20672d20 	rsbcs	r2, r7, r0, lsr #26
    4904:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    4908:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    490c:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    4910:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    4914:	69756266 	ldmdbvs	r5!, {r1, r2, r5, r6, r9, sp, lr}^
    4918:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    491c:	696c2d67 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, sl, fp, sp}^
    4920:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    4924:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
    4928:	74732d6f 	ldrbtvc	r2, [r3], #-3439	; 0xfffff291
    492c:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
    4930:	746f7270 	strbtvc	r7, [pc], #-624	; 4938 <CPSR_IRQ_INHIBIT+0x48b8>
    4934:	6f746365 	svcvs	0x00746365
    4938:	662d2072 			; <UNDEFINED> instruction: 0x662d2072
    493c:	692d6f6e 	pushvs	{r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    4940:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    4944:	662d2065 	strtvs	r2, [sp], -r5, rrx
    4948:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
    494c:	696c6962 	stmdbvs	ip!, {r1, r5, r6, r8, fp, sp, lr}^
    4950:	683d7974 	ldmdavs	sp!, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    4954:	65646469 	strbvs	r6, [r4, #-1129]!	; 0xfffffb97
    4958:	7369006e 	cmnvc	r9, #110	; 0x6e
    495c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4960:	64745f74 	ldrbtvs	r5, [r4], #-3956	; 0xfffff08c
    4964:	63007669 	movwvs	r7, #1641	; 0x669
    4968:	00736e6f 	rsbseq	r6, r3, pc, ror #28
    496c:	5f617369 	svcpl	0x00617369
    4970:	5f746962 	svcpl	0x00746962
    4974:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    4978:	46007478 			; <UNDEFINED> instruction: 0x46007478
    497c:	54584350 	ldrbpl	r4, [r8], #-848	; 0xfffffcb0
    4980:	4e455f53 	mcrmi	15, 2, r5, cr5, cr3, {2}
    4984:	69004d55 	stmdbvs	r0, {r0, r2, r4, r6, r8, sl, fp, lr}
    4988:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    498c:	615f7469 	cmpvs	pc, r9, ror #8
    4990:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
    4994:	61736900 	cmnvs	r3, r0, lsl #18
    4998:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    499c:	65766d5f 	ldrbvs	r6, [r6, #-3423]!	; 0xfffff2a1
    49a0:	61736900 	cmnvs	r3, r0, lsl #18
    49a4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    49a8:	6d77695f 			; <UNDEFINED> instruction: 0x6d77695f
    49ac:	3274786d 	rsbscc	r7, r4, #7143424	; 0x6d0000
    49b0:	61736900 	cmnvs	r3, r0, lsl #18
    49b4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    49b8:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    49bc:	00307063 	eorseq	r7, r0, r3, rrx
    49c0:	5f617369 	svcpl	0x00617369
    49c4:	5f746962 	svcpl	0x00746962
    49c8:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    49cc:	69003170 	stmdbvs	r0, {r4, r5, r6, r8, ip, sp}
    49d0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    49d4:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    49d8:	70636564 	rsbvc	r6, r3, r4, ror #10
    49dc:	73690032 	cmnvc	r9, #50	; 0x32
    49e0:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    49e4:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    49e8:	33706365 	cmncc	r0, #-1811939327	; 0x94000001
    49ec:	61736900 	cmnvs	r3, r0, lsl #18
    49f0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    49f4:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    49f8:	00347063 	eorseq	r7, r4, r3, rrx
    49fc:	5f617369 	svcpl	0x00617369
    4a00:	5f746962 	svcpl	0x00746962
    4a04:	645f7066 	ldrbvs	r7, [pc], #-102	; 4a0c <CPSR_IRQ_INHIBIT+0x498c>
    4a08:	69006c62 	stmdbvs	r0, {r1, r5, r6, sl, fp, sp, lr}
    4a0c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4a10:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    4a14:	70636564 	rsbvc	r6, r3, r4, ror #10
    4a18:	73690036 	cmnvc	r9, #54	; 0x36
    4a1c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4a20:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    4a24:	37706365 	ldrbcc	r6, [r0, -r5, ror #6]!
    4a28:	61736900 	cmnvs	r3, r0, lsl #18
    4a2c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4a30:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4a34:	006b3676 	rsbeq	r3, fp, r6, ror r6
    4a38:	5f617369 	svcpl	0x00617369
    4a3c:	5f746962 	svcpl	0x00746962
    4a40:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4a44:	6d315f38 	ldcvs	15, cr5, [r1, #-224]!	; 0xffffff20
    4a48:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    4a4c:	6e61006e 	cdpvs	0, 6, cr0, cr1, cr14, {3}
    4a50:	69006574 	stmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    4a54:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4a58:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    4a5c:	0065736d 	rsbeq	r7, r5, sp, ror #6
    4a60:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a64:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a68:	2f2e2e2f 	svccs	0x002e2e2f
    4a6c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a70:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4a74:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    4a78:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4a7c:	32636367 	rsbcc	r6, r3, #-1677721599	; 0x9c000001
    4a80:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    4a84:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4a88:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    4a8c:	00357670 	eorseq	r7, r5, r0, ror r6
    4a90:	5f617369 	svcpl	0x00617369
    4a94:	5f746962 	svcpl	0x00746962
    4a98:	61637378 	smcvs	14136	; 0x3738
    4a9c:	6900656c 	stmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    4aa0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4aa4:	715f7469 	cmpvc	pc, r9, ror #8
    4aa8:	6b726975 	blvs	1c9f084 <_bss_end+0x1c8d3d4>
    4aac:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
    4ab0:	72646c5f 	rsbvc	r6, r4, #24320	; 0x5f00
    4ab4:	73690064 	cmnvc	r9, #100	; 0x64
    4ab8:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4abc:	38695f74 	stmdacc	r9!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ac0:	69006d6d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    4ac4:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4ac8:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    4acc:	33645f70 	cmncc	r4, #112, 30	; 0x1c0
    4ad0:	73690032 	cmnvc	r9, #50	; 0x32
    4ad4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ad8:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    4adc:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    4ae0:	7369006d 	cmnvc	r9, #109	; 0x6d
    4ae4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ae8:	706c5f74 	rsbvc	r5, ip, r4, ror pc
    4aec:	61006561 	tstvs	r0, r1, ror #10
    4af0:	695f6c6c 	ldmdbvs	pc, {r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    4af4:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    4af8:	665f6465 	ldrbvs	r6, [pc], -r5, ror #8
    4afc:	73746962 	cmnvc	r4, #1605632	; 0x188000
    4b00:	61736900 	cmnvs	r3, r0, lsl #18
    4b04:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b08:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4b0c:	315f3876 	cmpcc	pc, r6, ror r8	; <UNPREDICTABLE>
    4b10:	61736900 	cmnvs	r3, r0, lsl #18
    4b14:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b18:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4b1c:	325f3876 	subscc	r3, pc, #7733248	; 0x760000
    4b20:	61736900 	cmnvs	r3, r0, lsl #18
    4b24:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b28:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4b2c:	335f3876 	cmpcc	pc, #7733248	; 0x760000
    4b30:	61736900 	cmnvs	r3, r0, lsl #18
    4b34:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b38:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4b3c:	345f3876 	ldrbcc	r3, [pc], #-2166	; 4b44 <CPSR_IRQ_INHIBIT+0x4ac4>
    4b40:	61736900 	cmnvs	r3, r0, lsl #18
    4b44:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b48:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4b4c:	355f3876 	ldrbcc	r3, [pc, #-2166]	; 42de <CPSR_IRQ_INHIBIT+0x425e>
    4b50:	61736900 	cmnvs	r3, r0, lsl #18
    4b54:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b58:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4b5c:	365f3876 			; <UNDEFINED> instruction: 0x365f3876
    4b60:	61736900 	cmnvs	r3, r0, lsl #18
    4b64:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b68:	0062735f 	rsbeq	r7, r2, pc, asr r3
    4b6c:	5f617369 	svcpl	0x00617369
    4b70:	5f6d756e 	svcpl	0x006d756e
    4b74:	73746962 	cmnvc	r4, #1605632	; 0x188000
    4b78:	61736900 	cmnvs	r3, r0, lsl #18
    4b7c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4b80:	616d735f 	cmnvs	sp, pc, asr r3
    4b84:	756d6c6c 	strbvc	r6, [sp, #-3180]!	; 0xfffff394
    4b88:	7566006c 	strbvc	r0, [r6, #-108]!	; 0xffffff94
    4b8c:	705f636e 	subsvc	r6, pc, lr, ror #6
    4b90:	63007274 	movwvs	r7, #628	; 0x274
    4b94:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    4b98:	64207865 	strtvs	r7, [r0], #-2149	; 0xfffff79b
    4b9c:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
    4ba0:	424e0065 	submi	r0, lr, #101	; 0x65
    4ba4:	5f50465f 	svcpl	0x0050465f
    4ba8:	52535953 	subspl	r5, r3, #1359872	; 0x14c000
    4bac:	00534745 	subseq	r4, r3, r5, asr #14
    4bb0:	5f617369 	svcpl	0x00617369
    4bb4:	5f746962 	svcpl	0x00746962
    4bb8:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    4bbc:	69003570 	stmdbvs	r0, {r4, r5, r6, r8, sl, ip, sp}
    4bc0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4bc4:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    4bc8:	32767066 	rsbscc	r7, r6, #102	; 0x66
    4bcc:	61736900 	cmnvs	r3, r0, lsl #18
    4bd0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4bd4:	7066765f 	rsbvc	r7, r6, pc, asr r6
    4bd8:	69003376 	stmdbvs	r0, {r1, r2, r4, r5, r6, r8, r9, ip, sp}
    4bdc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4be0:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    4be4:	34767066 	ldrbtcc	r7, [r6], #-102	; 0xffffff9a
    4be8:	43504600 	cmpmi	r0, #0, 12
    4bec:	534e5458 	movtpl	r5, #58456	; 0xe458
    4bf0:	554e455f 	strbpl	r4, [lr, #-1375]	; 0xfffffaa1
    4bf4:	7369004d 	cmnvc	r9, #77	; 0x4d
    4bf8:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4bfc:	68745f74 	ldmdavs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c00:	00626d75 	rsbeq	r6, r2, r5, ror sp
    4c04:	5f617369 	svcpl	0x00617369
    4c08:	5f746962 	svcpl	0x00746962
    4c0c:	36317066 	ldrtcc	r7, [r1], -r6, rrx
    4c10:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
    4c14:	61736900 	cmnvs	r3, r0, lsl #18
    4c18:	6165665f 	cmnvs	r5, pc, asr r6
    4c1c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
    4c20:	61736900 	cmnvs	r3, r0, lsl #18
    4c24:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4c28:	746f6e5f 	strbtvc	r6, [pc], #-3679	; 4c30 <CPSR_IRQ_INHIBIT+0x4bb0>
    4c2c:	7369006d 	cmnvc	r9, #109	; 0x6d
    4c30:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c34:	75715f74 	ldrbvc	r5, [r1, #-3956]!	; 0xfffff08c
    4c38:	5f6b7269 	svcpl	0x006b7269
    4c3c:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4c40:	007a6b36 	rsbseq	r6, sl, r6, lsr fp
    4c44:	5f617369 	svcpl	0x00617369
    4c48:	5f746962 	svcpl	0x00746962
    4c4c:	33637263 	cmncc	r3, #805306374	; 0x30000006
    4c50:	73690032 	cmnvc	r9, #50	; 0x32
    4c54:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c58:	75715f74 	ldrbvc	r5, [r1, #-3956]!	; 0xfffff08c
    4c5c:	5f6b7269 	svcpl	0x006b7269
    4c60:	615f6f6e 	cmpvs	pc, lr, ror #30
    4c64:	70636d73 	rsbvc	r6, r3, r3, ror sp
    4c68:	73690075 	cmnvc	r9, #117	; 0x75
    4c6c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c70:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    4c74:	0034766d 	eorseq	r7, r4, sp, ror #12
    4c78:	5f617369 	svcpl	0x00617369
    4c7c:	5f746962 	svcpl	0x00746962
    4c80:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    4c84:	69003262 	stmdbvs	r0, {r1, r5, r6, r9, ip, sp}
    4c88:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4c8c:	625f7469 	subsvs	r7, pc, #1761607680	; 0x69000000
    4c90:	69003865 	stmdbvs	r0, {r0, r2, r5, r6, fp, ip, sp}
    4c94:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4c98:	615f7469 	cmpvs	pc, r9, ror #8
    4c9c:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
    4ca0:	61736900 	cmnvs	r3, r0, lsl #18
    4ca4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4ca8:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4cac:	76003876 			; <UNDEFINED> instruction: 0x76003876
    4cb0:	735f7066 	cmpvc	pc, #102	; 0x66
    4cb4:	65727379 	ldrbvs	r7, [r2, #-889]!	; 0xfffffc87
    4cb8:	655f7367 	ldrbvs	r7, [pc, #-871]	; 4959 <CPSR_IRQ_INHIBIT+0x48d9>
    4cbc:	646f636e 	strbtvs	r6, [pc], #-878	; 4cc4 <CPSR_IRQ_INHIBIT+0x4c44>
    4cc0:	00676e69 	rsbeq	r6, r7, r9, ror #28
    4cc4:	5f617369 	svcpl	0x00617369
    4cc8:	5f746962 	svcpl	0x00746962
    4ccc:	36317066 	ldrtcc	r7, [r1], -r6, rrx
    4cd0:	006c6d66 	rsbeq	r6, ip, r6, ror #26
    4cd4:	5f617369 	svcpl	0x00617369
    4cd8:	5f746962 	svcpl	0x00746962
    4cdc:	70746f64 	rsbsvc	r6, r4, r4, ror #30
    4ce0:	00646f72 	rsbeq	r6, r4, r2, ror pc

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_bss_end+0x10bf074>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	2e30313a 	mrccs	1, 1, r3, cr0, cr10, {1}
   c:	30322d33 	eorscc	r2, r2, r3, lsr sp
  10:	302e3132 	eorcc	r3, lr, r2, lsr r1
  14:	29342d37 	ldmdbcs	r4!, {r0, r1, r2, r4, r5, r8, sl, fp, sp}
  18:	2e303120 	rsfcssp	f3, f0, f0
  1c:	20312e33 	eorscs	r2, r1, r3, lsr lr
  20:	31323032 	teqcc	r2, r2, lsr r0
  24:	31323630 	teqcc	r2, r0, lsr r6
  28:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  2c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  10:	4b5a3605 	blmi	168d82c <_bss_end+0x167bb7c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <_bss_end+0x30774>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	1a011803 	bne	46038 <_bss_end+0x34388>
  28:	1e011c01 	cdpne	12, 0, cr1, cr1, cr1, {0}
  2c:	44012206 	strmi	r2, [r1], #-518	; 0xfffffdfa
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	000080ac 	andeq	r8, r0, ip, lsr #1
      1c:	00000038 	andeq	r0, r0, r8, lsr r0
      20:	8b040e42 	blhi	103930 <_bss_end+0xf1c80>
      24:	0b0d4201 	bleq	350830 <_bss_end+0x33eb80>
      28:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
      2c:	00000ecb 	andeq	r0, r0, fp, asr #29
      30:	0000001c 	andeq	r0, r0, ip, lsl r0
      34:	00000000 	andeq	r0, r0, r0
      38:	000080e4 	andeq	r8, r0, r4, ror #1
      3c:	0000002c 	andeq	r0, r0, ip, lsr #32
      40:	8b040e42 	blhi	103950 <_bss_end+0xf1ca0>
      44:	0b0d4201 	bleq	350850 <_bss_end+0x33eba0>
      48:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
      4c:	00000ecb 	andeq	r0, r0, fp, asr #29
      50:	0000001c 	andeq	r0, r0, ip, lsl r0
      54:	00000000 	andeq	r0, r0, r0
      58:	00008110 	andeq	r8, r0, r0, lsl r1
      5c:	00000020 	andeq	r0, r0, r0, lsr #32
      60:	8b040e42 	blhi	103970 <_bss_end+0xf1cc0>
      64:	0b0d4201 	bleq	350870 <_bss_end+0x33ebc0>
      68:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
      6c:	00000ecb 	andeq	r0, r0, fp, asr #29
      70:	0000001c 	andeq	r0, r0, ip, lsl r0
      74:	00000000 	andeq	r0, r0, r0
      78:	00008130 	andeq	r8, r0, r0, lsr r1
      7c:	00000018 	andeq	r0, r0, r8, lsl r0
      80:	8b040e42 	blhi	103990 <_bss_end+0xf1ce0>
      84:	0b0d4201 	bleq	350890 <_bss_end+0x33ebe0>
      88:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      8c:	00000ecb 	andeq	r0, r0, fp, asr #29
      90:	0000001c 	andeq	r0, r0, ip, lsl r0
      94:	00000000 	andeq	r0, r0, r0
      98:	00008148 	andeq	r8, r0, r8, asr #2
      9c:	00000018 	andeq	r0, r0, r8, lsl r0
      a0:	8b040e42 	blhi	1039b0 <_bss_end+0xf1d00>
      a4:	0b0d4201 	bleq	3508b0 <_bss_end+0x33ec00>
      a8:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      ac:	00000ecb 	andeq	r0, r0, fp, asr #29
      b0:	0000001c 	andeq	r0, r0, ip, lsl r0
      b4:	00000000 	andeq	r0, r0, r0
      b8:	00008160 	andeq	r8, r0, r0, ror #2
      bc:	00000018 	andeq	r0, r0, r8, lsl r0
      c0:	8b040e42 	blhi	1039d0 <_bss_end+0xf1d20>
      c4:	0b0d4201 	bleq	3508d0 <_bss_end+0x33ec20>
      c8:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      cc:	00000ecb 	andeq	r0, r0, fp, asr #29
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
      d4:	00000000 	andeq	r0, r0, r0
      d8:	00008178 	andeq	r8, r0, r8, ror r1
      dc:	0000000c 	andeq	r0, r0, ip
      e0:	8b040e42 	blhi	1039f0 <_bss_end+0xf1d40>
      e4:	0b0d4201 	bleq	3508f0 <_bss_end+0x33ec40>
      e8:	0000000c 	andeq	r0, r0, ip
      ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      f0:	7c020001 	stcvc	0, cr0, [r2], {1}
      f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      f8:	0000001c 	andeq	r0, r0, ip, lsl r0
      fc:	000000e8 	andeq	r0, r0, r8, ror #1
     100:	00008184 	andeq	r8, r0, r4, lsl #3
     104:	00000058 	andeq	r0, r0, r8, asr r0
     108:	8b080e42 	blhi	203a18 <_bss_end+0x1f1d68>
     10c:	42018e02 	andmi	r8, r1, #2, 28
     110:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     114:	00080d0c 	andeq	r0, r8, ip, lsl #26
     118:	0000001c 	andeq	r0, r0, ip, lsl r0
     11c:	000000e8 	andeq	r0, r0, r8, ror #1
     120:	000081dc 	ldrdeq	r8, [r0], -ip
     124:	00000098 	muleq	r0, r8, r0
     128:	8b040e42 	blhi	103a38 <_bss_end+0xf1d88>
     12c:	0b0d4201 	bleq	350938 <_bss_end+0x33ec88>
     130:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
     134:	000ecb42 	andeq	ip, lr, r2, asr #22
     138:	0000001c 	andeq	r0, r0, ip, lsl r0
     13c:	000000e8 	andeq	r0, r0, r8, ror #1
     140:	00008274 	andeq	r8, r0, r4, ror r2
     144:	00000074 	andeq	r0, r0, r4, ror r0
     148:	8b040e42 	blhi	103a58 <_bss_end+0xf1da8>
     14c:	0b0d4201 	bleq	350958 <_bss_end+0x33eca8>
     150:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     154:	00000ecb 	andeq	r0, r0, fp, asr #29
     158:	0000001c 	andeq	r0, r0, ip, lsl r0
     15c:	000000e8 	andeq	r0, r0, r8, ror #1
     160:	000082e8 	andeq	r8, r0, r8, ror #5
     164:	00000074 	andeq	r0, r0, r4, ror r0
     168:	8b040e42 	blhi	103a78 <_bss_end+0xf1dc8>
     16c:	0b0d4201 	bleq	350978 <_bss_end+0x33ecc8>
     170:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     174:	00000ecb 	andeq	r0, r0, fp, asr #29
     178:	0000001c 	andeq	r0, r0, ip, lsl r0
     17c:	000000e8 	andeq	r0, r0, r8, ror #1
     180:	0000835c 	andeq	r8, r0, ip, asr r3
     184:	00000074 	andeq	r0, r0, r4, ror r0
     188:	8b040e42 	blhi	103a98 <_bss_end+0xf1de8>
     18c:	0b0d4201 	bleq	350998 <_bss_end+0x33ece8>
     190:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     194:	00000ecb 	andeq	r0, r0, fp, asr #29
     198:	0000001c 	andeq	r0, r0, ip, lsl r0
     19c:	000000e8 	andeq	r0, r0, r8, ror #1
     1a0:	000083d0 	ldrdeq	r8, [r0], -r0
     1a4:	000000c8 	andeq	r0, r0, r8, asr #1
     1a8:	8b080e42 	blhi	203ab8 <_bss_end+0x1f1e08>
     1ac:	42018e02 	andmi	r8, r1, #2, 28
     1b0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1b4:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
     1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1bc:	000000e8 	andeq	r0, r0, r8, ror #1
     1c0:	00008498 	muleq	r0, r8, r4
     1c4:	00000074 	andeq	r0, r0, r4, ror r0
     1c8:	8b080e42 	blhi	203ad8 <_bss_end+0x1f1e28>
     1cc:	42018e02 	andmi	r8, r1, #2, 28
     1d0:	74040b0c 	strvc	r0, [r4], #-2828	; 0xfffff4f4
     1d4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1dc:	000000e8 	andeq	r0, r0, r8, ror #1
     1e0:	0000850c 	andeq	r8, r0, ip, lsl #10
     1e4:	000000d8 	ldrdeq	r0, [r0], -r8
     1e8:	8b080e42 	blhi	203af8 <_bss_end+0x1f1e48>
     1ec:	42018e02 	andmi	r8, r1, #2, 28
     1f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1f4:	080d0c66 	stmdaeq	sp, {r1, r2, r5, r6, sl, fp}
     1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1fc:	000000e8 	andeq	r0, r0, r8, ror #1
     200:	000085e4 	andeq	r8, r0, r4, ror #11
     204:	00000084 	andeq	r0, r0, r4, lsl #1
     208:	8b080e42 	blhi	203b18 <_bss_end+0x1f1e68>
     20c:	42018e02 	andmi	r8, r1, #2, 28
     210:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     214:	00080d0c 	andeq	r0, r8, ip, lsl #26
     218:	00000024 	andeq	r0, r0, r4, lsr #32
     21c:	000000e8 	andeq	r0, r0, r8, ror #1
     220:	00008668 	andeq	r8, r0, r8, ror #12
     224:	00000198 	muleq	r0, r8, r1
     228:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     22c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     230:	8b038704 	blhi	e1e48 <_bss_end+0xd0198>
     234:	42018e02 	andmi	r8, r1, #2, 28
     238:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     23c:	180d0cc6 	stmdane	sp, {r1, r2, r6, r7, sl, fp}
     240:	00000024 	andeq	r0, r0, r4, lsr #32
     244:	000000e8 	andeq	r0, r0, r8, ror #1
     248:	00008800 	andeq	r8, r0, r0, lsl #16
     24c:	000001a0 	andeq	r0, r0, r0, lsr #3
     250:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     254:	86058506 	strhi	r8, [r5], -r6, lsl #10
     258:	8b038704 	blhi	e1e70 <_bss_end+0xd01c0>
     25c:	42018e02 	andmi	r8, r1, #2, 28
     260:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     264:	180d0cca 	stmdane	sp, {r1, r3, r6, r7, sl, fp}
     268:	0000001c 	andeq	r0, r0, ip, lsl r0
     26c:	000000e8 	andeq	r0, r0, r8, ror #1
     270:	000089a0 	andeq	r8, r0, r0, lsr #19
     274:	00000054 	andeq	r0, r0, r4, asr r0
     278:	8b080e42 	blhi	203b88 <_bss_end+0x1f1ed8>
     27c:	42018e02 	andmi	r8, r1, #2, 28
     280:	5e040b0c 	vmlapl.f64	d0, d4, d12
     284:	00080d0c 	andeq	r0, r8, ip, lsl #26
     288:	00000018 	andeq	r0, r0, r8, lsl r0
     28c:	000000e8 	andeq	r0, r0, r8, ror #1
     290:	000089f4 	strdeq	r8, [r0], -r4
     294:	0000001c 	andeq	r0, r0, ip, lsl r0
     298:	8b080e42 	blhi	203ba8 <_bss_end+0x1f1ef8>
     29c:	42018e02 	andmi	r8, r1, #2, 28
     2a0:	00040b0c 	andeq	r0, r4, ip, lsl #22
     2a4:	0000000c 	andeq	r0, r0, ip
     2a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2ac:	7c020001 	stcvc	0, cr0, [r2], {1}
     2b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2bc:	000090d8 	ldrdeq	r9, [r0], -r8
     2c0:	00000034 	andeq	r0, r0, r4, lsr r0
     2c4:	8b040e42 	blhi	103bd4 <_bss_end+0xf1f24>
     2c8:	0b0d4201 	bleq	350ad4 <_bss_end+0x33ee24>
     2cc:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     2d0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2d8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2dc:	0000910c 	andeq	r9, r0, ip, lsl #2
     2e0:	00000048 	andeq	r0, r0, r8, asr #32
     2e4:	8b040e42 	blhi	103bf4 <_bss_end+0xf1f44>
     2e8:	0b0d4201 	bleq	350af4 <_bss_end+0x33ee44>
     2ec:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     2f0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2f8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2fc:	00008a10 	andeq	r8, r0, r0, lsl sl
     300:	0000006c 	andeq	r0, r0, ip, rrx
     304:	8b080e42 	blhi	203c14 <_bss_end+0x1f1f64>
     308:	42018e02 	andmi	r8, r1, #2, 28
     30c:	70040b0c 	andvc	r0, r4, ip, lsl #22
     310:	00080d0c 	andeq	r0, r8, ip, lsl #26
     314:	0000001c 	andeq	r0, r0, ip, lsl r0
     318:	000002a4 	andeq	r0, r0, r4, lsr #5
     31c:	00008a7c 	andeq	r8, r0, ip, ror sl
     320:	00000038 	andeq	r0, r0, r8, lsr r0
     324:	8b040e42 	blhi	103c34 <_bss_end+0xf1f84>
     328:	0b0d4201 	bleq	350b34 <_bss_end+0x33ee84>
     32c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     330:	00000ecb 	andeq	r0, r0, fp, asr #29
     334:	0000001c 	andeq	r0, r0, ip, lsl r0
     338:	000002a4 	andeq	r0, r0, r4, lsr #5
     33c:	00008ab4 			; <UNDEFINED> instruction: 0x00008ab4
     340:	00000054 	andeq	r0, r0, r4, asr r0
     344:	8b080e42 	blhi	203c54 <_bss_end+0x1f1fa4>
     348:	42018e02 	andmi	r8, r1, #2, 28
     34c:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
     350:	00080d0c 	andeq	r0, r8, ip, lsl #26
     354:	0000001c 	andeq	r0, r0, ip, lsl r0
     358:	000002a4 	andeq	r0, r0, r4, lsr #5
     35c:	00008b08 	andeq	r8, r0, r8, lsl #22
     360:	000000e0 	andeq	r0, r0, r0, ror #1
     364:	8b080e42 	blhi	203c74 <_bss_end+0x1f1fc4>
     368:	42018e02 	andmi	r8, r1, #2, 28
     36c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     370:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
     374:	0000001c 	andeq	r0, r0, ip, lsl r0
     378:	000002a4 	andeq	r0, r0, r4, lsr #5
     37c:	00008be8 	andeq	r8, r0, r8, ror #23
     380:	000000a4 	andeq	r0, r0, r4, lsr #1
     384:	8b080e42 	blhi	203c94 <_bss_end+0x1f1fe4>
     388:	42018e02 	andmi	r8, r1, #2, 28
     38c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     390:	080d0c4a 	stmdaeq	sp, {r1, r3, r6, sl, fp}
     394:	0000001c 	andeq	r0, r0, ip, lsl r0
     398:	000002a4 	andeq	r0, r0, r4, lsr #5
     39c:	00008c8c 	andeq	r8, r0, ip, lsl #25
     3a0:	00000028 	andeq	r0, r0, r8, lsr #32
     3a4:	8b040e42 	blhi	103cb4 <_bss_end+0xf2004>
     3a8:	0b0d4201 	bleq	350bb4 <_bss_end+0x33ef04>
     3ac:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     3b0:	00000ecb 	andeq	r0, r0, fp, asr #29
     3b4:	00000020 	andeq	r0, r0, r0, lsr #32
     3b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     3bc:	00008cb4 			; <UNDEFINED> instruction: 0x00008cb4
     3c0:	000000ec 	andeq	r0, r0, ip, ror #1
     3c4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     3c8:	8e028b03 	vmlahi.f64	d8, d2, d3
     3cc:	0b0c4201 	bleq	310bd8 <_bss_end+0x2fef28>
     3d0:	0c6c0204 	sfmeq	f0, 2, [ip], #-16
     3d4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3dc:	000002a4 	andeq	r0, r0, r4, lsr #5
     3e0:	00008da0 	andeq	r8, r0, r0, lsr #27
     3e4:	000000ec 	andeq	r0, r0, ip, ror #1
     3e8:	8b080e42 	blhi	203cf8 <_bss_end+0x1f2048>
     3ec:	42018e02 	andmi	r8, r1, #2, 28
     3f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     3f4:	080d0c6c 	stmdaeq	sp, {r2, r3, r5, r6, sl, fp}
     3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3fc:	000002a4 	andeq	r0, r0, r4, lsr #5
     400:	00008e8c 	andeq	r8, r0, ip, lsl #29
     404:	00000078 	andeq	r0, r0, r8, ror r0
     408:	8b080e42 	blhi	203d18 <_bss_end+0x1f2068>
     40c:	42018e02 	andmi	r8, r1, #2, 28
     410:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     414:	00080d0c 	andeq	r0, r8, ip, lsl #26
     418:	00000020 	andeq	r0, r0, r0, lsr #32
     41c:	000002a4 	andeq	r0, r0, r4, lsr #5
     420:	00008f04 	andeq	r8, r0, r4, lsl #30
     424:	0000015c 	andeq	r0, r0, ip, asr r1
     428:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     42c:	8e028b03 	vmlahi.f64	d8, d2, d3
     430:	0b0c4201 	bleq	310c3c <_bss_end+0x2fef8c>
     434:	0ca40204 	sfmeq	f0, 4, [r4], #16
     438:	00000c0d 	andeq	r0, r0, sp, lsl #24
     43c:	0000001c 	andeq	r0, r0, ip, lsl r0
     440:	000002a4 	andeq	r0, r0, r4, lsr #5
     444:	00009060 	andeq	r9, r0, r0, rrx
     448:	0000005c 	andeq	r0, r0, ip, asr r0
     44c:	8b080e42 	blhi	203d5c <_bss_end+0x1f20ac>
     450:	42018e02 	andmi	r8, r1, #2, 28
     454:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     458:	00080d0c 	andeq	r0, r8, ip, lsl #26
     45c:	00000018 	andeq	r0, r0, r8, lsl r0
     460:	000002a4 	andeq	r0, r0, r4, lsr #5
     464:	000090bc 	strheq	r9, [r0], -ip
     468:	0000001c 	andeq	r0, r0, ip, lsl r0
     46c:	8b080e42 	blhi	203d7c <_bss_end+0x1f20cc>
     470:	42018e02 	andmi	r8, r1, #2, 28
     474:	00040b0c 	andeq	r0, r4, ip, lsl #22
     478:	0000000c 	andeq	r0, r0, ip
     47c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     480:	7c020001 	stcvc	0, cr0, [r2], {1}
     484:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     488:	0000001c 	andeq	r0, r0, ip, lsl r0
     48c:	00000478 	andeq	r0, r0, r8, ror r4
     490:	00009154 	andeq	r9, r0, r4, asr r1
     494:	00000078 	andeq	r0, r0, r8, ror r0
     498:	8b040e42 	blhi	103da8 <_bss_end+0xf20f8>
     49c:	0b0d4201 	bleq	350ca8 <_bss_end+0x33eff8>
     4a0:	420d0d74 	andmi	r0, sp, #116, 26	; 0x1d00
     4a4:	00000ecb 	andeq	r0, r0, fp, asr #29
     4a8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4ac:	00000478 	andeq	r0, r0, r8, ror r4
     4b0:	0000979c 	muleq	r0, ip, r7
     4b4:	00000038 	andeq	r0, r0, r8, lsr r0
     4b8:	8b040e42 	blhi	103dc8 <_bss_end+0xf2118>
     4bc:	0b0d4201 	bleq	350cc8 <_bss_end+0x33f018>
     4c0:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     4c4:	00000ecb 	andeq	r0, r0, fp, asr #29
     4c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4cc:	00000478 	andeq	r0, r0, r8, ror r4
     4d0:	000091cc 	andeq	r9, r0, ip, asr #3
     4d4:	000000a8 	andeq	r0, r0, r8, lsr #1
     4d8:	8b080e42 	blhi	203de8 <_bss_end+0x1f2138>
     4dc:	42018e02 	andmi	r8, r1, #2, 28
     4e0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     4e4:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
     4e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4ec:	00000478 	andeq	r0, r0, r8, ror r4
     4f0:	000097d4 	ldrdeq	r9, [r0], -r4
     4f4:	00000088 	andeq	r0, r0, r8, lsl #1
     4f8:	8b080e42 	blhi	203e08 <_bss_end+0x1f2158>
     4fc:	42018e02 	andmi	r8, r1, #2, 28
     500:	7e040b0c 	vmlavc.f64	d0, d4, d12
     504:	00080d0c 	andeq	r0, r8, ip, lsl #26
     508:	0000001c 	andeq	r0, r0, ip, lsl r0
     50c:	00000478 	andeq	r0, r0, r8, ror r4
     510:	00009274 	andeq	r9, r0, r4, ror r2
     514:	00000130 	andeq	r0, r0, r0, lsr r1
     518:	8b040e42 	blhi	103e28 <_bss_end+0xf2178>
     51c:	0b0d4201 	bleq	350d28 <_bss_end+0x33f078>
     520:	0d0d9002 	stceq	0, cr9, [sp, #-8]
     524:	000ecb42 	andeq	ip, lr, r2, asr #22
     528:	0000001c 	andeq	r0, r0, ip, lsl r0
     52c:	00000478 	andeq	r0, r0, r8, ror r4
     530:	0000985c 	andeq	r9, r0, ip, asr r8
     534:	0000002c 	andeq	r0, r0, ip, lsr #32
     538:	8b040e42 	blhi	103e48 <_bss_end+0xf2198>
     53c:	0b0d4201 	bleq	350d48 <_bss_end+0x33f098>
     540:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     544:	00000ecb 	andeq	r0, r0, fp, asr #29
     548:	0000001c 	andeq	r0, r0, ip, lsl r0
     54c:	00000478 	andeq	r0, r0, r8, ror r4
     550:	000093a4 	andeq	r9, r0, r4, lsr #7
     554:	000000a8 	andeq	r0, r0, r8, lsr #1
     558:	8b080e42 	blhi	203e68 <_bss_end+0x1f21b8>
     55c:	42018e02 	andmi	r8, r1, #2, 28
     560:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     564:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
     568:	0000001c 	andeq	r0, r0, ip, lsl r0
     56c:	00000478 	andeq	r0, r0, r8, ror r4
     570:	0000944c 	andeq	r9, r0, ip, asr #8
     574:	00000078 	andeq	r0, r0, r8, ror r0
     578:	8b080e42 	blhi	203e88 <_bss_end+0x1f21d8>
     57c:	42018e02 	andmi	r8, r1, #2, 28
     580:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     584:	00080d0c 	andeq	r0, r8, ip, lsl #26
     588:	0000001c 	andeq	r0, r0, ip, lsl r0
     58c:	00000478 	andeq	r0, r0, r8, ror r4
     590:	000094c4 	andeq	r9, r0, r4, asr #9
     594:	00000034 	andeq	r0, r0, r4, lsr r0
     598:	8b040e42 	blhi	103ea8 <_bss_end+0xf21f8>
     59c:	0b0d4201 	bleq	350da8 <_bss_end+0x33f0f8>
     5a0:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     5a4:	00000ecb 	andeq	r0, r0, fp, asr #29
     5a8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5ac:	00000478 	andeq	r0, r0, r8, ror r4
     5b0:	000094f8 	strdeq	r9, [r0], -r8
     5b4:	00000054 	andeq	r0, r0, r4, asr r0
     5b8:	8b080e42 	blhi	203ec8 <_bss_end+0x1f2218>
     5bc:	42018e02 	andmi	r8, r1, #2, 28
     5c0:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     5c4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5cc:	00000478 	andeq	r0, r0, r8, ror r4
     5d0:	0000954c 	andeq	r9, r0, ip, asr #10
     5d4:	00000060 	andeq	r0, r0, r0, rrx
     5d8:	8b080e42 	blhi	203ee8 <_bss_end+0x1f2238>
     5dc:	42018e02 	andmi	r8, r1, #2, 28
     5e0:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     5e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5ec:	00000478 	andeq	r0, r0, r8, ror r4
     5f0:	000095ac 	andeq	r9, r0, ip, lsr #11
     5f4:	0000017c 	andeq	r0, r0, ip, ror r1
     5f8:	8b080e42 	blhi	203f08 <_bss_end+0x1f2258>
     5fc:	42018e02 	andmi	r8, r1, #2, 28
     600:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     604:	080d0cb6 	stmdaeq	sp, {r1, r2, r4, r5, r7, sl, fp}
     608:	0000001c 	andeq	r0, r0, ip, lsl r0
     60c:	00000478 	andeq	r0, r0, r8, ror r4
     610:	00009728 	andeq	r9, r0, r8, lsr #14
     614:	00000058 	andeq	r0, r0, r8, asr r0
     618:	8b080e42 	blhi	203f28 <_bss_end+0x1f2278>
     61c:	42018e02 	andmi	r8, r1, #2, 28
     620:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     624:	00080d0c 	andeq	r0, r8, ip, lsl #26
     628:	00000018 	andeq	r0, r0, r8, lsl r0
     62c:	00000478 	andeq	r0, r0, r8, ror r4
     630:	00009780 	andeq	r9, r0, r0, lsl #15
     634:	0000001c 	andeq	r0, r0, ip, lsl r0
     638:	8b080e42 	blhi	203f48 <_bss_end+0x1f2298>
     63c:	42018e02 	andmi	r8, r1, #2, 28
     640:	00040b0c 	andeq	r0, r4, ip, lsl #22
     644:	0000000c 	andeq	r0, r0, ip
     648:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     64c:	7c020001 	stcvc	0, cr0, [r2], {1}
     650:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     654:	0000001c 	andeq	r0, r0, ip, lsl r0
     658:	00000644 	andeq	r0, r0, r4, asr #12
     65c:	0000ab00 	andeq	sl, r0, r0, lsl #22
     660:	00000030 	andeq	r0, r0, r0, lsr r0
     664:	8b080e42 	blhi	203f74 <_bss_end+0x1f22c4>
     668:	42018e02 	andmi	r8, r1, #2, 28
     66c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     670:	00080d0c 	andeq	r0, r8, ip, lsl #26
     674:	0000001c 	andeq	r0, r0, ip, lsl r0
     678:	00000644 	andeq	r0, r0, r4, asr #12
     67c:	00009888 	andeq	r9, r0, r8, lsl #17
     680:	00000064 	andeq	r0, r0, r4, rrx
     684:	8b040e42 	blhi	103f94 <_bss_end+0xf22e4>
     688:	0b0d4201 	bleq	350e94 <_bss_end+0x33f1e4>
     68c:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
     690:	00000ecb 	andeq	r0, r0, fp, asr #29
     694:	00000020 	andeq	r0, r0, r0, lsr #32
     698:	00000644 	andeq	r0, r0, r4, asr #12
     69c:	000098ec 	andeq	r9, r0, ip, ror #17
     6a0:	00000734 	andeq	r0, r0, r4, lsr r7
     6a4:	8b080e42 	blhi	203fb4 <_bss_end+0x1f2304>
     6a8:	42018e02 	andmi	r8, r1, #2, 28
     6ac:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     6b0:	0d0c0394 	stceq	3, cr0, [ip, #-592]	; 0xfffffdb0
     6b4:	00000008 	andeq	r0, r0, r8
     6b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6bc:	00000644 	andeq	r0, r0, r4, asr #12
     6c0:	0000a020 	andeq	sl, r0, r0, lsr #32
     6c4:	00000094 	muleq	r0, r4, r0
     6c8:	8b080e42 	blhi	203fd8 <_bss_end+0x1f2328>
     6cc:	42018e02 	andmi	r8, r1, #2, 28
     6d0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     6d4:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
     6d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6dc:	00000644 	andeq	r0, r0, r4, asr #12
     6e0:	0000a0b4 	strheq	sl, [r0], -r4
     6e4:	000000d4 	ldrdeq	r0, [r0], -r4
     6e8:	8b080e42 	blhi	203ff8 <_bss_end+0x1f2348>
     6ec:	42018e02 	andmi	r8, r1, #2, 28
     6f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     6f4:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     6f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6fc:	00000644 	andeq	r0, r0, r4, asr #12
     700:	0000a188 	andeq	sl, r0, r8, lsl #3
     704:	00000028 	andeq	r0, r0, r8, lsr #32
     708:	8b040e42 	blhi	104018 <_bss_end+0xf2368>
     70c:	0b0d4201 	bleq	350f18 <_bss_end+0x33f268>
     710:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     714:	00000ecb 	andeq	r0, r0, fp, asr #29
     718:	0000001c 	andeq	r0, r0, ip, lsl r0
     71c:	00000644 	andeq	r0, r0, r4, asr #12
     720:	0000a1b0 			; <UNDEFINED> instruction: 0x0000a1b0
     724:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     728:	8b080e42 	blhi	204038 <_bss_end+0x1f2388>
     72c:	42018e02 	andmi	r8, r1, #2, 28
     730:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     734:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
     738:	0000001c 	andeq	r0, r0, ip, lsl r0
     73c:	00000644 	andeq	r0, r0, r4, asr #12
     740:	0000a280 	andeq	sl, r0, r0, lsl #5
     744:	00000148 	andeq	r0, r0, r8, asr #2
     748:	8b040e42 	blhi	104058 <_bss_end+0xf23a8>
     74c:	0b0d4201 	bleq	350f58 <_bss_end+0x33f2a8>
     750:	0d0d9c02 	stceq	12, cr9, [sp, #-8]
     754:	000ecb42 	andeq	ip, lr, r2, asr #22
     758:	00000020 	andeq	r0, r0, r0, lsr #32
     75c:	00000644 	andeq	r0, r0, r4, asr #12
     760:	0000a3c8 	andeq	sl, r0, r8, asr #7
     764:	00000218 	andeq	r0, r0, r8, lsl r2
     768:	8b080e42 	blhi	204078 <_bss_end+0x1f23c8>
     76c:	42018e02 	andmi	r8, r1, #2, 28
     770:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     774:	0d0c0106 	stfeqs	f0, [ip, #-24]	; 0xffffffe8
     778:	00000008 	andeq	r0, r0, r8
     77c:	00000020 	andeq	r0, r0, r0, lsr #32
     780:	00000644 	andeq	r0, r0, r4, asr #12
     784:	0000a5e0 	andeq	sl, r0, r0, ror #11
     788:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
     78c:	8b080e42 	blhi	20409c <_bss_end+0x1f23ec>
     790:	42018e02 	andmi	r8, r1, #2, 28
     794:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     798:	0d0c0252 	sfmeq	f0, 4, [ip, #-328]	; 0xfffffeb8
     79c:	00000008 	andeq	r0, r0, r8
     7a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7a4:	00000644 	andeq	r0, r0, r4, asr #12
     7a8:	0000ab30 	andeq	sl, r0, r0, lsr fp
     7ac:	00000070 	andeq	r0, r0, r0, ror r0
     7b0:	8b040e42 	blhi	1040c0 <_bss_end+0xf2410>
     7b4:	0b0d4201 	bleq	350fc0 <_bss_end+0x33f310>
     7b8:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
     7bc:	00000ecb 	andeq	r0, r0, fp, asr #29
     7c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7c4:	00000644 	andeq	r0, r0, r4, asr #12
     7c8:	0000aba0 	andeq	sl, r0, r0, lsr #23
     7cc:	00000070 	andeq	r0, r0, r0, ror r0
     7d0:	8b040e42 	blhi	1040e0 <_bss_end+0xf2430>
     7d4:	0b0d4201 	bleq	350fe0 <_bss_end+0x33f330>
     7d8:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
     7dc:	00000ecb 	andeq	r0, r0, fp, asr #29
     7e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7e4:	00000644 	andeq	r0, r0, r4, asr #12
     7e8:	0000ac10 	andeq	sl, r0, r0, lsl ip
     7ec:	0000006c 	andeq	r0, r0, ip, rrx
     7f0:	8b040e42 	blhi	104100 <_bss_end+0xf2450>
     7f4:	0b0d4201 	bleq	351000 <_bss_end+0x33f350>
     7f8:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
     7fc:	00000ecb 	andeq	r0, r0, fp, asr #29
     800:	0000001c 	andeq	r0, r0, ip, lsl r0
     804:	00000644 	andeq	r0, r0, r4, asr #12
     808:	0000aa90 	muleq	r0, r0, sl
     80c:	00000054 	andeq	r0, r0, r4, asr r0
     810:	8b080e42 	blhi	204120 <_bss_end+0x1f2470>
     814:	42018e02 	andmi	r8, r1, #2, 28
     818:	5e040b0c 	vmlapl.f64	d0, d4, d12
     81c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     820:	00000018 	andeq	r0, r0, r8, lsl r0
     824:	00000644 	andeq	r0, r0, r4, asr #12
     828:	0000aae4 	andeq	sl, r0, r4, ror #21
     82c:	0000001c 	andeq	r0, r0, ip, lsl r0
     830:	8b080e42 	blhi	204140 <_bss_end+0x1f2490>
     834:	42018e02 	andmi	r8, r1, #2, 28
     838:	00040b0c 	andeq	r0, r4, ip, lsl #22
     83c:	0000000c 	andeq	r0, r0, ip
     840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     844:	7c020001 	stcvc	0, cr0, [r2], {1}
     848:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     84c:	0000001c 	andeq	r0, r0, ip, lsl r0
     850:	0000083c 	andeq	r0, r0, ip, lsr r8
     854:	0000ac7c 	andeq	sl, r0, ip, ror ip
     858:	0000003c 	andeq	r0, r0, ip, lsr r0
     85c:	8b040e42 	blhi	10416c <_bss_end+0xf24bc>
     860:	0b0d4201 	bleq	35106c <_bss_end+0x33f3bc>
     864:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
     868:	00000ecb 	andeq	r0, r0, fp, asr #29
     86c:	0000001c 	andeq	r0, r0, ip, lsl r0
     870:	0000083c 	andeq	r0, r0, ip, lsr r8
     874:	0000acb8 			; <UNDEFINED> instruction: 0x0000acb8
     878:	0000006c 	andeq	r0, r0, ip, rrx
     87c:	8b080e42 	blhi	20418c <_bss_end+0x1f24dc>
     880:	42018e02 	andmi	r8, r1, #2, 28
     884:	6e040b0c 	vmlavs.f64	d0, d4, d12
     888:	00080d0c 	andeq	r0, r8, ip, lsl #26
     88c:	0000001c 	andeq	r0, r0, ip, lsl r0
     890:	0000083c 	andeq	r0, r0, ip, lsr r8
     894:	0000ad24 	andeq	sl, r0, r4, lsr #26
     898:	00000050 	andeq	r0, r0, r0, asr r0
     89c:	8b080e42 	blhi	2041ac <_bss_end+0x1f24fc>
     8a0:	42018e02 	andmi	r8, r1, #2, 28
     8a4:	60040b0c 	andvs	r0, r4, ip, lsl #22
     8a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
     8ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     8b0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8b4:	0000ad74 	andeq	sl, r0, r4, ror sp
     8b8:	00000028 	andeq	r0, r0, r8, lsr #32
     8bc:	8b040e42 	blhi	1041cc <_bss_end+0xf251c>
     8c0:	0b0d4201 	bleq	3510cc <_bss_end+0x33f41c>
     8c4:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     8c8:	00000ecb 	andeq	r0, r0, fp, asr #29
     8cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8d0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8d4:	0000ad9c 	muleq	r0, ip, sp
     8d8:	00000094 	muleq	r0, r4, r0
     8dc:	8b080e42 	blhi	2041ec <_bss_end+0x1f253c>
     8e0:	42018e02 	andmi	r8, r1, #2, 28
     8e4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     8e8:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
     8ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     8f0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8f4:	0000ae30 	andeq	sl, r0, r0, lsr lr
     8f8:	00000048 	andeq	r0, r0, r8, asr #32
     8fc:	8b040e42 	blhi	10420c <_bss_end+0xf255c>
     900:	0b0d4201 	bleq	35110c <_bss_end+0x33f45c>
     904:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     908:	00000ecb 	andeq	r0, r0, fp, asr #29
     90c:	0000001c 	andeq	r0, r0, ip, lsl r0
     910:	0000083c 	andeq	r0, r0, ip, lsr r8
     914:	0000ae78 	andeq	sl, r0, r8, ror lr
     918:	0000004c 	andeq	r0, r0, ip, asr #32
     91c:	8b080e42 	blhi	20422c <_bss_end+0x1f257c>
     920:	42018e02 	andmi	r8, r1, #2, 28
     924:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     928:	00080d0c 	andeq	r0, r8, ip, lsl #26
     92c:	00000018 	andeq	r0, r0, r8, lsl r0
     930:	0000083c 	andeq	r0, r0, ip, lsr r8
     934:	0000aec4 	andeq	sl, r0, r4, asr #29
     938:	0000001c 	andeq	r0, r0, ip, lsl r0
     93c:	8b080e42 	blhi	20424c <_bss_end+0x1f259c>
     940:	42018e02 	andmi	r8, r1, #2, 28
     944:	00040b0c 	andeq	r0, r4, ip, lsl #22
     948:	0000000c 	andeq	r0, r0, ip
     94c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     950:	7c020001 	stcvc	0, cr0, [r2], {1}
     954:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     958:	0000001c 	andeq	r0, r0, ip, lsl r0
     95c:	00000948 	andeq	r0, r0, r8, asr #18
     960:	0000aee0 	andeq	sl, r0, r0, ror #29
     964:	00000054 	andeq	r0, r0, r4, asr r0
     968:	8b040e42 	blhi	104278 <_bss_end+0xf25c8>
     96c:	0b0d4201 	bleq	351178 <_bss_end+0x33f4c8>
     970:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
     974:	00000ecb 	andeq	r0, r0, fp, asr #29
     978:	0000001c 	andeq	r0, r0, ip, lsl r0
     97c:	00000948 	andeq	r0, r0, r8, asr #18
     980:	0000af34 	andeq	sl, r0, r4, lsr pc
     984:	00000174 	andeq	r0, r0, r4, ror r1
     988:	8b080e42 	blhi	204298 <_bss_end+0x1f25e8>
     98c:	42018e02 	andmi	r8, r1, #2, 28
     990:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     994:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
     998:	0000001c 	andeq	r0, r0, ip, lsl r0
     99c:	00000948 	andeq	r0, r0, r8, asr #18
     9a0:	0000b0a8 	andeq	fp, r0, r8, lsr #1
     9a4:	000000d8 	ldrdeq	r0, [r0], -r8
     9a8:	8b080e42 	blhi	2042b8 <_bss_end+0x1f2608>
     9ac:	42018e02 	andmi	r8, r1, #2, 28
     9b0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9b4:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	00000948 	andeq	r0, r0, r8, asr #18
     9c0:	0000b180 	andeq	fp, r0, r0, lsl #3
     9c4:	00000028 	andeq	r0, r0, r8, lsr #32
     9c8:	8b040e42 	blhi	1042d8 <_bss_end+0xf2628>
     9cc:	0b0d4201 	bleq	3511d8 <_bss_end+0x33f528>
     9d0:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     9d4:	00000ecb 	andeq	r0, r0, fp, asr #29
     9d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9dc:	00000948 	andeq	r0, r0, r8, asr #18
     9e0:	0000b1a8 	andeq	fp, r0, r8, lsr #3
     9e4:	00000124 	andeq	r0, r0, r4, lsr #2
     9e8:	8b080e42 	blhi	2042f8 <_bss_end+0x1f2648>
     9ec:	42018e02 	andmi	r8, r1, #2, 28
     9f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9f4:	080d0c8a 	stmdaeq	sp, {r1, r3, r7, sl, fp}
     9f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9fc:	00000948 	andeq	r0, r0, r8, asr #18
     a00:	0000b2cc 	andeq	fp, r0, ip, asr #5
     a04:	00000164 	andeq	r0, r0, r4, ror #2
     a08:	8b080e42 	blhi	204318 <_bss_end+0x1f2668>
     a0c:	42018e02 	andmi	r8, r1, #2, 28
     a10:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a14:	080d0caa 	stmdaeq	sp, {r1, r3, r5, r7, sl, fp}
     a18:	0000001c 	andeq	r0, r0, ip, lsl r0
     a1c:	00000948 	andeq	r0, r0, r8, asr #18
     a20:	0000b430 	andeq	fp, r0, r0, lsr r4
     a24:	00000058 	andeq	r0, r0, r8, asr r0
     a28:	8b080e42 	blhi	204338 <_bss_end+0x1f2688>
     a2c:	42018e02 	andmi	r8, r1, #2, 28
     a30:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     a34:	00080d0c 	andeq	r0, r8, ip, lsl #26
     a38:	00000018 	andeq	r0, r0, r8, lsl r0
     a3c:	00000948 	andeq	r0, r0, r8, asr #18
     a40:	0000b488 	andeq	fp, r0, r8, lsl #9
     a44:	0000001c 	andeq	r0, r0, ip, lsl r0
     a48:	8b080e42 	blhi	204358 <_bss_end+0x1f26a8>
     a4c:	42018e02 	andmi	r8, r1, #2, 28
     a50:	00040b0c 	andeq	r0, r4, ip, lsl #22
     a54:	0000000c 	andeq	r0, r0, ip
     a58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a5c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a60:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a64:	0000001c 	andeq	r0, r0, ip, lsl r0
     a68:	00000a54 	andeq	r0, r0, r4, asr sl
     a6c:	0000b4a4 	andeq	fp, r0, r4, lsr #9
     a70:	00000040 	andeq	r0, r0, r0, asr #32
     a74:	8b040e42 	blhi	104384 <_bss_end+0xf26d4>
     a78:	0b0d4201 	bleq	351284 <_bss_end+0x33f5d4>
     a7c:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     a80:	00000ecb 	andeq	r0, r0, fp, asr #29
     a84:	0000001c 	andeq	r0, r0, ip, lsl r0
     a88:	00000a54 	andeq	r0, r0, r4, asr sl
     a8c:	0000b4e4 	andeq	fp, r0, r4, ror #9
     a90:	00000038 	andeq	r0, r0, r8, lsr r0
     a94:	8b040e42 	blhi	1043a4 <_bss_end+0xf26f4>
     a98:	0b0d4201 	bleq	3512a4 <_bss_end+0x33f5f4>
     a9c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     aa0:	00000ecb 	andeq	r0, r0, fp, asr #29
     aa4:	00000020 	andeq	r0, r0, r0, lsr #32
     aa8:	00000a54 	andeq	r0, r0, r4, asr sl
     aac:	0000b51c 	andeq	fp, r0, ip, lsl r5
     ab0:	000000cc 	andeq	r0, r0, ip, asr #1
     ab4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     ab8:	8e028b03 	vmlahi.f64	d8, d2, d3
     abc:	0b0c4201 	bleq	3112c8 <_bss_end+0x2ff618>
     ac0:	0c600204 	sfmeq	f0, 2, [r0], #-16
     ac4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     ac8:	0000001c 	andeq	r0, r0, ip, lsl r0
     acc:	00000a54 	andeq	r0, r0, r4, asr sl
     ad0:	0000b5e8 	andeq	fp, r0, r8, ror #11
     ad4:	0000004c 	andeq	r0, r0, ip, asr #32
     ad8:	8b080e42 	blhi	2043e8 <_bss_end+0x1f2738>
     adc:	42018e02 	andmi	r8, r1, #2, 28
     ae0:	60040b0c 	andvs	r0, r4, ip, lsl #22
     ae4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ae8:	0000001c 	andeq	r0, r0, ip, lsl r0
     aec:	00000a54 	andeq	r0, r0, r4, asr sl
     af0:	0000b634 	andeq	fp, r0, r4, lsr r6
     af4:	00000050 	andeq	r0, r0, r0, asr r0
     af8:	8b080e42 	blhi	204408 <_bss_end+0x1f2758>
     afc:	42018e02 	andmi	r8, r1, #2, 28
     b00:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     b04:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b08:	0000001c 	andeq	r0, r0, ip, lsl r0
     b0c:	00000a54 	andeq	r0, r0, r4, asr sl
     b10:	0000b684 	andeq	fp, r0, r4, lsl #13
     b14:	00000040 	andeq	r0, r0, r0, asr #32
     b18:	8b080e42 	blhi	204428 <_bss_end+0x1f2778>
     b1c:	42018e02 	andmi	r8, r1, #2, 28
     b20:	5a040b0c 	bpl	103758 <_bss_end+0xf1aa8>
     b24:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b28:	0000001c 	andeq	r0, r0, ip, lsl r0
     b2c:	00000a54 	andeq	r0, r0, r4, asr sl
     b30:	0000b6c4 	andeq	fp, r0, r4, asr #13
     b34:	00000054 	andeq	r0, r0, r4, asr r0
     b38:	8b080e42 	blhi	204448 <_bss_end+0x1f2798>
     b3c:	42018e02 	andmi	r8, r1, #2, 28
     b40:	5e040b0c 	vmlapl.f64	d0, d4, d12
     b44:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b48:	00000018 	andeq	r0, r0, r8, lsl r0
     b4c:	00000a54 	andeq	r0, r0, r4, asr sl
     b50:	0000b718 	andeq	fp, r0, r8, lsl r7
     b54:	0000001c 	andeq	r0, r0, ip, lsl r0
     b58:	8b080e42 	blhi	204468 <_bss_end+0x1f27b8>
     b5c:	42018e02 	andmi	r8, r1, #2, 28
     b60:	00040b0c 	andeq	r0, r4, ip, lsl #22
     b64:	0000000c 	andeq	r0, r0, ip
     b68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     b70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b74:	0000001c 	andeq	r0, r0, ip, lsl r0
     b78:	00000b64 	andeq	r0, r0, r4, ror #22
     b7c:	0000b734 	andeq	fp, r0, r4, lsr r7
     b80:	00000040 	andeq	r0, r0, r0, asr #32
     b84:	8b040e42 	blhi	104494 <_bss_end+0xf27e4>
     b88:	0b0d4201 	bleq	351394 <_bss_end+0x33f6e4>
     b8c:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     b90:	00000ecb 	andeq	r0, r0, fp, asr #29
     b94:	0000001c 	andeq	r0, r0, ip, lsl r0
     b98:	00000b64 	andeq	r0, r0, r4, ror #22
     b9c:	0000b774 	andeq	fp, r0, r4, ror r7
     ba0:	000000e8 	andeq	r0, r0, r8, ror #1
     ba4:	8b040e42 	blhi	1044b4 <_bss_end+0xf2804>
     ba8:	0b0d4201 	bleq	3513b4 <_bss_end+0x33f704>
     bac:	0d0d6c02 	stceq	12, cr6, [sp, #-8]
     bb0:	000ecb42 	andeq	ip, lr, r2, asr #22
     bb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bb8:	00000b64 	andeq	r0, r0, r4, ror #22
     bbc:	0000b85c 	andeq	fp, r0, ip, asr r8
     bc0:	00000068 	andeq	r0, r0, r8, rrx
     bc4:	8b040e42 	blhi	1044d4 <_bss_end+0xf2824>
     bc8:	0b0d4201 	bleq	3513d4 <_bss_end+0x33f724>
     bcc:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
     bd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     bd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bd8:	00000b64 	andeq	r0, r0, r4, ror #22
     bdc:	0000b8c4 	andeq	fp, r0, r4, asr #17
     be0:	00000038 	andeq	r0, r0, r8, lsr r0
     be4:	8b040e42 	blhi	1044f4 <_bss_end+0xf2844>
     be8:	0b0d4201 	bleq	3513f4 <_bss_end+0x33f744>
     bec:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     bf0:	00000ecb 	andeq	r0, r0, fp, asr #29
     bf4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bf8:	00000b64 	andeq	r0, r0, r4, ror #22
     bfc:	0000b8fc 	strdeq	fp, [r0], -ip
     c00:	00000048 	andeq	r0, r0, r8, asr #32
     c04:	8b040e42 	blhi	104514 <_bss_end+0xf2864>
     c08:	0b0d4201 	bleq	351414 <_bss_end+0x33f764>
     c0c:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     c10:	00000ecb 	andeq	r0, r0, fp, asr #29
     c14:	0000001c 	andeq	r0, r0, ip, lsl r0
     c18:	00000b64 	andeq	r0, r0, r4, ror #22
     c1c:	0000b944 	andeq	fp, r0, r4, asr #18
     c20:	00000054 	andeq	r0, r0, r4, asr r0
     c24:	8b080e42 	blhi	204534 <_bss_end+0x1f2884>
     c28:	42018e02 	andmi	r8, r1, #2, 28
     c2c:	5e040b0c 	vmlapl.f64	d0, d4, d12
     c30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     c34:	00000018 	andeq	r0, r0, r8, lsl r0
     c38:	00000b64 	andeq	r0, r0, r4, ror #22
     c3c:	0000b998 	muleq	r0, r8, r9
     c40:	0000001c 	andeq	r0, r0, ip, lsl r0
     c44:	8b080e42 	blhi	204554 <_bss_end+0x1f28a4>
     c48:	42018e02 	andmi	r8, r1, #2, 28
     c4c:	00040b0c 	andeq	r0, r4, ip, lsl #22
     c50:	0000000c 	andeq	r0, r0, ip
     c54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c58:	7c020001 	stcvc	0, cr0, [r2], {1}
     c5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000c50 	andeq	r0, r0, r0, asr ip
     c68:	0000c210 	andeq	ip, r0, r0, lsl r2
     c6c:	0000003c 	andeq	r0, r0, ip, lsr r0
     c70:	8b040e42 	blhi	104580 <_bss_end+0xf28d0>
     c74:	0b0d4201 	bleq	351480 <_bss_end+0x33f7d0>
     c78:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
     c7c:	00000ecb 	andeq	r0, r0, fp, asr #29
     c80:	0000001c 	andeq	r0, r0, ip, lsl r0
     c84:	00000c50 	andeq	r0, r0, r0, asr ip
     c88:	0000b9b4 			; <UNDEFINED> instruction: 0x0000b9b4
     c8c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     c90:	8b080e42 	blhi	2045a0 <_bss_end+0x1f28f0>
     c94:	42018e02 	andmi	r8, r1, #2, 28
     c98:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c9c:	080d0cd0 	stmdaeq	sp, {r4, r6, r7, sl, fp}
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000c50 	andeq	r0, r0, r0, asr ip
     ca8:	0000bb6c 	andeq	fp, r0, ip, ror #22
     cac:	00000084 	andeq	r0, r0, r4, lsl #1
     cb0:	8b080e42 	blhi	2045c0 <_bss_end+0x1f2910>
     cb4:	42018e02 	andmi	r8, r1, #2, 28
     cb8:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     cbc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     cc0:	00000020 	andeq	r0, r0, r0, lsr #32
     cc4:	00000c50 	andeq	r0, r0, r0, asr ip
     cc8:	0000bbf0 	strdeq	fp, [r0], -r0
     ccc:	0000035c 	andeq	r0, r0, ip, asr r3
     cd0:	8b080e42 	blhi	2045e0 <_bss_end+0x1f2930>
     cd4:	42018e02 	andmi	r8, r1, #2, 28
     cd8:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     cdc:	0d0c018e 	stfeqs	f0, [ip, #-568]	; 0xfffffdc8
     ce0:	00000008 	andeq	r0, r0, r8
     ce4:	00000020 	andeq	r0, r0, r0, lsr #32
     ce8:	00000c50 	andeq	r0, r0, r0, asr ip
     cec:	0000bf4c 	andeq	fp, r0, ip, asr #30
     cf0:	0000025c 	andeq	r0, r0, ip, asr r2
     cf4:	8b080e42 	blhi	204604 <_bss_end+0x1f2954>
     cf8:	42018e02 	andmi	r8, r1, #2, 28
     cfc:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     d00:	0d0c011e 	stfeqs	f0, [ip, #-120]	; 0xffffff88
     d04:	00000008 	andeq	r0, r0, r8
     d08:	0000001c 	andeq	r0, r0, ip, lsl r0
     d0c:	00000c50 	andeq	r0, r0, r0, asr ip
     d10:	0000c24c 	andeq	ip, r0, ip, asr #4
     d14:	0000002c 	andeq	r0, r0, ip, lsr #32
     d18:	8b080e42 	blhi	204628 <_bss_end+0x1f2978>
     d1c:	42018e02 	andmi	r8, r1, #2, 28
     d20:	50040b0c 	andpl	r0, r4, ip, lsl #22
     d24:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d28:	0000001c 	andeq	r0, r0, ip, lsl r0
     d2c:	00000c50 	andeq	r0, r0, r0, asr ip
     d30:	0000c1a8 	andeq	ip, r0, r8, lsr #3
     d34:	0000004c 	andeq	r0, r0, ip, asr #32
     d38:	8b080e42 	blhi	204648 <_bss_end+0x1f2998>
     d3c:	42018e02 	andmi	r8, r1, #2, 28
     d40:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     d44:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d48:	00000018 	andeq	r0, r0, r8, lsl r0
     d4c:	00000c50 	andeq	r0, r0, r0, asr ip
     d50:	0000c1f4 	strdeq	ip, [r0], -r4
     d54:	0000001c 	andeq	r0, r0, ip, lsl r0
     d58:	8b080e42 	blhi	204668 <_bss_end+0x1f29b8>
     d5c:	42018e02 	andmi	r8, r1, #2, 28
     d60:	00040b0c 	andeq	r0, r4, ip, lsl #22
     d64:	0000000c 	andeq	r0, r0, ip
     d68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     d70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d74:	0000001c 	andeq	r0, r0, ip, lsl r0
     d78:	00000d64 	andeq	r0, r0, r4, ror #26
     d7c:	0000c278 	andeq	ip, r0, r8, ror r2
     d80:	0000002c 	andeq	r0, r0, ip, lsr #32
     d84:	8b040e42 	blhi	104694 <_bss_end+0xf29e4>
     d88:	0b0d4201 	bleq	351594 <_bss_end+0x33f8e4>
     d8c:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     d90:	00000ecb 	andeq	r0, r0, fp, asr #29
     d94:	0000001c 	andeq	r0, r0, ip, lsl r0
     d98:	00000d64 	andeq	r0, r0, r4, ror #26
     d9c:	0000c2a4 	andeq	ip, r0, r4, lsr #5
     da0:	0000002c 	andeq	r0, r0, ip, lsr #32
     da4:	8b040e42 	blhi	1046b4 <_bss_end+0xf2a04>
     da8:	0b0d4201 	bleq	3515b4 <_bss_end+0x33f904>
     dac:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     db0:	00000ecb 	andeq	r0, r0, fp, asr #29
     db4:	0000001c 	andeq	r0, r0, ip, lsl r0
     db8:	00000d64 	andeq	r0, r0, r4, ror #26
     dbc:	0000c2d0 	ldrdeq	ip, [r0], -r0
     dc0:	00000024 	andeq	r0, r0, r4, lsr #32
     dc4:	8b040e42 	blhi	1046d4 <_bss_end+0xf2a24>
     dc8:	0b0d4201 	bleq	3515d4 <_bss_end+0x33f924>
     dcc:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     dd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     dd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     dd8:	00000d64 	andeq	r0, r0, r4, ror #26
     ddc:	0000c2f4 	strdeq	ip, [r0], -r4
     de0:	0000002c 	andeq	r0, r0, ip, lsr #32
     de4:	8b040e42 	blhi	1046f4 <_bss_end+0xf2a44>
     de8:	0b0d4201 	bleq	3515f4 <_bss_end+0x33f944>
     dec:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     df0:	00000ecb 	andeq	r0, r0, fp, asr #29
     df4:	0000001c 	andeq	r0, r0, ip, lsl r0
     df8:	00000d64 	andeq	r0, r0, r4, ror #26
     dfc:	0000c320 	andeq	ip, r0, r0, lsr #6
     e00:	00000030 	andeq	r0, r0, r0, lsr r0
     e04:	8b080e42 	blhi	204714 <_bss_end+0x1f2a64>
     e08:	42018e02 	andmi	r8, r1, #2, 28
     e0c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     e10:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e14:	0000001c 	andeq	r0, r0, ip, lsl r0
     e18:	00000d64 	andeq	r0, r0, r4, ror #26
     e1c:	0000ab00 	andeq	sl, r0, r0, lsl #22
     e20:	00000030 	andeq	r0, r0, r0, lsr r0
     e24:	8b080e42 	blhi	204734 <_bss_end+0x1f2a84>
     e28:	42018e02 	andmi	r8, r1, #2, 28
     e2c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     e30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e34:	0000001c 	andeq	r0, r0, ip, lsl r0
     e38:	00000d64 	andeq	r0, r0, r4, ror #26
     e3c:	0000c350 	andeq	ip, r0, r0, asr r3
     e40:	00000034 	andeq	r0, r0, r4, lsr r0
     e44:	8b040e42 	blhi	104754 <_bss_end+0xf2aa4>
     e48:	0b0d4201 	bleq	351654 <_bss_end+0x33f9a4>
     e4c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     e50:	00000ecb 	andeq	r0, r0, fp, asr #29
     e54:	0000001c 	andeq	r0, r0, ip, lsl r0
     e58:	00000d64 	andeq	r0, r0, r4, ror #26
     e5c:	0000c384 	andeq	ip, r0, r4, lsl #7
     e60:	00000034 	andeq	r0, r0, r4, lsr r0
     e64:	8b040e42 	blhi	104774 <_bss_end+0xf2ac4>
     e68:	0b0d4201 	bleq	351674 <_bss_end+0x33f9c4>
     e6c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     e70:	00000ecb 	andeq	r0, r0, fp, asr #29
     e74:	0000001c 	andeq	r0, r0, ip, lsl r0
     e78:	00000d64 	andeq	r0, r0, r4, ror #26
     e7c:	0000c3b8 			; <UNDEFINED> instruction: 0x0000c3b8
     e80:	00000034 	andeq	r0, r0, r4, lsr r0
     e84:	8b080e42 	blhi	204794 <_bss_end+0x1f2ae4>
     e88:	42018e02 	andmi	r8, r1, #2, 28
     e8c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     e90:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e94:	0000001c 	andeq	r0, r0, ip, lsl r0
     e98:	00000d64 	andeq	r0, r0, r4, ror #26
     e9c:	0000c3ec 	andeq	ip, r0, ip, ror #7
     ea0:	0000007c 	andeq	r0, r0, ip, ror r0
     ea4:	8b080e42 	blhi	2047b4 <_bss_end+0x1f2b04>
     ea8:	42018e02 	andmi	r8, r1, #2, 28
     eac:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     eb0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     eb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     eb8:	00000d64 	andeq	r0, r0, r4, ror #26
     ebc:	0000c468 	andeq	ip, r0, r8, ror #8
     ec0:	00000044 	andeq	r0, r0, r4, asr #32
     ec4:	8b080e42 	blhi	2047d4 <_bss_end+0x1f2b24>
     ec8:	42018e02 	andmi	r8, r1, #2, 28
     ecc:	5a040b0c 	bpl	103b04 <_bss_end+0xf1e54>
     ed0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ed4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ed8:	00000d64 	andeq	r0, r0, r4, ror #26
     edc:	0000c4ac 	andeq	ip, r0, ip, lsr #9
     ee0:	00000034 	andeq	r0, r0, r4, lsr r0
     ee4:	8b080e42 	blhi	2047f4 <_bss_end+0x1f2b44>
     ee8:	42018e02 	andmi	r8, r1, #2, 28
     eec:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     ef0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ef4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ef8:	00000d64 	andeq	r0, r0, r4, ror #26
     efc:	0000c4e0 	andeq	ip, r0, r0, ror #9
     f00:	00000080 	andeq	r0, r0, r0, lsl #1
     f04:	8b080e42 	blhi	204814 <_bss_end+0x1f2b64>
     f08:	42018e02 	andmi	r8, r1, #2, 28
     f0c:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
     f10:	00080d0c 	andeq	r0, r8, ip, lsl #26
     f14:	0000001c 	andeq	r0, r0, ip, lsl r0
     f18:	00000d64 	andeq	r0, r0, r4, ror #26
     f1c:	0000c560 	andeq	ip, r0, r0, ror #10
     f20:	0000007c 	andeq	r0, r0, ip, ror r0
     f24:	8b080e42 	blhi	204834 <_bss_end+0x1f2b84>
     f28:	42018e02 	andmi	r8, r1, #2, 28
     f2c:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     f30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     f34:	0000001c 	andeq	r0, r0, ip, lsl r0
     f38:	00000d64 	andeq	r0, r0, r4, ror #26
     f3c:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
     f40:	0000009c 	muleq	r0, ip, r0
     f44:	8b080e42 	blhi	204854 <_bss_end+0x1f2ba4>
     f48:	42018e02 	andmi	r8, r1, #2, 28
     f4c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f50:	080d0c46 	stmdaeq	sp, {r1, r2, r6, sl, fp}
     f54:	0000001c 	andeq	r0, r0, ip, lsl r0
     f58:	00000d64 	andeq	r0, r0, r4, ror #26
     f5c:	0000c678 	andeq	ip, r0, r8, ror r6
     f60:	0000002c 	andeq	r0, r0, ip, lsr #32
     f64:	8b040e42 	blhi	104874 <_bss_end+0xf2bc4>
     f68:	0b0d4201 	bleq	351774 <_bss_end+0x33fac4>
     f6c:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     f70:	00000ecb 	andeq	r0, r0, fp, asr #29
     f74:	0000001c 	andeq	r0, r0, ip, lsl r0
     f78:	00000d64 	andeq	r0, r0, r4, ror #26
     f7c:	0000c6a4 	andeq	ip, r0, r4, lsr #13
     f80:	00000020 	andeq	r0, r0, r0, lsr #32
     f84:	8b040e42 	blhi	104894 <_bss_end+0xf2be4>
     f88:	0b0d4201 	bleq	351794 <_bss_end+0x33fae4>
     f8c:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
     f90:	00000ecb 	andeq	r0, r0, fp, asr #29
     f94:	00000020 	andeq	r0, r0, r0, lsr #32
     f98:	00000d64 	andeq	r0, r0, r4, ror #26
     f9c:	0000c6c4 	andeq	ip, r0, r4, asr #13
     fa0:	00000158 	andeq	r0, r0, r8, asr r1
     fa4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     fa8:	8e028b03 	vmlahi.f64	d8, d2, d3
     fac:	0b0c4201 	bleq	3117b8 <_bss_end+0x2ffb08>
     fb0:	0ca40204 	sfmeq	f0, 4, [r4], #16
     fb4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     fb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fbc:	00000d64 	andeq	r0, r0, r4, ror #26
     fc0:	0000c81c 	andeq	ip, r0, ip, lsl r8
     fc4:	0000004c 	andeq	r0, r0, ip, asr #32
     fc8:	8b080e42 	blhi	2048d8 <_bss_end+0x1f2c28>
     fcc:	42018e02 	andmi	r8, r1, #2, 28
     fd0:	5e040b0c 	vmlapl.f64	d0, d4, d12
     fd4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     fd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fdc:	00000d64 	andeq	r0, r0, r4, ror #26
     fe0:	0000c868 	andeq	ip, r0, r8, ror #16
     fe4:	00000044 	andeq	r0, r0, r4, asr #32
     fe8:	8b080e42 	blhi	2048f8 <_bss_end+0x1f2c48>
     fec:	42018e02 	andmi	r8, r1, #2, 28
     ff0:	5a040b0c 	bpl	103c28 <_bss_end+0xf1f78>
     ff4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ff8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ffc:	00000d64 	andeq	r0, r0, r4, ror #26
    1000:	0000c8ac 	andeq	ip, r0, ip, lsr #17
    1004:	00000034 	andeq	r0, r0, r4, lsr r0
    1008:	8b080e42 	blhi	204918 <_bss_end+0x1f2c68>
    100c:	42018e02 	andmi	r8, r1, #2, 28
    1010:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1014:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1018:	0000001c 	andeq	r0, r0, ip, lsl r0
    101c:	00000d64 	andeq	r0, r0, r4, ror #26
    1020:	0000c8e0 	andeq	ip, r0, r0, ror #17
    1024:	0000002c 	andeq	r0, r0, ip, lsr #32
    1028:	8b040e42 	blhi	104938 <_bss_end+0xf2c88>
    102c:	0b0d4201 	bleq	351838 <_bss_end+0x33fb88>
    1030:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1034:	00000ecb 	andeq	r0, r0, fp, asr #29
    1038:	0000001c 	andeq	r0, r0, ip, lsl r0
    103c:	00000d64 	andeq	r0, r0, r4, ror #26
    1040:	0000c90c 	andeq	ip, r0, ip, lsl #18
    1044:	00000068 	andeq	r0, r0, r8, rrx
    1048:	8b080e42 	blhi	204958 <_bss_end+0x1f2ca8>
    104c:	42018e02 	andmi	r8, r1, #2, 28
    1050:	6c040b0c 			; <UNDEFINED> instruction: 0x6c040b0c
    1054:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1058:	0000001c 	andeq	r0, r0, ip, lsl r0
    105c:	00000d64 	andeq	r0, r0, r4, ror #26
    1060:	0000c974 	andeq	ip, r0, r4, ror r9
    1064:	00000048 	andeq	r0, r0, r8, asr #32
    1068:	8b040e42 	blhi	104978 <_bss_end+0xf2cc8>
    106c:	0b0d4201 	bleq	351878 <_bss_end+0x33fbc8>
    1070:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    1074:	00000ecb 	andeq	r0, r0, fp, asr #29
    1078:	0000001c 	andeq	r0, r0, ip, lsl r0
    107c:	00000d64 	andeq	r0, r0, r4, ror #26
    1080:	0000c9bc 			; <UNDEFINED> instruction: 0x0000c9bc
    1084:	00000044 	andeq	r0, r0, r4, asr #32
    1088:	8b040e42 	blhi	104998 <_bss_end+0xf2ce8>
    108c:	0b0d4201 	bleq	351898 <_bss_end+0x33fbe8>
    1090:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    1094:	00000ecb 	andeq	r0, r0, fp, asr #29
    1098:	0000001c 	andeq	r0, r0, ip, lsl r0
    109c:	00000d64 	andeq	r0, r0, r4, ror #26
    10a0:	0000ca00 	andeq	ip, r0, r0, lsl #20
    10a4:	00000020 	andeq	r0, r0, r0, lsr #32
    10a8:	8b040e42 	blhi	1049b8 <_bss_end+0xf2d08>
    10ac:	0b0d4201 	bleq	3518b8 <_bss_end+0x33fc08>
    10b0:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    10b4:	00000ecb 	andeq	r0, r0, fp, asr #29
    10b8:	00000020 	andeq	r0, r0, r0, lsr #32
    10bc:	00000d64 	andeq	r0, r0, r4, ror #26
    10c0:	0000ca20 	andeq	ip, r0, r0, lsr #20
    10c4:	00000068 	andeq	r0, r0, r8, rrx
    10c8:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    10cc:	8e028b03 	vmlahi.f64	d8, d2, d3
    10d0:	0b0c4201 	bleq	3118dc <_bss_end+0x2ffc2c>
    10d4:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    10e0:	00000d64 	andeq	r0, r0, r4, ror #26
    10e4:	0000ca88 	andeq	ip, r0, r8, lsl #21
    10e8:	00000048 	andeq	r0, r0, r8, asr #32
    10ec:	8b080e42 	blhi	2049fc <_bss_end+0x1f2d4c>
    10f0:	42018e02 	andmi	r8, r1, #2, 28
    10f4:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    10f8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    10fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1100:	00000d64 	andeq	r0, r0, r4, ror #26
    1104:	0000cad0 	ldrdeq	ip, [r0], -r0
    1108:	00000044 	andeq	r0, r0, r4, asr #32
    110c:	8b080e42 	blhi	204a1c <_bss_end+0x1f2d6c>
    1110:	42018e02 	andmi	r8, r1, #2, 28
    1114:	5a040b0c 	bpl	103d4c <_bss_end+0xf209c>
    1118:	00080d0c 	andeq	r0, r8, ip, lsl #26
    111c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1120:	00000d64 	andeq	r0, r0, r4, ror #26
    1124:	0000cb14 	andeq	ip, r0, r4, lsl fp
    1128:	00000034 	andeq	r0, r0, r4, lsr r0
    112c:	8b080e42 	blhi	204a3c <_bss_end+0x1f2d8c>
    1130:	42018e02 	andmi	r8, r1, #2, 28
    1134:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1138:	00080d0c 	andeq	r0, r8, ip, lsl #26
    113c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1140:	00000d64 	andeq	r0, r0, r4, ror #26
    1144:	0000cb48 	andeq	ip, r0, r8, asr #22
    1148:	00000058 	andeq	r0, r0, r8, asr r0
    114c:	8b080e42 	blhi	204a5c <_bss_end+0x1f2dac>
    1150:	42018e02 	andmi	r8, r1, #2, 28
    1154:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1158:	00080d0c 	andeq	r0, r8, ip, lsl #26
    115c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1160:	00000d64 	andeq	r0, r0, r4, ror #26
    1164:	0000cba0 	andeq	ip, r0, r0, lsr #23
    1168:	00000070 	andeq	r0, r0, r0, ror r0
    116c:	8b080e42 	blhi	204a7c <_bss_end+0x1f2dcc>
    1170:	42018e02 	andmi	r8, r1, #2, 28
    1174:	70040b0c 	andvc	r0, r4, ip, lsl #22
    1178:	00080d0c 	andeq	r0, r8, ip, lsl #26
    117c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1180:	00000d64 	andeq	r0, r0, r4, ror #26
    1184:	0000cc10 	andeq	ip, r0, r0, lsl ip
    1188:	00000058 	andeq	r0, r0, r8, asr r0
    118c:	8b080e42 	blhi	204a9c <_bss_end+0x1f2dec>
    1190:	42018e02 	andmi	r8, r1, #2, 28
    1194:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1198:	00080d0c 	andeq	r0, r8, ip, lsl #26
    119c:	0000001c 	andeq	r0, r0, ip, lsl r0
    11a0:	00000d64 	andeq	r0, r0, r4, ror #26
    11a4:	0000cc68 	andeq	ip, r0, r8, ror #24
    11a8:	0000002c 	andeq	r0, r0, ip, lsr #32
    11ac:	8b040e42 	blhi	104abc <_bss_end+0xf2e0c>
    11b0:	0b0d4201 	bleq	3519bc <_bss_end+0x33fd0c>
    11b4:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    11b8:	00000ecb 	andeq	r0, r0, fp, asr #29
    11bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    11c0:	00000d64 	andeq	r0, r0, r4, ror #26
    11c4:	0000cc94 	muleq	r0, r4, ip
    11c8:	00000020 	andeq	r0, r0, r0, lsr #32
    11cc:	8b040e42 	blhi	104adc <_bss_end+0xf2e2c>
    11d0:	0b0d4201 	bleq	3519dc <_bss_end+0x33fd2c>
    11d4:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    11d8:	00000ecb 	andeq	r0, r0, fp, asr #29
    11dc:	00000020 	andeq	r0, r0, r0, lsr #32
    11e0:	00000d64 	andeq	r0, r0, r4, ror #26
    11e4:	0000ccb4 			; <UNDEFINED> instruction: 0x0000ccb4
    11e8:	0000006c 	andeq	r0, r0, ip, rrx
    11ec:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    11f0:	8e028b03 	vmlahi.f64	d8, d2, d3
    11f4:	0b0c4201 	bleq	311a00 <_bss_end+0x2ffd50>
    11f8:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    11fc:	0000000c 	andeq	r0, r0, ip
    1200:	0000001c 	andeq	r0, r0, ip, lsl r0
    1204:	00000d64 	andeq	r0, r0, r4, ror #26
    1208:	0000cd20 	andeq	ip, r0, r0, lsr #26
    120c:	00000048 	andeq	r0, r0, r8, asr #32
    1210:	8b080e42 	blhi	204b20 <_bss_end+0x1f2e70>
    1214:	42018e02 	andmi	r8, r1, #2, 28
    1218:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    121c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1220:	0000001c 	andeq	r0, r0, ip, lsl r0
    1224:	00000d64 	andeq	r0, r0, r4, ror #26
    1228:	0000cd68 	andeq	ip, r0, r8, ror #26
    122c:	00000044 	andeq	r0, r0, r4, asr #32
    1230:	8b080e42 	blhi	204b40 <_bss_end+0x1f2e90>
    1234:	42018e02 	andmi	r8, r1, #2, 28
    1238:	5a040b0c 	bpl	103e70 <_bss_end+0xf21c0>
    123c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1240:	0000001c 	andeq	r0, r0, ip, lsl r0
    1244:	00000d64 	andeq	r0, r0, r4, ror #26
    1248:	0000cdac 	andeq	ip, r0, ip, lsr #27
    124c:	00000034 	andeq	r0, r0, r4, lsr r0
    1250:	8b080e42 	blhi	204b60 <_bss_end+0x1f2eb0>
    1254:	42018e02 	andmi	r8, r1, #2, 28
    1258:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    125c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1260:	0000001c 	andeq	r0, r0, ip, lsl r0
    1264:	00000d64 	andeq	r0, r0, r4, ror #26
    1268:	0000cde0 	andeq	ip, r0, r0, ror #27
    126c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1270:	8b040e42 	blhi	104b80 <_bss_end+0xf2ed0>
    1274:	0b0d4201 	bleq	351a80 <_bss_end+0x33fdd0>
    1278:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    127c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1280:	0000001c 	andeq	r0, r0, ip, lsl r0
    1284:	00000d64 	andeq	r0, r0, r4, ror #26
    1288:	0000ce0c 	andeq	ip, r0, ip, lsl #28
    128c:	00000070 	andeq	r0, r0, r0, ror r0
    1290:	8b080e42 	blhi	204ba0 <_bss_end+0x1f2ef0>
    1294:	42018e02 	andmi	r8, r1, #2, 28
    1298:	70040b0c 	andvc	r0, r4, ip, lsl #22
    129c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12a4:	00000d64 	andeq	r0, r0, r4, ror #26
    12a8:	0000ce7c 	andeq	ip, r0, ip, ror lr
    12ac:	00000058 	andeq	r0, r0, r8, asr r0
    12b0:	8b080e42 	blhi	204bc0 <_bss_end+0x1f2f10>
    12b4:	42018e02 	andmi	r8, r1, #2, 28
    12b8:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    12bc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12c4:	00000d64 	andeq	r0, r0, r4, ror #26
    12c8:	0000ced4 	ldrdeq	ip, [r0], -r4
    12cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    12d0:	8b040e42 	blhi	104be0 <_bss_end+0xf2f30>
    12d4:	0b0d4201 	bleq	351ae0 <_bss_end+0x33fe30>
    12d8:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    12dc:	00000ecb 	andeq	r0, r0, fp, asr #29
    12e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12e4:	00000d64 	andeq	r0, r0, r4, ror #26
    12e8:	0000cf00 	andeq	ip, r0, r0, lsl #30
    12ec:	00000020 	andeq	r0, r0, r0, lsr #32
    12f0:	8b040e42 	blhi	104c00 <_bss_end+0xf2f50>
    12f4:	0b0d4201 	bleq	351b00 <_bss_end+0x33fe50>
    12f8:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    12fc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1300:	00000020 	andeq	r0, r0, r0, lsr #32
    1304:	00000d64 	andeq	r0, r0, r4, ror #26
    1308:	0000cf20 	andeq	ip, r0, r0, lsr #30
    130c:	0000006c 	andeq	r0, r0, ip, rrx
    1310:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1314:	8e028b03 	vmlahi.f64	d8, d2, d3
    1318:	0b0c4201 	bleq	311b24 <_bss_end+0x2ffe74>
    131c:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    1320:	0000000c 	andeq	r0, r0, ip
    1324:	0000001c 	andeq	r0, r0, ip, lsl r0
    1328:	00000d64 	andeq	r0, r0, r4, ror #26
    132c:	0000cf8c 	andeq	ip, r0, ip, lsl #31
    1330:	0000003c 	andeq	r0, r0, ip, lsr r0
    1334:	8b080e42 	blhi	204c44 <_bss_end+0x1f2f94>
    1338:	42018e02 	andmi	r8, r1, #2, 28
    133c:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1340:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1344:	0000001c 	andeq	r0, r0, ip, lsl r0
    1348:	00000d64 	andeq	r0, r0, r4, ror #26
    134c:	0000cfc8 	andeq	ip, r0, r8, asr #31
    1350:	00000044 	andeq	r0, r0, r4, asr #32
    1354:	8b080e42 	blhi	204c64 <_bss_end+0x1f2fb4>
    1358:	42018e02 	andmi	r8, r1, #2, 28
    135c:	5a040b0c 	bpl	103f94 <_bss_end+0xf22e4>
    1360:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1364:	0000001c 	andeq	r0, r0, ip, lsl r0
    1368:	00000d64 	andeq	r0, r0, r4, ror #26
    136c:	0000d00c 	andeq	sp, r0, ip
    1370:	00000034 	andeq	r0, r0, r4, lsr r0
    1374:	8b080e42 	blhi	204c84 <_bss_end+0x1f2fd4>
    1378:	42018e02 	andmi	r8, r1, #2, 28
    137c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1380:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1384:	00000020 	andeq	r0, r0, r0, lsr #32
    1388:	00000d64 	andeq	r0, r0, r4, ror #26
    138c:	0000d040 	andeq	sp, r0, r0, asr #32
    1390:	000000e8 	andeq	r0, r0, r8, ror #1
    1394:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1398:	8e028b03 	vmlahi.f64	d8, d2, d3
    139c:	0b0c4201 	bleq	311ba8 <_bss_end+0x2ffef8>
    13a0:	0c6c0204 	sfmeq	f0, 2, [ip], #-16
    13a4:	00000c0d 	andeq	r0, r0, sp, lsl #24
    13a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ac:	00000d64 	andeq	r0, r0, r4, ror #26
    13b0:	0000d128 	andeq	sp, r0, r8, lsr #2
    13b4:	0000002c 	andeq	r0, r0, ip, lsr #32
    13b8:	8b040e42 	blhi	104cc8 <_bss_end+0xf3018>
    13bc:	0b0d4201 	bleq	351bc8 <_bss_end+0x33ff18>
    13c0:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    13c4:	00000ecb 	andeq	r0, r0, fp, asr #29
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00000d64 	andeq	r0, r0, r4, ror #26
    13d0:	0000d154 	andeq	sp, r0, r4, asr r1
    13d4:	00000058 	andeq	r0, r0, r8, asr r0
    13d8:	8b080e42 	blhi	204ce8 <_bss_end+0x1f3038>
    13dc:	42018e02 	andmi	r8, r1, #2, 28
    13e0:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    13e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    13e8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ec:	00000d64 	andeq	r0, r0, r4, ror #26
    13f0:	0000d1ac 	andeq	sp, r0, ip, lsr #3
    13f4:	0000002c 	andeq	r0, r0, ip, lsr #32
    13f8:	8b040e42 	blhi	104d08 <_bss_end+0xf3058>
    13fc:	0b0d4201 	bleq	351c08 <_bss_end+0x33ff58>
    1400:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1404:	00000ecb 	andeq	r0, r0, fp, asr #29
    1408:	0000001c 	andeq	r0, r0, ip, lsl r0
    140c:	00000d64 	andeq	r0, r0, r4, ror #26
    1410:	0000d1d8 	ldrdeq	sp, [r0], -r8
    1414:	00000020 	andeq	r0, r0, r0, lsr #32
    1418:	8b040e42 	blhi	104d28 <_bss_end+0xf3078>
    141c:	0b0d4201 	bleq	351c28 <_bss_end+0x33ff78>
    1420:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    1424:	00000ecb 	andeq	r0, r0, fp, asr #29
    1428:	00000020 	andeq	r0, r0, r0, lsr #32
    142c:	00000d64 	andeq	r0, r0, r4, ror #26
    1430:	0000d1f8 	strdeq	sp, [r0], -r8
    1434:	00000084 	andeq	r0, r0, r4, lsl #1
    1438:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    143c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1440:	0b0c4201 	bleq	311c4c <_bss_end+0x2fff9c>
    1444:	0d0c7a04 	vstreq	s14, [ip, #-16]
    1448:	0000000c 	andeq	r0, r0, ip
    144c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1450:	00000d64 	andeq	r0, r0, r4, ror #26
    1454:	0000d27c 	andeq	sp, r0, ip, ror r2
    1458:	00000048 	andeq	r0, r0, r8, asr #32
    145c:	8b080e42 	blhi	204d6c <_bss_end+0x1f30bc>
    1460:	42018e02 	andmi	r8, r1, #2, 28
    1464:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    1468:	00080d0c 	andeq	r0, r8, ip, lsl #26
    146c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1470:	00000d64 	andeq	r0, r0, r4, ror #26
    1474:	0000d2c4 	andeq	sp, r0, r4, asr #5
    1478:	00000044 	andeq	r0, r0, r4, asr #32
    147c:	8b080e42 	blhi	204d8c <_bss_end+0x1f30dc>
    1480:	42018e02 	andmi	r8, r1, #2, 28
    1484:	5a040b0c 	bpl	1040bc <_bss_end+0xf240c>
    1488:	00080d0c 	andeq	r0, r8, ip, lsl #26
    148c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1490:	00000d64 	andeq	r0, r0, r4, ror #26
    1494:	0000d308 	andeq	sp, r0, r8, lsl #6
    1498:	00000034 	andeq	r0, r0, r4, lsr r0
    149c:	8b080e42 	blhi	204dac <_bss_end+0x1f30fc>
    14a0:	42018e02 	andmi	r8, r1, #2, 28
    14a4:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    14a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    14ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    14b0:	00000d64 	andeq	r0, r0, r4, ror #26
    14b4:	0000d33c 	andeq	sp, r0, ip, lsr r3
    14b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    14bc:	8b040e42 	blhi	104dcc <_bss_end+0xf311c>
    14c0:	0b0d4201 	bleq	351ccc <_bss_end+0x34001c>
    14c4:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    14c8:	00000ecb 	andeq	r0, r0, fp, asr #29
    14cc:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d0:	00000d64 	andeq	r0, r0, r4, ror #26
    14d4:	0000d368 	andeq	sp, r0, r8, ror #6
    14d8:	0000003c 	andeq	r0, r0, ip, lsr r0
    14dc:	8b080e42 	blhi	204dec <_bss_end+0x1f313c>
    14e0:	42018e02 	andmi	r8, r1, #2, 28
    14e4:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    14e8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    14ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    14f0:	00000d64 	andeq	r0, r0, r4, ror #26
    14f4:	0000d3a4 	andeq	sp, r0, r4, lsr #7
    14f8:	00000058 	andeq	r0, r0, r8, asr r0
    14fc:	8b080e42 	blhi	204e0c <_bss_end+0x1f315c>
    1500:	42018e02 	andmi	r8, r1, #2, 28
    1504:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1508:	00080d0c 	andeq	r0, r8, ip, lsl #26
    150c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1510:	00000d64 	andeq	r0, r0, r4, ror #26
    1514:	0000d3fc 	strdeq	sp, [r0], -ip
    1518:	0000002c 	andeq	r0, r0, ip, lsr #32
    151c:	8b040e42 	blhi	104e2c <_bss_end+0xf317c>
    1520:	0b0d4201 	bleq	351d2c <_bss_end+0x34007c>
    1524:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1528:	00000ecb 	andeq	r0, r0, fp, asr #29
    152c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1530:	00000d64 	andeq	r0, r0, r4, ror #26
    1534:	0000d428 	andeq	sp, r0, r8, lsr #8
    1538:	00000020 	andeq	r0, r0, r0, lsr #32
    153c:	8b040e42 	blhi	104e4c <_bss_end+0xf319c>
    1540:	0b0d4201 	bleq	351d4c <_bss_end+0x34009c>
    1544:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    1548:	00000ecb 	andeq	r0, r0, fp, asr #29
    154c:	00000020 	andeq	r0, r0, r0, lsr #32
    1550:	00000d64 	andeq	r0, r0, r4, ror #26
    1554:	0000d448 	andeq	sp, r0, r8, asr #8
    1558:	00000074 	andeq	r0, r0, r4, ror r0
    155c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1560:	8e028b03 	vmlahi.f64	d8, d2, d3
    1564:	0b0c4201 	bleq	311d70 <_bss_end+0x3000c0>
    1568:	0d0c7204 	sfmeq	f7, 4, [ip, #-16]
    156c:	0000000c 	andeq	r0, r0, ip
    1570:	0000000c 	andeq	r0, r0, ip
    1574:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1578:	7c020001 	stcvc	0, cr0, [r2], {1}
    157c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1580:	0000001c 	andeq	r0, r0, ip, lsl r0
    1584:	00001570 	andeq	r1, r0, r0, ror r5
    1588:	0000d4bc 			; <UNDEFINED> instruction: 0x0000d4bc
    158c:	000000a0 	andeq	r0, r0, r0, lsr #1
    1590:	8b080e42 	blhi	204ea0 <_bss_end+0x1f31f0>
    1594:	42018e02 	andmi	r8, r1, #2, 28
    1598:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    159c:	080d0c46 	stmdaeq	sp, {r1, r2, r6, sl, fp}
    15a0:	00000018 	andeq	r0, r0, r8, lsl r0
    15a4:	00001570 	andeq	r1, r0, r0, ror r5
    15a8:	0000d55c 	andeq	sp, r0, ip, asr r5
    15ac:	00000030 	andeq	r0, r0, r0, lsr r0
    15b0:	8b080e42 	blhi	204ec0 <_bss_end+0x1f3210>
    15b4:	42018e02 	andmi	r8, r1, #2, 28
    15b8:	00040b0c 	andeq	r0, r4, ip, lsl #22
    15bc:	00000014 	andeq	r0, r0, r4, lsl r0
    15c0:	00001570 	andeq	r1, r0, r0, ror r5
    15c4:	0000d58c 	andeq	sp, r0, ip, lsl #11
    15c8:	00000010 	andeq	r0, r0, r0, lsl r0
    15cc:	040b0c42 	streq	r0, [fp], #-3138	; 0xfffff3be
    15d0:	000d0c44 	andeq	r0, sp, r4, asr #24
    15d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    15d8:	00001570 	andeq	r1, r0, r0, ror r5
    15dc:	0000d59c 	muleq	r0, ip, r5
    15e0:	00000034 	andeq	r0, r0, r4, lsr r0
    15e4:	8b040e42 	blhi	104ef4 <_bss_end+0xf3244>
    15e8:	0b0d4201 	bleq	351df4 <_bss_end+0x340144>
    15ec:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
    15f0:	00000ecb 	andeq	r0, r0, fp, asr #29
    15f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    15f8:	00001570 	andeq	r1, r0, r0, ror r5
    15fc:	0000d5d0 	ldrdeq	sp, [r0], -r0
    1600:	00000038 	andeq	r0, r0, r8, lsr r0
    1604:	8b040e42 	blhi	104f14 <_bss_end+0xf3264>
    1608:	0b0d4201 	bleq	351e14 <_bss_end+0x340164>
    160c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
    1610:	00000ecb 	andeq	r0, r0, fp, asr #29
    1614:	00000020 	andeq	r0, r0, r0, lsr #32
    1618:	00001570 	andeq	r1, r0, r0, ror r5
    161c:	0000d608 	andeq	sp, r0, r8, lsl #12
    1620:	00000044 	andeq	r0, r0, r4, asr #32
    1624:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1628:	8e028b03 	vmlahi.f64	d8, d2, d3
    162c:	0b0c4201 	bleq	311e38 <_bss_end+0x300188>
    1630:	0d0c5c04 	stceq	12, cr5, [ip, #-16]
    1634:	0000000c 	andeq	r0, r0, ip
    1638:	00000020 	andeq	r0, r0, r0, lsr #32
    163c:	00001570 	andeq	r1, r0, r0, ror r5
    1640:	0000d64c 	andeq	sp, r0, ip, asr #12
    1644:	00000044 	andeq	r0, r0, r4, asr #32
    1648:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    164c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1650:	0b0c4201 	bleq	311e5c <_bss_end+0x3001ac>
    1654:	0d0c5c04 	stceq	12, cr5, [ip, #-16]
    1658:	0000000c 	andeq	r0, r0, ip
    165c:	00000020 	andeq	r0, r0, r0, lsr #32
    1660:	00001570 	andeq	r1, r0, r0, ror r5
    1664:	0000d690 	muleq	r0, r0, r6
    1668:	00000050 	andeq	r0, r0, r0, asr r0
    166c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1670:	8e028b03 	vmlahi.f64	d8, d2, d3
    1674:	0b0c4201 	bleq	311e80 <_bss_end+0x3001d0>
    1678:	0d0c6204 	sfmeq	f6, 4, [ip, #-16]
    167c:	0000000c 	andeq	r0, r0, ip
    1680:	00000020 	andeq	r0, r0, r0, lsr #32
    1684:	00001570 	andeq	r1, r0, r0, ror r5
    1688:	0000d6e0 	andeq	sp, r0, r0, ror #13
    168c:	00000050 	andeq	r0, r0, r0, asr r0
    1690:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1694:	8e028b03 	vmlahi.f64	d8, d2, d3
    1698:	0b0c4201 	bleq	311ea4 <_bss_end+0x3001f4>
    169c:	0d0c6204 	sfmeq	f6, 4, [ip, #-16]
    16a0:	0000000c 	andeq	r0, r0, ip
    16a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16a8:	00001570 	andeq	r1, r0, r0, ror r5
    16ac:	0000d730 	andeq	sp, r0, r0, lsr r7
    16b0:	00000054 	andeq	r0, r0, r4, asr r0
    16b4:	8b080e42 	blhi	204fc4 <_bss_end+0x1f3314>
    16b8:	42018e02 	andmi	r8, r1, #2, 28
    16bc:	5e040b0c 	vmlapl.f64	d0, d4, d12
    16c0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    16c4:	00000018 	andeq	r0, r0, r8, lsl r0
    16c8:	00001570 	andeq	r1, r0, r0, ror r5
    16cc:	0000d784 	andeq	sp, r0, r4, lsl #15
    16d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    16d4:	8b080e42 	blhi	204fe4 <_bss_end+0x1f3334>
    16d8:	42018e02 	andmi	r8, r1, #2, 28
    16dc:	00040b0c 	andeq	r0, r4, ip, lsl #22
    16e0:	0000000c 	andeq	r0, r0, ip
    16e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16e8:	7c020001 	stcvc	0, cr0, [r2], {1}
    16ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16f0:	00000018 	andeq	r0, r0, r8, lsl r0
    16f4:	000016e0 	andeq	r1, r0, r0, ror #13
    16f8:	0000d7a0 	andeq	sp, r0, r0, lsr #15
    16fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1700:	8b080e42 	blhi	205010 <_bss_end+0x1f3360>
    1704:	42018e02 	andmi	r8, r1, #2, 28
    1708:	00040b0c 	andeq	r0, r4, ip, lsl #22
    170c:	00000018 	andeq	r0, r0, r8, lsl r0
    1710:	000016e0 	andeq	r1, r0, r0, ror #13
    1714:	0000d7bc 			; <UNDEFINED> instruction: 0x0000d7bc
    1718:	0000008c 	andeq	r0, r0, ip, lsl #1
    171c:	8b080e42 	blhi	20502c <_bss_end+0x1f337c>
    1720:	42018e02 	andmi	r8, r1, #2, 28
    1724:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1728:	0000000c 	andeq	r0, r0, ip
    172c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1730:	7c020001 	stcvc	0, cr0, [r2], {1}
    1734:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1738:	0000001c 	andeq	r0, r0, ip, lsl r0
    173c:	00001728 	andeq	r1, r0, r8, lsr #14
    1740:	0000d848 	andeq	sp, r0, r8, asr #16
    1744:	00000034 	andeq	r0, r0, r4, lsr r0
    1748:	8b080e42 	blhi	205058 <_bss_end+0x1f33a8>
    174c:	42018e02 	andmi	r8, r1, #2, 28
    1750:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1754:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1758:	0000001c 	andeq	r0, r0, ip, lsl r0
    175c:	00001728 	andeq	r1, r0, r8, lsr #14
    1760:	0000d87c 	andeq	sp, r0, ip, ror r8
    1764:	00000068 	andeq	r0, r0, r8, rrx
    1768:	8b080e42 	blhi	205078 <_bss_end+0x1f33c8>
    176c:	42018e02 	andmi	r8, r1, #2, 28
    1770:	6a040b0c 	bvs	1043a8 <_bss_end+0xf26f8>
    1774:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1778:	0000001c 	andeq	r0, r0, ip, lsl r0
    177c:	00001728 	andeq	r1, r0, r8, lsr #14
    1780:	0000d8e4 	andeq	sp, r0, r4, ror #17
    1784:	0000014c 	andeq	r0, r0, ip, asr #2
    1788:	8b040e42 	blhi	105098 <_bss_end+0xf33e8>
    178c:	0b0d4201 	bleq	351f98 <_bss_end+0x3402e8>
    1790:	0d0d9e02 	stceq	14, cr9, [sp, #-8]
    1794:	000ecb42 	andeq	ip, lr, r2, asr #22
    1798:	0000001c 	andeq	r0, r0, ip, lsl r0
    179c:	00001728 	andeq	r1, r0, r8, lsr #14
    17a0:	0000da30 	andeq	sp, r0, r0, lsr sl
    17a4:	0000011c 	andeq	r0, r0, ip, lsl r1
    17a8:	8b040e42 	blhi	1050b8 <_bss_end+0xf3408>
    17ac:	0b0d4201 	bleq	351fb8 <_bss_end+0x340308>
    17b0:	0d0d8602 	stceq	6, cr8, [sp, #-8]
    17b4:	000ecb42 	andeq	ip, lr, r2, asr #22
    17b8:	0000001c 	andeq	r0, r0, ip, lsl r0
    17bc:	00001728 	andeq	r1, r0, r8, lsr #14
    17c0:	0000db4c 	andeq	sp, r0, ip, asr #22
    17c4:	0000004c 	andeq	r0, r0, ip, asr #32
    17c8:	8b080e42 	blhi	2050d8 <_bss_end+0x1f3428>
    17cc:	42018e02 	andmi	r8, r1, #2, 28
    17d0:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    17d4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    17d8:	00000018 	andeq	r0, r0, r8, lsl r0
    17dc:	00001728 	andeq	r1, r0, r8, lsr #14
    17e0:	0000db98 	muleq	r0, r8, fp
    17e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    17e8:	8b080e42 	blhi	2050f8 <_bss_end+0x1f3448>
    17ec:	42018e02 	andmi	r8, r1, #2, 28
    17f0:	00040b0c 	andeq	r0, r4, ip, lsl #22
    17f4:	0000000c 	andeq	r0, r0, ip
    17f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1800:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1804:	0000001c 	andeq	r0, r0, ip, lsl r0
    1808:	000017f4 	strdeq	r1, [r0], -r4
    180c:	0000dbb4 			; <UNDEFINED> instruction: 0x0000dbb4
    1810:	00000064 	andeq	r0, r0, r4, rrx
    1814:	8b040e42 	blhi	105124 <_bss_end+0xf3474>
    1818:	0b0d4201 	bleq	352024 <_bss_end+0x340374>
    181c:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    1820:	00000ecb 	andeq	r0, r0, fp, asr #29
    1824:	0000001c 	andeq	r0, r0, ip, lsl r0
    1828:	000017f4 	strdeq	r1, [r0], -r4
    182c:	0000dc18 	andeq	sp, r0, r8, lsl ip
    1830:	000000bc 	strheq	r0, [r0], -ip
    1834:	8b040e42 	blhi	105144 <_bss_end+0xf3494>
    1838:	0b0d4201 	bleq	352044 <_bss_end+0x340394>
    183c:	0d0d5602 	stceq	6, cr5, [sp, #-8]
    1840:	000ecb42 	andeq	ip, lr, r2, asr #22
    1844:	0000001c 	andeq	r0, r0, ip, lsl r0
    1848:	000017f4 	strdeq	r1, [r0], -r4
    184c:	0000dcd4 	ldrdeq	sp, [r0], -r4
    1850:	000000e4 	andeq	r0, r0, r4, ror #1
    1854:	8b080e42 	blhi	205164 <_bss_end+0x1f34b4>
    1858:	42018e02 	andmi	r8, r1, #2, 28
    185c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1860:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
    1864:	0000001c 	andeq	r0, r0, ip, lsl r0
    1868:	000017f4 	strdeq	r1, [r0], -r4
    186c:	0000ddb8 			; <UNDEFINED> instruction: 0x0000ddb8
    1870:	00000038 	andeq	r0, r0, r8, lsr r0
    1874:	8b080e42 	blhi	205184 <_bss_end+0x1f34d4>
    1878:	42018e02 	andmi	r8, r1, #2, 28
    187c:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1880:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1884:	0000001c 	andeq	r0, r0, ip, lsl r0
    1888:	000017f4 	strdeq	r1, [r0], -r4
    188c:	0000ddf0 	strdeq	sp, [r0], -r0
    1890:	0000004c 	andeq	r0, r0, ip, asr #32
    1894:	8b080e42 	blhi	2051a4 <_bss_end+0x1f34f4>
    1898:	42018e02 	andmi	r8, r1, #2, 28
    189c:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    18a0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    18a4:	00000018 	andeq	r0, r0, r8, lsl r0
    18a8:	000017f4 	strdeq	r1, [r0], -r4
    18ac:	0000de3c 	andeq	sp, r0, ip, lsr lr
    18b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18b4:	8b080e42 	blhi	2051c4 <_bss_end+0x1f3514>
    18b8:	42018e02 	andmi	r8, r1, #2, 28
    18bc:	00040b0c 	andeq	r0, r4, ip, lsl #22
    18c0:	0000000c 	andeq	r0, r0, ip
    18c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    18cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18d4:	000018c0 	andeq	r1, r0, r0, asr #17
    18d8:	0000de58 	andeq	sp, r0, r8, asr lr
    18dc:	00000048 	andeq	r0, r0, r8, asr #32
    18e0:	8b040e42 	blhi	1051f0 <_bss_end+0xf3540>
    18e4:	0b0d4201 	bleq	3520f0 <_bss_end+0x340440>
    18e8:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    18ec:	00000ecb 	andeq	r0, r0, fp, asr #29
    18f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18f4:	000018c0 	andeq	r1, r0, r0, asr #17
    18f8:	0000dea0 	andeq	sp, r0, r0, lsr #29
    18fc:	00000044 	andeq	r0, r0, r4, asr #32
    1900:	8b040e42 	blhi	105210 <_bss_end+0xf3560>
    1904:	0b0d4201 	bleq	352110 <_bss_end+0x340460>
    1908:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    190c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1910:	0000001c 	andeq	r0, r0, ip, lsl r0
    1914:	000018c0 	andeq	r1, r0, r0, asr #17
    1918:	0000dee4 	andeq	sp, r0, r4, ror #29
    191c:	00000114 	andeq	r0, r0, r4, lsl r1
    1920:	8b080e42 	blhi	205230 <_bss_end+0x1f3580>
    1924:	42018e02 	andmi	r8, r1, #2, 28
    1928:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    192c:	080d0c82 	stmdaeq	sp, {r1, r7, sl, fp}
    1930:	0000001c 	andeq	r0, r0, ip, lsl r0
    1934:	000018c0 	andeq	r1, r0, r0, asr #17
    1938:	0000dff8 	strdeq	sp, [r0], -r8
    193c:	00000200 	andeq	r0, r0, r0, lsl #4
    1940:	8b080e42 	blhi	205250 <_bss_end+0x1f35a0>
    1944:	42018e02 	andmi	r8, r1, #2, 28
    1948:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    194c:	080d0cea 	stmdaeq	sp, {r1, r3, r5, r6, r7, sl, fp}
    1950:	0000001c 	andeq	r0, r0, ip, lsl r0
    1954:	000018c0 	andeq	r1, r0, r0, asr #17
    1958:	0000e1f8 	strdeq	lr, [r0], -r8
    195c:	00000168 	andeq	r0, r0, r8, ror #2
    1960:	8b080e42 	blhi	205270 <_bss_end+0x1f35c0>
    1964:	42018e02 	andmi	r8, r1, #2, 28
    1968:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    196c:	080d0cae 	stmdaeq	sp, {r1, r2, r3, r5, r7, sl, fp}
    1970:	0000001c 	andeq	r0, r0, ip, lsl r0
    1974:	000018c0 	andeq	r1, r0, r0, asr #17
    1978:	0000e360 	andeq	lr, r0, r0, ror #6
    197c:	00000104 	andeq	r0, r0, r4, lsl #2
    1980:	8b080e42 	blhi	205290 <_bss_end+0x1f35e0>
    1984:	42018e02 	andmi	r8, r1, #2, 28
    1988:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    198c:	080d0c7c 	stmdaeq	sp, {r2, r3, r4, r5, r6, sl, fp}
    1990:	0000001c 	andeq	r0, r0, ip, lsl r0
    1994:	000018c0 	andeq	r1, r0, r0, asr #17
    1998:	0000e464 	andeq	lr, r0, r4, ror #8
    199c:	000000ac 	andeq	r0, r0, ip, lsr #1
    19a0:	8b080e42 	blhi	2052b0 <_bss_end+0x1f3600>
    19a4:	42018e02 	andmi	r8, r1, #2, 28
    19a8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    19ac:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
    19b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    19b4:	000018c0 	andeq	r1, r0, r0, asr #17
    19b8:	0000e510 	andeq	lr, r0, r0, lsl r5
    19bc:	00000094 	muleq	r0, r4, r0
    19c0:	8b080e42 	blhi	2052d0 <_bss_end+0x1f3620>
    19c4:	42018e02 	andmi	r8, r1, #2, 28
    19c8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    19cc:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
    19d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    19d4:	000018c0 	andeq	r1, r0, r0, asr #17
    19d8:	0000e5a4 	andeq	lr, r0, r4, lsr #11
    19dc:	00000064 	andeq	r0, r0, r4, rrx
    19e0:	8b040e42 	blhi	1052f0 <_bss_end+0xf3640>
    19e4:	0b0d4201 	bleq	3521f0 <_bss_end+0x340540>
    19e8:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    19ec:	00000ecb 	andeq	r0, r0, fp, asr #29
    19f0:	00000020 	andeq	r0, r0, r0, lsr #32
    19f4:	000018c0 	andeq	r1, r0, r0, asr #17
    19f8:	0000e608 	andeq	lr, r0, r8, lsl #12
    19fc:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    1a00:	8b080e42 	blhi	205310 <_bss_end+0x1f3660>
    1a04:	42018e02 	andmi	r8, r1, #2, 28
    1a08:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    1a0c:	0d0c01d6 	stfeqs	f0, [ip, #-856]	; 0xfffffca8
    1a10:	00000008 	andeq	r0, r0, r8
    1a14:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a18:	000018c0 	andeq	r1, r0, r0, asr #17
    1a1c:	0000ea2c 	andeq	lr, r0, ip, lsr #20
    1a20:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a24:	8b080e42 	blhi	205334 <_bss_end+0x1f3684>
    1a28:	42018e02 	andmi	r8, r1, #2, 28
    1a2c:	50040b0c 	andpl	r0, r4, ip, lsl #22
    1a30:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1a34:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a38:	000018c0 	andeq	r1, r0, r0, asr #17
    1a3c:	0000ea58 	andeq	lr, r0, r8, asr sl
    1a40:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a44:	8b080e42 	blhi	205354 <_bss_end+0x1f36a4>
    1a48:	42018e02 	andmi	r8, r1, #2, 28
    1a4c:	50040b0c 	andpl	r0, r4, ip, lsl #22
    1a50:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1a54:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a58:	000018c0 	andeq	r1, r0, r0, asr #17
    1a5c:	0000e9c4 	andeq	lr, r0, r4, asr #19
    1a60:	0000004c 	andeq	r0, r0, ip, asr #32
    1a64:	8b080e42 	blhi	205374 <_bss_end+0x1f36c4>
    1a68:	42018e02 	andmi	r8, r1, #2, 28
    1a6c:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    1a70:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1a74:	00000018 	andeq	r0, r0, r8, lsl r0
    1a78:	000018c0 	andeq	r1, r0, r0, asr #17
    1a7c:	0000ea10 	andeq	lr, r0, r0, lsl sl
    1a80:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a84:	8b080e42 	blhi	205394 <_bss_end+0x1f36e4>
    1a88:	42018e02 	andmi	r8, r1, #2, 28
    1a8c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a90:	0000000c 	andeq	r0, r0, ip
    1a94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a98:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a9c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1aa0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1aa4:	00001a90 	muleq	r0, r0, sl
    1aa8:	0000eb50 	andeq	lr, r0, r0, asr fp
    1aac:	00000068 	andeq	r0, r0, r8, rrx
    1ab0:	8b040e42 	blhi	1053c0 <_bss_end+0xf3710>
    1ab4:	0b0d4201 	bleq	3522c0 <_bss_end+0x340610>
    1ab8:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    1abc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1ac0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ac4:	00001a90 	muleq	r0, r0, sl
    1ac8:	0000ebb8 			; <UNDEFINED> instruction: 0x0000ebb8
    1acc:	00000058 	andeq	r0, r0, r8, asr r0
    1ad0:	8b080e42 	blhi	2053e0 <_bss_end+0x1f3730>
    1ad4:	42018e02 	andmi	r8, r1, #2, 28
    1ad8:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    1adc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1ae0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ae4:	00001a90 	muleq	r0, r0, sl
    1ae8:	0000ec10 	andeq	lr, r0, r0, lsl ip
    1aec:	00000058 	andeq	r0, r0, r8, asr r0
    1af0:	8b080e42 	blhi	205400 <_bss_end+0x1f3750>
    1af4:	42018e02 	andmi	r8, r1, #2, 28
    1af8:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    1afc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1b00:	0000000c 	andeq	r0, r0, ip
    1b04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b08:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b10:	00000018 	andeq	r0, r0, r8, lsl r0
    1b14:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b18:	0000ec68 	andeq	lr, r0, r8, ror #24
    1b1c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b20:	8b080e42 	blhi	205430 <_bss_end+0x1f3780>
    1b24:	42018e02 	andmi	r8, r1, #2, 28
    1b28:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b2c:	00000018 	andeq	r0, r0, r8, lsl r0
    1b30:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b34:	0000ed58 	andeq	lr, r0, r8, asr sp
    1b38:	00000140 	andeq	r0, r0, r0, asr #2
    1b3c:	8b080e42 	blhi	20544c <_bss_end+0x1f379c>
    1b40:	42018e02 	andmi	r8, r1, #2, 28
    1b44:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b48:	00000018 	andeq	r0, r0, r8, lsl r0
    1b4c:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b50:	0000ee98 	muleq	r0, r8, lr
    1b54:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b58:	8b080e42 	blhi	205468 <_bss_end+0x1f37b8>
    1b5c:	42018e02 	andmi	r8, r1, #2, 28
    1b60:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b64:	00000018 	andeq	r0, r0, r8, lsl r0
    1b68:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b6c:	0000ef88 	andeq	lr, r0, r8, lsl #31
    1b70:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b74:	8b080e42 	blhi	205484 <_bss_end+0x1f37d4>
    1b78:	42018e02 	andmi	r8, r1, #2, 28
    1b7c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b80:	00000018 	andeq	r0, r0, r8, lsl r0
    1b84:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b88:	0000f078 	andeq	pc, r0, r8, ror r0	; <UNPREDICTABLE>
    1b8c:	000000ec 	andeq	r0, r0, ip, ror #1
    1b90:	8b080e42 	blhi	2054a0 <_bss_end+0x1f37f0>
    1b94:	42018e02 	andmi	r8, r1, #2, 28
    1b98:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1ba0:	00001b00 	andeq	r1, r0, r0, lsl #22
    1ba4:	0000f164 	andeq	pc, r0, r4, ror #2
    1ba8:	00000150 	andeq	r0, r0, r0, asr r1
    1bac:	8b080e42 	blhi	2054bc <_bss_end+0x1f380c>
    1bb0:	42018e02 	andmi	r8, r1, #2, 28
    1bb4:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1bb8:	0000000c 	andeq	r0, r0, ip
    1bbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bc0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bc4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bcc:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1bd0:	0000f2b4 			; <UNDEFINED> instruction: 0x0000f2b4
    1bd4:	0000002c 	andeq	r0, r0, ip, lsr #32
    1bd8:	8b040e42 	blhi	1054e8 <_bss_end+0xf3838>
    1bdc:	0b0d4201 	bleq	3523e8 <_bss_end+0x340738>
    1be0:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1be4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1be8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bec:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1bf0:	0000f2e0 	andeq	pc, r0, r0, ror #5
    1bf4:	00000044 	andeq	r0, r0, r4, asr #32
    1bf8:	8b040e42 	blhi	105508 <_bss_end+0xf3858>
    1bfc:	0b0d4201 	bleq	352408 <_bss_end+0x340758>
    1c00:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    1c04:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c0c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c10:	0000f324 	andeq	pc, r0, r4, lsr #6
    1c14:	00000050 	andeq	r0, r0, r0, asr r0
    1c18:	8b040e42 	blhi	105528 <_bss_end+0xf3878>
    1c1c:	0b0d4201 	bleq	352428 <_bss_end+0x340778>
    1c20:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1c24:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c28:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c2c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c30:	0000f374 	andeq	pc, r0, r4, ror r3	; <UNPREDICTABLE>
    1c34:	00000050 	andeq	r0, r0, r0, asr r0
    1c38:	8b040e42 	blhi	105548 <_bss_end+0xf3898>
    1c3c:	0b0d4201 	bleq	352448 <_bss_end+0x340798>
    1c40:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1c44:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c48:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c4c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c50:	0000f3c4 	andeq	pc, r0, r4, asr #7
    1c54:	0000002c 	andeq	r0, r0, ip, lsr #32
    1c58:	8b040e42 	blhi	105568 <_bss_end+0xf38b8>
    1c5c:	0b0d4201 	bleq	352468 <_bss_end+0x3407b8>
    1c60:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1c64:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c68:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c6c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c70:	0000f3f0 	strdeq	pc, [r0], -r0
    1c74:	00000050 	andeq	r0, r0, r0, asr r0
    1c78:	8b040e42 	blhi	105588 <_bss_end+0xf38d8>
    1c7c:	0b0d4201 	bleq	352488 <_bss_end+0x3407d8>
    1c80:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1c84:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c88:	0000000c 	andeq	r0, r0, ip
    1c8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c90:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c98:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c9c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1ca0:	0000f440 	andeq	pc, r0, r0, asr #8
    1ca4:	00000174 	andeq	r0, r0, r4, ror r1
    1ca8:	8b080e42 	blhi	2055b8 <_bss_end+0x1f3908>
    1cac:	42018e02 	andmi	r8, r1, #2, 28
    1cb0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1cb4:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
    1cb8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cbc:	00001c88 	andeq	r1, r0, r8, lsl #25
    1cc0:	0000f5b4 			; <UNDEFINED> instruction: 0x0000f5b4
    1cc4:	0000009c 	muleq	r0, ip, r0
    1cc8:	8b040e42 	blhi	1055d8 <_bss_end+0xf3928>
    1ccc:	0b0d4201 	bleq	3524d8 <_bss_end+0x340828>
    1cd0:	0d0d4602 	stceq	6, cr4, [sp, #-8]
    1cd4:	000ecb42 	andeq	ip, lr, r2, asr #22
    1cd8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cdc:	00001c88 	andeq	r1, r0, r8, lsl #25
    1ce0:	0000f650 	andeq	pc, r0, r0, asr r6	; <UNPREDICTABLE>
    1ce4:	000000c0 	andeq	r0, r0, r0, asr #1
    1ce8:	8b040e42 	blhi	1055f8 <_bss_end+0xf3948>
    1cec:	0b0d4201 	bleq	3524f8 <_bss_end+0x340848>
    1cf0:	0d0d5802 	stceq	8, cr5, [sp, #-8]
    1cf4:	000ecb42 	andeq	ip, lr, r2, asr #22
    1cf8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cfc:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d00:	0000f710 	andeq	pc, r0, r0, lsl r7	; <UNPREDICTABLE>
    1d04:	000000ac 	andeq	r0, r0, ip, lsr #1
    1d08:	8b040e42 	blhi	105618 <_bss_end+0xf3968>
    1d0c:	0b0d4201 	bleq	352518 <_bss_end+0x340868>
    1d10:	0d0d4e02 	stceq	14, cr4, [sp, #-8]
    1d14:	000ecb42 	andeq	ip, lr, r2, asr #22
    1d18:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d1c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d20:	0000f7bc 			; <UNDEFINED> instruction: 0x0000f7bc
    1d24:	00000054 	andeq	r0, r0, r4, asr r0
    1d28:	8b040e42 	blhi	105638 <_bss_end+0xf3988>
    1d2c:	0b0d4201 	bleq	352538 <_bss_end+0x340888>
    1d30:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
    1d34:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d38:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d3c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d40:	0000f810 	andeq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
    1d44:	00000068 	andeq	r0, r0, r8, rrx
    1d48:	8b040e42 	blhi	105658 <_bss_end+0xf39a8>
    1d4c:	0b0d4201 	bleq	352558 <_bss_end+0x3408a8>
    1d50:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
    1d54:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d58:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d5c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d60:	0000f878 	andeq	pc, r0, r8, ror r8	; <UNPREDICTABLE>
    1d64:	00000080 	andeq	r0, r0, r0, lsl #1
    1d68:	8b040e42 	blhi	105678 <_bss_end+0xf39c8>
    1d6c:	0b0d4201 	bleq	352578 <_bss_end+0x3408c8>
    1d70:	420d0d78 	andmi	r0, sp, #120, 26	; 0x1e00
    1d74:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d78:	0000000c 	andeq	r0, r0, ip
    1d7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d80:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d88:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d8c:	00001d78 	andeq	r1, r0, r8, ror sp
    1d90:	0000f8f8 	strdeq	pc, [r0], -r8
    1d94:	00000068 	andeq	r0, r0, r8, rrx
    1d98:	8b080e42 	blhi	2056a8 <_bss_end+0x1f39f8>
    1d9c:	42018e02 	andmi	r8, r1, #2, 28
    1da0:	6e040b0c 	vmlavs.f64	d0, d4, d12
    1da4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1da8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dac:	00001d78 	andeq	r1, r0, r8, ror sp
    1db0:	0000f960 	andeq	pc, r0, r0, ror #18
    1db4:	0000004c 	andeq	r0, r0, ip, asr #32
    1db8:	8b080e42 	blhi	2056c8 <_bss_end+0x1f3a18>
    1dbc:	42018e02 	andmi	r8, r1, #2, 28
    1dc0:	60040b0c 	andvs	r0, r4, ip, lsl #22
    1dc4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1dc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dcc:	00001d78 	andeq	r1, r0, r8, ror sp
    1dd0:	0000f9ac 	andeq	pc, r0, ip, lsr #19
    1dd4:	00000028 	andeq	r0, r0, r8, lsr #32
    1dd8:	8b040e42 	blhi	1056e8 <_bss_end+0xf3a38>
    1ddc:	0b0d4201 	bleq	3525e8 <_bss_end+0x340938>
    1de0:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
    1de4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1de8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dec:	00001d78 	andeq	r1, r0, r8, ror sp
    1df0:	0000f9d4 	ldrdeq	pc, [r0], -r4
    1df4:	0000007c 	andeq	r0, r0, ip, ror r0
    1df8:	8b080e42 	blhi	205708 <_bss_end+0x1f3a58>
    1dfc:	42018e02 	andmi	r8, r1, #2, 28
    1e00:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
    1e04:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1e08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e0c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e10:	0000fa50 	andeq	pc, r0, r0, asr sl	; <UNPREDICTABLE>
    1e14:	000000ec 	andeq	r0, r0, ip, ror #1
    1e18:	8b080e42 	blhi	205728 <_bss_end+0x1f3a78>
    1e1c:	42018e02 	andmi	r8, r1, #2, 28
    1e20:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e24:	080d0c70 	stmdaeq	sp, {r4, r5, r6, sl, fp}
    1e28:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e2c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e30:	0000fb3c 	andeq	pc, r0, ip, lsr fp	; <UNPREDICTABLE>
    1e34:	00000168 	andeq	r0, r0, r8, ror #2
    1e38:	8b080e42 	blhi	205748 <_bss_end+0x1f3a98>
    1e3c:	42018e02 	andmi	r8, r1, #2, 28
    1e40:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e44:	080d0cac 	stmdaeq	sp, {r2, r3, r5, r7, sl, fp}
    1e48:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e4c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e50:	0000fca4 	andeq	pc, r0, r4, lsr #25
    1e54:	00000058 	andeq	r0, r0, r8, asr r0
    1e58:	8b080e42 	blhi	205768 <_bss_end+0x1f3ab8>
    1e5c:	42018e02 	andmi	r8, r1, #2, 28
    1e60:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
    1e64:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1e68:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e6c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e70:	0000fcfc 	strdeq	pc, [r0], -ip
    1e74:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1e78:	8b080e42 	blhi	205788 <_bss_end+0x1f3ad8>
    1e7c:	42018e02 	andmi	r8, r1, #2, 28
    1e80:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e84:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
    1e88:	0000000c 	andeq	r0, r0, ip
    1e8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1e90:	7c020001 	stcvc	0, cr0, [r2], {1}
    1e94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e98:	0000000c 	andeq	r0, r0, ip
    1e9c:	00001e88 	andeq	r1, r0, r8, lsl #29
    1ea0:	0000fdac 	andeq	pc, r0, ip, lsr #27
    1ea4:	00000004 	andeq	r0, r0, r4
    1ea8:	0000000c 	andeq	r0, r0, ip
    1eac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1eb0:	7c010001 	stcvc	0, cr0, [r1], {1}
    1eb4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1eb8:	0000000c 	andeq	r0, r0, ip
    1ebc:	00001ea8 	andeq	r1, r0, r8, lsr #29
    1ec0:	0000fdb0 			; <UNDEFINED> instruction: 0x0000fdb0
    1ec4:	000001ec 	andeq	r0, r0, ip, ror #3

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	00008a10 	andeq	r8, r0, r0, lsl sl
   4:	000090d8 	ldrdeq	r9, [r0], -r8
   8:	000090d8 	ldrdeq	r9, [r0], -r8
   c:	0000910c 	andeq	r9, r0, ip, lsl #2
  10:	0000910c 	andeq	r9, r0, ip, lsl #2
  14:	00009154 	andeq	r9, r0, r4, asr r1
	...
  20:	00009154 	andeq	r9, r0, r4, asr r1
  24:	0000979c 	muleq	r0, ip, r7
  28:	0000979c 	muleq	r0, ip, r7
  2c:	000097d4 	ldrdeq	r9, [r0], -r4
  30:	000097d4 	ldrdeq	r9, [r0], -r4
  34:	0000985c 	andeq	r9, r0, ip, asr r8
  38:	0000985c 	andeq	r9, r0, ip, asr r8
  3c:	00009888 	andeq	r9, r0, r8, lsl #17
	...
  48:	0000a640 	andeq	sl, r0, r0, asr #12
  4c:	0000a67c 	andeq	sl, r0, ip, ror r6
  50:	0000aa64 	andeq	sl, r0, r4, ror #20
  54:	0000aa6c 	andeq	sl, r0, ip, ror #20
	...
  60:	0000a67c 	andeq	sl, r0, ip, ror r6
  64:	0000a730 	andeq	sl, r0, r0, lsr r7
  68:	0000aa6c 	andeq	sl, r0, ip, ror #20
  6c:	0000aa7c 	andeq	sl, r0, ip, ror sl
	...
  78:	0000a730 	andeq	sl, r0, r0, lsr r7
  7c:	0000aa5c 	andeq	sl, r0, ip, asr sl
  80:	0000aa7c 	andeq	sl, r0, ip, ror sl
  84:	0000aa88 	andeq	sl, r0, r8, lsl #21
	...
  90:	00009888 	andeq	r9, r0, r8, lsl #17
  94:	0000ab00 	andeq	sl, r0, r0, lsl #22
  98:	0000ab00 	andeq	sl, r0, r0, lsl #22
  9c:	0000ab30 	andeq	sl, r0, r0, lsr fp
  a0:	0000ab30 	andeq	sl, r0, r0, lsr fp
  a4:	0000aba0 	andeq	sl, r0, r0, lsr #23
  a8:	0000aba0 	andeq	sl, r0, r0, lsr #23
  ac:	0000ac10 	andeq	sl, r0, r0, lsl ip
  b0:	0000ac10 	andeq	sl, r0, r0, lsl ip
  b4:	0000ac7c 	andeq	sl, r0, ip, ror ip
	...
  c0:	0000b9b4 			; <UNDEFINED> instruction: 0x0000b9b4
  c4:	0000c210 	andeq	ip, r0, r0, lsl r2
  c8:	0000c210 	andeq	ip, r0, r0, lsl r2
  cc:	0000c24c 	andeq	ip, r0, ip, asr #4
  d0:	0000c24c 	andeq	ip, r0, ip, asr #4
  d4:	0000c278 	andeq	ip, r0, r8, ror r2
	...
  e0:	0000c278 	andeq	ip, r0, r8, ror r2
  e4:	0000c2a4 	andeq	ip, r0, r4, lsr #5
  e8:	0000c2a4 	andeq	ip, r0, r4, lsr #5
  ec:	0000c2d0 	ldrdeq	ip, [r0], -r0
  f0:	0000c2d0 	ldrdeq	ip, [r0], -r0
  f4:	0000c2f4 	strdeq	ip, [r0], -r4
  f8:	0000c2f4 	strdeq	ip, [r0], -r4
  fc:	0000c320 	andeq	ip, r0, r0, lsr #6
 100:	0000c320 	andeq	ip, r0, r0, lsr #6
 104:	0000c350 	andeq	ip, r0, r0, asr r3
 108:	0000ab00 	andeq	sl, r0, r0, lsl #22
 10c:	0000ab30 	andeq	sl, r0, r0, lsr fp
 110:	0000c350 	andeq	ip, r0, r0, asr r3
 114:	0000c384 	andeq	ip, r0, r4, lsl #7
 118:	0000c384 	andeq	ip, r0, r4, lsl #7
 11c:	0000c3b8 			; <UNDEFINED> instruction: 0x0000c3b8
 120:	0000c3b8 			; <UNDEFINED> instruction: 0x0000c3b8
 124:	0000c3ec 	andeq	ip, r0, ip, ror #7
 128:	0000c3ec 	andeq	ip, r0, ip, ror #7
 12c:	0000c468 	andeq	ip, r0, r8, ror #8
 130:	0000c468 	andeq	ip, r0, r8, ror #8
 134:	0000c4ac 	andeq	ip, r0, ip, lsr #9
 138:	0000c4ac 	andeq	ip, r0, ip, lsr #9
 13c:	0000c4e0 	andeq	ip, r0, r0, ror #9
 140:	0000c4e0 	andeq	ip, r0, r0, ror #9
 144:	0000c560 	andeq	ip, r0, r0, ror #10
 148:	0000c560 	andeq	ip, r0, r0, ror #10
 14c:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
 150:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
 154:	0000c678 	andeq	ip, r0, r8, ror r6
 158:	0000c678 	andeq	ip, r0, r8, ror r6
 15c:	0000c6a4 	andeq	ip, r0, r4, lsr #13
 160:	0000c6a4 	andeq	ip, r0, r4, lsr #13
 164:	0000c6c4 	andeq	ip, r0, r4, asr #13
 168:	0000c6c4 	andeq	ip, r0, r4, asr #13
 16c:	0000c81c 	andeq	ip, r0, ip, lsl r8
 170:	0000c81c 	andeq	ip, r0, ip, lsl r8
 174:	0000c868 	andeq	ip, r0, r8, ror #16
 178:	0000c868 	andeq	ip, r0, r8, ror #16
 17c:	0000c8ac 	andeq	ip, r0, ip, lsr #17
 180:	0000c8ac 	andeq	ip, r0, ip, lsr #17
 184:	0000c8e0 	andeq	ip, r0, r0, ror #17
 188:	0000c8e0 	andeq	ip, r0, r0, ror #17
 18c:	0000c90c 	andeq	ip, r0, ip, lsl #18
 190:	0000c90c 	andeq	ip, r0, ip, lsl #18
 194:	0000c974 	andeq	ip, r0, r4, ror r9
 198:	0000c974 	andeq	ip, r0, r4, ror r9
 19c:	0000c9bc 			; <UNDEFINED> instruction: 0x0000c9bc
 1a0:	0000c9bc 			; <UNDEFINED> instruction: 0x0000c9bc
 1a4:	0000ca00 	andeq	ip, r0, r0, lsl #20
 1a8:	0000ca00 	andeq	ip, r0, r0, lsl #20
 1ac:	0000ca20 	andeq	ip, r0, r0, lsr #20
 1b0:	0000ca20 	andeq	ip, r0, r0, lsr #20
 1b4:	0000ca88 	andeq	ip, r0, r8, lsl #21
 1b8:	0000ca88 	andeq	ip, r0, r8, lsl #21
 1bc:	0000cad0 	ldrdeq	ip, [r0], -r0
 1c0:	0000cad0 	ldrdeq	ip, [r0], -r0
 1c4:	0000cb14 	andeq	ip, r0, r4, lsl fp
 1c8:	0000cb14 	andeq	ip, r0, r4, lsl fp
 1cc:	0000cb48 	andeq	ip, r0, r8, asr #22
 1d0:	0000cb48 	andeq	ip, r0, r8, asr #22
 1d4:	0000cba0 	andeq	ip, r0, r0, lsr #23
 1d8:	0000cba0 	andeq	ip, r0, r0, lsr #23
 1dc:	0000cc10 	andeq	ip, r0, r0, lsl ip
 1e0:	0000cc10 	andeq	ip, r0, r0, lsl ip
 1e4:	0000cc68 	andeq	ip, r0, r8, ror #24
 1e8:	0000cc68 	andeq	ip, r0, r8, ror #24
 1ec:	0000cc94 	muleq	r0, r4, ip
 1f0:	0000cc94 	muleq	r0, r4, ip
 1f4:	0000ccb4 			; <UNDEFINED> instruction: 0x0000ccb4
 1f8:	0000ccb4 			; <UNDEFINED> instruction: 0x0000ccb4
 1fc:	0000cd20 	andeq	ip, r0, r0, lsr #26
 200:	0000cd20 	andeq	ip, r0, r0, lsr #26
 204:	0000cd68 	andeq	ip, r0, r8, ror #26
 208:	0000cd68 	andeq	ip, r0, r8, ror #26
 20c:	0000cdac 	andeq	ip, r0, ip, lsr #27
 210:	0000cdac 	andeq	ip, r0, ip, lsr #27
 214:	0000cde0 	andeq	ip, r0, r0, ror #27
 218:	0000cde0 	andeq	ip, r0, r0, ror #27
 21c:	0000ce0c 	andeq	ip, r0, ip, lsl #28
 220:	0000ce0c 	andeq	ip, r0, ip, lsl #28
 224:	0000ce7c 	andeq	ip, r0, ip, ror lr
 228:	0000ce7c 	andeq	ip, r0, ip, ror lr
 22c:	0000ced4 	ldrdeq	ip, [r0], -r4
 230:	0000ced4 	ldrdeq	ip, [r0], -r4
 234:	0000cf00 	andeq	ip, r0, r0, lsl #30
 238:	0000cf00 	andeq	ip, r0, r0, lsl #30
 23c:	0000cf20 	andeq	ip, r0, r0, lsr #30
 240:	0000cf20 	andeq	ip, r0, r0, lsr #30
 244:	0000cf8c 	andeq	ip, r0, ip, lsl #31
 248:	0000cf8c 	andeq	ip, r0, ip, lsl #31
 24c:	0000cfc8 	andeq	ip, r0, r8, asr #31
 250:	0000cfc8 	andeq	ip, r0, r8, asr #31
 254:	0000d00c 	andeq	sp, r0, ip
 258:	0000d00c 	andeq	sp, r0, ip
 25c:	0000d040 	andeq	sp, r0, r0, asr #32
 260:	0000d040 	andeq	sp, r0, r0, asr #32
 264:	0000d128 	andeq	sp, r0, r8, lsr #2
 268:	0000d128 	andeq	sp, r0, r8, lsr #2
 26c:	0000d154 	andeq	sp, r0, r4, asr r1
 270:	0000d154 	andeq	sp, r0, r4, asr r1
 274:	0000d1ac 	andeq	sp, r0, ip, lsr #3
 278:	0000d1ac 	andeq	sp, r0, ip, lsr #3
 27c:	0000d1d8 	ldrdeq	sp, [r0], -r8
 280:	0000d1d8 	ldrdeq	sp, [r0], -r8
 284:	0000d1f8 	strdeq	sp, [r0], -r8
 288:	0000d1f8 	strdeq	sp, [r0], -r8
 28c:	0000d27c 	andeq	sp, r0, ip, ror r2
 290:	0000d27c 	andeq	sp, r0, ip, ror r2
 294:	0000d2c4 	andeq	sp, r0, r4, asr #5
 298:	0000d2c4 	andeq	sp, r0, r4, asr #5
 29c:	0000d308 	andeq	sp, r0, r8, lsl #6
 2a0:	0000d308 	andeq	sp, r0, r8, lsl #6
 2a4:	0000d33c 	andeq	sp, r0, ip, lsr r3
 2a8:	0000d33c 	andeq	sp, r0, ip, lsr r3
 2ac:	0000d368 	andeq	sp, r0, r8, ror #6
 2b0:	0000d368 	andeq	sp, r0, r8, ror #6
 2b4:	0000d3a4 	andeq	sp, r0, r4, lsr #7
 2b8:	0000d3a4 	andeq	sp, r0, r4, lsr #7
 2bc:	0000d3fc 	strdeq	sp, [r0], -ip
 2c0:	0000d3fc 	strdeq	sp, [r0], -ip
 2c4:	0000d428 	andeq	sp, r0, r8, lsr #8
 2c8:	0000d428 	andeq	sp, r0, r8, lsr #8
 2cc:	0000d448 	andeq	sp, r0, r8, asr #8
 2d0:	0000d448 	andeq	sp, r0, r8, asr #8
 2d4:	0000d4bc 			; <UNDEFINED> instruction: 0x0000d4bc
	...
 2e0:	0000e658 	andeq	lr, r0, r8, asr r6
 2e4:	0000e6ec 	andeq	lr, r0, ip, ror #13
 2e8:	0000e98c 	andeq	lr, r0, ip, lsl #19
 2ec:	0000e99c 	muleq	r0, ip, r9
	...
 2f8:	0000de58 	andeq	sp, r0, r8, asr lr
 2fc:	0000ea2c 	andeq	lr, r0, ip, lsr #20
 300:	0000ea2c 	andeq	lr, r0, ip, lsr #20
 304:	0000ea58 	andeq	lr, r0, r8, asr sl
 308:	0000ea58 	andeq	lr, r0, r8, asr sl
 30c:	0000ea84 	andeq	lr, r0, r4, lsl #21
	...
 318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 31c:	00000000 	andeq	r0, r0, r0
 320:	00008000 	andeq	r8, r0, r0
 324:	000080ac 	andeq	r8, r0, ip, lsr #1
 328:	0000eae0 	andeq	lr, r0, r0, ror #21
 32c:	0000eb50 	andeq	lr, r0, r0, asr fp
	...
 338:	0000fdac 	andeq	pc, r0, ip, lsr #27
 33c:	0000fdb0 			; <UNDEFINED> instruction: 0x0000fdb0
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00000000 	andeq	r0, r0, r0
   4:	0000fdac 	andeq	pc, r0, ip, lsr #27
   8:	0000fdaf 	andeq	pc, r0, pc, lsr #27
   c:	af500001 	svcge	0x00500001
  10:	b00000fd 	strdlt	r0, [r0], -sp
  14:	040000fd 	streq	r0, [r0], #-253	; 0xffffff03
  18:	5001f300 	andpl	pc, r1, r0, lsl #6
  1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
  20:	00000000 	andeq	r0, r0, r0
	...
