
./kernel:     file format elf32-littlearm


Disassembly of section .text:

00008000 <_start>:
_start():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:14
	;@	- sem skoci bootloader, prvni na co narazi je "ldr pc, _reset_ptr" -> tedy se chova jako kdyby slo o reset a skoci na zacatek provadeni
	;@	- v cele svoji krase (vsechny "ldr" instrukce) slouzi jako predloha skutecne tabulce vektoru preruseni
	;@ na dany offset procesor skoci, kdyz je vyvolano libovolne preruseni
	;@ ARM nastavuje rovnou registr PC na tuto adresu, tzn. na teto adrese musi byt kodovana 4B instrukce skoku nekam jinam
	;@ oproti tomu napr. x86 (x86_64) obsahuje v tabulce rovnou adresu a procesor nastavuje PC (CS:IP) na adresu kterou najde v tabulce
	ldr pc, _reset_ptr						;@ 0x00 - reset - vyvolano pri resetu procesoru
    8000:	e59ff018 	ldr	pc, [pc, #24]	; 8020 <_reset_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:15
	ldr pc, _undefined_instruction_ptr		;@ 0x04 - undefined instruction - vyjimka, vyvolana pri dekodovani nezname instrukce
    8004:	e59ff018 	ldr	pc, [pc, #24]	; 8024 <_undefined_instruction_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:16
	ldr pc, _software_interrupt_ptr			;@ 0x08 - software interrupt - vyvolano, kdyz procesor provede instrukci swi
    8008:	e59ff018 	ldr	pc, [pc, #24]	; 8028 <_software_interrupt_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:17
	ldr pc, _prefetch_abort_ptr				;@ 0x0C - prefetch abort - vyvolano, kdyz se procesor snazi napr. nacist instrukci z mista, odkud nacist nejde
    800c:	e59ff018 	ldr	pc, [pc, #24]	; 802c <_prefetch_abort_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:18
	ldr pc, _data_abort_ptr					;@ 0x10 - data abort - vyvolano, kdyz se procesor snazi napr. nacist data z mista, odkud nacist nejdou
    8010:	e59ff018 	ldr	pc, [pc, #24]	; 8030 <_data_abort_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:19
	ldr pc, _unused_handler_ptr				;@ 0x14 - unused - ve specifikaci ARM neni uvedeno zadne vyuziti
    8014:	e59ff018 	ldr	pc, [pc, #24]	; 8034 <_unused_handler_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:20
	ldr pc, _irq_ptr						;@ 0x18 - IRQ - hardwarove preruseni (general purpose)
    8018:	e59ff018 	ldr	pc, [pc, #24]	; 8038 <_irq_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
	ldr pc, _fast_interrupt_ptr				;@ 0x1C - fast interrupt request - prioritni IRQ pro vysokorychlostni zalezitosti
    801c:	e59ff018 	ldr	pc, [pc, #24]	; 803c <_fast_interrupt_ptr>

00008020 <_reset_ptr>:
_reset_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8020:	00008040 	andeq	r8, r0, r0, asr #32

00008024 <_undefined_instruction_ptr>:
_undefined_instruction_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8024:	0000eb9c 	muleq	r0, ip, fp

00008028 <_software_interrupt_ptr>:
_software_interrupt_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8028:	0000eba0 	andeq	lr, r0, r0, lsr #23

0000802c <_prefetch_abort_ptr>:
_prefetch_abort_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    802c:	0000ebe8 	andeq	lr, r0, r8, ror #23

00008030 <_data_abort_ptr>:
_data_abort_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8030:	0000ebec 	andeq	lr, r0, ip, ror #23

00008034 <_unused_handler_ptr>:
_unused_handler_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8034:	00008040 	andeq	r8, r0, r0, asr #32

00008038 <_irq_ptr>:
_irq_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8038:	0000ebc0 	andeq	lr, r0, r0, asr #23

0000803c <_fast_interrupt_ptr>:
_fast_interrupt_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    803c:	0000d62c 	andeq	sp, r0, ip, lsr #12

00008040 <_reset>:
_reset():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:52


;@ kernel reset vektor - tento kod se vykona pri kazdem resetu zarizeni (i prvnim spusteni)
_reset:
	;@ nacteni tabulky vektoru preruseni do pameti
	mov r0, #0x8000			;@ adresa 0x8000 (_start) do r0
    8040:	e3a00902 	mov	r0, #32768	; 0x8000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:53
    mov r1, #0x0000			;@ adresa 0x0000 (pocatek RAM) do r1 - tam budeme vkladat tabulku vektoru preruseni
    8044:	e3a01000 	mov	r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:57

	;@ Thumb instrukce - nacteni 4B slov z pameti ulozene v r0 (0x8000) do registru r2, 3, ... 9
	;@                 - ulozeni obsahu registru r2, 3, ... 9 do pameti ulozene v registru r1 (0x0000)
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8048:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:58
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:59
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:60
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:63

	;@ baze pro systemove zasobniky
	mov r4, #0x0
    8058:	e3a04000 	mov	r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:66

	;@ nejdrive supervisor mod a jeho stack
    mov r0, #(CPSR_MODE_SVR | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    805c:	e3a000d3 	mov	r0, #211	; 0xd3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:67
    msr cpsr_c, r0
    8060:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:68
	add sp, r4, #0x8000
    8064:	e284d902 	add	sp, r4, #32768	; 0x8000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:71

	;@ na moment se prepneme do IRQ rezimu, nastavime mu stack pointer
	mov r0, #(CPSR_MODE_IRQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8068:	e3a000d2 	mov	r0, #210	; 0xd2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:72
    msr cpsr_c, r0
    806c:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:73
	add sp, r4, #0x7000
    8070:	e284da07 	add	sp, r4, #28672	; 0x7000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:76

	;@ na moment se prepneme do FIQ rezimu, nastavime mu stack pointer
	mov r0, #(CPSR_MODE_FIQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8074:	e3a000d1 	mov	r0, #209	; 0xd1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:77
    msr cpsr_c, r0
    8078:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:78
	add sp, r4, #0x6000
    807c:	e284da06 	add	sp, r4, #24576	; 0x6000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:81

	;@ nakonec system mod a stack
    mov r0, #(CPSR_MODE_SYS | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8080:	e3a000df 	mov	r0, #223	; 0xdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:82
    msr cpsr_c, r0
    8084:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:83
	add sp, r4, #0x5000
    8088:	e284da05 	add	sp, r4, #20480	; 0x5000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:86

	;@ zapneme nezarovnany pristup do pameti (nemusi byt zadouci, ale pro nase potreby je to v poradku)
	mrc p15, #0, r4, c1, c0, #0
    808c:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:87
	orr r4, #0x400000
    8090:	e3844501 	orr	r4, r4, #4194304	; 0x400000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:88
	mcr p15, #0, r4, c1, c0, #0
    8094:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:90

	bl _c_startup			;@ C startup kod (inicializace prostredi)
    8098:	eb001ad4 	bl	ebf0 <_c_startup>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:91
	bl _cpp_startup			;@ C++ startup kod (volani globalnich konstruktoru, ...)
    809c:	eb001aed 	bl	ec58 <_cpp_startup>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:92
	bl _kernel_main			;@ skocime do hlavniho kodu jadra (v C)
    80a0:	eb0015ed 	bl	d85c <_kernel_main>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:93
	bl _cpp_shutdown		;@ C++ shutdown kod (volani globalnich destruktoru, ...)
    80a4:	eb001b01 	bl	ecb0 <_cpp_shutdown>

000080a8 <hang>:
hang():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:95
hang:
	b hang
    80a8:	eafffffe 	b	80a8 <hang>

000080ac <__cxa_guard_acquire>:
__cxa_guard_acquire():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:11
    extern "C" int __cxa_guard_acquire(__guard*);
    extern "C" void __cxa_guard_release(__guard*);
    extern "C" void __cxa_guard_abort(__guard*);

    extern "C" int __cxa_guard_acquire(__guard* g)
    {
    80ac:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    80b0:	e28db000 	add	fp, sp, #0
    80b4:	e24dd00c 	sub	sp, sp, #12
    80b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:12
        return !*(char*)(g);
    80bc:	e51b3008 	ldr	r3, [fp, #-8]
    80c0:	e5d33000 	ldrb	r3, [r3]
    80c4:	e3530000 	cmp	r3, #0
    80c8:	03a03001 	moveq	r3, #1
    80cc:	13a03000 	movne	r3, #0
    80d0:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:13
    }
    80d4:	e1a00003 	mov	r0, r3
    80d8:	e28bd000 	add	sp, fp, #0
    80dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    80e0:	e12fff1e 	bx	lr

000080e4 <__cxa_guard_release>:
__cxa_guard_release():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:16

    extern "C" void __cxa_guard_release(__guard* g)
    {
    80e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    80e8:	e28db000 	add	fp, sp, #0
    80ec:	e24dd00c 	sub	sp, sp, #12
    80f0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:17
        *(char*)g = 1;
    80f4:	e51b3008 	ldr	r3, [fp, #-8]
    80f8:	e3a02001 	mov	r2, #1
    80fc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:18
    }
    8100:	e320f000 	nop	{0}
    8104:	e28bd000 	add	sp, fp, #0
    8108:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    810c:	e12fff1e 	bx	lr

00008110 <__cxa_guard_abort>:
__cxa_guard_abort():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:21

    extern "C" void __cxa_guard_abort(__guard*)
    {
    8110:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8114:	e28db000 	add	fp, sp, #0
    8118:	e24dd00c 	sub	sp, sp, #12
    811c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:22
    }
    8120:	e320f000 	nop	{0}
    8124:	e28bd000 	add	sp, fp, #0
    8128:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    812c:	e12fff1e 	bx	lr

00008130 <__dso_handle>:
__dso_handle():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:26
}

extern "C" void __dso_handle()
{
    8130:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8134:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:28
    // ignore dtors for now
}
    8138:	e320f000 	nop	{0}
    813c:	e28bd000 	add	sp, fp, #0
    8140:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8144:	e12fff1e 	bx	lr

00008148 <__cxa_atexit>:
__cxa_atexit():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:31

extern "C" void __cxa_atexit()
{
    8148:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    814c:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:33
    // ignore dtors for now
}
    8150:	e320f000 	nop	{0}
    8154:	e28bd000 	add	sp, fp, #0
    8158:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    815c:	e12fff1e 	bx	lr

00008160 <__cxa_pure_virtual>:
__cxa_pure_virtual():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:36

extern "C" void __cxa_pure_virtual()
{
    8160:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8164:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:38
    // pure virtual method called
}
    8168:	e320f000 	nop	{0}
    816c:	e28bd000 	add	sp, fp, #0
    8170:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8174:	e12fff1e 	bx	lr

00008178 <__aeabi_unwind_cpp_pr1>:
__aeabi_unwind_cpp_pr1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:41

extern "C" void __aeabi_unwind_cpp_pr1()
{
    8178:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    817c:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:42 (discriminator 1)
    while (true)
    8180:	eafffffe 	b	8180 <__aeabi_unwind_cpp_pr1+0x8>

00008184 <_ZN13CGPIO_HandlerC1Ej>:
_ZN13CGPIO_HandlerC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:8

#include <stdstring.h>

CGPIO_Handler sGPIO(hal::GPIO_Base);

CGPIO_Handler::CGPIO_Handler(unsigned int gpio_base_addr)
    8184:	e92d4800 	push	{fp, lr}
    8188:	e28db004 	add	fp, sp, #4
    818c:	e24dd008 	sub	sp, sp, #8
    8190:	e50b0008 	str	r0, [fp, #-8]
    8194:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:9
: mGPIO(reinterpret_cast<unsigned int*>(gpio_base_addr))
    8198:	e51b200c 	ldr	r2, [fp, #-12]
    819c:	e51b3008 	ldr	r3, [fp, #-8]
    81a0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:11
{
    bzero(&mPin_Reservations_Read, sizeof(mPin_Reservations_Read));
    81a4:	e51b3008 	ldr	r3, [fp, #-8]
    81a8:	e2833004 	add	r3, r3, #4
    81ac:	e3a01008 	mov	r1, #8
    81b0:	e1a00003 	mov	r0, r3
    81b4:	eb001d7f 	bl	f7b8 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:12
    bzero(&mPin_Reservations_Write, sizeof(mPin_Reservations_Write));
    81b8:	e51b3008 	ldr	r3, [fp, #-8]
    81bc:	e283300c 	add	r3, r3, #12
    81c0:	e3a01008 	mov	r1, #8
    81c4:	e1a00003 	mov	r0, r3
    81c8:	eb001d7a 	bl	f7b8 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:13
}
    81cc:	e51b3008 	ldr	r3, [fp, #-8]
    81d0:	e1a00003 	mov	r0, r3
    81d4:	e24bd004 	sub	sp, fp, #4
    81d8:	e8bd8800 	pop	{fp, pc}

000081dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>:
_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:16

bool CGPIO_Handler::Get_GPFSEL_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    81dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    81e0:	e28db000 	add	fp, sp, #0
    81e4:	e24dd014 	sub	sp, sp, #20
    81e8:	e50b0008 	str	r0, [fp, #-8]
    81ec:	e50b100c 	str	r1, [fp, #-12]
    81f0:	e50b2010 	str	r2, [fp, #-16]
    81f4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:17
    if (pin > hal::GPIO_Pin_Count)
    81f8:	e51b300c 	ldr	r3, [fp, #-12]
    81fc:	e3530036 	cmp	r3, #54	; 0x36
    8200:	9a000001 	bls	820c <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:18
        return false;
    8204:	e3a03000 	mov	r3, #0
    8208:	ea000014 	b	8260 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:20

    reg = pin / 10;
    820c:	e51b300c 	ldr	r3, [fp, #-12]
    8210:	e59f2058 	ldr	r2, [pc, #88]	; 8270 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x94>
    8214:	e0832392 	umull	r2, r3, r2, r3
    8218:	e1a021a3 	lsr	r2, r3, #3
    821c:	e51b3010 	ldr	r3, [fp, #-16]
    8220:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:31
            case 3: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL3); break;
            case 4: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL4); break;
            case 5: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL5); break;
    }*/

    bit_idx = (pin % 10) * 3;
    8224:	e51b100c 	ldr	r1, [fp, #-12]
    8228:	e59f3040 	ldr	r3, [pc, #64]	; 8270 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x94>
    822c:	e0832193 	umull	r2, r3, r3, r1
    8230:	e1a021a3 	lsr	r2, r3, #3
    8234:	e1a03002 	mov	r3, r2
    8238:	e1a03103 	lsl	r3, r3, #2
    823c:	e0833002 	add	r3, r3, r2
    8240:	e1a03083 	lsl	r3, r3, #1
    8244:	e0412003 	sub	r2, r1, r3
    8248:	e1a03002 	mov	r3, r2
    824c:	e1a03083 	lsl	r3, r3, #1
    8250:	e0832002 	add	r2, r3, r2
    8254:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8258:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:33

    return true;
    825c:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:34
}
    8260:	e1a00003 	mov	r0, r3
    8264:	e28bd000 	add	sp, fp, #0
    8268:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    826c:	e12fff1e 	bx	lr
    8270:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd

00008274 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:37

bool CGPIO_Handler::Get_GPCLR_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    8274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8278:	e28db000 	add	fp, sp, #0
    827c:	e24dd014 	sub	sp, sp, #20
    8280:	e50b0008 	str	r0, [fp, #-8]
    8284:	e50b100c 	str	r1, [fp, #-12]
    8288:	e50b2010 	str	r2, [fp, #-16]
    828c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:38
    if (pin > hal::GPIO_Pin_Count)
    8290:	e51b300c 	ldr	r3, [fp, #-12]
    8294:	e3530036 	cmp	r3, #54	; 0x36
    8298:	9a000001 	bls	82a4 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:39
        return false;
    829c:	e3a03000 	mov	r3, #0
    82a0:	ea00000c 	b	82d8 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPCLR0 : hal::GPIO_Reg::GPCLR1);
    82a4:	e51b300c 	ldr	r3, [fp, #-12]
    82a8:	e353001f 	cmp	r3, #31
    82ac:	8a000001 	bhi	82b8 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 1)
    82b0:	e3a0200a 	mov	r2, #10
    82b4:	ea000000 	b	82bc <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 2)
    82b8:	e3a0200b 	mov	r2, #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 4)
    82bc:	e51b3010 	ldr	r3, [fp, #-16]
    82c0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:42 (discriminator 4)
    bit_idx = pin % 32;
    82c4:	e51b300c 	ldr	r3, [fp, #-12]
    82c8:	e203201f 	and	r2, r3, #31
    82cc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    82d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:44 (discriminator 4)

    return true;
    82d4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:45
}
    82d8:	e1a00003 	mov	r0, r3
    82dc:	e28bd000 	add	sp, fp, #0
    82e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    82e4:	e12fff1e 	bx	lr

000082e8 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:48

bool CGPIO_Handler::Get_GPSET_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    82e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    82ec:	e28db000 	add	fp, sp, #0
    82f0:	e24dd014 	sub	sp, sp, #20
    82f4:	e50b0008 	str	r0, [fp, #-8]
    82f8:	e50b100c 	str	r1, [fp, #-12]
    82fc:	e50b2010 	str	r2, [fp, #-16]
    8300:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:49
    if (pin > hal::GPIO_Pin_Count)
    8304:	e51b300c 	ldr	r3, [fp, #-12]
    8308:	e3530036 	cmp	r3, #54	; 0x36
    830c:	9a000001 	bls	8318 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:50
        return false;
    8310:	e3a03000 	mov	r3, #0
    8314:	ea00000c 	b	834c <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPSET0 : hal::GPIO_Reg::GPSET1);
    8318:	e51b300c 	ldr	r3, [fp, #-12]
    831c:	e353001f 	cmp	r3, #31
    8320:	8a000001 	bhi	832c <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 1)
    8324:	e3a02007 	mov	r2, #7
    8328:	ea000000 	b	8330 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 2)
    832c:	e3a02008 	mov	r2, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 4)
    8330:	e51b3010 	ldr	r3, [fp, #-16]
    8334:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:53 (discriminator 4)
    bit_idx = pin % 32;
    8338:	e51b300c 	ldr	r3, [fp, #-12]
    833c:	e203201f 	and	r2, r3, #31
    8340:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8344:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:55 (discriminator 4)

    return true;
    8348:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:56
}
    834c:	e1a00003 	mov	r0, r3
    8350:	e28bd000 	add	sp, fp, #0
    8354:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8358:	e12fff1e 	bx	lr

0000835c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:59

bool CGPIO_Handler::Get_GPLEV_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    835c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8360:	e28db000 	add	fp, sp, #0
    8364:	e24dd014 	sub	sp, sp, #20
    8368:	e50b0008 	str	r0, [fp, #-8]
    836c:	e50b100c 	str	r1, [fp, #-12]
    8370:	e50b2010 	str	r2, [fp, #-16]
    8374:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:60
    if (pin > hal::GPIO_Pin_Count)
    8378:	e51b300c 	ldr	r3, [fp, #-12]
    837c:	e3530036 	cmp	r3, #54	; 0x36
    8380:	9a000001 	bls	838c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:61
        return false;
    8384:	e3a03000 	mov	r3, #0
    8388:	ea00000c 	b	83c0 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPLEV0 : hal::GPIO_Reg::GPLEV1);
    838c:	e51b300c 	ldr	r3, [fp, #-12]
    8390:	e353001f 	cmp	r3, #31
    8394:	8a000001 	bhi	83a0 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 1)
    8398:	e3a0200d 	mov	r2, #13
    839c:	ea000000 	b	83a4 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 2)
    83a0:	e3a0200e 	mov	r2, #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 4)
    83a4:	e51b3010 	ldr	r3, [fp, #-16]
    83a8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:64 (discriminator 4)
    bit_idx = pin % 32;
    83ac:	e51b300c 	ldr	r3, [fp, #-12]
    83b0:	e203201f 	and	r2, r3, #31
    83b4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    83b8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:66 (discriminator 4)

    return true;
    83bc:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:67
}
    83c0:	e1a00003 	mov	r0, r3
    83c4:	e28bd000 	add	sp, fp, #0
    83c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    83cc:	e12fff1e 	bx	lr

000083d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>:
_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:70

void CGPIO_Handler::Set_GPIO_Function(uint32_t pin, NGPIO_Function func)
{
    83d0:	e92d4800 	push	{fp, lr}
    83d4:	e28db004 	add	fp, sp, #4
    83d8:	e24dd020 	sub	sp, sp, #32
    83dc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    83e0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    83e4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:72
    uint32_t reg, bit;
    if (!Get_GPFSEL_Location(pin, reg, bit))
    83e8:	e24b3014 	sub	r3, fp, #20
    83ec:	e24b2010 	sub	r2, fp, #16
    83f0:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    83f4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    83f8:	ebffff77 	bl	81dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>
    83fc:	e1a03000 	mov	r3, r0
    8400:	e2233001 	eor	r3, r3, #1
    8404:	e6ef3073 	uxtb	r3, r3
    8408:	e3530000 	cmp	r3, #0
    840c:	1a00001e 	bne	848c <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:75
        return;

    unsigned int mode = static_cast<unsigned int>(func);
    8410:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    8414:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:77

    unsigned int rd = mGPIO[reg];
    8418:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    841c:	e5932000 	ldr	r2, [r3]
    8420:	e51b3010 	ldr	r3, [fp, #-16]
    8424:	e1a03103 	lsl	r3, r3, #2
    8428:	e0823003 	add	r3, r2, r3
    842c:	e5933000 	ldr	r3, [r3]
    8430:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:78
    rd &= ~(7 << bit);
    8434:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8438:	e3a02007 	mov	r2, #7
    843c:	e1a03312 	lsl	r3, r2, r3
    8440:	e1e03003 	mvn	r3, r3
    8444:	e1a02003 	mov	r2, r3
    8448:	e51b300c 	ldr	r3, [fp, #-12]
    844c:	e0033002 	and	r3, r3, r2
    8450:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:79
    rd |= (mode << bit);
    8454:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8458:	e51b2008 	ldr	r2, [fp, #-8]
    845c:	e1a03312 	lsl	r3, r2, r3
    8460:	e51b200c 	ldr	r2, [fp, #-12]
    8464:	e1823003 	orr	r3, r2, r3
    8468:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:81

    mGPIO[reg] = rd;
    846c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8470:	e5932000 	ldr	r2, [r3]
    8474:	e51b3010 	ldr	r3, [fp, #-16]
    8478:	e1a03103 	lsl	r3, r3, #2
    847c:	e0823003 	add	r3, r2, r3
    8480:	e51b200c 	ldr	r2, [fp, #-12]
    8484:	e5832000 	str	r2, [r3]
    8488:	ea000000 	b	8490 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:73
        return;
    848c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:82
}
    8490:	e24bd004 	sub	sp, fp, #4
    8494:	e8bd8800 	pop	{fp, pc}

00008498 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj>:
_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:85

NGPIO_Function CGPIO_Handler::Get_GPIO_Function(uint32_t pin) const
{
    8498:	e92d4800 	push	{fp, lr}
    849c:	e28db004 	add	fp, sp, #4
    84a0:	e24dd010 	sub	sp, sp, #16
    84a4:	e50b0010 	str	r0, [fp, #-16]
    84a8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:87
    uint32_t reg, bit;
    if (!Get_GPFSEL_Location(pin, reg, bit))
    84ac:	e24b300c 	sub	r3, fp, #12
    84b0:	e24b2008 	sub	r2, fp, #8
    84b4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    84b8:	e51b0010 	ldr	r0, [fp, #-16]
    84bc:	ebffff46 	bl	81dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>
    84c0:	e1a03000 	mov	r3, r0
    84c4:	e2233001 	eor	r3, r3, #1
    84c8:	e6ef3073 	uxtb	r3, r3
    84cc:	e3530000 	cmp	r3, #0
    84d0:	0a000001 	beq	84dc <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:88
        return NGPIO_Function::Unspecified;
    84d4:	e3a03008 	mov	r3, #8
    84d8:	ea000008 	b	8500 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:90

    return static_cast<NGPIO_Function>((mGPIO[reg] >> bit) & 7);
    84dc:	e51b3010 	ldr	r3, [fp, #-16]
    84e0:	e5932000 	ldr	r2, [r3]
    84e4:	e51b3008 	ldr	r3, [fp, #-8]
    84e8:	e1a03103 	lsl	r3, r3, #2
    84ec:	e0823003 	add	r3, r2, r3
    84f0:	e5932000 	ldr	r2, [r3]
    84f4:	e51b300c 	ldr	r3, [fp, #-12]
    84f8:	e1a03332 	lsr	r3, r2, r3
    84fc:	e2033007 	and	r3, r3, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:91 (discriminator 1)
}
    8500:	e1a00003 	mov	r0, r3
    8504:	e24bd004 	sub	sp, fp, #4
    8508:	e8bd8800 	pop	{fp, pc}

0000850c <_ZN13CGPIO_Handler10Set_OutputEjb>:
_ZN13CGPIO_Handler10Set_OutputEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:94

void CGPIO_Handler::Set_Output(uint32_t pin, bool set)
{
    850c:	e92d4800 	push	{fp, lr}
    8510:	e28db004 	add	fp, sp, #4
    8514:	e24dd018 	sub	sp, sp, #24
    8518:	e50b0010 	str	r0, [fp, #-16]
    851c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    8520:	e1a03002 	mov	r3, r2
    8524:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96
    uint32_t reg, bit;
    if (!(set && Get_GPSET_Location(pin, reg, bit)) && !(!set && Get_GPCLR_Location(pin, reg, bit)))
    8528:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    852c:	e2233001 	eor	r3, r3, #1
    8530:	e6ef3073 	uxtb	r3, r3
    8534:	e3530000 	cmp	r3, #0
    8538:	1a000009 	bne	8564 <_ZN13CGPIO_Handler10Set_OutputEjb+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 2)
    853c:	e24b300c 	sub	r3, fp, #12
    8540:	e24b2008 	sub	r2, fp, #8
    8544:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    8548:	e51b0010 	ldr	r0, [fp, #-16]
    854c:	ebffff65 	bl	82e8 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_>
    8550:	e1a03000 	mov	r3, r0
    8554:	e2233001 	eor	r3, r3, #1
    8558:	e6ef3073 	uxtb	r3, r3
    855c:	e3530000 	cmp	r3, #0
    8560:	0a00000e 	beq	85a0 <_ZN13CGPIO_Handler10Set_OutputEjb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 3)
    8564:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    8568:	e3530000 	cmp	r3, #0
    856c:	1a000009 	bne	8598 <_ZN13CGPIO_Handler10Set_OutputEjb+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 6)
    8570:	e24b300c 	sub	r3, fp, #12
    8574:	e24b2008 	sub	r2, fp, #8
    8578:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    857c:	e51b0010 	ldr	r0, [fp, #-16]
    8580:	ebffff3b 	bl	8274 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_>
    8584:	e1a03000 	mov	r3, r0
    8588:	e2233001 	eor	r3, r3, #1
    858c:	e6ef3073 	uxtb	r3, r3
    8590:	e3530000 	cmp	r3, #0
    8594:	0a000001 	beq	85a0 <_ZN13CGPIO_Handler10Set_OutputEjb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 7)
    8598:	e3a03001 	mov	r3, #1
    859c:	ea000000 	b	85a4 <_ZN13CGPIO_Handler10Set_OutputEjb+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 8)
    85a0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 10)
    85a4:	e3530000 	cmp	r3, #0
    85a8:	1a00000a 	bne	85d8 <_ZN13CGPIO_Handler10Set_OutputEjb+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:99
        return;

    mGPIO[reg] = (1 << bit);
    85ac:	e51b300c 	ldr	r3, [fp, #-12]
    85b0:	e3a02001 	mov	r2, #1
    85b4:	e1a01312 	lsl	r1, r2, r3
    85b8:	e51b3010 	ldr	r3, [fp, #-16]
    85bc:	e5932000 	ldr	r2, [r3]
    85c0:	e51b3008 	ldr	r3, [fp, #-8]
    85c4:	e1a03103 	lsl	r3, r3, #2
    85c8:	e0823003 	add	r3, r2, r3
    85cc:	e1a02001 	mov	r2, r1
    85d0:	e5832000 	str	r2, [r3]
    85d4:	ea000000 	b	85dc <_ZN13CGPIO_Handler10Set_OutputEjb+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:97
        return;
    85d8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:100
}
    85dc:	e24bd004 	sub	sp, fp, #4
    85e0:	e8bd8800 	pop	{fp, pc}

000085e4 <_ZN13CGPIO_Handler9Get_InputEj>:
_ZN13CGPIO_Handler9Get_InputEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:103

bool CGPIO_Handler::Get_Input(uint32_t pin)
{
    85e4:	e92d4800 	push	{fp, lr}
    85e8:	e28db004 	add	fp, sp, #4
    85ec:	e24dd010 	sub	sp, sp, #16
    85f0:	e50b0010 	str	r0, [fp, #-16]
    85f4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:105
    uint32_t reg, bit;
    if (!Get_GPLEV_Location(pin, reg, bit))
    85f8:	e24b300c 	sub	r3, fp, #12
    85fc:	e24b2008 	sub	r2, fp, #8
    8600:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    8604:	e51b0010 	ldr	r0, [fp, #-16]
    8608:	ebffff53 	bl	835c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_>
    860c:	e1a03000 	mov	r3, r0
    8610:	e2233001 	eor	r3, r3, #1
    8614:	e6ef3073 	uxtb	r3, r3
    8618:	e3530000 	cmp	r3, #0
    861c:	0a000001 	beq	8628 <_ZN13CGPIO_Handler9Get_InputEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:106
        return false;
    8620:	e3a03000 	mov	r3, #0
    8624:	ea00000c 	b	865c <_ZN13CGPIO_Handler9Get_InputEj+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:108

    return (mGPIO[reg] >> bit) & 0x1;
    8628:	e51b3010 	ldr	r3, [fp, #-16]
    862c:	e5932000 	ldr	r2, [r3]
    8630:	e51b3008 	ldr	r3, [fp, #-8]
    8634:	e1a03103 	lsl	r3, r3, #2
    8638:	e0823003 	add	r3, r2, r3
    863c:	e5932000 	ldr	r2, [r3]
    8640:	e51b300c 	ldr	r3, [fp, #-12]
    8644:	e1a03332 	lsr	r3, r2, r3
    8648:	e2033001 	and	r3, r3, #1
    864c:	e3530000 	cmp	r3, #0
    8650:	13a03001 	movne	r3, #1
    8654:	03a03000 	moveq	r3, #0
    8658:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:109 (discriminator 1)
}
    865c:	e1a00003 	mov	r0, r3
    8660:	e24bd004 	sub	sp, fp, #4
    8664:	e8bd8800 	pop	{fp, pc}

00008668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>:
_ZN13CGPIO_Handler11Reserve_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:112

bool CGPIO_Handler::Reserve_Pin(uint32_t pin, bool read, bool write)
{
    8668:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
    866c:	e28db014 	add	fp, sp, #20
    8670:	e24dd018 	sub	sp, sp, #24
    8674:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    8678:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    867c:	e1a01002 	mov	r1, r2
    8680:	e1a02003 	mov	r2, r3
    8684:	e1a03001 	mov	r3, r1
    8688:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
    868c:	e1a03002 	mov	r3, r2
    8690:	e54b3026 	strb	r3, [fp, #-38]	; 0xffffffda
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:115
    // TODO: zamek, tady by se neco mohlo sejit

    uint32_t bank_idx = pin / 32;
    8694:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8698:	e1a032a3 	lsr	r3, r3, #5
    869c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:116
    uint32_t bit_idx = pin % 32;
    86a0:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    86a4:	e203301f 	and	r3, r3, #31
    86a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118

    if (read && (mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1)
    86ac:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    86b0:	e3530000 	cmp	r3, #0
    86b4:	0a00000b 	beq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118 (discriminator 1)
    86b8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    86bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    86c0:	e1a03103 	lsl	r3, r3, #2
    86c4:	e0823003 	add	r3, r2, r3
    86c8:	e5932004 	ldr	r2, [r3, #4]
    86cc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    86d0:	e1a03332 	lsr	r3, r2, r3
    86d4:	e2033001 	and	r3, r3, #1
    86d8:	e3530000 	cmp	r3, #0
    86dc:	0a000001 	beq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:119
        return false;
    86e0:	e3a03000 	mov	r3, #0
    86e4:	ea000042 	b	87f4 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x18c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121

    if (write && (mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1)
    86e8:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    86ec:	e3530000 	cmp	r3, #0
    86f0:	0a00000c 	beq	8728 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121 (discriminator 1)
    86f4:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    86f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    86fc:	e2833002 	add	r3, r3, #2
    8700:	e1a03103 	lsl	r3, r3, #2
    8704:	e0823003 	add	r3, r2, r3
    8708:	e5932004 	ldr	r2, [r3, #4]
    870c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8710:	e1a03332 	lsr	r3, r2, r3
    8714:	e2033001 	and	r3, r3, #1
    8718:	e3530000 	cmp	r3, #0
    871c:	0a000001 	beq	8728 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:122
        return false;
    8720:	e3a03000 	mov	r3, #0
    8724:	ea000032 	b	87f4 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x18c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:124

    if (read)
    8728:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    872c:	e3530000 	cmp	r3, #0
    8730:	0a000014 	beq	8788 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x120>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:125
        mPin_Reservations_Read[bank_idx] |= 1ULL << bit_idx;
    8734:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8738:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    873c:	e1a03103 	lsl	r3, r3, #2
    8740:	e0823003 	add	r3, r2, r3
    8744:	e5930004 	ldr	r0, [r3, #4]
    8748:	e3a02001 	mov	r2, #1
    874c:	e3a03000 	mov	r3, #0
    8750:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    8754:	e241e020 	sub	lr, r1, #32
    8758:	e261c020 	rsb	ip, r1, #32
    875c:	e1a07113 	lsl	r7, r3, r1
    8760:	e1877e12 	orr	r7, r7, r2, lsl lr
    8764:	e1877c32 	orr	r7, r7, r2, lsr ip
    8768:	e1a06112 	lsl	r6, r2, r1
    876c:	e1a03006 	mov	r3, r6
    8770:	e1802003 	orr	r2, r0, r3
    8774:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    8778:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    877c:	e1a03103 	lsl	r3, r3, #2
    8780:	e0813003 	add	r3, r1, r3
    8784:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:127

    if (write)
    8788:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    878c:	e3530000 	cmp	r3, #0
    8790:	0a000016 	beq	87f0 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x188>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:128
        mPin_Reservations_Write[bank_idx] |= 1ULL << bit_idx;
    8794:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8798:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    879c:	e2833002 	add	r3, r3, #2
    87a0:	e1a03103 	lsl	r3, r3, #2
    87a4:	e0823003 	add	r3, r2, r3
    87a8:	e5930004 	ldr	r0, [r3, #4]
    87ac:	e3a02001 	mov	r2, #1
    87b0:	e3a03000 	mov	r3, #0
    87b4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    87b8:	e241e020 	sub	lr, r1, #32
    87bc:	e261c020 	rsb	ip, r1, #32
    87c0:	e1a05113 	lsl	r5, r3, r1
    87c4:	e1855e12 	orr	r5, r5, r2, lsl lr
    87c8:	e1855c32 	orr	r5, r5, r2, lsr ip
    87cc:	e1a04112 	lsl	r4, r2, r1
    87d0:	e1a03004 	mov	r3, r4
    87d4:	e1802003 	orr	r2, r0, r3
    87d8:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    87dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    87e0:	e2833002 	add	r3, r3, #2
    87e4:	e1a03103 	lsl	r3, r3, #2
    87e8:	e0813003 	add	r3, r1, r3
    87ec:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:130

    return true;
    87f0:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:131
}
    87f4:	e1a00003 	mov	r0, r3
    87f8:	e24bd014 	sub	sp, fp, #20
    87fc:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

00008800 <_ZN13CGPIO_Handler8Free_PinEjbb>:
_ZN13CGPIO_Handler8Free_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:134

bool CGPIO_Handler::Free_Pin(uint32_t pin, bool read, bool write)
{
    8800:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
    8804:	e28db014 	add	fp, sp, #20
    8808:	e24dd018 	sub	sp, sp, #24
    880c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    8810:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    8814:	e1a01002 	mov	r1, r2
    8818:	e1a02003 	mov	r2, r3
    881c:	e1a03001 	mov	r3, r1
    8820:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
    8824:	e1a03002 	mov	r3, r2
    8828:	e54b3026 	strb	r3, [fp, #-38]	; 0xffffffda
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:135
    uint32_t bank_idx = pin / 32;
    882c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8830:	e1a032a3 	lsr	r3, r3, #5
    8834:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:136
    uint32_t bit_idx = pin % 32;
    8838:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    883c:	e203301f 	and	r3, r3, #31
    8840:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138

    if (read && !((mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1))
    8844:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    8848:	e3530000 	cmp	r3, #0
    884c:	0a00000b 	beq	8880 <_ZN13CGPIO_Handler8Free_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138 (discriminator 1)
    8850:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8854:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8858:	e1a03103 	lsl	r3, r3, #2
    885c:	e0823003 	add	r3, r2, r3
    8860:	e5932004 	ldr	r2, [r3, #4]
    8864:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8868:	e1a03332 	lsr	r3, r2, r3
    886c:	e2033001 	and	r3, r3, #1
    8870:	e3530000 	cmp	r3, #0
    8874:	1a000001 	bne	8880 <_ZN13CGPIO_Handler8Free_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:139
        return false;
    8878:	e3a03000 	mov	r3, #0
    887c:	ea000044 	b	8994 <_ZN13CGPIO_Handler8Free_PinEjbb+0x194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141

    if (write && !((mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1))
    8880:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    8884:	e3530000 	cmp	r3, #0
    8888:	0a00000c 	beq	88c0 <_ZN13CGPIO_Handler8Free_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141 (discriminator 1)
    888c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8890:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8894:	e2833002 	add	r3, r3, #2
    8898:	e1a03103 	lsl	r3, r3, #2
    889c:	e0823003 	add	r3, r2, r3
    88a0:	e5932004 	ldr	r2, [r3, #4]
    88a4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    88a8:	e1a03332 	lsr	r3, r2, r3
    88ac:	e2033001 	and	r3, r3, #1
    88b0:	e3530000 	cmp	r3, #0
    88b4:	1a000001 	bne	88c0 <_ZN13CGPIO_Handler8Free_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:142
        return false;
    88b8:	e3a03000 	mov	r3, #0
    88bc:	ea000034 	b	8994 <_ZN13CGPIO_Handler8Free_PinEjbb+0x194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:144

    if (read)
    88c0:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    88c4:	e3530000 	cmp	r3, #0
    88c8:	0a000015 	beq	8924 <_ZN13CGPIO_Handler8Free_PinEjbb+0x124>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:145
        mPin_Reservations_Read[bank_idx] &= ~(1ULL << bit_idx);
    88cc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    88d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    88d4:	e1a03103 	lsl	r3, r3, #2
    88d8:	e0823003 	add	r3, r2, r3
    88dc:	e5930004 	ldr	r0, [r3, #4]
    88e0:	e3a02001 	mov	r2, #1
    88e4:	e3a03000 	mov	r3, #0
    88e8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    88ec:	e241e020 	sub	lr, r1, #32
    88f0:	e261c020 	rsb	ip, r1, #32
    88f4:	e1a07113 	lsl	r7, r3, r1
    88f8:	e1877e12 	orr	r7, r7, r2, lsl lr
    88fc:	e1877c32 	orr	r7, r7, r2, lsr ip
    8900:	e1a06112 	lsl	r6, r2, r1
    8904:	e1a03006 	mov	r3, r6
    8908:	e1e03003 	mvn	r3, r3
    890c:	e0002003 	and	r2, r0, r3
    8910:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    8914:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8918:	e1a03103 	lsl	r3, r3, #2
    891c:	e0813003 	add	r3, r1, r3
    8920:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:147

    if (write)
    8924:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    8928:	e3530000 	cmp	r3, #0
    892c:	0a000017 	beq	8990 <_ZN13CGPIO_Handler8Free_PinEjbb+0x190>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:148
        mPin_Reservations_Write[bank_idx] &= ~(1ULL << bit_idx);
    8930:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8934:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8938:	e2833002 	add	r3, r3, #2
    893c:	e1a03103 	lsl	r3, r3, #2
    8940:	e0823003 	add	r3, r2, r3
    8944:	e5930004 	ldr	r0, [r3, #4]
    8948:	e3a02001 	mov	r2, #1
    894c:	e3a03000 	mov	r3, #0
    8950:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    8954:	e241e020 	sub	lr, r1, #32
    8958:	e261c020 	rsb	ip, r1, #32
    895c:	e1a05113 	lsl	r5, r3, r1
    8960:	e1855e12 	orr	r5, r5, r2, lsl lr
    8964:	e1855c32 	orr	r5, r5, r2, lsr ip
    8968:	e1a04112 	lsl	r4, r2, r1
    896c:	e1a03004 	mov	r3, r4
    8970:	e1e03003 	mvn	r3, r3
    8974:	e0002003 	and	r2, r0, r3
    8978:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    897c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8980:	e2833002 	add	r3, r3, #2
    8984:	e1a03103 	lsl	r3, r3, #2
    8988:	e0813003 	add	r3, r1, r3
    898c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:150

    return true;
    8990:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    8994:	e1a00003 	mov	r0, r3
    8998:	e24bd014 	sub	sp, fp, #20
    899c:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

000089a0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89a0:	e92d4800 	push	{fp, lr}
    89a4:	e28db004 	add	fp, sp, #4
    89a8:	e24dd008 	sub	sp, sp, #8
    89ac:	e50b0008 	str	r0, [fp, #-8]
    89b0:	e50b100c 	str	r1, [fp, #-12]
    89b4:	e51b3008 	ldr	r3, [fp, #-8]
    89b8:	e3530001 	cmp	r3, #1
    89bc:	1a000006 	bne	89dc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151 (discriminator 1)
    89c0:	e51b300c 	ldr	r3, [fp, #-12]
    89c4:	e59f201c 	ldr	r2, [pc, #28]	; 89e8 <_Z41__static_initialization_and_destruction_0ii+0x48>
    89c8:	e1530002 	cmp	r3, r2
    89cc:	1a000002 	bne	89dc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:6
CGPIO_Handler sGPIO(hal::GPIO_Base);
    89d0:	e59f1014 	ldr	r1, [pc, #20]	; 89ec <_Z41__static_initialization_and_destruction_0ii+0x4c>
    89d4:	e59f0014 	ldr	r0, [pc, #20]	; 89f0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    89d8:	ebfffde9 	bl	8184 <_ZN13CGPIO_HandlerC1Ej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    89dc:	e320f000 	nop	{0}
    89e0:	e24bd004 	sub	sp, fp, #4
    89e4:	e8bd8800 	pop	{fp, pc}
    89e8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    89ec:	20200000 	eorcs	r0, r0, r0
    89f0:	00010b9c 	muleq	r1, ip, fp

000089f4 <_GLOBAL__sub_I_sGPIO>:
_GLOBAL__sub_I_sGPIO():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89f4:	e92d4800 	push	{fp, lr}
    89f8:	e28db004 	add	fp, sp, #4
    89fc:	e59f1008 	ldr	r1, [pc, #8]	; 8a0c <_GLOBAL__sub_I_sGPIO+0x18>
    8a00:	e3a00001 	mov	r0, #1
    8a04:	ebffffe5 	bl	89a0 <_Z41__static_initialization_and_destruction_0ii>
    8a08:	e8bd8800 	pop	{fp, pc}
    8a0c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

00008a10 <_ZN4CI2CC1Emjj>:
_ZN4CI2CC2Emjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:7

#include <drivers/gpio.h>

CI2C sI2C1(hal::BSC1_Base, 2, 3);

CI2C::CI2C(unsigned long base, uint32_t pin_sda, uint32_t pin_scl)
    8a10:	e92d4800 	push	{fp, lr}
    8a14:	e28db004 	add	fp, sp, #4
    8a18:	e24dd010 	sub	sp, sp, #16
    8a1c:	e50b0008 	str	r0, [fp, #-8]
    8a20:	e50b100c 	str	r1, [fp, #-12]
    8a24:	e50b2010 	str	r2, [fp, #-16]
    8a28:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:8
    : mBSC_Base(reinterpret_cast<volatile uint32_t*>(base)), mOpened(false), mSDA_Pin(pin_sda), mSCL_Pin(pin_scl)
    8a2c:	e51b200c 	ldr	r2, [fp, #-12]
    8a30:	e51b3008 	ldr	r3, [fp, #-8]
    8a34:	e5832000 	str	r2, [r3]
    8a38:	e51b3008 	ldr	r3, [fp, #-8]
    8a3c:	e3a02000 	mov	r2, #0
    8a40:	e5c32004 	strb	r2, [r3, #4]
    8a44:	e51b3008 	ldr	r3, [fp, #-8]
    8a48:	e51b2010 	ldr	r2, [fp, #-16]
    8a4c:	e5832008 	str	r2, [r3, #8]
    8a50:	e51b3008 	ldr	r3, [fp, #-8]
    8a54:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    8a58:	e583200c 	str	r2, [r3, #12]
    8a5c:	e51b3008 	ldr	r3, [fp, #-8]
    8a60:	e2833010 	add	r3, r3, #16
    8a64:	e1a00003 	mov	r0, r3
    8a68:	eb0001a7 	bl	910c <_ZN16CI2C_TransactionC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:11
{
    //
}
    8a6c:	e51b3008 	ldr	r3, [fp, #-8]
    8a70:	e1a00003 	mov	r0, r3
    8a74:	e24bd004 	sub	sp, fp, #4
    8a78:	e8bd8800 	pop	{fp, pc}

00008a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>:
_ZN4CI2C3RegEN3hal7BSC_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:14

volatile uint32_t& CI2C::Reg(hal::BSC_Reg reg)
{
    8a7c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8a80:	e28db000 	add	fp, sp, #0
    8a84:	e24dd00c 	sub	sp, sp, #12
    8a88:	e50b0008 	str	r0, [fp, #-8]
    8a8c:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:15
    return mBSC_Base[static_cast<uint32_t>(reg)];
    8a90:	e51b3008 	ldr	r3, [fp, #-8]
    8a94:	e5932000 	ldr	r2, [r3]
    8a98:	e51b300c 	ldr	r3, [fp, #-12]
    8a9c:	e1a03103 	lsl	r3, r3, #2
    8aa0:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:16
}
    8aa4:	e1a00003 	mov	r0, r3
    8aa8:	e28bd000 	add	sp, fp, #0
    8aac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8ab0:	e12fff1e 	bx	lr

00008ab4 <_ZN4CI2C10Wait_ReadyEv>:
_ZN4CI2C10Wait_ReadyEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:19

void CI2C::Wait_Ready()
{
    8ab4:	e92d4800 	push	{fp, lr}
    8ab8:	e28db004 	add	fp, sp, #4
    8abc:	e24dd010 	sub	sp, sp, #16
    8ac0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:20
    volatile uint32_t& s = Reg(hal::BSC_Reg::Status);
    8ac4:	e3a01001 	mov	r1, #1
    8ac8:	e51b0010 	ldr	r0, [fp, #-16]
    8acc:	ebffffea 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8ad0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:23

    // pockame, dokud nebude ve status registru zapnuty ready bit
    while( !(s & (1 << 1)) )
    8ad4:	e51b3008 	ldr	r3, [fp, #-8]
    8ad8:	e5933000 	ldr	r3, [r3]
    8adc:	e2033002 	and	r3, r3, #2
    8ae0:	e3530000 	cmp	r3, #0
    8ae4:	03a03001 	moveq	r3, #1
    8ae8:	13a03000 	movne	r3, #0
    8aec:	e6ef3073 	uxtb	r3, r3
    8af0:	e3530000 	cmp	r3, #0
    8af4:	0a000000 	beq	8afc <_ZN4CI2C10Wait_ReadyEv+0x48>
    8af8:	eafffff5 	b	8ad4 <_ZN4CI2C10Wait_ReadyEv+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:25
        ;
}
    8afc:	e320f000 	nop	{0}
    8b00:	e24bd004 	sub	sp, fp, #4
    8b04:	e8bd8800 	pop	{fp, pc}

00008b08 <_ZN4CI2C4OpenEv>:
_ZN4CI2C4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:28

bool CI2C::Open()
{
    8b08:	e92d4800 	push	{fp, lr}
    8b0c:	e28db004 	add	fp, sp, #4
    8b10:	e24dd008 	sub	sp, sp, #8
    8b14:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:29
    if (!sGPIO.Reserve_Pin(mSDA_Pin, true, true))
    8b18:	e51b3008 	ldr	r3, [fp, #-8]
    8b1c:	e5931008 	ldr	r1, [r3, #8]
    8b20:	e3a03001 	mov	r3, #1
    8b24:	e3a02001 	mov	r2, #1
    8b28:	e59f00b4 	ldr	r0, [pc, #180]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b2c:	ebfffecd 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8b30:	e1a03000 	mov	r3, r0
    8b34:	e2233001 	eor	r3, r3, #1
    8b38:	e6ef3073 	uxtb	r3, r3
    8b3c:	e3530000 	cmp	r3, #0
    8b40:	0a000001 	beq	8b4c <_ZN4CI2C4OpenEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:30
        return false;
    8b44:	e3a03000 	mov	r3, #0
    8b48:	ea000022 	b	8bd8 <_ZN4CI2C4OpenEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:32

    if (!sGPIO.Reserve_Pin(mSCL_Pin, true, true))
    8b4c:	e51b3008 	ldr	r3, [fp, #-8]
    8b50:	e593100c 	ldr	r1, [r3, #12]
    8b54:	e3a03001 	mov	r3, #1
    8b58:	e3a02001 	mov	r2, #1
    8b5c:	e59f0080 	ldr	r0, [pc, #128]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b60:	ebfffec0 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8b64:	e1a03000 	mov	r3, r0
    8b68:	e2233001 	eor	r3, r3, #1
    8b6c:	e6ef3073 	uxtb	r3, r3
    8b70:	e3530000 	cmp	r3, #0
    8b74:	0a000007 	beq	8b98 <_ZN4CI2C4OpenEv+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:34
    {
        sGPIO.Free_Pin(mSDA_Pin, true, true);
    8b78:	e51b3008 	ldr	r3, [fp, #-8]
    8b7c:	e5931008 	ldr	r1, [r3, #8]
    8b80:	e3a03001 	mov	r3, #1
    8b84:	e3a02001 	mov	r2, #1
    8b88:	e59f0054 	ldr	r0, [pc, #84]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b8c:	ebffff1b 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:35
        return false;
    8b90:	e3a03000 	mov	r3, #0
    8b94:	ea00000f 	b	8bd8 <_ZN4CI2C4OpenEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:40
    }

    // pro jine I2C kanaly se muze lisit cislo alternativni funkce pinu

    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Alt_0);
    8b98:	e51b3008 	ldr	r3, [fp, #-8]
    8b9c:	e5933008 	ldr	r3, [r3, #8]
    8ba0:	e3a02004 	mov	r2, #4
    8ba4:	e1a01003 	mov	r1, r3
    8ba8:	e59f0034 	ldr	r0, [pc, #52]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8bac:	ebfffe07 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:41
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Alt_0);
    8bb0:	e51b3008 	ldr	r3, [fp, #-8]
    8bb4:	e593300c 	ldr	r3, [r3, #12]
    8bb8:	e3a02004 	mov	r2, #4
    8bbc:	e1a01003 	mov	r1, r3
    8bc0:	e59f001c 	ldr	r0, [pc, #28]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8bc4:	ebfffe01 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:43

    mOpened = true;
    8bc8:	e51b3008 	ldr	r3, [fp, #-8]
    8bcc:	e3a02001 	mov	r2, #1
    8bd0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:45

    return true;
    8bd4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:46
}
    8bd8:	e1a00003 	mov	r0, r3
    8bdc:	e24bd004 	sub	sp, fp, #4
    8be0:	e8bd8800 	pop	{fp, pc}
    8be4:	00010b9c 	muleq	r1, ip, fp

00008be8 <_ZN4CI2C5CloseEv>:
_ZN4CI2C5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:49

void CI2C::Close()
{
    8be8:	e92d4800 	push	{fp, lr}
    8bec:	e28db004 	add	fp, sp, #4
    8bf0:	e24dd008 	sub	sp, sp, #8
    8bf4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:50
    Reg(hal::BSC_Reg::Control) = 0;
    8bf8:	e3a01000 	mov	r1, #0
    8bfc:	e51b0008 	ldr	r0, [fp, #-8]
    8c00:	ebffff9d 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8c04:	e1a03000 	mov	r3, r0
    8c08:	e3a02000 	mov	r2, #0
    8c0c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:52

    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Input);
    8c10:	e51b3008 	ldr	r3, [fp, #-8]
    8c14:	e5933008 	ldr	r3, [r3, #8]
    8c18:	e3a02000 	mov	r2, #0
    8c1c:	e1a01003 	mov	r1, r3
    8c20:	e59f0060 	ldr	r0, [pc, #96]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c24:	ebfffde9 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:53
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Input);
    8c28:	e51b3008 	ldr	r3, [fp, #-8]
    8c2c:	e593300c 	ldr	r3, [r3, #12]
    8c30:	e3a02000 	mov	r2, #0
    8c34:	e1a01003 	mov	r1, r3
    8c38:	e59f0048 	ldr	r0, [pc, #72]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c3c:	ebfffde3 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:55

    sGPIO.Free_Pin(mSDA_Pin, true, true);
    8c40:	e51b3008 	ldr	r3, [fp, #-8]
    8c44:	e5931008 	ldr	r1, [r3, #8]
    8c48:	e3a03001 	mov	r3, #1
    8c4c:	e3a02001 	mov	r2, #1
    8c50:	e59f0030 	ldr	r0, [pc, #48]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c54:	ebfffee9 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:56
    sGPIO.Free_Pin(mSCL_Pin, true, true);
    8c58:	e51b3008 	ldr	r3, [fp, #-8]
    8c5c:	e593100c 	ldr	r1, [r3, #12]
    8c60:	e3a03001 	mov	r3, #1
    8c64:	e3a02001 	mov	r2, #1
    8c68:	e59f0018 	ldr	r0, [pc, #24]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c6c:	ebfffee3 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:58

    mOpened = false;
    8c70:	e51b3008 	ldr	r3, [fp, #-8]
    8c74:	e3a02000 	mov	r2, #0
    8c78:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:59
}
    8c7c:	e320f000 	nop	{0}
    8c80:	e24bd004 	sub	sp, fp, #4
    8c84:	e8bd8800 	pop	{fp, pc}
    8c88:	00010b9c 	muleq	r1, ip, fp

00008c8c <_ZNK4CI2C9Is_OpenedEv>:
_ZNK4CI2C9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:62

bool CI2C::Is_Opened() const
{
    8c8c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8c90:	e28db000 	add	fp, sp, #0
    8c94:	e24dd00c 	sub	sp, sp, #12
    8c98:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:63
    return mOpened;
    8c9c:	e51b3008 	ldr	r3, [fp, #-8]
    8ca0:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:64
}
    8ca4:	e1a00003 	mov	r0, r3
    8ca8:	e28bd000 	add	sp, fp, #0
    8cac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8cb0:	e12fff1e 	bx	lr

00008cb4 <_ZN4CI2C4SendEtPKcj>:
_ZN4CI2C4SendEtPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:67

void CI2C::Send(uint16_t addr, const char* buffer, uint32_t len)
{
    8cb4:	e92d4810 	push	{r4, fp, lr}
    8cb8:	e28db008 	add	fp, sp, #8
    8cbc:	e24dd01c 	sub	sp, sp, #28
    8cc0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    8cc4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    8cc8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    8ccc:	e1a03001 	mov	r3, r1
    8cd0:	e14b31ba 	strh	r3, [fp, #-26]	; 0xffffffe6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:68
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8cd4:	e3a01003 	mov	r1, #3
    8cd8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cdc:	ebffff66 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8ce0:	e1a02000 	mov	r2, r0
    8ce4:	e15b31ba 	ldrh	r3, [fp, #-26]	; 0xffffffe6
    8ce8:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:69
    Reg(hal::BSC_Reg::Data_Length) = len;
    8cec:	e3a01002 	mov	r1, #2
    8cf0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cf4:	ebffff60 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8cf8:	e1a02000 	mov	r2, r0
    8cfc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d00:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71

    for (uint32_t i = 0; i < len; i++)
    8d04:	e3a03000 	mov	r3, #0
    8d08:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 3)
    8d0c:	e51b2010 	ldr	r2, [fp, #-16]
    8d10:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d14:	e1520003 	cmp	r2, r3
    8d18:	2a00000d 	bcs	8d54 <_ZN4CI2C4SendEtPKcj+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:72 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = buffer[i];
    8d1c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8d20:	e51b3010 	ldr	r3, [fp, #-16]
    8d24:	e0823003 	add	r3, r2, r3
    8d28:	e5d34000 	ldrb	r4, [r3]
    8d2c:	e3a01004 	mov	r1, #4
    8d30:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d34:	ebffff50 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d38:	e1a03000 	mov	r3, r0
    8d3c:	e1a02004 	mov	r2, r4
    8d40:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8d44:	e51b3010 	ldr	r3, [fp, #-16]
    8d48:	e2833001 	add	r3, r3, #1
    8d4c:	e50b3010 	str	r3, [fp, #-16]
    8d50:	eaffffed 	b	8d0c <_ZN4CI2C4SendEtPKcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74

    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8d54:	e3a01001 	mov	r1, #1
    8d58:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d5c:	ebffff46 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d60:	e1a03000 	mov	r3, r0
    8d64:	e59f202c 	ldr	r2, [pc, #44]	; 8d98 <_ZN4CI2C4SendEtPKcj+0xe4>
    8d68:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:75
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    8d6c:	e3a01000 	mov	r1, #0
    8d70:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d74:	ebffff40 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d78:	e1a03000 	mov	r3, r0
    8d7c:	e59f2018 	ldr	r2, [pc, #24]	; 8d9c <_ZN4CI2C4SendEtPKcj+0xe8>
    8d80:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:77

    Wait_Ready();
    8d84:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d88:	ebffff49 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:78
}
    8d8c:	e320f000 	nop	{0}
    8d90:	e24bd008 	sub	sp, fp, #8
    8d94:	e8bd8810 	pop	{r4, fp, pc}
    8d98:	00000302 	andeq	r0, r0, r2, lsl #6
    8d9c:	00008080 	andeq	r8, r0, r0, lsl #1

00008da0 <_ZN4CI2C7ReceiveEtPcj>:
_ZN4CI2C7ReceiveEtPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:81

void CI2C::Receive(uint16_t addr, char* buffer, uint32_t len)
{
    8da0:	e92d4800 	push	{fp, lr}
    8da4:	e28db004 	add	fp, sp, #4
    8da8:	e24dd018 	sub	sp, sp, #24
    8dac:	e50b0010 	str	r0, [fp, #-16]
    8db0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    8db4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    8db8:	e1a03001 	mov	r3, r1
    8dbc:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:82
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8dc0:	e3a01003 	mov	r1, #3
    8dc4:	e51b0010 	ldr	r0, [fp, #-16]
    8dc8:	ebffff2b 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8dcc:	e1a02000 	mov	r2, r0
    8dd0:	e15b31b2 	ldrh	r3, [fp, #-18]	; 0xffffffee
    8dd4:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:83
    Reg(hal::BSC_Reg::Data_Length) = len;
    8dd8:	e3a01002 	mov	r1, #2
    8ddc:	e51b0010 	ldr	r0, [fp, #-16]
    8de0:	ebffff25 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8de4:	e1a02000 	mov	r2, r0
    8de8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8dec:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:85

    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8df0:	e3a01001 	mov	r1, #1
    8df4:	e51b0010 	ldr	r0, [fp, #-16]
    8df8:	ebffff1f 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8dfc:	e1a03000 	mov	r3, r0
    8e00:	e59f207c 	ldr	r2, [pc, #124]	; 8e84 <_ZN4CI2C7ReceiveEtPcj+0xe4>
    8e04:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:86
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7) | (1 << 4) | (1 << 0); // zapoceti cteni (enable bsc + clear fifo + start transfer + read)
    8e08:	e3a01000 	mov	r1, #0
    8e0c:	e51b0010 	ldr	r0, [fp, #-16]
    8e10:	ebffff19 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8e14:	e1a03000 	mov	r3, r0
    8e18:	e59f2068 	ldr	r2, [pc, #104]	; 8e88 <_ZN4CI2C7ReceiveEtPcj+0xe8>
    8e1c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:88

    Wait_Ready();
    8e20:	e51b0010 	ldr	r0, [fp, #-16]
    8e24:	ebffff22 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90

    for (uint32_t i = 0; i < len; i++)
    8e28:	e3a03000 	mov	r3, #0
    8e2c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 3)
    8e30:	e51b2008 	ldr	r2, [fp, #-8]
    8e34:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8e38:	e1520003 	cmp	r2, r3
    8e3c:	2a00000d 	bcs	8e78 <_ZN4CI2C7ReceiveEtPcj+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:91 (discriminator 2)
        buffer[i] = Reg(hal::BSC_Reg::Data_FIFO);
    8e40:	e3a01004 	mov	r1, #4
    8e44:	e51b0010 	ldr	r0, [fp, #-16]
    8e48:	ebffff0b 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8e4c:	e1a03000 	mov	r3, r0
    8e50:	e5931000 	ldr	r1, [r3]
    8e54:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    8e58:	e51b3008 	ldr	r3, [fp, #-8]
    8e5c:	e0823003 	add	r3, r2, r3
    8e60:	e6ef2071 	uxtb	r2, r1
    8e64:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8e68:	e51b3008 	ldr	r3, [fp, #-8]
    8e6c:	e2833001 	add	r3, r3, #1
    8e70:	e50b3008 	str	r3, [fp, #-8]
    8e74:	eaffffed 	b	8e30 <_ZN4CI2C7ReceiveEtPcj+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:92
}
    8e78:	e320f000 	nop	{0}
    8e7c:	e24bd004 	sub	sp, fp, #4
    8e80:	e8bd8800 	pop	{fp, pc}
    8e84:	00000302 	andeq	r0, r0, r2, lsl #6
    8e88:	00008091 	muleq	r0, r1, r0

00008e8c <_ZN4CI2C17Begin_TransactionEt>:
_ZN4CI2C17Begin_TransactionEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:95

CI2C_Transaction& CI2C::Begin_Transaction(uint16_t addr)
{
    8e8c:	e92d4800 	push	{fp, lr}
    8e90:	e28db004 	add	fp, sp, #4
    8e94:	e24dd008 	sub	sp, sp, #8
    8e98:	e50b0008 	str	r0, [fp, #-8]
    8e9c:	e1a03001 	mov	r3, r1
    8ea0:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96
    if (mTransaction.mIn_Progress)
    8ea4:	e51b3008 	ldr	r3, [fp, #-8]
    8ea8:	e5d33010 	ldrb	r3, [r3, #16]
    8eac:	e3530000 	cmp	r3, #0
    8eb0:	0a000002 	beq	8ec0 <_ZN4CI2C17Begin_TransactionEt+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:97
        return mTransaction;
    8eb4:	e51b3008 	ldr	r3, [fp, #-8]
    8eb8:	e2833010 	add	r3, r3, #16
    8ebc:	ea00000d 	b	8ef8 <_ZN4CI2C17Begin_TransactionEt+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:99

    mTransaction.mIn_Progress = true;
    8ec0:	e51b3008 	ldr	r3, [fp, #-8]
    8ec4:	e3a02001 	mov	r2, #1
    8ec8:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:100
    mTransaction.mLength = 0;
    8ecc:	e51b3008 	ldr	r3, [fp, #-8]
    8ed0:	e3a02000 	mov	r2, #0
    8ed4:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:101
    mTransaction.Set_Address(addr);
    8ed8:	e51b3008 	ldr	r3, [fp, #-8]
    8edc:	e2833010 	add	r3, r3, #16
    8ee0:	e15b20ba 	ldrh	r2, [fp, #-10]
    8ee4:	e1a01002 	mov	r1, r2
    8ee8:	e1a00003 	mov	r0, r3
    8eec:	eb000079 	bl	90d8 <_ZN16CI2C_Transaction11Set_AddressEt>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:103

    return mTransaction;
    8ef0:	e51b3008 	ldr	r3, [fp, #-8]
    8ef4:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:104
}
    8ef8:	e1a00003 	mov	r0, r3
    8efc:	e24bd004 	sub	sp, fp, #4
    8f00:	e8bd8800 	pop	{fp, pc}

00008f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>:
_ZN4CI2C15End_TransactionER16CI2C_Transactionb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:107

void CI2C::End_Transaction(CI2C_Transaction& transaction, bool commit)
{
    8f04:	e92d4810 	push	{r4, fp, lr}
    8f08:	e28db008 	add	fp, sp, #8
    8f0c:	e24dd01c 	sub	sp, sp, #28
    8f10:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    8f14:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    8f18:	e1a03002 	mov	r3, r2
    8f1c:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:108
    if (!transaction.mIn_Progress)
    8f20:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f24:	e5d33000 	ldrb	r3, [r3]
    8f28:	e2233001 	eor	r3, r3, #1
    8f2c:	e6ef3073 	uxtb	r3, r3
    8f30:	e3530000 	cmp	r3, #0
    8f34:	1a000042 	bne	9044 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:111
        return;

    transaction.mIn_Progress = false;
    8f38:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f3c:	e3a02000 	mov	r2, #0
    8f40:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113

    if (!commit || transaction.mLength == 0)
    8f44:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
    8f48:	e2233001 	eor	r3, r3, #1
    8f4c:	e6ef3073 	uxtb	r3, r3
    8f50:	e3530000 	cmp	r3, #0
    8f54:	1a00003c 	bne	904c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113 (discriminator 1)
    8f58:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f5c:	e593300c 	ldr	r3, [r3, #12]
    8f60:	e3530000 	cmp	r3, #0
    8f64:	0a000038 	beq	904c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:116
        return;

    Reg(hal::BSC_Reg::Slave_Address) = transaction.mAddress;
    8f68:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f6c:	e1d341b0 	ldrh	r4, [r3, #16]
    8f70:	e3a01003 	mov	r1, #3
    8f74:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f78:	ebfffebf 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8f7c:	e1a03000 	mov	r3, r0
    8f80:	e1a02004 	mov	r2, r4
    8f84:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:117
    Reg(hal::BSC_Reg::Data_Length) = transaction.mLength;
    8f88:	e3a01002 	mov	r1, #2
    8f8c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f90:	ebfffeb9 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8f94:	e1a02000 	mov	r2, r0
    8f98:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f9c:	e593300c 	ldr	r3, [r3, #12]
    8fa0:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119

    for (volatile int i = 0; i < transaction.mLength; i++)
    8fa4:	e3a03000 	mov	r3, #0
    8fa8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119 (discriminator 3)
    8fac:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8fb0:	e593300c 	ldr	r3, [r3, #12]
    8fb4:	e51b2010 	ldr	r2, [fp, #-16]
    8fb8:	e1530002 	cmp	r3, r2
    8fbc:	83a03001 	movhi	r3, #1
    8fc0:	93a03000 	movls	r3, #0
    8fc4:	e6ef3073 	uxtb	r3, r3
    8fc8:	e3530000 	cmp	r3, #0
    8fcc:	0a00000d 	beq	9008 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x104>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:120 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = transaction.mBuffer[i];
    8fd0:	e51b3010 	ldr	r3, [fp, #-16]
    8fd4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    8fd8:	e0823003 	add	r3, r2, r3
    8fdc:	e5d34001 	ldrb	r4, [r3, #1]
    8fe0:	e3a01004 	mov	r1, #4
    8fe4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fe8:	ebfffea3 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8fec:	e1a03000 	mov	r3, r0
    8ff0:	e1a02004 	mov	r2, r4
    8ff4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119 (discriminator 2)
    for (volatile int i = 0; i < transaction.mLength; i++)
    8ff8:	e51b3010 	ldr	r3, [fp, #-16]
    8ffc:	e2833001 	add	r3, r3, #1
    9000:	e50b3010 	str	r3, [fp, #-16]
    9004:	eaffffe8 	b	8fac <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:122

    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    9008:	e3a01001 	mov	r1, #1
    900c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9010:	ebfffe99 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    9014:	e1a03000 	mov	r3, r0
    9018:	e59f2038 	ldr	r2, [pc, #56]	; 9058 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x154>
    901c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    9020:	e3a01000 	mov	r1, #0
    9024:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9028:	ebfffe93 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    902c:	e1a03000 	mov	r3, r0
    9030:	e59f2024 	ldr	r2, [pc, #36]	; 905c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x158>
    9034:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125

    Wait_Ready();
    9038:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    903c:	ebfffe9c 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
    9040:	ea000002 	b	9050 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:109
        return;
    9044:	e320f000 	nop	{0}
    9048:	ea000000 	b	9050 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:114
        return;
    904c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
}
    9050:	e24bd008 	sub	sp, fp, #8
    9054:	e8bd8810 	pop	{r4, fp, pc}
    9058:	00000302 	andeq	r0, r0, r2, lsl #6
    905c:	00008080 	andeq	r8, r0, r0, lsl #1

00009060 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
    9060:	e92d4800 	push	{fp, lr}
    9064:	e28db004 	add	fp, sp, #4
    9068:	e24dd008 	sub	sp, sp, #8
    906c:	e50b0008 	str	r0, [fp, #-8]
    9070:	e50b100c 	str	r1, [fp, #-12]
    9074:	e51b3008 	ldr	r3, [fp, #-8]
    9078:	e3530001 	cmp	r3, #1
    907c:	1a000008 	bne	90a4 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126 (discriminator 1)
    9080:	e51b300c 	ldr	r3, [fp, #-12]
    9084:	e59f2024 	ldr	r2, [pc, #36]	; 90b0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    9088:	e1530002 	cmp	r3, r2
    908c:	1a000004 	bne	90a4 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:5
CI2C sI2C1(hal::BSC1_Base, 2, 3);
    9090:	e3a03003 	mov	r3, #3
    9094:	e3a02002 	mov	r2, #2
    9098:	e59f1014 	ldr	r1, [pc, #20]	; 90b4 <_Z41__static_initialization_and_destruction_0ii+0x54>
    909c:	e59f0014 	ldr	r0, [pc, #20]	; 90b8 <_Z41__static_initialization_and_destruction_0ii+0x58>
    90a0:	ebfffe5a 	bl	8a10 <_ZN4CI2CC1Emjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
}
    90a4:	e320f000 	nop	{0}
    90a8:	e24bd004 	sub	sp, fp, #4
    90ac:	e8bd8800 	pop	{fp, pc}
    90b0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    90b4:	20804000 	addcs	r4, r0, r0
    90b8:	00010bb0 			; <UNDEFINED> instruction: 0x00010bb0

000090bc <_GLOBAL__sub_I_sI2C1>:
_GLOBAL__sub_I_sI2C1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
    90bc:	e92d4800 	push	{fp, lr}
    90c0:	e28db004 	add	fp, sp, #4
    90c4:	e59f1008 	ldr	r1, [pc, #8]	; 90d4 <_GLOBAL__sub_I_sI2C1+0x18>
    90c8:	e3a00001 	mov	r0, #1
    90cc:	ebffffe3 	bl	9060 <_Z41__static_initialization_and_destruction_0ii>
    90d0:	e8bd8800 	pop	{fp, pc}
    90d4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

000090d8 <_ZN16CI2C_Transaction11Set_AddressEt>:
_ZN16CI2C_Transaction11Set_AddressEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:26
        uint16_t mAddress = 0;

    public:
        CI2C_Transaction() = default;

        void Set_Address(uint16_t addr)
    90d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    90dc:	e28db000 	add	fp, sp, #0
    90e0:	e24dd00c 	sub	sp, sp, #12
    90e4:	e50b0008 	str	r0, [fp, #-8]
    90e8:	e1a03001 	mov	r3, r1
    90ec:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:28
        {
            mAddress = addr;
    90f0:	e51b3008 	ldr	r3, [fp, #-8]
    90f4:	e15b20ba 	ldrh	r2, [fp, #-10]
    90f8:	e1c321b0 	strh	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:29
        } 
    90fc:	e320f000 	nop	{0}
    9100:	e28bd000 	add	sp, fp, #0
    9104:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9108:	e12fff1e 	bx	lr

0000910c <_ZN16CI2C_TransactionC1Ev>:
_ZN16CI2C_TransactionC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:24
        CI2C_Transaction() = default;
    910c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9110:	e28db000 	add	fp, sp, #0
    9114:	e24dd00c 	sub	sp, sp, #12
    9118:	e50b0008 	str	r0, [fp, #-8]
    911c:	e51b3008 	ldr	r3, [fp, #-8]
    9120:	e3a02000 	mov	r2, #0
    9124:	e5c32000 	strb	r2, [r3]
    9128:	e51b3008 	ldr	r3, [fp, #-8]
    912c:	e3a02000 	mov	r2, #0
    9130:	e583200c 	str	r2, [r3, #12]
    9134:	e51b3008 	ldr	r3, [fp, #-8]
    9138:	e3a02000 	mov	r2, #0
    913c:	e1c321b0 	strh	r2, [r3, #16]
    9140:	e51b3008 	ldr	r3, [fp, #-8]
    9144:	e1a00003 	mov	r0, r3
    9148:	e28bd000 	add	sp, fp, #0
    914c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9150:	e12fff1e 	bx	lr

00009154 <_ZN8CMonitorC1Ejjj>:
_ZN8CMonitorC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:5
#include <drivers/monitor.h>

CMonitor sMonitor{ 0x30000000, 80, 25 };

CMonitor::CMonitor(unsigned int monitor_base_addr, unsigned int width, unsigned int height)
    9154:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9158:	e28db000 	add	fp, sp, #0
    915c:	e24dd014 	sub	sp, sp, #20
    9160:	e50b0008 	str	r0, [fp, #-8]
    9164:	e50b100c 	str	r1, [fp, #-12]
    9168:	e50b2010 	str	r2, [fp, #-16]
    916c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:6
: m_monitor{ reinterpret_cast<unsigned char*>(monitor_base_addr) }
    9170:	e51b200c 	ldr	r2, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:10
, m_width{ width }
, m_height{ height }
, m_cursor{ 0, 0 }
, m_number_base{ DEFAULT_NUMBER_BASE }
    9174:	e51b3008 	ldr	r3, [fp, #-8]
    9178:	e5832000 	str	r2, [r3]
    917c:	e51b3008 	ldr	r3, [fp, #-8]
    9180:	e51b2010 	ldr	r2, [fp, #-16]
    9184:	e5832004 	str	r2, [r3, #4]
    9188:	e51b3008 	ldr	r3, [fp, #-8]
    918c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    9190:	e5832008 	str	r2, [r3, #8]
    9194:	e51b3008 	ldr	r3, [fp, #-8]
    9198:	e3a02000 	mov	r2, #0
    919c:	e583200c 	str	r2, [r3, #12]
    91a0:	e51b3008 	ldr	r3, [fp, #-8]
    91a4:	e3a02000 	mov	r2, #0
    91a8:	e5832010 	str	r2, [r3, #16]
    91ac:	e51b3008 	ldr	r3, [fp, #-8]
    91b0:	e3a0200a 	mov	r2, #10
    91b4:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:12
{
}
    91b8:	e51b3008 	ldr	r3, [fp, #-8]
    91bc:	e1a00003 	mov	r0, r3
    91c0:	e28bd000 	add	sp, fp, #0
    91c4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    91c8:	e12fff1e 	bx	lr

000091cc <_ZN8CMonitor5ClearEv>:
_ZN8CMonitor5ClearEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:21
    m_cursor.y = 0;
    m_cursor.y = 0;
}

void CMonitor::Clear()
{
    91cc:	e92d4800 	push	{fp, lr}
    91d0:	e28db004 	add	fp, sp, #4
    91d4:	e24dd010 	sub	sp, sp, #16
    91d8:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:22
    Reset_Cursor();
    91dc:	e51b0010 	ldr	r0, [fp, #-16]
    91e0:	eb00016d 	bl	979c <_ZN8CMonitor12Reset_CursorEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24

    for (unsigned int y = 0; y < m_height; ++y)
    91e4:	e3a03000 	mov	r3, #0
    91e8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 1)
    91ec:	e51b3010 	ldr	r3, [fp, #-16]
    91f0:	e5933008 	ldr	r3, [r3, #8]
    91f4:	e51b2008 	ldr	r2, [fp, #-8]
    91f8:	e1520003 	cmp	r2, r3
    91fc:	2a000019 	bcs	9268 <_ZN8CMonitor5ClearEv+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26
    {
        for (unsigned int x = 0; x < m_width; ++x)
    9200:	e3a03000 	mov	r3, #0
    9204:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 3)
    9208:	e51b3010 	ldr	r3, [fp, #-16]
    920c:	e5933004 	ldr	r3, [r3, #4]
    9210:	e51b200c 	ldr	r2, [fp, #-12]
    9214:	e1520003 	cmp	r2, r3
    9218:	2a00000e 	bcs	9258 <_ZN8CMonitor5ClearEv+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:28 (discriminator 2)
        {
            m_monitor[(y * m_width) + x] = ' ';
    921c:	e51b3010 	ldr	r3, [fp, #-16]
    9220:	e5932000 	ldr	r2, [r3]
    9224:	e51b3010 	ldr	r3, [fp, #-16]
    9228:	e5933004 	ldr	r3, [r3, #4]
    922c:	e51b1008 	ldr	r1, [fp, #-8]
    9230:	e0010391 	mul	r1, r1, r3
    9234:	e51b300c 	ldr	r3, [fp, #-12]
    9238:	e0813003 	add	r3, r1, r3
    923c:	e0823003 	add	r3, r2, r3
    9240:	e3a02020 	mov	r2, #32
    9244:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9248:	e51b300c 	ldr	r3, [fp, #-12]
    924c:	e2833001 	add	r3, r3, #1
    9250:	e50b300c 	str	r3, [fp, #-12]
    9254:	eaffffeb 	b	9208 <_ZN8CMonitor5ClearEv+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 2)
    for (unsigned int y = 0; y < m_height; ++y)
    9258:	e51b3008 	ldr	r3, [fp, #-8]
    925c:	e2833001 	add	r3, r3, #1
    9260:	e50b3008 	str	r3, [fp, #-8]
    9264:	eaffffe0 	b	91ec <_ZN8CMonitor5ClearEv+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:31
        }
    }
}
    9268:	e320f000 	nop	{0}
    926c:	e24bd004 	sub	sp, fp, #4
    9270:	e8bd8800 	pop	{fp, pc}

00009274 <_ZN8CMonitor6ScrollEv>:
_ZN8CMonitor6ScrollEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:49
        m_cursor.y = m_height - 1;
    }
}

void CMonitor::Scroll()
{
    9274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9278:	e28db000 	add	fp, sp, #0
    927c:	e24dd01c 	sub	sp, sp, #28
    9280:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50
    for (unsigned int y = 1; y < m_height; ++y)
    9284:	e3a03001 	mov	r3, #1
    9288:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 1)
    928c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9290:	e5933008 	ldr	r3, [r3, #8]
    9294:	e51b2008 	ldr	r2, [fp, #-8]
    9298:	e1520003 	cmp	r2, r3
    929c:	2a000024 	bcs	9334 <_ZN8CMonitor6ScrollEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52
    {
        for (unsigned int x = 0; x < m_width; ++x)
    92a0:	e3a03000 	mov	r3, #0
    92a4:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 3)
    92a8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92ac:	e5933004 	ldr	r3, [r3, #4]
    92b0:	e51b200c 	ldr	r2, [fp, #-12]
    92b4:	e1520003 	cmp	r2, r3
    92b8:	2a000019 	bcs	9324 <_ZN8CMonitor6ScrollEv+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:54 (discriminator 2)
        {
            m_monitor[((y - 1) * m_width) + x] = m_monitor[(y * m_width) + x];
    92bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92c0:	e5932000 	ldr	r2, [r3]
    92c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92c8:	e5933004 	ldr	r3, [r3, #4]
    92cc:	e51b1008 	ldr	r1, [fp, #-8]
    92d0:	e0010391 	mul	r1, r1, r3
    92d4:	e51b300c 	ldr	r3, [fp, #-12]
    92d8:	e0813003 	add	r3, r1, r3
    92dc:	e0822003 	add	r2, r2, r3
    92e0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92e4:	e5931000 	ldr	r1, [r3]
    92e8:	e51b3008 	ldr	r3, [fp, #-8]
    92ec:	e2433001 	sub	r3, r3, #1
    92f0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    92f4:	e5900004 	ldr	r0, [r0, #4]
    92f8:	e0000390 	mul	r0, r0, r3
    92fc:	e51b300c 	ldr	r3, [fp, #-12]
    9300:	e0803003 	add	r3, r0, r3
    9304:	e0813003 	add	r3, r1, r3
    9308:	e5d22000 	ldrb	r2, [r2]
    930c:	e6ef2072 	uxtb	r2, r2
    9310:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9314:	e51b300c 	ldr	r3, [fp, #-12]
    9318:	e2833001 	add	r3, r3, #1
    931c:	e50b300c 	str	r3, [fp, #-12]
    9320:	eaffffe0 	b	92a8 <_ZN8CMonitor6ScrollEv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 2)
    for (unsigned int y = 1; y < m_height; ++y)
    9324:	e51b3008 	ldr	r3, [fp, #-8]
    9328:	e2833001 	add	r3, r3, #1
    932c:	e50b3008 	str	r3, [fp, #-8]
    9330:	eaffffd5 	b	928c <_ZN8CMonitor6ScrollEv+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58
        }
    }

    for (unsigned int x = 0; x < m_width; ++x)
    9334:	e3a03000 	mov	r3, #0
    9338:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 3)
    933c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9340:	e5933004 	ldr	r3, [r3, #4]
    9344:	e51b2010 	ldr	r2, [fp, #-16]
    9348:	e1520003 	cmp	r2, r3
    934c:	2a000010 	bcs	9394 <_ZN8CMonitor6ScrollEv+0x120>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:60 (discriminator 2)
    {
        m_monitor[((m_height - 1) * m_width) + x] = ' ';
    9350:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9354:	e5932000 	ldr	r2, [r3]
    9358:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    935c:	e5933008 	ldr	r3, [r3, #8]
    9360:	e2433001 	sub	r3, r3, #1
    9364:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    9368:	e5911004 	ldr	r1, [r1, #4]
    936c:	e0010391 	mul	r1, r1, r3
    9370:	e51b3010 	ldr	r3, [fp, #-16]
    9374:	e0813003 	add	r3, r1, r3
    9378:	e0823003 	add	r3, r2, r3
    937c:	e3a02020 	mov	r2, #32
    9380:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 2)
    for (unsigned int x = 0; x < m_width; ++x)
    9384:	e51b3010 	ldr	r3, [fp, #-16]
    9388:	e2833001 	add	r3, r3, #1
    938c:	e50b3010 	str	r3, [fp, #-16]
    9390:	eaffffe9 	b	933c <_ZN8CMonitor6ScrollEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:62
    }
}
    9394:	e320f000 	nop	{0}
    9398:	e28bd000 	add	sp, fp, #0
    939c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    93a0:	e12fff1e 	bx	lr

000093a4 <_ZN8CMonitorlsEc>:
_ZN8CMonitorlsEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:70
{
    m_number_base = DEFAULT_NUMBER_BASE;
}

CMonitor& CMonitor::operator<<(char c)
{
    93a4:	e92d4800 	push	{fp, lr}
    93a8:	e28db004 	add	fp, sp, #4
    93ac:	e24dd008 	sub	sp, sp, #8
    93b0:	e50b0008 	str	r0, [fp, #-8]
    93b4:	e1a03001 	mov	r3, r1
    93b8:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:71
    if (c != '\n')
    93bc:	e55b3009 	ldrb	r3, [fp, #-9]
    93c0:	e353000a 	cmp	r3, #10
    93c4:	0a000012 	beq	9414 <_ZN8CMonitorlsEc+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:73
    {
        m_monitor[(m_cursor.y * m_width) + m_cursor.x] = static_cast<unsigned char>(c);
    93c8:	e51b3008 	ldr	r3, [fp, #-8]
    93cc:	e5932000 	ldr	r2, [r3]
    93d0:	e51b3008 	ldr	r3, [fp, #-8]
    93d4:	e593300c 	ldr	r3, [r3, #12]
    93d8:	e51b1008 	ldr	r1, [fp, #-8]
    93dc:	e5911004 	ldr	r1, [r1, #4]
    93e0:	e0010391 	mul	r1, r1, r3
    93e4:	e51b3008 	ldr	r3, [fp, #-8]
    93e8:	e5933010 	ldr	r3, [r3, #16]
    93ec:	e0813003 	add	r3, r1, r3
    93f0:	e0823003 	add	r3, r2, r3
    93f4:	e55b2009 	ldrb	r2, [fp, #-9]
    93f8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:74
        ++m_cursor.x;
    93fc:	e51b3008 	ldr	r3, [fp, #-8]
    9400:	e5933010 	ldr	r3, [r3, #16]
    9404:	e2832001 	add	r2, r3, #1
    9408:	e51b3008 	ldr	r3, [fp, #-8]
    940c:	e5832010 	str	r2, [r3, #16]
    9410:	ea000007 	b	9434 <_ZN8CMonitorlsEc+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:78
    }
    else
    {
        m_cursor.x = 0;
    9414:	e51b3008 	ldr	r3, [fp, #-8]
    9418:	e3a02000 	mov	r2, #0
    941c:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:79
        ++m_cursor.y;
    9420:	e51b3008 	ldr	r3, [fp, #-8]
    9424:	e593300c 	ldr	r3, [r3, #12]
    9428:	e2832001 	add	r2, r3, #1
    942c:	e51b3008 	ldr	r3, [fp, #-8]
    9430:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:82
    }

    Adjust_Cursor();
    9434:	e51b0008 	ldr	r0, [fp, #-8]
    9438:	eb0000e5 	bl	97d4 <_ZN8CMonitor13Adjust_CursorEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:84

    return *this;
    943c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:85
}
    9440:	e1a00003 	mov	r0, r3
    9444:	e24bd004 	sub	sp, fp, #4
    9448:	e8bd8800 	pop	{fp, pc}

0000944c <_ZN8CMonitorlsEPKc>:
_ZN8CMonitorlsEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:88

CMonitor& CMonitor::operator<<(const char* str)
{
    944c:	e92d4800 	push	{fp, lr}
    9450:	e28db004 	add	fp, sp, #4
    9454:	e24dd010 	sub	sp, sp, #16
    9458:	e50b0010 	str	r0, [fp, #-16]
    945c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    9460:	e3a03000 	mov	r3, #0
    9464:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 3)
    9468:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    946c:	e51b3008 	ldr	r3, [fp, #-8]
    9470:	e0823003 	add	r3, r2, r3
    9474:	e5d33000 	ldrb	r3, [r3]
    9478:	e3530000 	cmp	r3, #0
    947c:	0a00000a 	beq	94ac <_ZN8CMonitorlsEPKc+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:91 (discriminator 2)
    {
        *this << str[i];
    9480:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    9484:	e51b3008 	ldr	r3, [fp, #-8]
    9488:	e0823003 	add	r3, r2, r3
    948c:	e5d33000 	ldrb	r3, [r3]
    9490:	e1a01003 	mov	r1, r3
    9494:	e51b0010 	ldr	r0, [fp, #-16]
    9498:	ebffffc1 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 2)
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    949c:	e51b3008 	ldr	r3, [fp, #-8]
    94a0:	e2833001 	add	r3, r3, #1
    94a4:	e50b3008 	str	r3, [fp, #-8]
    94a8:	eaffffee 	b	9468 <_ZN8CMonitorlsEPKc+0x1c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:94
    }

    Reset_Number_Base();
    94ac:	e51b0010 	ldr	r0, [fp, #-16]
    94b0:	eb0000e9 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:96

    return *this;
    94b4:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:97
}
    94b8:	e1a00003 	mov	r0, r3
    94bc:	e24bd004 	sub	sp, fp, #4
    94c0:	e8bd8800 	pop	{fp, pc}

000094c4 <_ZN8CMonitorlsENS_12NNumber_BaseE>:
_ZN8CMonitorlsENS_12NNumber_BaseE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:100

CMonitor& CMonitor::operator<<(CMonitor::NNumber_Base number_base)
{
    94c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    94c8:	e28db000 	add	fp, sp, #0
    94cc:	e24dd00c 	sub	sp, sp, #12
    94d0:	e50b0008 	str	r0, [fp, #-8]
    94d4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:101
    m_number_base = number_base;
    94d8:	e51b3008 	ldr	r3, [fp, #-8]
    94dc:	e51b200c 	ldr	r2, [fp, #-12]
    94e0:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:103

    return *this;
    94e4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:104
}
    94e8:	e1a00003 	mov	r0, r3
    94ec:	e28bd000 	add	sp, fp, #0
    94f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    94f4:	e12fff1e 	bx	lr

000094f8 <_ZN8CMonitorlsEj>:
_ZN8CMonitorlsEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:107

CMonitor& CMonitor::operator<<(unsigned int num)
{
    94f8:	e92d4800 	push	{fp, lr}
    94fc:	e28db004 	add	fp, sp, #4
    9500:	e24dd008 	sub	sp, sp, #8
    9504:	e50b0008 	str	r0, [fp, #-8]
    9508:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:112
    static constexpr unsigned int BUFFER_SIZE = 16;

    static char s_buffer[BUFFER_SIZE];

    itoa(num, s_buffer, static_cast<unsigned int>(m_number_base));
    950c:	e51b3008 	ldr	r3, [fp, #-8]
    9510:	e5933014 	ldr	r3, [r3, #20]
    9514:	e59f202c 	ldr	r2, [pc, #44]	; 9548 <_ZN8CMonitorlsEj+0x50>
    9518:	e51b100c 	ldr	r1, [fp, #-12]
    951c:	e51b0008 	ldr	r0, [fp, #-8]
    9520:	eb000021 	bl	95ac <_ZN8CMonitor4itoaEjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:113
    *this << s_buffer;
    9524:	e59f101c 	ldr	r1, [pc, #28]	; 9548 <_ZN8CMonitorlsEj+0x50>
    9528:	e51b0008 	ldr	r0, [fp, #-8]
    952c:	ebffffc6 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:114
    Reset_Number_Base();
    9530:	e51b0008 	ldr	r0, [fp, #-8]
    9534:	eb0000c8 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:116

    return *this;
    9538:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:117
}
    953c:	e1a00003 	mov	r0, r3
    9540:	e24bd004 	sub	sp, fp, #4
    9544:	e8bd8800 	pop	{fp, pc}
    9548:	00010bec 	andeq	r0, r1, ip, ror #23

0000954c <_ZN8CMonitorlsEb>:
_ZN8CMonitorlsEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:120

CMonitor& CMonitor::operator<<(bool value)
{
    954c:	e92d4800 	push	{fp, lr}
    9550:	e28db004 	add	fp, sp, #4
    9554:	e24dd008 	sub	sp, sp, #8
    9558:	e50b0008 	str	r0, [fp, #-8]
    955c:	e1a03001 	mov	r3, r1
    9560:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:121
    if (value)
    9564:	e55b3009 	ldrb	r3, [fp, #-9]
    9568:	e3530000 	cmp	r3, #0
    956c:	0a000003 	beq	9580 <_ZN8CMonitorlsEb+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:123
    {
        *this << "true";
    9570:	e59f102c 	ldr	r1, [pc, #44]	; 95a4 <_ZN8CMonitorlsEb+0x58>
    9574:	e51b0008 	ldr	r0, [fp, #-8]
    9578:	ebffffb3 	bl	944c <_ZN8CMonitorlsEPKc>
    957c:	ea000002 	b	958c <_ZN8CMonitorlsEb+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:127
    }
    else
    {
        *this << "false";
    9580:	e59f1020 	ldr	r1, [pc, #32]	; 95a8 <_ZN8CMonitorlsEb+0x5c>
    9584:	e51b0008 	ldr	r0, [fp, #-8]
    9588:	ebffffaf 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:130
    }

    Reset_Number_Base();
    958c:	e51b0008 	ldr	r0, [fp, #-8]
    9590:	eb0000b1 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:132

    return *this;
    9594:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:133
}
    9598:	e1a00003 	mov	r0, r3
    959c:	e24bd004 	sub	sp, fp, #4
    95a0:	e8bd8800 	pop	{fp, pc}
    95a4:	0000ffc8 	andeq	pc, r0, r8, asr #31
    95a8:	0000ffd0 	ldrdeq	pc, [r0], -r0

000095ac <_ZN8CMonitor4itoaEjPcj>:
_ZN8CMonitor4itoaEjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:136

void CMonitor::itoa(unsigned int input, char* output, unsigned int base)
{
    95ac:	e92d4800 	push	{fp, lr}
    95b0:	e28db004 	add	fp, sp, #4
    95b4:	e24dd020 	sub	sp, sp, #32
    95b8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    95bc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    95c0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    95c4:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:137
    int i = 0;
    95c8:	e3a03000 	mov	r3, #0
    95cc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139

    while (input > 0)
    95d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95d4:	e3530000 	cmp	r3, #0
    95d8:	0a000015 	beq	9634 <_ZN8CMonitor4itoaEjPcj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:141
    {
        output[i] = CharConvArr[input % base];
    95dc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95e0:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    95e4:	e1a00003 	mov	r0, r3
    95e8:	eb001a55 	bl	ff44 <__aeabi_uidivmod>
    95ec:	e1a03001 	mov	r3, r1
    95f0:	e1a02003 	mov	r2, r3
    95f4:	e59f3128 	ldr	r3, [pc, #296]	; 9724 <_ZN8CMonitor4itoaEjPcj+0x178>
    95f8:	e0822003 	add	r2, r2, r3
    95fc:	e51b3008 	ldr	r3, [fp, #-8]
    9600:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    9604:	e0813003 	add	r3, r1, r3
    9608:	e5d22000 	ldrb	r2, [r2]
    960c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:142
        input /= base;
    9610:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    9614:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    9618:	eb0019ce 	bl	fd58 <__udivsi3>
    961c:	e1a03000 	mov	r3, r0
    9620:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:144

        i++;
    9624:	e51b3008 	ldr	r3, [fp, #-8]
    9628:	e2833001 	add	r3, r3, #1
    962c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    9630:	eaffffe6 	b	95d0 <_ZN8CMonitor4itoaEjPcj+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:147
    }

    if (i == 0)
    9634:	e51b3008 	ldr	r3, [fp, #-8]
    9638:	e3530000 	cmp	r3, #0
    963c:	1a000007 	bne	9660 <_ZN8CMonitor4itoaEjPcj+0xb4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:149
    {
        output[i] = CharConvArr[0];
    9640:	e51b3008 	ldr	r3, [fp, #-8]
    9644:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9648:	e0823003 	add	r3, r2, r3
    964c:	e3a02030 	mov	r2, #48	; 0x30
    9650:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:150
        i++;
    9654:	e51b3008 	ldr	r3, [fp, #-8]
    9658:	e2833001 	add	r3, r3, #1
    965c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:153
    }

    output[i] = '\0';
    9660:	e51b3008 	ldr	r3, [fp, #-8]
    9664:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9668:	e0823003 	add	r3, r2, r3
    966c:	e3a02000 	mov	r2, #0
    9670:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:154
    i--;
    9674:	e51b3008 	ldr	r3, [fp, #-8]
    9678:	e2433001 	sub	r3, r3, #1
    967c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156

    for (int j = 0; j <= (i / 2); j++)
    9680:	e3a03000 	mov	r3, #0
    9684:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 3)
    9688:	e51b3008 	ldr	r3, [fp, #-8]
    968c:	e1a02fa3 	lsr	r2, r3, #31
    9690:	e0823003 	add	r3, r2, r3
    9694:	e1a030c3 	asr	r3, r3, #1
    9698:	e1a02003 	mov	r2, r3
    969c:	e51b300c 	ldr	r3, [fp, #-12]
    96a0:	e1530002 	cmp	r3, r2
    96a4:	ca00001b 	bgt	9718 <_ZN8CMonitor4itoaEjPcj+0x16c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:158 (discriminator 2)
    {
        char c = output[i - j];
    96a8:	e51b2008 	ldr	r2, [fp, #-8]
    96ac:	e51b300c 	ldr	r3, [fp, #-12]
    96b0:	e0423003 	sub	r3, r2, r3
    96b4:	e1a02003 	mov	r2, r3
    96b8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    96bc:	e0833002 	add	r3, r3, r2
    96c0:	e5d33000 	ldrb	r3, [r3]
    96c4:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:159 (discriminator 2)
        output[i - j] = output[j];
    96c8:	e51b300c 	ldr	r3, [fp, #-12]
    96cc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    96d0:	e0822003 	add	r2, r2, r3
    96d4:	e51b1008 	ldr	r1, [fp, #-8]
    96d8:	e51b300c 	ldr	r3, [fp, #-12]
    96dc:	e0413003 	sub	r3, r1, r3
    96e0:	e1a01003 	mov	r1, r3
    96e4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    96e8:	e0833001 	add	r3, r3, r1
    96ec:	e5d22000 	ldrb	r2, [r2]
    96f0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:160 (discriminator 2)
        output[j] = c;
    96f4:	e51b300c 	ldr	r3, [fp, #-12]
    96f8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    96fc:	e0823003 	add	r3, r2, r3
    9700:	e55b200d 	ldrb	r2, [fp, #-13]
    9704:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 2)
    for (int j = 0; j <= (i / 2); j++)
    9708:	e51b300c 	ldr	r3, [fp, #-12]
    970c:	e2833001 	add	r3, r3, #1
    9710:	e50b300c 	str	r3, [fp, #-12]
    9714:	eaffffdb 	b	9688 <_ZN8CMonitor4itoaEjPcj+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    }
}
    9718:	e320f000 	nop	{0}
    971c:	e24bd004 	sub	sp, fp, #4
    9720:	e8bd8800 	pop	{fp, pc}
    9724:	0000ffd8 	ldrdeq	pc, [r0], -r8

00009728 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9728:	e92d4800 	push	{fp, lr}
    972c:	e28db004 	add	fp, sp, #4
    9730:	e24dd008 	sub	sp, sp, #8
    9734:	e50b0008 	str	r0, [fp, #-8]
    9738:	e50b100c 	str	r1, [fp, #-12]
    973c:	e51b3008 	ldr	r3, [fp, #-8]
    9740:	e3530001 	cmp	r3, #1
    9744:	1a000008 	bne	976c <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162 (discriminator 1)
    9748:	e51b300c 	ldr	r3, [fp, #-12]
    974c:	e59f2024 	ldr	r2, [pc, #36]	; 9778 <_Z41__static_initialization_and_destruction_0ii+0x50>
    9750:	e1530002 	cmp	r3, r2
    9754:	1a000004 	bne	976c <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:3
CMonitor sMonitor{ 0x30000000, 80, 25 };
    9758:	e3a03019 	mov	r3, #25
    975c:	e3a02050 	mov	r2, #80	; 0x50
    9760:	e3a01203 	mov	r1, #805306368	; 0x30000000
    9764:	e59f0010 	ldr	r0, [pc, #16]	; 977c <_Z41__static_initialization_and_destruction_0ii+0x54>
    9768:	ebfffe79 	bl	9154 <_ZN8CMonitorC1Ejjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    976c:	e320f000 	nop	{0}
    9770:	e24bd004 	sub	sp, fp, #4
    9774:	e8bd8800 	pop	{fp, pc}
    9778:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    977c:	00010bd4 	ldrdeq	r0, [r1], -r4

00009780 <_GLOBAL__sub_I_sMonitor>:
_GLOBAL__sub_I_sMonitor():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9780:	e92d4800 	push	{fp, lr}
    9784:	e28db004 	add	fp, sp, #4
    9788:	e59f1008 	ldr	r1, [pc, #8]	; 9798 <_GLOBAL__sub_I_sMonitor+0x18>
    978c:	e3a00001 	mov	r0, #1
    9790:	ebffffe4 	bl	9728 <_Z41__static_initialization_and_destruction_0ii>
    9794:	e8bd8800 	pop	{fp, pc}
    9798:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000979c <_ZN8CMonitor12Reset_CursorEv>:
_ZN8CMonitor12Reset_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:15
{
    979c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    97a0:	e28db000 	add	fp, sp, #0
    97a4:	e24dd00c 	sub	sp, sp, #12
    97a8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:16
    m_cursor.y = 0;
    97ac:	e51b3008 	ldr	r3, [fp, #-8]
    97b0:	e3a02000 	mov	r2, #0
    97b4:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:17
    m_cursor.y = 0;
    97b8:	e51b3008 	ldr	r3, [fp, #-8]
    97bc:	e3a02000 	mov	r2, #0
    97c0:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:18
}
    97c4:	e320f000 	nop	{0}
    97c8:	e28bd000 	add	sp, fp, #0
    97cc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    97d0:	e12fff1e 	bx	lr

000097d4 <_ZN8CMonitor13Adjust_CursorEv>:
_ZN8CMonitor13Adjust_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:34
{
    97d4:	e92d4800 	push	{fp, lr}
    97d8:	e28db004 	add	fp, sp, #4
    97dc:	e24dd008 	sub	sp, sp, #8
    97e0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:35
    if (m_cursor.x >= m_width)
    97e4:	e51b3008 	ldr	r3, [fp, #-8]
    97e8:	e5932010 	ldr	r2, [r3, #16]
    97ec:	e51b3008 	ldr	r3, [fp, #-8]
    97f0:	e5933004 	ldr	r3, [r3, #4]
    97f4:	e1520003 	cmp	r2, r3
    97f8:	3a000007 	bcc	981c <_ZN8CMonitor13Adjust_CursorEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:37
        m_cursor.x = 0;
    97fc:	e51b3008 	ldr	r3, [fp, #-8]
    9800:	e3a02000 	mov	r2, #0
    9804:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:38
        ++m_cursor.y;
    9808:	e51b3008 	ldr	r3, [fp, #-8]
    980c:	e593300c 	ldr	r3, [r3, #12]
    9810:	e2832001 	add	r2, r3, #1
    9814:	e51b3008 	ldr	r3, [fp, #-8]
    9818:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:41
    if (m_cursor.y >= m_height)
    981c:	e51b3008 	ldr	r3, [fp, #-8]
    9820:	e593200c 	ldr	r2, [r3, #12]
    9824:	e51b3008 	ldr	r3, [fp, #-8]
    9828:	e5933008 	ldr	r3, [r3, #8]
    982c:	e1520003 	cmp	r2, r3
    9830:	3a000006 	bcc	9850 <_ZN8CMonitor13Adjust_CursorEv+0x7c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:43
        Scroll();
    9834:	e51b0008 	ldr	r0, [fp, #-8]
    9838:	ebfffe8d 	bl	9274 <_ZN8CMonitor6ScrollEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:44
        m_cursor.y = m_height - 1;
    983c:	e51b3008 	ldr	r3, [fp, #-8]
    9840:	e5933008 	ldr	r3, [r3, #8]
    9844:	e2432001 	sub	r2, r3, #1
    9848:	e51b3008 	ldr	r3, [fp, #-8]
    984c:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:46
}
    9850:	e320f000 	nop	{0}
    9854:	e24bd004 	sub	sp, fp, #4
    9858:	e8bd8800 	pop	{fp, pc}

0000985c <_ZN8CMonitor17Reset_Number_BaseEv>:
_ZN8CMonitor17Reset_Number_BaseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:65
{
    985c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9860:	e28db000 	add	fp, sp, #0
    9864:	e24dd00c 	sub	sp, sp, #12
    9868:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:66
    m_number_base = DEFAULT_NUMBER_BASE;
    986c:	e51b3008 	ldr	r3, [fp, #-8]
    9870:	e3a0200a 	mov	r2, #10
    9874:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:67
}
    9878:	e320f000 	nop	{0}
    987c:	e28bd000 	add	sp, fp, #0
    9880:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9884:	e12fff1e 	bx	lr

00009888 <_ZN16CDisplay_SSD1306C1ER4CI2C>:
_ZN16CDisplay_SSD1306C2ER4CI2C():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:9

#include <drivers/bridges/display_protocol.h>

CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);

CDisplay_SSD1306::CDisplay_SSD1306(CI2C& i2c)
    9888:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    988c:	e28db000 	add	fp, sp, #0
    9890:	e24dd00c 	sub	sp, sp, #12
    9894:	e50b0008 	str	r0, [fp, #-8]
    9898:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:10
    : mI2C(i2c), mOpened(false), mBuffer(nullptr), mWidth(0), mHeight(0)
    989c:	e51b3008 	ldr	r3, [fp, #-8]
    98a0:	e51b200c 	ldr	r2, [fp, #-12]
    98a4:	e5832000 	str	r2, [r3]
    98a8:	e51b3008 	ldr	r3, [fp, #-8]
    98ac:	e3a02000 	mov	r2, #0
    98b0:	e5c32004 	strb	r2, [r3, #4]
    98b4:	e51b3008 	ldr	r3, [fp, #-8]
    98b8:	e3a02000 	mov	r2, #0
    98bc:	e5832008 	str	r2, [r3, #8]
    98c0:	e51b3008 	ldr	r3, [fp, #-8]
    98c4:	e3a02000 	mov	r2, #0
    98c8:	e583200c 	str	r2, [r3, #12]
    98cc:	e51b3008 	ldr	r3, [fp, #-8]
    98d0:	e3a02000 	mov	r2, #0
    98d4:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:13
{

}
    98d8:	e51b3008 	ldr	r3, [fp, #-8]
    98dc:	e1a00003 	mov	r0, r3
    98e0:	e28bd000 	add	sp, fp, #0
    98e4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    98e8:	e12fff1e 	bx	lr

000098ec <_ZN16CDisplay_SSD13064OpenEii>:
_ZN16CDisplay_SSD13064OpenEii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:16

bool CDisplay_SSD1306::Open(int width, int height)
{
    98ec:	e92d4800 	push	{fp, lr}
    98f0:	e28db004 	add	fp, sp, #4
    98f4:	e24dd0d8 	sub	sp, sp, #216	; 0xd8
    98f8:	e50b00d0 	str	r0, [fp, #-208]	; 0xffffff30
    98fc:	e50b10d4 	str	r1, [fp, #-212]	; 0xffffff2c
    9900:	e50b20d8 	str	r2, [fp, #-216]	; 0xffffff28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:17
    if (!mI2C.Open())
    9904:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9908:	e5933000 	ldr	r3, [r3]
    990c:	e1a00003 	mov	r0, r3
    9910:	ebfffc7c 	bl	8b08 <_ZN4CI2C4OpenEv>
    9914:	e1a03000 	mov	r3, r0
    9918:	e2233001 	eor	r3, r3, #1
    991c:	e6ef3073 	uxtb	r3, r3
    9920:	e3530000 	cmp	r3, #0
    9924:	0a000001 	beq	9930 <_ZN16CDisplay_SSD13064OpenEii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:18
        return false;
    9928:	e3a03000 	mov	r3, #0
    992c:	ea0001b8 	b	a014 <_ZN16CDisplay_SSD13064OpenEii+0x728>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:20

    mOpened = true;
    9930:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9934:	e3a02001 	mov	r2, #1
    9938:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:23

    // zaokrouhlime nahoru na nasobek osmi (na cele stranky)
    if (height % 8 != 0)
    993c:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9940:	e2033007 	and	r3, r3, #7
    9944:	e3530000 	cmp	r3, #0
    9948:	0a000008 	beq	9970 <_ZN16CDisplay_SSD13064OpenEii+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:24
        height += 8 - (height % 8);
    994c:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9950:	e2732000 	rsbs	r2, r3, #0
    9954:	e2033007 	and	r3, r3, #7
    9958:	e2022007 	and	r2, r2, #7
    995c:	52623000 	rsbpl	r3, r2, #0
    9960:	e2633008 	rsb	r3, r3, #8
    9964:	e51b20d8 	ldr	r2, [fp, #-216]	; 0xffffff28
    9968:	e0823003 	add	r3, r2, r3
    996c:	e50b30d8 	str	r3, [fp, #-216]	; 0xffffff28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:26

    mWidth = width;
    9970:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9974:	e51b20d4 	ldr	r2, [fp, #-212]	; 0xffffff2c
    9978:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:27
    mHeight = height;
    997c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9980:	e51b20d8 	ldr	r2, [fp, #-216]	; 0xffffff28
    9984:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:32

    // alokujeme si buffer, ten je velky tak jako displej
    // dalo by se to optimalizovat, napr. primym kreslenim, bufferovanim vyrezu, apod.
    // ale to my ted nepotrebujeme, obzvlast kdyz spotrebujeme max jednotky kB a mame k dispozici >512MB RAM
    mBuffer = new uint8_t[mWidth * mHeight / 8];
    9988:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    998c:	e593300c 	ldr	r3, [r3, #12]
    9990:	e51b20d0 	ldr	r2, [fp, #-208]	; 0xffffff30
    9994:	e5922010 	ldr	r2, [r2, #16]
    9998:	e0030392 	mul	r3, r2, r3
    999c:	e2832007 	add	r2, r3, #7
    99a0:	e3530000 	cmp	r3, #0
    99a4:	b1a03002 	movlt	r3, r2
    99a8:	a1a03003 	movge	r3, r3
    99ac:	e1a031c3 	asr	r3, r3, #3
    99b0:	e1a00003 	mov	r0, r3
    99b4:	eb0018e6 	bl	fd54 <_Znaj>
    99b8:	e1a03000 	mov	r3, r0
    99bc:	e1a02003 	mov	r2, r3
    99c0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    99c4:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:36

    // vypneme displej, nastavime clock ratio (z datasheetu, doporucena hodnota), nastavime multiplex ratio (vysku displeje)
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    99c8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    99cc:	e5933000 	ldr	r3, [r3]
    99d0:	e3a0103c 	mov	r1, #60	; 0x3c
    99d4:	e1a00003 	mov	r0, r3
    99d8:	ebfffd2b 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    99dc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:38

        ta << SSD1306_Cmd::Command_Start
    99e0:	e3a03000 	mov	r3, #0
    99e4:	e50b30cc 	str	r3, [fp, #-204]	; 0xffffff34
    99e8:	e24b30cc 	sub	r3, fp, #204	; 0xcc
    99ec:	e1a01003 	mov	r1, r3
    99f0:	e51b0008 	ldr	r0, [fp, #-8]
    99f4:	eb000475 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    99f8:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:39
            << SSD1306_Cmd::Display_Off
    99fc:	e3a030ae 	mov	r3, #174	; 0xae
    9a00:	e50b30c8 	str	r3, [fp, #-200]	; 0xffffff38
    9a04:	e24b30c8 	sub	r3, fp, #200	; 0xc8
    9a08:	e1a01003 	mov	r1, r3
    9a0c:	e1a00002 	mov	r0, r2
    9a10:	eb00046e 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9a14:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:40
            << SSD1306_Cmd::Set_Display_Clock_Div_Ratio
    9a18:	e3a030d5 	mov	r3, #213	; 0xd5
    9a1c:	e50b30c4 	str	r3, [fp, #-196]	; 0xffffff3c
    9a20:	e24b30c4 	sub	r3, fp, #196	; 0xc4
    9a24:	e1a01003 	mov	r1, r3
    9a28:	e1a00002 	mov	r0, r2
    9a2c:	eb000467 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9a30:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:41
            << 0x80
    9a34:	e3a03080 	mov	r3, #128	; 0x80
    9a38:	e50b30c0 	str	r3, [fp, #-192]	; 0xffffff40
    9a3c:	e24b30c0 	sub	r3, fp, #192	; 0xc0
    9a40:	e1a01003 	mov	r1, r3
    9a44:	e1a00002 	mov	r0, r2
    9a48:	eb00047c 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9a4c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:42
            << SSD1306_Cmd::Set_Multiplex_Ratio;
    9a50:	e3a030a8 	mov	r3, #168	; 0xa8
    9a54:	e50b30bc 	str	r3, [fp, #-188]	; 0xffffff44
    9a58:	e24b30bc 	sub	r3, fp, #188	; 0xbc
    9a5c:	e1a01003 	mov	r1, r3
    9a60:	e1a00002 	mov	r0, r2
    9a64:	eb000459 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:44

        mI2C.End_Transaction(ta);
    9a68:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9a6c:	e5933000 	ldr	r3, [r3]
    9a70:	e3a02001 	mov	r2, #1
    9a74:	e51b1008 	ldr	r1, [fp, #-8]
    9a78:	e1a00003 	mov	r0, r3
    9a7c:	ebfffd20 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:49
    }

    // pokracovani predchoziho - multiplex ratio
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9a80:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9a84:	e5933000 	ldr	r3, [r3]
    9a88:	e3a0103c 	mov	r1, #60	; 0x3c
    9a8c:	e1a00003 	mov	r0, r3
    9a90:	ebfffcfd 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9a94:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:51

        ta << SSD1306_Cmd::Command_Start
    9a98:	e3a03000 	mov	r3, #0
    9a9c:	e50b30b8 	str	r3, [fp, #-184]	; 0xffffff48
    9aa0:	e24b30b8 	sub	r3, fp, #184	; 0xb8
    9aa4:	e1a01003 	mov	r1, r3
    9aa8:	e51b000c 	ldr	r0, [fp, #-12]
    9aac:	eb000447 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9ab0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:52
            << height - 1;
    9ab4:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9ab8:	e2433001 	sub	r3, r3, #1
    9abc:	e50b30b4 	str	r3, [fp, #-180]	; 0xffffff4c
    9ac0:	e24b30b4 	sub	r3, fp, #180	; 0xb4
    9ac4:	e1a01003 	mov	r1, r3
    9ac8:	e1a00002 	mov	r0, r2
    9acc:	eb00045b 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:54

        mI2C.End_Transaction(ta);
    9ad0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ad4:	e5933000 	ldr	r3, [r3]
    9ad8:	e3a02001 	mov	r2, #1
    9adc:	e51b100c 	ldr	r1, [fp, #-12]
    9ae0:	e1a00003 	mov	r0, r3
    9ae4:	ebfffd06 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:59
    }

    // nastavime display offset (pametovy offset a jeho matching na realnou matici), pocatecni radek a vlastnosti vnitrniho menice (nabojova pumúa)
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ae8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9aec:	e5933000 	ldr	r3, [r3]
    9af0:	e3a0103c 	mov	r1, #60	; 0x3c
    9af4:	e1a00003 	mov	r0, r3
    9af8:	ebfffce3 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9afc:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:61

        ta << SSD1306_Cmd::Command_Start
    9b00:	e3a03000 	mov	r3, #0
    9b04:	e50b30b0 	str	r3, [fp, #-176]	; 0xffffff50
    9b08:	e24b30b0 	sub	r3, fp, #176	; 0xb0
    9b0c:	e1a01003 	mov	r1, r3
    9b10:	e51b0010 	ldr	r0, [fp, #-16]
    9b14:	eb00042d 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9b18:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:62
            << SSD1306_Cmd::Set_Display_Offset
    9b1c:	e3a030d3 	mov	r3, #211	; 0xd3
    9b20:	e50b30ac 	str	r3, [fp, #-172]	; 0xffffff54
    9b24:	e24b30ac 	sub	r3, fp, #172	; 0xac
    9b28:	e1a01003 	mov	r1, r3
    9b2c:	e1a00002 	mov	r0, r2
    9b30:	eb000426 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9b34:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:63
            << 0x00
    9b38:	e3a03000 	mov	r3, #0
    9b3c:	e50b30a8 	str	r3, [fp, #-168]	; 0xffffff58
    9b40:	e24b30a8 	sub	r3, fp, #168	; 0xa8
    9b44:	e1a01003 	mov	r1, r3
    9b48:	e1a00002 	mov	r0, r2
    9b4c:	eb00043b 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9b50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:64
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Start_Line) | 0x00) // zacatek na radce 0
    9b54:	e3a03040 	mov	r3, #64	; 0x40
    9b58:	e50b30a4 	str	r3, [fp, #-164]	; 0xffffff5c
    9b5c:	e24b30a4 	sub	r3, fp, #164	; 0xa4
    9b60:	e1a01003 	mov	r1, r3
    9b64:	e1a00002 	mov	r0, r2
    9b68:	eb000434 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9b6c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:65
            << SSD1306_Cmd::Charge_Pump;
    9b70:	e3a0308d 	mov	r3, #141	; 0x8d
    9b74:	e50b30a0 	str	r3, [fp, #-160]	; 0xffffff60
    9b78:	e24b30a0 	sub	r3, fp, #160	; 0xa0
    9b7c:	e1a01003 	mov	r1, r3
    9b80:	e1a00002 	mov	r0, r2
    9b84:	eb000411 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:67

        mI2C.End_Transaction(ta);
    9b88:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9b8c:	e5933000 	ldr	r3, [r3]
    9b90:	e3a02001 	mov	r2, #1
    9b94:	e51b1010 	ldr	r1, [fp, #-16]
    9b98:	e1a00003 	mov	r0, r3
    9b9c:	ebfffcd8 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:72
    }

    // pokracovani predchoziho - nabojova pumpa, 0x14 je hodnota z datasheetu pro konkretni displej
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ba0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ba4:	e5933000 	ldr	r3, [r3]
    9ba8:	e3a0103c 	mov	r1, #60	; 0x3c
    9bac:	e1a00003 	mov	r0, r3
    9bb0:	ebfffcb5 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9bb4:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:74

        ta << SSD1306_Cmd::Command_Start
    9bb8:	e3a03000 	mov	r3, #0
    9bbc:	e50b309c 	str	r3, [fp, #-156]	; 0xffffff64
    9bc0:	e24b309c 	sub	r3, fp, #156	; 0x9c
    9bc4:	e1a01003 	mov	r1, r3
    9bc8:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    9bcc:	eb0003ff 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9bd0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:75
            << 0x14;
    9bd4:	e3a03014 	mov	r3, #20
    9bd8:	e50b3098 	str	r3, [fp, #-152]	; 0xffffff68
    9bdc:	e24b3098 	sub	r3, fp, #152	; 0x98
    9be0:	e1a01003 	mov	r1, r3
    9be4:	e1a00002 	mov	r0, r2
    9be8:	eb000414 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:77

        mI2C.End_Transaction(ta);
    9bec:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9bf0:	e5933000 	ldr	r3, [r3]
    9bf4:	e3a02001 	mov	r2, #1
    9bf8:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    9bfc:	e1a00003 	mov	r0, r3
    9c00:	ebfffcbf 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:83
    }

    // nastavime mod adresace (0x00 - po sloupcich a po strankach) a segment remapping (to, jak je displej "obraceny")
    // "smer" skenovani vystupu ridiciho obvodu
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9c04:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9c08:	e5933000 	ldr	r3, [r3]
    9c0c:	e3a0103c 	mov	r1, #60	; 0x3c
    9c10:	e1a00003 	mov	r0, r3
    9c14:	ebfffc9c 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9c18:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:85

        ta << SSD1306_Cmd::Command_Start
    9c1c:	e3a03000 	mov	r3, #0
    9c20:	e50b3094 	str	r3, [fp, #-148]	; 0xffffff6c
    9c24:	e24b3094 	sub	r3, fp, #148	; 0x94
    9c28:	e1a01003 	mov	r1, r3
    9c2c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9c30:	eb0003e6 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9c34:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:86
            << SSD1306_Cmd::Memory_Addr_Mode
    9c38:	e3a03020 	mov	r3, #32
    9c3c:	e50b3090 	str	r3, [fp, #-144]	; 0xffffff70
    9c40:	e24b3090 	sub	r3, fp, #144	; 0x90
    9c44:	e1a01003 	mov	r1, r3
    9c48:	e1a00002 	mov	r0, r2
    9c4c:	eb0003df 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9c50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:87
            << 0x00
    9c54:	e3a03000 	mov	r3, #0
    9c58:	e50b308c 	str	r3, [fp, #-140]	; 0xffffff74
    9c5c:	e24b308c 	sub	r3, fp, #140	; 0x8c
    9c60:	e1a01003 	mov	r1, r3
    9c64:	e1a00002 	mov	r0, r2
    9c68:	eb0003f4 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9c6c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:88
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Segment_Remap) | 0x01)
    9c70:	e3a030a1 	mov	r3, #161	; 0xa1
    9c74:	e50b3088 	str	r3, [fp, #-136]	; 0xffffff78
    9c78:	e24b3088 	sub	r3, fp, #136	; 0x88
    9c7c:	e1a01003 	mov	r1, r3
    9c80:	e1a00002 	mov	r0, r2
    9c84:	eb0003ed 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9c88:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:89
            << SSD1306_Cmd::Com_Scan_Dir_Dec;
    9c8c:	e3a030c8 	mov	r3, #200	; 0xc8
    9c90:	e50b3084 	str	r3, [fp, #-132]	; 0xffffff7c
    9c94:	e24b3084 	sub	r3, fp, #132	; 0x84
    9c98:	e1a01003 	mov	r1, r3
    9c9c:	e1a00002 	mov	r0, r2
    9ca0:	eb0003ca 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:91

        mI2C.End_Transaction(ta);
    9ca4:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ca8:	e5933000 	ldr	r3, [r3]
    9cac:	e3a02001 	mov	r2, #1
    9cb0:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    9cb4:	e1a00003 	mov	r0, r3
    9cb8:	ebfffc91 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:96
    }

    // mapovani na piny ridiciho obvodu
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9cbc:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9cc0:	e5933000 	ldr	r3, [r3]
    9cc4:	e3a0103c 	mov	r1, #60	; 0x3c
    9cc8:	e1a00003 	mov	r0, r3
    9ccc:	ebfffc6e 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9cd0:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:98

        ta << SSD1306_Cmd::Command_Start
    9cd4:	e3a03000 	mov	r3, #0
    9cd8:	e50b3080 	str	r3, [fp, #-128]	; 0xffffff80
    9cdc:	e24b3080 	sub	r3, fp, #128	; 0x80
    9ce0:	e1a01003 	mov	r1, r3
    9ce4:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    9ce8:	eb0003b8 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9cec:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:99
            << SSD1306_Cmd::Set_Com_Pins;
    9cf0:	e3a030da 	mov	r3, #218	; 0xda
    9cf4:	e50b307c 	str	r3, [fp, #-124]	; 0xffffff84
    9cf8:	e24b307c 	sub	r3, fp, #124	; 0x7c
    9cfc:	e1a01003 	mov	r1, r3
    9d00:	e1a00002 	mov	r0, r2
    9d04:	eb0003b1 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:101

        mI2C.End_Transaction(ta);
    9d08:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d0c:	e5933000 	ldr	r3, [r3]
    9d10:	e3a02001 	mov	r2, #1
    9d14:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    9d18:	e1a00003 	mov	r0, r3
    9d1c:	ebfffc78 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:106
    }

    // pokracovani predchoziho - neinvertovany a sekvencni pristup
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d20:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d24:	e5933000 	ldr	r3, [r3]
    9d28:	e3a0103c 	mov	r1, #60	; 0x3c
    9d2c:	e1a00003 	mov	r0, r3
    9d30:	ebfffc55 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9d34:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:108

        ta << SSD1306_Cmd::Command_Start
    9d38:	e3a03000 	mov	r3, #0
    9d3c:	e50b3078 	str	r3, [fp, #-120]	; 0xffffff88
    9d40:	e24b3078 	sub	r3, fp, #120	; 0x78
    9d44:	e1a01003 	mov	r1, r3
    9d48:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d4c:	eb00039f 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9d50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:109
            << 0x02;
    9d54:	e3a03002 	mov	r3, #2
    9d58:	e50b3074 	str	r3, [fp, #-116]	; 0xffffff8c
    9d5c:	e24b3074 	sub	r3, fp, #116	; 0x74
    9d60:	e1a01003 	mov	r1, r3
    9d64:	e1a00002 	mov	r0, r2
    9d68:	eb0003b4 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:111

        mI2C.End_Transaction(ta);
    9d6c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d70:	e5933000 	ldr	r3, [r3]
    9d74:	e3a02001 	mov	r2, #1
    9d78:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    9d7c:	e1a00003 	mov	r0, r3
    9d80:	ebfffc5f 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:116
    }

    // nastaveni kontrastu displeje
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d84:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d88:	e5933000 	ldr	r3, [r3]
    9d8c:	e3a0103c 	mov	r1, #60	; 0x3c
    9d90:	e1a00003 	mov	r0, r3
    9d94:	ebfffc3c 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9d98:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:118

        ta << SSD1306_Cmd::Command_Start
    9d9c:	e3a03000 	mov	r3, #0
    9da0:	e50b3070 	str	r3, [fp, #-112]	; 0xffffff90
    9da4:	e24b3070 	sub	r3, fp, #112	; 0x70
    9da8:	e1a01003 	mov	r1, r3
    9dac:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
    9db0:	eb000386 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9db4:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:119
            << SSD1306_Cmd::Set_Contrast;
    9db8:	e3a03081 	mov	r3, #129	; 0x81
    9dbc:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
    9dc0:	e24b306c 	sub	r3, fp, #108	; 0x6c
    9dc4:	e1a01003 	mov	r1, r3
    9dc8:	e1a00002 	mov	r0, r2
    9dcc:	eb00037f 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:121

        mI2C.End_Transaction(ta);
    9dd0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9dd4:	e5933000 	ldr	r3, [r3]
    9dd8:	e3a02001 	mov	r2, #1
    9ddc:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    9de0:	e1a00003 	mov	r0, r3
    9de4:	ebfffc46 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:126
    }

    // pokracovani predchoziho - kontrast nastaven na 0x8F
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9de8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9dec:	e5933000 	ldr	r3, [r3]
    9df0:	e3a0103c 	mov	r1, #60	; 0x3c
    9df4:	e1a00003 	mov	r0, r3
    9df8:	ebfffc23 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9dfc:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:128

        ta << SSD1306_Cmd::Command_Start
    9e00:	e3a03000 	mov	r3, #0
    9e04:	e50b3068 	str	r3, [fp, #-104]	; 0xffffff98
    9e08:	e24b3068 	sub	r3, fp, #104	; 0x68
    9e0c:	e1a01003 	mov	r1, r3
    9e10:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
    9e14:	eb00036d 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9e18:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:129
            << 0x8F;
    9e1c:	e3a0308f 	mov	r3, #143	; 0x8f
    9e20:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
    9e24:	e24b3064 	sub	r3, fp, #100	; 0x64
    9e28:	e1a01003 	mov	r1, r3
    9e2c:	e1a00002 	mov	r0, r2
    9e30:	eb000382 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:131

        mI2C.End_Transaction(ta);
    9e34:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e38:	e5933000 	ldr	r3, [r3]
    9e3c:	e3a02001 	mov	r2, #1
    9e40:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
    9e44:	e1a00003 	mov	r0, r3
    9e48:	ebfffc2d 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:136
    }

    // perioda prednabiti
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9e4c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e50:	e5933000 	ldr	r3, [r3]
    9e54:	e3a0103c 	mov	r1, #60	; 0x3c
    9e58:	e1a00003 	mov	r0, r3
    9e5c:	ebfffc0a 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9e60:	e50b002c 	str	r0, [fp, #-44]	; 0xffffffd4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:138

        ta << SSD1306_Cmd::Command_Start
    9e64:	e3a03000 	mov	r3, #0
    9e68:	e50b3060 	str	r3, [fp, #-96]	; 0xffffffa0
    9e6c:	e24b3060 	sub	r3, fp, #96	; 0x60
    9e70:	e1a01003 	mov	r1, r3
    9e74:	e51b002c 	ldr	r0, [fp, #-44]	; 0xffffffd4
    9e78:	eb000354 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9e7c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:139
            << SSD1306_Cmd::Set_Precharge_Period;
    9e80:	e3a030d9 	mov	r3, #217	; 0xd9
    9e84:	e50b305c 	str	r3, [fp, #-92]	; 0xffffffa4
    9e88:	e24b305c 	sub	r3, fp, #92	; 0x5c
    9e8c:	e1a01003 	mov	r1, r3
    9e90:	e1a00002 	mov	r0, r2
    9e94:	eb00034d 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:141

        mI2C.End_Transaction(ta);
    9e98:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e9c:	e5933000 	ldr	r3, [r3]
    9ea0:	e3a02001 	mov	r2, #1
    9ea4:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    9ea8:	e1a00003 	mov	r0, r3
    9eac:	ebfffc14 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:146
    }

    // pokracovani predchoziho - pro externi napajeni muze byt tato hodnota kratsi
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9eb0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9eb4:	e5933000 	ldr	r3, [r3]
    9eb8:	e3a0103c 	mov	r1, #60	; 0x3c
    9ebc:	e1a00003 	mov	r0, r3
    9ec0:	ebfffbf1 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9ec4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:148

        ta << SSD1306_Cmd::Command_Start
    9ec8:	e3a03000 	mov	r3, #0
    9ecc:	e50b3058 	str	r3, [fp, #-88]	; 0xffffffa8
    9ed0:	e24b3058 	sub	r3, fp, #88	; 0x58
    9ed4:	e1a01003 	mov	r1, r3
    9ed8:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    9edc:	eb00033b 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9ee0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:149
            << 0xF1;
    9ee4:	e3a030f1 	mov	r3, #241	; 0xf1
    9ee8:	e50b3054 	str	r3, [fp, #-84]	; 0xffffffac
    9eec:	e24b3054 	sub	r3, fp, #84	; 0x54
    9ef0:	e1a01003 	mov	r1, r3
    9ef4:	e1a00002 	mov	r0, r2
    9ef8:	eb000350 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:151

        mI2C.End_Transaction(ta);
    9efc:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9f00:	e5933000 	ldr	r3, [r3]
    9f04:	e3a02001 	mov	r2, #1
    9f08:	e51b1030 	ldr	r1, [fp, #-48]	; 0xffffffd0
    9f0c:	e1a00003 	mov	r0, r3
    9f10:	ebfffbfb 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:156
    }

    // finalni aktivace displeje - uroven detekce vstupu, nahozeni panelu, neinvertovane barvy, neskrolujeme, zapneme podsviceni
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9f14:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9f18:	e5933000 	ldr	r3, [r3]
    9f1c:	e3a0103c 	mov	r1, #60	; 0x3c
    9f20:	e1a00003 	mov	r0, r3
    9f24:	ebfffbd8 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9f28:	e50b0034 	str	r0, [fp, #-52]	; 0xffffffcc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:158

        ta << SSD1306_Cmd::Command_Start
    9f2c:	e3a03000 	mov	r3, #0
    9f30:	e50b3050 	str	r3, [fp, #-80]	; 0xffffffb0
    9f34:	e24b3050 	sub	r3, fp, #80	; 0x50
    9f38:	e1a01003 	mov	r1, r3
    9f3c:	e51b0034 	ldr	r0, [fp, #-52]	; 0xffffffcc
    9f40:	eb000322 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f44:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:159
            << SSD1306_Cmd::Set_VCOM_Detect
    9f48:	e3a030d8 	mov	r3, #216	; 0xd8
    9f4c:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
    9f50:	e24b304c 	sub	r3, fp, #76	; 0x4c
    9f54:	e1a01003 	mov	r1, r3
    9f58:	e1a00002 	mov	r0, r2
    9f5c:	eb00031b 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f60:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:160
            << 0x40
    9f64:	e3a03040 	mov	r3, #64	; 0x40
    9f68:	e50b3048 	str	r3, [fp, #-72]	; 0xffffffb8
    9f6c:	e24b3048 	sub	r3, fp, #72	; 0x48
    9f70:	e1a01003 	mov	r1, r3
    9f74:	e1a00002 	mov	r0, r2
    9f78:	eb000330 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9f7c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:161
            << SSD1306_Cmd::Display_All_On_Resume
    9f80:	e3a030a4 	mov	r3, #164	; 0xa4
    9f84:	e50b3044 	str	r3, [fp, #-68]	; 0xffffffbc
    9f88:	e24b3044 	sub	r3, fp, #68	; 0x44
    9f8c:	e1a01003 	mov	r1, r3
    9f90:	e1a00002 	mov	r0, r2
    9f94:	eb00030d 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f98:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:162
            << SSD1306_Cmd::Normal_Display
    9f9c:	e3a030a6 	mov	r3, #166	; 0xa6
    9fa0:	e50b3040 	str	r3, [fp, #-64]	; 0xffffffc0
    9fa4:	e24b3040 	sub	r3, fp, #64	; 0x40
    9fa8:	e1a01003 	mov	r1, r3
    9fac:	e1a00002 	mov	r0, r2
    9fb0:	eb000306 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9fb4:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:163
            << SSD1306_Cmd::Deactivate_Scroll
    9fb8:	e3a0302e 	mov	r3, #46	; 0x2e
    9fbc:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    9fc0:	e24b303c 	sub	r3, fp, #60	; 0x3c
    9fc4:	e1a01003 	mov	r1, r3
    9fc8:	e1a00002 	mov	r0, r2
    9fcc:	eb0002ff 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9fd0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:164
            << SSD1306_Cmd::Display_On;
    9fd4:	e3a030af 	mov	r3, #175	; 0xaf
    9fd8:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    9fdc:	e24b3038 	sub	r3, fp, #56	; 0x38
    9fe0:	e1a01003 	mov	r1, r3
    9fe4:	e1a00002 	mov	r0, r2
    9fe8:	eb0002f8 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:166

        mI2C.End_Transaction(ta);
    9fec:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ff0:	e5933000 	ldr	r3, [r3]
    9ff4:	e3a02001 	mov	r2, #1
    9ff8:	e51b1034 	ldr	r1, [fp, #-52]	; 0xffffffcc
    9ffc:	e1a00003 	mov	r0, r3
    a000:	ebfffbbf 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:169
    }

    Clear();
    a004:	e3a01000 	mov	r1, #0
    a008:	e51b00d0 	ldr	r0, [fp, #-208]	; 0xffffff30
    a00c:	eb000067 	bl	a1b0 <_ZN16CDisplay_SSD13065ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:171

    return true;
    a010:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:172
}
    a014:	e1a00003 	mov	r0, r3
    a018:	e24bd004 	sub	sp, fp, #4
    a01c:	e8bd8800 	pop	{fp, pc}

0000a020 <_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh>:
_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:175

void CDisplay_SSD1306::Send_Command(SSD1306_Cmd cmd, uint8_t lowPart)
{
    a020:	e92d4800 	push	{fp, lr}
    a024:	e28db004 	add	fp, sp, #4
    a028:	e24dd020 	sub	sp, sp, #32
    a02c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    a030:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    a034:	e1a03002 	mov	r3, r2
    a038:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:176
    auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a03c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a040:	e5933000 	ldr	r3, [r3]
    a044:	e3a0103c 	mov	r1, #60	; 0x3c
    a048:	e1a00003 	mov	r0, r3
    a04c:	ebfffb8e 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a050:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:178

    ta << SSD1306_Cmd::Command_Start
    a054:	e3a03000 	mov	r3, #0
    a058:	e50b3010 	str	r3, [fp, #-16]
    a05c:	e24b3010 	sub	r3, fp, #16
    a060:	e1a01003 	mov	r1, r3
    a064:	e51b0008 	ldr	r0, [fp, #-8]
    a068:	eb0002d8 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:179
       << (static_cast<uint8_t>(cmd) | lowPart);
    a06c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a070:	e6ef2073 	uxtb	r2, r3
    a074:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
    a078:	e1823003 	orr	r3, r2, r3
    a07c:	e6ef3073 	uxtb	r3, r3
    a080:	e50b300c 	str	r3, [fp, #-12]
    a084:	e24b300c 	sub	r3, fp, #12
    a088:	e1a01003 	mov	r1, r3
    a08c:	eb0002eb 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:181

    mI2C.End_Transaction(ta);
    a090:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a094:	e5933000 	ldr	r3, [r3]
    a098:	e3a02001 	mov	r2, #1
    a09c:	e51b1008 	ldr	r1, [fp, #-8]
    a0a0:	e1a00003 	mov	r0, r3
    a0a4:	ebfffb96 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:182
}
    a0a8:	e320f000 	nop	{0}
    a0ac:	e24bd004 	sub	sp, fp, #4
    a0b0:	e8bd8800 	pop	{fp, pc}

0000a0b4 <_ZN16CDisplay_SSD13065CloseEv>:
_ZN16CDisplay_SSD13065CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:185

void CDisplay_SSD1306::Close()
{
    a0b4:	e92d4800 	push	{fp, lr}
    a0b8:	e28db004 	add	fp, sp, #4
    a0bc:	e24dd018 	sub	sp, sp, #24
    a0c0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:186
    if (!mOpened)
    a0c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0c8:	e5d33004 	ldrb	r3, [r3, #4]
    a0cc:	e2233001 	eor	r3, r3, #1
    a0d0:	e6ef3073 	uxtb	r3, r3
    a0d4:	e3530000 	cmp	r3, #0
    a0d8:	1a000027 	bne	a17c <_ZN16CDisplay_SSD13065CloseEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:191
        return;

    // posleme prikaz z vypnuti displeje
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a0dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0e0:	e5933000 	ldr	r3, [r3]
    a0e4:	e3a0103c 	mov	r1, #60	; 0x3c
    a0e8:	e1a00003 	mov	r0, r3
    a0ec:	ebfffb66 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a0f0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:193

        ta << SSD1306_Cmd::Command_Start
    a0f4:	e3a03000 	mov	r3, #0
    a0f8:	e50b3010 	str	r3, [fp, #-16]
    a0fc:	e24b3010 	sub	r3, fp, #16
    a100:	e1a01003 	mov	r1, r3
    a104:	e51b0008 	ldr	r0, [fp, #-8]
    a108:	eb0002b0 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a10c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:194
            << SSD1306_Cmd::Display_Off;
    a110:	e3a030ae 	mov	r3, #174	; 0xae
    a114:	e50b300c 	str	r3, [fp, #-12]
    a118:	e24b300c 	sub	r3, fp, #12
    a11c:	e1a01003 	mov	r1, r3
    a120:	e1a00002 	mov	r0, r2
    a124:	eb0002a9 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:196

        mI2C.End_Transaction(ta);
    a128:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a12c:	e5933000 	ldr	r3, [r3]
    a130:	e3a02001 	mov	r2, #1
    a134:	e51b1008 	ldr	r1, [fp, #-8]
    a138:	e1a00003 	mov	r0, r3
    a13c:	ebfffb70 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199
    }

    mI2C.Close();
    a140:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a144:	e5933000 	ldr	r3, [r3]
    a148:	e1a00003 	mov	r0, r3
    a14c:	ebfffaa5 	bl	8be8 <_ZN4CI2C5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201

    delete mBuffer;
    a150:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a154:	e5933008 	ldr	r3, [r3, #8]
    a158:	e3530000 	cmp	r3, #0
    a15c:	0a000002 	beq	a16c <_ZN16CDisplay_SSD13065CloseEv+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201 (discriminator 1)
    a160:	e3a01001 	mov	r1, #1
    a164:	e1a00003 	mov	r0, r3
    a168:	eb00028c 	bl	aba0 <_ZdlPvj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203

    mOpened = false;
    a16c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a170:	e3a02000 	mov	r2, #0
    a174:	e5c32004 	strb	r2, [r3, #4]
    a178:	ea000000 	b	a180 <_ZN16CDisplay_SSD13065CloseEv+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:187
        return;
    a17c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:204
}
    a180:	e24bd004 	sub	sp, fp, #4
    a184:	e8bd8800 	pop	{fp, pc}

0000a188 <_ZNK16CDisplay_SSD13069Is_OpenedEv>:
_ZNK16CDisplay_SSD13069Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:207

bool CDisplay_SSD1306::Is_Opened() const
{
    a188:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    a18c:	e28db000 	add	fp, sp, #0
    a190:	e24dd00c 	sub	sp, sp, #12
    a194:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:208
    return mOpened;
    a198:	e51b3008 	ldr	r3, [fp, #-8]
    a19c:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:209
}
    a1a0:	e1a00003 	mov	r0, r3
    a1a4:	e28bd000 	add	sp, fp, #0
    a1a8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    a1ac:	e12fff1e 	bx	lr

0000a1b0 <_ZN16CDisplay_SSD13065ClearEb>:
_ZN16CDisplay_SSD13065ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:212

void CDisplay_SSD1306::Clear(bool clearWhite)
{
    a1b0:	e92d4800 	push	{fp, lr}
    a1b4:	e28db004 	add	fp, sp, #4
    a1b8:	e24dd018 	sub	sp, sp, #24
    a1bc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    a1c0:	e1a03001 	mov	r3, r1
    a1c4:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:213
    if (!mOpened)
    a1c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a1cc:	e5d33004 	ldrb	r3, [r3, #4]
    a1d0:	e2233001 	eor	r3, r3, #1
    a1d4:	e6ef3073 	uxtb	r3, r3
    a1d8:	e3530000 	cmp	r3, #0
    a1dc:	1a000024 	bne	a274 <_ZN16CDisplay_SSD13065ClearEb+0xc4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216
        return;

    const uint8_t clearColor = clearWhite ? 0xFF : 0x00;
    a1e0:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
    a1e4:	e3530000 	cmp	r3, #0
    a1e8:	0a000001 	beq	a1f4 <_ZN16CDisplay_SSD13065ClearEb+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 1)
    a1ec:	e3a030ff 	mov	r3, #255	; 0xff
    a1f0:	ea000000 	b	a1f8 <_ZN16CDisplay_SSD13065ClearEb+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 2)
    a1f4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 4)
    a1f8:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:218 (discriminator 4)

    const int maxIdx = mWidth * (mHeight / 8);
    a1fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a200:	e593200c 	ldr	r2, [r3, #12]
    a204:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a208:	e5933010 	ldr	r3, [r3, #16]
    a20c:	e2831007 	add	r1, r3, #7
    a210:	e3530000 	cmp	r3, #0
    a214:	b1a03001 	movlt	r3, r1
    a218:	a1a03003 	movge	r3, r3
    a21c:	e1a031c3 	asr	r3, r3, #3
    a220:	e0030293 	mul	r3, r3, r2
    a224:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 4)

    for (int i = 0; i < maxIdx; i++)
    a228:	e3a03000 	mov	r3, #0
    a22c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 3)
    a230:	e51b2008 	ldr	r2, [fp, #-8]
    a234:	e51b3010 	ldr	r3, [fp, #-16]
    a238:	e1520003 	cmp	r2, r3
    a23c:	aa000009 	bge	a268 <_ZN16CDisplay_SSD13065ClearEb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:221 (discriminator 2)
        mBuffer[i] = clearColor;
    a240:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a244:	e5932008 	ldr	r2, [r3, #8]
    a248:	e51b3008 	ldr	r3, [fp, #-8]
    a24c:	e0823003 	add	r3, r2, r3
    a250:	e55b2009 	ldrb	r2, [fp, #-9]
    a254:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 2)
    for (int i = 0; i < maxIdx; i++)
    a258:	e51b3008 	ldr	r3, [fp, #-8]
    a25c:	e2833001 	add	r3, r3, #1
    a260:	e50b3008 	str	r3, [fp, #-8]
    a264:	eafffff1 	b	a230 <_ZN16CDisplay_SSD13065ClearEb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:223

    Flip();
    a268:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    a26c:	eb000055 	bl	a3c8 <_ZN16CDisplay_SSD13064FlipEv>
    a270:	ea000000 	b	a278 <_ZN16CDisplay_SSD13065ClearEb+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:214
        return;
    a274:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:224
}
    a278:	e24bd004 	sub	sp, fp, #4
    a27c:	e8bd8800 	pop	{fp, pc}

0000a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>:
_ZN16CDisplay_SSD13069Set_PixelEjjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:227

void CDisplay_SSD1306::Set_Pixel(uint32_t x, uint32_t y, bool set)
{
    a280:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    a284:	e28db000 	add	fp, sp, #0
    a288:	e24dd014 	sub	sp, sp, #20
    a28c:	e50b0008 	str	r0, [fp, #-8]
    a290:	e50b100c 	str	r1, [fp, #-12]
    a294:	e50b2010 	str	r2, [fp, #-16]
    a298:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:228
    if (!mOpened)
    a29c:	e51b3008 	ldr	r3, [fp, #-8]
    a2a0:	e5d33004 	ldrb	r3, [r3, #4]
    a2a4:	e2233001 	eor	r3, r3, #1
    a2a8:	e6ef3073 	uxtb	r3, r3
    a2ac:	e3530000 	cmp	r3, #0
    a2b0:	1a000040 	bne	a3b8 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:231
        return;

    if (set)
    a2b4:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    a2b8:	e3530000 	cmp	r3, #0
    a2bc:	0a00001d 	beq	a338 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:232
        mBuffer[x + (y / 8) * mWidth] |= (1 << (y & 7));
    a2c0:	e51b3008 	ldr	r3, [fp, #-8]
    a2c4:	e5931008 	ldr	r1, [r3, #8]
    a2c8:	e51b3010 	ldr	r3, [fp, #-16]
    a2cc:	e1a031a3 	lsr	r3, r3, #3
    a2d0:	e51b2008 	ldr	r2, [fp, #-8]
    a2d4:	e592200c 	ldr	r2, [r2, #12]
    a2d8:	e0000392 	mul	r0, r2, r3
    a2dc:	e51b200c 	ldr	r2, [fp, #-12]
    a2e0:	e0802002 	add	r2, r0, r2
    a2e4:	e0812002 	add	r2, r1, r2
    a2e8:	e5d22000 	ldrb	r2, [r2]
    a2ec:	e6af1072 	sxtb	r1, r2
    a2f0:	e51b2010 	ldr	r2, [fp, #-16]
    a2f4:	e2022007 	and	r2, r2, #7
    a2f8:	e3a00001 	mov	r0, #1
    a2fc:	e1a02210 	lsl	r2, r0, r2
    a300:	e6af2072 	sxtb	r2, r2
    a304:	e1812002 	orr	r2, r1, r2
    a308:	e6af0072 	sxtb	r0, r2
    a30c:	e51b2008 	ldr	r2, [fp, #-8]
    a310:	e5922008 	ldr	r2, [r2, #8]
    a314:	e51b1008 	ldr	r1, [fp, #-8]
    a318:	e591100c 	ldr	r1, [r1, #12]
    a31c:	e0010391 	mul	r1, r1, r3
    a320:	e51b300c 	ldr	r3, [fp, #-12]
    a324:	e0813003 	add	r3, r1, r3
    a328:	e0823003 	add	r3, r2, r3
    a32c:	e6ef2070 	uxtb	r2, r0
    a330:	e5c32000 	strb	r2, [r3]
    a334:	ea000020 	b	a3bc <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:234
    else
        mBuffer[x + (y / 8) * mWidth] &= ~(1 << (y & 7));
    a338:	e51b3008 	ldr	r3, [fp, #-8]
    a33c:	e5931008 	ldr	r1, [r3, #8]
    a340:	e51b3010 	ldr	r3, [fp, #-16]
    a344:	e1a031a3 	lsr	r3, r3, #3
    a348:	e51b2008 	ldr	r2, [fp, #-8]
    a34c:	e592200c 	ldr	r2, [r2, #12]
    a350:	e0000392 	mul	r0, r2, r3
    a354:	e51b200c 	ldr	r2, [fp, #-12]
    a358:	e0802002 	add	r2, r0, r2
    a35c:	e0812002 	add	r2, r1, r2
    a360:	e5d22000 	ldrb	r2, [r2]
    a364:	e6af1072 	sxtb	r1, r2
    a368:	e51b2010 	ldr	r2, [fp, #-16]
    a36c:	e2022007 	and	r2, r2, #7
    a370:	e3a00001 	mov	r0, #1
    a374:	e1a02210 	lsl	r2, r0, r2
    a378:	e6af2072 	sxtb	r2, r2
    a37c:	e1e02002 	mvn	r2, r2
    a380:	e6af2072 	sxtb	r2, r2
    a384:	e0022001 	and	r2, r2, r1
    a388:	e6af0072 	sxtb	r0, r2
    a38c:	e51b2008 	ldr	r2, [fp, #-8]
    a390:	e5922008 	ldr	r2, [r2, #8]
    a394:	e51b1008 	ldr	r1, [fp, #-8]
    a398:	e591100c 	ldr	r1, [r1, #12]
    a39c:	e0010391 	mul	r1, r1, r3
    a3a0:	e51b300c 	ldr	r3, [fp, #-12]
    a3a4:	e0813003 	add	r3, r1, r3
    a3a8:	e0823003 	add	r3, r2, r3
    a3ac:	e6ef2070 	uxtb	r2, r0
    a3b0:	e5c32000 	strb	r2, [r3]
    a3b4:	ea000000 	b	a3bc <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:229
        return;
    a3b8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:235
}
    a3bc:	e28bd000 	add	sp, fp, #0
    a3c0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    a3c4:	e12fff1e 	bx	lr

0000a3c8 <_ZN16CDisplay_SSD13064FlipEv>:
_ZN16CDisplay_SSD13064FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:238

void CDisplay_SSD1306::Flip()
{
    a3c8:	e92d4800 	push	{fp, lr}
    a3cc:	e28db004 	add	fp, sp, #4
    a3d0:	e24dd040 	sub	sp, sp, #64	; 0x40
    a3d4:	e50b0040 	str	r0, [fp, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:239
    if (!mOpened)
    a3d8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a3dc:	e5d33004 	ldrb	r3, [r3, #4]
    a3e0:	e2233001 	eor	r3, r3, #1
    a3e4:	e6ef3073 	uxtb	r3, r3
    a3e8:	e3530000 	cmp	r3, #0
    a3ec:	1a000078 	bne	a5d4 <_ZN16CDisplay_SSD13064FlipEv+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:246

    int i;

    // nastavime kurzor na levy horni roh
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a3f0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a3f4:	e5933000 	ldr	r3, [r3]
    a3f8:	e3a0103c 	mov	r1, #60	; 0x3c
    a3fc:	e1a00003 	mov	r0, r3
    a400:	ebfffaa1 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a404:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:248

        ta << SSD1306_Cmd::Command_Start
    a408:	e3a03000 	mov	r3, #0
    a40c:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    a410:	e24b303c 	sub	r3, fp, #60	; 0x3c
    a414:	e1a01003 	mov	r1, r3
    a418:	e51b0010 	ldr	r0, [fp, #-16]
    a41c:	eb0001eb 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a420:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:249
            << SSD1306_Cmd::Set_Page_Addr
    a424:	e3a03022 	mov	r3, #34	; 0x22
    a428:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    a42c:	e24b3038 	sub	r3, fp, #56	; 0x38
    a430:	e1a01003 	mov	r1, r3
    a434:	e1a00002 	mov	r0, r2
    a438:	eb0001e4 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a43c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:250
            << 0x00
    a440:	e3a03000 	mov	r3, #0
    a444:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    a448:	e24b3034 	sub	r3, fp, #52	; 0x34
    a44c:	e1a01003 	mov	r1, r3
    a450:	e1a00002 	mov	r0, r2
    a454:	eb0001f9 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a458:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:251
            << 0xFF
    a45c:	e3a030ff 	mov	r3, #255	; 0xff
    a460:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
    a464:	e24b3030 	sub	r3, fp, #48	; 0x30
    a468:	e1a01003 	mov	r1, r3
    a46c:	e1a00002 	mov	r0, r2
    a470:	eb0001f2 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a474:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:252
            << SSD1306_Cmd::Set_Column_Addr
    a478:	e3a03021 	mov	r3, #33	; 0x21
    a47c:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    a480:	e24b302c 	sub	r3, fp, #44	; 0x2c
    a484:	e1a01003 	mov	r1, r3
    a488:	e1a00002 	mov	r0, r2
    a48c:	eb0001cf 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a490:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:253
            << 0x00
    a494:	e3a03000 	mov	r3, #0
    a498:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    a49c:	e24b3028 	sub	r3, fp, #40	; 0x28
    a4a0:	e1a01003 	mov	r1, r3
    a4a4:	e1a00002 	mov	r0, r2
    a4a8:	eb0001e4 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a4ac:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:254
            << mWidth - 1;
    a4b0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4b4:	e593300c 	ldr	r3, [r3, #12]
    a4b8:	e2433001 	sub	r3, r3, #1
    a4bc:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    a4c0:	e24b3024 	sub	r3, fp, #36	; 0x24
    a4c4:	e1a01003 	mov	r1, r3
    a4c8:	e1a00002 	mov	r0, r2
    a4cc:	eb0001db 	bl	ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:256

        mI2C.End_Transaction(ta);
    a4d0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4d4:	e5933000 	ldr	r3, [r3]
    a4d8:	e3a02001 	mov	r2, #1
    a4dc:	e51b1010 	ldr	r1, [fp, #-16]
    a4e0:	e1a00003 	mov	r0, r3
    a4e4:	ebfffa86 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:260
    }

    // budeme posilat pixely po balikach 4 sloupcu (po 8 pixelech)
    constexpr int PktSize = 4;
    a4e8:	e3a03004 	mov	r3, #4
    a4ec:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:262

    const int maxIdx = mWidth * (mHeight / 8);
    a4f0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4f4:	e593200c 	ldr	r2, [r3, #12]
    a4f8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4fc:	e5933010 	ldr	r3, [r3, #16]
    a500:	e2831007 	add	r1, r3, #7
    a504:	e3530000 	cmp	r3, #0
    a508:	b1a03001 	movlt	r3, r1
    a50c:	a1a03003 	movge	r3, r3
    a510:	e1a031c3 	asr	r3, r3, #3
    a514:	e0030293 	mul	r3, r3, r2
    a518:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264

    for (int i = 0; i < maxIdx; i += PktSize)
    a51c:	e3a03000 	mov	r3, #0
    a520:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264 (discriminator 1)
    a524:	e51b2008 	ldr	r2, [fp, #-8]
    a528:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a52c:	e1520003 	cmp	r2, r3
    a530:	aa000028 	bge	a5d8 <_ZN16CDisplay_SSD13064FlipEv+0x210>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a534:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a538:	e5933000 	ldr	r3, [r3]
    a53c:	e3a0103c 	mov	r1, #60	; 0x3c
    a540:	e1a00003 	mov	r0, r3
    a544:	ebfffa50 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a548:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:268

        ta << SSD1306_Cmd::Data_Continue;
    a54c:	e3a03040 	mov	r3, #64	; 0x40
    a550:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    a554:	e24b3020 	sub	r3, fp, #32
    a558:	e1a01003 	mov	r1, r3
    a55c:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    a560:	eb00019a 	bl	abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:269
        for (int j = 0; j < PktSize; j++)
    a564:	e3a03000 	mov	r3, #0
    a568:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:269 (discriminator 3)
    a56c:	e51b300c 	ldr	r3, [fp, #-12]
    a570:	e3530003 	cmp	r3, #3
    a574:	ca00000c 	bgt	a5ac <_ZN16CDisplay_SSD13064FlipEv+0x1e4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271 (discriminator 2)
        {
            ta << mBuffer[i + j];
    a578:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a57c:	e5933008 	ldr	r3, [r3, #8]
    a580:	e51b1008 	ldr	r1, [fp, #-8]
    a584:	e51b200c 	ldr	r2, [fp, #-12]
    a588:	e0812002 	add	r2, r1, r2
    a58c:	e0833002 	add	r3, r3, r2
    a590:	e1a01003 	mov	r1, r3
    a594:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    a598:	eb0001c4 	bl	acb0 <_ZN16CI2C_TransactionlsIhEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:269 (discriminator 2)
        for (int j = 0; j < PktSize; j++)
    a59c:	e51b300c 	ldr	r3, [fp, #-12]
    a5a0:	e2833001 	add	r3, r3, #1
    a5a4:	e50b300c 	str	r3, [fp, #-12]
    a5a8:	eaffffef 	b	a56c <_ZN16CDisplay_SSD13064FlipEv+0x1a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:275 (discriminator 2)
            // sMonitor << "Sending " << static_cast<unsigned int>(mBuffer[i + j]) << '\n';
        }

        mI2C.End_Transaction(ta);
    a5ac:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a5b0:	e5933000 	ldr	r3, [r3]
    a5b4:	e3a02001 	mov	r2, #1
    a5b8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    a5bc:	e1a00003 	mov	r0, r3
    a5c0:	ebfffa4f 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264 (discriminator 2)
    for (int i = 0; i < maxIdx; i += PktSize)
    a5c4:	e51b3008 	ldr	r3, [fp, #-8]
    a5c8:	e2833004 	add	r3, r3, #4
    a5cc:	e50b3008 	str	r3, [fp, #-8]
    a5d0:	eaffffd3 	b	a524 <_ZN16CDisplay_SSD13064FlipEv+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:240
        return;
    a5d4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:277
    }
}
    a5d8:	e24bd004 	sub	sp, fp, #4
    a5dc:	e8bd8800 	pop	{fp, pc}

0000a5e0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj>:
_ZN16CDisplay_SSD130624Process_External_CommandEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:280

void CDisplay_SSD1306::Process_External_Command(const char* input, uint32_t length)
{
    a5e0:	e92d4800 	push	{fp, lr}
    a5e4:	e28db004 	add	fp, sp, #4
    a5e8:	e24dd040 	sub	sp, sp, #64	; 0x40
    a5ec:	e50b0038 	str	r0, [fp, #-56]	; 0xffffffc8
    a5f0:	e50b103c 	str	r1, [fp, #-60]	; 0xffffffc4
    a5f4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:281
    if (length <= 0)
    a5f8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a5fc:	e3530000 	cmp	r3, #0
    a600:	0a000136 	beq	aae0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x500>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:284
        return;

    NDisplay_Command cmd = static_cast<NDisplay_Command>(input[0]);
    a604:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a608:	e5d33000 	ldrb	r3, [r3]
    a60c:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:286

    switch (cmd)
    a610:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    a614:	e3530004 	cmp	r3, #4
    a618:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    a61c:	ea00013a 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
    a620:	0000a634 	andeq	sl, r0, r4, lsr r6
    a624:	0000a644 	andeq	sl, r0, r4, asr #12
    a628:	0000a65c 	andeq	sl, r0, ip, asr r6
    a62c:	0000a6a4 	andeq	sl, r0, r4, lsr #13
    a630:	0000a764 	andeq	sl, r0, r4, ror #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:289
    {
        case NDisplay_Command::Nop:
            sMonitor << "External CMD: NOP\n";
    a634:	e59f14d8 	ldr	r1, [pc, #1240]	; ab14 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x534>
    a638:	e59f04d8 	ldr	r0, [pc, #1240]	; ab18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x538>
    a63c:	ebfffb82 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:290
            break;
    a640:	ea000131 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:293

        case NDisplay_Command::Flip:
            sMonitor << "External CMD: Flip\n";
    a644:	e59f14d0 	ldr	r1, [pc, #1232]	; ab1c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x53c>
    a648:	e59f04c8 	ldr	r0, [pc, #1224]	; ab18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x538>
    a64c:	ebfffb7e 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:294
            Flip();
    a650:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a654:	ebffff5b 	bl	a3c8 <_ZN16CDisplay_SSD13064FlipEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:295
            break;
    a658:	ea00012b 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299

        case NDisplay_Command::Clear:
        {
            sMonitor << "External CMD: Clear\n";
    a65c:	e59f14bc 	ldr	r1, [pc, #1212]	; ab20 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x540>
    a660:	e59f04b0 	ldr	r0, [pc, #1200]	; ab18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x538>
    a664:	ebfffb78 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:301

            if (length != sizeof(TDisplay_Clear_Packet))
    a668:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a66c:	e3530002 	cmp	r3, #2
    a670:	1a00011c 	bne	aae8 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x508>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:304
                return;

            const TDisplay_Clear_Packet* pkt = reinterpret_cast<const TDisplay_Clear_Packet*>(input);
    a674:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a678:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:306

            Clear((pkt->clearSet != 0));
    a67c:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    a680:	e5d33001 	ldrb	r3, [r3, #1]
    a684:	e3530000 	cmp	r3, #0
    a688:	13a03001 	movne	r3, #1
    a68c:	03a03000 	moveq	r3, #0
    a690:	e6ef3073 	uxtb	r3, r3
    a694:	e1a01003 	mov	r1, r3
    a698:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a69c:	ebfffec3 	bl	a1b0 <_ZN16CDisplay_SSD13065ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:308

            break;
    a6a0:	ea000119 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:313
        }

        case NDisplay_Command::Draw_Pixel_Array:
        {
            sMonitor << "External CMD: Draw_Pixel_Array\n";
    a6a4:	e59f1478 	ldr	r1, [pc, #1144]	; ab24 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x544>
    a6a8:	e59f0468 	ldr	r0, [pc, #1128]	; ab18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x538>
    a6ac:	ebfffb66 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315

            if (length < sizeof(TDisplay_Draw_Pixel_Array_Packet))
    a6b0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a6b4:	e3530007 	cmp	r3, #7
    a6b8:	9a00010c 	bls	aaf0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x510>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:318
                return;

            const TDisplay_Draw_Pixel_Array_Packet* pkt = reinterpret_cast<const TDisplay_Draw_Pixel_Array_Packet*>(input);
    a6bc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a6c0:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:320

            const TDisplay_Pixel_Spec* ptr = &pkt->first;
    a6c4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    a6c8:	e2833003 	add	r3, r3, #3
    a6cc:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:322

            for (uint16_t i = 0; i < pkt->count; i++)
    a6d0:	e3a03000 	mov	r3, #0
    a6d4:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:322 (discriminator 3)
    a6d8:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    a6dc:	e5d32001 	ldrb	r2, [r3, #1]
    a6e0:	e5d33002 	ldrb	r3, [r3, #2]
    a6e4:	e1a03403 	lsl	r3, r3, #8
    a6e8:	e1833002 	orr	r3, r3, r2
    a6ec:	e6ff3073 	uxth	r3, r3
    a6f0:	e15b20b6 	ldrh	r2, [fp, #-6]
    a6f4:	e1520003 	cmp	r2, r3
    a6f8:	2a0000fe 	bcs	aaf8 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x518>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:323 (discriminator 2)
                Set_Pixel(ptr->x, ptr->y, (ptr->set != 0));
    a6fc:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    a700:	e5d32000 	ldrb	r2, [r3]
    a704:	e5d33001 	ldrb	r3, [r3, #1]
    a708:	e1a03403 	lsl	r3, r3, #8
    a70c:	e1833002 	orr	r3, r3, r2
    a710:	e6ff3073 	uxth	r3, r3
    a714:	e1a01003 	mov	r1, r3
    a718:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    a71c:	e5d32002 	ldrb	r2, [r3, #2]
    a720:	e5d33003 	ldrb	r3, [r3, #3]
    a724:	e1a03403 	lsl	r3, r3, #8
    a728:	e1833002 	orr	r3, r3, r2
    a72c:	e6ff3073 	uxth	r3, r3
    a730:	e1a02003 	mov	r2, r3
    a734:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    a738:	e5d33004 	ldrb	r3, [r3, #4]
    a73c:	e3530000 	cmp	r3, #0
    a740:	13a03001 	movne	r3, #1
    a744:	03a03000 	moveq	r3, #0
    a748:	e6ef3073 	uxtb	r3, r3
    a74c:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a750:	ebfffeca 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:322 (discriminator 2)
            for (uint16_t i = 0; i < pkt->count; i++)
    a754:	e15b30b6 	ldrh	r3, [fp, #-6]
    a758:	e2833001 	add	r3, r3, #1
    a75c:	e14b30b6 	strh	r3, [fp, #-6]
    a760:	eaffffdc 	b	a6d8 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:330
            break;
        }

        case NDisplay_Command::Draw_Pixel_Array_To_Rect:
        {
            sMonitor << "External CMD: Draw_Pixel_Array_To_Rect\n";
    a764:	e59f13bc 	ldr	r1, [pc, #956]	; ab28 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x548>
    a768:	e59f03a8 	ldr	r0, [pc, #936]	; ab18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x538>
    a76c:	ebfffb36 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332

            if (length < sizeof(TDisplay_Pixels_To_Rect))
    a770:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a774:	e353000a 	cmp	r3, #10
    a778:	9a0000e0 	bls	ab00 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x520>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:335
                return;

            const TDisplay_Pixels_To_Rect* pkt = reinterpret_cast<const TDisplay_Pixels_To_Rect*>(input);
    a77c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
    a780:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:337

            const uint8_t* data = &pkt->first;
    a784:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a788:	e283300a 	add	r3, r3, #10
    a78c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:339

            sMonitor << "pkt->vflip = " << (pkt->vflip == 0) << '\n';
    a790:	e59f1394 	ldr	r1, [pc, #916]	; ab2c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x54c>
    a794:	e59f037c 	ldr	r0, [pc, #892]	; ab18 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x538>
    a798:	ebfffb2b 	bl	944c <_ZN8CMonitorlsEPKc>
    a79c:	e1a02000 	mov	r2, r0
    a7a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a7a4:	e5d33009 	ldrb	r3, [r3, #9]
    a7a8:	e3530000 	cmp	r3, #0
    a7ac:	03a03001 	moveq	r3, #1
    a7b0:	13a03000 	movne	r3, #0
    a7b4:	e6ef3073 	uxtb	r3, r3
    a7b8:	e1a01003 	mov	r1, r3
    a7bc:	e1a00002 	mov	r0, r2
    a7c0:	ebfffb61 	bl	954c <_ZN8CMonitorlsEb>
    a7c4:	e1a03000 	mov	r3, r0
    a7c8:	e3a0100a 	mov	r1, #10
    a7cc:	e1a00003 	mov	r0, r3
    a7d0:	ebfffaf3 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:341

            if (pkt->vflip == 0)
    a7d4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a7d8:	e5d33009 	ldrb	r3, [r3, #9]
    a7dc:	e3530000 	cmp	r3, #0
    a7e0:	1a000066 	bne	a980 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x3a0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343
            {
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a7e4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a7e8:	e5d32001 	ldrb	r2, [r3, #1]
    a7ec:	e5d33002 	ldrb	r3, [r3, #2]
    a7f0:	e1a03403 	lsl	r3, r3, #8
    a7f4:	e1833002 	orr	r3, r3, r2
    a7f8:	e14b30b8 	strh	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 1)
    a7fc:	e15b20b8 	ldrh	r2, [fp, #-8]
    a800:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a804:	e5d31001 	ldrb	r1, [r3, #1]
    a808:	e5d33002 	ldrb	r3, [r3, #2]
    a80c:	e1a03403 	lsl	r3, r3, #8
    a810:	e1833001 	orr	r3, r3, r1
    a814:	e6ff3073 	uxth	r3, r3
    a818:	e1a00003 	mov	r0, r3
    a81c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a820:	e5d31005 	ldrb	r1, [r3, #5]
    a824:	e5d33006 	ldrb	r3, [r3, #6]
    a828:	e1a03403 	lsl	r3, r3, #8
    a82c:	e1833001 	orr	r3, r3, r1
    a830:	e6ff3073 	uxth	r3, r3
    a834:	e0803003 	add	r3, r0, r3
    a838:	e1520003 	cmp	r2, r3
    a83c:	aa0000b1 	bge	ab08 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x528>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345
                {
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a840:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a844:	e5d32003 	ldrb	r2, [r3, #3]
    a848:	e5d33004 	ldrb	r3, [r3, #4]
    a84c:	e1a03403 	lsl	r3, r3, #8
    a850:	e1833002 	orr	r3, r3, r2
    a854:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 3)
    a858:	e15b20ba 	ldrh	r2, [fp, #-10]
    a85c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a860:	e5d31003 	ldrb	r1, [r3, #3]
    a864:	e5d33004 	ldrb	r3, [r3, #4]
    a868:	e1a03403 	lsl	r3, r3, #8
    a86c:	e1833001 	orr	r3, r3, r1
    a870:	e6ff3073 	uxth	r3, r3
    a874:	e1a00003 	mov	r0, r3
    a878:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a87c:	e5d31007 	ldrb	r1, [r3, #7]
    a880:	e5d33008 	ldrb	r3, [r3, #8]
    a884:	e1a03403 	lsl	r3, r3, #8
    a888:	e1833001 	orr	r3, r3, r1
    a88c:	e6ff3073 	uxth	r3, r3
    a890:	e0803003 	add	r3, r0, r3
    a894:	e1520003 	cmp	r2, r3
    a898:	aa000034 	bge	a970 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x390>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:347 (discriminator 2)
                    {
                        const uint16_t pos = ((y - pkt->y1) * pkt->w + (x - pkt->x1));
    a89c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a8a0:	e5d32003 	ldrb	r2, [r3, #3]
    a8a4:	e5d33004 	ldrb	r3, [r3, #4]
    a8a8:	e1a03403 	lsl	r3, r3, #8
    a8ac:	e1833002 	orr	r3, r3, r2
    a8b0:	e6ff3073 	uxth	r3, r3
    a8b4:	e15b20ba 	ldrh	r2, [fp, #-10]
    a8b8:	e0423003 	sub	r3, r2, r3
    a8bc:	e6ff2073 	uxth	r2, r3
    a8c0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a8c4:	e5d31005 	ldrb	r1, [r3, #5]
    a8c8:	e5d33006 	ldrb	r3, [r3, #6]
    a8cc:	e1a03403 	lsl	r3, r3, #8
    a8d0:	e1833001 	orr	r3, r3, r1
    a8d4:	e6ff3073 	uxth	r3, r3
    a8d8:	e1630382 	smulbb	r3, r2, r3
    a8dc:	e6ff2073 	uxth	r2, r3
    a8e0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a8e4:	e5d31001 	ldrb	r1, [r3, #1]
    a8e8:	e5d33002 	ldrb	r3, [r3, #2]
    a8ec:	e1a03403 	lsl	r3, r3, #8
    a8f0:	e1833001 	orr	r3, r3, r1
    a8f4:	e6ff3073 	uxth	r3, r3
    a8f8:	e15b10b8 	ldrh	r1, [fp, #-8]
    a8fc:	e0413003 	sub	r3, r1, r3
    a900:	e6ff3073 	uxth	r3, r3
    a904:	e0823003 	add	r3, r2, r3
    a908:	e14b32b8 	strh	r3, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:350 (discriminator 2)

                        
                        Set_Pixel(x, y, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a90c:	e15b10b8 	ldrh	r1, [fp, #-8]
    a910:	e15b20ba 	ldrh	r2, [fp, #-10]
    a914:	e15b32b8 	ldrh	r3, [fp, #-40]	; 0xffffffd8
    a918:	e1a031a3 	lsr	r3, r3, #3
    a91c:	e6ff3073 	uxth	r3, r3
    a920:	e1a00003 	mov	r0, r3
    a924:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    a928:	e0833000 	add	r3, r3, r0
    a92c:	e5d33000 	ldrb	r3, [r3]
    a930:	e1a00003 	mov	r0, r3
    a934:	e15b32b8 	ldrh	r3, [fp, #-40]	; 0xffffffd8
    a938:	e1e03003 	mvn	r3, r3
    a93c:	e2033007 	and	r3, r3, #7
    a940:	e1a03350 	asr	r3, r0, r3
    a944:	e2033001 	and	r3, r3, #1
    a948:	e3530000 	cmp	r3, #0
    a94c:	13a03001 	movne	r3, #1
    a950:	03a03000 	moveq	r3, #0
    a954:	e6ef3073 	uxtb	r3, r3
    a958:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    a95c:	ebfffe47 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 2)
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a960:	e15b30ba 	ldrh	r3, [fp, #-10]
    a964:	e2833001 	add	r3, r3, #1
    a968:	e14b30ba 	strh	r3, [fp, #-10]
    a96c:	eaffffb9 	b	a858 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x278>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 2)
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a970:	e15b30b8 	ldrh	r3, [fp, #-8]
    a974:	e2833001 	add	r3, r3, #1
    a978:	e14b30b8 	strh	r3, [fp, #-8]
    a97c:	eaffff9e 	b	a7fc <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x21c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:368
                {
                    sMonitor << static_cast<unsigned int>(data[i]) << " ";
                }
                sMonitor << "\n";*/

                for (uint32_t x = 0; x < pkt->w; x++)
    a980:	e3a03000 	mov	r3, #0
    a984:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:368 (discriminator 1)
    a988:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a98c:	e5d32005 	ldrb	r2, [r3, #5]
    a990:	e5d33006 	ldrb	r3, [r3, #6]
    a994:	e1a03403 	lsl	r3, r3, #8
    a998:	e1833002 	orr	r3, r3, r2
    a99c:	e6ff3073 	uxth	r3, r3
    a9a0:	e1a02003 	mov	r2, r3
    a9a4:	e51b3010 	ldr	r3, [fp, #-16]
    a9a8:	e1530002 	cmp	r3, r2
    a9ac:	2a000055 	bcs	ab08 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x528>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:370
                {
                    for (uint32_t y = 0; y < pkt->h; y++)
    a9b0:	e3a03000 	mov	r3, #0
    a9b4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:370 (discriminator 3)
    a9b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a9bc:	e5d32007 	ldrb	r2, [r3, #7]
    a9c0:	e5d33008 	ldrb	r3, [r3, #8]
    a9c4:	e1a03403 	lsl	r3, r3, #8
    a9c8:	e1833002 	orr	r3, r3, r2
    a9cc:	e6ff3073 	uxth	r3, r3
    a9d0:	e1a02003 	mov	r2, r3
    a9d4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a9d8:	e1530002 	cmp	r3, r2
    a9dc:	2a00003b 	bcs	aad0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4f0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:372 (discriminator 2)
                    {
                        const uint32_t pos = (x * pkt->h + y);
    a9e0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a9e4:	e5d32007 	ldrb	r2, [r3, #7]
    a9e8:	e5d33008 	ldrb	r3, [r3, #8]
    a9ec:	e1a03403 	lsl	r3, r3, #8
    a9f0:	e1833002 	orr	r3, r3, r2
    a9f4:	e6ff3073 	uxth	r3, r3
    a9f8:	e1a02003 	mov	r2, r3
    a9fc:	e51b3010 	ldr	r3, [fp, #-16]
    aa00:	e0030293 	mul	r3, r3, r2
    aa04:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    aa08:	e0823003 	add	r3, r2, r3
    aa0c:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:378 (discriminator 2)

                        //sMonitor << "x = " << static_cast<unsigned int>(x) << "; y = " << static_cast<unsigned int>(y) << '\n';
                        //sMonitor << "pos = " << static_cast<unsigned int>(pos) << '\n';
                        //sMonitor << "[a; b] = [" << static_cast<unsigned int>(pos / 8) << "; " << static_cast<unsigned int>(7 - (pos % 8)) << "]\n";

                        const bool set = ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0;
    aa10:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    aa14:	e1a031a3 	lsr	r3, r3, #3
    aa18:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    aa1c:	e0823003 	add	r3, r2, r3
    aa20:	e5d33000 	ldrb	r3, [r3]
    aa24:	e1a02003 	mov	r2, r3
    aa28:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    aa2c:	e1e03003 	mvn	r3, r3
    aa30:	e2033007 	and	r3, r3, #7
    aa34:	e1a03352 	asr	r3, r2, r3
    aa38:	e2033001 	and	r3, r3, #1
    aa3c:	e3530000 	cmp	r3, #0
    aa40:	13a03001 	movne	r3, #1
    aa44:	03a03000 	moveq	r3, #0
    aa48:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:381 (discriminator 2)
                        //sMonitor << "[" << static_cast<unsigned int>((pkt->h - y) + pkt->y1) << "; " << static_cast<unsigned int>(x + pkt->x1) << "] = " << set << "\n";

                        Set_Pixel(x + pkt->x1, (pkt->h - y) + pkt->y1, set);
    aa4c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa50:	e5d32001 	ldrb	r2, [r3, #1]
    aa54:	e5d33002 	ldrb	r3, [r3, #2]
    aa58:	e1a03403 	lsl	r3, r3, #8
    aa5c:	e1833002 	orr	r3, r3, r2
    aa60:	e6ff3073 	uxth	r3, r3
    aa64:	e1a02003 	mov	r2, r3
    aa68:	e51b3010 	ldr	r3, [fp, #-16]
    aa6c:	e0820003 	add	r0, r2, r3
    aa70:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa74:	e5d32007 	ldrb	r2, [r3, #7]
    aa78:	e5d33008 	ldrb	r3, [r3, #8]
    aa7c:	e1a03403 	lsl	r3, r3, #8
    aa80:	e1833002 	orr	r3, r3, r2
    aa84:	e6ff3073 	uxth	r3, r3
    aa88:	e1a02003 	mov	r2, r3
    aa8c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    aa90:	e0422003 	sub	r2, r2, r3
    aa94:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa98:	e5d31003 	ldrb	r1, [r3, #3]
    aa9c:	e5d33004 	ldrb	r3, [r3, #4]
    aaa0:	e1a03403 	lsl	r3, r3, #8
    aaa4:	e1833001 	orr	r3, r3, r1
    aaa8:	e6ff3073 	uxth	r3, r3
    aaac:	e0822003 	add	r2, r2, r3
    aab0:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    aab4:	e1a01000 	mov	r1, r0
    aab8:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
    aabc:	ebfffdef 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:370 (discriminator 2)
                    for (uint32_t y = 0; y < pkt->h; y++)
    aac0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    aac4:	e2833001 	add	r3, r3, #1
    aac8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    aacc:	eaffffb9 	b	a9b8 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x3d8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:368 (discriminator 2)
                for (uint32_t x = 0; x < pkt->w; x++)
    aad0:	e51b3010 	ldr	r3, [fp, #-16]
    aad4:	e2833001 	add	r3, r3, #1
    aad8:	e50b3010 	str	r3, [fp, #-16]
    aadc:	eaffffa9 	b	a988 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x3a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:282
        return;
    aae0:	e320f000 	nop	{0}
    aae4:	ea000008 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:302
                return;
    aae8:	e320f000 	nop	{0}
    aaec:	ea000006 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:316
                return;
    aaf0:	e320f000 	nop	{0}
    aaf4:	ea000004 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:325
            break;
    aaf8:	e320f000 	nop	{0}
    aafc:	ea000002 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:333
                return;
    ab00:	e320f000 	nop	{0}
    ab04:	ea000000 	b	ab0c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x52c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:386
                    }
                }
            }

            break;
    ab08:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
        }
    }
}
    ab0c:	e24bd004 	sub	sp, fp, #4
    ab10:	e8bd8800 	pop	{fp, pc}
    ab14:	00010020 	andeq	r0, r1, r0, lsr #32
    ab18:	00010bd4 	ldrdeq	r0, [r1], -r4
    ab1c:	00010034 	andeq	r0, r1, r4, lsr r0
    ab20:	00010048 	andeq	r0, r1, r8, asr #32
    ab24:	00010060 	andeq	r0, r1, r0, rrx
    ab28:	00010080 	andeq	r0, r1, r0, lsl #1
    ab2c:	000100a8 	andeq	r0, r1, r8, lsr #1

0000ab30 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
    ab30:	e92d4800 	push	{fp, lr}
    ab34:	e28db004 	add	fp, sp, #4
    ab38:	e24dd008 	sub	sp, sp, #8
    ab3c:	e50b0008 	str	r0, [fp, #-8]
    ab40:	e50b100c 	str	r1, [fp, #-12]
    ab44:	e51b3008 	ldr	r3, [fp, #-8]
    ab48:	e3530001 	cmp	r3, #1
    ab4c:	1a000006 	bne	ab6c <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389 (discriminator 1)
    ab50:	e51b300c 	ldr	r3, [fp, #-12]
    ab54:	e59f201c 	ldr	r2, [pc, #28]	; ab78 <_Z41__static_initialization_and_destruction_0ii+0x48>
    ab58:	e1530002 	cmp	r3, r2
    ab5c:	1a000002 	bne	ab6c <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:7
CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);
    ab60:	e59f1014 	ldr	r1, [pc, #20]	; ab7c <_Z41__static_initialization_and_destruction_0ii+0x4c>
    ab64:	e59f0014 	ldr	r0, [pc, #20]	; ab80 <_Z41__static_initialization_and_destruction_0ii+0x50>
    ab68:	ebfffb46 	bl	9888 <_ZN16CDisplay_SSD1306C1ER4CI2C>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
}
    ab6c:	e320f000 	nop	{0}
    ab70:	e24bd004 	sub	sp, fp, #4
    ab74:	e8bd8800 	pop	{fp, pc}
    ab78:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    ab7c:	00010bb0 			; <UNDEFINED> instruction: 0x00010bb0
    ab80:	00010bfc 	strdeq	r0, [r1], -ip

0000ab84 <_GLOBAL__sub_I_sDisplay_SSD1306>:
_GLOBAL__sub_I_sDisplay_SSD1306():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
    ab84:	e92d4800 	push	{fp, lr}
    ab88:	e28db004 	add	fp, sp, #4
    ab8c:	e59f1008 	ldr	r1, [pc, #8]	; ab9c <_GLOBAL__sub_I_sDisplay_SSD1306+0x18>
    ab90:	e3a00001 	mov	r0, #1
    ab94:	ebffffe5 	bl	ab30 <_Z41__static_initialization_and_destruction_0ii>
    ab98:	e8bd8800 	pop	{fp, pc}
    ab9c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000aba0 <_ZdlPvj>:
_ZdlPvj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:62
{
    sKernelMem.Free(p);
}

inline void operator delete(void* p, uint32_t)
{
    aba0:	e92d4800 	push	{fp, lr}
    aba4:	e28db004 	add	fp, sp, #4
    aba8:	e24dd008 	sub	sp, sp, #8
    abac:	e50b0008 	str	r0, [fp, #-8]
    abb0:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:63
    sKernelMem.Free(p);
    abb4:	e51b1008 	ldr	r1, [fp, #-8]
    abb8:	e59f000c 	ldr	r0, [pc, #12]	; abcc <_ZdlPvj+0x2c>
    abbc:	eb000bc3 	bl	dad0 <_ZN20CKernel_Heap_Manager4FreeEPv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:64
}
    abc0:	e320f000 	nop	{0}
    abc4:	e24bd004 	sub	sp, fp, #4
    abc8:	e8bd8800 	pop	{fp, pc}
    abcc:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000abd0 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>:
_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33

        // vlozeni znaku do bufferu
        template<typename T>
        CI2C_Transaction& operator<<(const T& chr)
    abd0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    abd4:	e28db000 	add	fp, sp, #0
    abd8:	e24dd00c 	sub	sp, sp, #12
    abdc:	e50b0008 	str	r0, [fp, #-8]
    abe0:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
        {
            if (mLength >= I2C_Transaction_Max_Size)
    abe4:	e51b3008 	ldr	r3, [fp, #-8]
    abe8:	e593300c 	ldr	r3, [r3, #12]
    abec:	e3530007 	cmp	r3, #7
    abf0:	9a000001 	bls	abfc <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    abf4:	e51b3008 	ldr	r3, [fp, #-8]
    abf8:	ea00000c 	b	ac30 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38

            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    abfc:	e51b300c 	ldr	r3, [fp, #-12]
    ac00:	e5930000 	ldr	r0, [r3]
    ac04:	e51b3008 	ldr	r3, [fp, #-8]
    ac08:	e593300c 	ldr	r3, [r3, #12]
    ac0c:	e2831001 	add	r1, r3, #1
    ac10:	e51b2008 	ldr	r2, [fp, #-8]
    ac14:	e582100c 	str	r1, [r2, #12]
    ac18:	e6ef1070 	uxtb	r1, r0
    ac1c:	e51b2008 	ldr	r2, [fp, #-8]
    ac20:	e0823003 	add	r3, r2, r3
    ac24:	e1a02001 	mov	r2, r1
    ac28:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40

            return *this;
    ac2c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ac30:	e1a00003 	mov	r0, r3
    ac34:	e28bd000 	add	sp, fp, #0
    ac38:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ac3c:	e12fff1e 	bx	lr

0000ac40 <_ZN16CI2C_TransactionlsIiEERS_RKT_>:
_ZN16CI2C_TransactionlsIiEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    ac40:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ac44:	e28db000 	add	fp, sp, #0
    ac48:	e24dd00c 	sub	sp, sp, #12
    ac4c:	e50b0008 	str	r0, [fp, #-8]
    ac50:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    ac54:	e51b3008 	ldr	r3, [fp, #-8]
    ac58:	e593300c 	ldr	r3, [r3, #12]
    ac5c:	e3530007 	cmp	r3, #7
    ac60:	9a000001 	bls	ac6c <_ZN16CI2C_TransactionlsIiEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    ac64:	e51b3008 	ldr	r3, [fp, #-8]
    ac68:	ea00000c 	b	aca0 <_ZN16CI2C_TransactionlsIiEERS_RKT_+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ac6c:	e51b300c 	ldr	r3, [fp, #-12]
    ac70:	e5930000 	ldr	r0, [r3]
    ac74:	e51b3008 	ldr	r3, [fp, #-8]
    ac78:	e593300c 	ldr	r3, [r3, #12]
    ac7c:	e2831001 	add	r1, r3, #1
    ac80:	e51b2008 	ldr	r2, [fp, #-8]
    ac84:	e582100c 	str	r1, [r2, #12]
    ac88:	e6ef1070 	uxtb	r1, r0
    ac8c:	e51b2008 	ldr	r2, [fp, #-8]
    ac90:	e0823003 	add	r3, r2, r3
    ac94:	e1a02001 	mov	r2, r1
    ac98:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac9c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    aca0:	e1a00003 	mov	r0, r3
    aca4:	e28bd000 	add	sp, fp, #0
    aca8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    acac:	e12fff1e 	bx	lr

0000acb0 <_ZN16CI2C_TransactionlsIhEERS_RKT_>:
_ZN16CI2C_TransactionlsIhEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    acb0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    acb4:	e28db000 	add	fp, sp, #0
    acb8:	e24dd00c 	sub	sp, sp, #12
    acbc:	e50b0008 	str	r0, [fp, #-8]
    acc0:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    acc4:	e51b3008 	ldr	r3, [fp, #-8]
    acc8:	e593300c 	ldr	r3, [r3, #12]
    accc:	e3530007 	cmp	r3, #7
    acd0:	9a000001 	bls	acdc <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    acd4:	e51b3008 	ldr	r3, [fp, #-8]
    acd8:	ea00000b 	b	ad0c <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    acdc:	e51b3008 	ldr	r3, [fp, #-8]
    ace0:	e593300c 	ldr	r3, [r3, #12]
    ace4:	e2831001 	add	r1, r3, #1
    ace8:	e51b2008 	ldr	r2, [fp, #-8]
    acec:	e582100c 	str	r1, [r2, #12]
    acf0:	e51b200c 	ldr	r2, [fp, #-12]
    acf4:	e5d21000 	ldrb	r1, [r2]
    acf8:	e51b2008 	ldr	r2, [fp, #-8]
    acfc:	e0823003 	add	r3, r2, r3
    ad00:	e1a02001 	mov	r2, r1
    ad04:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ad08:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ad0c:	e1a00003 	mov	r0, r3
    ad10:	e28bd000 	add	sp, fp, #0
    ad14:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ad18:	e12fff1e 	bx	lr

0000ad1c <_ZN16CSegment_DisplayC1Ev>:
_ZN16CSegment_DisplayC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:124
    0,          // }
    0,          // ~
    0,          // DEL
};

CSegment_Display::CSegment_Display()
    ad1c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ad20:	e28db000 	add	fp, sp, #0
    ad24:	e24dd00c 	sub	sp, sp, #12
    ad28:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:126
: mOpened(false)
, mOutput('\0')
    ad2c:	e51b3008 	ldr	r3, [fp, #-8]
    ad30:	e3a02000 	mov	r2, #0
    ad34:	e5c32000 	strb	r2, [r3]
    ad38:	e51b3008 	ldr	r3, [fp, #-8]
    ad3c:	e3a02000 	mov	r2, #0
    ad40:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:129
{
    //
}
    ad44:	e51b3008 	ldr	r3, [fp, #-8]
    ad48:	e1a00003 	mov	r0, r3
    ad4c:	e28bd000 	add	sp, fp, #0
    ad50:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ad54:	e12fff1e 	bx	lr

0000ad58 <_ZN16CSegment_Display4OpenEv>:
_ZN16CSegment_Display4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:132

bool CSegment_Display::Open()
{
    ad58:	e92d4800 	push	{fp, lr}
    ad5c:	e28db004 	add	fp, sp, #4
    ad60:	e24dd008 	sub	sp, sp, #8
    ad64:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:133
    if (mOpened)
    ad68:	e51b3008 	ldr	r3, [fp, #-8]
    ad6c:	e5d33000 	ldrb	r3, [r3]
    ad70:	e3530000 	cmp	r3, #0
    ad74:	0a000001 	beq	ad80 <_ZN16CSegment_Display4OpenEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:134
        return false;
    ad78:	e3a03000 	mov	r3, #0
    ad7c:	ea00000c 	b	adb4 <_ZN16CSegment_Display4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:136

    if (!sShift_Register.Open())
    ad80:	e59f0038 	ldr	r0, [pc, #56]	; adc0 <_ZN16CSegment_Display4OpenEv+0x68>
    ad84:	eb000092 	bl	afd4 <_ZN15CShift_Register4OpenEv>
    ad88:	e1a03000 	mov	r3, r0
    ad8c:	e2233001 	eor	r3, r3, #1
    ad90:	e6ef3073 	uxtb	r3, r3
    ad94:	e3530000 	cmp	r3, #0
    ad98:	0a000001 	beq	ada4 <_ZN16CSegment_Display4OpenEv+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:137
        return false;
    ad9c:	e3a03000 	mov	r3, #0
    ada0:	ea000003 	b	adb4 <_ZN16CSegment_Display4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:139

    mOpened = true;
    ada4:	e51b3008 	ldr	r3, [fp, #-8]
    ada8:	e3a02001 	mov	r2, #1
    adac:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:141

    return true;
    adb0:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:142
}
    adb4:	e1a00003 	mov	r0, r3
    adb8:	e24bd004 	sub	sp, fp, #4
    adbc:	e8bd8800 	pop	{fp, pc}
    adc0:	00010c14 	andeq	r0, r1, r4, lsl ip

0000adc4 <_ZN16CSegment_Display5CloseEv>:
_ZN16CSegment_Display5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:145

void CSegment_Display::Close()
{
    adc4:	e92d4800 	push	{fp, lr}
    adc8:	e28db004 	add	fp, sp, #4
    adcc:	e24dd008 	sub	sp, sp, #8
    add0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:146
    if (!mOpened)
    add4:	e51b3008 	ldr	r3, [fp, #-8]
    add8:	e5d33000 	ldrb	r3, [r3]
    addc:	e2233001 	eor	r3, r3, #1
    ade0:	e6ef3073 	uxtb	r3, r3
    ade4:	e3530000 	cmp	r3, #0
    ade8:	1a000005 	bne	ae04 <_ZN16CSegment_Display5CloseEv+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:149
        return;

    sShift_Register.Close();
    adec:	e59f001c 	ldr	r0, [pc, #28]	; ae10 <_ZN16CSegment_Display5CloseEv+0x4c>
    adf0:	eb0000d4 	bl	b148 <_ZN15CShift_Register5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:151

    mOpened = false;
    adf4:	e51b3008 	ldr	r3, [fp, #-8]
    adf8:	e3a02000 	mov	r2, #0
    adfc:	e5c32000 	strb	r2, [r3]
    ae00:	ea000000 	b	ae08 <_ZN16CSegment_Display5CloseEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:147
        return;
    ae04:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:152
}
    ae08:	e24bd004 	sub	sp, fp, #4
    ae0c:	e8bd8800 	pop	{fp, pc}
    ae10:	00010c14 	andeq	r0, r1, r4, lsl ip

0000ae14 <_ZNK16CSegment_Display9Is_OpenedEv>:
_ZNK16CSegment_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:155

bool CSegment_Display::Is_Opened() const
{
    ae14:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ae18:	e28db000 	add	fp, sp, #0
    ae1c:	e24dd00c 	sub	sp, sp, #12
    ae20:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:156
    return mOpened;
    ae24:	e51b3008 	ldr	r3, [fp, #-8]
    ae28:	e5d33000 	ldrb	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:157
}
    ae2c:	e1a00003 	mov	r0, r3
    ae30:	e28bd000 	add	sp, fp, #0
    ae34:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ae38:	e12fff1e 	bx	lr

0000ae3c <_ZN16CSegment_Display5WriteEc>:
_ZN16CSegment_Display5WriteEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:160

void CSegment_Display::Write(char c)
{
    ae3c:	e92d4800 	push	{fp, lr}
    ae40:	e28db004 	add	fp, sp, #4
    ae44:	e24dd010 	sub	sp, sp, #16
    ae48:	e50b0010 	str	r0, [fp, #-16]
    ae4c:	e1a03001 	mov	r3, r1
    ae50:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:161
    if (!mOpened)
    ae54:	e51b3010 	ldr	r3, [fp, #-16]
    ae58:	e5d33000 	ldrb	r3, [r3]
    ae5c:	e2233001 	eor	r3, r3, #1
    ae60:	e6ef3073 	uxtb	r3, r3
    ae64:	e3530000 	cmp	r3, #0
    ae68:	1a000011 	bne	aeb4 <_ZN16CSegment_Display5WriteEc+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:164
        return;

    uint8_t idx = static_cast<uint8_t>(c);
    ae6c:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    ae70:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167

    // jen tisknutelne zakladni znaky
    if (idx < 32 || idx >= 128)
    ae74:	e55b3005 	ldrb	r3, [fp, #-5]
    ae78:	e353001f 	cmp	r3, #31
    ae7c:	9a00000e 	bls	aebc <_ZN16CSegment_Display5WriteEc+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167 (discriminator 1)
    ae80:	e15b30d5 	ldrsb	r3, [fp, #-5]
    ae84:	e3530000 	cmp	r3, #0
    ae88:	ba00000b 	blt	aebc <_ZN16CSegment_Display5WriteEc+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:171
        return;

    // segmenty jsou invertovane (spolecna katoda), takze tam kde je 0 bude segment svitit
    sShift_Register.Shift_In(static_cast<uint8_t>(~(mCharacter_Map[idx - 32])));
    ae8c:	e55b3005 	ldrb	r3, [fp, #-5]
    ae90:	e2433020 	sub	r3, r3, #32
    ae94:	e59f202c 	ldr	r2, [pc, #44]	; aec8 <_ZN16CSegment_Display5WriteEc+0x8c>
    ae98:	e7d23003 	ldrb	r3, [r2, r3]
    ae9c:	e1e03003 	mvn	r3, r3
    aea0:	e6ef3073 	uxtb	r3, r3
    aea4:	e1a01003 	mov	r1, r3
    aea8:	e59f001c 	ldr	r0, [pc, #28]	; aecc <_ZN16CSegment_Display5WriteEc+0x90>
    aeac:	eb00012e 	bl	b36c <_ZN15CShift_Register8Shift_InEh>
    aeb0:	ea000002 	b	aec0 <_ZN16CSegment_Display5WriteEc+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:162
        return;
    aeb4:	e320f000 	nop	{0}
    aeb8:	ea000000 	b	aec0 <_ZN16CSegment_Display5WriteEc+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:168
        return;
    aebc:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:172
}
    aec0:	e24bd004 	sub	sp, fp, #4
    aec4:	e8bd8800 	pop	{fp, pc}
    aec8:	000100e4 	andeq	r0, r1, r4, ror #1
    aecc:	00010c14 	andeq	r0, r1, r4, lsl ip

0000aed0 <_ZNK16CSegment_Display4ReadEv>:
_ZNK16CSegment_Display4ReadEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:175

char CSegment_Display::Read() const
{
    aed0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    aed4:	e28db000 	add	fp, sp, #0
    aed8:	e24dd00c 	sub	sp, sp, #12
    aedc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:176
    if (!mOpened)
    aee0:	e51b3008 	ldr	r3, [fp, #-8]
    aee4:	e5d33000 	ldrb	r3, [r3]
    aee8:	e2233001 	eor	r3, r3, #1
    aeec:	e6ef3073 	uxtb	r3, r3
    aef0:	e3530000 	cmp	r3, #0
    aef4:	0a000001 	beq	af00 <_ZNK16CSegment_Display4ReadEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:177
        return '\0';
    aef8:	e3a03000 	mov	r3, #0
    aefc:	ea000001 	b	af08 <_ZNK16CSegment_Display4ReadEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:179

    return mOutput;
    af00:	e51b3008 	ldr	r3, [fp, #-8]
    af04:	e5d33001 	ldrb	r3, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af08:	e1a00003 	mov	r0, r3
    af0c:	e28bd000 	add	sp, fp, #0
    af10:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    af14:	e12fff1e 	bx	lr

0000af18 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af18:	e92d4800 	push	{fp, lr}
    af1c:	e28db004 	add	fp, sp, #4
    af20:	e24dd008 	sub	sp, sp, #8
    af24:	e50b0008 	str	r0, [fp, #-8]
    af28:	e50b100c 	str	r1, [fp, #-12]
    af2c:	e51b3008 	ldr	r3, [fp, #-8]
    af30:	e3530001 	cmp	r3, #1
    af34:	1a000005 	bne	af50 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180 (discriminator 1)
    af38:	e51b300c 	ldr	r3, [fp, #-12]
    af3c:	e59f2018 	ldr	r2, [pc, #24]	; af5c <_Z41__static_initialization_and_destruction_0ii+0x44>
    af40:	e1530002 	cmp	r3, r2
    af44:	1a000001 	bne	af50 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    af48:	e59f0010 	ldr	r0, [pc, #16]	; af60 <_Z41__static_initialization_and_destruction_0ii+0x48>
    af4c:	ebffff72 	bl	ad1c <_ZN16CSegment_DisplayC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af50:	e320f000 	nop	{0}
    af54:	e24bd004 	sub	sp, fp, #4
    af58:	e8bd8800 	pop	{fp, pc}
    af5c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    af60:	00010c10 	andeq	r0, r1, r0, lsl ip

0000af64 <_GLOBAL__sub_I_sSegment_Display>:
_GLOBAL__sub_I_sSegment_Display():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af64:	e92d4800 	push	{fp, lr}
    af68:	e28db004 	add	fp, sp, #4
    af6c:	e59f1008 	ldr	r1, [pc, #8]	; af7c <_GLOBAL__sub_I_sSegment_Display+0x18>
    af70:	e3a00001 	mov	r0, #1
    af74:	ebffffe7 	bl	af18 <_Z41__static_initialization_and_destruction_0ii>
    af78:	e8bd8800 	pop	{fp, pc}
    af7c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000af80 <_ZN15CShift_RegisterC1Ejjj>:
_ZN15CShift_RegisterC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:7

// na tvrdo definujeme, ze jsme shift registr pripojili sem - volitelne muzeme pak oddelit do nejake HAL vrstvy pro dany
// header
CShift_Register sShift_Register(2, 3, 4);

CShift_Register::CShift_Register(uint32_t latchPin, uint32_t dataPin, uint32_t clockPin)
    af80:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    af84:	e28db000 	add	fp, sp, #0
    af88:	e24dd014 	sub	sp, sp, #20
    af8c:	e50b0008 	str	r0, [fp, #-8]
    af90:	e50b100c 	str	r1, [fp, #-12]
    af94:	e50b2010 	str	r2, [fp, #-16]
    af98:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:10
: mLatch_Pin(latchPin)
, mData_Pin(dataPin)
, mClock_Pin(clockPin)
    af9c:	e51b3008 	ldr	r3, [fp, #-8]
    afa0:	e51b200c 	ldr	r2, [fp, #-12]
    afa4:	e5832000 	str	r2, [r3]
    afa8:	e51b3008 	ldr	r3, [fp, #-8]
    afac:	e51b2010 	ldr	r2, [fp, #-16]
    afb0:	e5832004 	str	r2, [r3, #4]
    afb4:	e51b3008 	ldr	r3, [fp, #-8]
    afb8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    afbc:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:13
{
    //
}
    afc0:	e51b3008 	ldr	r3, [fp, #-8]
    afc4:	e1a00003 	mov	r0, r3
    afc8:	e28bd000 	add	sp, fp, #0
    afcc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    afd0:	e12fff1e 	bx	lr

0000afd4 <_ZN15CShift_Register4OpenEv>:
_ZN15CShift_Register4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:16

bool CShift_Register::Open()
{
    afd4:	e92d4800 	push	{fp, lr}
    afd8:	e28db004 	add	fp, sp, #4
    afdc:	e24dd008 	sub	sp, sp, #8
    afe0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:17
    if (mOpened)
    afe4:	e51b3008 	ldr	r3, [fp, #-8]
    afe8:	e5d3300c 	ldrb	r3, [r3, #12]
    afec:	e3530000 	cmp	r3, #0
    aff0:	0a000001 	beq	affc <_ZN15CShift_Register4OpenEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:18
        return false;
    aff4:	e3a03000 	mov	r3, #0
    aff8:	ea00004e 	b	b138 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:22

    // rezervujeme vsechny piny pro shift registr

    if (!sGPIO.Reserve_Pin(mLatch_Pin, true, true))
    affc:	e51b3008 	ldr	r3, [fp, #-8]
    b000:	e5931000 	ldr	r1, [r3]
    b004:	e3a03001 	mov	r3, #1
    b008:	e3a02001 	mov	r2, #1
    b00c:	e59f0130 	ldr	r0, [pc, #304]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b010:	ebfff594 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    b014:	e1a03000 	mov	r3, r0
    b018:	e2233001 	eor	r3, r3, #1
    b01c:	e6ef3073 	uxtb	r3, r3
    b020:	e3530000 	cmp	r3, #0
    b024:	0a000001 	beq	b030 <_ZN15CShift_Register4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:23
        return false;
    b028:	e3a03000 	mov	r3, #0
    b02c:	ea000041 	b	b138 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:25

    if (!sGPIO.Reserve_Pin(mData_Pin, true, true))
    b030:	e51b3008 	ldr	r3, [fp, #-8]
    b034:	e5931004 	ldr	r1, [r3, #4]
    b038:	e3a03001 	mov	r3, #1
    b03c:	e3a02001 	mov	r2, #1
    b040:	e59f00fc 	ldr	r0, [pc, #252]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b044:	ebfff587 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    b048:	e1a03000 	mov	r3, r0
    b04c:	e2233001 	eor	r3, r3, #1
    b050:	e6ef3073 	uxtb	r3, r3
    b054:	e3530000 	cmp	r3, #0
    b058:	0a000007 	beq	b07c <_ZN15CShift_Register4OpenEv+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:27
    {
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b05c:	e51b3008 	ldr	r3, [fp, #-8]
    b060:	e5931000 	ldr	r1, [r3]
    b064:	e3a03001 	mov	r3, #1
    b068:	e3a02001 	mov	r2, #1
    b06c:	e59f00d0 	ldr	r0, [pc, #208]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b070:	ebfff5e2 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:28
        return false;
    b074:	e3a03000 	mov	r3, #0
    b078:	ea00002e 	b	b138 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:31
    }

    if (!sGPIO.Reserve_Pin(mClock_Pin, true, true))
    b07c:	e51b3008 	ldr	r3, [fp, #-8]
    b080:	e5931008 	ldr	r1, [r3, #8]
    b084:	e3a03001 	mov	r3, #1
    b088:	e3a02001 	mov	r2, #1
    b08c:	e59f00b0 	ldr	r0, [pc, #176]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b090:	ebfff574 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    b094:	e1a03000 	mov	r3, r0
    b098:	e2233001 	eor	r3, r3, #1
    b09c:	e6ef3073 	uxtb	r3, r3
    b0a0:	e3530000 	cmp	r3, #0
    b0a4:	0a00000d 	beq	b0e0 <_ZN15CShift_Register4OpenEv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:33
    {
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b0a8:	e51b3008 	ldr	r3, [fp, #-8]
    b0ac:	e5931000 	ldr	r1, [r3]
    b0b0:	e3a03001 	mov	r3, #1
    b0b4:	e3a02001 	mov	r2, #1
    b0b8:	e59f0084 	ldr	r0, [pc, #132]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b0bc:	ebfff5cf 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:34
        sGPIO.Free_Pin(mData_Pin, true, true);
    b0c0:	e51b3008 	ldr	r3, [fp, #-8]
    b0c4:	e5931004 	ldr	r1, [r3, #4]
    b0c8:	e3a03001 	mov	r3, #1
    b0cc:	e3a02001 	mov	r2, #1
    b0d0:	e59f006c 	ldr	r0, [pc, #108]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b0d4:	ebfff5c9 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:35
        return false;
    b0d8:	e3a03000 	mov	r3, #0
    b0dc:	ea000015 	b	b138 <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:39
    }

    // vsechny jsou vystupni
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Output);
    b0e0:	e51b3008 	ldr	r3, [fp, #-8]
    b0e4:	e5933000 	ldr	r3, [r3]
    b0e8:	e3a02001 	mov	r2, #1
    b0ec:	e1a01003 	mov	r1, r3
    b0f0:	e59f004c 	ldr	r0, [pc, #76]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b0f4:	ebfff4b5 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:40
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Output);
    b0f8:	e51b3008 	ldr	r3, [fp, #-8]
    b0fc:	e5933004 	ldr	r3, [r3, #4]
    b100:	e3a02001 	mov	r2, #1
    b104:	e1a01003 	mov	r1, r3
    b108:	e59f0034 	ldr	r0, [pc, #52]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b10c:	ebfff4af 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:41
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Output);
    b110:	e51b3008 	ldr	r3, [fp, #-8]
    b114:	e5933008 	ldr	r3, [r3, #8]
    b118:	e3a02001 	mov	r2, #1
    b11c:	e1a01003 	mov	r1, r3
    b120:	e59f001c 	ldr	r0, [pc, #28]	; b144 <_ZN15CShift_Register4OpenEv+0x170>
    b124:	ebfff4a9 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:43

    mOpened = true;
    b128:	e51b3008 	ldr	r3, [fp, #-8]
    b12c:	e3a02001 	mov	r2, #1
    b130:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:45

    return true;
    b134:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:46
}
    b138:	e1a00003 	mov	r0, r3
    b13c:	e24bd004 	sub	sp, fp, #4
    b140:	e8bd8800 	pop	{fp, pc}
    b144:	00010b9c 	muleq	r1, ip, fp

0000b148 <_ZN15CShift_Register5CloseEv>:
_ZN15CShift_Register5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:49

void CShift_Register::Close()
{
    b148:	e92d4800 	push	{fp, lr}
    b14c:	e28db004 	add	fp, sp, #4
    b150:	e24dd008 	sub	sp, sp, #8
    b154:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:50
    if (!mOpened)
    b158:	e51b3008 	ldr	r3, [fp, #-8]
    b15c:	e5d3300c 	ldrb	r3, [r3, #12]
    b160:	e2233001 	eor	r3, r3, #1
    b164:	e6ef3073 	uxtb	r3, r3
    b168:	e3530000 	cmp	r3, #0
    b16c:	1a000027 	bne	b210 <_ZN15CShift_Register5CloseEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:54
        return;

    // prepneme piny na vstupni (setreni energii)
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Input);
    b170:	e51b3008 	ldr	r3, [fp, #-8]
    b174:	e5933000 	ldr	r3, [r3]
    b178:	e3a02000 	mov	r2, #0
    b17c:	e1a01003 	mov	r1, r3
    b180:	e59f0094 	ldr	r0, [pc, #148]	; b21c <_ZN15CShift_Register5CloseEv+0xd4>
    b184:	ebfff491 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:55
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Input);
    b188:	e51b3008 	ldr	r3, [fp, #-8]
    b18c:	e5933004 	ldr	r3, [r3, #4]
    b190:	e3a02000 	mov	r2, #0
    b194:	e1a01003 	mov	r1, r3
    b198:	e59f007c 	ldr	r0, [pc, #124]	; b21c <_ZN15CShift_Register5CloseEv+0xd4>
    b19c:	ebfff48b 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:56
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Input);
    b1a0:	e51b3008 	ldr	r3, [fp, #-8]
    b1a4:	e5933008 	ldr	r3, [r3, #8]
    b1a8:	e3a02000 	mov	r2, #0
    b1ac:	e1a01003 	mov	r1, r3
    b1b0:	e59f0064 	ldr	r0, [pc, #100]	; b21c <_ZN15CShift_Register5CloseEv+0xd4>
    b1b4:	ebfff485 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:59

    // a vratime je
    sGPIO.Free_Pin(mLatch_Pin, true, true);
    b1b8:	e51b3008 	ldr	r3, [fp, #-8]
    b1bc:	e5931000 	ldr	r1, [r3]
    b1c0:	e3a03001 	mov	r3, #1
    b1c4:	e3a02001 	mov	r2, #1
    b1c8:	e59f004c 	ldr	r0, [pc, #76]	; b21c <_ZN15CShift_Register5CloseEv+0xd4>
    b1cc:	ebfff58b 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:60
    sGPIO.Free_Pin(mData_Pin, true, true);
    b1d0:	e51b3008 	ldr	r3, [fp, #-8]
    b1d4:	e5931004 	ldr	r1, [r3, #4]
    b1d8:	e3a03001 	mov	r3, #1
    b1dc:	e3a02001 	mov	r2, #1
    b1e0:	e59f0034 	ldr	r0, [pc, #52]	; b21c <_ZN15CShift_Register5CloseEv+0xd4>
    b1e4:	ebfff585 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:61
    sGPIO.Free_Pin(mClock_Pin, true, true);
    b1e8:	e51b3008 	ldr	r3, [fp, #-8]
    b1ec:	e5931008 	ldr	r1, [r3, #8]
    b1f0:	e3a03001 	mov	r3, #1
    b1f4:	e3a02001 	mov	r2, #1
    b1f8:	e59f001c 	ldr	r0, [pc, #28]	; b21c <_ZN15CShift_Register5CloseEv+0xd4>
    b1fc:	ebfff57f 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:63

    mOpened = false;
    b200:	e51b3008 	ldr	r3, [fp, #-8]
    b204:	e3a02000 	mov	r2, #0
    b208:	e5c3200c 	strb	r2, [r3, #12]
    b20c:	ea000000 	b	b214 <_ZN15CShift_Register5CloseEv+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:51
        return;
    b210:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:64
}
    b214:	e24bd004 	sub	sp, fp, #4
    b218:	e8bd8800 	pop	{fp, pc}
    b21c:	00010b9c 	muleq	r1, ip, fp

0000b220 <_ZNK15CShift_Register9Is_OpenedEv>:
_ZNK15CShift_Register9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:67

bool CShift_Register::Is_Opened() const
{
    b220:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b224:	e28db000 	add	fp, sp, #0
    b228:	e24dd00c 	sub	sp, sp, #12
    b22c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:68
    return mOpened;
    b230:	e51b3008 	ldr	r3, [fp, #-8]
    b234:	e5d3300c 	ldrb	r3, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:69
}
    b238:	e1a00003 	mov	r0, r3
    b23c:	e28bd000 	add	sp, fp, #0
    b240:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b244:	e12fff1e 	bx	lr

0000b248 <_ZN15CShift_Register8Shift_InEb>:
_ZN15CShift_Register8Shift_InEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:72

void CShift_Register::Shift_In(bool bit)
{
    b248:	e92d4800 	push	{fp, lr}
    b24c:	e28db004 	add	fp, sp, #4
    b250:	e24dd010 	sub	sp, sp, #16
    b254:	e50b0010 	str	r0, [fp, #-16]
    b258:	e1a03001 	mov	r3, r1
    b25c:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:73
    if (!mOpened)
    b260:	e51b3010 	ldr	r3, [fp, #-16]
    b264:	e5d3300c 	ldrb	r3, [r3, #12]
    b268:	e2233001 	eor	r3, r3, #1
    b26c:	e6ef3073 	uxtb	r3, r3
    b270:	e3530000 	cmp	r3, #0
    b274:	1a000038 	bne	b35c <_ZN15CShift_Register8Shift_InEb+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:79
        return;

    volatile int i;

    // budeme nahravat bity do banku
    sGPIO.Set_Output(mLatch_Pin, false);
    b278:	e51b3010 	ldr	r3, [fp, #-16]
    b27c:	e5933000 	ldr	r3, [r3]
    b280:	e3a02000 	mov	r2, #0
    b284:	e1a01003 	mov	r1, r3
    b288:	e59f00d8 	ldr	r0, [pc, #216]	; b368 <_ZN15CShift_Register8Shift_InEb+0x120>
    b28c:	ebfff49e 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:82

    // nastavime bit
    sGPIO.Set_Output(mData_Pin, bit);
    b290:	e51b3010 	ldr	r3, [fp, #-16]
    b294:	e5933004 	ldr	r3, [r3, #4]
    b298:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
    b29c:	e1a01003 	mov	r1, r3
    b2a0:	e59f00c0 	ldr	r0, [pc, #192]	; b368 <_ZN15CShift_Register8Shift_InEb+0x120>
    b2a4:	ebfff498 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:84
    // clock -> shift registr nasune bit ze vstupu do banku
    sGPIO.Set_Output(mClock_Pin, true);
    b2a8:	e51b3010 	ldr	r3, [fp, #-16]
    b2ac:	e5933008 	ldr	r3, [r3, #8]
    b2b0:	e3a02001 	mov	r2, #1
    b2b4:	e1a01003 	mov	r1, r3
    b2b8:	e59f00a8 	ldr	r0, [pc, #168]	; b368 <_ZN15CShift_Register8Shift_InEb+0x120>
    b2bc:	ebfff492 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87

    // pockat par milisekund
    for (i = 0; i < 0x10; i++)
    b2c0:	e3a03000 	mov	r3, #0
    b2c4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 3)
    b2c8:	e51b3008 	ldr	r3, [fp, #-8]
    b2cc:	e353000f 	cmp	r3, #15
    b2d0:	d3a03001 	movle	r3, #1
    b2d4:	c3a03000 	movgt	r3, #0
    b2d8:	e6ef3073 	uxtb	r3, r3
    b2dc:	e3530000 	cmp	r3, #0
    b2e0:	0a000003 	beq	b2f4 <_ZN15CShift_Register8Shift_InEb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 2)
    b2e4:	e51b3008 	ldr	r3, [fp, #-8]
    b2e8:	e2833001 	add	r3, r3, #1
    b2ec:	e50b3008 	str	r3, [fp, #-8]
    b2f0:	eafffff4 	b	b2c8 <_ZN15CShift_Register8Shift_InEb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:91
        ;

    // vratit clock zpatky
    sGPIO.Set_Output(mClock_Pin, false);
    b2f4:	e51b3010 	ldr	r3, [fp, #-16]
    b2f8:	e5933008 	ldr	r3, [r3, #8]
    b2fc:	e3a02000 	mov	r2, #0
    b300:	e1a01003 	mov	r1, r3
    b304:	e59f005c 	ldr	r0, [pc, #92]	; b368 <_ZN15CShift_Register8Shift_InEb+0x120>
    b308:	ebfff47f 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94

    // pockat par milisekund
    for (i = 0; i < 0x10; i++)
    b30c:	e3a03000 	mov	r3, #0
    b310:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 3)
    b314:	e51b3008 	ldr	r3, [fp, #-8]
    b318:	e353000f 	cmp	r3, #15
    b31c:	d3a03001 	movle	r3, #1
    b320:	c3a03000 	movgt	r3, #0
    b324:	e6ef3073 	uxtb	r3, r3
    b328:	e3530000 	cmp	r3, #0
    b32c:	0a000003 	beq	b340 <_ZN15CShift_Register8Shift_InEb+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 2)
    b330:	e51b3008 	ldr	r3, [fp, #-8]
    b334:	e2833001 	add	r3, r3, #1
    b338:	e50b3008 	str	r3, [fp, #-8]
    b33c:	eafffff4 	b	b314 <_ZN15CShift_Register8Shift_InEb+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:98
        ;

    // propiseme bank do vystupu
    sGPIO.Set_Output(mLatch_Pin, true);
    b340:	e51b3010 	ldr	r3, [fp, #-16]
    b344:	e5933000 	ldr	r3, [r3]
    b348:	e3a02001 	mov	r2, #1
    b34c:	e1a01003 	mov	r1, r3
    b350:	e59f0010 	ldr	r0, [pc, #16]	; b368 <_ZN15CShift_Register8Shift_InEb+0x120>
    b354:	ebfff46c 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
    b358:	ea000000 	b	b360 <_ZN15CShift_Register8Shift_InEb+0x118>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:74
        return;
    b35c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:99
}
    b360:	e24bd004 	sub	sp, fp, #4
    b364:	e8bd8800 	pop	{fp, pc}
    b368:	00010b9c 	muleq	r1, ip, fp

0000b36c <_ZN15CShift_Register8Shift_InEh>:
_ZN15CShift_Register8Shift_InEh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:102

void CShift_Register::Shift_In(uint8_t byte)
{
    b36c:	e92d4800 	push	{fp, lr}
    b370:	e28db004 	add	fp, sp, #4
    b374:	e24dd010 	sub	sp, sp, #16
    b378:	e50b0010 	str	r0, [fp, #-16]
    b37c:	e1a03001 	mov	r3, r1
    b380:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:103
    if (!mOpened)
    b384:	e51b3010 	ldr	r3, [fp, #-16]
    b388:	e5d3300c 	ldrb	r3, [r3, #12]
    b38c:	e2233001 	eor	r3, r3, #1
    b390:	e6ef3073 	uxtb	r3, r3
    b394:	e3530000 	cmp	r3, #0
    b398:	1a000048 	bne	b4c0 <_ZN15CShift_Register8Shift_InEh+0x154>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:109
        return;

    volatile int i;

    // zapisovat do banku
    sGPIO.Set_Output(mLatch_Pin, false);
    b39c:	e51b3010 	ldr	r3, [fp, #-16]
    b3a0:	e5933000 	ldr	r3, [r3]
    b3a4:	e3a02000 	mov	r2, #0
    b3a8:	e1a01003 	mov	r1, r3
    b3ac:	e59f0118 	ldr	r0, [pc, #280]	; b4cc <_ZN15CShift_Register8Shift_InEh+0x160>
    b3b0:	ebfff455 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112

    // nasuneme bity od nejvyssiho po nejnizsi (aby na vystupu byly v poradi)
    for (int j = 7; j >= 0; j--)
    b3b4:	e3a03007 	mov	r3, #7
    b3b8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 1)
    b3bc:	e51b3008 	ldr	r3, [fp, #-8]
    b3c0:	e3530000 	cmp	r3, #0
    b3c4:	ba000036 	blt	b4a4 <_ZN15CShift_Register8Shift_InEh+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:114
    {
        sGPIO.Set_Output(mData_Pin, ((byte >> j) & 0x1));
    b3c8:	e51b3010 	ldr	r3, [fp, #-16]
    b3cc:	e5931004 	ldr	r1, [r3, #4]
    b3d0:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
    b3d4:	e51b3008 	ldr	r3, [fp, #-8]
    b3d8:	e1a03352 	asr	r3, r2, r3
    b3dc:	e2033001 	and	r3, r3, #1
    b3e0:	e3530000 	cmp	r3, #0
    b3e4:	13a03001 	movne	r3, #1
    b3e8:	03a03000 	moveq	r3, #0
    b3ec:	e6ef3073 	uxtb	r3, r3
    b3f0:	e1a02003 	mov	r2, r3
    b3f4:	e59f00d0 	ldr	r0, [pc, #208]	; b4cc <_ZN15CShift_Register8Shift_InEh+0x160>
    b3f8:	ebfff443 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:115
        sGPIO.Set_Output(mClock_Pin, true);
    b3fc:	e51b3010 	ldr	r3, [fp, #-16]
    b400:	e5933008 	ldr	r3, [r3, #8]
    b404:	e3a02001 	mov	r2, #1
    b408:	e1a01003 	mov	r1, r3
    b40c:	e59f00b8 	ldr	r0, [pc, #184]	; b4cc <_ZN15CShift_Register8Shift_InEh+0x160>
    b410:	ebfff43d 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117

        for (i = 0; i < 0x10; i++)
    b414:	e3a03000 	mov	r3, #0
    b418:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 3)
    b41c:	e51b300c 	ldr	r3, [fp, #-12]
    b420:	e353000f 	cmp	r3, #15
    b424:	d3a03001 	movle	r3, #1
    b428:	c3a03000 	movgt	r3, #0
    b42c:	e6ef3073 	uxtb	r3, r3
    b430:	e3530000 	cmp	r3, #0
    b434:	0a000003 	beq	b448 <_ZN15CShift_Register8Shift_InEh+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 2)
    b438:	e51b300c 	ldr	r3, [fp, #-12]
    b43c:	e2833001 	add	r3, r3, #1
    b440:	e50b300c 	str	r3, [fp, #-12]
    b444:	eafffff4 	b	b41c <_ZN15CShift_Register8Shift_InEh+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:120
            ;

        sGPIO.Set_Output(mClock_Pin, false);
    b448:	e51b3010 	ldr	r3, [fp, #-16]
    b44c:	e5933008 	ldr	r3, [r3, #8]
    b450:	e3a02000 	mov	r2, #0
    b454:	e1a01003 	mov	r1, r3
    b458:	e59f006c 	ldr	r0, [pc, #108]	; b4cc <_ZN15CShift_Register8Shift_InEh+0x160>
    b45c:	ebfff42a 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122

        for (i = 0; i < 0x10; i++)
    b460:	e3a03000 	mov	r3, #0
    b464:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 3)
    b468:	e51b300c 	ldr	r3, [fp, #-12]
    b46c:	e353000f 	cmp	r3, #15
    b470:	d3a03001 	movle	r3, #1
    b474:	c3a03000 	movgt	r3, #0
    b478:	e6ef3073 	uxtb	r3, r3
    b47c:	e3530000 	cmp	r3, #0
    b480:	0a000003 	beq	b494 <_ZN15CShift_Register8Shift_InEh+0x128>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 2)
    b484:	e51b300c 	ldr	r3, [fp, #-12]
    b488:	e2833001 	add	r3, r3, #1
    b48c:	e50b300c 	str	r3, [fp, #-12]
    b490:	eafffff4 	b	b468 <_ZN15CShift_Register8Shift_InEh+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 2)
    for (int j = 7; j >= 0; j--)
    b494:	e51b3008 	ldr	r3, [fp, #-8]
    b498:	e2433001 	sub	r3, r3, #1
    b49c:	e50b3008 	str	r3, [fp, #-8]
    b4a0:	eaffffc5 	b	b3bc <_ZN15CShift_Register8Shift_InEh+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:127
            ;
    }

    // propiseme bank na vystup
    sGPIO.Set_Output(mLatch_Pin, true);
    b4a4:	e51b3010 	ldr	r3, [fp, #-16]
    b4a8:	e5933000 	ldr	r3, [r3]
    b4ac:	e3a02001 	mov	r2, #1
    b4b0:	e1a01003 	mov	r1, r3
    b4b4:	e59f0010 	ldr	r0, [pc, #16]	; b4cc <_ZN15CShift_Register8Shift_InEh+0x160>
    b4b8:	ebfff413 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
    b4bc:	ea000000 	b	b4c4 <_ZN15CShift_Register8Shift_InEh+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:104
        return;
    b4c0:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b4c4:	e24bd004 	sub	sp, fp, #4
    b4c8:	e8bd8800 	pop	{fp, pc}
    b4cc:	00010b9c 	muleq	r1, ip, fp

0000b4d0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b4d0:	e92d4800 	push	{fp, lr}
    b4d4:	e28db004 	add	fp, sp, #4
    b4d8:	e24dd008 	sub	sp, sp, #8
    b4dc:	e50b0008 	str	r0, [fp, #-8]
    b4e0:	e50b100c 	str	r1, [fp, #-12]
    b4e4:	e51b3008 	ldr	r3, [fp, #-8]
    b4e8:	e3530001 	cmp	r3, #1
    b4ec:	1a000008 	bne	b514 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128 (discriminator 1)
    b4f0:	e51b300c 	ldr	r3, [fp, #-12]
    b4f4:	e59f2024 	ldr	r2, [pc, #36]	; b520 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b4f8:	e1530002 	cmp	r3, r2
    b4fc:	1a000004 	bne	b514 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:5
CShift_Register sShift_Register(2, 3, 4);
    b500:	e3a03004 	mov	r3, #4
    b504:	e3a02003 	mov	r2, #3
    b508:	e3a01002 	mov	r1, #2
    b50c:	e59f0010 	ldr	r0, [pc, #16]	; b524 <_Z41__static_initialization_and_destruction_0ii+0x54>
    b510:	ebfffe9a 	bl	af80 <_ZN15CShift_RegisterC1Ejjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b514:	e320f000 	nop	{0}
    b518:	e24bd004 	sub	sp, fp, #4
    b51c:	e8bd8800 	pop	{fp, pc}
    b520:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b524:	00010c14 	andeq	r0, r1, r4, lsl ip

0000b528 <_GLOBAL__sub_I_sShift_Register>:
_GLOBAL__sub_I_sShift_Register():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b528:	e92d4800 	push	{fp, lr}
    b52c:	e28db004 	add	fp, sp, #4
    b530:	e59f1008 	ldr	r1, [pc, #8]	; b540 <_GLOBAL__sub_I_sShift_Register+0x18>
    b534:	e3a00001 	mov	r0, #1
    b538:	ebffffe4 	bl	b4d0 <_Z41__static_initialization_and_destruction_0ii>
    b53c:	e8bd8800 	pop	{fp, pc}
    b540:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b544 <_ZN6CTimerC1Em>:
_ZN6CTimerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:26
    uint16_t unused_4 : 10;
};

#pragma pack(pop)

CTimer::CTimer(unsigned long timer_reg_base)
    b544:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b548:	e28db000 	add	fp, sp, #0
    b54c:	e24dd00c 	sub	sp, sp, #12
    b550:	e50b0008 	str	r0, [fp, #-8]
    b554:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:27
: mTimer_Regs(reinterpret_cast<unsigned int*>(timer_reg_base))
    b558:	e51b200c 	ldr	r2, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:28
, mCallback(nullptr)
    b55c:	e51b3008 	ldr	r3, [fp, #-8]
    b560:	e5832000 	str	r2, [r3]
    b564:	e51b3008 	ldr	r3, [fp, #-8]
    b568:	e3a02000 	mov	r2, #0
    b56c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:31
{
    //
}
    b570:	e51b3008 	ldr	r3, [fp, #-8]
    b574:	e1a00003 	mov	r0, r3
    b578:	e28bd000 	add	sp, fp, #0
    b57c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b580:	e12fff1e 	bx	lr

0000b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>:
_ZN6CTimer4RegsEN3hal9Timer_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:34

volatile unsigned int& CTimer::Regs(hal::Timer_Reg reg)
{
    b584:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b588:	e28db000 	add	fp, sp, #0
    b58c:	e24dd00c 	sub	sp, sp, #12
    b590:	e50b0008 	str	r0, [fp, #-8]
    b594:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:35
    return mTimer_Regs[static_cast<unsigned int>(reg)];
    b598:	e51b3008 	ldr	r3, [fp, #-8]
    b59c:	e5932000 	ldr	r2, [r3]
    b5a0:	e51b300c 	ldr	r3, [fp, #-12]
    b5a4:	e1a03103 	lsl	r3, r3, #2
    b5a8:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:36
}
    b5ac:	e1a00003 	mov	r0, r3
    b5b0:	e28bd000 	add	sp, fp, #0
    b5b4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b5b8:	e12fff1e 	bx	lr

0000b5bc <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler>:
_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:39

void CTimer::Enable(TTimer_Callback callback, unsigned int delay, NTimer_Prescaler prescaler)
{
    b5bc:	e92d4810 	push	{r4, fp, lr}
    b5c0:	e28db008 	add	fp, sp, #8
    b5c4:	e24dd01c 	sub	sp, sp, #28
    b5c8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    b5cc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    b5d0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    b5d4:	e54b3021 	strb	r3, [fp, #-33]	; 0xffffffdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:40
    Regs(hal::Timer_Reg::Load) = delay;
    b5d8:	e3a01000 	mov	r1, #0
    b5dc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b5e0:	ebffffe7 	bl	b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b5e4:	e1a02000 	mov	r2, r0
    b5e8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    b5ec:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:43

    TTimer_Ctl_Flags reg;
    reg.counter_32b = 1;
    b5f0:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b5f4:	e3833002 	orr	r3, r3, #2
    b5f8:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:44
    reg.interrupt_enabled = 1;
    b5fc:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b600:	e3833020 	orr	r3, r3, #32
    b604:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:45
    reg.timer_enabled = 1;
    b608:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b60c:	e3833080 	orr	r3, r3, #128	; 0x80
    b610:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:46
    reg.prescaler = static_cast<uint8_t>(prescaler);
    b614:	e55b3021 	ldrb	r3, [fp, #-33]	; 0xffffffdf
    b618:	e2033003 	and	r3, r3, #3
    b61c:	e6ef3073 	uxtb	r3, r3
    b620:	e55b2014 	ldrb	r2, [fp, #-20]	; 0xffffffec
    b624:	e2033003 	and	r3, r3, #3
    b628:	e3c2200c 	bic	r2, r2, #12
    b62c:	e1a03103 	lsl	r3, r3, #2
    b630:	e1833002 	orr	r3, r3, r2
    b634:	e1a02003 	mov	r2, r3
    b638:	e54b2014 	strb	r2, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:48

    Regs(hal::Timer_Reg::Control) = *reinterpret_cast<unsigned int*>(&reg);
    b63c:	e24b4014 	sub	r4, fp, #20
    b640:	e3a01002 	mov	r1, #2
    b644:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b648:	ebffffcd 	bl	b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b64c:	e1a02000 	mov	r2, r0
    b650:	e5943000 	ldr	r3, [r4]
    b654:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:50

    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b658:	e3a01003 	mov	r1, #3
    b65c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b660:	ebffffc7 	bl	b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b664:	e1a03000 	mov	r3, r0
    b668:	e3a02001 	mov	r2, #1
    b66c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:52

    mCallback = callback;
    b670:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    b674:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    b678:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:53
}
    b67c:	e320f000 	nop	{0}
    b680:	e24bd008 	sub	sp, fp, #8
    b684:	e8bd8810 	pop	{r4, fp, pc}

0000b688 <_ZN6CTimer7DisableEv>:
_ZN6CTimer7DisableEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:56

void CTimer::Disable()
{
    b688:	e92d4800 	push	{fp, lr}
    b68c:	e28db004 	add	fp, sp, #4
    b690:	e24dd010 	sub	sp, sp, #16
    b694:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:57
    volatile TTimer_Ctl_Flags& reg = reinterpret_cast<volatile TTimer_Ctl_Flags&>(Regs(hal::Timer_Reg::Control));
    b698:	e3a01002 	mov	r1, #2
    b69c:	e51b0010 	ldr	r0, [fp, #-16]
    b6a0:	ebffffb7 	bl	b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b6a4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:59

    reg.interrupt_enabled = 0;
    b6a8:	e51b2008 	ldr	r2, [fp, #-8]
    b6ac:	e5d23000 	ldrb	r3, [r2]
    b6b0:	e3c33020 	bic	r3, r3, #32
    b6b4:	e5c23000 	strb	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:60
    reg.timer_enabled = 0;
    b6b8:	e51b2008 	ldr	r2, [fp, #-8]
    b6bc:	e5d23000 	ldrb	r3, [r2]
    b6c0:	e3c33080 	bic	r3, r3, #128	; 0x80
    b6c4:	e5c23000 	strb	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:61
}
    b6c8:	e320f000 	nop	{0}
    b6cc:	e24bd004 	sub	sp, fp, #4
    b6d0:	e8bd8800 	pop	{fp, pc}

0000b6d4 <_ZN6CTimer12IRQ_CallbackEv>:
_ZN6CTimer12IRQ_CallbackEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:64

void CTimer::IRQ_Callback()
{
    b6d4:	e92d4800 	push	{fp, lr}
    b6d8:	e28db004 	add	fp, sp, #4
    b6dc:	e24dd008 	sub	sp, sp, #8
    b6e0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:65
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b6e4:	e3a01003 	mov	r1, #3
    b6e8:	e51b0008 	ldr	r0, [fp, #-8]
    b6ec:	ebffffa4 	bl	b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b6f0:	e1a03000 	mov	r3, r0
    b6f4:	e3a02001 	mov	r2, #1
    b6f8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:67

    if (mCallback)
    b6fc:	e51b3008 	ldr	r3, [fp, #-8]
    b700:	e5933004 	ldr	r3, [r3, #4]
    b704:	e3530000 	cmp	r3, #0
    b708:	0a000002 	beq	b718 <_ZN6CTimer12IRQ_CallbackEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:68
        mCallback();
    b70c:	e51b3008 	ldr	r3, [fp, #-8]
    b710:	e5933004 	ldr	r3, [r3, #4]
    b714:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:69
}
    b718:	e320f000 	nop	{0}
    b71c:	e24bd004 	sub	sp, fp, #4
    b720:	e8bd8800 	pop	{fp, pc}

0000b724 <_ZN6CTimer20Is_Timer_IRQ_PendingEv>:
_ZN6CTimer20Is_Timer_IRQ_PendingEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:72

bool CTimer::Is_Timer_IRQ_Pending()
{
    b724:	e92d4800 	push	{fp, lr}
    b728:	e28db004 	add	fp, sp, #4
    b72c:	e24dd008 	sub	sp, sp, #8
    b730:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:73
    return Regs(hal::Timer_Reg::IRQ_Masked);
    b734:	e3a01005 	mov	r1, #5
    b738:	e51b0008 	ldr	r0, [fp, #-8]
    b73c:	ebffff90 	bl	b584 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b740:	e1a03000 	mov	r3, r0
    b744:	e5933000 	ldr	r3, [r3]
    b748:	e3530000 	cmp	r3, #0
    b74c:	13a03001 	movne	r3, #1
    b750:	03a03000 	moveq	r3, #0
    b754:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b758:	e1a00003 	mov	r0, r3
    b75c:	e24bd004 	sub	sp, fp, #4
    b760:	e8bd8800 	pop	{fp, pc}

0000b764 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b764:	e92d4800 	push	{fp, lr}
    b768:	e28db004 	add	fp, sp, #4
    b76c:	e24dd008 	sub	sp, sp, #8
    b770:	e50b0008 	str	r0, [fp, #-8]
    b774:	e50b100c 	str	r1, [fp, #-12]
    b778:	e51b3008 	ldr	r3, [fp, #-8]
    b77c:	e3530001 	cmp	r3, #1
    b780:	1a000006 	bne	b7a0 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74 (discriminator 1)
    b784:	e51b300c 	ldr	r3, [fp, #-12]
    b788:	e59f201c 	ldr	r2, [pc, #28]	; b7ac <_Z41__static_initialization_and_destruction_0ii+0x48>
    b78c:	e1530002 	cmp	r3, r2
    b790:	1a000002 	bne	b7a0 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:4
CTimer sTimer(hal::Timer_Base);
    b794:	e59f1014 	ldr	r1, [pc, #20]	; b7b0 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    b798:	e59f0014 	ldr	r0, [pc, #20]	; b7b4 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b79c:	ebffff68 	bl	b544 <_ZN6CTimerC1Em>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b7a0:	e320f000 	nop	{0}
    b7a4:	e24bd004 	sub	sp, fp, #4
    b7a8:	e8bd8800 	pop	{fp, pc}
    b7ac:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b7b0:	2000b400 	andcs	fp, r0, r0, lsl #8
    b7b4:	00010c24 	andeq	r0, r1, r4, lsr #24

0000b7b8 <_GLOBAL__sub_I_sTimer>:
_GLOBAL__sub_I_sTimer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b7b8:	e92d4800 	push	{fp, lr}
    b7bc:	e28db004 	add	fp, sp, #4
    b7c0:	e59f1008 	ldr	r1, [pc, #8]	; b7d0 <_GLOBAL__sub_I_sTimer+0x18>
    b7c4:	e3a00001 	mov	r0, #1
    b7c8:	ebffffe5 	bl	b764 <_Z41__static_initialization_and_destruction_0ii>
    b7cc:	e8bd8800 	pop	{fp, pc}
    b7d0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b7d4 <_ZN5CTRNGC1Ej>:
_ZN5CTRNGC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:8
CTRNG sTRNG(hal::TRNG_Base);

// tolik cisel ze zacatku generovani bude zahozeno - jsou "mene nahodna"
constexpr uint32_t TRNG_Warmup_Count = 0x40000;

CTRNG::CTRNG(uint32_t trng_reg_base)
    b7d4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b7d8:	e28db000 	add	fp, sp, #0
    b7dc:	e24dd00c 	sub	sp, sp, #12
    b7e0:	e50b0008 	str	r0, [fp, #-8]
    b7e4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:10
: mTrng_Regs(reinterpret_cast<volatile unsigned int* const>(trng_reg_base))
, mOpened(0)
    b7e8:	e51b200c 	ldr	r2, [fp, #-12]
    b7ec:	e51b3008 	ldr	r3, [fp, #-8]
    b7f0:	e5832000 	str	r2, [r3]
    b7f4:	e51b3008 	ldr	r3, [fp, #-8]
    b7f8:	e3a02000 	mov	r2, #0
    b7fc:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:13
{
    //
}
    b800:	e51b3008 	ldr	r3, [fp, #-8]
    b804:	e1a00003 	mov	r0, r3
    b808:	e28bd000 	add	sp, fp, #0
    b80c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b810:	e12fff1e 	bx	lr

0000b814 <_ZN5CTRNG4OpenEb>:
_ZN5CTRNG4OpenEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:16

bool CTRNG::Open(bool exclusive)
{
    b814:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b818:	e28db000 	add	fp, sp, #0
    b81c:	e24dd00c 	sub	sp, sp, #12
    b820:	e50b0008 	str	r0, [fp, #-8]
    b824:	e1a03001 	mov	r3, r1
    b828:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19
    // TODO: zamek

    if (mOpened && exclusive)
    b82c:	e51b3008 	ldr	r3, [fp, #-8]
    b830:	e5933004 	ldr	r3, [r3, #4]
    b834:	e3530000 	cmp	r3, #0
    b838:	0a000004 	beq	b850 <_ZN5CTRNG4OpenEb+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19 (discriminator 1)
    b83c:	e55b3009 	ldrb	r3, [fp, #-9]
    b840:	e3530000 	cmp	r3, #0
    b844:	0a000001 	beq	b850 <_ZN5CTRNG4OpenEb+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:20
        return false;
    b848:	e3a03000 	mov	r3, #0
    b84c:	ea000026 	b	b8ec <_ZN5CTRNG4OpenEb+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:22

    mOpened++;
    b850:	e51b3008 	ldr	r3, [fp, #-8]
    b854:	e5933004 	ldr	r3, [r3, #4]
    b858:	e2832001 	add	r2, r3, #1
    b85c:	e51b3008 	ldr	r3, [fp, #-8]
    b860:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:24

    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] = TRNG_Warmup_Count;
    b864:	e51b3008 	ldr	r3, [fp, #-8]
    b868:	e5933000 	ldr	r3, [r3]
    b86c:	e2833004 	add	r3, r3, #4
    b870:	e3a02701 	mov	r2, #262144	; 0x40000
    b874:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:25
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Int_Mask)] |=
    b878:	e51b3008 	ldr	r3, [fp, #-8]
    b87c:	e5933000 	ldr	r3, [r3]
    b880:	e2833010 	add	r3, r3, #16
    b884:	e5932000 	ldr	r2, [r3]
    b888:	e51b3008 	ldr	r3, [fp, #-8]
    b88c:	e5933000 	ldr	r3, [r3]
    b890:	e2833010 	add	r3, r3, #16
    b894:	e3822001 	orr	r2, r2, #1
    b898:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:27
    1; // vypneme preruseni pro TRNG (tak ho pouzivat nechceme)
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] |= 1; // zapneme TRNG
    b89c:	e51b3008 	ldr	r3, [fp, #-8]
    b8a0:	e5933000 	ldr	r3, [r3]
    b8a4:	e5932000 	ldr	r2, [r3]
    b8a8:	e51b3008 	ldr	r3, [fp, #-8]
    b8ac:	e5933000 	ldr	r3, [r3]
    b8b0:	e3822001 	orr	r2, r2, #1
    b8b4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:30

    // pockame, dokud TRNG nenageneruje warmup cisla (ty co zahazujeme)
    while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    b8b8:	e51b3008 	ldr	r3, [fp, #-8]
    b8bc:	e5933000 	ldr	r3, [r3]
    b8c0:	e2833004 	add	r3, r3, #4
    b8c4:	e5933000 	ldr	r3, [r3]
    b8c8:	e1a03c23 	lsr	r3, r3, #24
    b8cc:	e3530000 	cmp	r3, #0
    b8d0:	03a03001 	moveq	r3, #1
    b8d4:	13a03000 	movne	r3, #0
    b8d8:	e6ef3073 	uxtb	r3, r3
    b8dc:	e3530000 	cmp	r3, #0
    b8e0:	0a000000 	beq	b8e8 <_ZN5CTRNG4OpenEb+0xd4>
    b8e4:	eafffff3 	b	b8b8 <_ZN5CTRNG4OpenEb+0xa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:33
        ;

    return true;
    b8e8:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:34
}
    b8ec:	e1a00003 	mov	r0, r3
    b8f0:	e28bd000 	add	sp, fp, #0
    b8f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b8f8:	e12fff1e 	bx	lr

0000b8fc <_ZN5CTRNG5CloseEv>:
_ZN5CTRNG5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:37

void CTRNG::Close()
{
    b8fc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b900:	e28db000 	add	fp, sp, #0
    b904:	e24dd00c 	sub	sp, sp, #12
    b908:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:38
    if (!mOpened)
    b90c:	e51b3008 	ldr	r3, [fp, #-8]
    b910:	e5933004 	ldr	r3, [r3, #4]
    b914:	e3530000 	cmp	r3, #0
    b918:	0a00000d 	beq	b954 <_ZN5CTRNG5CloseEv+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:41
        return;

    mOpened--;
    b91c:	e51b3008 	ldr	r3, [fp, #-8]
    b920:	e5933004 	ldr	r3, [r3, #4]
    b924:	e2432001 	sub	r2, r3, #1
    b928:	e51b3008 	ldr	r3, [fp, #-8]
    b92c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:43

    if (mOpened == 0)
    b930:	e51b3008 	ldr	r3, [fp, #-8]
    b934:	e5933004 	ldr	r3, [r3, #4]
    b938:	e3530000 	cmp	r3, #0
    b93c:	1a000005 	bne	b958 <_ZN5CTRNG5CloseEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:44
        mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] = 0;
    b940:	e51b3008 	ldr	r3, [fp, #-8]
    b944:	e5933000 	ldr	r3, [r3]
    b948:	e3a02000 	mov	r2, #0
    b94c:	e5832000 	str	r2, [r3]
    b950:	ea000000 	b	b958 <_ZN5CTRNG5CloseEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:39
        return;
    b954:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:45
}
    b958:	e28bd000 	add	sp, fp, #0
    b95c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b960:	e12fff1e 	bx	lr

0000b964 <_ZNK5CTRNG9Is_OpenedEv>:
_ZNK5CTRNG9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:48

bool CTRNG::Is_Opened() const
{
    b964:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b968:	e28db000 	add	fp, sp, #0
    b96c:	e24dd00c 	sub	sp, sp, #12
    b970:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:49
    return (mOpened > 0);
    b974:	e51b3008 	ldr	r3, [fp, #-8]
    b978:	e5933004 	ldr	r3, [r3, #4]
    b97c:	e3530000 	cmp	r3, #0
    b980:	13a03001 	movne	r3, #1
    b984:	03a03000 	moveq	r3, #0
    b988:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:50
}
    b98c:	e1a00003 	mov	r0, r3
    b990:	e28bd000 	add	sp, fp, #0
    b994:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b998:	e12fff1e 	bx	lr

0000b99c <_ZN5CTRNG17Get_Random_NumberEv>:
_ZN5CTRNG17Get_Random_NumberEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:53

uint32_t CTRNG::Get_Random_Number()
{
    b99c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b9a0:	e28db000 	add	fp, sp, #0
    b9a4:	e24dd00c 	sub	sp, sp, #12
    b9a8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:54
    if (mOpened == 0)
    b9ac:	e51b3008 	ldr	r3, [fp, #-8]
    b9b0:	e5933004 	ldr	r3, [r3, #4]
    b9b4:	e3530000 	cmp	r3, #0
    b9b8:	1a000001 	bne	b9c4 <_ZN5CTRNG17Get_Random_NumberEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:55
        return 4; // https://xkcd.com/221/
    b9bc:	e3a03004 	mov	r3, #4
    b9c0:	ea000003 	b	b9d4 <_ZN5CTRNG17Get_Random_NumberEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:61

    // az budeme umet blokovat procesy, tak tady by melo byt opet cekani na entropii:
    // while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    //    ;

    return mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Data)];
    b9c4:	e51b3008 	ldr	r3, [fp, #-8]
    b9c8:	e5933000 	ldr	r3, [r3]
    b9cc:	e2833008 	add	r3, r3, #8
    b9d0:	e5933000 	ldr	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b9d4:	e1a00003 	mov	r0, r3
    b9d8:	e28bd000 	add	sp, fp, #0
    b9dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b9e0:	e12fff1e 	bx	lr

0000b9e4 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b9e4:	e92d4800 	push	{fp, lr}
    b9e8:	e28db004 	add	fp, sp, #4
    b9ec:	e24dd008 	sub	sp, sp, #8
    b9f0:	e50b0008 	str	r0, [fp, #-8]
    b9f4:	e50b100c 	str	r1, [fp, #-12]
    b9f8:	e51b3008 	ldr	r3, [fp, #-8]
    b9fc:	e3530001 	cmp	r3, #1
    ba00:	1a000006 	bne	ba20 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62 (discriminator 1)
    ba04:	e51b300c 	ldr	r3, [fp, #-12]
    ba08:	e59f201c 	ldr	r2, [pc, #28]	; ba2c <_Z41__static_initialization_and_destruction_0ii+0x48>
    ba0c:	e1530002 	cmp	r3, r2
    ba10:	1a000002 	bne	ba20 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:3
CTRNG sTRNG(hal::TRNG_Base);
    ba14:	e59f1014 	ldr	r1, [pc, #20]	; ba30 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    ba18:	e59f0014 	ldr	r0, [pc, #20]	; ba34 <_Z41__static_initialization_and_destruction_0ii+0x50>
    ba1c:	ebffff6c 	bl	b7d4 <_ZN5CTRNGC1Ej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    ba20:	e320f000 	nop	{0}
    ba24:	e24bd004 	sub	sp, fp, #4
    ba28:	e8bd8800 	pop	{fp, pc}
    ba2c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    ba30:	20104000 	andscs	r4, r0, r0
    ba34:	00010c2c 	andeq	r0, r1, ip, lsr #24

0000ba38 <_GLOBAL__sub_I_sTRNG>:
_GLOBAL__sub_I_sTRNG():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    ba38:	e92d4800 	push	{fp, lr}
    ba3c:	e28db004 	add	fp, sp, #4
    ba40:	e59f1008 	ldr	r1, [pc, #8]	; ba50 <_GLOBAL__sub_I_sTRNG+0x18>
    ba44:	e3a00001 	mov	r0, #1
    ba48:	ebffffe5 	bl	b9e4 <_Z41__static_initialization_and_destruction_0ii>
    ba4c:	e8bd8800 	pop	{fp, pc}
    ba50:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000ba54 <_ZN11CFilesystemC1Ev>:
_ZN11CFilesystemC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:10

#include <stdstring.h>

CFilesystem sFilesystem;

CFilesystem::CFilesystem()
    ba54:	e92d4800 	push	{fp, lr}
    ba58:	e28db004 	add	fp, sp, #4
    ba5c:	e24dd008 	sub	sp, sp, #8
    ba60:	e50b0008 	str	r0, [fp, #-8]
    ba64:	e51b3008 	ldr	r3, [fp, #-8]
    ba68:	e1a00003 	mov	r0, r3
    ba6c:	eb00020f 	bl	c2b0 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    ba70:	e51b3008 	ldr	r3, [fp, #-8]
    ba74:	e2833024 	add	r3, r3, #36	; 0x24
    ba78:	e1a00003 	mov	r0, r3
    ba7c:	eb00020b 	bl	c2b0 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    ba80:	e51b3008 	ldr	r3, [fp, #-8]
    ba84:	e2833048 	add	r3, r3, #72	; 0x48
    ba88:	e1a00003 	mov	r0, r3
    ba8c:	eb000207 	bl	c2b0 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    ba90:	e51b3008 	ldr	r3, [fp, #-8]
    ba94:	e283306c 	add	r3, r3, #108	; 0x6c
    ba98:	e1a00003 	mov	r0, r3
    ba9c:	eb000203 	bl	c2b0 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:14
{
    // inicializujeme zakladni strukturu (tedy vlastne obsah root adresare)

    mRoot.parent = nullptr;
    baa0:	e51b3008 	ldr	r3, [fp, #-8]
    baa4:	e3a02000 	mov	r2, #0
    baa8:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:15
    mRoot.next = nullptr;
    baac:	e51b3008 	ldr	r3, [fp, #-8]
    bab0:	e3a02000 	mov	r2, #0
    bab4:	e5832020 	str	r2, [r3, #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:16
    mRoot.children = &mRoot_Dev;
    bab8:	e51b3008 	ldr	r3, [fp, #-8]
    babc:	e2832024 	add	r2, r3, #36	; 0x24
    bac0:	e51b3008 	ldr	r3, [fp, #-8]
    bac4:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:17
    mRoot.isDirectory = true;
    bac8:	e51b3008 	ldr	r3, [fp, #-8]
    bacc:	e3a02001 	mov	r2, #1
    bad0:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:18
    mRoot.driver_idx = NoFilesystemDriver;
    bad4:	e51b3008 	ldr	r3, [fp, #-8]
    bad8:	e3e02000 	mvn	r2, #0
    badc:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:19
    mRoot.name[0] = '\0';
    bae0:	e51b3008 	ldr	r3, [fp, #-8]
    bae4:	e3a02000 	mov	r2, #0
    bae8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:21

    mRoot_Dev.parent = &mRoot;
    baec:	e51b2008 	ldr	r2, [fp, #-8]
    baf0:	e51b3008 	ldr	r3, [fp, #-8]
    baf4:	e583203c 	str	r2, [r3, #60]	; 0x3c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:22
    mRoot_Dev.children = nullptr;
    baf8:	e51b3008 	ldr	r3, [fp, #-8]
    bafc:	e3a02000 	mov	r2, #0
    bb00:	e5832040 	str	r2, [r3, #64]	; 0x40
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:23
    mRoot_Dev.next = &mRoot_Sys;
    bb04:	e51b3008 	ldr	r3, [fp, #-8]
    bb08:	e2832048 	add	r2, r3, #72	; 0x48
    bb0c:	e51b3008 	ldr	r3, [fp, #-8]
    bb10:	e5832044 	str	r2, [r3, #68]	; 0x44
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:24
    mRoot_Dev.isDirectory = true;
    bb14:	e51b3008 	ldr	r3, [fp, #-8]
    bb18:	e3a02001 	mov	r2, #1
    bb1c:	e5c32034 	strb	r2, [r3, #52]	; 0x34
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:25
    mRoot_Dev.driver_idx = NoFilesystemDriver;
    bb20:	e51b3008 	ldr	r3, [fp, #-8]
    bb24:	e3e02000 	mvn	r2, #0
    bb28:	e5832038 	str	r2, [r3, #56]	; 0x38
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:26
    strncpy(mRoot_Dev.name, "DEV", 4);
    bb2c:	e51b3008 	ldr	r3, [fp, #-8]
    bb30:	e2833024 	add	r3, r3, #36	; 0x24
    bb34:	e3a02004 	mov	r2, #4
    bb38:	e59f10c0 	ldr	r1, [pc, #192]	; bc00 <_ZN11CFilesystemC1Ev+0x1ac>
    bb3c:	e1a00003 	mov	r0, r3
    bb40:	eb000eac 	bl	f5f8 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:28

    mRoot_Sys.parent = &mRoot;
    bb44:	e51b2008 	ldr	r2, [fp, #-8]
    bb48:	e51b3008 	ldr	r3, [fp, #-8]
    bb4c:	e5832060 	str	r2, [r3, #96]	; 0x60
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:29
    mRoot_Sys.children = nullptr;
    bb50:	e51b3008 	ldr	r3, [fp, #-8]
    bb54:	e3a02000 	mov	r2, #0
    bb58:	e5832064 	str	r2, [r3, #100]	; 0x64
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:30
    mRoot_Sys.next = &mRoot_Mnt;
    bb5c:	e51b3008 	ldr	r3, [fp, #-8]
    bb60:	e283206c 	add	r2, r3, #108	; 0x6c
    bb64:	e51b3008 	ldr	r3, [fp, #-8]
    bb68:	e5832068 	str	r2, [r3, #104]	; 0x68
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:31
    mRoot_Sys.isDirectory = true;
    bb6c:	e51b3008 	ldr	r3, [fp, #-8]
    bb70:	e3a02001 	mov	r2, #1
    bb74:	e5c32058 	strb	r2, [r3, #88]	; 0x58
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:32
    mRoot_Sys.driver_idx = NoFilesystemDriver;
    bb78:	e51b3008 	ldr	r3, [fp, #-8]
    bb7c:	e3e02000 	mvn	r2, #0
    bb80:	e583205c 	str	r2, [r3, #92]	; 0x5c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:33
    strncpy(mRoot_Sys.name, "SYS", 4);
    bb84:	e51b3008 	ldr	r3, [fp, #-8]
    bb88:	e2833048 	add	r3, r3, #72	; 0x48
    bb8c:	e3a02004 	mov	r2, #4
    bb90:	e59f106c 	ldr	r1, [pc, #108]	; bc04 <_ZN11CFilesystemC1Ev+0x1b0>
    bb94:	e1a00003 	mov	r0, r3
    bb98:	eb000e96 	bl	f5f8 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:35

    mRoot_Mnt.parent = &mRoot;
    bb9c:	e51b2008 	ldr	r2, [fp, #-8]
    bba0:	e51b3008 	ldr	r3, [fp, #-8]
    bba4:	e5832084 	str	r2, [r3, #132]	; 0x84
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:36
    mRoot_Mnt.children = nullptr;
    bba8:	e51b3008 	ldr	r3, [fp, #-8]
    bbac:	e3a02000 	mov	r2, #0
    bbb0:	e5832088 	str	r2, [r3, #136]	; 0x88
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:37
    mRoot_Mnt.next = nullptr;
    bbb4:	e51b3008 	ldr	r3, [fp, #-8]
    bbb8:	e3a02000 	mov	r2, #0
    bbbc:	e583208c 	str	r2, [r3, #140]	; 0x8c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:38
    mRoot_Mnt.isDirectory = true;
    bbc0:	e51b3008 	ldr	r3, [fp, #-8]
    bbc4:	e3a02001 	mov	r2, #1
    bbc8:	e5c3207c 	strb	r2, [r3, #124]	; 0x7c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:39
    mRoot_Mnt.driver_idx = NoFilesystemDriver;
    bbcc:	e51b3008 	ldr	r3, [fp, #-8]
    bbd0:	e3e02000 	mvn	r2, #0
    bbd4:	e5832080 	str	r2, [r3, #128]	; 0x80
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:40
    strncpy(mRoot_Mnt.name, "MNT", 4);
    bbd8:	e51b3008 	ldr	r3, [fp, #-8]
    bbdc:	e283306c 	add	r3, r3, #108	; 0x6c
    bbe0:	e3a02004 	mov	r2, #4
    bbe4:	e59f101c 	ldr	r1, [pc, #28]	; bc08 <_ZN11CFilesystemC1Ev+0x1b4>
    bbe8:	e1a00003 	mov	r0, r3
    bbec:	eb000e81 	bl	f5f8 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:41
}
    bbf0:	e51b3008 	ldr	r3, [fp, #-8]
    bbf4:	e1a00003 	mov	r0, r3
    bbf8:	e24bd004 	sub	sp, fp, #4
    bbfc:	e8bd8800 	pop	{fp, pc}
    bc00:	000101dc 	ldrdeq	r0, [r1], -ip
    bc04:	000101e0 	andeq	r0, r1, r0, ror #3
    bc08:	000101e4 	andeq	r0, r1, r4, ror #3

0000bc0c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>:
_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:44

CFilesystem::TFS_Tree_Node* CFilesystem::TFS_Tree_Node::Find_Child(const char* name)
{
    bc0c:	e92d4800 	push	{fp, lr}
    bc10:	e28db004 	add	fp, sp, #4
    bc14:	e24dd010 	sub	sp, sp, #16
    bc18:	e50b0010 	str	r0, [fp, #-16]
    bc1c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:45
    TFS_Tree_Node* child = children;
    bc20:	e51b3010 	ldr	r3, [fp, #-16]
    bc24:	e593301c 	ldr	r3, [r3, #28]
    bc28:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47

    while (child != nullptr)
    bc2c:	e51b3008 	ldr	r3, [fp, #-8]
    bc30:	e3530000 	cmp	r3, #0
    bc34:	0a000011 	beq	bc80 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:49
    {
        if (strncmp(child->name, name, MaxFilenameLength) == 0)
    bc38:	e51b3008 	ldr	r3, [fp, #-8]
    bc3c:	e3a02010 	mov	r2, #16
    bc40:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    bc44:	e1a00003 	mov	r0, r3
    bc48:	eb000e9a 	bl	f6b8 <_Z7strncmpPKcS0_i>
    bc4c:	e1a03000 	mov	r3, r0
    bc50:	e3530000 	cmp	r3, #0
    bc54:	03a03001 	moveq	r3, #1
    bc58:	13a03000 	movne	r3, #0
    bc5c:	e6ef3073 	uxtb	r3, r3
    bc60:	e3530000 	cmp	r3, #0
    bc64:	0a000001 	beq	bc70 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:50
            return child;
    bc68:	e51b3008 	ldr	r3, [fp, #-8]
    bc6c:	ea000004 	b	bc84 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:52

        child = child->next;
    bc70:	e51b3008 	ldr	r3, [fp, #-8]
    bc74:	e5933020 	ldr	r3, [r3, #32]
    bc78:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bc7c:	eaffffea 	b	bc2c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:55
    }

    return nullptr;
    bc80:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:56
}
    bc84:	e1a00003 	mov	r0, r3
    bc88:	e24bd004 	sub	sp, fp, #4
    bc8c:	e8bd8800 	pop	{fp, pc}

0000bc90 <_ZN11CFilesystem10InitializeEv>:
_ZN11CFilesystem10InitializeEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:59

void CFilesystem::Initialize()
{
    bc90:	e92d4800 	push	{fp, lr}
    bc94:	e28db004 	add	fp, sp, #4
    bc98:	e24dd030 	sub	sp, sp, #48	; 0x30
    bc9c:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:60
    sMonitor << "Initializing the FS\n";
    bca0:	e59f1310 	ldr	r1, [pc, #784]	; bfb8 <_ZN11CFilesystem10InitializeEv+0x328>
    bca4:	e59f0310 	ldr	r0, [pc, #784]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    bca8:	ebfff5e7 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67
    char tmpName[MaxFilenameLength];
    const char* mpPtr;

    int i, j;

    for (i = 0; i < gFS_Drivers_Count; i++)
    bcac:	e3a03000 	mov	r3, #0
    bcb0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 1)
    bcb4:	e51b200c 	ldr	r2, [fp, #-12]
    bcb8:	e59f3300 	ldr	r3, [pc, #768]	; bfc0 <_ZN11CFilesystem10InitializeEv+0x330>
    bcbc:	e5933000 	ldr	r3, [r3]
    bcc0:	e1520003 	cmp	r2, r3
    bcc4:	2a0000b4 	bcs	bf9c <_ZN11CFilesystem10InitializeEv+0x30c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:69
    {
        const TFS_Driver* ptr = &gFS_Drivers[i];
    bcc8:	e51b200c 	ldr	r2, [fp, #-12]
    bccc:	e1a03002 	mov	r3, r2
    bcd0:	e1a03083 	lsl	r3, r3, #1
    bcd4:	e0833002 	add	r3, r3, r2
    bcd8:	e1a03183 	lsl	r3, r3, #3
    bcdc:	e59f22e0 	ldr	r2, [pc, #736]	; bfc4 <_ZN11CFilesystem10InitializeEv+0x334>
    bce0:	e0833002 	add	r3, r3, r2
    bce4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:71

        mpPtr = ptr->mountPoint;
    bce8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bcec:	e5933010 	ldr	r3, [r3, #16]
    bcf0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:73

        sMonitor << "mount point = " << mpPtr << "\n";
    bcf4:	e59f12cc 	ldr	r1, [pc, #716]	; bfc8 <_ZN11CFilesystem10InitializeEv+0x338>
    bcf8:	e59f02bc 	ldr	r0, [pc, #700]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    bcfc:	ebfff5d2 	bl	944c <_ZN8CMonitorlsEPKc>
    bd00:	e1a03000 	mov	r3, r0
    bd04:	e51b1008 	ldr	r1, [fp, #-8]
    bd08:	e1a00003 	mov	r0, r3
    bd0c:	ebfff5ce 	bl	944c <_ZN8CMonitorlsEPKc>
    bd10:	e1a03000 	mov	r3, r0
    bd14:	e59f12b0 	ldr	r1, [pc, #688]	; bfcc <_ZN11CFilesystem10InitializeEv+0x33c>
    bd18:	e1a00003 	mov	r0, r3
    bd1c:	ebfff5ca 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:75

        TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bd20:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    bd24:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    bd28:	e3a03000 	mov	r3, #0
    bd2c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77

        while (mpPtr[0] != '\0')
    bd30:	e51b3008 	ldr	r3, [fp, #-8]
    bd34:	e5d33000 	ldrb	r3, [r3]
    bd38:	e3530000 	cmp	r3, #0
    bd3c:	0a000083 	beq	bf50 <_ZN11CFilesystem10InitializeEv+0x2c0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79
        {
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bd40:	e3a03000 	mov	r3, #0
    bd44:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 1)
    bd48:	e51b3010 	ldr	r3, [fp, #-16]
    bd4c:	e353007f 	cmp	r3, #127	; 0x7f
    bd50:	8a00001e 	bhi	bdd0 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 2)
    bd54:	e51b3010 	ldr	r3, [fp, #-16]
    bd58:	e51b2008 	ldr	r2, [fp, #-8]
    bd5c:	e0823003 	add	r3, r2, r3
    bd60:	e5d33000 	ldrb	r3, [r3]
    bd64:	e3530000 	cmp	r3, #0
    bd68:	0a000018 	beq	bdd0 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81
            {
                if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bd6c:	e51b3010 	ldr	r3, [fp, #-16]
    bd70:	e51b2008 	ldr	r2, [fp, #-8]
    bd74:	e0823003 	add	r3, r2, r3
    bd78:	e5d33000 	ldrb	r3, [r3]
    bd7c:	e353003a 	cmp	r3, #58	; 0x3a
    bd80:	0a000012 	beq	bdd0 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81 (discriminator 1)
    bd84:	e51b3010 	ldr	r3, [fp, #-16]
    bd88:	e51b2008 	ldr	r2, [fp, #-8]
    bd8c:	e0823003 	add	r3, r2, r3
    bd90:	e5d33000 	ldrb	r3, [r3]
    bd94:	e353002f 	cmp	r3, #47	; 0x2f
    bd98:	0a00000c 	beq	bdd0 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:84 (discriminator 3)
                    break;

                tmpName[j] = mpPtr[j];
    bd9c:	e51b3010 	ldr	r3, [fp, #-16]
    bda0:	e51b2008 	ldr	r2, [fp, #-8]
    bda4:	e0823003 	add	r3, r2, r3
    bda8:	e5d31000 	ldrb	r1, [r3]
    bdac:	e24b202c 	sub	r2, fp, #44	; 0x2c
    bdb0:	e51b3010 	ldr	r3, [fp, #-16]
    bdb4:	e0823003 	add	r3, r2, r3
    bdb8:	e1a02001 	mov	r2, r1
    bdbc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 3)
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bdc0:	e51b3010 	ldr	r3, [fp, #-16]
    bdc4:	e2833001 	add	r3, r3, #1
    bdc8:	e50b3010 	str	r3, [fp, #-16]
    bdcc:	eaffffdd 	b	bd48 <_ZN11CFilesystem10InitializeEv+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:87
            }

            tmpName[j] = '\0';
    bdd0:	e24b202c 	sub	r2, fp, #44	; 0x2c
    bdd4:	e51b3010 	ldr	r3, [fp, #-16]
    bdd8:	e0823003 	add	r3, r2, r3
    bddc:	e3a02000 	mov	r2, #0
    bde0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:89

            mpPtr += j;
    bde4:	e51b3010 	ldr	r3, [fp, #-16]
    bde8:	e51b2008 	ldr	r2, [fp, #-8]
    bdec:	e0823003 	add	r3, r2, r3
    bdf0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:90
            if (mpPtr[0] != '\0')
    bdf4:	e51b3008 	ldr	r3, [fp, #-8]
    bdf8:	e5d33000 	ldrb	r3, [r3]
    bdfc:	e3530000 	cmp	r3, #0
    be00:	0a000002 	beq	be10 <_ZN11CFilesystem10InitializeEv+0x180>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:92
            {
                mpPtr += 1;
    be04:	e51b3008 	ldr	r3, [fp, #-8]
    be08:	e2833001 	add	r3, r3, #1
    be0c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:95
            }

            sMonitor << "finding child = " << tmpName << '\n';
    be10:	e59f11b8 	ldr	r1, [pc, #440]	; bfd0 <_ZN11CFilesystem10InitializeEv+0x340>
    be14:	e59f01a0 	ldr	r0, [pc, #416]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    be18:	ebfff58b 	bl	944c <_ZN8CMonitorlsEPKc>
    be1c:	e1a02000 	mov	r2, r0
    be20:	e24b302c 	sub	r3, fp, #44	; 0x2c
    be24:	e1a01003 	mov	r1, r3
    be28:	e1a00002 	mov	r0, r2
    be2c:	ebfff586 	bl	944c <_ZN8CMonitorlsEPKc>
    be30:	e1a03000 	mov	r3, r0
    be34:	e3a0100a 	mov	r1, #10
    be38:	e1a00003 	mov	r0, r3
    be3c:	ebfff558 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:97

            tmpNode = node->Find_Child(tmpName);
    be40:	e24b302c 	sub	r3, fp, #44	; 0x2c
    be44:	e1a01003 	mov	r1, r3
    be48:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    be4c:	ebffff6e 	bl	bc0c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>
    be50:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:99
            // uzel jsme nasli - pouzijeme ho pro dalsi prohledavani
            if (tmpNode)
    be54:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be58:	e3530000 	cmp	r3, #0
    be5c:	0a00000e 	beq	be9c <_ZN11CFilesystem10InitializeEv+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:101
            {
                node = tmpNode;
    be60:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be64:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:102
                sMonitor << "child " << tmpName << " was found\n";
    be68:	e59f1164 	ldr	r1, [pc, #356]	; bfd4 <_ZN11CFilesystem10InitializeEv+0x344>
    be6c:	e59f0148 	ldr	r0, [pc, #328]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    be70:	ebfff575 	bl	944c <_ZN8CMonitorlsEPKc>
    be74:	e1a02000 	mov	r2, r0
    be78:	e24b302c 	sub	r3, fp, #44	; 0x2c
    be7c:	e1a01003 	mov	r1, r3
    be80:	e1a00002 	mov	r0, r2
    be84:	ebfff570 	bl	944c <_ZN8CMonitorlsEPKc>
    be88:	e1a03000 	mov	r3, r0
    be8c:	e59f1144 	ldr	r1, [pc, #324]	; bfd8 <_ZN11CFilesystem10InitializeEv+0x348>
    be90:	e1a00003 	mov	r0, r3
    be94:	ebfff56c 	bl	944c <_ZN8CMonitorlsEPKc>
    be98:	eaffffa4 	b	bd30 <_ZN11CFilesystem10InitializeEv+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:107
            }
            // uzel jsme nenasli - vytvorime ho a pouzijeme ho pro dalsi prohledavani
            else
            {
                tmpNode = sKernelMem.Alloc<TFS_Tree_Node>();
    be9c:	e59f0138 	ldr	r0, [pc, #312]	; bfdc <_ZN11CFilesystem10InitializeEv+0x34c>
    bea0:	eb000111 	bl	c2ec <_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v>
    bea4:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:108
                strncpy(tmpNode->name, tmpName, MaxFilenameLength);
    bea8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    beac:	e24b102c 	sub	r1, fp, #44	; 0x2c
    beb0:	e3a02010 	mov	r2, #16
    beb4:	e1a00003 	mov	r0, r3
    beb8:	eb000dce 	bl	f5f8 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:109
                tmpNode->parent = node;
    bebc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bec0:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    bec4:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:110
                tmpNode->children = nullptr;
    bec8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    becc:	e3a02000 	mov	r2, #0
    bed0:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:111
                tmpNode->driver_idx = NoFilesystemDriver; // zatim - mozna se neco dole zmeni
    bed4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bed8:	e3e02000 	mvn	r2, #0
    bedc:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:112
                tmpNode->isDirectory = true;
    bee0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bee4:	e3a02001 	mov	r2, #1
    bee8:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:113
                tmpNode->next = node->children;
    beec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    bef0:	e593201c 	ldr	r2, [r3, #28]
    bef4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bef8:	e5832020 	str	r2, [r3, #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:114
                node->children = tmpNode;
    befc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    bf00:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    bf04:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:116

                node = tmpNode;
    bf08:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bf0c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:118

                sMonitor << "child was not found\n";
    bf10:	e59f10c8 	ldr	r1, [pc, #200]	; bfe0 <_ZN11CFilesystem10InitializeEv+0x350>
    bf14:	e59f00a0 	ldr	r0, [pc, #160]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    bf18:	ebfff54b 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:119
                sMonitor << "creating: " << node->name << "\n";
    bf1c:	e59f10c0 	ldr	r1, [pc, #192]	; bfe4 <_ZN11CFilesystem10InitializeEv+0x354>
    bf20:	e59f0094 	ldr	r0, [pc, #148]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    bf24:	ebfff548 	bl	944c <_ZN8CMonitorlsEPKc>
    bf28:	e1a02000 	mov	r2, r0
    bf2c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    bf30:	e1a01003 	mov	r1, r3
    bf34:	e1a00002 	mov	r0, r2
    bf38:	ebfff543 	bl	944c <_ZN8CMonitorlsEPKc>
    bf3c:	e1a03000 	mov	r3, r0
    bf40:	e59f1084 	ldr	r1, [pc, #132]	; bfcc <_ZN11CFilesystem10InitializeEv+0x33c>
    bf44:	e1a00003 	mov	r0, r3
    bf48:	ebfff53f 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    bf4c:	eaffff77 	b	bd30 <_ZN11CFilesystem10InitializeEv+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:126
        }

        // 'node' obsahuje uzel posledniho clanku mountpointu - tedy vlastni mountpoint

        // mountpoint nesmi byt uz zabrany
        if (node->driver_idx != NoFilesystemDriver)
    bf50:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    bf54:	e5933014 	ldr	r3, [r3, #20]
    bf58:	e3730001 	cmn	r3, #1
    bf5c:	1a000012 	bne	bfac <_ZN11CFilesystem10InitializeEv+0x31c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:129 (discriminator 2)
            return;

        node->driver_idx = i; // timto predavame veskere manipulace driveru
    bf60:	e51b200c 	ldr	r2, [fp, #-12]
    bf64:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    bf68:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:132 (discriminator 2)

        // dame driveru vedet, ze jsme ho zaregistrovali
        ptr->driver->On_Register();
    bf6c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bf70:	e5932014 	ldr	r2, [r3, #20]
    bf74:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bf78:	e5933014 	ldr	r3, [r3, #20]
    bf7c:	e5933000 	ldr	r3, [r3]
    bf80:	e5933000 	ldr	r3, [r3]
    bf84:	e1a00002 	mov	r0, r2
    bf88:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 2)
    for (i = 0; i < gFS_Drivers_Count; i++)
    bf8c:	e51b300c 	ldr	r3, [fp, #-12]
    bf90:	e2833001 	add	r3, r3, #1
    bf94:	e50b300c 	str	r3, [fp, #-12]
    bf98:	eaffff45 	b	bcb4 <_ZN11CFilesystem10InitializeEv+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:135
    }

    sMonitor << "Finished FS initialization\n\n";
    bf9c:	e59f1044 	ldr	r1, [pc, #68]	; bfe8 <_ZN11CFilesystem10InitializeEv+0x358>
    bfa0:	e59f0014 	ldr	r0, [pc, #20]	; bfbc <_ZN11CFilesystem10InitializeEv+0x32c>
    bfa4:	ebfff528 	bl	944c <_ZN8CMonitorlsEPKc>
    bfa8:	ea000000 	b	bfb0 <_ZN11CFilesystem10InitializeEv+0x320>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:127
            return;
    bfac:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:136
}
    bfb0:	e24bd004 	sub	sp, fp, #4
    bfb4:	e8bd8800 	pop	{fp, pc}
    bfb8:	000101e8 	andeq	r0, r1, r8, ror #3
    bfbc:	00010bd4 	ldrdeq	r0, [r1], -r4
    bfc0:	000103bc 			; <UNDEFINED> instruction: 0x000103bc
    bfc4:	0001032c 	andeq	r0, r1, ip, lsr #6
    bfc8:	00010200 	andeq	r0, r1, r0, lsl #4
    bfcc:	00010210 	andeq	r0, r1, r0, lsl r2
    bfd0:	00010214 	andeq	r0, r1, r4, lsl r2
    bfd4:	00010228 	andeq	r0, r1, r8, lsr #4
    bfd8:	00010230 	andeq	r0, r1, r0, lsr r2
    bfdc:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    bfe0:	0001023c 	andeq	r0, r1, ip, lsr r2
    bfe4:	00010254 	andeq	r0, r1, r4, asr r2
    bfe8:	00010260 	andeq	r0, r1, r0, ror #4

0000bfec <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode>:
_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:139

IFile* CFilesystem::Open(const char* path, NFile_Open_Mode mode)
{
    bfec:	e92d4800 	push	{fp, lr}
    bff0:	e28db004 	add	fp, sp, #4
    bff4:	e24dd030 	sub	sp, sp, #48	; 0x30
    bff8:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    bffc:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
    c000:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:142
    char tmpName[MaxFilenameLength];
    const char* mpPtr;
    sMonitor << "opening file: " << path << "\n";
    c004:	e59f1228 	ldr	r1, [pc, #552]	; c234 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x248>
    c008:	e59f0228 	ldr	r0, [pc, #552]	; c238 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x24c>
    c00c:	ebfff50e 	bl	944c <_ZN8CMonitorlsEPKc>
    c010:	e1a03000 	mov	r3, r0
    c014:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    c018:	e1a00003 	mov	r0, r3
    c01c:	ebfff50a 	bl	944c <_ZN8CMonitorlsEPKc>
    c020:	e1a03000 	mov	r3, r0
    c024:	e59f1210 	ldr	r1, [pc, #528]	; c23c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    c028:	e1a00003 	mov	r0, r3
    c02c:	ebfff506 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:146

    int j;

    mpPtr = path;
    c030:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    c034:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:148

    TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    c038:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    c03c:	e50b3010 	str	r3, [fp, #-16]
    c040:	e3a03000 	mov	r3, #0
    c044:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150

    while (mpPtr[0] != '\0')
    c048:	e51b3008 	ldr	r3, [fp, #-8]
    c04c:	e5d33000 	ldrb	r3, [r3]
    c050:	e3530000 	cmp	r3, #0
    c054:	0a000067 	beq	c1f8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152
    {
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c058:	e3a03000 	mov	r3, #0
    c05c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 1)
    c060:	e51b300c 	ldr	r3, [fp, #-12]
    c064:	e353007f 	cmp	r3, #127	; 0x7f
    c068:	8a00001e 	bhi	c0e8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 2)
    c06c:	e51b300c 	ldr	r3, [fp, #-12]
    c070:	e51b2008 	ldr	r2, [fp, #-8]
    c074:	e0823003 	add	r3, r2, r3
    c078:	e5d33000 	ldrb	r3, [r3]
    c07c:	e3530000 	cmp	r3, #0
    c080:	0a000018 	beq	c0e8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154
        {
            if (mpPtr[j] == ':' || mpPtr[j] == '/')
    c084:	e51b300c 	ldr	r3, [fp, #-12]
    c088:	e51b2008 	ldr	r2, [fp, #-8]
    c08c:	e0823003 	add	r3, r2, r3
    c090:	e5d33000 	ldrb	r3, [r3]
    c094:	e353003a 	cmp	r3, #58	; 0x3a
    c098:	0a000012 	beq	c0e8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154 (discriminator 1)
    c09c:	e51b300c 	ldr	r3, [fp, #-12]
    c0a0:	e51b2008 	ldr	r2, [fp, #-8]
    c0a4:	e0823003 	add	r3, r2, r3
    c0a8:	e5d33000 	ldrb	r3, [r3]
    c0ac:	e353002f 	cmp	r3, #47	; 0x2f
    c0b0:	0a00000c 	beq	c0e8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:157 (discriminator 3)
                break;

            tmpName[j] = mpPtr[j];
    c0b4:	e51b300c 	ldr	r3, [fp, #-12]
    c0b8:	e51b2008 	ldr	r2, [fp, #-8]
    c0bc:	e0823003 	add	r3, r2, r3
    c0c0:	e5d31000 	ldrb	r1, [r3]
    c0c4:	e24b2024 	sub	r2, fp, #36	; 0x24
    c0c8:	e51b300c 	ldr	r3, [fp, #-12]
    c0cc:	e0823003 	add	r3, r2, r3
    c0d0:	e1a02001 	mov	r2, r1
    c0d4:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 3)
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c0d8:	e51b300c 	ldr	r3, [fp, #-12]
    c0dc:	e2833001 	add	r3, r3, #1
    c0e0:	e50b300c 	str	r3, [fp, #-12]
    c0e4:	eaffffdd 	b	c060 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:160
        }

        tmpName[j] = '\0';
    c0e8:	e24b2024 	sub	r2, fp, #36	; 0x24
    c0ec:	e51b300c 	ldr	r3, [fp, #-12]
    c0f0:	e0823003 	add	r3, r2, r3
    c0f4:	e3a02000 	mov	r2, #0
    c0f8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:162

        mpPtr += j;
    c0fc:	e51b300c 	ldr	r3, [fp, #-12]
    c100:	e51b2008 	ldr	r2, [fp, #-8]
    c104:	e0823003 	add	r3, r2, r3
    c108:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:163
        if (mpPtr[0] != '\0')
    c10c:	e51b3008 	ldr	r3, [fp, #-8]
    c110:	e5d33000 	ldrb	r3, [r3]
    c114:	e3530000 	cmp	r3, #0
    c118:	0a000002 	beq	c128 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:165
        {
            mpPtr += 1;
    c11c:	e51b3008 	ldr	r3, [fp, #-8]
    c120:	e2833001 	add	r3, r3, #1
    c124:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:168
        }

        tmpNode = node->Find_Child(tmpName);
    c128:	e24b3024 	sub	r3, fp, #36	; 0x24
    c12c:	e1a01003 	mov	r1, r3
    c130:	e51b0010 	ldr	r0, [fp, #-16]
    c134:	ebfffeb4 	bl	bc0c <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>
    c138:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:169
        if (tmpNode)
    c13c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c140:	e3530000 	cmp	r3, #0
    c144:	0a000001 	beq	c150 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:170
            node = tmpNode;
    c148:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c14c:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:172

        if (tmpNode->driver_idx != NoFilesystemDriver)
    c150:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c154:	e5933014 	ldr	r3, [r3, #20]
    c158:	e3730001 	cmn	r3, #1
    c15c:	0a00001d 	beq	c1d8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x1ec>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:174
        {
            return gFS_Drivers[tmpNode->driver_idx].driver->Open_File(mpPtr, mode);
    c160:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c164:	e5932014 	ldr	r2, [r3, #20]
    c168:	e59f10d0 	ldr	r1, [pc, #208]	; c240 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x254>
    c16c:	e1a03002 	mov	r3, r2
    c170:	e1a03083 	lsl	r3, r3, #1
    c174:	e0833002 	add	r3, r3, r2
    c178:	e1a03183 	lsl	r3, r3, #3
    c17c:	e0813003 	add	r3, r1, r3
    c180:	e2833014 	add	r3, r3, #20
    c184:	e5930000 	ldr	r0, [r3]
    c188:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c18c:	e5932014 	ldr	r2, [r3, #20]
    c190:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c194:	e5932014 	ldr	r2, [r3, #20]
    c198:	e59f10a0 	ldr	r1, [pc, #160]	; c240 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x254>
    c19c:	e1a03002 	mov	r3, r2
    c1a0:	e1a03083 	lsl	r3, r3, #1
    c1a4:	e0833002 	add	r3, r3, r2
    c1a8:	e1a03183 	lsl	r3, r3, #3
    c1ac:	e0813003 	add	r3, r1, r3
    c1b0:	e2833014 	add	r3, r3, #20
    c1b4:	e5933000 	ldr	r3, [r3]
    c1b8:	e5933000 	ldr	r3, [r3]
    c1bc:	e2833004 	add	r3, r3, #4
    c1c0:	e5933000 	ldr	r3, [r3]
    c1c4:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
    c1c8:	e51b1008 	ldr	r1, [fp, #-8]
    c1cc:	e12fff33 	blx	r3
    c1d0:	e1a03000 	mov	r3, r0
    c1d4:	ea000013 	b	c228 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x23c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:176
        }
        else if (!tmpNode->isDirectory)
    c1d8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c1dc:	e5d33010 	ldrb	r3, [r3, #16]
    c1e0:	e2233001 	eor	r3, r3, #1
    c1e4:	e6ef3073 	uxtb	r3, r3
    c1e8:	e3530000 	cmp	r3, #0
    c1ec:	1a000000 	bne	c1f4 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x208>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    c1f0:	eaffff94 	b	c048 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:177
            break;
    c1f4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:180
    }

    sMonitor << "failed to open: " << path << "\n";
    c1f8:	e59f1044 	ldr	r1, [pc, #68]	; c244 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x258>
    c1fc:	e59f0034 	ldr	r0, [pc, #52]	; c238 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x24c>
    c200:	ebfff491 	bl	944c <_ZN8CMonitorlsEPKc>
    c204:	e1a03000 	mov	r3, r0
    c208:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    c20c:	e1a00003 	mov	r0, r3
    c210:	ebfff48d 	bl	944c <_ZN8CMonitorlsEPKc>
    c214:	e1a03000 	mov	r3, r0
    c218:	e59f101c 	ldr	r1, [pc, #28]	; c23c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    c21c:	e1a00003 	mov	r0, r3
    c220:	ebfff489 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:183

    // zadny filesystem se tohoto uzlu "neujal" -> soubor neexistuje
    return nullptr;
    c224:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
}
    c228:	e1a00003 	mov	r0, r3
    c22c:	e24bd004 	sub	sp, fp, #4
    c230:	e8bd8800 	pop	{fp, pc}
    c234:	00010280 	andeq	r0, r1, r0, lsl #5
    c238:	00010bd4 	ldrdeq	r0, [r1], -r4
    c23c:	00010210 	andeq	r0, r1, r0, lsl r2
    c240:	0001032c 	andeq	r0, r1, ip, lsr #6
    c244:	00010290 	muleq	r1, r0, r2

0000c248 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c248:	e92d4800 	push	{fp, lr}
    c24c:	e28db004 	add	fp, sp, #4
    c250:	e24dd008 	sub	sp, sp, #8
    c254:	e50b0008 	str	r0, [fp, #-8]
    c258:	e50b100c 	str	r1, [fp, #-12]
    c25c:	e51b3008 	ldr	r3, [fp, #-8]
    c260:	e3530001 	cmp	r3, #1
    c264:	1a000005 	bne	c280 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
    c268:	e51b300c 	ldr	r3, [fp, #-12]
    c26c:	e59f2018 	ldr	r2, [pc, #24]	; c28c <_Z41__static_initialization_and_destruction_0ii+0x44>
    c270:	e1530002 	cmp	r3, r2
    c274:	1a000001 	bne	c280 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:8
CFilesystem sFilesystem;
    c278:	e59f0010 	ldr	r0, [pc, #16]	; c290 <_Z41__static_initialization_and_destruction_0ii+0x48>
    c27c:	ebfffdf4 	bl	ba54 <_ZN11CFilesystemC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
}
    c280:	e320f000 	nop	{0}
    c284:	e24bd004 	sub	sp, fp, #4
    c288:	e8bd8800 	pop	{fp, pc}
    c28c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    c290:	00010c34 	andeq	r0, r1, r4, lsr ip

0000c294 <_GLOBAL__sub_I_sFilesystem>:
_GLOBAL__sub_I_sFilesystem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c294:	e92d4800 	push	{fp, lr}
    c298:	e28db004 	add	fp, sp, #4
    c29c:	e59f1008 	ldr	r1, [pc, #8]	; c2ac <_GLOBAL__sub_I_sFilesystem+0x18>
    c2a0:	e3a00001 	mov	r0, #1
    c2a4:	ebffffe7 	bl	c248 <_Z41__static_initialization_and_destruction_0ii>
    c2a8:	e8bd8800 	pop	{fp, pc}
    c2ac:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000c2b0 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>:
_ZN11CFilesystem13TFS_Tree_NodeC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:80

class CFilesystem
{
private:
    // uzel filesystemu, ktery neni spravovan zadnym FS driverem
    struct TFS_Tree_Node
    c2b0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2b4:	e28db000 	add	fp, sp, #0
    c2b8:	e24dd00c 	sub	sp, sp, #12
    c2bc:	e50b0008 	str	r0, [fp, #-8]
    c2c0:	e51b3008 	ldr	r3, [fp, #-8]
    c2c4:	e3a02000 	mov	r2, #0
    c2c8:	e5c32010 	strb	r2, [r3, #16]
    c2cc:	e51b3008 	ldr	r3, [fp, #-8]
    c2d0:	e3e02000 	mvn	r2, #0
    c2d4:	e5832014 	str	r2, [r3, #20]
    c2d8:	e51b3008 	ldr	r3, [fp, #-8]
    c2dc:	e1a00003 	mov	r0, r3
    c2e0:	e28bd000 	add	sp, fp, #0
    c2e4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2e8:	e12fff1e 	bx	lr

0000c2ec <_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    c2ec:	e92d4800 	push	{fp, lr}
    c2f0:	e28db004 	add	fp, sp, #4
    c2f4:	e24dd008 	sub	sp, sp, #8
    c2f8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    c2fc:	e3a01024 	mov	r1, #36	; 0x24
    c300:	e51b0008 	ldr	r0, [fp, #-8]
    c304:	eb00059e 	bl	d984 <_ZN20CKernel_Heap_Manager5AllocEj>
    c308:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    c30c:	e1a00003 	mov	r0, r3
    c310:	e24bd004 	sub	sp, fp, #4
    c314:	e8bd8800 	pop	{fp, pc}

0000c318 <_ZN5IFile4ReadEPcj>:
_ZN5IFile4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:43
    virtual uint32_t Read(char* buffer, uint32_t num)
    c318:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c31c:	e28db000 	add	fp, sp, #0
    c320:	e24dd014 	sub	sp, sp, #20
    c324:	e50b0008 	str	r0, [fp, #-8]
    c328:	e50b100c 	str	r1, [fp, #-12]
    c32c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:45
        return 0;
    c330:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:46
    };
    c334:	e1a00003 	mov	r0, r3
    c338:	e28bd000 	add	sp, fp, #0
    c33c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c340:	e12fff1e 	bx	lr

0000c344 <_ZN5IFile5WriteEPKcj>:
_ZN5IFile5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:49
    virtual uint32_t Write(const char* buffer, uint32_t num)
    c344:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c348:	e28db000 	add	fp, sp, #0
    c34c:	e24dd014 	sub	sp, sp, #20
    c350:	e50b0008 	str	r0, [fp, #-8]
    c354:	e50b100c 	str	r1, [fp, #-12]
    c358:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:51
        return 0;
    c35c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:52
    };
    c360:	e1a00003 	mov	r0, r3
    c364:	e28bd000 	add	sp, fp, #0
    c368:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c36c:	e12fff1e 	bx	lr

0000c370 <_ZN5IFile5CloseEv>:
_ZN5IFile5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:54
    virtual bool Close()
    c370:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c374:	e28db000 	add	fp, sp, #0
    c378:	e24dd00c 	sub	sp, sp, #12
    c37c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:56
        return true;
    c380:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:57
    };
    c384:	e1a00003 	mov	r0, r3
    c388:	e28bd000 	add	sp, fp, #0
    c38c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c390:	e12fff1e 	bx	lr

0000c394 <_ZN5IFile5IOCtlE16NIOCtl_OperationPv>:
_ZN5IFile5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr)
    c394:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c398:	e28db000 	add	fp, sp, #0
    c39c:	e24dd014 	sub	sp, sp, #20
    c3a0:	e50b0008 	str	r0, [fp, #-8]
    c3a4:	e50b100c 	str	r1, [fp, #-12]
    c3a8:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:61
        return false;
    c3ac:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:62
    };
    c3b0:	e1a00003 	mov	r0, r3
    c3b4:	e28bd000 	add	sp, fp, #0
    c3b8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c3bc:	e12fff1e 	bx	lr

0000c3c0 <_Znwj>:
_Znwj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:42
{
    c3c0:	e92d4800 	push	{fp, lr}
    c3c4:	e28db004 	add	fp, sp, #4
    c3c8:	e24dd008 	sub	sp, sp, #8
    c3cc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:43
    return sKernelMem.Alloc(size);
    c3d0:	e51b1008 	ldr	r1, [fp, #-8]
    c3d4:	e59f0010 	ldr	r0, [pc, #16]	; c3ec <_Znwj+0x2c>
    c3d8:	eb000569 	bl	d984 <_ZN20CKernel_Heap_Manager5AllocEj>
    c3dc:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:44
}
    c3e0:	e1a00003 	mov	r0, r3
    c3e4:	e24bd004 	sub	sp, fp, #4
    c3e8:	e8bd8800 	pop	{fp, pc}
    c3ec:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000c3f0 <_ZN5IFileC1Ev>:
_ZN5IFileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:36
class IFile
    c3f0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c3f4:	e28db000 	add	fp, sp, #0
    c3f8:	e24dd00c 	sub	sp, sp, #12
    c3fc:	e50b0008 	str	r0, [fp, #-8]
    c400:	e59f2018 	ldr	r2, [pc, #24]	; c420 <_ZN5IFileC1Ev+0x30>
    c404:	e51b3008 	ldr	r3, [fp, #-8]
    c408:	e5832000 	str	r2, [r3]
    c40c:	e51b3008 	ldr	r3, [fp, #-8]
    c410:	e1a00003 	mov	r0, r3
    c414:	e28bd000 	add	sp, fp, #0
    c418:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c41c:	e12fff1e 	bx	lr
    c420:	00010b1c 	andeq	r0, r1, ip, lsl fp

0000c424 <_ZN5IFileD1Ev>:
_ZN5IFileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    virtual ~IFile() = default;
    c424:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c428:	e28db000 	add	fp, sp, #0
    c42c:	e24dd00c 	sub	sp, sp, #12
    c430:	e50b0008 	str	r0, [fp, #-8]
    c434:	e59f2018 	ldr	r2, [pc, #24]	; c454 <_ZN5IFileD1Ev+0x30>
    c438:	e51b3008 	ldr	r3, [fp, #-8]
    c43c:	e5832000 	str	r2, [r3]
    c440:	e51b3008 	ldr	r3, [fp, #-8]
    c444:	e1a00003 	mov	r0, r3
    c448:	e28bd000 	add	sp, fp, #0
    c44c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c450:	e12fff1e 	bx	lr
    c454:	00010b1c 	andeq	r0, r1, ip, lsl fp

0000c458 <_ZN5IFileD0Ev>:
_ZN5IFileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    c458:	e92d4800 	push	{fp, lr}
    c45c:	e28db004 	add	fp, sp, #4
    c460:	e24dd008 	sub	sp, sp, #8
    c464:	e50b0008 	str	r0, [fp, #-8]
    c468:	e51b0008 	ldr	r0, [fp, #-8]
    c46c:	ebffffec 	bl	c424 <_ZN5IFileD1Ev>
    c470:	e3a01004 	mov	r1, #4
    c474:	e51b0008 	ldr	r0, [fp, #-8]
    c478:	ebfff9c8 	bl	aba0 <_ZdlPvj>
    c47c:	e51b3008 	ldr	r3, [fp, #-8]
    c480:	e1a00003 	mov	r0, r3
    c484:	e24bd004 	sub	sp, fp, #4
    c488:	e8bd8800 	pop	{fp, pc}

0000c48c <_ZN10CGPIO_FileC1Eibb>:
_ZN10CGPIO_FileC2Eibb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:21
    bool mRead;
    // byl pin rezervovan pro zapis?
    bool mWrite;

public:
    CGPIO_File(int pinNo, bool read, bool write)
    c48c:	e92d4800 	push	{fp, lr}
    c490:	e28db004 	add	fp, sp, #4
    c494:	e24dd010 	sub	sp, sp, #16
    c498:	e50b0008 	str	r0, [fp, #-8]
    c49c:	e50b100c 	str	r1, [fp, #-12]
    c4a0:	e1a01002 	mov	r1, r2
    c4a4:	e1a02003 	mov	r2, r3
    c4a8:	e1a03001 	mov	r3, r1
    c4ac:	e54b300d 	strb	r3, [fp, #-13]
    c4b0:	e1a03002 	mov	r3, r2
    c4b4:	e54b300e 	strb	r3, [fp, #-14]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:24
    : mPinNo(pinNo)
    , mRead(read)
    , mWrite(write)
    c4b8:	e51b3008 	ldr	r3, [fp, #-8]
    c4bc:	e1a00003 	mov	r0, r3
    c4c0:	ebffffca 	bl	c3f0 <_ZN5IFileC1Ev>
    c4c4:	e59f2038 	ldr	r2, [pc, #56]	; c504 <_ZN10CGPIO_FileC1Eibb+0x78>
    c4c8:	e51b3008 	ldr	r3, [fp, #-8]
    c4cc:	e5832000 	str	r2, [r3]
    c4d0:	e51b3008 	ldr	r3, [fp, #-8]
    c4d4:	e51b200c 	ldr	r2, [fp, #-12]
    c4d8:	e5832004 	str	r2, [r3, #4]
    c4dc:	e51b3008 	ldr	r3, [fp, #-8]
    c4e0:	e55b200d 	ldrb	r2, [fp, #-13]
    c4e4:	e5c32008 	strb	r2, [r3, #8]
    c4e8:	e51b3008 	ldr	r3, [fp, #-8]
    c4ec:	e55b200e 	ldrb	r2, [fp, #-14]
    c4f0:	e5c32009 	strb	r2, [r3, #9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:27
    {
        //
    }
    c4f4:	e51b3008 	ldr	r3, [fp, #-8]
    c4f8:	e1a00003 	mov	r0, r3
    c4fc:	e24bd004 	sub	sp, fp, #4
    c500:	e8bd8800 	pop	{fp, pc}
    c504:	00010afc 	strdeq	r0, [r1], -ip

0000c508 <_ZN10CGPIO_FileD1Ev>:
_ZN10CGPIO_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29

    ~CGPIO_File()
    c508:	e92d4800 	push	{fp, lr}
    c50c:	e28db004 	add	fp, sp, #4
    c510:	e24dd008 	sub	sp, sp, #8
    c514:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c518:	e59f2028 	ldr	r2, [pc, #40]	; c548 <_ZN10CGPIO_FileD1Ev+0x40>
    c51c:	e51b3008 	ldr	r3, [fp, #-8]
    c520:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:32
        // pokud jeste je otevreny, zavreme
        Close();
    c524:	e51b0008 	ldr	r0, [fp, #-8]
    c528:	eb000053 	bl	c67c <_ZN10CGPIO_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c52c:	e51b3008 	ldr	r3, [fp, #-8]
    c530:	e1a00003 	mov	r0, r3
    c534:	ebffffba 	bl	c424 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c538:	e51b3008 	ldr	r3, [fp, #-8]
    c53c:	e1a00003 	mov	r0, r3
    c540:	e24bd004 	sub	sp, fp, #4
    c544:	e8bd8800 	pop	{fp, pc}
    c548:	00010afc 	strdeq	r0, [r1], -ip

0000c54c <_ZN10CGPIO_FileD0Ev>:
_ZN10CGPIO_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c54c:	e92d4800 	push	{fp, lr}
    c550:	e28db004 	add	fp, sp, #4
    c554:	e24dd008 	sub	sp, sp, #8
    c558:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c55c:	e51b0008 	ldr	r0, [fp, #-8]
    c560:	ebffffe8 	bl	c508 <_ZN10CGPIO_FileD1Ev>
    c564:	e3a0100c 	mov	r1, #12
    c568:	e51b0008 	ldr	r0, [fp, #-8]
    c56c:	ebfff98b 	bl	aba0 <_ZdlPvj>
    c570:	e51b3008 	ldr	r3, [fp, #-8]
    c574:	e1a00003 	mov	r0, r3
    c578:	e24bd004 	sub	sp, fp, #4
    c57c:	e8bd8800 	pop	{fp, pc}

0000c580 <_ZN10CGPIO_File4ReadEPcj>:
_ZN10CGPIO_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:35

    virtual uint32_t Read(char* buffer, uint32_t num) override
    c580:	e92d4800 	push	{fp, lr}
    c584:	e28db004 	add	fp, sp, #4
    c588:	e24dd010 	sub	sp, sp, #16
    c58c:	e50b0008 	str	r0, [fp, #-8]
    c590:	e50b100c 	str	r1, [fp, #-12]
    c594:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37
    {
        if (num > 0 && buffer != nullptr)
    c598:	e51b3010 	ldr	r3, [fp, #-16]
    c59c:	e3530000 	cmp	r3, #0
    c5a0:	0a000011 	beq	c5ec <_ZN10CGPIO_File4ReadEPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37 (discriminator 1)
    c5a4:	e51b300c 	ldr	r3, [fp, #-12]
    c5a8:	e3530000 	cmp	r3, #0
    c5ac:	0a00000e 	beq	c5ec <_ZN10CGPIO_File4ReadEPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40
        {
            // na prvni pozici v bufferu precteme bud znak 1 nebo 0 podle stavu digitalniho pinu
            buffer[0] = sGPIO.Get_Input(mPinNo) ? '1' : '0';
    c5b0:	e51b3008 	ldr	r3, [fp, #-8]
    c5b4:	e5933004 	ldr	r3, [r3, #4]
    c5b8:	e1a01003 	mov	r1, r3
    c5bc:	e59f0038 	ldr	r0, [pc, #56]	; c5fc <_ZN10CGPIO_File4ReadEPcj+0x7c>
    c5c0:	ebfff007 	bl	85e4 <_ZN13CGPIO_Handler9Get_InputEj>
    c5c4:	e1a03000 	mov	r3, r0
    c5c8:	e3530000 	cmp	r3, #0
    c5cc:	0a000001 	beq	c5d8 <_ZN10CGPIO_File4ReadEPcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 1)
    c5d0:	e3a02031 	mov	r2, #49	; 0x31
    c5d4:	ea000000 	b	c5dc <_ZN10CGPIO_File4ReadEPcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 2)
    c5d8:	e3a02030 	mov	r2, #48	; 0x30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 4)
    c5dc:	e51b300c 	ldr	r3, [fp, #-12]
    c5e0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:41 (discriminator 4)
            return 1;
    c5e4:	e3a03001 	mov	r3, #1
    c5e8:	ea000000 	b	c5f0 <_ZN10CGPIO_File4ReadEPcj+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:44
        }

        return 0;
    c5ec:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:45
    }
    c5f0:	e1a00003 	mov	r0, r3
    c5f4:	e24bd004 	sub	sp, fp, #4
    c5f8:	e8bd8800 	pop	{fp, pc}
    c5fc:	00010b9c 	muleq	r1, ip, fp

0000c600 <_ZN10CGPIO_File5WriteEPKcj>:
_ZN10CGPIO_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:47

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c600:	e92d4800 	push	{fp, lr}
    c604:	e28db004 	add	fp, sp, #4
    c608:	e24dd010 	sub	sp, sp, #16
    c60c:	e50b0008 	str	r0, [fp, #-8]
    c610:	e50b100c 	str	r1, [fp, #-12]
    c614:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49
    {
        if (num > 0 && buffer != nullptr)
    c618:	e51b3010 	ldr	r3, [fp, #-16]
    c61c:	e3530000 	cmp	r3, #0
    c620:	0a000010 	beq	c668 <_ZN10CGPIO_File5WriteEPKcj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49 (discriminator 1)
    c624:	e51b300c 	ldr	r3, [fp, #-12]
    c628:	e3530000 	cmp	r3, #0
    c62c:	0a00000d 	beq	c668 <_ZN10CGPIO_File5WriteEPKcj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:52
        {
            // podle prvniho znaku zapiseme bud hodnotu HIGH (true) nebo LOW (false)
            sGPIO.Set_Output(mPinNo, (buffer[0] != '0'));
    c630:	e51b3008 	ldr	r3, [fp, #-8]
    c634:	e5933004 	ldr	r3, [r3, #4]
    c638:	e1a01003 	mov	r1, r3
    c63c:	e51b300c 	ldr	r3, [fp, #-12]
    c640:	e5d33000 	ldrb	r3, [r3]
    c644:	e3530030 	cmp	r3, #48	; 0x30
    c648:	13a03001 	movne	r3, #1
    c64c:	03a03000 	moveq	r3, #0
    c650:	e6ef3073 	uxtb	r3, r3
    c654:	e1a02003 	mov	r2, r3
    c658:	e59f0018 	ldr	r0, [pc, #24]	; c678 <_ZN10CGPIO_File5WriteEPKcj+0x78>
    c65c:	ebffefaa 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:53
            return 1;
    c660:	e3a03001 	mov	r3, #1
    c664:	ea000000 	b	c66c <_ZN10CGPIO_File5WriteEPKcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:56
        }

        return 0;
    c668:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:57
    }
    c66c:	e1a00003 	mov	r0, r3
    c670:	e24bd004 	sub	sp, fp, #4
    c674:	e8bd8800 	pop	{fp, pc}
    c678:	00010b9c 	muleq	r1, ip, fp

0000c67c <_ZN10CGPIO_File5CloseEv>:
_ZN10CGPIO_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:59

    virtual bool Close() override
    c67c:	e92d4800 	push	{fp, lr}
    c680:	e28db004 	add	fp, sp, #4
    c684:	e24dd008 	sub	sp, sp, #8
    c688:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61
    {
        if (!mRead && !mWrite)
    c68c:	e51b3008 	ldr	r3, [fp, #-8]
    c690:	e5d33008 	ldrb	r3, [r3, #8]
    c694:	e2233001 	eor	r3, r3, #1
    c698:	e6ef3073 	uxtb	r3, r3
    c69c:	e3530000 	cmp	r3, #0
    c6a0:	0a000007 	beq	c6c4 <_ZN10CGPIO_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61 (discriminator 1)
    c6a4:	e51b3008 	ldr	r3, [fp, #-8]
    c6a8:	e5d33009 	ldrb	r3, [r3, #9]
    c6ac:	e2233001 	eor	r3, r3, #1
    c6b0:	e6ef3073 	uxtb	r3, r3
    c6b4:	e3530000 	cmp	r3, #0
    c6b8:	0a000001 	beq	c6c4 <_ZN10CGPIO_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:62
            return false;
    c6bc:	e3a03000 	mov	r3, #0
    c6c0:	ea000010 	b	c708 <_ZN10CGPIO_File5CloseEv+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:65

        // uvolnime pin
        sGPIO.Free_Pin(mPinNo, mRead, mWrite);
    c6c4:	e51b3008 	ldr	r3, [fp, #-8]
    c6c8:	e5933004 	ldr	r3, [r3, #4]
    c6cc:	e1a01003 	mov	r1, r3
    c6d0:	e51b3008 	ldr	r3, [fp, #-8]
    c6d4:	e5d32008 	ldrb	r2, [r3, #8]
    c6d8:	e51b3008 	ldr	r3, [fp, #-8]
    c6dc:	e5d33009 	ldrb	r3, [r3, #9]
    c6e0:	e59f002c 	ldr	r0, [pc, #44]	; c714 <_ZN10CGPIO_File5CloseEv+0x98>
    c6e4:	ebfff045 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:66
        mRead = mWrite = false;
    c6e8:	e51b3008 	ldr	r3, [fp, #-8]
    c6ec:	e3a02000 	mov	r2, #0
    c6f0:	e5c32009 	strb	r2, [r3, #9]
    c6f4:	e51b3008 	ldr	r3, [fp, #-8]
    c6f8:	e5d32009 	ldrb	r2, [r3, #9]
    c6fc:	e51b3008 	ldr	r3, [fp, #-8]
    c700:	e5c32008 	strb	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:68

        return true;
    c704:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:69
    }
    c708:	e1a00003 	mov	r0, r3
    c70c:	e24bd004 	sub	sp, fp, #4
    c710:	e8bd8800 	pop	{fp, pc}
    c714:	00010b9c 	muleq	r1, ip, fp

0000c718 <_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv>:
_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:71

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c718:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c71c:	e28db000 	add	fp, sp, #0
    c720:	e24dd014 	sub	sp, sp, #20
    c724:	e50b0008 	str	r0, [fp, #-8]
    c728:	e50b100c 	str	r1, [fp, #-12]
    c72c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:74
    {
        // GPIO (zatim?) neumime nijak nastavovat
        return false;
    c730:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:75
    }
    c734:	e1a00003 	mov	r0, r3
    c738:	e28bd000 	add	sp, fp, #0
    c73c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c740:	e12fff1e 	bx	lr

0000c744 <_ZN15CGPIO_FS_Driver11On_RegisterEv>:
_ZN15CGPIO_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:82

// driver pro filesystem pro GPIO piny
class CGPIO_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    c744:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c748:	e28db000 	add	fp, sp, #0
    c74c:	e24dd00c 	sub	sp, sp, #12
    c750:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:85
    {
        //
    }
    c754:	e320f000 	nop	{0}
    c758:	e28bd000 	add	sp, fp, #0
    c75c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c760:	e12fff1e 	bx	lr

0000c764 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:87

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    c764:	e92d4810 	push	{r4, fp, lr}
    c768:	e28db008 	add	fp, sp, #8
    c76c:	e24dd01c 	sub	sp, sp, #28
    c770:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    c774:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    c778:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89
    {
        if (mode != NFile_Open_Mode::Read_Only && mode != NFile_Open_Mode::Write_Only)
    c77c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c780:	e3530000 	cmp	r3, #0
    c784:	0a000004 	beq	c79c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89 (discriminator 1)
    c788:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c78c:	e3530001 	cmp	r3, #1
    c790:	0a000001 	beq	c79c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:90
            return nullptr;
    c794:	e3a03000 	mov	r3, #0
    c798:	ea000043 	b	c8ac <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:94

        // tento driver ocekava na vstupu jen jednu jedinou uroven v 'path', a tou je cislo, tedy index GPIO pinu

        int gpionum = atoi(path);
    c79c:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    c7a0:	eb000b6d 	bl	f55c <_Z4atoiPKc>
    c7a4:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95
        if (gpionum < 0 || gpionum >= hal::GPIO_Pin_Count)
    c7a8:	e51b3010 	ldr	r3, [fp, #-16]
    c7ac:	e3530000 	cmp	r3, #0
    c7b0:	ba000002 	blt	c7c0 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95 (discriminator 1)
    c7b4:	e51b3010 	ldr	r3, [fp, #-16]
    c7b8:	e3530035 	cmp	r3, #53	; 0x35
    c7bc:	9a000001 	bls	c7c8 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:96
            return nullptr;
    c7c0:	e3a03000 	mov	r3, #0
    c7c4:	ea000038 	b	c8ac <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:98

        if (mode == NFile_Open_Mode::Read_Only)
    c7c8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7cc:	e3530000 	cmp	r3, #0
    c7d0:	1a000011 	bne	c81c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:100
        {
            if (!sGPIO.Reserve_Pin(gpionum, true, false))
    c7d4:	e51b1010 	ldr	r1, [fp, #-16]
    c7d8:	e3a03000 	mov	r3, #0
    c7dc:	e3a02001 	mov	r2, #1
    c7e0:	e59f00d0 	ldr	r0, [pc, #208]	; c8b8 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c7e4:	ebffef9f 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    c7e8:	e1a03000 	mov	r3, r0
    c7ec:	e2233001 	eor	r3, r3, #1
    c7f0:	e6ef3073 	uxtb	r3, r3
    c7f4:	e3530000 	cmp	r3, #0
    c7f8:	0a000001 	beq	c804 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:101
                return nullptr;
    c7fc:	e3a03000 	mov	r3, #0
    c800:	ea000029 	b	c8ac <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:103

            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Input);
    c804:	e51b3010 	ldr	r3, [fp, #-16]
    c808:	e3a02000 	mov	r2, #0
    c80c:	e1a01003 	mov	r1, r3
    c810:	e59f00a0 	ldr	r0, [pc, #160]	; c8b8 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c814:	ebffeeed 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
    c818:	ea000010 	b	c860 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:107
        }
        else
        {
            if (!sGPIO.Reserve_Pin(gpionum, false, true))
    c81c:	e51b1010 	ldr	r1, [fp, #-16]
    c820:	e3a03001 	mov	r3, #1
    c824:	e3a02000 	mov	r2, #0
    c828:	e59f0088 	ldr	r0, [pc, #136]	; c8b8 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c82c:	ebffef8d 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    c830:	e1a03000 	mov	r3, r0
    c834:	e2233001 	eor	r3, r3, #1
    c838:	e6ef3073 	uxtb	r3, r3
    c83c:	e3530000 	cmp	r3, #0
    c840:	0a000001 	beq	c84c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xe8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:108
                return nullptr;
    c844:	e3a03000 	mov	r3, #0
    c848:	ea000017 	b	c8ac <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:110

            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Output);
    c84c:	e51b3010 	ldr	r3, [fp, #-16]
    c850:	e3a02001 	mov	r2, #1
    c854:	e1a01003 	mov	r1, r3
    c858:	e59f0058 	ldr	r0, [pc, #88]	; c8b8 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c85c:	ebffeedb 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:114
        }

        CGPIO_File* f =
        new CGPIO_File(gpionum, mode == NFile_Open_Mode::Read_Only, mode == NFile_Open_Mode::Write_Only);
    c860:	e3a0000c 	mov	r0, #12
    c864:	ebfffed5 	bl	c3c0 <_Znwj>
    c868:	e1a03000 	mov	r3, r0
    c86c:	e1a04003 	mov	r4, r3
    c870:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c874:	e3530000 	cmp	r3, #0
    c878:	03a03001 	moveq	r3, #1
    c87c:	13a03000 	movne	r3, #0
    c880:	e6ef2073 	uxtb	r2, r3
    c884:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c888:	e3530001 	cmp	r3, #1
    c88c:	03a03001 	moveq	r3, #1
    c890:	13a03000 	movne	r3, #0
    c894:	e6ef3073 	uxtb	r3, r3
    c898:	e51b1010 	ldr	r1, [fp, #-16]
    c89c:	e1a00004 	mov	r0, r4
    c8a0:	ebfffef9 	bl	c48c <_ZN10CGPIO_FileC1Eibb>
    c8a4:	e50b4014 	str	r4, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:116

        return f;
    c8a8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:117
    }
    c8ac:	e1a00003 	mov	r0, r3
    c8b0:	e24bd008 	sub	sp, fp, #8
    c8b4:	e8bd8810 	pop	{r4, fp, pc}
    c8b8:	00010b9c 	muleq	r1, ip, fp

0000c8bc <_ZN13CMonitor_FileC1Ei>:
_ZN13CMonitor_FileC2Ei():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:15
{
private:
    int mChannel;

public:
    CMonitor_File(int channel)
    c8bc:	e92d4800 	push	{fp, lr}
    c8c0:	e28db004 	add	fp, sp, #4
    c8c4:	e24dd008 	sub	sp, sp, #8
    c8c8:	e50b0008 	str	r0, [fp, #-8]
    c8cc:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:16
    : mChannel(channel)
    c8d0:	e51b3008 	ldr	r3, [fp, #-8]
    c8d4:	e1a00003 	mov	r0, r3
    c8d8:	ebfffec4 	bl	c3f0 <_ZN5IFileC1Ev>
    c8dc:	e59f2020 	ldr	r2, [pc, #32]	; c904 <_ZN13CMonitor_FileC1Ei+0x48>
    c8e0:	e51b3008 	ldr	r3, [fp, #-8]
    c8e4:	e5832000 	str	r2, [r3]
    c8e8:	e51b3008 	ldr	r3, [fp, #-8]
    c8ec:	e51b200c 	ldr	r2, [fp, #-12]
    c8f0:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:18
    {
    }
    c8f4:	e51b3008 	ldr	r3, [fp, #-8]
    c8f8:	e1a00003 	mov	r0, r3
    c8fc:	e24bd004 	sub	sp, fp, #4
    c900:	e8bd8800 	pop	{fp, pc}
    c904:	00010acc 	andeq	r0, r1, ip, asr #21

0000c908 <_ZN13CMonitor_FileD1Ev>:
_ZN13CMonitor_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20

    ~CMonitor_File()
    c908:	e92d4800 	push	{fp, lr}
    c90c:	e28db004 	add	fp, sp, #4
    c910:	e24dd008 	sub	sp, sp, #8
    c914:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c918:	e59f2028 	ldr	r2, [pc, #40]	; c948 <_ZN13CMonitor_FileD1Ev+0x40>
    c91c:	e51b3008 	ldr	r3, [fp, #-8]
    c920:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:22
        Close();
    c924:	e51b0008 	ldr	r0, [fp, #-8]
    c928:	eb000039 	bl	ca14 <_ZN13CMonitor_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c92c:	e51b3008 	ldr	r3, [fp, #-8]
    c930:	e1a00003 	mov	r0, r3
    c934:	ebfffeba 	bl	c424 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c938:	e51b3008 	ldr	r3, [fp, #-8]
    c93c:	e1a00003 	mov	r0, r3
    c940:	e24bd004 	sub	sp, fp, #4
    c944:	e8bd8800 	pop	{fp, pc}
    c948:	00010acc 	andeq	r0, r1, ip, asr #21

0000c94c <_ZN13CMonitor_FileD0Ev>:
_ZN13CMonitor_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c94c:	e92d4800 	push	{fp, lr}
    c950:	e28db004 	add	fp, sp, #4
    c954:	e24dd008 	sub	sp, sp, #8
    c958:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c95c:	e51b0008 	ldr	r0, [fp, #-8]
    c960:	ebffffe8 	bl	c908 <_ZN13CMonitor_FileD1Ev>
    c964:	e3a01008 	mov	r1, #8
    c968:	e51b0008 	ldr	r0, [fp, #-8]
    c96c:	ebfff88b 	bl	aba0 <_ZdlPvj>
    c970:	e51b3008 	ldr	r3, [fp, #-8]
    c974:	e1a00003 	mov	r0, r3
    c978:	e24bd004 	sub	sp, fp, #4
    c97c:	e8bd8800 	pop	{fp, pc}

0000c980 <_ZN13CMonitor_File4ReadEPcj>:
_ZN13CMonitor_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:25

    virtual uint32_t Read(char* buffer, uint32_t num) override
    c980:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c984:	e28db000 	add	fp, sp, #0
    c988:	e24dd014 	sub	sp, sp, #20
    c98c:	e50b0008 	str	r0, [fp, #-8]
    c990:	e50b100c 	str	r1, [fp, #-12]
    c994:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:27
    {
        return 0;
    c998:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:28
    }
    c99c:	e1a00003 	mov	r0, r3
    c9a0:	e28bd000 	add	sp, fp, #0
    c9a4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c9a8:	e12fff1e 	bx	lr

0000c9ac <_ZN13CMonitor_File5WriteEPKcj>:
_ZN13CMonitor_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:30

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c9ac:	e92d4800 	push	{fp, lr}
    c9b0:	e28db004 	add	fp, sp, #4
    c9b4:	e24dd010 	sub	sp, sp, #16
    c9b8:	e50b0008 	str	r0, [fp, #-8]
    c9bc:	e50b100c 	str	r1, [fp, #-12]
    c9c0:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32
    {
        if (num > 0 && buffer != nullptr)
    c9c4:	e51b3010 	ldr	r3, [fp, #-16]
    c9c8:	e3530000 	cmp	r3, #0
    c9cc:	0a00000b 	beq	ca00 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32 (discriminator 1)
    c9d0:	e51b300c 	ldr	r3, [fp, #-12]
    c9d4:	e3530000 	cmp	r3, #0
    c9d8:	0a000008 	beq	ca00 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:34
        {
            if (mChannel == 0)
    c9dc:	e51b3008 	ldr	r3, [fp, #-8]
    c9e0:	e5933004 	ldr	r3, [r3, #4]
    c9e4:	e3530000 	cmp	r3, #0
    c9e8:	1a000004 	bne	ca00 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:36
            {
                sMonitor << buffer;
    c9ec:	e51b100c 	ldr	r1, [fp, #-12]
    c9f0:	e59f0018 	ldr	r0, [pc, #24]	; ca10 <_ZN13CMonitor_File5WriteEPKcj+0x64>
    c9f4:	ebfff294 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:37
                return num;
    c9f8:	e51b3010 	ldr	r3, [fp, #-16]
    c9fc:	ea000000 	b	ca04 <_ZN13CMonitor_File5WriteEPKcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:41
            }
        }

        return 0;
    ca00:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:42
    }
    ca04:	e1a00003 	mov	r0, r3
    ca08:	e24bd004 	sub	sp, fp, #4
    ca0c:	e8bd8800 	pop	{fp, pc}
    ca10:	00010bd4 	ldrdeq	r0, [r1], -r4

0000ca14 <_ZN13CMonitor_File5CloseEv>:
_ZN13CMonitor_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:44

    virtual bool Close() override
    ca14:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ca18:	e28db000 	add	fp, sp, #0
    ca1c:	e24dd00c 	sub	sp, sp, #12
    ca20:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:46
    {
        if (mChannel < 0)
    ca24:	e51b3008 	ldr	r3, [fp, #-8]
    ca28:	e5933004 	ldr	r3, [r3, #4]
    ca2c:	e3530000 	cmp	r3, #0
    ca30:	aa000001 	bge	ca3c <_ZN13CMonitor_File5CloseEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:47
            return false;
    ca34:	e3a03000 	mov	r3, #0
    ca38:	ea000003 	b	ca4c <_ZN13CMonitor_File5CloseEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:53

        if (mChannel == 0)
        {
        }

        mChannel = -1;
    ca3c:	e51b3008 	ldr	r3, [fp, #-8]
    ca40:	e3e02000 	mvn	r2, #0
    ca44:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:55

        return true;
    ca48:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:56
    }
    ca4c:	e1a00003 	mov	r0, r3
    ca50:	e28bd000 	add	sp, fp, #0
    ca54:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ca58:	e12fff1e 	bx	lr

0000ca5c <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv>:
_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:58

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    ca5c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ca60:	e28db000 	add	fp, sp, #0
    ca64:	e24dd014 	sub	sp, sp, #20
    ca68:	e50b0008 	str	r0, [fp, #-8]
    ca6c:	e50b100c 	str	r1, [fp, #-12]
    ca70:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:60
    {
        if (mChannel == 0)
    ca74:	e51b3008 	ldr	r3, [fp, #-8]
    ca78:	e5933004 	ldr	r3, [r3, #4]
    ca7c:	e3530000 	cmp	r3, #0
    ca80:	1a000001 	bne	ca8c <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:62
        {
            return true;
    ca84:	e3a03001 	mov	r3, #1
    ca88:	ea000000 	b	ca90 <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:65
        }

        return false;
    ca8c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:66
    }
    ca90:	e1a00003 	mov	r0, r3
    ca94:	e28bd000 	add	sp, fp, #0
    ca98:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ca9c:	e12fff1e 	bx	lr

0000caa0 <_ZN18CMonitor_FS_Driver11On_RegisterEv>:
_ZN18CMonitor_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:72
};

class CMonitor_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    caa0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    caa4:	e28db000 	add	fp, sp, #0
    caa8:	e24dd00c 	sub	sp, sp, #12
    caac:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:74
    {
    }
    cab0:	e320f000 	nop	{0}
    cab4:	e28bd000 	add	sp, fp, #0
    cab8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cabc:	e12fff1e 	bx	lr

0000cac0 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:76

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cac0:	e92d4810 	push	{r4, fp, lr}
    cac4:	e28db008 	add	fp, sp, #8
    cac8:	e24dd01c 	sub	sp, sp, #28
    cacc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    cad0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    cad4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:78
    {
        int channel = atoi(path);
    cad8:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    cadc:	eb000a9e 	bl	f55c <_Z4atoiPKc>
    cae0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:79
        if (channel != 0)
    cae4:	e51b3010 	ldr	r3, [fp, #-16]
    cae8:	e3530000 	cmp	r3, #0
    caec:	0a000001 	beq	caf8 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:80
            return nullptr;
    caf0:	e3a03000 	mov	r3, #0
    caf4:	ea000008 	b	cb1c <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:82

        CMonitor_File* f = new CMonitor_File(channel);
    caf8:	e3a00008 	mov	r0, #8
    cafc:	ebfffe2f 	bl	c3c0 <_Znwj>
    cb00:	e1a03000 	mov	r3, r0
    cb04:	e1a04003 	mov	r4, r3
    cb08:	e51b1010 	ldr	r1, [fp, #-16]
    cb0c:	e1a00004 	mov	r0, r4
    cb10:	ebffff69 	bl	c8bc <_ZN13CMonitor_FileC1Ei>
    cb14:	e50b4014 	str	r4, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:84

        return f;
    cb18:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:85
    }
    cb1c:	e1a00003 	mov	r0, r3
    cb20:	e24bd008 	sub	sp, fp, #8
    cb24:	e8bd8810 	pop	{r4, fp, pc}

0000cb28 <_ZN21CSegment_Display_FileC1Ev>:
_ZN21CSegment_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:16
{
private:
    bool mOpened;

public:
    CSegment_Display_File()
    cb28:	e92d4800 	push	{fp, lr}
    cb2c:	e28db004 	add	fp, sp, #4
    cb30:	e24dd008 	sub	sp, sp, #8
    cb34:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:17
    : mOpened(true)
    cb38:	e51b3008 	ldr	r3, [fp, #-8]
    cb3c:	e1a00003 	mov	r0, r3
    cb40:	ebfffe2a 	bl	c3f0 <_ZN5IFileC1Ev>
    cb44:	e59f2020 	ldr	r2, [pc, #32]	; cb6c <_ZN21CSegment_Display_FileC1Ev+0x44>
    cb48:	e51b3008 	ldr	r3, [fp, #-8]
    cb4c:	e5832000 	str	r2, [r3]
    cb50:	e51b3008 	ldr	r3, [fp, #-8]
    cb54:	e3a02001 	mov	r2, #1
    cb58:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:20
    {
        //
    }
    cb5c:	e51b3008 	ldr	r3, [fp, #-8]
    cb60:	e1a00003 	mov	r0, r3
    cb64:	e24bd004 	sub	sp, fp, #4
    cb68:	e8bd8800 	pop	{fp, pc}
    cb6c:	00010a9c 	muleq	r1, ip, sl

0000cb70 <_ZN21CSegment_Display_FileD1Ev>:
_ZN21CSegment_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22

    ~CSegment_Display_File()
    cb70:	e92d4800 	push	{fp, lr}
    cb74:	e28db004 	add	fp, sp, #4
    cb78:	e24dd008 	sub	sp, sp, #8
    cb7c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cb80:	e59f2028 	ldr	r2, [pc, #40]	; cbb0 <_ZN21CSegment_Display_FileD1Ev+0x40>
    cb84:	e51b3008 	ldr	r3, [fp, #-8]
    cb88:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:24
        Close();
    cb8c:	e51b0008 	ldr	r0, [fp, #-8]
    cb90:	eb000046 	bl	ccb0 <_ZN21CSegment_Display_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cb94:	e51b3008 	ldr	r3, [fp, #-8]
    cb98:	e1a00003 	mov	r0, r3
    cb9c:	ebfffe20 	bl	c424 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cba0:	e51b3008 	ldr	r3, [fp, #-8]
    cba4:	e1a00003 	mov	r0, r3
    cba8:	e24bd004 	sub	sp, fp, #4
    cbac:	e8bd8800 	pop	{fp, pc}
    cbb0:	00010a9c 	muleq	r1, ip, sl

0000cbb4 <_ZN21CSegment_Display_FileD0Ev>:
_ZN21CSegment_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cbb4:	e92d4800 	push	{fp, lr}
    cbb8:	e28db004 	add	fp, sp, #4
    cbbc:	e24dd008 	sub	sp, sp, #8
    cbc0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cbc4:	e51b0008 	ldr	r0, [fp, #-8]
    cbc8:	ebffffe8 	bl	cb70 <_ZN21CSegment_Display_FileD1Ev>
    cbcc:	e3a01008 	mov	r1, #8
    cbd0:	e51b0008 	ldr	r0, [fp, #-8]
    cbd4:	ebfff7f1 	bl	aba0 <_ZdlPvj>
    cbd8:	e51b3008 	ldr	r3, [fp, #-8]
    cbdc:	e1a00003 	mov	r0, r3
    cbe0:	e24bd004 	sub	sp, fp, #4
    cbe4:	e8bd8800 	pop	{fp, pc}

0000cbe8 <_ZN21CSegment_Display_File4ReadEPcj>:
_ZN21CSegment_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:27

    virtual uint32_t Read(char* buffer, uint32_t num) override
    cbe8:	e92d4800 	push	{fp, lr}
    cbec:	e28db004 	add	fp, sp, #4
    cbf0:	e24dd010 	sub	sp, sp, #16
    cbf4:	e50b0008 	str	r0, [fp, #-8]
    cbf8:	e50b100c 	str	r1, [fp, #-12]
    cbfc:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:30
    {
        // jen precteme posledni zapsany znak
        if (num > 0)
    cc00:	e51b3010 	ldr	r3, [fp, #-16]
    cc04:	e3530000 	cmp	r3, #0
    cc08:	0a000007 	beq	cc2c <_ZN21CSegment_Display_File4ReadEPcj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:32
        {
            buffer[0] = sSegment_Display.Read();
    cc0c:	e59f0028 	ldr	r0, [pc, #40]	; cc3c <_ZN21CSegment_Display_File4ReadEPcj+0x54>
    cc10:	ebfff8ae 	bl	aed0 <_ZNK16CSegment_Display4ReadEv>
    cc14:	e1a03000 	mov	r3, r0
    cc18:	e1a02003 	mov	r2, r3
    cc1c:	e51b300c 	ldr	r3, [fp, #-12]
    cc20:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:33
            return 1;
    cc24:	e3a03001 	mov	r3, #1
    cc28:	ea000000 	b	cc30 <_ZN21CSegment_Display_File4ReadEPcj+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:36
        }

        return 0;
    cc2c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:37
    }
    cc30:	e1a00003 	mov	r0, r3
    cc34:	e24bd004 	sub	sp, fp, #4
    cc38:	e8bd8800 	pop	{fp, pc}
    cc3c:	00010c10 	andeq	r0, r1, r0, lsl ip

0000cc40 <_ZN21CSegment_Display_File5WriteEPKcj>:
_ZN21CSegment_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:39

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    cc40:	e92d4800 	push	{fp, lr}
    cc44:	e28db004 	add	fp, sp, #4
    cc48:	e24dd018 	sub	sp, sp, #24
    cc4c:	e50b0010 	str	r0, [fp, #-16]
    cc50:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    cc54:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42
    {
        // zapiseme vsechny znaky ze vstupu
        for (uint32_t i = 0; i < num; i++)
    cc58:	e3a03000 	mov	r3, #0
    cc5c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 3)
    cc60:	e51b2008 	ldr	r2, [fp, #-8]
    cc64:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc68:	e1520003 	cmp	r2, r3
    cc6c:	2a00000a 	bcs	cc9c <_ZN21CSegment_Display_File5WriteEPKcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:43 (discriminator 2)
            sSegment_Display.Write(buffer[i]);
    cc70:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    cc74:	e51b3008 	ldr	r3, [fp, #-8]
    cc78:	e0823003 	add	r3, r2, r3
    cc7c:	e5d33000 	ldrb	r3, [r3]
    cc80:	e1a01003 	mov	r1, r3
    cc84:	e59f0020 	ldr	r0, [pc, #32]	; ccac <_ZN21CSegment_Display_File5WriteEPKcj+0x6c>
    cc88:	ebfff86b 	bl	ae3c <_ZN16CSegment_Display5WriteEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cc8c:	e51b3008 	ldr	r3, [fp, #-8]
    cc90:	e2833001 	add	r3, r3, #1
    cc94:	e50b3008 	str	r3, [fp, #-8]
    cc98:	eafffff0 	b	cc60 <_ZN21CSegment_Display_File5WriteEPKcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:45

        return num;
    cc9c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:46
    }
    cca0:	e1a00003 	mov	r0, r3
    cca4:	e24bd004 	sub	sp, fp, #4
    cca8:	e8bd8800 	pop	{fp, pc}
    ccac:	00010c10 	andeq	r0, r1, r0, lsl ip

0000ccb0 <_ZN21CSegment_Display_File5CloseEv>:
_ZN21CSegment_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:48

    virtual bool Close() override
    ccb0:	e92d4800 	push	{fp, lr}
    ccb4:	e28db004 	add	fp, sp, #4
    ccb8:	e24dd008 	sub	sp, sp, #8
    ccbc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:50
    {
        if (!mOpened)
    ccc0:	e51b3008 	ldr	r3, [fp, #-8]
    ccc4:	e5d33004 	ldrb	r3, [r3, #4]
    ccc8:	e2233001 	eor	r3, r3, #1
    cccc:	e6ef3073 	uxtb	r3, r3
    ccd0:	e3530000 	cmp	r3, #0
    ccd4:	0a000001 	beq	cce0 <_ZN21CSegment_Display_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:51
            return false;
    ccd8:	e3a03000 	mov	r3, #0
    ccdc:	ea000005 	b	ccf8 <_ZN21CSegment_Display_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:53

        sSegment_Display.Close();
    cce0:	e59f001c 	ldr	r0, [pc, #28]	; cd04 <_ZN21CSegment_Display_File5CloseEv+0x54>
    cce4:	ebfff836 	bl	adc4 <_ZN16CSegment_Display5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:54
        mOpened = false;
    cce8:	e51b3008 	ldr	r3, [fp, #-8]
    ccec:	e3a02000 	mov	r2, #0
    ccf0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:56

        return true;
    ccf4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:57
    }
    ccf8:	e1a00003 	mov	r0, r3
    ccfc:	e24bd004 	sub	sp, fp, #4
    cd00:	e8bd8800 	pop	{fp, pc}
    cd04:	00010c10 	andeq	r0, r1, r0, lsl ip

0000cd08 <_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv>:
_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:59

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cd08:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cd0c:	e28db000 	add	fp, sp, #0
    cd10:	e24dd014 	sub	sp, sp, #20
    cd14:	e50b0008 	str	r0, [fp, #-8]
    cd18:	e50b100c 	str	r1, [fp, #-12]
    cd1c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:61
    {
        return false;
    cd20:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:62
    }
    cd24:	e1a00003 	mov	r0, r3
    cd28:	e28bd000 	add	sp, fp, #0
    cd2c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cd30:	e12fff1e 	bx	lr

0000cd34 <_ZN26CSegment_Display_FS_Driver11On_RegisterEv>:
_ZN26CSegment_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:68
};

class CSegment_Display_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    cd34:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cd38:	e28db000 	add	fp, sp, #0
    cd3c:	e24dd00c 	sub	sp, sp, #12
    cd40:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:71
    {
        //
    }
    cd44:	e320f000 	nop	{0}
    cd48:	e28bd000 	add	sp, fp, #0
    cd4c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cd50:	e12fff1e 	bx	lr

0000cd54 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:73

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cd54:	e92d4810 	push	{r4, fp, lr}
    cd58:	e28db008 	add	fp, sp, #8
    cd5c:	e24dd01c 	sub	sp, sp, #28
    cd60:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    cd64:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    cd68:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:77
    {
        // segmentovy displej je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sSegment_Display.Open())
    cd6c:	e59f0048 	ldr	r0, [pc, #72]	; cdbc <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x68>
    cd70:	ebfff7f8 	bl	ad58 <_ZN16CSegment_Display4OpenEv>
    cd74:	e1a03000 	mov	r3, r0
    cd78:	e2233001 	eor	r3, r3, #1
    cd7c:	e6ef3073 	uxtb	r3, r3
    cd80:	e3530000 	cmp	r3, #0
    cd84:	0a000001 	beq	cd90 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:78
            return nullptr;
    cd88:	e3a03000 	mov	r3, #0
    cd8c:	ea000007 	b	cdb0 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:80

        CSegment_Display_File* f = new CSegment_Display_File();
    cd90:	e3a00008 	mov	r0, #8
    cd94:	ebfffd89 	bl	c3c0 <_Znwj>
    cd98:	e1a03000 	mov	r3, r0
    cd9c:	e1a04003 	mov	r4, r3
    cda0:	e1a00004 	mov	r0, r4
    cda4:	ebffff5f 	bl	cb28 <_ZN21CSegment_Display_FileC1Ev>
    cda8:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:82

        return f;
    cdac:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:83
    }
    cdb0:	e1a00003 	mov	r0, r3
    cdb4:	e24bd008 	sub	sp, fp, #8
    cdb8:	e8bd8810 	pop	{r4, fp, pc}
    cdbc:	00010c10 	andeq	r0, r1, r0, lsl ip

0000cdc0 <_ZN20CShift_Register_FileC1Ev>:
_ZN20CShift_Register_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:16
{
private:
    bool mOpened;

public:
    CShift_Register_File()
    cdc0:	e92d4800 	push	{fp, lr}
    cdc4:	e28db004 	add	fp, sp, #4
    cdc8:	e24dd008 	sub	sp, sp, #8
    cdcc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:17
    : mOpened(true)
    cdd0:	e51b3008 	ldr	r3, [fp, #-8]
    cdd4:	e1a00003 	mov	r0, r3
    cdd8:	ebfffd84 	bl	c3f0 <_ZN5IFileC1Ev>
    cddc:	e59f2020 	ldr	r2, [pc, #32]	; ce04 <_ZN20CShift_Register_FileC1Ev+0x44>
    cde0:	e51b3008 	ldr	r3, [fp, #-8]
    cde4:	e5832000 	str	r2, [r3]
    cde8:	e51b3008 	ldr	r3, [fp, #-8]
    cdec:	e3a02001 	mov	r2, #1
    cdf0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:20
    {
        //
    }
    cdf4:	e51b3008 	ldr	r3, [fp, #-8]
    cdf8:	e1a00003 	mov	r0, r3
    cdfc:	e24bd004 	sub	sp, fp, #4
    ce00:	e8bd8800 	pop	{fp, pc}
    ce04:	00010a6c 	andeq	r0, r1, ip, ror #20

0000ce08 <_ZN20CShift_Register_FileD1Ev>:
_ZN20CShift_Register_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22

    ~CShift_Register_File()
    ce08:	e92d4800 	push	{fp, lr}
    ce0c:	e28db004 	add	fp, sp, #4
    ce10:	e24dd008 	sub	sp, sp, #8
    ce14:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    ce18:	e59f2028 	ldr	r2, [pc, #40]	; ce48 <_ZN20CShift_Register_FileD1Ev+0x40>
    ce1c:	e51b3008 	ldr	r3, [fp, #-8]
    ce20:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:24
        Close();
    ce24:	e51b0008 	ldr	r0, [fp, #-8]
    ce28:	eb00003b 	bl	cf1c <_ZN20CShift_Register_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    ce2c:	e51b3008 	ldr	r3, [fp, #-8]
    ce30:	e1a00003 	mov	r0, r3
    ce34:	ebfffd7a 	bl	c424 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    ce38:	e51b3008 	ldr	r3, [fp, #-8]
    ce3c:	e1a00003 	mov	r0, r3
    ce40:	e24bd004 	sub	sp, fp, #4
    ce44:	e8bd8800 	pop	{fp, pc}
    ce48:	00010a6c 	andeq	r0, r1, ip, ror #20

0000ce4c <_ZN20CShift_Register_FileD0Ev>:
_ZN20CShift_Register_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    ce4c:	e92d4800 	push	{fp, lr}
    ce50:	e28db004 	add	fp, sp, #4
    ce54:	e24dd008 	sub	sp, sp, #8
    ce58:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    ce5c:	e51b0008 	ldr	r0, [fp, #-8]
    ce60:	ebffffe8 	bl	ce08 <_ZN20CShift_Register_FileD1Ev>
    ce64:	e3a01008 	mov	r1, #8
    ce68:	e51b0008 	ldr	r0, [fp, #-8]
    ce6c:	ebfff74b 	bl	aba0 <_ZdlPvj>
    ce70:	e51b3008 	ldr	r3, [fp, #-8]
    ce74:	e1a00003 	mov	r0, r3
    ce78:	e24bd004 	sub	sp, fp, #4
    ce7c:	e8bd8800 	pop	{fp, pc}

0000ce80 <_ZN20CShift_Register_File4ReadEPcj>:
_ZN20CShift_Register_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:27

    virtual uint32_t Read(char* buffer, uint32_t num) override
    ce80:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ce84:	e28db000 	add	fp, sp, #0
    ce88:	e24dd014 	sub	sp, sp, #20
    ce8c:	e50b0008 	str	r0, [fp, #-8]
    ce90:	e50b100c 	str	r1, [fp, #-12]
    ce94:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:31
    {
        // neumime cist z posuvneho registru (samozrejme by to bylo mozne, jen ho tak nemame zapojeny)

        return 0;
    ce98:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:32
    }
    ce9c:	e1a00003 	mov	r0, r3
    cea0:	e28bd000 	add	sp, fp, #0
    cea4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cea8:	e12fff1e 	bx	lr

0000ceac <_ZN20CShift_Register_File5WriteEPKcj>:
_ZN20CShift_Register_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:34

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    ceac:	e92d4800 	push	{fp, lr}
    ceb0:	e28db004 	add	fp, sp, #4
    ceb4:	e24dd018 	sub	sp, sp, #24
    ceb8:	e50b0010 	str	r0, [fp, #-16]
    cebc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    cec0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38
    {
        // umime jen znakovy pristup v tomto druhu souboru (tedy neumime nasouvat jednotlive bity)
        // teoreticky muze mit shift registr vice nez 8 bitu, tak proste nasuneme vsechno ze vstupu
        for (uint32_t i = 0; i < num; i++)
    cec4:	e3a03000 	mov	r3, #0
    cec8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 3)
    cecc:	e51b2008 	ldr	r2, [fp, #-8]
    ced0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ced4:	e1520003 	cmp	r2, r3
    ced8:	2a00000a 	bcs	cf08 <_ZN20CShift_Register_File5WriteEPKcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:39 (discriminator 2)
            sShift_Register.Shift_In(static_cast<uint8_t>(buffer[i]));
    cedc:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    cee0:	e51b3008 	ldr	r3, [fp, #-8]
    cee4:	e0823003 	add	r3, r2, r3
    cee8:	e5d33000 	ldrb	r3, [r3]
    ceec:	e1a01003 	mov	r1, r3
    cef0:	e59f0020 	ldr	r0, [pc, #32]	; cf18 <_ZN20CShift_Register_File5WriteEPKcj+0x6c>
    cef4:	ebfff91c 	bl	b36c <_ZN15CShift_Register8Shift_InEh>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cef8:	e51b3008 	ldr	r3, [fp, #-8]
    cefc:	e2833001 	add	r3, r3, #1
    cf00:	e50b3008 	str	r3, [fp, #-8]
    cf04:	eafffff0 	b	cecc <_ZN20CShift_Register_File5WriteEPKcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:41

        return num;
    cf08:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:42
    }
    cf0c:	e1a00003 	mov	r0, r3
    cf10:	e24bd004 	sub	sp, fp, #4
    cf14:	e8bd8800 	pop	{fp, pc}
    cf18:	00010c14 	andeq	r0, r1, r4, lsl ip

0000cf1c <_ZN20CShift_Register_File5CloseEv>:
_ZN20CShift_Register_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:44

    virtual bool Close() override
    cf1c:	e92d4800 	push	{fp, lr}
    cf20:	e28db004 	add	fp, sp, #4
    cf24:	e24dd008 	sub	sp, sp, #8
    cf28:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:46
    {
        if (!mOpened)
    cf2c:	e51b3008 	ldr	r3, [fp, #-8]
    cf30:	e5d33004 	ldrb	r3, [r3, #4]
    cf34:	e2233001 	eor	r3, r3, #1
    cf38:	e6ef3073 	uxtb	r3, r3
    cf3c:	e3530000 	cmp	r3, #0
    cf40:	0a000001 	beq	cf4c <_ZN20CShift_Register_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:47
            return false;
    cf44:	e3a03000 	mov	r3, #0
    cf48:	ea000005 	b	cf64 <_ZN20CShift_Register_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:49

        sShift_Register.Close();
    cf4c:	e59f001c 	ldr	r0, [pc, #28]	; cf70 <_ZN20CShift_Register_File5CloseEv+0x54>
    cf50:	ebfff87c 	bl	b148 <_ZN15CShift_Register5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:50
        mOpened = false;
    cf54:	e51b3008 	ldr	r3, [fp, #-8]
    cf58:	e3a02000 	mov	r2, #0
    cf5c:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:52

        return true;
    cf60:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:53
    }
    cf64:	e1a00003 	mov	r0, r3
    cf68:	e24bd004 	sub	sp, fp, #4
    cf6c:	e8bd8800 	pop	{fp, pc}
    cf70:	00010c14 	andeq	r0, r1, r4, lsl ip

0000cf74 <_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv>:
_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:55

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cf74:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cf78:	e28db000 	add	fp, sp, #0
    cf7c:	e24dd014 	sub	sp, sp, #20
    cf80:	e50b0008 	str	r0, [fp, #-8]
    cf84:	e50b100c 	str	r1, [fp, #-12]
    cf88:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:57
    {
        return false;
    cf8c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:58
    }
    cf90:	e1a00003 	mov	r0, r3
    cf94:	e28bd000 	add	sp, fp, #0
    cf98:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cf9c:	e12fff1e 	bx	lr

0000cfa0 <_ZN25CShift_Register_FS_Driver11On_RegisterEv>:
_ZN25CShift_Register_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:64
};

class CShift_Register_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    cfa0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cfa4:	e28db000 	add	fp, sp, #0
    cfa8:	e24dd00c 	sub	sp, sp, #12
    cfac:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:67
    {
        //
    }
    cfb0:	e320f000 	nop	{0}
    cfb4:	e28bd000 	add	sp, fp, #0
    cfb8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cfbc:	e12fff1e 	bx	lr

0000cfc0 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:69

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cfc0:	e92d4810 	push	{r4, fp, lr}
    cfc4:	e28db008 	add	fp, sp, #8
    cfc8:	e24dd01c 	sub	sp, sp, #28
    cfcc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    cfd0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    cfd4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:73
    {
        // shift register je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sShift_Register.Open())
    cfd8:	e59f0048 	ldr	r0, [pc, #72]	; d028 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x68>
    cfdc:	ebfff7fc 	bl	afd4 <_ZN15CShift_Register4OpenEv>
    cfe0:	e1a03000 	mov	r3, r0
    cfe4:	e2233001 	eor	r3, r3, #1
    cfe8:	e6ef3073 	uxtb	r3, r3
    cfec:	e3530000 	cmp	r3, #0
    cff0:	0a000001 	beq	cffc <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:74
            return nullptr;
    cff4:	e3a03000 	mov	r3, #0
    cff8:	ea000007 	b	d01c <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:76

        CShift_Register_File* f = new CShift_Register_File();
    cffc:	e3a00008 	mov	r0, #8
    d000:	ebfffcee 	bl	c3c0 <_Znwj>
    d004:	e1a03000 	mov	r3, r0
    d008:	e1a04003 	mov	r4, r3
    d00c:	e1a00004 	mov	r0, r4
    d010:	ebffff6a 	bl	cdc0 <_ZN20CShift_Register_FileC1Ev>
    d014:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:78

        return f;
    d018:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:79
    }
    d01c:	e1a00003 	mov	r0, r3
    d020:	e24bd008 	sub	sp, fp, #8
    d024:	e8bd8810 	pop	{r4, fp, pc}
    d028:	00010c14 	andeq	r0, r1, r4, lsl ip

0000d02c <_ZN10CTRNG_FileC1Ev>:
_ZN10CTRNG_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:16
{
private:
    bool mOpened;

public:
    CTRNG_File()
    d02c:	e92d4800 	push	{fp, lr}
    d030:	e28db004 	add	fp, sp, #4
    d034:	e24dd008 	sub	sp, sp, #8
    d038:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:17
    {
    d03c:	e51b3008 	ldr	r3, [fp, #-8]
    d040:	e1a00003 	mov	r0, r3
    d044:	ebfffce9 	bl	c3f0 <_ZN5IFileC1Ev>
    d048:	e59f2014 	ldr	r2, [pc, #20]	; d064 <_ZN10CTRNG_FileC1Ev+0x38>
    d04c:	e51b3008 	ldr	r3, [fp, #-8]
    d050:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:19
        //
    }
    d054:	e51b3008 	ldr	r3, [fp, #-8]
    d058:	e1a00003 	mov	r0, r3
    d05c:	e24bd004 	sub	sp, fp, #4
    d060:	e8bd8800 	pop	{fp, pc}
    d064:	00010a3c 	andeq	r0, r1, ip, lsr sl

0000d068 <_ZN10CTRNG_FileD1Ev>:
_ZN10CTRNG_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21

    ~CTRNG_File()
    d068:	e92d4800 	push	{fp, lr}
    d06c:	e28db004 	add	fp, sp, #4
    d070:	e24dd008 	sub	sp, sp, #8
    d074:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    d078:	e59f2028 	ldr	r2, [pc, #40]	; d0a8 <_ZN10CTRNG_FileD1Ev+0x40>
    d07c:	e51b3008 	ldr	r3, [fp, #-8]
    d080:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:23
        Close();
    d084:	e51b0008 	ldr	r0, [fp, #-8]
    d088:	eb000059 	bl	d1f4 <_ZN10CTRNG_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    d08c:	e51b3008 	ldr	r3, [fp, #-8]
    d090:	e1a00003 	mov	r0, r3
    d094:	ebfffce2 	bl	c424 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    d098:	e51b3008 	ldr	r3, [fp, #-8]
    d09c:	e1a00003 	mov	r0, r3
    d0a0:	e24bd004 	sub	sp, fp, #4
    d0a4:	e8bd8800 	pop	{fp, pc}
    d0a8:	00010a3c 	andeq	r0, r1, ip, lsr sl

0000d0ac <_ZN10CTRNG_FileD0Ev>:
_ZN10CTRNG_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21
    ~CTRNG_File()
    d0ac:	e92d4800 	push	{fp, lr}
    d0b0:	e28db004 	add	fp, sp, #4
    d0b4:	e24dd008 	sub	sp, sp, #8
    d0b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    d0bc:	e51b0008 	ldr	r0, [fp, #-8]
    d0c0:	ebffffe8 	bl	d068 <_ZN10CTRNG_FileD1Ev>
    d0c4:	e3a01008 	mov	r1, #8
    d0c8:	e51b0008 	ldr	r0, [fp, #-8]
    d0cc:	ebfff6b3 	bl	aba0 <_ZdlPvj>
    d0d0:	e51b3008 	ldr	r3, [fp, #-8]
    d0d4:	e1a00003 	mov	r0, r3
    d0d8:	e24bd004 	sub	sp, fp, #4
    d0dc:	e8bd8800 	pop	{fp, pc}

0000d0e0 <_ZN10CTRNG_File4ReadEPcj>:
_ZN10CTRNG_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:26

    virtual uint32_t Read(char* buffer, uint32_t num) override
    d0e0:	e92d4810 	push	{r4, fp, lr}
    d0e4:	e28db008 	add	fp, sp, #8
    d0e8:	e24dd024 	sub	sp, sp, #36	; 0x24
    d0ec:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    d0f0:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    d0f4:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:28
    {
        const uint32_t wcount = num / 4;
    d0f8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    d0fc:	e1a03123 	lsr	r3, r3, #2
    d100:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:29
        uint32_t* wbuf = reinterpret_cast<uint32_t*>(buffer);
    d104:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    d108:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30
        for (int i = 0; i < wcount; i++)
    d10c:	e3a03000 	mov	r3, #0
    d110:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 3)
    d114:	e51b3010 	ldr	r3, [fp, #-16]
    d118:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    d11c:	e1520003 	cmp	r2, r3
    d120:	9a00000b 	bls	d154 <_ZN10CTRNG_File4ReadEPcj+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:31 (discriminator 2)
            wbuf[i] = sTRNG.Get_Random_Number();
    d124:	e51b3010 	ldr	r3, [fp, #-16]
    d128:	e1a03103 	lsl	r3, r3, #2
    d12c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    d130:	e0824003 	add	r4, r2, r3
    d134:	e59f0088 	ldr	r0, [pc, #136]	; d1c4 <_ZN10CTRNG_File4ReadEPcj+0xe4>
    d138:	ebfffa17 	bl	b99c <_ZN5CTRNG17Get_Random_NumberEv>
    d13c:	e1a03000 	mov	r3, r0
    d140:	e5843000 	str	r3, [r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 2)
        for (int i = 0; i < wcount; i++)
    d144:	e51b3010 	ldr	r3, [fp, #-16]
    d148:	e2833001 	add	r3, r3, #1
    d14c:	e50b3010 	str	r3, [fp, #-16]
    d150:	eaffffef 	b	d114 <_ZN10CTRNG_File4ReadEPcj+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:33

        if (wcount * 4 != num)
    d154:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    d158:	e1a03103 	lsl	r3, r3, #2
    d15c:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
    d160:	e1520003 	cmp	r2, r3
    d164:	0a000012 	beq	d1b4 <_ZN10CTRNG_File4ReadEPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37
        {
            // tohle by se dalo vyresit jednim generovanim a posunem na pozici, ale pro ted staci takhle
            // ted tomu trochu "krademe" entropii
            for (int i = wcount * 4; i < num; i++)
    d168:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    d16c:	e1a03103 	lsl	r3, r3, #2
    d170:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 3)
    d174:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d178:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
    d17c:	e1520003 	cmp	r2, r3
    d180:	9a00000b 	bls	d1b4 <_ZN10CTRNG_File4ReadEPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:38 (discriminator 2)
                buffer[i] = static_cast<uint8_t>(sTRNG.Get_Random_Number());
    d184:	e59f0038 	ldr	r0, [pc, #56]	; d1c4 <_ZN10CTRNG_File4ReadEPcj+0xe4>
    d188:	ebfffa03 	bl	b99c <_ZN5CTRNG17Get_Random_NumberEv>
    d18c:	e1a01000 	mov	r1, r0
    d190:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d194:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
    d198:	e0823003 	add	r3, r2, r3
    d19c:	e6ef2071 	uxtb	r2, r1
    d1a0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 2)
            for (int i = wcount * 4; i < num; i++)
    d1a4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d1a8:	e2833001 	add	r3, r3, #1
    d1ac:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    d1b0:	eaffffef 	b	d174 <_ZN10CTRNG_File4ReadEPcj+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:41
        }

        return 0;
    d1b4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:42
    }
    d1b8:	e1a00003 	mov	r0, r3
    d1bc:	e24bd008 	sub	sp, fp, #8
    d1c0:	e8bd8810 	pop	{r4, fp, pc}
    d1c4:	00010c2c 	andeq	r0, r1, ip, lsr #24

0000d1c8 <_ZN10CTRNG_File5WriteEPKcj>:
_ZN10CTRNG_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:44

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    d1c8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d1cc:	e28db000 	add	fp, sp, #0
    d1d0:	e24dd014 	sub	sp, sp, #20
    d1d4:	e50b0008 	str	r0, [fp, #-8]
    d1d8:	e50b100c 	str	r1, [fp, #-12]
    d1dc:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:48
    {
        // do TRNG nelze zapisovat

        return 0;
    d1e0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:49
    }
    d1e4:	e1a00003 	mov	r0, r3
    d1e8:	e28bd000 	add	sp, fp, #0
    d1ec:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d1f0:	e12fff1e 	bx	lr

0000d1f4 <_ZN10CTRNG_File5CloseEv>:
_ZN10CTRNG_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:51

    virtual bool Close() override
    d1f4:	e92d4800 	push	{fp, lr}
    d1f8:	e28db004 	add	fp, sp, #4
    d1fc:	e24dd008 	sub	sp, sp, #8
    d200:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:53
    {
        if (!mOpened)
    d204:	e51b3008 	ldr	r3, [fp, #-8]
    d208:	e5d33004 	ldrb	r3, [r3, #4]
    d20c:	e2233001 	eor	r3, r3, #1
    d210:	e6ef3073 	uxtb	r3, r3
    d214:	e3530000 	cmp	r3, #0
    d218:	0a000001 	beq	d224 <_ZN10CTRNG_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:54
            return false;
    d21c:	e3a03000 	mov	r3, #0
    d220:	ea000005 	b	d23c <_ZN10CTRNG_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:56

        sTRNG.Close();
    d224:	e59f001c 	ldr	r0, [pc, #28]	; d248 <_ZN10CTRNG_File5CloseEv+0x54>
    d228:	ebfff9b3 	bl	b8fc <_ZN5CTRNG5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:57
        mOpened = false;
    d22c:	e51b3008 	ldr	r3, [fp, #-8]
    d230:	e3a02000 	mov	r2, #0
    d234:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:59

        return true;
    d238:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:60
    }
    d23c:	e1a00003 	mov	r0, r3
    d240:	e24bd004 	sub	sp, fp, #4
    d244:	e8bd8800 	pop	{fp, pc}
    d248:	00010c2c 	andeq	r0, r1, ip, lsr #24

0000d24c <_ZN10CTRNG_File5IOCtlE16NIOCtl_OperationPv>:
_ZN10CTRNG_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:62

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    d24c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d250:	e28db000 	add	fp, sp, #0
    d254:	e24dd014 	sub	sp, sp, #20
    d258:	e50b0008 	str	r0, [fp, #-8]
    d25c:	e50b100c 	str	r1, [fp, #-12]
    d260:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:64
    {
        return false;
    d264:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:65
    }
    d268:	e1a00003 	mov	r0, r3
    d26c:	e28bd000 	add	sp, fp, #0
    d270:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d274:	e12fff1e 	bx	lr

0000d278 <_ZN15CTRNG_FS_Driver11On_RegisterEv>:
_ZN15CTRNG_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:71
};

class CTRNG_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    d278:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d27c:	e28db000 	add	fp, sp, #0
    d280:	e24dd00c 	sub	sp, sp, #12
    d284:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:74
    {
        //
    }
    d288:	e320f000 	nop	{0}
    d28c:	e28bd000 	add	sp, fp, #0
    d290:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d294:	e12fff1e 	bx	lr

0000d298 <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:76

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    d298:	e92d4810 	push	{r4, fp, lr}
    d29c:	e28db008 	add	fp, sp, #8
    d2a0:	e24dd01c 	sub	sp, sp, #28
    d2a4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d2a8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    d2ac:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:80
    {
        // TRNG je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sTRNG.Open(mode == NFile_Open_Mode::Read_Write)) // read_write povazujeme za "exkluzivni" mod
    d2b0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    d2b4:	e3530002 	cmp	r3, #2
    d2b8:	03a03001 	moveq	r3, #1
    d2bc:	13a03000 	movne	r3, #0
    d2c0:	e6ef3073 	uxtb	r3, r3
    d2c4:	e1a01003 	mov	r1, r3
    d2c8:	e59f0048 	ldr	r0, [pc, #72]	; d318 <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x80>
    d2cc:	ebfff950 	bl	b814 <_ZN5CTRNG4OpenEb>
    d2d0:	e1a03000 	mov	r3, r0
    d2d4:	e2233001 	eor	r3, r3, #1
    d2d8:	e6ef3073 	uxtb	r3, r3
    d2dc:	e3530000 	cmp	r3, #0
    d2e0:	0a000001 	beq	d2ec <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:81
            return nullptr;
    d2e4:	e3a03000 	mov	r3, #0
    d2e8:	ea000007 	b	d30c <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:83

        CTRNG_File* f = new CTRNG_File();
    d2ec:	e3a00008 	mov	r0, #8
    d2f0:	ebfffc32 	bl	c3c0 <_Znwj>
    d2f4:	e1a03000 	mov	r3, r0
    d2f8:	e1a04003 	mov	r4, r3
    d2fc:	e1a00004 	mov	r0, r4
    d300:	ebffff49 	bl	d02c <_ZN10CTRNG_FileC1Ev>
    d304:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:85

        return f;
    d308:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:86
    }
    d30c:	e1a00003 	mov	r0, r3
    d310:	e24bd008 	sub	sp, fp, #8
    d314:	e8bd8810 	pop	{r4, fp, pc}
    d318:	00010c2c 	andeq	r0, r1, ip, lsr #24

0000d31c <_ZN18COLED_Display_FileC1Ev>:
_ZN18COLED_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:17
{
    private:
        bool mOpened;

    public:
        COLED_Display_File()
    d31c:	e92d4800 	push	{fp, lr}
    d320:	e28db004 	add	fp, sp, #4
    d324:	e24dd008 	sub	sp, sp, #8
    d328:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:18
            : mOpened(true)
    d32c:	e51b3008 	ldr	r3, [fp, #-8]
    d330:	e1a00003 	mov	r0, r3
    d334:	ebfffc2d 	bl	c3f0 <_ZN5IFileC1Ev>
    d338:	e59f2020 	ldr	r2, [pc, #32]	; d360 <_ZN18COLED_Display_FileC1Ev+0x44>
    d33c:	e51b3008 	ldr	r3, [fp, #-8]
    d340:	e5832000 	str	r2, [r3]
    d344:	e51b3008 	ldr	r3, [fp, #-8]
    d348:	e3a02001 	mov	r2, #1
    d34c:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:21
        {
            //
        }
    d350:	e51b3008 	ldr	r3, [fp, #-8]
    d354:	e1a00003 	mov	r0, r3
    d358:	e24bd004 	sub	sp, fp, #4
    d35c:	e8bd8800 	pop	{fp, pc}
    d360:	00010a0c 	andeq	r0, r1, ip, lsl #20

0000d364 <_ZN18COLED_Display_FileD1Ev>:
_ZN18COLED_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:23

        ~COLED_Display_File()
    d364:	e92d4800 	push	{fp, lr}
    d368:	e28db004 	add	fp, sp, #4
    d36c:	e24dd008 	sub	sp, sp, #8
    d370:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:24
        {
    d374:	e59f2028 	ldr	r2, [pc, #40]	; d3a4 <_ZN18COLED_Display_FileD1Ev+0x40>
    d378:	e51b3008 	ldr	r3, [fp, #-8]
    d37c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:25
            Close();
    d380:	e51b0008 	ldr	r0, [fp, #-8]
    d384:	eb00002e 	bl	d444 <_ZN18COLED_Display_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:24
        {
    d388:	e51b3008 	ldr	r3, [fp, #-8]
    d38c:	e1a00003 	mov	r0, r3
    d390:	ebfffc23 	bl	c424 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:26
        }
    d394:	e51b3008 	ldr	r3, [fp, #-8]
    d398:	e1a00003 	mov	r0, r3
    d39c:	e24bd004 	sub	sp, fp, #4
    d3a0:	e8bd8800 	pop	{fp, pc}
    d3a4:	00010a0c 	andeq	r0, r1, ip, lsl #20

0000d3a8 <_ZN18COLED_Display_FileD0Ev>:
_ZN18COLED_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:23
        ~COLED_Display_File()
    d3a8:	e92d4800 	push	{fp, lr}
    d3ac:	e28db004 	add	fp, sp, #4
    d3b0:	e24dd008 	sub	sp, sp, #8
    d3b4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:26
        }
    d3b8:	e51b0008 	ldr	r0, [fp, #-8]
    d3bc:	ebffffe8 	bl	d364 <_ZN18COLED_Display_FileD1Ev>
    d3c0:	e3a01008 	mov	r1, #8
    d3c4:	e51b0008 	ldr	r0, [fp, #-8]
    d3c8:	ebfff5f4 	bl	aba0 <_ZdlPvj>
    d3cc:	e51b3008 	ldr	r3, [fp, #-8]
    d3d0:	e1a00003 	mov	r0, r3
    d3d4:	e24bd004 	sub	sp, fp, #4
    d3d8:	e8bd8800 	pop	{fp, pc}

0000d3dc <_ZN18COLED_Display_File4ReadEPcj>:
_ZN18COLED_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:28

        virtual uint32_t Read(char* buffer, uint32_t num) override
    d3dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d3e0:	e28db000 	add	fp, sp, #0
    d3e4:	e24dd014 	sub	sp, sp, #20
    d3e8:	e50b0008 	str	r0, [fp, #-8]
    d3ec:	e50b100c 	str	r1, [fp, #-12]
    d3f0:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:32
        {
            // neumime cist zatim - maximalne pro odezvy v ramci protokolu, ale to pro ted neni dulezite

            return 0;
    d3f4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:33
        }
    d3f8:	e1a00003 	mov	r0, r3
    d3fc:	e28bd000 	add	sp, fp, #0
    d400:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d404:	e12fff1e 	bx	lr

0000d408 <_ZN18COLED_Display_File5WriteEPKcj>:
_ZN18COLED_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:35

        virtual uint32_t Write(const char* buffer, uint32_t num) override
    d408:	e92d4800 	push	{fp, lr}
    d40c:	e28db004 	add	fp, sp, #4
    d410:	e24dd010 	sub	sp, sp, #16
    d414:	e50b0008 	str	r0, [fp, #-8]
    d418:	e50b100c 	str	r1, [fp, #-12]
    d41c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:37
        {
            sDisplay_SSD1306.Process_External_Command(buffer, num);
    d420:	e51b2010 	ldr	r2, [fp, #-16]
    d424:	e51b100c 	ldr	r1, [fp, #-12]
    d428:	e59f0010 	ldr	r0, [pc, #16]	; d440 <_ZN18COLED_Display_File5WriteEPKcj+0x38>
    d42c:	ebfff46b 	bl	a5e0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:39

            return num;
    d430:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:40
        }
    d434:	e1a00003 	mov	r0, r3
    d438:	e24bd004 	sub	sp, fp, #4
    d43c:	e8bd8800 	pop	{fp, pc}
    d440:	00010bfc 	strdeq	r0, [r1], -ip

0000d444 <_ZN18COLED_Display_File5CloseEv>:
_ZN18COLED_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:42

        virtual bool Close() override
    d444:	e92d4800 	push	{fp, lr}
    d448:	e28db004 	add	fp, sp, #4
    d44c:	e24dd008 	sub	sp, sp, #8
    d450:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:44
        {
            if (!mOpened)
    d454:	e51b3008 	ldr	r3, [fp, #-8]
    d458:	e5d33004 	ldrb	r3, [r3, #4]
    d45c:	e2233001 	eor	r3, r3, #1
    d460:	e6ef3073 	uxtb	r3, r3
    d464:	e3530000 	cmp	r3, #0
    d468:	0a000001 	beq	d474 <_ZN18COLED_Display_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:45
                return false;
    d46c:	e3a03000 	mov	r3, #0
    d470:	ea000005 	b	d48c <_ZN18COLED_Display_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:47

            sDisplay_SSD1306.Close();
    d474:	e59f001c 	ldr	r0, [pc, #28]	; d498 <_ZN18COLED_Display_File5CloseEv+0x54>
    d478:	ebfff30d 	bl	a0b4 <_ZN16CDisplay_SSD13065CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:48
            mOpened = false;
    d47c:	e51b3008 	ldr	r3, [fp, #-8]
    d480:	e3a02000 	mov	r2, #0
    d484:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:50

            return true;
    d488:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:51
        }
    d48c:	e1a00003 	mov	r0, r3
    d490:	e24bd004 	sub	sp, fp, #4
    d494:	e8bd8800 	pop	{fp, pc}
    d498:	00010bfc 	strdeq	r0, [r1], -ip

0000d49c <_ZN18COLED_Display_File5IOCtlE16NIOCtl_OperationPv>:
_ZN18COLED_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:53

        virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    d49c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d4a0:	e28db000 	add	fp, sp, #0
    d4a4:	e24dd014 	sub	sp, sp, #20
    d4a8:	e50b0008 	str	r0, [fp, #-8]
    d4ac:	e50b100c 	str	r1, [fp, #-12]
    d4b0:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:55
        {
            return false;
    d4b4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:56
        }
    d4b8:	e1a00003 	mov	r0, r3
    d4bc:	e28bd000 	add	sp, fp, #0
    d4c0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d4c4:	e12fff1e 	bx	lr

0000d4c8 <_ZN23COLED_Display_FS_Driver11On_RegisterEv>:
_ZN23COLED_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:62
};

class COLED_Display_FS_Driver : public IFilesystem_Driver
{
	public:
		virtual void On_Register() override
    d4c8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d4cc:	e28db000 	add	fp, sp, #0
    d4d0:	e24dd00c 	sub	sp, sp, #12
    d4d4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:65
        {
            //
        }
    d4d8:	e320f000 	nop	{0}
    d4dc:	e28bd000 	add	sp, fp, #0
    d4e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d4e4:	e12fff1e 	bx	lr

0000d4e8 <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:67

        virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    d4e8:	e92d4810 	push	{r4, fp, lr}
    d4ec:	e28db008 	add	fp, sp, #8
    d4f0:	e24dd01c 	sub	sp, sp, #28
    d4f4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d4f8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    d4fc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:71
        {
            // OLED displej je jen jeden a vyhrazeny, takze je jedno co je v ceste

            if (!sDisplay_SSD1306.Open(128, 32)) // velikost by se dala nastavovat jinudy, napr. ioctl nebo protokolem; pro jednoduchost to zkratime takhle
    d500:	e3a02020 	mov	r2, #32
    d504:	e3a01080 	mov	r1, #128	; 0x80
    d508:	e59f0048 	ldr	r0, [pc, #72]	; d558 <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x70>
    d50c:	ebfff0f6 	bl	98ec <_ZN16CDisplay_SSD13064OpenEii>
    d510:	e1a03000 	mov	r3, r0
    d514:	e2233001 	eor	r3, r3, #1
    d518:	e6ef3073 	uxtb	r3, r3
    d51c:	e3530000 	cmp	r3, #0
    d520:	0a000001 	beq	d52c <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:72
                return nullptr;
    d524:	e3a03000 	mov	r3, #0
    d528:	ea000007 	b	d54c <_ZN23COLED_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:74

            COLED_Display_File* f = new COLED_Display_File();
    d52c:	e3a00008 	mov	r0, #8
    d530:	ebfffba2 	bl	c3c0 <_Znwj>
    d534:	e1a03000 	mov	r3, r0
    d538:	e1a04003 	mov	r4, r3
    d53c:	e1a00004 	mov	r0, r4
    d540:	ebffff75 	bl	d31c <_ZN18COLED_Display_FileC1Ev>
    d544:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:76

            return f;
    d548:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:77
        }
    d54c:	e1a00003 	mov	r0, r3
    d550:	e24bd008 	sub	sp, fp, #8
    d554:	e8bd8810 	pop	{r4, fp, pc}
    d558:	00010bfc 	strdeq	r0, [r1], -ip

0000d55c <_internal_software_interrupt_handler>:
_internal_software_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:19

extern "C" TSWI_Result* _internal_software_interrupt_handler(uint32_t register r0,
                                                             uint32_t register r1,
                                                             uint32_t register r2,
                                                             uint32_t register /*r3*/ service_identifier)
{
    d55c:	e92d4800 	push	{fp, lr}
    d560:	e28db004 	add	fp, sp, #4
    d564:	e24dd010 	sub	sp, sp, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:21
    // facility jsou horni 2 bity, zbytek je cislo sluzby v dane facility
    NSWI_Facility facility = static_cast<NSWI_Facility>(service_identifier >> 6);
    d568:	e1a0c323 	lsr	ip, r3, #6
    d56c:	e50bc008 	str	ip, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:23

    switch (facility)
    d570:	e51bc008 	ldr	ip, [fp, #-8]
    d574:	e35c0000 	cmp	ip, #0
    d578:	0a000003 	beq	d58c <_internal_software_interrupt_handler+0x30>
    d57c:	e51bc008 	ldr	ip, [fp, #-8]
    d580:	e35c0001 	cmp	ip, #1
    d584:	0a00000b 	beq	d5b8 <_internal_software_interrupt_handler+0x5c>
    d588:	ea000015 	b	d5e4 <_internal_software_interrupt_handler+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:26
    {
        case NSWI_Facility::Process:
            sProcessMgr.Handle_Process_SWI(static_cast<NSWI_Process_Service>(service_identifier & 0x3F),
    d58c:	e203303f 	and	r3, r3, #63	; 0x3f
    d590:	e1a0c003 	mov	ip, r3
    d594:	e59f3058 	ldr	r3, [pc, #88]	; d5f4 <_internal_software_interrupt_handler+0x98>
    d598:	e58d3004 	str	r3, [sp, #4]
    d59c:	e58d2000 	str	r2, [sp]
    d5a0:	e1a03001 	mov	r3, r1
    d5a4:	e1a02000 	mov	r2, r0
    d5a8:	e1a0100c 	mov	r1, ip
    d5ac:	e59f0044 	ldr	r0, [pc, #68]	; d5f8 <_internal_software_interrupt_handler+0x9c>
    d5b0:	eb000423 	bl	e644 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:31
                                           r0,
                                           r1,
                                           r2,
                                           _SWI_Result);
            break;
    d5b4:	ea00000a 	b	d5e4 <_internal_software_interrupt_handler+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:33
        case NSWI_Facility::Filesystem:
            sProcessMgr.Handle_Filesystem_SWI(static_cast<NSWI_Filesystem_Service>(service_identifier & 0x3F),
    d5b8:	e203303f 	and	r3, r3, #63	; 0x3f
    d5bc:	e1a0c003 	mov	ip, r3
    d5c0:	e59f302c 	ldr	r3, [pc, #44]	; d5f4 <_internal_software_interrupt_handler+0x98>
    d5c4:	e58d3004 	str	r3, [sp, #4]
    d5c8:	e58d2000 	str	r2, [sp]
    d5cc:	e1a03001 	mov	r3, r1
    d5d0:	e1a02000 	mov	r2, r0
    d5d4:	e1a0100c 	mov	r1, ip
    d5d8:	e59f0018 	ldr	r0, [pc, #24]	; d5f8 <_internal_software_interrupt_handler+0x9c>
    d5dc:	eb000431 	bl	e6a8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:38
                                              r0,
                                              r1,
                                              r2,
                                              _SWI_Result);
            break;
    d5e0:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:41
    }

    return &_SWI_Result;
    d5e4:	e59f3008 	ldr	r3, [pc, #8]	; d5f4 <_internal_software_interrupt_handler+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:42
}
    d5e8:	e1a00003 	mov	r0, r3
    d5ec:	e24bd004 	sub	sp, fp, #4
    d5f0:	e8bd8800 	pop	{fp, pc}
    d5f4:	00010cc8 	andeq	r0, r1, r8, asr #25
    d5f8:	00011cd4 	ldrdeq	r1, [r1], -r4

0000d5fc <_internal_irq_handler>:
_internal_irq_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:45

extern "C" void _internal_irq_handler()
{
    d5fc:	e92d4800 	push	{fp, lr}
    d600:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:50
    // jelikoz ARM nerozlisuje zdroje IRQ implicitne, ani nezarucuje, ze se navzajen nemaskuji, musime
    // projit vsechny mozne zdroje a podivat se (poll), zda nebylo vyvolano preruseni

    // casovac
    if (sTimer.Is_Timer_IRQ_Pending())
    d604:	e59f001c 	ldr	r0, [pc, #28]	; d628 <_internal_irq_handler+0x2c>
    d608:	ebfff845 	bl	b724 <_ZN6CTimer20Is_Timer_IRQ_PendingEv>
    d60c:	e1a03000 	mov	r3, r0
    d610:	e3530000 	cmp	r3, #0
    d614:	0a000001 	beq	d620 <_internal_irq_handler+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:51
        sTimer.IRQ_Callback();
    d618:	e59f0008 	ldr	r0, [pc, #8]	; d628 <_internal_irq_handler+0x2c>
    d61c:	ebfff82c 	bl	b6d4 <_ZN6CTimer12IRQ_CallbackEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:52
}
    d620:	e320f000 	nop	{0}
    d624:	e8bd8800 	pop	{fp, pc}
    d628:	00010c24 	andeq	r0, r1, r4, lsr #24

0000d62c <fast_interrupt_handler>:
fast_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:55

extern "C" void __attribute__((interrupt("FIQ"))) fast_interrupt_handler()
{
    d62c:	e24db004 	sub	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:57
    // zatim nepouzivame
}
    d630:	e320f000 	nop	{0}
    d634:	e28bd004 	add	sp, fp, #4
    d638:	e25ef004 	subs	pc, lr, #4

0000d63c <_ZN21CInterrupt_ControllerC1Em>:
_ZN21CInterrupt_ControllerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:61

// implementace controlleru

CInterrupt_Controller::CInterrupt_Controller(unsigned long base)
    d63c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d640:	e28db000 	add	fp, sp, #0
    d644:	e24dd00c 	sub	sp, sp, #12
    d648:	e50b0008 	str	r0, [fp, #-8]
    d64c:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:62
: mInterrupt_Regs(reinterpret_cast<unsigned int*>(base))
    d650:	e51b200c 	ldr	r2, [fp, #-12]
    d654:	e51b3008 	ldr	r3, [fp, #-8]
    d658:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:65
{
    //
}
    d65c:	e51b3008 	ldr	r3, [fp, #-8]
    d660:	e1a00003 	mov	r0, r3
    d664:	e28bd000 	add	sp, fp, #0
    d668:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d66c:	e12fff1e 	bx	lr

0000d670 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>:
_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:68

volatile unsigned int& CInterrupt_Controller::Regs(hal::Interrupt_Controller_Reg reg)
{
    d670:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d674:	e28db000 	add	fp, sp, #0
    d678:	e24dd00c 	sub	sp, sp, #12
    d67c:	e50b0008 	str	r0, [fp, #-8]
    d680:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:69
    return mInterrupt_Regs[static_cast<unsigned int>(reg)];
    d684:	e51b3008 	ldr	r3, [fp, #-8]
    d688:	e5932000 	ldr	r2, [r3]
    d68c:	e51b300c 	ldr	r3, [fp, #-12]
    d690:	e1a03103 	lsl	r3, r3, #2
    d694:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:70
}
    d698:	e1a00003 	mov	r0, r3
    d69c:	e28bd000 	add	sp, fp, #0
    d6a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d6a4:	e12fff1e 	bx	lr

0000d6a8 <_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE>:
_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:73

void CInterrupt_Controller::Enable_Basic_IRQ(hal::IRQ_Basic_Source source_idx)
{
    d6a8:	e92d4810 	push	{r4, fp, lr}
    d6ac:	e28db008 	add	fp, sp, #8
    d6b0:	e24dd00c 	sub	sp, sp, #12
    d6b4:	e50b0010 	str	r0, [fp, #-16]
    d6b8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:74
    Regs(hal::Interrupt_Controller_Reg::IRQ_Basic_Enable) = (1 << static_cast<unsigned int>(source_idx));
    d6bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d6c0:	e3a02001 	mov	r2, #1
    d6c4:	e1a04312 	lsl	r4, r2, r3
    d6c8:	e3a01006 	mov	r1, #6
    d6cc:	e51b0010 	ldr	r0, [fp, #-16]
    d6d0:	ebffffe6 	bl	d670 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d6d4:	e1a03000 	mov	r3, r0
    d6d8:	e1a02004 	mov	r2, r4
    d6dc:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:75
}
    d6e0:	e320f000 	nop	{0}
    d6e4:	e24bd008 	sub	sp, fp, #8
    d6e8:	e8bd8810 	pop	{r4, fp, pc}

0000d6ec <_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE>:
_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:78

void CInterrupt_Controller::Disable_Basic_IRQ(hal::IRQ_Basic_Source source_idx)
{
    d6ec:	e92d4810 	push	{r4, fp, lr}
    d6f0:	e28db008 	add	fp, sp, #8
    d6f4:	e24dd00c 	sub	sp, sp, #12
    d6f8:	e50b0010 	str	r0, [fp, #-16]
    d6fc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:79
    Regs(hal::Interrupt_Controller_Reg::IRQ_Basic_Disable) = (1 << static_cast<unsigned int>(source_idx));
    d700:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d704:	e3a02001 	mov	r2, #1
    d708:	e1a04312 	lsl	r4, r2, r3
    d70c:	e3a01009 	mov	r1, #9
    d710:	e51b0010 	ldr	r0, [fp, #-16]
    d714:	ebffffd5 	bl	d670 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d718:	e1a03000 	mov	r3, r0
    d71c:	e1a02004 	mov	r2, r4
    d720:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:80
}
    d724:	e320f000 	nop	{0}
    d728:	e24bd008 	sub	sp, fp, #8
    d72c:	e8bd8810 	pop	{r4, fp, pc}

0000d730 <_ZN21CInterrupt_Controller10Enable_IRQEN3hal10IRQ_SourceE>:
_ZN21CInterrupt_Controller10Enable_IRQEN3hal10IRQ_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:83

void CInterrupt_Controller::Enable_IRQ(hal::IRQ_Source source_idx)
{
    d730:	e92d4810 	push	{r4, fp, lr}
    d734:	e28db008 	add	fp, sp, #8
    d738:	e24dd014 	sub	sp, sp, #20
    d73c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d740:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:84
    const unsigned int idx_base = static_cast<unsigned int>(source_idx);
    d744:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    d748:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:87

    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    (1 << (idx_base % 32));
    d74c:	e51b3010 	ldr	r3, [fp, #-16]
    d750:	e203301f 	and	r3, r3, #31
    d754:	e3a02001 	mov	r2, #1
    d758:	e1a04312 	lsl	r4, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:86
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    d75c:	e3a01004 	mov	r1, #4
    d760:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    d764:	ebffffc1 	bl	d670 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d768:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:87
    (1 << (idx_base % 32));
    d76c:	e1a02004 	mov	r2, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:86
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    d770:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:88
}
    d774:	e320f000 	nop	{0}
    d778:	e24bd008 	sub	sp, fp, #8
    d77c:	e8bd8810 	pop	{r4, fp, pc}

0000d780 <_ZN21CInterrupt_Controller11Disable_IRQEN3hal10IRQ_SourceE>:
_ZN21CInterrupt_Controller11Disable_IRQEN3hal10IRQ_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:91

void CInterrupt_Controller::Disable_IRQ(hal::IRQ_Source source_idx)
{
    d780:	e92d4810 	push	{r4, fp, lr}
    d784:	e28db008 	add	fp, sp, #8
    d788:	e24dd014 	sub	sp, sp, #20
    d78c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d790:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:92
    const unsigned int idx_base = static_cast<unsigned int>(source_idx);
    d794:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    d798:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:95

    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    (1 << (idx_base % 32));
    d79c:	e51b3010 	ldr	r3, [fp, #-16]
    d7a0:	e203301f 	and	r3, r3, #31
    d7a4:	e3a02001 	mov	r2, #1
    d7a8:	e1a04312 	lsl	r4, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:94
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    d7ac:	e3a01007 	mov	r1, #7
    d7b0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    d7b4:	ebffffad 	bl	d670 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d7b8:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:95
    (1 << (idx_base % 32));
    d7bc:	e1a02004 	mov	r2, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:94
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    d7c0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
}
    d7c4:	e320f000 	nop	{0}
    d7c8:	e24bd008 	sub	sp, fp, #8
    d7cc:	e8bd8810 	pop	{r4, fp, pc}

0000d7d0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
    d7d0:	e92d4800 	push	{fp, lr}
    d7d4:	e28db004 	add	fp, sp, #4
    d7d8:	e24dd008 	sub	sp, sp, #8
    d7dc:	e50b0008 	str	r0, [fp, #-8]
    d7e0:	e50b100c 	str	r1, [fp, #-12]
    d7e4:	e51b3008 	ldr	r3, [fp, #-8]
    d7e8:	e3530001 	cmp	r3, #1
    d7ec:	1a000006 	bne	d80c <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96 (discriminator 1)
    d7f0:	e51b300c 	ldr	r3, [fp, #-12]
    d7f4:	e59f201c 	ldr	r2, [pc, #28]	; d818 <_Z41__static_initialization_and_destruction_0ii+0x48>
    d7f8:	e1530002 	cmp	r3, r2
    d7fc:	1a000002 	bne	d80c <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:9
CInterrupt_Controller sInterruptCtl(hal::Interrupt_Controller_Base);
    d800:	e59f1014 	ldr	r1, [pc, #20]	; d81c <_Z41__static_initialization_and_destruction_0ii+0x4c>
    d804:	e59f0014 	ldr	r0, [pc, #20]	; d820 <_Z41__static_initialization_and_destruction_0ii+0x50>
    d808:	ebffff8b 	bl	d63c <_ZN21CInterrupt_ControllerC1Em>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
}
    d80c:	e320f000 	nop	{0}
    d810:	e24bd004 	sub	sp, fp, #4
    d814:	e8bd8800 	pop	{fp, pc}
    d818:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    d81c:	2000b200 	andcs	fp, r0, r0, lsl #4
    d820:	00010cc4 	andeq	r0, r1, r4, asr #25

0000d824 <_GLOBAL__sub_I_sInterruptCtl>:
_GLOBAL__sub_I_sInterruptCtl():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
    d824:	e92d4800 	push	{fp, lr}
    d828:	e28db004 	add	fp, sp, #4
    d82c:	e59f1008 	ldr	r1, [pc, #8]	; d83c <_GLOBAL__sub_I_sInterruptCtl+0x18>
    d830:	e3a00001 	mov	r0, #1
    d834:	ebffffe5 	bl	d7d0 <_Z41__static_initialization_and_destruction_0ii>
    d838:	e8bd8800 	pop	{fp, pc}
    d83c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000d840 <Timer_Callback>:
Timer_Callback():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:22

// externi funkce pro povoleni IRQ
extern "C" void enable_irq();

extern "C" void Timer_Callback()
{
    d840:	e92d4800 	push	{fp, lr}
    d844:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:23
    sProcessMgr.Schedule();
    d848:	e59f0008 	ldr	r0, [pc, #8]	; d858 <Timer_Callback+0x18>
    d84c:	eb000291 	bl	e298 <_ZN16CProcess_Manager8ScheduleEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:24
}
    d850:	e320f000 	nop	{0}
    d854:	e8bd8800 	pop	{fp, pc}
    d858:	00011cd4 	ldrdeq	r1, [r1], -r4

0000d85c <_kernel_main>:
_kernel_main():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:35
extern void Process_4();
extern void Process_5();
extern void Process_6();

extern "C" int _kernel_main(void)
{
    d85c:	e92d4800 	push	{fp, lr}
    d860:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:46

    sUART0.Write("Welcome to KIV/OS RPiOS kernel\r\n");
    sUART0.Close();
    */

    sMonitor.Clear();
    d864:	e59f005c 	ldr	r0, [pc, #92]	; d8c8 <_kernel_main+0x6c>
    d868:	ebffee57 	bl	91cc <_ZN8CMonitor5ClearEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:49

    // inicializace souboroveho systemu
    sFilesystem.Initialize();
    d86c:	e59f0058 	ldr	r0, [pc, #88]	; d8cc <_kernel_main+0x70>
    d870:	ebfff906 	bl	bc90 <_ZN11CFilesystem10InitializeEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:54

    // vytvoreni hlavniho procesu
    // sProcessMgr.Create_Main_Process();

    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_1));
    d874:	e59f3054 	ldr	r3, [pc, #84]	; d8d0 <_kernel_main+0x74>
    d878:	e1a01003 	mov	r1, r3
    d87c:	e59f0050 	ldr	r0, [pc, #80]	; d8d4 <_kernel_main+0x78>
    d880:	eb000204 	bl	e098 <_ZN16CProcess_Manager14Create_ProcessEm>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:61
    /*sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_2));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_3));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_4));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_5));*/
	
	sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_6));
    d884:	e59f304c 	ldr	r3, [pc, #76]	; d8d8 <_kernel_main+0x7c>
    d888:	e1a01003 	mov	r1, r3
    d88c:	e59f0040 	ldr	r0, [pc, #64]	; d8d4 <_kernel_main+0x78>
    d890:	eb000200 	bl	e098 <_ZN16CProcess_Manager14Create_ProcessEm>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:64

    // zatim zakazeme IRQ casovace
    sInterruptCtl.Disable_Basic_IRQ(hal::IRQ_Basic_Source::Timer);
    d894:	e3a01000 	mov	r1, #0
    d898:	e59f003c 	ldr	r0, [pc, #60]	; d8dc <_kernel_main+0x80>
    d89c:	ebffff92 	bl	d6ec <_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:67

    // nastavime casovac - v callbacku se provadi planovani procesu
    sTimer.Enable(Timer_Callback, 0x20, NTimer_Prescaler::Prescaler_256);
    d8a0:	e3a03002 	mov	r3, #2
    d8a4:	e3a02020 	mov	r2, #32
    d8a8:	e59f1030 	ldr	r1, [pc, #48]	; d8e0 <_kernel_main+0x84>
    d8ac:	e59f0030 	ldr	r0, [pc, #48]	; d8e4 <_kernel_main+0x88>
    d8b0:	ebfff741 	bl	b5bc <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:70

    // povolime IRQ casovace
    sInterruptCtl.Enable_Basic_IRQ(hal::IRQ_Basic_Source::Timer);
    d8b4:	e3a01000 	mov	r1, #0
    d8b8:	e59f001c 	ldr	r0, [pc, #28]	; d8dc <_kernel_main+0x80>
    d8bc:	ebffff79 	bl	d6a8 <_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:73

    // povolime IRQ a od tohoto momentu je vse v rukou planovace
    enable_irq();
    d8c0:	eb0004b0 	bl	eb88 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:76 (discriminator 1)

    // nekonecna smycka - tadyodsud se CPU uz nedostane jinak, nez treba prerusenim
    while (1)
    d8c4:	eafffffe 	b	d8c4 <_kernel_main+0x68>
    d8c8:	00010bd4 	ldrdeq	r0, [r1], -r4
    d8cc:	00010c34 	andeq	r0, r1, r4, lsr ip
    d8d0:	0000ed08 	andeq	lr, r0, r8, lsl #26
    d8d4:	00011cd4 	ldrdeq	r1, [r1], -r4
    d8d8:	0000f204 	andeq	pc, r0, r4, lsl #4
    d8dc:	00010cc4 	andeq	r0, r1, r4, asr #25
    d8e0:	0000d840 	andeq	sp, r0, r0, asr #16
    d8e4:	00010c24 	andeq	r0, r1, r4, lsr #24

0000d8e8 <_ZN20CKernel_Heap_ManagerC1Ev>:
_ZN20CKernel_Heap_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:6
#include <memory/kernel_heap.h>
#include <memory/pages.h>

CKernel_Heap_Manager sKernelMem;

CKernel_Heap_Manager::CKernel_Heap_Manager()
    d8e8:	e92d4800 	push	{fp, lr}
    d8ec:	e28db004 	add	fp, sp, #4
    d8f0:	e24dd008 	sub	sp, sp, #8
    d8f4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:10
{
    // na zacatku si alokujeme jednu stranku dopredu, protoze je temer jiste, ze budeme docela brzy potrebovat nejakou
    // pamet
    mFirst = Alloc_Next_Page();
    d8f8:	e51b0008 	ldr	r0, [fp, #-8]
    d8fc:	eb000006 	bl	d91c <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv>
    d900:	e1a02000 	mov	r2, r0
    d904:	e51b3008 	ldr	r3, [fp, #-8]
    d908:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:11
}
    d90c:	e51b3008 	ldr	r3, [fp, #-8]
    d910:	e1a00003 	mov	r0, r3
    d914:	e24bd004 	sub	sp, fp, #4
    d918:	e8bd8800 	pop	{fp, pc}

0000d91c <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv>:
_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:14

TKernel_Heap_Chunk_Header* CKernel_Heap_Manager::Alloc_Next_Page()
{
    d91c:	e92d4800 	push	{fp, lr}
    d920:	e28db004 	add	fp, sp, #4
    d924:	e24dd010 	sub	sp, sp, #16
    d928:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:15
    TKernel_Heap_Chunk_Header* chunk = reinterpret_cast<TKernel_Heap_Chunk_Header*>(sPage_Manager.Alloc_Page());
    d92c:	e59f0048 	ldr	r0, [pc, #72]	; d97c <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv+0x60>
    d930:	eb00010f 	bl	dd74 <_ZN13CPage_Manager10Alloc_PageEv>
    d934:	e1a03000 	mov	r3, r0
    d938:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:16
    chunk->prev = nullptr;
    d93c:	e51b3008 	ldr	r3, [fp, #-8]
    d940:	e3a02000 	mov	r2, #0
    d944:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:17
    chunk->next = nullptr;
    d948:	e51b3008 	ldr	r3, [fp, #-8]
    d94c:	e3a02000 	mov	r2, #0
    d950:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:18
    chunk->size =
    d954:	e51b3008 	ldr	r3, [fp, #-8]
    d958:	e59f2020 	ldr	r2, [pc, #32]	; d980 <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv+0x64>
    d95c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:20
    mem::PageSize - sizeof(TKernel_Heap_Chunk_Header); // z alokovane stranky musime ubrat velikost hlavicky
    chunk->is_free = true;
    d960:	e51b3008 	ldr	r3, [fp, #-8]
    d964:	e3a02001 	mov	r2, #1
    d968:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:22

    return chunk;
    d96c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:23
}
    d970:	e1a00003 	mov	r0, r3
    d974:	e24bd004 	sub	sp, fp, #4
    d978:	e8bd8800 	pop	{fp, pc}
    d97c:	00010cd4 	ldrdeq	r0, [r1], -r4
    d980:	00003ff0 	strdeq	r3, [r0], -r0

0000d984 <_ZN20CKernel_Heap_Manager5AllocEj>:
_ZN20CKernel_Heap_Manager5AllocEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:26

void* CKernel_Heap_Manager::Alloc(uint32_t size)
{
    d984:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d988:	e28db000 	add	fp, sp, #0
    d98c:	e24dd014 	sub	sp, sp, #20
    d990:	e50b0010 	str	r0, [fp, #-16]
    d994:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:27
    TKernel_Heap_Chunk_Header* chunk = mFirst;
    d998:	e51b3010 	ldr	r3, [fp, #-16]
    d99c:	e5933000 	ldr	r3, [r3]
    d9a0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31

    // potrebujeme najit prvni blok, ktery je volny a zaroven alespon tak velky, jak potrebujeme (pro ted pouzivame
    // proste first-fit)
    while (chunk != nullptr && (!chunk->is_free || chunk->size < size))
    d9a4:	e51b3008 	ldr	r3, [fp, #-8]
    d9a8:	e3530000 	cmp	r3, #0
    d9ac:	0a00000c 	beq	d9e4 <_ZN20CKernel_Heap_Manager5AllocEj+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31 (discriminator 1)
    d9b0:	e51b3008 	ldr	r3, [fp, #-8]
    d9b4:	e5d3300c 	ldrb	r3, [r3, #12]
    d9b8:	e3530000 	cmp	r3, #0
    d9bc:	0a000004 	beq	d9d4 <_ZN20CKernel_Heap_Manager5AllocEj+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31 (discriminator 2)
    d9c0:	e51b3008 	ldr	r3, [fp, #-8]
    d9c4:	e5933008 	ldr	r3, [r3, #8]
    d9c8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    d9cc:	e1520003 	cmp	r2, r3
    d9d0:	9a000003 	bls	d9e4 <_ZN20CKernel_Heap_Manager5AllocEj+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:33
    {
        chunk = chunk->next;
    d9d4:	e51b3008 	ldr	r3, [fp, #-8]
    d9d8:	e5933004 	ldr	r3, [r3, #4]
    d9dc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31
    while (chunk != nullptr && (!chunk->is_free || chunk->size < size))
    d9e0:	eaffffef 	b	d9a4 <_ZN20CKernel_Heap_Manager5AllocEj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:36
    }

    if (!chunk)
    d9e4:	e51b3008 	ldr	r3, [fp, #-8]
    d9e8:	e3530000 	cmp	r3, #0
    d9ec:	1a000001 	bne	d9f8 <_ZN20CKernel_Heap_Manager5AllocEj+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:40
    {
        // TODO: tady by se hodila alokace dalsi stranky (Alloc_Next_Page) a navazani na predchozi chunk
        // pro ted nechme byt, vic jak 4kB snad v tomto prikladu potrebovat nebudeme
        return nullptr;
    d9f0:	e3a03000 	mov	r3, #0
    d9f4:	ea000031 	b	dac0 <_ZN20CKernel_Heap_Manager5AllocEj+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:46
    }

    // pokud je pozadovane misto uz tak velke, jak potrebujeme, tak je to snadne - jen ho oznacime za alokovane a
    // vratime vzdy zarovname tak, aby se do dalsiho potencialniho bloku vesla alespon hlavicka dalsiho bloku a nejaky
    // overlap (alespon jeden bajt)
    if (chunk->size >= size && chunk->size <= size + sizeof(TKernel_Heap_Chunk_Header) + 1)
    d9f8:	e51b3008 	ldr	r3, [fp, #-8]
    d9fc:	e5933008 	ldr	r3, [r3, #8]
    da00:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    da04:	e1520003 	cmp	r2, r3
    da08:	8a00000b 	bhi	da3c <_ZN20CKernel_Heap_Manager5AllocEj+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:46 (discriminator 1)
    da0c:	e51b3008 	ldr	r3, [fp, #-8]
    da10:	e5932008 	ldr	r2, [r3, #8]
    da14:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    da18:	e2833011 	add	r3, r3, #17
    da1c:	e1520003 	cmp	r2, r3
    da20:	8a000005 	bhi	da3c <_ZN20CKernel_Heap_Manager5AllocEj+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:48
    {
        chunk->is_free = false;
    da24:	e51b3008 	ldr	r3, [fp, #-8]
    da28:	e3a02000 	mov	r2, #0
    da2c:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:50
        return reinterpret_cast<uint8_t*>(chunk) +
               sizeof(TKernel_Heap_Chunk_Header); // vracime az pouzitelnou pamet, tedy to co nasleduje po hlavicce
    da30:	e51b3008 	ldr	r3, [fp, #-8]
    da34:	e2833010 	add	r3, r3, #16
    da38:	ea000020 	b	dac0 <_ZN20CKernel_Heap_Manager5AllocEj+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:57

    // pokud je vetsi, musime blok rozdelit
    // to, ze se tam vejde dalsi hlavicka jsme garantovali prekryvem, viz vyse

    TKernel_Heap_Chunk_Header* hdr2 = reinterpret_cast<TKernel_Heap_Chunk_Header*>(
    reinterpret_cast<uint8_t*>(chunk) + sizeof(TKernel_Heap_Chunk_Header) + size);
    da3c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    da40:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:56
    TKernel_Heap_Chunk_Header* hdr2 = reinterpret_cast<TKernel_Heap_Chunk_Header*>(
    da44:	e51b2008 	ldr	r2, [fp, #-8]
    da48:	e0823003 	add	r3, r2, r3
    da4c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:59

    hdr2->size = chunk->size - size - sizeof(TKernel_Heap_Chunk_Header);
    da50:	e51b3008 	ldr	r3, [fp, #-8]
    da54:	e5932008 	ldr	r2, [r3, #8]
    da58:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    da5c:	e0423003 	sub	r3, r2, r3
    da60:	e2432010 	sub	r2, r3, #16
    da64:	e51b300c 	ldr	r3, [fp, #-12]
    da68:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:61

    hdr2->prev = chunk;
    da6c:	e51b300c 	ldr	r3, [fp, #-12]
    da70:	e51b2008 	ldr	r2, [fp, #-8]
    da74:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:62
    hdr2->next = chunk->next;
    da78:	e51b3008 	ldr	r3, [fp, #-8]
    da7c:	e5932004 	ldr	r2, [r3, #4]
    da80:	e51b300c 	ldr	r3, [fp, #-12]
    da84:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:63
    hdr2->is_free = true;
    da88:	e51b300c 	ldr	r3, [fp, #-12]
    da8c:	e3a02001 	mov	r2, #1
    da90:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:64
    chunk->next = hdr2;
    da94:	e51b3008 	ldr	r3, [fp, #-8]
    da98:	e51b200c 	ldr	r2, [fp, #-12]
    da9c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:66

    chunk->size = size;
    daa0:	e51b3008 	ldr	r3, [fp, #-8]
    daa4:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    daa8:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:67
    chunk->is_free = false;
    daac:	e51b3008 	ldr	r3, [fp, #-8]
    dab0:	e3a02000 	mov	r2, #0
    dab4:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:70

    return reinterpret_cast<uint8_t*>(chunk) +
           sizeof(TKernel_Heap_Chunk_Header); // vracime az pouzitelnou pamet, tedy to co nasleduje po hlavicce
    dab8:	e51b3008 	ldr	r3, [fp, #-8]
    dabc:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:71
}
    dac0:	e1a00003 	mov	r0, r3
    dac4:	e28bd000 	add	sp, fp, #0
    dac8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dacc:	e12fff1e 	bx	lr

0000dad0 <_ZN20CKernel_Heap_Manager4FreeEPv>:
_ZN20CKernel_Heap_Manager4FreeEPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:74

void CKernel_Heap_Manager::Free(void* mem)
{
    dad0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dad4:	e28db000 	add	fp, sp, #0
    dad8:	e24dd014 	sub	sp, sp, #20
    dadc:	e50b0010 	str	r0, [fp, #-16]
    dae0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:75
    TKernel_Heap_Chunk_Header* chunk =
    dae4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    dae8:	e2433010 	sub	r3, r3, #16
    daec:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:78
    reinterpret_cast<TKernel_Heap_Chunk_Header*>(reinterpret_cast<uint8_t*>(mem) - sizeof(TKernel_Heap_Chunk_Header));

    chunk->is_free = true;
    daf0:	e51b3008 	ldr	r3, [fp, #-8]
    daf4:	e3a02001 	mov	r2, #1
    daf8:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:81

    // pokud je dalsi blok volny, spojme tento a dalsi blok do jednoho
    if (chunk->next && chunk->next->is_free)
    dafc:	e51b3008 	ldr	r3, [fp, #-8]
    db00:	e5933004 	ldr	r3, [r3, #4]
    db04:	e3530000 	cmp	r3, #0
    db08:	0a000016 	beq	db68 <_ZN20CKernel_Heap_Manager4FreeEPv+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:81 (discriminator 1)
    db0c:	e51b3008 	ldr	r3, [fp, #-8]
    db10:	e5933004 	ldr	r3, [r3, #4]
    db14:	e5d3300c 	ldrb	r3, [r3, #12]
    db18:	e3530000 	cmp	r3, #0
    db1c:	0a000011 	beq	db68 <_ZN20CKernel_Heap_Manager4FreeEPv+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:83
    {
        chunk->size += chunk->next->size + sizeof(TKernel_Heap_Chunk_Header); // zvetsit soucasny
    db20:	e51b3008 	ldr	r3, [fp, #-8]
    db24:	e5932008 	ldr	r2, [r3, #8]
    db28:	e51b3008 	ldr	r3, [fp, #-8]
    db2c:	e5933004 	ldr	r3, [r3, #4]
    db30:	e5933008 	ldr	r3, [r3, #8]
    db34:	e0823003 	add	r3, r2, r3
    db38:	e2832010 	add	r2, r3, #16
    db3c:	e51b3008 	ldr	r3, [fp, #-8]
    db40:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:84
        chunk->next = chunk->next->next; // navazat nasledujici nasledujiciho jako dalsi
    db44:	e51b3008 	ldr	r3, [fp, #-8]
    db48:	e5933004 	ldr	r3, [r3, #4]
    db4c:	e5932004 	ldr	r2, [r3, #4]
    db50:	e51b3008 	ldr	r3, [fp, #-8]
    db54:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:85
        chunk->next->prev = chunk;       // nasledujicimu nastavit predchozi na sebe
    db58:	e51b3008 	ldr	r3, [fp, #-8]
    db5c:	e5933004 	ldr	r3, [r3, #4]
    db60:	e51b2008 	ldr	r2, [fp, #-8]
    db64:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:89
    }

    // pokud je predchozi blok volny, spojme predchozi a tento blok do jednoho
    if (chunk->prev && chunk->prev->is_free)
    db68:	e51b3008 	ldr	r3, [fp, #-8]
    db6c:	e5933000 	ldr	r3, [r3]
    db70:	e3530000 	cmp	r3, #0
    db74:	0a000018 	beq	dbdc <_ZN20CKernel_Heap_Manager4FreeEPv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:89 (discriminator 1)
    db78:	e51b3008 	ldr	r3, [fp, #-8]
    db7c:	e5933000 	ldr	r3, [r3]
    db80:	e5d3300c 	ldrb	r3, [r3, #12]
    db84:	e3530000 	cmp	r3, #0
    db88:	0a000013 	beq	dbdc <_ZN20CKernel_Heap_Manager4FreeEPv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:91
    {
        chunk->prev->size += chunk->size + sizeof(TKernel_Heap_Chunk_Header);
    db8c:	e51b3008 	ldr	r3, [fp, #-8]
    db90:	e5933000 	ldr	r3, [r3]
    db94:	e5932008 	ldr	r2, [r3, #8]
    db98:	e51b3008 	ldr	r3, [fp, #-8]
    db9c:	e5933008 	ldr	r3, [r3, #8]
    dba0:	e0822003 	add	r2, r2, r3
    dba4:	e51b3008 	ldr	r3, [fp, #-8]
    dba8:	e5933000 	ldr	r3, [r3]
    dbac:	e2822010 	add	r2, r2, #16
    dbb0:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:92
        chunk->prev->next = chunk->next;
    dbb4:	e51b3008 	ldr	r3, [fp, #-8]
    dbb8:	e5933000 	ldr	r3, [r3]
    dbbc:	e51b2008 	ldr	r2, [fp, #-8]
    dbc0:	e5922004 	ldr	r2, [r2, #4]
    dbc4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:93
        chunk->next->prev = chunk->prev;
    dbc8:	e51b3008 	ldr	r3, [fp, #-8]
    dbcc:	e5933004 	ldr	r3, [r3, #4]
    dbd0:	e51b2008 	ldr	r2, [fp, #-8]
    dbd4:	e5922000 	ldr	r2, [r2]
    dbd8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    }
    dbdc:	e320f000 	nop	{0}
    dbe0:	e28bd000 	add	sp, fp, #0
    dbe4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dbe8:	e12fff1e 	bx	lr

0000dbec <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    dbec:	e92d4800 	push	{fp, lr}
    dbf0:	e28db004 	add	fp, sp, #4
    dbf4:	e24dd008 	sub	sp, sp, #8
    dbf8:	e50b0008 	str	r0, [fp, #-8]
    dbfc:	e50b100c 	str	r1, [fp, #-12]
    dc00:	e51b3008 	ldr	r3, [fp, #-8]
    dc04:	e3530001 	cmp	r3, #1
    dc08:	1a000005 	bne	dc24 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95 (discriminator 1)
    dc0c:	e51b300c 	ldr	r3, [fp, #-12]
    dc10:	e59f2018 	ldr	r2, [pc, #24]	; dc30 <_Z41__static_initialization_and_destruction_0ii+0x44>
    dc14:	e1530002 	cmp	r3, r2
    dc18:	1a000001 	bne	dc24 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:4
CKernel_Heap_Manager sKernelMem;
    dc1c:	e59f0010 	ldr	r0, [pc, #16]	; dc34 <_Z41__static_initialization_and_destruction_0ii+0x48>
    dc20:	ebffff30 	bl	d8e8 <_ZN20CKernel_Heap_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    dc24:	e320f000 	nop	{0}
    dc28:	e24bd004 	sub	sp, fp, #4
    dc2c:	e8bd8800 	pop	{fp, pc}
    dc30:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    dc34:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000dc38 <_GLOBAL__sub_I_sKernelMem>:
_GLOBAL__sub_I_sKernelMem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    dc38:	e92d4800 	push	{fp, lr}
    dc3c:	e28db004 	add	fp, sp, #4
    dc40:	e59f1008 	ldr	r1, [pc, #8]	; dc50 <_GLOBAL__sub_I_sKernelMem+0x18>
    dc44:	e3a00001 	mov	r0, #1
    dc48:	ebffffe7 	bl	dbec <_Z41__static_initialization_and_destruction_0ii>
    dc4c:	e8bd8800 	pop	{fp, pc}
    dc50:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000dc54 <_ZN13CPage_ManagerC1Ev>:
_ZN13CPage_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:5
#include <memory/pages.h>

CPage_Manager sPage_Manager;

CPage_Manager::CPage_Manager()
    dc54:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dc58:	e28db000 	add	fp, sp, #0
    dc5c:	e24dd014 	sub	sp, sp, #20
    dc60:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8
{
    // zadna stranka neni alokovana
    for (int i = 0; i < sizeof(mPage_Bitmap); i++)
    dc64:	e3a03000 	mov	r3, #0
    dc68:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8 (discriminator 3)
    dc6c:	e51b3008 	ldr	r3, [fp, #-8]
    dc70:	e59f203c 	ldr	r2, [pc, #60]	; dcb4 <_ZN13CPage_ManagerC1Ev+0x60>
    dc74:	e1530002 	cmp	r3, r2
    dc78:	8a000008 	bhi	dca0 <_ZN13CPage_ManagerC1Ev+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:9 (discriminator 2)
        mPage_Bitmap[i] = 0;
    dc7c:	e51b2010 	ldr	r2, [fp, #-16]
    dc80:	e51b3008 	ldr	r3, [fp, #-8]
    dc84:	e0823003 	add	r3, r2, r3
    dc88:	e3a02000 	mov	r2, #0
    dc8c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8 (discriminator 2)
    for (int i = 0; i < sizeof(mPage_Bitmap); i++)
    dc90:	e51b3008 	ldr	r3, [fp, #-8]
    dc94:	e2833001 	add	r3, r3, #1
    dc98:	e50b3008 	str	r3, [fp, #-8]
    dc9c:	eafffff2 	b	dc6c <_ZN13CPage_ManagerC1Ev+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:12

    // nutno dodat, ze strankovatelna pamet implicitne nezahrnuje pamet, kam se nahralo jadro
}
    dca0:	e51b3010 	ldr	r3, [fp, #-16]
    dca4:	e1a00003 	mov	r0, r3
    dca8:	e28bd000 	add	sp, fp, #0
    dcac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dcb0:	e12fff1e 	bx	lr
    dcb4:	00000ffe 	strdeq	r0, [r0], -lr

0000dcb8 <_ZN13CPage_Manager4MarkEjb>:
_ZN13CPage_Manager4MarkEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:15

void CPage_Manager::Mark(uint32_t page_idx, bool used)
{
    dcb8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dcbc:	e28db000 	add	fp, sp, #0
    dcc0:	e24dd014 	sub	sp, sp, #20
    dcc4:	e50b0008 	str	r0, [fp, #-8]
    dcc8:	e50b100c 	str	r1, [fp, #-12]
    dccc:	e1a03002 	mov	r3, r2
    dcd0:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:16
    if (used)
    dcd4:	e55b300d 	ldrb	r3, [fp, #-13]
    dcd8:	e3530000 	cmp	r3, #0
    dcdc:	0a00000f 	beq	dd20 <_ZN13CPage_Manager4MarkEjb+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:17
        mPage_Bitmap[page_idx / 8] |= 1 << (page_idx % 8);
    dce0:	e51b300c 	ldr	r3, [fp, #-12]
    dce4:	e1a031a3 	lsr	r3, r3, #3
    dce8:	e51b2008 	ldr	r2, [fp, #-8]
    dcec:	e7d22003 	ldrb	r2, [r2, r3]
    dcf0:	e6af1072 	sxtb	r1, r2
    dcf4:	e51b200c 	ldr	r2, [fp, #-12]
    dcf8:	e2022007 	and	r2, r2, #7
    dcfc:	e3a00001 	mov	r0, #1
    dd00:	e1a02210 	lsl	r2, r0, r2
    dd04:	e6af2072 	sxtb	r2, r2
    dd08:	e1812002 	orr	r2, r1, r2
    dd0c:	e6af2072 	sxtb	r2, r2
    dd10:	e6ef1072 	uxtb	r1, r2
    dd14:	e51b2008 	ldr	r2, [fp, #-8]
    dd18:	e7c21003 	strb	r1, [r2, r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:20
    else
        mPage_Bitmap[page_idx / 8] &= ~(1 << (page_idx % 8));
}
    dd1c:	ea000010 	b	dd64 <_ZN13CPage_Manager4MarkEjb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:19
        mPage_Bitmap[page_idx / 8] &= ~(1 << (page_idx % 8));
    dd20:	e51b300c 	ldr	r3, [fp, #-12]
    dd24:	e1a031a3 	lsr	r3, r3, #3
    dd28:	e51b2008 	ldr	r2, [fp, #-8]
    dd2c:	e7d22003 	ldrb	r2, [r2, r3]
    dd30:	e6af1072 	sxtb	r1, r2
    dd34:	e51b200c 	ldr	r2, [fp, #-12]
    dd38:	e2022007 	and	r2, r2, #7
    dd3c:	e3a00001 	mov	r0, #1
    dd40:	e1a02210 	lsl	r2, r0, r2
    dd44:	e6af2072 	sxtb	r2, r2
    dd48:	e1e02002 	mvn	r2, r2
    dd4c:	e6af2072 	sxtb	r2, r2
    dd50:	e0022001 	and	r2, r2, r1
    dd54:	e6af2072 	sxtb	r2, r2
    dd58:	e6ef1072 	uxtb	r1, r2
    dd5c:	e51b2008 	ldr	r2, [fp, #-8]
    dd60:	e7c21003 	strb	r1, [r2, r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:20
}
    dd64:	e320f000 	nop	{0}
    dd68:	e28bd000 	add	sp, fp, #0
    dd6c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dd70:	e12fff1e 	bx	lr

0000dd74 <_ZN13CPage_Manager10Alloc_PageEv>:
_ZN13CPage_Manager10Alloc_PageEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:23

uint32_t CPage_Manager::Alloc_Page()
{
    dd74:	e92d4800 	push	{fp, lr}
    dd78:	e28db004 	add	fp, sp, #4
    dd7c:	e24dd018 	sub	sp, sp, #24
    dd80:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30
    // to je samozrejme O(n) a pro prakticke pouziti ne uplne dobre, ale k tomuto problemu az jindy

    uint32_t i, j;

    // projdeme vsechny stranky
    for (i = 0; i < mem::PageCount; i++)
    dd84:	e3a03000 	mov	r3, #0
    dd88:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30 (discriminator 1)
    dd8c:	e51b3008 	ldr	r3, [fp, #-8]
    dd90:	e59f20bc 	ldr	r2, [pc, #188]	; de54 <_ZN13CPage_Manager10Alloc_PageEv+0xe0>
    dd94:	e1530002 	cmp	r3, r2
    dd98:	8a000029 	bhi	de44 <_ZN13CPage_Manager10Alloc_PageEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:33
    {
        // je v dane osmici volna nejaka stranka? (0xFF = vse obsazeno)
        if (mPage_Bitmap[i] != 0xFF)
    dd9c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    dda0:	e51b3008 	ldr	r3, [fp, #-8]
    dda4:	e0823003 	add	r3, r2, r3
    dda8:	e5d33000 	ldrb	r3, [r3]
    ddac:	e35300ff 	cmp	r3, #255	; 0xff
    ddb0:	0a00001f 	beq	de34 <_ZN13CPage_Manager10Alloc_PageEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36
        {
            // projdeme vsechny bity a najdeme ten co je volny
            for (j = 0; j < 8; j++)
    ddb4:	e3a03000 	mov	r3, #0
    ddb8:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36 (discriminator 1)
    ddbc:	e51b300c 	ldr	r3, [fp, #-12]
    ddc0:	e3530007 	cmp	r3, #7
    ddc4:	8a00001a 	bhi	de34 <_ZN13CPage_Manager10Alloc_PageEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:38
            {
                if ((mPage_Bitmap[i] & (1 << j)) == 0)
    ddc8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    ddcc:	e51b3008 	ldr	r3, [fp, #-8]
    ddd0:	e0823003 	add	r3, r2, r3
    ddd4:	e5d33000 	ldrb	r3, [r3]
    ddd8:	e1a02003 	mov	r2, r3
    dddc:	e51b300c 	ldr	r3, [fp, #-12]
    dde0:	e1a03352 	asr	r3, r2, r3
    dde4:	e2033001 	and	r3, r3, #1
    dde8:	e3530000 	cmp	r3, #0
    ddec:	1a00000c 	bne	de24 <_ZN13CPage_Manager10Alloc_PageEv+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:41
                {
                    // oznacime
                    const uint32_t page_idx = i * 8 + j;
    ddf0:	e51b3008 	ldr	r3, [fp, #-8]
    ddf4:	e1a03183 	lsl	r3, r3, #3
    ddf8:	e51b200c 	ldr	r2, [fp, #-12]
    ddfc:	e0823003 	add	r3, r2, r3
    de00:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:42
                    Mark(page_idx, true);
    de04:	e3a02001 	mov	r2, #1
    de08:	e51b1010 	ldr	r1, [fp, #-16]
    de0c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    de10:	ebffffa8 	bl	dcb8 <_ZN13CPage_Manager4MarkEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:43
                    return mem::LowMemory + page_idx * mem::PageSize;
    de14:	e51b3010 	ldr	r3, [fp, #-16]
    de18:	e2833008 	add	r3, r3, #8
    de1c:	e1a03703 	lsl	r3, r3, #14
    de20:	ea000008 	b	de48 <_ZN13CPage_Manager10Alloc_PageEv+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36 (discriminator 2)
            for (j = 0; j < 8; j++)
    de24:	e51b300c 	ldr	r3, [fp, #-12]
    de28:	e2833001 	add	r3, r3, #1
    de2c:	e50b300c 	str	r3, [fp, #-12]
    de30:	eaffffe1 	b	ddbc <_ZN13CPage_Manager10Alloc_PageEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30 (discriminator 2)
    for (i = 0; i < mem::PageCount; i++)
    de34:	e51b3008 	ldr	r3, [fp, #-8]
    de38:	e2833001 	add	r3, r3, #1
    de3c:	e50b3008 	str	r3, [fp, #-8]
    de40:	eaffffd1 	b	dd8c <_ZN13CPage_Manager10Alloc_PageEv+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:49
                }
            }
        }
    }

    return 0;
    de44:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:50
}
    de48:	e1a00003 	mov	r0, r3
    de4c:	e24bd004 	sub	sp, fp, #4
    de50:	e8bd8800 	pop	{fp, pc}
    de54:	00007ff7 	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>

0000de58 <_ZN13CPage_Manager9Free_PageEj>:
_ZN13CPage_Manager9Free_PageEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:53

void CPage_Manager::Free_Page(uint32_t fa)
{
    de58:	e92d4800 	push	{fp, lr}
    de5c:	e28db004 	add	fp, sp, #4
    de60:	e24dd008 	sub	sp, sp, #8
    de64:	e50b0008 	str	r0, [fp, #-8]
    de68:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:56
    // pro vyssi bezpecnost v nejakych safe systemech lze tady data stranky premazavat napr. nulami po dealokaci

    Mark(fa / mem::PageSize, false);
    de6c:	e51b300c 	ldr	r3, [fp, #-12]
    de70:	e1a03723 	lsr	r3, r3, #14
    de74:	e3a02000 	mov	r2, #0
    de78:	e1a01003 	mov	r1, r3
    de7c:	e51b0008 	ldr	r0, [fp, #-8]
    de80:	ebffff8c 	bl	dcb8 <_ZN13CPage_Manager4MarkEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
}
    de84:	e320f000 	nop	{0}
    de88:	e24bd004 	sub	sp, fp, #4
    de8c:	e8bd8800 	pop	{fp, pc}

0000de90 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
    de90:	e92d4800 	push	{fp, lr}
    de94:	e28db004 	add	fp, sp, #4
    de98:	e24dd008 	sub	sp, sp, #8
    de9c:	e50b0008 	str	r0, [fp, #-8]
    dea0:	e50b100c 	str	r1, [fp, #-12]
    dea4:	e51b3008 	ldr	r3, [fp, #-8]
    dea8:	e3530001 	cmp	r3, #1
    deac:	1a000005 	bne	dec8 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57 (discriminator 1)
    deb0:	e51b300c 	ldr	r3, [fp, #-12]
    deb4:	e59f2018 	ldr	r2, [pc, #24]	; ded4 <_Z41__static_initialization_and_destruction_0ii+0x44>
    deb8:	e1530002 	cmp	r3, r2
    debc:	1a000001 	bne	dec8 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:3
CPage_Manager sPage_Manager;
    dec0:	e59f0010 	ldr	r0, [pc, #16]	; ded8 <_Z41__static_initialization_and_destruction_0ii+0x48>
    dec4:	ebffff62 	bl	dc54 <_ZN13CPage_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
}
    dec8:	e320f000 	nop	{0}
    decc:	e24bd004 	sub	sp, fp, #4
    ded0:	e8bd8800 	pop	{fp, pc}
    ded4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    ded8:	00010cd4 	ldrdeq	r0, [r1], -r4

0000dedc <_GLOBAL__sub_I_sPage_Manager>:
_GLOBAL__sub_I_sPage_Manager():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
    dedc:	e92d4800 	push	{fp, lr}
    dee0:	e28db004 	add	fp, sp, #4
    dee4:	e59f1008 	ldr	r1, [pc, #8]	; def4 <_GLOBAL__sub_I_sPage_Manager+0x18>
    dee8:	e3a00001 	mov	r0, #1
    deec:	ebffffe7 	bl	de90 <_Z41__static_initialization_and_destruction_0ii>
    def0:	e8bd8800 	pop	{fp, pc}
    def4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000def8 <_ZN16CProcess_ManagerC1Ev>:
_ZN16CProcess_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:19
void context_switch_first(TCPU_Context* ctx_to, TCPU_Context* ctx_from);
};

CProcess_Manager sProcessMgr;

CProcess_Manager::CProcess_Manager()
    def8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    defc:	e28db000 	add	fp, sp, #0
    df00:	e24dd00c 	sub	sp, sp, #12
    df04:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:22
: mLast_PID(0)
, mProcess_List_Head(nullptr)
, mCurrent_Task_Node(nullptr)
    df08:	e51b3008 	ldr	r3, [fp, #-8]
    df0c:	e3a02000 	mov	r2, #0
    df10:	e5832000 	str	r2, [r3]
    df14:	e51b3008 	ldr	r3, [fp, #-8]
    df18:	e3a02000 	mov	r2, #0
    df1c:	e5832004 	str	r2, [r3, #4]
    df20:	e51b3008 	ldr	r3, [fp, #-8]
    df24:	e3a02000 	mov	r2, #0
    df28:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:25
{
    //
}
    df2c:	e51b3008 	ldr	r3, [fp, #-8]
    df30:	e1a00003 	mov	r0, r3
    df34:	e28bd000 	add	sp, fp, #0
    df38:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    df3c:	e12fff1e 	bx	lr

0000df40 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>:
_ZNK16CProcess_Manager19Get_Current_ProcessEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:28

TTask_Struct* CProcess_Manager::Get_Current_Process() const
{
    df40:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    df44:	e28db000 	add	fp, sp, #0
    df48:	e24dd00c 	sub	sp, sp, #12
    df4c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29
    return mCurrent_Task_Node ? mCurrent_Task_Node->task : nullptr;
    df50:	e51b3008 	ldr	r3, [fp, #-8]
    df54:	e5933008 	ldr	r3, [r3, #8]
    df58:	e3530000 	cmp	r3, #0
    df5c:	0a000003 	beq	df70 <_ZNK16CProcess_Manager19Get_Current_ProcessEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29 (discriminator 1)
    df60:	e51b3008 	ldr	r3, [fp, #-8]
    df64:	e5933008 	ldr	r3, [r3, #8]
    df68:	e5933008 	ldr	r3, [r3, #8]
    df6c:	ea000000 	b	df74 <_ZNK16CProcess_Manager19Get_Current_ProcessEv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29 (discriminator 2)
    df70:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:30 (discriminator 5)
}
    df74:	e1a00003 	mov	r0, r3
    df78:	e28bd000 	add	sp, fp, #0
    df7c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    df80:	e12fff1e 	bx	lr

0000df84 <_ZN16CProcess_Manager19Create_Main_ProcessEv>:
_ZN16CProcess_Manager19Create_Main_ProcessEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:33

void CProcess_Manager::Create_Main_Process()
{
    df84:	e92d4800 	push	{fp, lr}
    df88:	e28db004 	add	fp, sp, #4
    df8c:	e24dd018 	sub	sp, sp, #24
    df90:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:34
    CProcess_List_Node* procnode = sKernelMem.Alloc<CProcess_List_Node>();
    df94:	e59f00f8 	ldr	r0, [pc, #248]	; e094 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0x110>
    df98:	eb0002cb 	bl	eacc <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>
    df9c:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:36

    procnode->next = mProcess_List_Head;
    dfa0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dfa4:	e5932004 	ldr	r2, [r3, #4]
    dfa8:	e51b300c 	ldr	r3, [fp, #-12]
    dfac:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:37
    procnode->prev = nullptr;
    dfb0:	e51b300c 	ldr	r3, [fp, #-12]
    dfb4:	e3a02000 	mov	r2, #0
    dfb8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:38
    mProcess_List_Head->prev = procnode;
    dfbc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dfc0:	e5933004 	ldr	r3, [r3, #4]
    dfc4:	e51b200c 	ldr	r2, [fp, #-12]
    dfc8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:40

    procnode->task = sKernelMem.Alloc<TTask_Struct>();
    dfcc:	e59f00c0 	ldr	r0, [pc, #192]	; e094 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0x110>
    dfd0:	eb0002c8 	bl	eaf8 <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>
    dfd4:	e1a02000 	mov	r2, r0
    dfd8:	e51b300c 	ldr	r3, [fp, #-12]
    dfdc:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:42

    auto* task = procnode->task;
    dfe0:	e51b300c 	ldr	r3, [fp, #-12]
    dfe4:	e5933008 	ldr	r3, [r3, #8]
    dfe8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:44

    task->pid = ++mLast_PID;
    dfec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dff0:	e5933000 	ldr	r3, [r3]
    dff4:	e2832001 	add	r2, r3, #1
    dff8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dffc:	e5832000 	str	r2, [r3]
    e000:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e004:	e5932000 	ldr	r2, [r3]
    e008:	e51b3010 	ldr	r3, [fp, #-16]
    e00c:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:45
    task->sched_static_priority =
    e010:	e51b3010 	ldr	r3, [fp, #-16]
    e014:	e3a02005 	mov	r2, #5
    e018:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:47
    5; // TODO: pro ted je to jen hardcoded hodnota, do budoucna urcite bude nutne dovolit specifikovat
    task->sched_counter = task->sched_static_priority;
    e01c:	e51b3010 	ldr	r3, [fp, #-16]
    e020:	e5932018 	ldr	r2, [r3, #24]
    e024:	e51b3010 	ldr	r3, [fp, #-16]
    e028:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:48
    task->state = NTask_State::Running;
    e02c:	e51b3010 	ldr	r3, [fp, #-16]
    e030:	e3a02002 	mov	r2, #2
    e034:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:50

    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e038:	e3a03000 	mov	r3, #0
    e03c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:50 (discriminator 3)
    e040:	e51b3008 	ldr	r3, [fp, #-8]
    e044:	e353000f 	cmp	r3, #15
    e048:	8a00000a 	bhi	e078 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0xf4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:51 (discriminator 2)
        task->opened_files[i] = nullptr;
    e04c:	e51b2010 	ldr	r2, [fp, #-16]
    e050:	e51b3008 	ldr	r3, [fp, #-8]
    e054:	e2833006 	add	r3, r3, #6
    e058:	e1a03103 	lsl	r3, r3, #2
    e05c:	e0823003 	add	r3, r2, r3
    e060:	e3a02000 	mov	r2, #0
    e064:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:50 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e068:	e51b3008 	ldr	r3, [fp, #-8]
    e06c:	e2833001 	add	r3, r3, #1
    e070:	e50b3008 	str	r3, [fp, #-8]
    e074:	eafffff1 	b	e040 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:53

    mCurrent_Task_Node = mProcess_List_Head;
    e078:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e07c:	e5932004 	ldr	r2, [r3, #4]
    e080:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e084:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:54
}
    e088:	e320f000 	nop	{0}
    e08c:	e24bd004 	sub	sp, fp, #4
    e090:	e8bd8800 	pop	{fp, pc}
    e094:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0000e098 <_ZN16CProcess_Manager14Create_ProcessEm>:
_ZN16CProcess_Manager14Create_ProcessEm():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:57

uint32_t CProcess_Manager::Create_Process(unsigned long funcptr)
{
    e098:	e92d4800 	push	{fp, lr}
    e09c:	e28db004 	add	fp, sp, #4
    e0a0:	e24dd018 	sub	sp, sp, #24
    e0a4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    e0a8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:58
    CProcess_List_Node* procnode = sKernelMem.Alloc<CProcess_List_Node>();
    e0ac:	e59f01c4 	ldr	r0, [pc, #452]	; e278 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e0>
    e0b0:	eb000285 	bl	eacc <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>
    e0b4:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:60

    procnode->next = mProcess_List_Head;
    e0b8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e0bc:	e5932004 	ldr	r2, [r3, #4]
    e0c0:	e51b300c 	ldr	r3, [fp, #-12]
    e0c4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:61
    procnode->prev = nullptr;
    e0c8:	e51b300c 	ldr	r3, [fp, #-12]
    e0cc:	e3a02000 	mov	r2, #0
    e0d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:62
    mProcess_List_Head->prev = procnode;
    e0d4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e0d8:	e5933004 	ldr	r3, [r3, #4]
    e0dc:	e51b200c 	ldr	r2, [fp, #-12]
    e0e0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:63
    mProcess_List_Head = procnode;
    e0e4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e0e8:	e51b200c 	ldr	r2, [fp, #-12]
    e0ec:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:65

    if (mCurrent_Task_Node == nullptr)
    e0f0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e0f4:	e5933008 	ldr	r3, [r3, #8]
    e0f8:	e3530000 	cmp	r3, #0
    e0fc:	1a000002 	bne	e10c <_ZN16CProcess_Manager14Create_ProcessEm+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:67
    {
        mCurrent_Task_Node = procnode;
    e100:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e104:	e51b200c 	ldr	r2, [fp, #-12]
    e108:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:70
    }

    procnode->task = sKernelMem.Alloc<TTask_Struct>();
    e10c:	e59f0164 	ldr	r0, [pc, #356]	; e278 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e0>
    e110:	eb000278 	bl	eaf8 <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>
    e114:	e1a02000 	mov	r2, r0
    e118:	e51b300c 	ldr	r3, [fp, #-12]
    e11c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:72

    auto* task = procnode->task;
    e120:	e51b300c 	ldr	r3, [fp, #-12]
    e124:	e5933008 	ldr	r3, [r3, #8]
    e128:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:74

    task->pid = ++mLast_PID;
    e12c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e130:	e5933000 	ldr	r3, [r3]
    e134:	e2832001 	add	r2, r3, #1
    e138:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e13c:	e5832000 	str	r2, [r3]
    e140:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e144:	e5932000 	ldr	r2, [r3]
    e148:	e51b3010 	ldr	r3, [fp, #-16]
    e14c:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:75
    task->sched_static_priority =
    e150:	e51b3010 	ldr	r3, [fp, #-16]
    e154:	e3a02005 	mov	r2, #5
    e158:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:77
    5; // TODO: pro ted je to jen hardcoded hodnota, do budoucna urcite bude nutne dovolit specifikovat
    task->sched_counter = task->sched_static_priority;
    e15c:	e51b3010 	ldr	r3, [fp, #-16]
    e160:	e5932018 	ldr	r2, [r3, #24]
    e164:	e51b3010 	ldr	r3, [fp, #-16]
    e168:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:78
    task->state = NTask_State::New;
    e16c:	e51b3010 	ldr	r3, [fp, #-16]
    e170:	e3a02000 	mov	r2, #0
    e174:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:80

    task->cpu_context.lr = funcptr;
    e178:	e51b3010 	ldr	r3, [fp, #-16]
    e17c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    e180:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:81
    task->cpu_context.pc = reinterpret_cast<unsigned long>(&process_bootstrap);
    e184:	e59f20f0 	ldr	r2, [pc, #240]	; e27c <_ZN16CProcess_Manager14Create_ProcessEm+0x1e4>
    e188:	e51b3010 	ldr	r3, [fp, #-16]
    e18c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:82
    task->cpu_context.sp = static_cast<unsigned long>(sPage_Manager.Alloc_Page()) + mem::PageSize;
    e190:	e59f00e8 	ldr	r0, [pc, #232]	; e280 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e8>
    e194:	ebfffef6 	bl	dd74 <_ZN13CPage_Manager10Alloc_PageEv>
    e198:	e1a03000 	mov	r3, r0
    e19c:	e2832901 	add	r2, r3, #16384	; 0x4000
    e1a0:	e51b3010 	ldr	r3, [fp, #-16]
    e1a4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:84

    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e1a8:	e3a03000 	mov	r3, #0
    e1ac:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:84 (discriminator 3)
    e1b0:	e51b3008 	ldr	r3, [fp, #-8]
    e1b4:	e353000f 	cmp	r3, #15
    e1b8:	8a00000a 	bhi	e1e8 <_ZN16CProcess_Manager14Create_ProcessEm+0x150>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:85 (discriminator 2)
        task->opened_files[i] = nullptr;
    e1bc:	e51b2010 	ldr	r2, [fp, #-16]
    e1c0:	e51b3008 	ldr	r3, [fp, #-8]
    e1c4:	e2833006 	add	r3, r3, #6
    e1c8:	e1a03103 	lsl	r3, r3, #2
    e1cc:	e0823003 	add	r3, r2, r3
    e1d0:	e3a02000 	mov	r2, #0
    e1d4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:84 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e1d8:	e51b3008 	ldr	r3, [fp, #-8]
    e1dc:	e2833001 	add	r3, r3, #1
    e1e0:	e50b3008 	str	r3, [fp, #-8]
    e1e4:	eafffff1 	b	e1b0 <_ZN16CProcess_Manager14Create_ProcessEm+0x118>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:87

    sMonitor << "Created process with pid " << (unsigned int)task->pid << " ("
    e1e8:	e59f1094 	ldr	r1, [pc, #148]	; e284 <_ZN16CProcess_Manager14Create_ProcessEm+0x1ec>
    e1ec:	e59f0094 	ldr	r0, [pc, #148]	; e288 <_ZN16CProcess_Manager14Create_ProcessEm+0x1f0>
    e1f0:	ebffec95 	bl	944c <_ZN8CMonitorlsEPKc>
    e1f4:	e1a02000 	mov	r2, r0
    e1f8:	e51b3010 	ldr	r3, [fp, #-16]
    e1fc:	e593300c 	ldr	r3, [r3, #12]
    e200:	e1a01003 	mov	r1, r3
    e204:	e1a00002 	mov	r0, r2
    e208:	ebffecba 	bl	94f8 <_ZN8CMonitorlsEj>
    e20c:	e1a03000 	mov	r3, r0
    e210:	e59f1074 	ldr	r1, [pc, #116]	; e28c <_ZN16CProcess_Manager14Create_ProcessEm+0x1f4>
    e214:	e1a00003 	mov	r0, r3
    e218:	ebffec8b 	bl	944c <_ZN8CMonitorlsEPKc>
    e21c:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:88
             << "SP = 0x" << CMonitor::NNumber_Base::HEX << (unsigned int)task->cpu_context.sp << ")\n";
    e220:	e59f1068 	ldr	r1, [pc, #104]	; e290 <_ZN16CProcess_Manager14Create_ProcessEm+0x1f8>
    e224:	e1a00003 	mov	r0, r3
    e228:	ebffec87 	bl	944c <_ZN8CMonitorlsEPKc>
    e22c:	e1a03000 	mov	r3, r0
    e230:	e3a01010 	mov	r1, #16
    e234:	e1a00003 	mov	r0, r3
    e238:	ebffeca1 	bl	94c4 <_ZN8CMonitorlsENS_12NNumber_BaseE>
    e23c:	e1a02000 	mov	r2, r0
    e240:	e51b3010 	ldr	r3, [fp, #-16]
    e244:	e5933004 	ldr	r3, [r3, #4]
    e248:	e1a01003 	mov	r1, r3
    e24c:	e1a00002 	mov	r0, r2
    e250:	ebffeca8 	bl	94f8 <_ZN8CMonitorlsEj>
    e254:	e1a03000 	mov	r3, r0
    e258:	e59f1034 	ldr	r1, [pc, #52]	; e294 <_ZN16CProcess_Manager14Create_ProcessEm+0x1fc>
    e25c:	e1a00003 	mov	r0, r3
    e260:	ebffec79 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:90

    return task->pid;
    e264:	e51b3010 	ldr	r3, [fp, #-16]
    e268:	e593300c 	ldr	r3, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:91
}
    e26c:	e1a00003 	mov	r0, r3
    e270:	e24bd004 	sub	sp, fp, #4
    e274:	e8bd8800 	pop	{fp, pc}
    e278:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    e27c:	0000eb24 	andeq	lr, r0, r4, lsr #22
    e280:	00010cd4 	ldrdeq	r0, [r1], -r4
    e284:	00010534 	andeq	r0, r1, r4, lsr r5
    e288:	00010bd4 	ldrdeq	r0, [r1], -r4
    e28c:	00010550 	andeq	r0, r1, r0, asr r5
    e290:	00010554 	andeq	r0, r1, r4, asr r5
    e294:	0001055c 	andeq	r0, r1, ip, asr r5

0000e298 <_ZN16CProcess_Manager8ScheduleEv>:
_ZN16CProcess_Manager8ScheduleEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:94

void CProcess_Manager::Schedule()
{
    e298:	e92d4800 	push	{fp, lr}
    e29c:	e28db004 	add	fp, sp, #4
    e2a0:	e24dd010 	sub	sp, sp, #16
    e2a4:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:96
    // je nejaky proces naplanovany?
    if (mCurrent_Task_Node)
    e2a8:	e51b3010 	ldr	r3, [fp, #-16]
    e2ac:	e5933008 	ldr	r3, [r3, #8]
    e2b0:	e3530000 	cmp	r3, #0
    e2b4:	0a000011 	beq	e300 <_ZN16CProcess_Manager8ScheduleEv+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:99
    {
        // snizime citac planovace
        mCurrent_Task_Node->task->sched_counter--;
    e2b8:	e51b3010 	ldr	r3, [fp, #-16]
    e2bc:	e5933008 	ldr	r3, [r3, #8]
    e2c0:	e5933008 	ldr	r3, [r3, #8]
    e2c4:	e5932014 	ldr	r2, [r3, #20]
    e2c8:	e2422001 	sub	r2, r2, #1
    e2cc:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:102
        // pokud je citac vetsi nez 0, zatim nebudeme preplanovavat (a zaroven je proces stale ve stavu Running -
        // nezablokoval se nad necim)
        if (mCurrent_Task_Node->task->sched_counter > 0 && mCurrent_Task_Node->task->state == NTask_State::Running)
    e2d0:	e51b3010 	ldr	r3, [fp, #-16]
    e2d4:	e5933008 	ldr	r3, [r3, #8]
    e2d8:	e5933008 	ldr	r3, [r3, #8]
    e2dc:	e5933014 	ldr	r3, [r3, #20]
    e2e0:	e3530000 	cmp	r3, #0
    e2e4:	0a000005 	beq	e300 <_ZN16CProcess_Manager8ScheduleEv+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:102 (discriminator 1)
    e2e8:	e51b3010 	ldr	r3, [fp, #-16]
    e2ec:	e5933008 	ldr	r3, [r3, #8]
    e2f0:	e5933008 	ldr	r3, [r3, #8]
    e2f4:	e5933010 	ldr	r3, [r3, #16]
    e2f8:	e3530002 	cmp	r3, #2
    e2fc:	0a00003c 	beq	e3f4 <_ZN16CProcess_Manager8ScheduleEv+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109
    }

    // najdeme dalsi proces na planovani

    // vybereme dalsi proces v rade
    CProcess_List_Node* next = mCurrent_Task_Node ? mCurrent_Task_Node->next : mProcess_List_Head;
    e300:	e51b3010 	ldr	r3, [fp, #-16]
    e304:	e5933008 	ldr	r3, [r3, #8]
    e308:	e3530000 	cmp	r3, #0
    e30c:	0a000003 	beq	e320 <_ZN16CProcess_Manager8ScheduleEv+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109 (discriminator 1)
    e310:	e51b3010 	ldr	r3, [fp, #-16]
    e314:	e5933008 	ldr	r3, [r3, #8]
    e318:	e5933004 	ldr	r3, [r3, #4]
    e31c:	ea000001 	b	e328 <_ZN16CProcess_Manager8ScheduleEv+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109 (discriminator 2)
    e320:	e51b3010 	ldr	r3, [fp, #-16]
    e324:	e5933004 	ldr	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109 (discriminator 4)
    e328:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:110 (discriminator 4)
    if (!next)
    e32c:	e51b3008 	ldr	r3, [fp, #-8]
    e330:	e3530000 	cmp	r3, #0
    e334:	1a000002 	bne	e344 <_ZN16CProcess_Manager8ScheduleEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:111
        next = mProcess_List_Head;
    e338:	e51b3010 	ldr	r3, [fp, #-16]
    e33c:	e5933004 	ldr	r3, [r3, #4]
    e340:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115

    // proces k naplanovani musi bud byt ve stavu runnable (jiz nekdy bezel a muze bezet znovu) nebo running (pak jde o
    // stavajici proces) a nebo new (novy proces, ktery jeste nebyl planovany)
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e344:	e51b3008 	ldr	r3, [fp, #-8]
    e348:	e5933008 	ldr	r3, [r3, #8]
    e34c:	e5933010 	ldr	r3, [r3, #16]
    e350:	e3530001 	cmp	r3, #1
    e354:	0a000014 	beq	e3ac <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115 (discriminator 1)
    e358:	e51b3008 	ldr	r3, [fp, #-8]
    e35c:	e5933008 	ldr	r3, [r3, #8]
    e360:	e5933010 	ldr	r3, [r3, #16]
    e364:	e3530002 	cmp	r3, #2
    e368:	0a00000f 	beq	e3ac <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:116 (discriminator 2)
           next->task->state != NTask_State::New)
    e36c:	e51b3008 	ldr	r3, [fp, #-8]
    e370:	e5933008 	ldr	r3, [r3, #8]
    e374:	e5933010 	ldr	r3, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115 (discriminator 2)
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e378:	e3530000 	cmp	r3, #0
    e37c:	0a00000a 	beq	e3ac <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:118
    {
        if (!next)
    e380:	e51b3008 	ldr	r3, [fp, #-8]
    e384:	e3530000 	cmp	r3, #0
    e388:	1a000003 	bne	e39c <_ZN16CProcess_Manager8ScheduleEv+0x104>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:120
        {
            next = mCurrent_Task_Node;
    e38c:	e51b3010 	ldr	r3, [fp, #-16]
    e390:	e5933008 	ldr	r3, [r3, #8]
    e394:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:121
            break;
    e398:	ea000003 	b	e3ac <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:124
        }
        else
            next = next->next;
    e39c:	e51b3008 	ldr	r3, [fp, #-8]
    e3a0:	e5933004 	ldr	r3, [r3, #4]
    e3a4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e3a8:	eaffffe5 	b	e344 <_ZN16CProcess_Manager8ScheduleEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:128
    }

    // stavajici proces je jediny planovatelny - nemusime nic preplanovavat
    if (next == mCurrent_Task_Node)
    e3ac:	e51b3010 	ldr	r3, [fp, #-16]
    e3b0:	e5933008 	ldr	r3, [r3, #8]
    e3b4:	e51b2008 	ldr	r2, [fp, #-8]
    e3b8:	e1520003 	cmp	r2, r3
    e3bc:	1a000008 	bne	e3e4 <_ZN16CProcess_Manager8ScheduleEv+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:131
    {
        // nastavime mu zase zpatky jeho pridel casovych kvant a vracime se
        mCurrent_Task_Node->task->sched_counter = mCurrent_Task_Node->task->sched_static_priority;
    e3c0:	e51b3010 	ldr	r3, [fp, #-16]
    e3c4:	e5933008 	ldr	r3, [r3, #8]
    e3c8:	e5932008 	ldr	r2, [r3, #8]
    e3cc:	e51b3010 	ldr	r3, [fp, #-16]
    e3d0:	e5933008 	ldr	r3, [r3, #8]
    e3d4:	e5933008 	ldr	r3, [r3, #8]
    e3d8:	e5922018 	ldr	r2, [r2, #24]
    e3dc:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:132
        return;
    e3e0:	ea000004 	b	e3f8 <_ZN16CProcess_Manager8ScheduleEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:135
    }

    Switch_To(next);
    e3e4:	e51b1008 	ldr	r1, [fp, #-8]
    e3e8:	e51b0010 	ldr	r0, [fp, #-16]
    e3ec:	eb000003 	bl	e400 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node>
    e3f0:	ea000000 	b	e3f8 <_ZN16CProcess_Manager8ScheduleEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:103
            return;
    e3f4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:136
}
    e3f8:	e24bd004 	sub	sp, fp, #4
    e3fc:	e8bd8800 	pop	{fp, pc}

0000e400 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node>:
_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:139

void CProcess_Manager::Switch_To(CProcess_List_Node* node)
{
    e400:	e92d4800 	push	{fp, lr}
    e404:	e28db004 	add	fp, sp, #4
    e408:	e24dd010 	sub	sp, sp, #16
    e40c:	e50b0010 	str	r0, [fp, #-16]
    e410:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:142
    // pokud je stavajici proces ve stavu Running (muze teoreticky byt jeste Blocked), vratime ho do stavu Runnable
    // Blocked prehazovat nebudeme ze zjevnych duvodu
    if (mCurrent_Task_Node->task->state == NTask_State::Running)
    e414:	e51b3010 	ldr	r3, [fp, #-16]
    e418:	e5933008 	ldr	r3, [r3, #8]
    e41c:	e5933008 	ldr	r3, [r3, #8]
    e420:	e5933010 	ldr	r3, [r3, #16]
    e424:	e3530002 	cmp	r3, #2
    e428:	1a000004 	bne	e440 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:143
        mCurrent_Task_Node->task->state = NTask_State::Runnable;
    e42c:	e51b3010 	ldr	r3, [fp, #-16]
    e430:	e5933008 	ldr	r3, [r3, #8]
    e434:	e5933008 	ldr	r3, [r3, #8]
    e438:	e3a02001 	mov	r2, #1
    e43c:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:146

    // projistotu vynulujeme prideleny pocet casovych kvant
    mCurrent_Task_Node->task->sched_counter = 0;
    e440:	e51b3010 	ldr	r3, [fp, #-16]
    e444:	e5933008 	ldr	r3, [r3, #8]
    e448:	e5933008 	ldr	r3, [r3, #8]
    e44c:	e3a02000 	mov	r2, #0
    e450:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:148

    TCPU_Context* old = &mCurrent_Task_Node->task->cpu_context;
    e454:	e51b3010 	ldr	r3, [fp, #-16]
    e458:	e5933008 	ldr	r3, [r3, #8]
    e45c:	e5933008 	ldr	r3, [r3, #8]
    e460:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:149
    bool is_first_time = (node->task->state == NTask_State::New);
    e464:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e468:	e5933008 	ldr	r3, [r3, #8]
    e46c:	e5933010 	ldr	r3, [r3, #16]
    e470:	e3530000 	cmp	r3, #0
    e474:	03a03001 	moveq	r3, #1
    e478:	13a03000 	movne	r3, #0
    e47c:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:152

    // prehodime na novy proces, pridelime casova kvanta a nastavime proces do stavu Running
    mCurrent_Task_Node = node;
    e480:	e51b3010 	ldr	r3, [fp, #-16]
    e484:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    e488:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:153
    mCurrent_Task_Node->task->sched_counter = mCurrent_Task_Node->task->sched_static_priority;
    e48c:	e51b3010 	ldr	r3, [fp, #-16]
    e490:	e5933008 	ldr	r3, [r3, #8]
    e494:	e5932008 	ldr	r2, [r3, #8]
    e498:	e51b3010 	ldr	r3, [fp, #-16]
    e49c:	e5933008 	ldr	r3, [r3, #8]
    e4a0:	e5933008 	ldr	r3, [r3, #8]
    e4a4:	e5922018 	ldr	r2, [r2, #24]
    e4a8:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:154
    mCurrent_Task_Node->task->state = NTask_State::Running;
    e4ac:	e51b3010 	ldr	r3, [fp, #-16]
    e4b0:	e5933008 	ldr	r3, [r3, #8]
    e4b4:	e5933008 	ldr	r3, [r3, #8]
    e4b8:	e3a02002 	mov	r2, #2
    e4bc:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:157

    // pokud je to poprve, co je proces planovany, musime to vzit jeste pres malou odbocku ("bootstrap")
    if (is_first_time)
    e4c0:	e55b3009 	ldrb	r3, [fp, #-9]
    e4c4:	e3530000 	cmp	r3, #0
    e4c8:	0a000005 	beq	e4e4 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0xe4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:158
        context_switch_first(&node->task->cpu_context, old);
    e4cc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e4d0:	e5933008 	ldr	r3, [r3, #8]
    e4d4:	e51b1008 	ldr	r1, [fp, #-8]
    e4d8:	e1a00003 	mov	r0, r3
    e4dc:	eb00019b 	bl	eb50 <context_switch_first>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:161
    else
        context_switch(&node->task->cpu_context, old);
}
    e4e0:	ea000004 	b	e4f8 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:160
        context_switch(&node->task->cpu_context, old);
    e4e4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e4e8:	e5933008 	ldr	r3, [r3, #8]
    e4ec:	e51b1008 	ldr	r1, [fp, #-8]
    e4f0:	e1a00003 	mov	r0, r3
    e4f4:	eb00018c 	bl	eb2c <context_switch>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:161
}
    e4f8:	e320f000 	nop	{0}
    e4fc:	e24bd004 	sub	sp, fp, #4
    e500:	e8bd8800 	pop	{fp, pc}

0000e504 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile>:
_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:164

uint32_t CProcess_Manager::Map_File_To_Current(IFile* file)
{
    e504:	e92d4800 	push	{fp, lr}
    e508:	e28db004 	add	fp, sp, #4
    e50c:	e24dd010 	sub	sp, sp, #16
    e510:	e50b0010 	str	r0, [fp, #-16]
    e514:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:167
    // TODO: zamek

    TTask_Struct* current = Get_Current_Process();
    e518:	e51b0010 	ldr	r0, [fp, #-16]
    e51c:	ebfffe87 	bl	df40 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>
    e520:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:168
    if (!current)
    e524:	e51b300c 	ldr	r3, [fp, #-12]
    e528:	e3530000 	cmp	r3, #0
    e52c:	1a000001 	bne	e538 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:169
        return Invalid_Handle;
    e530:	e3e03000 	mvn	r3, #0
    e534:	ea00001a 	b	e5a4 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:172

    // najdeme volny slot, pokud je
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e538:	e3a03000 	mov	r3, #0
    e53c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:172 (discriminator 1)
    e540:	e51b3008 	ldr	r3, [fp, #-8]
    e544:	e353000f 	cmp	r3, #15
    e548:	8a000014 	bhi	e5a0 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:175
    {
        // volny slot - namapujeme soubor a vracime handle (index do tabulky)
        if (current->opened_files[i] == nullptr)
    e54c:	e51b200c 	ldr	r2, [fp, #-12]
    e550:	e51b3008 	ldr	r3, [fp, #-8]
    e554:	e2833006 	add	r3, r3, #6
    e558:	e1a03103 	lsl	r3, r3, #2
    e55c:	e0823003 	add	r3, r2, r3
    e560:	e5933004 	ldr	r3, [r3, #4]
    e564:	e3530000 	cmp	r3, #0
    e568:	1a000008 	bne	e590 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:177
        {
            current->opened_files[i] = file;
    e56c:	e51b200c 	ldr	r2, [fp, #-12]
    e570:	e51b3008 	ldr	r3, [fp, #-8]
    e574:	e2833006 	add	r3, r3, #6
    e578:	e1a03103 	lsl	r3, r3, #2
    e57c:	e0823003 	add	r3, r2, r3
    e580:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    e584:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:178
            return i;
    e588:	e51b3008 	ldr	r3, [fp, #-8]
    e58c:	ea000004 	b	e5a4 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:172 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e590:	e51b3008 	ldr	r3, [fp, #-8]
    e594:	e2833001 	add	r3, r3, #1
    e598:	e50b3008 	str	r3, [fp, #-8]
    e59c:	eaffffe7 	b	e540 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:183
        }
    }

    // nenasli jsme - vracime neplatny handle (vnejsi kod nejspis bude chtit soubor zase zavrit)
    return Invalid_Handle;
    e5a0:	e3e03000 	mvn	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:184
}
    e5a4:	e1a00003 	mov	r0, r3
    e5a8:	e24bd004 	sub	sp, fp, #4
    e5ac:	e8bd8800 	pop	{fp, pc}

0000e5b0 <_ZN16CProcess_Manager18Unmap_File_CurrentEj>:
_ZN16CProcess_Manager18Unmap_File_CurrentEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:187

bool CProcess_Manager::Unmap_File_Current(uint32_t handle)
{
    e5b0:	e92d4800 	push	{fp, lr}
    e5b4:	e28db004 	add	fp, sp, #4
    e5b8:	e24dd010 	sub	sp, sp, #16
    e5bc:	e50b0010 	str	r0, [fp, #-16]
    e5c0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:188
    TTask_Struct* current = Get_Current_Process();
    e5c4:	e51b0010 	ldr	r0, [fp, #-16]
    e5c8:	ebfffe5c 	bl	df40 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>
    e5cc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:189
    if (!current || handle >= Max_Process_Opened_Files)
    e5d0:	e51b3008 	ldr	r3, [fp, #-8]
    e5d4:	e3530000 	cmp	r3, #0
    e5d8:	0a000002 	beq	e5e8 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:189 (discriminator 1)
    e5dc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e5e0:	e353000f 	cmp	r3, #15
    e5e4:	9a000001 	bls	e5f0 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:190
        return false;
    e5e8:	e3a03000 	mov	r3, #0
    e5ec:	ea000011 	b	e638 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:192

    if (!current->opened_files[handle])
    e5f0:	e51b2008 	ldr	r2, [fp, #-8]
    e5f4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e5f8:	e2833006 	add	r3, r3, #6
    e5fc:	e1a03103 	lsl	r3, r3, #2
    e600:	e0823003 	add	r3, r2, r3
    e604:	e5933004 	ldr	r3, [r3, #4]
    e608:	e3530000 	cmp	r3, #0
    e60c:	1a000001 	bne	e618 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:193
        return false;
    e610:	e3a03000 	mov	r3, #0
    e614:	ea000007 	b	e638 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:195

    current->opened_files[handle] = nullptr;
    e618:	e51b2008 	ldr	r2, [fp, #-8]
    e61c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e620:	e2833006 	add	r3, r3, #6
    e624:	e1a03103 	lsl	r3, r3, #2
    e628:	e0823003 	add	r3, r2, r3
    e62c:	e3a02000 	mov	r2, #0
    e630:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:196
    return true;
    e634:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:197
}
    e638:	e1a00003 	mov	r0, r3
    e63c:	e24bd004 	sub	sp, fp, #4
    e640:	e8bd8800 	pop	{fp, pc}

0000e644 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result>:
_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:201

void CProcess_Manager::Handle_Process_SWI(
NSWI_Process_Service svc_idx, uint32_t r0, uint32_t r1, uint32_t r2, TSWI_Result& target)
{
    e644:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    e648:	e28db000 	add	fp, sp, #0
    e64c:	e24dd014 	sub	sp, sp, #20
    e650:	e50b0008 	str	r0, [fp, #-8]
    e654:	e50b100c 	str	r1, [fp, #-12]
    e658:	e50b2010 	str	r2, [fp, #-16]
    e65c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:203
    // TODO: signalizace chyby
    if (!mCurrent_Task_Node)
    e660:	e51b3008 	ldr	r3, [fp, #-8]
    e664:	e5933008 	ldr	r3, [r3, #8]
    e668:	e3530000 	cmp	r3, #0
    e66c:	0a000009 	beq	e698 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:206
        return;

    switch (svc_idx)
    e670:	e51b300c 	ldr	r3, [fp, #-12]
    e674:	e3530000 	cmp	r3, #0
    e678:	1a000007 	bne	e69c <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:209
    {
        case NSWI_Process_Service::Get_PID:
            target.r0 = mCurrent_Task_Node->task->pid;
    e67c:	e51b3008 	ldr	r3, [fp, #-8]
    e680:	e5933008 	ldr	r3, [r3, #8]
    e684:	e5933008 	ldr	r3, [r3, #8]
    e688:	e593200c 	ldr	r2, [r3, #12]
    e68c:	e59b3008 	ldr	r3, [fp, #8]
    e690:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:210
            break;
    e694:	ea000000 	b	e69c <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:204
        return;
    e698:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:212
    }
}
    e69c:	e28bd000 	add	sp, fp, #0
    e6a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    e6a4:	e12fff1e 	bx	lr

0000e6a8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result>:
_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:216

void CProcess_Manager::Handle_Filesystem_SWI(
NSWI_Filesystem_Service svc_idx, uint32_t r0, uint32_t r1, uint32_t r2, TSWI_Result& target)
{
    e6a8:	e92d4800 	push	{fp, lr}
    e6ac:	e28db004 	add	fp, sp, #4
    e6b0:	e24dd018 	sub	sp, sp, #24
    e6b4:	e50b0010 	str	r0, [fp, #-16]
    e6b8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    e6bc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    e6c0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:218
    // TODO: signalizace chyby
    if (!mCurrent_Task_Node)
    e6c4:	e51b3010 	ldr	r3, [fp, #-16]
    e6c8:	e5933008 	ldr	r3, [r3, #8]
    e6cc:	e3530000 	cmp	r3, #0
    e6d0:	0a0000d3 	beq	ea24 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x37c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:221
        return;

    switch (svc_idx)
    e6d4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e6d8:	e3530004 	cmp	r3, #4
    e6dc:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    e6e0:	ea0000dc 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
    e6e4:	0000e6f8 	strdeq	lr, [r0], -r8
    e6e8:	0000e78c 	andeq	lr, r0, ip, lsl #15
    e6ec:	0000e834 	andeq	lr, r0, r4, lsr r8
    e6f0:	0000e8dc 	ldrdeq	lr, [r0], -ip
    e6f4:	0000e984 	andeq	lr, r0, r4, lsl #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:224
    {
        case NSWI_Filesystem_Service::Open: {
            target.r0 = Invalid_Handle;
    e6f8:	e59b3008 	ldr	r3, [fp, #8]
    e6fc:	e3e02000 	mvn	r2, #0
    e700:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:226

            IFile* f = sFilesystem.Open(reinterpret_cast<const char*>(r0), static_cast<NFile_Open_Mode>(r1));
    e704:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e708:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    e70c:	e1a01003 	mov	r1, r3
    e710:	e59f0348 	ldr	r0, [pc, #840]	; ea60 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b8>
    e714:	ebfff634 	bl	bfec <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode>
    e718:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:227
            if (!f)
    e71c:	e51b3008 	ldr	r3, [fp, #-8]
    e720:	e3530000 	cmp	r3, #0
    e724:	0a0000c0 	beq	ea2c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x384>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:230
                return;

            target.r0 = Map_File_To_Current(f);
    e728:	e51b1008 	ldr	r1, [fp, #-8]
    e72c:	e51b0010 	ldr	r0, [fp, #-16]
    e730:	ebffff73 	bl	e504 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile>
    e734:	e1a02000 	mov	r2, r0
    e738:	e59b3008 	ldr	r3, [fp, #8]
    e73c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:233

            // nepodarilo se namapovat, napr. proto, ze jsme dosahli limitu otevrenych souboru
            if (target.r0 == Invalid_Handle)
    e740:	e59b3008 	ldr	r3, [fp, #8]
    e744:	e5933000 	ldr	r3, [r3]
    e748:	e3730001 	cmn	r3, #1
    e74c:	1a0000b8 	bne	ea34 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:235
            {
                f->Close();
    e750:	e51b3008 	ldr	r3, [fp, #-8]
    e754:	e5933000 	ldr	r3, [r3]
    e758:	e2833010 	add	r3, r3, #16
    e75c:	e5933000 	ldr	r3, [r3]
    e760:	e51b0008 	ldr	r0, [fp, #-8]
    e764:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:236
                delete f;
    e768:	e51b3008 	ldr	r3, [fp, #-8]
    e76c:	e3530000 	cmp	r3, #0
    e770:	0a0000af 	beq	ea34 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:236 (discriminator 1)
    e774:	e5932000 	ldr	r2, [r3]
    e778:	e2822004 	add	r2, r2, #4
    e77c:	e5922000 	ldr	r2, [r2]
    e780:	e1a00003 	mov	r0, r3
    e784:	e12fff32 	blx	r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:238 (discriminator 1)
            }
            break;
    e788:	ea0000a9 	b	ea34 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:241
        }
        case NSWI_Filesystem_Service::Read: {
            target.r0 = 0;
    e78c:	e59b3008 	ldr	r3, [fp, #8]
    e790:	e3a02000 	mov	r2, #0
    e794:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:243

            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e798:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e79c:	e3530010 	cmp	r3, #16
    e7a0:	8a0000a5 	bhi	ea3c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x394>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:243 (discriminator 1)
    e7a4:	e51b3010 	ldr	r3, [fp, #-16]
    e7a8:	e5933008 	ldr	r3, [r3, #8]
    e7ac:	e5932008 	ldr	r2, [r3, #8]
    e7b0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e7b4:	e2833006 	add	r3, r3, #6
    e7b8:	e1a03103 	lsl	r3, r3, #2
    e7bc:	e0823003 	add	r3, r2, r3
    e7c0:	e5933004 	ldr	r3, [r3, #4]
    e7c4:	e3530000 	cmp	r3, #0
    e7c8:	0a00009b 	beq	ea3c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x394>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:246
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Read(reinterpret_cast<char*>(r1), r2);
    e7cc:	e51b3010 	ldr	r3, [fp, #-16]
    e7d0:	e5933008 	ldr	r3, [r3, #8]
    e7d4:	e5932008 	ldr	r2, [r3, #8]
    e7d8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e7dc:	e2833006 	add	r3, r3, #6
    e7e0:	e1a03103 	lsl	r3, r3, #2
    e7e4:	e0823003 	add	r3, r2, r3
    e7e8:	e5930004 	ldr	r0, [r3, #4]
    e7ec:	e51b3010 	ldr	r3, [fp, #-16]
    e7f0:	e5933008 	ldr	r3, [r3, #8]
    e7f4:	e5932008 	ldr	r2, [r3, #8]
    e7f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e7fc:	e2833006 	add	r3, r3, #6
    e800:	e1a03103 	lsl	r3, r3, #2
    e804:	e0823003 	add	r3, r2, r3
    e808:	e5933004 	ldr	r3, [r3, #4]
    e80c:	e5933000 	ldr	r3, [r3]
    e810:	e2833008 	add	r3, r3, #8
    e814:	e5933000 	ldr	r3, [r3]
    e818:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e81c:	e59b2004 	ldr	r2, [fp, #4]
    e820:	e12fff33 	blx	r3
    e824:	e1a02000 	mov	r2, r0
    e828:	e59b3008 	ldr	r3, [fp, #8]
    e82c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:247
            break;
    e830:	ea000088 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:250
        }
        case NSWI_Filesystem_Service::Write: {
            target.r0 = 0;
    e834:	e59b3008 	ldr	r3, [fp, #8]
    e838:	e3a02000 	mov	r2, #0
    e83c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:252

            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e840:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e844:	e3530010 	cmp	r3, #16
    e848:	8a00007d 	bhi	ea44 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:252 (discriminator 1)
    e84c:	e51b3010 	ldr	r3, [fp, #-16]
    e850:	e5933008 	ldr	r3, [r3, #8]
    e854:	e5932008 	ldr	r2, [r3, #8]
    e858:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e85c:	e2833006 	add	r3, r3, #6
    e860:	e1a03103 	lsl	r3, r3, #2
    e864:	e0823003 	add	r3, r2, r3
    e868:	e5933004 	ldr	r3, [r3, #4]
    e86c:	e3530000 	cmp	r3, #0
    e870:	0a000073 	beq	ea44 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:255
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Write(reinterpret_cast<const char*>(r1), r2);
    e874:	e51b3010 	ldr	r3, [fp, #-16]
    e878:	e5933008 	ldr	r3, [r3, #8]
    e87c:	e5932008 	ldr	r2, [r3, #8]
    e880:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e884:	e2833006 	add	r3, r3, #6
    e888:	e1a03103 	lsl	r3, r3, #2
    e88c:	e0823003 	add	r3, r2, r3
    e890:	e5930004 	ldr	r0, [r3, #4]
    e894:	e51b3010 	ldr	r3, [fp, #-16]
    e898:	e5933008 	ldr	r3, [r3, #8]
    e89c:	e5932008 	ldr	r2, [r3, #8]
    e8a0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e8a4:	e2833006 	add	r3, r3, #6
    e8a8:	e1a03103 	lsl	r3, r3, #2
    e8ac:	e0823003 	add	r3, r2, r3
    e8b0:	e5933004 	ldr	r3, [r3, #4]
    e8b4:	e5933000 	ldr	r3, [r3]
    e8b8:	e283300c 	add	r3, r3, #12
    e8bc:	e5933000 	ldr	r3, [r3]
    e8c0:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e8c4:	e59b2004 	ldr	r2, [fp, #4]
    e8c8:	e12fff33 	blx	r3
    e8cc:	e1a02000 	mov	r2, r0
    e8d0:	e59b3008 	ldr	r3, [fp, #8]
    e8d4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:256
            break;
    e8d8:	ea00005e 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:259
        }
        case NSWI_Filesystem_Service::Close: {
            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e8dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e8e0:	e3530010 	cmp	r3, #16
    e8e4:	8a000058 	bhi	ea4c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:259 (discriminator 1)
    e8e8:	e51b3010 	ldr	r3, [fp, #-16]
    e8ec:	e5933008 	ldr	r3, [r3, #8]
    e8f0:	e5932008 	ldr	r2, [r3, #8]
    e8f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e8f8:	e2833006 	add	r3, r3, #6
    e8fc:	e1a03103 	lsl	r3, r3, #2
    e900:	e0823003 	add	r3, r2, r3
    e904:	e5933004 	ldr	r3, [r3, #4]
    e908:	e3530000 	cmp	r3, #0
    e90c:	0a00004e 	beq	ea4c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:262
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Close();
    e910:	e51b3010 	ldr	r3, [fp, #-16]
    e914:	e5933008 	ldr	r3, [r3, #8]
    e918:	e5932008 	ldr	r2, [r3, #8]
    e91c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e920:	e2833006 	add	r3, r3, #6
    e924:	e1a03103 	lsl	r3, r3, #2
    e928:	e0823003 	add	r3, r2, r3
    e92c:	e5931004 	ldr	r1, [r3, #4]
    e930:	e51b3010 	ldr	r3, [fp, #-16]
    e934:	e5933008 	ldr	r3, [r3, #8]
    e938:	e5932008 	ldr	r2, [r3, #8]
    e93c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e940:	e2833006 	add	r3, r3, #6
    e944:	e1a03103 	lsl	r3, r3, #2
    e948:	e0823003 	add	r3, r2, r3
    e94c:	e5933004 	ldr	r3, [r3, #4]
    e950:	e5933000 	ldr	r3, [r3]
    e954:	e2833010 	add	r3, r3, #16
    e958:	e5933000 	ldr	r3, [r3]
    e95c:	e1a00001 	mov	r0, r1
    e960:	e12fff33 	blx	r3
    e964:	e1a03000 	mov	r3, r0
    e968:	e1a02003 	mov	r2, r3
    e96c:	e59b3008 	ldr	r3, [fp, #8]
    e970:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:263
            Unmap_File_Current(r0);
    e974:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    e978:	e51b0010 	ldr	r0, [fp, #-16]
    e97c:	ebffff0b 	bl	e5b0 <_ZN16CProcess_Manager18Unmap_File_CurrentEj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:265

            break;
    e980:	ea000034 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:268
        }
        case NSWI_Filesystem_Service::IOCtl: {
            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e984:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e988:	e3530010 	cmp	r3, #16
    e98c:	8a000030 	bhi	ea54 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:268 (discriminator 1)
    e990:	e51b3010 	ldr	r3, [fp, #-16]
    e994:	e5933008 	ldr	r3, [r3, #8]
    e998:	e5932008 	ldr	r2, [r3, #8]
    e99c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9a0:	e2833006 	add	r3, r3, #6
    e9a4:	e1a03103 	lsl	r3, r3, #2
    e9a8:	e0823003 	add	r3, r2, r3
    e9ac:	e5933004 	ldr	r3, [r3, #4]
    e9b0:	e3530000 	cmp	r3, #0
    e9b4:	0a000026 	beq	ea54 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:271
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->IOCtl(static_cast<NIOCtl_Operation>(r1),
    e9b8:	e51b3010 	ldr	r3, [fp, #-16]
    e9bc:	e5933008 	ldr	r3, [r3, #8]
    e9c0:	e5932008 	ldr	r2, [r3, #8]
    e9c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9c8:	e2833006 	add	r3, r3, #6
    e9cc:	e1a03103 	lsl	r3, r3, #2
    e9d0:	e0823003 	add	r3, r2, r3
    e9d4:	e5930004 	ldr	r0, [r3, #4]
    e9d8:	e51b3010 	ldr	r3, [fp, #-16]
    e9dc:	e5933008 	ldr	r3, [r3, #8]
    e9e0:	e5932008 	ldr	r2, [r3, #8]
    e9e4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9e8:	e2833006 	add	r3, r3, #6
    e9ec:	e1a03103 	lsl	r3, r3, #2
    e9f0:	e0823003 	add	r3, r2, r3
    e9f4:	e5933004 	ldr	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:272
                                                                          reinterpret_cast<void*>(r2));
    e9f8:	e5933000 	ldr	r3, [r3]
    e9fc:	e2833014 	add	r3, r3, #20
    ea00:	e5933000 	ldr	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:271
            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->IOCtl(static_cast<NIOCtl_Operation>(r1),
    ea04:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    ea08:	e59b2004 	ldr	r2, [fp, #4]
    ea0c:	e12fff33 	blx	r3
    ea10:	e1a03000 	mov	r3, r0
    ea14:	e1a02003 	mov	r2, r3
    ea18:	e59b3008 	ldr	r3, [fp, #8]
    ea1c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:273
            break;
    ea20:	ea00000c 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:219
        return;
    ea24:	e320f000 	nop	{0}
    ea28:	ea00000a 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:228
                return;
    ea2c:	e320f000 	nop	{0}
    ea30:	ea000008 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:238
            break;
    ea34:	e320f000 	nop	{0}
    ea38:	ea000006 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:244
                return;
    ea3c:	e320f000 	nop	{0}
    ea40:	ea000004 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:253
                return;
    ea44:	e320f000 	nop	{0}
    ea48:	ea000002 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:260
                return;
    ea4c:	e320f000 	nop	{0}
    ea50:	ea000000 	b	ea58 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:269
                return;
    ea54:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
        }
    }
}
    ea58:	e24bd004 	sub	sp, fp, #4
    ea5c:	e8bd8800 	pop	{fp, pc}
    ea60:	00010c34 	andeq	r0, r1, r4, lsr ip

0000ea64 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
    ea64:	e92d4800 	push	{fp, lr}
    ea68:	e28db004 	add	fp, sp, #4
    ea6c:	e24dd008 	sub	sp, sp, #8
    ea70:	e50b0008 	str	r0, [fp, #-8]
    ea74:	e50b100c 	str	r1, [fp, #-12]
    ea78:	e51b3008 	ldr	r3, [fp, #-8]
    ea7c:	e3530001 	cmp	r3, #1
    ea80:	1a000005 	bne	ea9c <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276 (discriminator 1)
    ea84:	e51b300c 	ldr	r3, [fp, #-12]
    ea88:	e59f2018 	ldr	r2, [pc, #24]	; eaa8 <_Z41__static_initialization_and_destruction_0ii+0x44>
    ea8c:	e1530002 	cmp	r3, r2
    ea90:	1a000001 	bne	ea9c <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:17
CProcess_Manager sProcessMgr;
    ea94:	e59f0010 	ldr	r0, [pc, #16]	; eaac <_Z41__static_initialization_and_destruction_0ii+0x48>
    ea98:	ebfffd16 	bl	def8 <_ZN16CProcess_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
}
    ea9c:	e320f000 	nop	{0}
    eaa0:	e24bd004 	sub	sp, fp, #4
    eaa4:	e8bd8800 	pop	{fp, pc}
    eaa8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    eaac:	00011cd4 	ldrdeq	r1, [r1], -r4

0000eab0 <_GLOBAL__sub_I_sProcessMgr>:
_GLOBAL__sub_I_sProcessMgr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
    eab0:	e92d4800 	push	{fp, lr}
    eab4:	e28db004 	add	fp, sp, #4
    eab8:	e59f1008 	ldr	r1, [pc, #8]	; eac8 <_GLOBAL__sub_I_sProcessMgr+0x18>
    eabc:	e3a00001 	mov	r0, #1
    eac0:	ebffffe7 	bl	ea64 <_Z41__static_initialization_and_destruction_0ii>
    eac4:	e8bd8800 	pop	{fp, pc}
    eac8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000eacc <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    eacc:	e92d4800 	push	{fp, lr}
    ead0:	e28db004 	add	fp, sp, #4
    ead4:	e24dd008 	sub	sp, sp, #8
    ead8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    eadc:	e3a0100c 	mov	r1, #12
    eae0:	e51b0008 	ldr	r0, [fp, #-8]
    eae4:	ebfffba6 	bl	d984 <_ZN20CKernel_Heap_Manager5AllocEj>
    eae8:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    eaec:	e1a00003 	mov	r0, r3
    eaf0:	e24bd004 	sub	sp, fp, #4
    eaf4:	e8bd8800 	pop	{fp, pc}

0000eaf8 <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    eaf8:	e92d4800 	push	{fp, lr}
    eafc:	e28db004 	add	fp, sp, #4
    eb00:	e24dd008 	sub	sp, sp, #8
    eb04:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    eb08:	e3a0105c 	mov	r1, #92	; 0x5c
    eb0c:	e51b0008 	ldr	r0, [fp, #-8]
    eb10:	ebfffb9b 	bl	d984 <_ZN20CKernel_Heap_Manager5AllocEj>
    eb14:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    eb18:	e1a00003 	mov	r0, r3
    eb1c:	e24bd004 	sub	sp, fp, #4
    eb20:	e8bd8800 	pop	{fp, pc}

0000eb24 <process_bootstrap>:
process_bootstrap():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:5
.global process_bootstrap
;@ Process bootstrapping - kernelovy "obal" procesu
;@ Vyzaduje na zasobniku pushnutou hodnotu vstupniho bodu procesu
process_bootstrap:
    add lr, pc, #8      ;@ ulozime do lr hodnotu PC+8, abychom se korektne vratili na instrukci po nasledujici
    eb24:	e28fe008 	add	lr, pc, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:6
    pop {pc}            ;@ vyzvedneme si ulozenou hodnotu cile
    eb28:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000eb2c <context_switch>:
context_switch():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:14
.global context_switch
;@ Prepnuti procesu ze soucasneho na jiny, ktery jiz byl planovany
;@ r0 - novy proces
;@ r1 - stary proces
context_switch:
	mrs r12, cpsr           ;@ ulozit CPU state do r12
    eb2c:	e10fc000 	mrs	ip, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:15
	push {r14}              ;@ push LR
    eb30:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:16
	push {r0}               ;@ push SP
    eb34:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:17
	push {r0-r12}           ;@ push registru
    eb38:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:18
	str sp, [r1, #4]        ;@ ulozit SP stareho procesu
    eb3c:	e581d004 	str	sp, [r1, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:20

	ldr sp, [r0, #4]        ;@ nacist SP noveho procesu
    eb40:	e590d004 	ldr	sp, [r0, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:21
	pop {r0-r12}            ;@ obnovit registry noveho procesu
    eb44:	e8bd1fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:22
	msr cpsr_c, r12         ;@ obnovit CPU state
    eb48:	e121f00c 	msr	CPSR_c, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:23
	pop {lr, pc}            ;@ navrat do kontextu provadeni noveho procesu
    eb4c:	e8bdc000 	pop	{lr, pc}

0000eb50 <context_switch_first>:
context_switch_first():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:30
.global context_switch_first
;@ Prepnuti procesu ze soucasneho na jiny, ktery jeste nebyl planovany
;@ r0 - novy proces
;@ r1 - stary proces
context_switch_first:
	mrs r12, cpsr           ;@ ulozit CPU state do r12
    eb50:	e10fc000 	mrs	ip, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:31
	push {r14}              ;@ push LR
    eb54:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:32
	push {r13}              ;@ push SP
    eb58:	e92d2000 	stmfd	sp!, {sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:33
	push {r0-r12}           ;@ push registru
    eb5c:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:34
	str sp, [r1, #4]        ;@ ulozit SP stareho procesu
    eb60:	e581d004 	str	sp, [r1, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:36

    ldr r3, [r0, #0]        ;@ "budouci" PC do r3 (entry point procesu)
    eb64:	e5903000 	ldr	r3, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:37
    ldr r2, [r0, #8]        ;@ "vstupni" PC do r2 (bootstrap procesu v kernelu)
    eb68:	e5902008 	ldr	r2, [r0, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:38
    ldr sp, [r0, #4]        ;@ nacteme stack pointer procesu
    eb6c:	e590d004 	ldr	sp, [r0, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:39
    push {r3}               ;@ budouci navratova adresa -> do zasobniku, bootstrap si ji tamodsud vyzvedne
    eb70:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:40
    push {r2}               ;@ pushneme si i bootstrap adresu, abychom ji mohli obnovit do PC
    eb74:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:41
    cpsie i                 ;@ povolime preruseni (v budoucich switchich uz bude flaga ulozena v cpsr/spsr)
    eb78:	f1080080 	cpsie	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:42
    pop {pc}                ;@ vybereme ze zasobniku novou hodnotu PC (PC procesu)
    eb7c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000eb80 <disable_irq>:
disable_irq():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:102
;@ tady budou ostatni symboly, ktere nevyzaduji zadne specialni misto
.section .text

.global disable_irq
disable_irq:
    cpsid i
    eb80:	f10c0080 	cpsid	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:103
    bx lr
    eb84:	e12fff1e 	bx	lr

0000eb88 <enable_irq>:
enable_irq():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:107

.global enable_irq
enable_irq:
    mrs r0, cpsr		;@ presun ridiciho registru (CPSR) do general purpose registru (R0)
    eb88:	e10f0000 	mrs	r0, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:108
    bic r0, r0, #0x80	;@ vypne bit 7 v registru r0 ("IRQ mask bit")
    eb8c:	e3c00080 	bic	r0, r0, #128	; 0x80
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:109
    msr cpsr_c, r0		;@ nacteme upraveny general purpose (R0) registr do ridiciho (CPSR)
    eb90:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:110
    cpsie i				;@ povoli preruseni
    eb94:	f1080080 	cpsie	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:111
    bx lr
    eb98:	e12fff1e 	bx	lr

0000eb9c <undefined_instruction_handler>:
undefined_instruction_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:114

undefined_instruction_handler:
	b hang
    eb9c:	eaffe541 	b	80a8 <hang>

0000eba0 <software_interrupt_handler>:
software_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:118

.global _internal_software_interrupt_handler
software_interrupt_handler:
	stmfd sp!,{r2-r12,lr}		;@ ulozime na zasobnik stav
    eba0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:122

	;@ tady budeme mozna chtit prepinat do SYS rezimu v budoucnu

	ldr r3,[lr,#-4]				;@ do registru r3 nacteme instrukci, ktera vyvolala preruseni (lr = navratova adresa, -4 proto, ze ukazuje na nasledujici instrukci)
    eba4:	e51e3004 	ldr	r3, [lr, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:123
    bic r3,r3,#0xff000000		;@ vymaskujeme parametr (dolnich 24 bitu) a nechame ho v r3
    eba8:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:124
	bl _internal_software_interrupt_handler		;@ zavolame nas interni handler
    ebac:	ebfffa6a 	bl	d55c <_internal_software_interrupt_handler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:125
	mov r2, r0					;@ ten vraci pointer na result kontejner v r0, presuneme do r2 - potrebujeme obsah dostat do r0 a r1
    ebb0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:126
	ldr r0, [r2, #0]			;@ nacteme navratove hodnoty do registru
    ebb4:	e5920000 	ldr	r0, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:127
	ldr r1, [r2, #4]
    ebb8:	e5921004 	ldr	r1, [r2, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:128
	ldmfd sp!, {r2-r12,pc}^		;@ obnovime ze zasobniku stav (jen puvodni lr nacteme do pc)
    ebbc:	e8fd9ffc 	ldm	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

0000ebc0 <irq_handler>:
irq_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:133


.global _internal_irq_handler
irq_handler:
	sub lr, lr, #4
    ebc0:	e24ee004 	sub	lr, lr, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:134
	srsdb #CPSR_MODE_SYS!		;@ ekvivalent k push lr a msr+push spsr
    ebc4:	f96d051f 	srsdb	sp!, #31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:135
	cpsid if, #CPSR_MODE_SYS	;@ prechod do SYS modu + zakazeme preruseni
    ebc8:	f10e00df 	cpsid	if,#31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:136
	push {r0-r4, r12, lr}		;@ ulozime callee-saved registry
    ebcc:	e92d501f 	push	{r0, r1, r2, r3, r4, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:138

	and r4, sp, #7
    ebd0:	e20d4007 	and	r4, sp, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:139
	sub sp, sp, r4
    ebd4:	e04dd004 	sub	sp, sp, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:141

	bl _internal_irq_handler	;@ zavolame handler IRQ
    ebd8:	ebfffa87 	bl	d5fc <_internal_irq_handler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:143

	add sp, sp, r4
    ebdc:	e08dd004 	add	sp, sp, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:145

	pop {r0-r4, r12, lr}		;@ obnovime callee-saved registry
    ebe0:	e8bd501f 	pop	{r0, r1, r2, r3, r4, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:146
	rfeia sp!					;@ vracime se do puvodniho stavu (ktery ulozila instrukce srsdb)
    ebe4:	f8bd0a00 	rfeia	sp!

0000ebe8 <prefetch_abort_handler>:
prefetch_abort_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:151

prefetch_abort_handler:
	;@ tady pak muzeme osetrit, kdyz program zasahne do mista, ktere nema mapovane ve svem virtualnim adr. prostoru
	;@ a treba vyvolat nasi obdobu segfaultu
	b hang
    ebe8:	eaffe52e 	b	80a8 <hang>

0000ebec <data_abort_handler>:
data_abort_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:156

data_abort_handler:
	;@ tady pak muzeme osetrit, kdyz program zasahne do mista, ktere nema mapovane ve svem virtualnim adr. prostoru
	;@ a treba vyvolat nasi obdobu segfaultu
	b hang
    ebec:	eaffe52d 	b	80a8 <hang>

0000ebf0 <_c_startup>:
_c_startup():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:21
extern "C" dtor_ptr __DTOR_LIST__[0];
// konec pole destruktoru
extern "C" dtor_ptr __DTOR_END__[0];

extern "C" int _c_startup(void)
{
    ebf0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ebf4:	e28db000 	add	fp, sp, #0
    ebf8:	e24dd00c 	sub	sp, sp, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25
    int* i;

    // vynulujeme .bss sekci
    for (i = (int*)_bss_start; i < (int*)_bss_end; i++)
    ebfc:	e59f304c 	ldr	r3, [pc, #76]	; ec50 <_c_startup+0x60>
    ec00:	e5933000 	ldr	r3, [r3]
    ec04:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25 (discriminator 3)
    ec08:	e59f3044 	ldr	r3, [pc, #68]	; ec54 <_c_startup+0x64>
    ec0c:	e5933000 	ldr	r3, [r3]
    ec10:	e1a02003 	mov	r2, r3
    ec14:	e51b3008 	ldr	r3, [fp, #-8]
    ec18:	e1530002 	cmp	r3, r2
    ec1c:	2a000006 	bcs	ec3c <_c_startup+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:26 (discriminator 2)
        *i = 0;
    ec20:	e51b3008 	ldr	r3, [fp, #-8]
    ec24:	e3a02000 	mov	r2, #0
    ec28:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25 (discriminator 2)
    for (i = (int*)_bss_start; i < (int*)_bss_end; i++)
    ec2c:	e51b3008 	ldr	r3, [fp, #-8]
    ec30:	e2833004 	add	r3, r3, #4
    ec34:	e50b3008 	str	r3, [fp, #-8]
    ec38:	eafffff2 	b	ec08 <_c_startup+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:28

    return 0;
    ec3c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:29
}
    ec40:	e1a00003 	mov	r0, r3
    ec44:	e28bd000 	add	sp, fp, #0
    ec48:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ec4c:	e12fff1e 	bx	lr
    ec50:	00010b9c 	muleq	r1, ip, fp
    ec54:	00011cf0 	strdeq	r1, [r1], -r0

0000ec58 <_cpp_startup>:
_cpp_startup():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:32

extern "C" int _cpp_startup(void)
{
    ec58:	e92d4800 	push	{fp, lr}
    ec5c:	e28db004 	add	fp, sp, #4
    ec60:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37
    ctor_ptr* fnptr;

    // zavolame konstruktory globalnich C++ trid
    // v poli __CTOR_LIST__ jsou ukazatele na vygenerovane stuby volani konstruktoru
    for (fnptr = __CTOR_LIST__; fnptr < __CTOR_END__; fnptr++)
    ec64:	e59f303c 	ldr	r3, [pc, #60]	; eca8 <_cpp_startup+0x50>
    ec68:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37 (discriminator 3)
    ec6c:	e51b3008 	ldr	r3, [fp, #-8]
    ec70:	e59f2034 	ldr	r2, [pc, #52]	; ecac <_cpp_startup+0x54>
    ec74:	e1530002 	cmp	r3, r2
    ec78:	2a000006 	bcs	ec98 <_cpp_startup+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:38 (discriminator 2)
        (*fnptr)();
    ec7c:	e51b3008 	ldr	r3, [fp, #-8]
    ec80:	e5933000 	ldr	r3, [r3]
    ec84:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37 (discriminator 2)
    for (fnptr = __CTOR_LIST__; fnptr < __CTOR_END__; fnptr++)
    ec88:	e51b3008 	ldr	r3, [fp, #-8]
    ec8c:	e2833004 	add	r3, r3, #4
    ec90:	e50b3008 	str	r3, [fp, #-8]
    ec94:	eafffff4 	b	ec6c <_cpp_startup+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:40

    return 0;
    ec98:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:41
}
    ec9c:	e1a00003 	mov	r0, r3
    eca0:	e24bd004 	sub	sp, fp, #4
    eca4:	e8bd8800 	pop	{fp, pc}
    eca8:	00010b3c 	andeq	r0, r1, ip, lsr fp
    ecac:	00010b70 	andeq	r0, r1, r0, ror fp

0000ecb0 <_cpp_shutdown>:
_cpp_shutdown():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:44

extern "C" int _cpp_shutdown(void)
{
    ecb0:	e92d4800 	push	{fp, lr}
    ecb4:	e28db004 	add	fp, sp, #4
    ecb8:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48
    dtor_ptr* fnptr;

    // zavolame destruktory globalnich C++ trid
    for (fnptr = __DTOR_LIST__; fnptr < __DTOR_END__; fnptr++)
    ecbc:	e59f303c 	ldr	r3, [pc, #60]	; ed00 <_cpp_shutdown+0x50>
    ecc0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48 (discriminator 3)
    ecc4:	e51b3008 	ldr	r3, [fp, #-8]
    ecc8:	e59f2034 	ldr	r2, [pc, #52]	; ed04 <_cpp_shutdown+0x54>
    eccc:	e1530002 	cmp	r3, r2
    ecd0:	2a000006 	bcs	ecf0 <_cpp_shutdown+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:49 (discriminator 2)
        (*fnptr)();
    ecd4:	e51b3008 	ldr	r3, [fp, #-8]
    ecd8:	e5933000 	ldr	r3, [r3]
    ecdc:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48 (discriminator 2)
    for (fnptr = __DTOR_LIST__; fnptr < __DTOR_END__; fnptr++)
    ece0:	e51b3008 	ldr	r3, [fp, #-8]
    ece4:	e2833004 	add	r3, r3, #4
    ece8:	e50b3008 	str	r3, [fp, #-8]
    ecec:	eafffff4 	b	ecc4 <_cpp_shutdown+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:51

    return 0;
    ecf0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:52
}
    ecf4:	e1a00003 	mov	r0, r3
    ecf8:	e24bd004 	sub	sp, fp, #4
    ecfc:	e8bd8800 	pop	{fp, pc}
    ed00:	00010b70 	andeq	r0, r1, r0, ror fp
    ed04:	00010b70 	andeq	r0, r1, r0, ror fp

0000ed08 <_Z9Process_1v>:
_Z9Process_1v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:21

extern "C" void enable_irq();
extern "C" void disable_irq();

void Process_1()
{
    ed08:	e92d4800 	push	{fp, lr}
    ed0c:	e28db004 	add	fp, sp, #4
    ed10:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:24
    volatile int i;

    uint32_t f = open("DEV:gpio/18", NFile_Open_Mode::Write_Only);
    ed14:	e3a01001 	mov	r1, #1
    ed18:	e59f00c0 	ldr	r0, [pc, #192]	; ede0 <_Z9Process_1v+0xd8>
    ed1c:	eb000159 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    ed20:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:26

    disable_irq();
    ed24:	ebffff95 	bl	eb80 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:27
    sMonitor << "process 1 file descriptor = " << f << "\n";
    ed28:	e59f10b4 	ldr	r1, [pc, #180]	; ede4 <_Z9Process_1v+0xdc>
    ed2c:	e59f00b4 	ldr	r0, [pc, #180]	; ede8 <_Z9Process_1v+0xe0>
    ed30:	ebffe9c5 	bl	944c <_ZN8CMonitorlsEPKc>
    ed34:	e1a03000 	mov	r3, r0
    ed38:	e51b1008 	ldr	r1, [fp, #-8]
    ed3c:	e1a00003 	mov	r0, r3
    ed40:	ebffe9ec 	bl	94f8 <_ZN8CMonitorlsEj>
    ed44:	e1a03000 	mov	r3, r0
    ed48:	e59f109c 	ldr	r1, [pc, #156]	; edec <_Z9Process_1v+0xe4>
    ed4c:	e1a00003 	mov	r0, r3
    ed50:	ebffe9bd 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:28
    enable_irq();
    ed54:	ebffff8b 	bl	eb88 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:32

    while (true)
    {
        write(f, "1", 1);
    ed58:	e3a02001 	mov	r2, #1
    ed5c:	e59f108c 	ldr	r1, [pc, #140]	; edf0 <_Z9Process_1v+0xe8>
    ed60:	e51b0008 	ldr	r0, [fp, #-8]
    ed64:	eb00016c 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:34

        for (i = 0; i < 0x400; i++)
    ed68:	e3a03000 	mov	r3, #0
    ed6c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:34 (discriminator 3)
    ed70:	e51b300c 	ldr	r3, [fp, #-12]
    ed74:	e3530b01 	cmp	r3, #1024	; 0x400
    ed78:	b3a03001 	movlt	r3, #1
    ed7c:	a3a03000 	movge	r3, #0
    ed80:	e6ef3073 	uxtb	r3, r3
    ed84:	e3530000 	cmp	r3, #0
    ed88:	0a000003 	beq	ed9c <_Z9Process_1v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:34 (discriminator 2)
    ed8c:	e51b300c 	ldr	r3, [fp, #-12]
    ed90:	e2833001 	add	r3, r3, #1
    ed94:	e50b300c 	str	r3, [fp, #-12]
    ed98:	eafffff4 	b	ed70 <_Z9Process_1v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:37
            ;

        write(f, "0", 1);
    ed9c:	e3a02001 	mov	r2, #1
    eda0:	e59f104c 	ldr	r1, [pc, #76]	; edf4 <_Z9Process_1v+0xec>
    eda4:	e51b0008 	ldr	r0, [fp, #-8]
    eda8:	eb00015b 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:39

        for (i = 0; i < 0x400; i++)
    edac:	e3a03000 	mov	r3, #0
    edb0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:39 (discriminator 3)
    edb4:	e51b300c 	ldr	r3, [fp, #-12]
    edb8:	e3530b01 	cmp	r3, #1024	; 0x400
    edbc:	b3a03001 	movlt	r3, #1
    edc0:	a3a03000 	movge	r3, #0
    edc4:	e6ef3073 	uxtb	r3, r3
    edc8:	e3530000 	cmp	r3, #0
    edcc:	0affffe1 	beq	ed58 <_Z9Process_1v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:39 (discriminator 2)
    edd0:	e51b300c 	ldr	r3, [fp, #-12]
    edd4:	e2833001 	add	r3, r3, #1
    edd8:	e50b300c 	str	r3, [fp, #-12]
    eddc:	eafffff4 	b	edb4 <_Z9Process_1v+0xac>
    ede0:	000105fc 	strdeq	r0, [r1], -ip
    ede4:	00010608 	andeq	r0, r1, r8, lsl #12
    ede8:	00010bd4 	ldrdeq	r0, [r1], -r4
    edec:	00010628 	andeq	r0, r1, r8, lsr #12
    edf0:	0001062c 	andeq	r0, r1, ip, lsr #12
    edf4:	00010630 	andeq	r0, r1, r0, lsr r6

0000edf8 <_Z9Process_2v>:
_Z9Process_2v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:47

    close(f);
}

void Process_2()
{
    edf8:	e92d4800 	push	{fp, lr}
    edfc:	e28db004 	add	fp, sp, #4
    ee00:	e24dd028 	sub	sp, sp, #40	; 0x28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:50
    volatile int i;

    const char* msg = "Hello!\n";
    ee04:	e59f3110 	ldr	r3, [pc, #272]	; ef1c <_Z9Process_2v+0x124>
    ee08:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:52

    uint32_t f = open("DEV:monitor/0", NFile_Open_Mode::Read_Write);
    ee0c:	e3a01002 	mov	r1, #2
    ee10:	e59f0108 	ldr	r0, [pc, #264]	; ef20 <_Z9Process_2v+0x128>
    ee14:	eb00011b 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    ee18:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:53
    uint32_t rndf = open("DEV:trng", NFile_Open_Mode::Read_Only);
    ee1c:	e3a01000 	mov	r1, #0
    ee20:	e59f00fc 	ldr	r0, [pc, #252]	; ef24 <_Z9Process_2v+0x12c>
    ee24:	eb000117 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    ee28:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:55

    disable_irq();
    ee2c:	ebffff53 	bl	eb80 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:56
    sMonitor << "process 2 file descriptor (f) = " << f << "\n";
    ee30:	e59f10f0 	ldr	r1, [pc, #240]	; ef28 <_Z9Process_2v+0x130>
    ee34:	e59f00f0 	ldr	r0, [pc, #240]	; ef2c <_Z9Process_2v+0x134>
    ee38:	ebffe983 	bl	944c <_ZN8CMonitorlsEPKc>
    ee3c:	e1a03000 	mov	r3, r0
    ee40:	e51b100c 	ldr	r1, [fp, #-12]
    ee44:	e1a00003 	mov	r0, r3
    ee48:	ebffe9aa 	bl	94f8 <_ZN8CMonitorlsEj>
    ee4c:	e1a03000 	mov	r3, r0
    ee50:	e59f10d8 	ldr	r1, [pc, #216]	; ef30 <_Z9Process_2v+0x138>
    ee54:	e1a00003 	mov	r0, r3
    ee58:	ebffe97b 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:57
    sMonitor << "process 2 file descriptor (rndf)= " << rndf << "\n";
    ee5c:	e59f10d0 	ldr	r1, [pc, #208]	; ef34 <_Z9Process_2v+0x13c>
    ee60:	e59f00c4 	ldr	r0, [pc, #196]	; ef2c <_Z9Process_2v+0x134>
    ee64:	ebffe978 	bl	944c <_ZN8CMonitorlsEPKc>
    ee68:	e1a03000 	mov	r3, r0
    ee6c:	e51b1010 	ldr	r1, [fp, #-16]
    ee70:	e1a00003 	mov	r0, r3
    ee74:	ebffe99f 	bl	94f8 <_ZN8CMonitorlsEj>
    ee78:	e1a03000 	mov	r3, r0
    ee7c:	e59f10ac 	ldr	r1, [pc, #172]	; ef30 <_Z9Process_2v+0x138>
    ee80:	e1a00003 	mov	r0, r3
    ee84:	ebffe970 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:58
    enable_irq();
    ee88:	ebffff3e 	bl	eb88 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:65
    uint32_t rdbuf;
    char numbuf[16];

    while (true)
    {
        read(rndf, reinterpret_cast<char*>(&rdbuf), 4);
    ee8c:	e24b3018 	sub	r3, fp, #24
    ee90:	e3a02004 	mov	r2, #4
    ee94:	e1a01003 	mov	r1, r3
    ee98:	e51b0010 	ldr	r0, [fp, #-16]
    ee9c:	eb00010a 	bl	f2cc <_Z4readjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:67

        bzero(numbuf, 16);
    eea0:	e24b3028 	sub	r3, fp, #40	; 0x28
    eea4:	e3a01010 	mov	r1, #16
    eea8:	e1a00003 	mov	r0, r3
    eeac:	eb000241 	bl	f7b8 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:68
        itoa(rdbuf, numbuf, 10);
    eeb0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    eeb4:	e24b1028 	sub	r1, fp, #40	; 0x28
    eeb8:	e3a0200a 	mov	r2, #10
    eebc:	e1a00003 	mov	r0, r3
    eec0:	eb000148 	bl	f3e8 <_Z4itoajPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:70

        write(f, numbuf, strlen(numbuf));
    eec4:	e24b3028 	sub	r3, fp, #40	; 0x28
    eec8:	e1a00003 	mov	r0, r3
    eecc:	eb000224 	bl	f764 <_Z6strlenPKc>
    eed0:	e1a03000 	mov	r3, r0
    eed4:	e1a02003 	mov	r2, r3
    eed8:	e24b3028 	sub	r3, fp, #40	; 0x28
    eedc:	e1a01003 	mov	r1, r3
    eee0:	e51b000c 	ldr	r0, [fp, #-12]
    eee4:	eb00010c 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:72

        for (i = 0; i < 0x800; i++)
    eee8:	e3a03000 	mov	r3, #0
    eeec:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:72 (discriminator 3)
    eef0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    eef4:	e3530b02 	cmp	r3, #2048	; 0x800
    eef8:	b3a03001 	movlt	r3, #1
    eefc:	a3a03000 	movge	r3, #0
    ef00:	e6ef3073 	uxtb	r3, r3
    ef04:	e3530000 	cmp	r3, #0
    ef08:	0affffdf 	beq	ee8c <_Z9Process_2v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:72 (discriminator 2)
    ef0c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ef10:	e2833001 	add	r3, r3, #1
    ef14:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    ef18:	eafffff4 	b	eef0 <_Z9Process_2v+0xf8>
    ef1c:	00010634 	andeq	r0, r1, r4, lsr r6
    ef20:	0001063c 	andeq	r0, r1, ip, lsr r6
    ef24:	0001064c 	andeq	r0, r1, ip, asr #12
    ef28:	00010658 	andeq	r0, r1, r8, asr r6
    ef2c:	00010bd4 	ldrdeq	r0, [r1], -r4
    ef30:	00010628 	andeq	r0, r1, r8, lsr #12
    ef34:	0001067c 	andeq	r0, r1, ip, ror r6

0000ef38 <_Z9Process_3v>:
_Z9Process_3v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:81
    close(f);
    close(rndf);
}

void Process_3()
{
    ef38:	e92d4800 	push	{fp, lr}
    ef3c:	e28db004 	add	fp, sp, #4
    ef40:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:84
    volatile int i;

    uint32_t f = open("DEV:gpio/19", NFile_Open_Mode::Write_Only);
    ef44:	e3a01001 	mov	r1, #1
    ef48:	e59f00c0 	ldr	r0, [pc, #192]	; f010 <_Z9Process_3v+0xd8>
    ef4c:	eb0000cd 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    ef50:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:86

    disable_irq();
    ef54:	ebffff09 	bl	eb80 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:87
    sMonitor << "process 3 file descriptor = " << f << "\n";
    ef58:	e59f10b4 	ldr	r1, [pc, #180]	; f014 <_Z9Process_3v+0xdc>
    ef5c:	e59f00b4 	ldr	r0, [pc, #180]	; f018 <_Z9Process_3v+0xe0>
    ef60:	ebffe939 	bl	944c <_ZN8CMonitorlsEPKc>
    ef64:	e1a03000 	mov	r3, r0
    ef68:	e51b1008 	ldr	r1, [fp, #-8]
    ef6c:	e1a00003 	mov	r0, r3
    ef70:	ebffe960 	bl	94f8 <_ZN8CMonitorlsEj>
    ef74:	e1a03000 	mov	r3, r0
    ef78:	e59f109c 	ldr	r1, [pc, #156]	; f01c <_Z9Process_3v+0xe4>
    ef7c:	e1a00003 	mov	r0, r3
    ef80:	ebffe931 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:88
    enable_irq();
    ef84:	ebfffeff 	bl	eb88 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:92

    while (true)
    {
        write(f, "1", 1);
    ef88:	e3a02001 	mov	r2, #1
    ef8c:	e59f108c 	ldr	r1, [pc, #140]	; f020 <_Z9Process_3v+0xe8>
    ef90:	e51b0008 	ldr	r0, [fp, #-8]
    ef94:	eb0000e0 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:94

        for (i = 0; i < 0x800; i++)
    ef98:	e3a03000 	mov	r3, #0
    ef9c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:94 (discriminator 3)
    efa0:	e51b300c 	ldr	r3, [fp, #-12]
    efa4:	e3530b02 	cmp	r3, #2048	; 0x800
    efa8:	b3a03001 	movlt	r3, #1
    efac:	a3a03000 	movge	r3, #0
    efb0:	e6ef3073 	uxtb	r3, r3
    efb4:	e3530000 	cmp	r3, #0
    efb8:	0a000003 	beq	efcc <_Z9Process_3v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:94 (discriminator 2)
    efbc:	e51b300c 	ldr	r3, [fp, #-12]
    efc0:	e2833001 	add	r3, r3, #1
    efc4:	e50b300c 	str	r3, [fp, #-12]
    efc8:	eafffff4 	b	efa0 <_Z9Process_3v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:97
            ;

        write(f, "0", 1);
    efcc:	e3a02001 	mov	r2, #1
    efd0:	e59f104c 	ldr	r1, [pc, #76]	; f024 <_Z9Process_3v+0xec>
    efd4:	e51b0008 	ldr	r0, [fp, #-8]
    efd8:	eb0000cf 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:99

        for (i = 0; i < 0x800; i++)
    efdc:	e3a03000 	mov	r3, #0
    efe0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:99 (discriminator 3)
    efe4:	e51b300c 	ldr	r3, [fp, #-12]
    efe8:	e3530b02 	cmp	r3, #2048	; 0x800
    efec:	b3a03001 	movlt	r3, #1
    eff0:	a3a03000 	movge	r3, #0
    eff4:	e6ef3073 	uxtb	r3, r3
    eff8:	e3530000 	cmp	r3, #0
    effc:	0affffe1 	beq	ef88 <_Z9Process_3v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:99 (discriminator 2)
    f000:	e51b300c 	ldr	r3, [fp, #-12]
    f004:	e2833001 	add	r3, r3, #1
    f008:	e50b300c 	str	r3, [fp, #-12]
    f00c:	eafffff4 	b	efe4 <_Z9Process_3v+0xac>
    f010:	000106a0 	andeq	r0, r1, r0, lsr #13
    f014:	000106ac 	andeq	r0, r1, ip, lsr #13
    f018:	00010bd4 	ldrdeq	r0, [r1], -r4
    f01c:	00010628 	andeq	r0, r1, r8, lsr #12
    f020:	0001062c 	andeq	r0, r1, ip, lsr #12
    f024:	00010630 	andeq	r0, r1, r0, lsr r6

0000f028 <_Z9Process_4v>:
_Z9Process_4v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:107

    close(f);
}

void Process_4()
{
    f028:	e92d4800 	push	{fp, lr}
    f02c:	e28db004 	add	fp, sp, #4
    f030:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:110
    volatile int i;

    uint32_t f = open("DEV:gpio/20", NFile_Open_Mode::Write_Only);
    f034:	e3a01001 	mov	r1, #1
    f038:	e59f00c0 	ldr	r0, [pc, #192]	; f100 <_Z9Process_4v+0xd8>
    f03c:	eb000091 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    f040:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:112

    disable_irq();
    f044:	ebfffecd 	bl	eb80 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:113
    sMonitor << "process 4 file descriptor = " << f << "\n";
    f048:	e59f10b4 	ldr	r1, [pc, #180]	; f104 <_Z9Process_4v+0xdc>
    f04c:	e59f00b4 	ldr	r0, [pc, #180]	; f108 <_Z9Process_4v+0xe0>
    f050:	ebffe8fd 	bl	944c <_ZN8CMonitorlsEPKc>
    f054:	e1a03000 	mov	r3, r0
    f058:	e51b1008 	ldr	r1, [fp, #-8]
    f05c:	e1a00003 	mov	r0, r3
    f060:	ebffe924 	bl	94f8 <_ZN8CMonitorlsEj>
    f064:	e1a03000 	mov	r3, r0
    f068:	e59f109c 	ldr	r1, [pc, #156]	; f10c <_Z9Process_4v+0xe4>
    f06c:	e1a00003 	mov	r0, r3
    f070:	ebffe8f5 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:114
    enable_irq();
    f074:	ebfffec3 	bl	eb88 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:118

    while (true)
    {
        write(f, "1", 1);
    f078:	e3a02001 	mov	r2, #1
    f07c:	e59f108c 	ldr	r1, [pc, #140]	; f110 <_Z9Process_4v+0xe8>
    f080:	e51b0008 	ldr	r0, [fp, #-8]
    f084:	eb0000a4 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:120

        for (i = 0; i < 0x1600; i++)
    f088:	e3a03000 	mov	r3, #0
    f08c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:120 (discriminator 3)
    f090:	e51b300c 	ldr	r3, [fp, #-12]
    f094:	e3530c16 	cmp	r3, #5632	; 0x1600
    f098:	b3a03001 	movlt	r3, #1
    f09c:	a3a03000 	movge	r3, #0
    f0a0:	e6ef3073 	uxtb	r3, r3
    f0a4:	e3530000 	cmp	r3, #0
    f0a8:	0a000003 	beq	f0bc <_Z9Process_4v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:120 (discriminator 2)
    f0ac:	e51b300c 	ldr	r3, [fp, #-12]
    f0b0:	e2833001 	add	r3, r3, #1
    f0b4:	e50b300c 	str	r3, [fp, #-12]
    f0b8:	eafffff4 	b	f090 <_Z9Process_4v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:123
            ;

        write(f, "0", 1);
    f0bc:	e3a02001 	mov	r2, #1
    f0c0:	e59f104c 	ldr	r1, [pc, #76]	; f114 <_Z9Process_4v+0xec>
    f0c4:	e51b0008 	ldr	r0, [fp, #-8]
    f0c8:	eb000093 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:125

        for (i = 0; i < 0x1600; i++)
    f0cc:	e3a03000 	mov	r3, #0
    f0d0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:125 (discriminator 3)
    f0d4:	e51b300c 	ldr	r3, [fp, #-12]
    f0d8:	e3530c16 	cmp	r3, #5632	; 0x1600
    f0dc:	b3a03001 	movlt	r3, #1
    f0e0:	a3a03000 	movge	r3, #0
    f0e4:	e6ef3073 	uxtb	r3, r3
    f0e8:	e3530000 	cmp	r3, #0
    f0ec:	0affffe1 	beq	f078 <_Z9Process_4v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:125 (discriminator 2)
    f0f0:	e51b300c 	ldr	r3, [fp, #-12]
    f0f4:	e2833001 	add	r3, r3, #1
    f0f8:	e50b300c 	str	r3, [fp, #-12]
    f0fc:	eafffff4 	b	f0d4 <_Z9Process_4v+0xac>
    f100:	000106cc 	andeq	r0, r1, ip, asr #13
    f104:	000106d8 	ldrdeq	r0, [r1], -r8
    f108:	00010bd4 	ldrdeq	r0, [r1], -r4
    f10c:	00010628 	andeq	r0, r1, r8, lsr #12
    f110:	0001062c 	andeq	r0, r1, ip, lsr #12
    f114:	00010630 	andeq	r0, r1, r0, lsr r6

0000f118 <_Z9Process_5v>:
_Z9Process_5v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:133

    close(f);
}

void Process_5()
{
    f118:	e92d4800 	push	{fp, lr}
    f11c:	e28db004 	add	fp, sp, #4
    f120:	e24dd010 	sub	sp, sp, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:136
    volatile int i;

    uint32_t f = open("DEV:segd", NFile_Open_Mode::Write_Only);
    f124:	e3a01001 	mov	r1, #1
    f128:	e59f00c0 	ldr	r0, [pc, #192]	; f1f0 <_Z9Process_5v+0xd8>
    f12c:	eb000055 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    f130:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:137
    write(f, "4", 1);
    f134:	e3a02001 	mov	r2, #1
    f138:	e59f10b4 	ldr	r1, [pc, #180]	; f1f4 <_Z9Process_5v+0xdc>
    f13c:	e51b0008 	ldr	r0, [fp, #-8]
    f140:	eb000075 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:139

    disable_irq();
    f144:	ebfffe8d 	bl	eb80 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:140
    sMonitor << "process 5 file descriptor = " << f << "\n";
    f148:	e59f10a8 	ldr	r1, [pc, #168]	; f1f8 <_Z9Process_5v+0xe0>
    f14c:	e59f00a8 	ldr	r0, [pc, #168]	; f1fc <_Z9Process_5v+0xe4>
    f150:	ebffe8bd 	bl	944c <_ZN8CMonitorlsEPKc>
    f154:	e1a03000 	mov	r3, r0
    f158:	e51b1008 	ldr	r1, [fp, #-8]
    f15c:	e1a00003 	mov	r0, r3
    f160:	ebffe8e4 	bl	94f8 <_ZN8CMonitorlsEj>
    f164:	e1a03000 	mov	r3, r0
    f168:	e59f1090 	ldr	r1, [pc, #144]	; f200 <_Z9Process_5v+0xe8>
    f16c:	e1a00003 	mov	r0, r3
    f170:	ebffe8b5 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:141
    enable_irq();
    f174:	ebfffe83 	bl	eb88 <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:143

    char message[] = "0";
    f178:	e3a03030 	mov	r3, #48	; 0x30
    f17c:	e14b31b0 	strh	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:147

    while (true)
    {
        if (message[0] == '9')
    f180:	e55b3010 	ldrb	r3, [fp, #-16]
    f184:	e3530039 	cmp	r3, #57	; 0x39
    f188:	1a000002 	bne	f198 <_Z9Process_5v+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:149
        {
            message[0] = '0';
    f18c:	e3a03030 	mov	r3, #48	; 0x30
    f190:	e54b3010 	strb	r3, [fp, #-16]
    f194:	ea000003 	b	f1a8 <_Z9Process_5v+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:153
        }
        else
        {
            ++message[0];
    f198:	e55b3010 	ldrb	r3, [fp, #-16]
    f19c:	e2833001 	add	r3, r3, #1
    f1a0:	e6ef3073 	uxtb	r3, r3
    f1a4:	e54b3010 	strb	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:156
        }

        write(f, message, 1);
    f1a8:	e24b3010 	sub	r3, fp, #16
    f1ac:	e3a02001 	mov	r2, #1
    f1b0:	e1a01003 	mov	r1, r3
    f1b4:	e51b0008 	ldr	r0, [fp, #-8]
    f1b8:	eb000057 	bl	f31c <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:158

        for (i = 0; i < 0x1600; i++)
    f1bc:	e3a03000 	mov	r3, #0
    f1c0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:158 (discriminator 3)
    f1c4:	e51b300c 	ldr	r3, [fp, #-12]
    f1c8:	e3530c16 	cmp	r3, #5632	; 0x1600
    f1cc:	b3a03001 	movlt	r3, #1
    f1d0:	a3a03000 	movge	r3, #0
    f1d4:	e6ef3073 	uxtb	r3, r3
    f1d8:	e3530000 	cmp	r3, #0
    f1dc:	0affffe7 	beq	f180 <_Z9Process_5v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:158 (discriminator 2)
    f1e0:	e51b300c 	ldr	r3, [fp, #-12]
    f1e4:	e2833001 	add	r3, r3, #1
    f1e8:	e50b300c 	str	r3, [fp, #-12]
    f1ec:	eafffff4 	b	f1c4 <_Z9Process_5v+0xac>
    f1f0:	000106f8 	strdeq	r0, [r1], -r8
    f1f4:	00010704 	andeq	r0, r1, r4, lsl #14
    f1f8:	00010708 	andeq	r0, r1, r8, lsl #14
    f1fc:	00010bd4 	ldrdeq	r0, [r1], -r4
    f200:	00010628 	andeq	r0, r1, r8, lsr #12

0000f204 <_Z9Process_6v>:
_Z9Process_6v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:166

    close(f);
}

void Process_6()
{
    f204:	e92d4800 	push	{fp, lr}
    f208:	e28db004 	add	fp, sp, #4
    f20c:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:167
    COLED_Display disp("DEV:oled");
    f210:	e24b300c 	sub	r3, fp, #12
    f214:	e59f1038 	ldr	r1, [pc, #56]	; f254 <_Z9Process_6v+0x50>
    f218:	e1a00003 	mov	r0, r3
    f21c:	eb00019f 	bl	f8a0 <_ZN13COLED_DisplayC1EPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:168
	disp.Clear(false);
    f220:	e24b300c 	sub	r3, fp, #12
    f224:	e3a01000 	mov	r1, #0
    f228:	e1a00003 	mov	r0, r3
    f22c:	eb0001d2 	bl	f97c <_ZN13COLED_Display5ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:169
	disp.Put_String(10, 10, "KIV-RTOS init...");
    f230:	e24b000c 	sub	r0, fp, #12
    f234:	e59f301c 	ldr	r3, [pc, #28]	; f258 <_Z9Process_6v+0x54>
    f238:	e3a0200a 	mov	r2, #10
    f23c:	e3a0100a 	mov	r1, #10
    f240:	eb000297 	bl	fca4 <_ZN13COLED_Display10Put_StringEttPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:170
	disp.Flip();
    f244:	e24b300c 	sub	r3, fp, #12
    f248:	e1a00003 	mov	r0, r3
    f24c:	eb00027e 	bl	fc4c <_ZN13COLED_Display4FlipEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:172 (discriminator 1)

    while (true)
    f250:	eafffffe 	b	f250 <_Z9Process_6v+0x4c>
    f254:	00010728 	andeq	r0, r1, r8, lsr #14
    f258:	00010734 	andeq	r0, r1, r4, lsr r7

0000f25c <_Z6getpidv>:
_Z6getpidv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:4
#include <stdfile.h>

uint32_t getpid()
{
    f25c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f260:	e28db000 	add	fp, sp, #0
    f264:	e24dd00c 	sub	sp, sp, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:7
    uint32_t pid;

    asm volatile("swi 0");
    f268:	ef000000 	svc	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:8
    asm volatile("mov %0, r0" : "=r"(pid));
    f26c:	e1a03000 	mov	r3, r0
    f270:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:10

    return pid;
    f274:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:11
}
    f278:	e1a00003 	mov	r0, r3
    f27c:	e28bd000 	add	sp, fp, #0
    f280:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f284:	e12fff1e 	bx	lr

0000f288 <_Z4openPKc15NFile_Open_Mode>:
_Z4openPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:14

uint32_t open(const char* filename, NFile_Open_Mode mode)
{
    f288:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f28c:	e28db000 	add	fp, sp, #0
    f290:	e24dd014 	sub	sp, sp, #20
    f294:	e50b0010 	str	r0, [fp, #-16]
    f298:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:17
    uint32_t file;

    asm volatile("mov r0, %0" : : "r"(filename));
    f29c:	e51b3010 	ldr	r3, [fp, #-16]
    f2a0:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:18
    asm volatile("mov r1, %0" : : "r"(mode));
    f2a4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f2a8:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:19
    asm volatile("swi 64");
    f2ac:	ef000040 	svc	0x00000040
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:20
    asm volatile("mov %0, r0" : "=r"(file));
    f2b0:	e1a03000 	mov	r3, r0
    f2b4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:22

    return file;
    f2b8:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:23
}
    f2bc:	e1a00003 	mov	r0, r3
    f2c0:	e28bd000 	add	sp, fp, #0
    f2c4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f2c8:	e12fff1e 	bx	lr

0000f2cc <_Z4readjPcj>:
_Z4readjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:26

uint32_t read(uint32_t file, char* const buffer, uint32_t size)
{
    f2cc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f2d0:	e28db000 	add	fp, sp, #0
    f2d4:	e24dd01c 	sub	sp, sp, #28
    f2d8:	e50b0010 	str	r0, [fp, #-16]
    f2dc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f2e0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:29
    uint32_t rdnum;

    asm volatile("mov r0, %0" : : "r"(file));
    f2e4:	e51b3010 	ldr	r3, [fp, #-16]
    f2e8:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:30
    asm volatile("mov r1, %0" : : "r"(buffer));
    f2ec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f2f0:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:31
    asm volatile("mov r2, %0" : : "r"(size));
    f2f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f2f8:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:32
    asm volatile("swi 65");
    f2fc:	ef000041 	svc	0x00000041
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:33
    asm volatile("mov %0, r0" : "=r"(rdnum));
    f300:	e1a03000 	mov	r3, r0
    f304:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:35

    return rdnum;
    f308:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:36
}
    f30c:	e1a00003 	mov	r0, r3
    f310:	e28bd000 	add	sp, fp, #0
    f314:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f318:	e12fff1e 	bx	lr

0000f31c <_Z5writejPKcj>:
_Z5writejPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:39

uint32_t write(uint32_t file, const char* buffer, uint32_t size)
{
    f31c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f320:	e28db000 	add	fp, sp, #0
    f324:	e24dd01c 	sub	sp, sp, #28
    f328:	e50b0010 	str	r0, [fp, #-16]
    f32c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f330:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:42
    uint32_t wrnum;

    asm volatile("mov r0, %0" : : "r"(file));
    f334:	e51b3010 	ldr	r3, [fp, #-16]
    f338:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:43
    asm volatile("mov r1, %0" : : "r"(buffer));
    f33c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f340:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:44
    asm volatile("mov r2, %0" : : "r"(size));
    f344:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f348:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:45
    asm volatile("swi 66");
    f34c:	ef000042 	svc	0x00000042
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:46
    asm volatile("mov %0, r0" : "=r"(wrnum));
    f350:	e1a03000 	mov	r3, r0
    f354:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:48

    return wrnum;
    f358:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:49
}
    f35c:	e1a00003 	mov	r0, r3
    f360:	e28bd000 	add	sp, fp, #0
    f364:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f368:	e12fff1e 	bx	lr

0000f36c <_Z5closej>:
_Z5closej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:52

void close(uint32_t file)
{
    f36c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f370:	e28db000 	add	fp, sp, #0
    f374:	e24dd00c 	sub	sp, sp, #12
    f378:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:53
    asm volatile("mov r0, %0" : : "r"(file));
    f37c:	e51b3008 	ldr	r3, [fp, #-8]
    f380:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:54
    asm volatile("swi 67");
    f384:	ef000043 	svc	0x00000043
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:55
}
    f388:	e320f000 	nop	{0}
    f38c:	e28bd000 	add	sp, fp, #0
    f390:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f394:	e12fff1e 	bx	lr

0000f398 <_Z5ioctlj16NIOCtl_OperationPv>:
_Z5ioctlj16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:58

uint32_t ioctl(uint32_t file, NIOCtl_Operation operation, void* param)
{
    f398:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f39c:	e28db000 	add	fp, sp, #0
    f3a0:	e24dd01c 	sub	sp, sp, #28
    f3a4:	e50b0010 	str	r0, [fp, #-16]
    f3a8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f3ac:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:61
    uint32_t retcode;

    asm volatile("mov r0, %0" : : "r"(file));
    f3b0:	e51b3010 	ldr	r3, [fp, #-16]
    f3b4:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:62
    asm volatile("mov r1, %0" : : "r"(operation));
    f3b8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f3bc:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:63
    asm volatile("mov r2, %0" : : "r"(param));
    f3c0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f3c4:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:64
    asm volatile("swi 68");
    f3c8:	ef000044 	svc	0x00000044
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:65
    asm volatile("mov %0, r0" : "=r"(retcode));
    f3cc:	e1a03000 	mov	r3, r0
    f3d0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:67

    return retcode;
    f3d4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:68
}
    f3d8:	e1a00003 	mov	r0, r3
    f3dc:	e28bd000 	add	sp, fp, #0
    f3e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f3e4:	e12fff1e 	bx	lr

0000f3e8 <_Z4itoajPcj>:
_Z4itoajPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:9
{
    const char CharConvArr[] = "0123456789ABCDEF";
}

void itoa(unsigned int input, char* output, unsigned int base)
{
    f3e8:	e92d4800 	push	{fp, lr}
    f3ec:	e28db004 	add	fp, sp, #4
    f3f0:	e24dd020 	sub	sp, sp, #32
    f3f4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    f3f8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    f3fc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:10
    int i = 0;
    f400:	e3a03000 	mov	r3, #0
    f404:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:12

    while (input > 0)
    f408:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f40c:	e3530000 	cmp	r3, #0
    f410:	0a000014 	beq	f468 <_Z4itoajPcj+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:14
    {
        output[i] = CharConvArr[input % base];
    f414:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f418:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    f41c:	e1a00003 	mov	r0, r3
    f420:	eb0002c7 	bl	ff44 <__aeabi_uidivmod>
    f424:	e1a03001 	mov	r3, r1
    f428:	e1a01003 	mov	r1, r3
    f42c:	e51b3008 	ldr	r3, [fp, #-8]
    f430:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f434:	e0823003 	add	r3, r2, r3
    f438:	e59f2118 	ldr	r2, [pc, #280]	; f558 <_Z4itoajPcj+0x170>
    f43c:	e7d22001 	ldrb	r2, [r2, r1]
    f440:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:15
        input /= base;
    f444:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    f448:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    f44c:	eb000241 	bl	fd58 <__udivsi3>
    f450:	e1a03000 	mov	r3, r0
    f454:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:16
        i++;
    f458:	e51b3008 	ldr	r3, [fp, #-8]
    f45c:	e2833001 	add	r3, r3, #1
    f460:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:12
    while (input > 0)
    f464:	eaffffe7 	b	f408 <_Z4itoajPcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:19
    }

    if (i == 0)
    f468:	e51b3008 	ldr	r3, [fp, #-8]
    f46c:	e3530000 	cmp	r3, #0
    f470:	1a000007 	bne	f494 <_Z4itoajPcj+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:21
    {
        output[i] = CharConvArr[0];
    f474:	e51b3008 	ldr	r3, [fp, #-8]
    f478:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f47c:	e0823003 	add	r3, r2, r3
    f480:	e3a02030 	mov	r2, #48	; 0x30
    f484:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:22
        i++;
    f488:	e51b3008 	ldr	r3, [fp, #-8]
    f48c:	e2833001 	add	r3, r3, #1
    f490:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:25
    }

    output[i] = '\0';
    f494:	e51b3008 	ldr	r3, [fp, #-8]
    f498:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f49c:	e0823003 	add	r3, r2, r3
    f4a0:	e3a02000 	mov	r2, #0
    f4a4:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:26
    i--;
    f4a8:	e51b3008 	ldr	r3, [fp, #-8]
    f4ac:	e2433001 	sub	r3, r3, #1
    f4b0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28

    for (int j = 0; j <= i / 2; j++)
    f4b4:	e3a03000 	mov	r3, #0
    f4b8:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28 (discriminator 3)
    f4bc:	e51b3008 	ldr	r3, [fp, #-8]
    f4c0:	e1a02fa3 	lsr	r2, r3, #31
    f4c4:	e0823003 	add	r3, r2, r3
    f4c8:	e1a030c3 	asr	r3, r3, #1
    f4cc:	e1a02003 	mov	r2, r3
    f4d0:	e51b300c 	ldr	r3, [fp, #-12]
    f4d4:	e1530002 	cmp	r3, r2
    f4d8:	ca00001b 	bgt	f54c <_Z4itoajPcj+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:30 (discriminator 2)
    {
        char c = output[i - j];
    f4dc:	e51b2008 	ldr	r2, [fp, #-8]
    f4e0:	e51b300c 	ldr	r3, [fp, #-12]
    f4e4:	e0423003 	sub	r3, r2, r3
    f4e8:	e1a02003 	mov	r2, r3
    f4ec:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4f0:	e0833002 	add	r3, r3, r2
    f4f4:	e5d33000 	ldrb	r3, [r3]
    f4f8:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:31 (discriminator 2)
        output[i - j] = output[j];
    f4fc:	e51b300c 	ldr	r3, [fp, #-12]
    f500:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f504:	e0822003 	add	r2, r2, r3
    f508:	e51b1008 	ldr	r1, [fp, #-8]
    f50c:	e51b300c 	ldr	r3, [fp, #-12]
    f510:	e0413003 	sub	r3, r1, r3
    f514:	e1a01003 	mov	r1, r3
    f518:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f51c:	e0833001 	add	r3, r3, r1
    f520:	e5d22000 	ldrb	r2, [r2]
    f524:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:32 (discriminator 2)
        output[j] = c;
    f528:	e51b300c 	ldr	r3, [fp, #-12]
    f52c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f530:	e0823003 	add	r3, r2, r3
    f534:	e55b200d 	ldrb	r2, [fp, #-13]
    f538:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28 (discriminator 2)
    for (int j = 0; j <= i / 2; j++)
    f53c:	e51b300c 	ldr	r3, [fp, #-12]
    f540:	e2833001 	add	r3, r3, #1
    f544:	e50b300c 	str	r3, [fp, #-12]
    f548:	eaffffdb 	b	f4bc <_Z4itoajPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:34
    }
}
    f54c:	e320f000 	nop	{0}
    f550:	e24bd004 	sub	sp, fp, #4
    f554:	e8bd8800 	pop	{fp, pc}
    f558:	00010758 	andeq	r0, r1, r8, asr r7

0000f55c <_Z4atoiPKc>:
_Z4atoiPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:37

int atoi(const char* input)
{
    f55c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f560:	e28db000 	add	fp, sp, #0
    f564:	e24dd014 	sub	sp, sp, #20
    f568:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:38
    int output = 0;
    f56c:	e3a03000 	mov	r3, #0
    f570:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:40

    while (*input != '\0')
    f574:	e51b3010 	ldr	r3, [fp, #-16]
    f578:	e5d33000 	ldrb	r3, [r3]
    f57c:	e3530000 	cmp	r3, #0
    f580:	0a000017 	beq	f5e4 <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:42
    {
        output *= 10;
    f584:	e51b2008 	ldr	r2, [fp, #-8]
    f588:	e1a03002 	mov	r3, r2
    f58c:	e1a03103 	lsl	r3, r3, #2
    f590:	e0833002 	add	r3, r3, r2
    f594:	e1a03083 	lsl	r3, r3, #1
    f598:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:43
        if (*input > '9' || *input < '0')
    f59c:	e51b3010 	ldr	r3, [fp, #-16]
    f5a0:	e5d33000 	ldrb	r3, [r3]
    f5a4:	e3530039 	cmp	r3, #57	; 0x39
    f5a8:	8a00000d 	bhi	f5e4 <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:43 (discriminator 1)
    f5ac:	e51b3010 	ldr	r3, [fp, #-16]
    f5b0:	e5d33000 	ldrb	r3, [r3]
    f5b4:	e353002f 	cmp	r3, #47	; 0x2f
    f5b8:	9a000009 	bls	f5e4 <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:46
            break;

        output += *input - '0';
    f5bc:	e51b3010 	ldr	r3, [fp, #-16]
    f5c0:	e5d33000 	ldrb	r3, [r3]
    f5c4:	e2433030 	sub	r3, r3, #48	; 0x30
    f5c8:	e51b2008 	ldr	r2, [fp, #-8]
    f5cc:	e0823003 	add	r3, r2, r3
    f5d0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:48

        input++;
    f5d4:	e51b3010 	ldr	r3, [fp, #-16]
    f5d8:	e2833001 	add	r3, r3, #1
    f5dc:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:40
    while (*input != '\0')
    f5e0:	eaffffe3 	b	f574 <_Z4atoiPKc+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:51
    }

    return output;
    f5e4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:52
}
    f5e8:	e1a00003 	mov	r0, r3
    f5ec:	e28bd000 	add	sp, fp, #0
    f5f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f5f4:	e12fff1e 	bx	lr

0000f5f8 <_Z7strncpyPcPKci>:
_Z7strncpyPcPKci():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:55

char* strncpy(char* dest, const char* src, int num)
{
    f5f8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f5fc:	e28db000 	add	fp, sp, #0
    f600:	e24dd01c 	sub	sp, sp, #28
    f604:	e50b0010 	str	r0, [fp, #-16]
    f608:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f60c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58
    int i;

    for (i = 0; i < num && src[i] != '\0'; i++)
    f610:	e3a03000 	mov	r3, #0
    f614:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 4)
    f618:	e51b2008 	ldr	r2, [fp, #-8]
    f61c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f620:	e1520003 	cmp	r2, r3
    f624:	aa000011 	bge	f670 <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 2)
    f628:	e51b3008 	ldr	r3, [fp, #-8]
    f62c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    f630:	e0823003 	add	r3, r2, r3
    f634:	e5d33000 	ldrb	r3, [r3]
    f638:	e3530000 	cmp	r3, #0
    f63c:	0a00000b 	beq	f670 <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:59 (discriminator 3)
        dest[i] = src[i];
    f640:	e51b3008 	ldr	r3, [fp, #-8]
    f644:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    f648:	e0822003 	add	r2, r2, r3
    f64c:	e51b3008 	ldr	r3, [fp, #-8]
    f650:	e51b1010 	ldr	r1, [fp, #-16]
    f654:	e0813003 	add	r3, r1, r3
    f658:	e5d22000 	ldrb	r2, [r2]
    f65c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 3)
    for (i = 0; i < num && src[i] != '\0'; i++)
    f660:	e51b3008 	ldr	r3, [fp, #-8]
    f664:	e2833001 	add	r3, r3, #1
    f668:	e50b3008 	str	r3, [fp, #-8]
    f66c:	eaffffe9 	b	f618 <_Z7strncpyPcPKci+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:60 (discriminator 2)
    for (; i < num; i++)
    f670:	e51b2008 	ldr	r2, [fp, #-8]
    f674:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f678:	e1520003 	cmp	r2, r3
    f67c:	aa000008 	bge	f6a4 <_Z7strncpyPcPKci+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:61 (discriminator 1)
        dest[i] = '\0';
    f680:	e51b3008 	ldr	r3, [fp, #-8]
    f684:	e51b2010 	ldr	r2, [fp, #-16]
    f688:	e0823003 	add	r3, r2, r3
    f68c:	e3a02000 	mov	r2, #0
    f690:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:60 (discriminator 1)
    for (; i < num; i++)
    f694:	e51b3008 	ldr	r3, [fp, #-8]
    f698:	e2833001 	add	r3, r3, #1
    f69c:	e50b3008 	str	r3, [fp, #-8]
    f6a0:	eafffff2 	b	f670 <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:63

    return dest;
    f6a4:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:64
}
    f6a8:	e1a00003 	mov	r0, r3
    f6ac:	e28bd000 	add	sp, fp, #0
    f6b0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f6b4:	e12fff1e 	bx	lr

0000f6b8 <_Z7strncmpPKcS0_i>:
_Z7strncmpPKcS0_i():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:67

int strncmp(const char* s1, const char* s2, int num)
{
    f6b8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f6bc:	e28db000 	add	fp, sp, #0
    f6c0:	e24dd01c 	sub	sp, sp, #28
    f6c4:	e50b0010 	str	r0, [fp, #-16]
    f6c8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f6cc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:69
    unsigned char u1, u2;
    while (num-- > 0)
    f6d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f6d4:	e2432001 	sub	r2, r3, #1
    f6d8:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    f6dc:	e3530000 	cmp	r3, #0
    f6e0:	c3a03001 	movgt	r3, #1
    f6e4:	d3a03000 	movle	r3, #0
    f6e8:	e6ef3073 	uxtb	r3, r3
    f6ec:	e3530000 	cmp	r3, #0
    f6f0:	0a000016 	beq	f750 <_Z7strncmpPKcS0_i+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:71
    {
        u1 = (unsigned char)*s1++;
    f6f4:	e51b3010 	ldr	r3, [fp, #-16]
    f6f8:	e2832001 	add	r2, r3, #1
    f6fc:	e50b2010 	str	r2, [fp, #-16]
    f700:	e5d33000 	ldrb	r3, [r3]
    f704:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:72
        u2 = (unsigned char)*s2++;
    f708:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f70c:	e2832001 	add	r2, r3, #1
    f710:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    f714:	e5d33000 	ldrb	r3, [r3]
    f718:	e54b3006 	strb	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:73
        if (u1 != u2)
    f71c:	e55b2005 	ldrb	r2, [fp, #-5]
    f720:	e55b3006 	ldrb	r3, [fp, #-6]
    f724:	e1520003 	cmp	r2, r3
    f728:	0a000003 	beq	f73c <_Z7strncmpPKcS0_i+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:74
            return u1 - u2;
    f72c:	e55b2005 	ldrb	r2, [fp, #-5]
    f730:	e55b3006 	ldrb	r3, [fp, #-6]
    f734:	e0423003 	sub	r3, r2, r3
    f738:	ea000005 	b	f754 <_Z7strncmpPKcS0_i+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:75
        if (u1 == '\0')
    f73c:	e55b3005 	ldrb	r3, [fp, #-5]
    f740:	e3530000 	cmp	r3, #0
    f744:	1affffe1 	bne	f6d0 <_Z7strncmpPKcS0_i+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:76
            return 0;
    f748:	e3a03000 	mov	r3, #0
    f74c:	ea000000 	b	f754 <_Z7strncmpPKcS0_i+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:79
    }

    return 0;
    f750:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:80
}
    f754:	e1a00003 	mov	r0, r3
    f758:	e28bd000 	add	sp, fp, #0
    f75c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f760:	e12fff1e 	bx	lr

0000f764 <_Z6strlenPKc>:
_Z6strlenPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:83

int strlen(const char* s)
{
    f764:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f768:	e28db000 	add	fp, sp, #0
    f76c:	e24dd014 	sub	sp, sp, #20
    f770:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:84
    int i = 0;
    f774:	e3a03000 	mov	r3, #0
    f778:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:86

    while (s[i] != '\0')
    f77c:	e51b3008 	ldr	r3, [fp, #-8]
    f780:	e51b2010 	ldr	r2, [fp, #-16]
    f784:	e0823003 	add	r3, r2, r3
    f788:	e5d33000 	ldrb	r3, [r3]
    f78c:	e3530000 	cmp	r3, #0
    f790:	0a000003 	beq	f7a4 <_Z6strlenPKc+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:87
        i++;
    f794:	e51b3008 	ldr	r3, [fp, #-8]
    f798:	e2833001 	add	r3, r3, #1
    f79c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:86
    while (s[i] != '\0')
    f7a0:	eafffff5 	b	f77c <_Z6strlenPKc+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:89

    return i;
    f7a4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:90
}
    f7a8:	e1a00003 	mov	r0, r3
    f7ac:	e28bd000 	add	sp, fp, #0
    f7b0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f7b4:	e12fff1e 	bx	lr

0000f7b8 <_Z5bzeroPvi>:
_Z5bzeroPvi():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:93

void bzero(void* memory, int length)
{
    f7b8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f7bc:	e28db000 	add	fp, sp, #0
    f7c0:	e24dd014 	sub	sp, sp, #20
    f7c4:	e50b0010 	str	r0, [fp, #-16]
    f7c8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:94
    char* mem = reinterpret_cast<char*>(memory);
    f7cc:	e51b3010 	ldr	r3, [fp, #-16]
    f7d0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96

    for (int i = 0; i < length; i++)
    f7d4:	e3a03000 	mov	r3, #0
    f7d8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96 (discriminator 3)
    f7dc:	e51b2008 	ldr	r2, [fp, #-8]
    f7e0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f7e4:	e1520003 	cmp	r2, r3
    f7e8:	aa000008 	bge	f810 <_Z5bzeroPvi+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:97 (discriminator 2)
        mem[i] = 0;
    f7ec:	e51b3008 	ldr	r3, [fp, #-8]
    f7f0:	e51b200c 	ldr	r2, [fp, #-12]
    f7f4:	e0823003 	add	r3, r2, r3
    f7f8:	e3a02000 	mov	r2, #0
    f7fc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96 (discriminator 2)
    for (int i = 0; i < length; i++)
    f800:	e51b3008 	ldr	r3, [fp, #-8]
    f804:	e2833001 	add	r3, r3, #1
    f808:	e50b3008 	str	r3, [fp, #-8]
    f80c:	eafffff2 	b	f7dc <_Z5bzeroPvi+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:98
}
    f810:	e320f000 	nop	{0}
    f814:	e28bd000 	add	sp, fp, #0
    f818:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f81c:	e12fff1e 	bx	lr

0000f820 <_Z6memcpyPKvPvi>:
_Z6memcpyPKvPvi():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:101

void memcpy(const void* src, void* dst, int num)
{
    f820:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f824:	e28db000 	add	fp, sp, #0
    f828:	e24dd024 	sub	sp, sp, #36	; 0x24
    f82c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    f830:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    f834:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:102
    const char* memsrc = reinterpret_cast<const char*>(src);
    f838:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f83c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:103
    char* memdst = reinterpret_cast<char*>(dst);
    f840:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f844:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105

    for (int i = 0; i < num; i++)
    f848:	e3a03000 	mov	r3, #0
    f84c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105 (discriminator 3)
    f850:	e51b2008 	ldr	r2, [fp, #-8]
    f854:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    f858:	e1520003 	cmp	r2, r3
    f85c:	aa00000b 	bge	f890 <_Z6memcpyPKvPvi+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:106 (discriminator 2)
        memdst[i] = memsrc[i];
    f860:	e51b3008 	ldr	r3, [fp, #-8]
    f864:	e51b200c 	ldr	r2, [fp, #-12]
    f868:	e0822003 	add	r2, r2, r3
    f86c:	e51b3008 	ldr	r3, [fp, #-8]
    f870:	e51b1010 	ldr	r1, [fp, #-16]
    f874:	e0813003 	add	r3, r1, r3
    f878:	e5d22000 	ldrb	r2, [r2]
    f87c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105 (discriminator 2)
    for (int i = 0; i < num; i++)
    f880:	e51b3008 	ldr	r3, [fp, #-8]
    f884:	e2833001 	add	r3, r3, #1
    f888:	e50b3008 	str	r3, [fp, #-8]
    f88c:	eaffffef 	b	f850 <_Z6memcpyPKvPvi+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:107
}
    f890:	e320f000 	nop	{0}
    f894:	e28bd000 	add	sp, fp, #0
    f898:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f89c:	e12fff1e 	bx	lr

0000f8a0 <_ZN13COLED_DisplayC1EPKc>:
_ZN13COLED_DisplayC2EPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:11
#include <drivers/bridges/display_protocol.h>

// tento soubor includujeme jen odtud
#include "oled_font.h"

COLED_Display::COLED_Display(const char* path)
    f8a0:	e92d4800 	push	{fp, lr}
    f8a4:	e28db004 	add	fp, sp, #4
    f8a8:	e24dd008 	sub	sp, sp, #8
    f8ac:	e50b0008 	str	r0, [fp, #-8]
    f8b0:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:12
    : mHandle{ open(path, NFile_Open_Mode::Write_Only) }, mOpened(false)
    f8b4:	e3a01001 	mov	r1, #1
    f8b8:	e51b000c 	ldr	r0, [fp, #-12]
    f8bc:	ebfffe71 	bl	f288 <_Z4openPKc15NFile_Open_Mode>
    f8c0:	e1a02000 	mov	r2, r0
    f8c4:	e51b3008 	ldr	r3, [fp, #-8]
    f8c8:	e5832000 	str	r2, [r3]
    f8cc:	e51b3008 	ldr	r3, [fp, #-8]
    f8d0:	e3a02000 	mov	r2, #0
    f8d4:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:15
{
    // nastavime priznak dle toho, co vrati open
    mOpened = (mHandle != static_cast<uint32_t>(-1));
    f8d8:	e51b3008 	ldr	r3, [fp, #-8]
    f8dc:	e5933000 	ldr	r3, [r3]
    f8e0:	e3730001 	cmn	r3, #1
    f8e4:	13a03001 	movne	r3, #1
    f8e8:	03a03000 	moveq	r3, #0
    f8ec:	e6ef2073 	uxtb	r2, r3
    f8f0:	e51b3008 	ldr	r3, [fp, #-8]
    f8f4:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:16
}
    f8f8:	e51b3008 	ldr	r3, [fp, #-8]
    f8fc:	e1a00003 	mov	r0, r3
    f900:	e24bd004 	sub	sp, fp, #4
    f904:	e8bd8800 	pop	{fp, pc}

0000f908 <_ZN13COLED_DisplayD1Ev>:
_ZN13COLED_DisplayD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:18

COLED_Display::~COLED_Display()
    f908:	e92d4800 	push	{fp, lr}
    f90c:	e28db004 	add	fp, sp, #4
    f910:	e24dd008 	sub	sp, sp, #8
    f914:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:21
{
    // pokud byl displej otevreny, zavreme
    if (mOpened)
    f918:	e51b3008 	ldr	r3, [fp, #-8]
    f91c:	e5d33004 	ldrb	r3, [r3, #4]
    f920:	e3530000 	cmp	r3, #0
    f924:	0a000006 	beq	f944 <_ZN13COLED_DisplayD1Ev+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:23
    {
        mOpened = false;
    f928:	e51b3008 	ldr	r3, [fp, #-8]
    f92c:	e3a02000 	mov	r2, #0
    f930:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:24
        close(mHandle);
    f934:	e51b3008 	ldr	r3, [fp, #-8]
    f938:	e5933000 	ldr	r3, [r3]
    f93c:	e1a00003 	mov	r0, r3
    f940:	ebfffe89 	bl	f36c <_Z5closej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:26
    }
}
    f944:	e51b3008 	ldr	r3, [fp, #-8]
    f948:	e1a00003 	mov	r0, r3
    f94c:	e24bd004 	sub	sp, fp, #4
    f950:	e8bd8800 	pop	{fp, pc}

0000f954 <_ZNK13COLED_Display9Is_OpenedEv>:
_ZNK13COLED_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:29

bool COLED_Display::Is_Opened() const
{
    f954:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f958:	e28db000 	add	fp, sp, #0
    f95c:	e24dd00c 	sub	sp, sp, #12
    f960:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:30
    return mOpened;
    f964:	e51b3008 	ldr	r3, [fp, #-8]
    f968:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:31
}
    f96c:	e1a00003 	mov	r0, r3
    f970:	e28bd000 	add	sp, fp, #0
    f974:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f978:	e12fff1e 	bx	lr

0000f97c <_ZN13COLED_Display5ClearEb>:
_ZN13COLED_Display5ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:34

void COLED_Display::Clear(bool clearSet)
{
    f97c:	e92d4800 	push	{fp, lr}
    f980:	e28db004 	add	fp, sp, #4
    f984:	e24dd010 	sub	sp, sp, #16
    f988:	e50b0010 	str	r0, [fp, #-16]
    f98c:	e1a03001 	mov	r3, r1
    f990:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:35
    if (!mOpened)
    f994:	e51b3010 	ldr	r3, [fp, #-16]
    f998:	e5d33004 	ldrb	r3, [r3, #4]
    f99c:	e2233001 	eor	r3, r3, #1
    f9a0:	e6ef3073 	uxtb	r3, r3
    f9a4:	e3530000 	cmp	r3, #0
    f9a8:	1a00000f 	bne	f9ec <_ZN13COLED_Display5ClearEb+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:39
        return;

    TDisplay_Clear_Packet pkt;
	pkt.header.cmd = NDisplay_Command::Clear;
    f9ac:	e3a03002 	mov	r3, #2
    f9b0:	e54b3008 	strb	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:40
	pkt.clearSet = clearSet ? 1 : 0;
    f9b4:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    f9b8:	e3530000 	cmp	r3, #0
    f9bc:	0a000001 	beq	f9c8 <_ZN13COLED_Display5ClearEb+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:40 (discriminator 1)
    f9c0:	e3a03001 	mov	r3, #1
    f9c4:	ea000000 	b	f9cc <_ZN13COLED_Display5ClearEb+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:40 (discriminator 2)
    f9c8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:40 (discriminator 4)
    f9cc:	e54b3007 	strb	r3, [fp, #-7]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:41 (discriminator 4)
	write(mHandle, reinterpret_cast<char*>(&pkt), sizeof(pkt));
    f9d0:	e51b3010 	ldr	r3, [fp, #-16]
    f9d4:	e5933000 	ldr	r3, [r3]
    f9d8:	e24b1008 	sub	r1, fp, #8
    f9dc:	e3a02002 	mov	r2, #2
    f9e0:	e1a00003 	mov	r0, r3
    f9e4:	ebfffe4c 	bl	f31c <_Z5writejPKcj>
    f9e8:	ea000000 	b	f9f0 <_ZN13COLED_Display5ClearEb+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:36
        return;
    f9ec:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:42
}
    f9f0:	e24bd004 	sub	sp, fp, #4
    f9f4:	e8bd8800 	pop	{fp, pc}

0000f9f8 <_ZN13COLED_Display9Set_PixelEttb>:
_ZN13COLED_Display9Set_PixelEttb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:45

void COLED_Display::Set_Pixel(uint16_t x, uint16_t y, bool set)
{
    f9f8:	e92d4800 	push	{fp, lr}
    f9fc:	e28db004 	add	fp, sp, #4
    fa00:	e24dd018 	sub	sp, sp, #24
    fa04:	e50b0010 	str	r0, [fp, #-16]
    fa08:	e1a00001 	mov	r0, r1
    fa0c:	e1a01002 	mov	r1, r2
    fa10:	e1a02003 	mov	r2, r3
    fa14:	e1a03000 	mov	r3, r0
    fa18:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
    fa1c:	e1a03001 	mov	r3, r1
    fa20:	e14b31b4 	strh	r3, [fp, #-20]	; 0xffffffec
    fa24:	e1a03002 	mov	r3, r2
    fa28:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:46
    if (!mOpened)
    fa2c:	e51b3010 	ldr	r3, [fp, #-16]
    fa30:	e5d33004 	ldrb	r3, [r3, #4]
    fa34:	e2233001 	eor	r3, r3, #1
    fa38:	e6ef3073 	uxtb	r3, r3
    fa3c:	e3530000 	cmp	r3, #0
    fa40:	1a000024 	bne	fad8 <_ZN13COLED_Display9Set_PixelEttb+0xe0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:51
        return;

    // nehospodarny zpusob, jak nastavit pixely, ale pro ted staci
    TDisplay_Draw_Pixel_Array_Packet pkt;
    pkt.header.cmd = NDisplay_Command::Draw_Pixel_Array;
    fa44:	e3a03003 	mov	r3, #3
    fa48:	e54b300c 	strb	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:52
    pkt.count = 1;
    fa4c:	e3a03000 	mov	r3, #0
    fa50:	e3833001 	orr	r3, r3, #1
    fa54:	e54b300b 	strb	r3, [fp, #-11]
    fa58:	e3a03000 	mov	r3, #0
    fa5c:	e54b300a 	strb	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:53
    pkt.first.x = x;
    fa60:	e55b3012 	ldrb	r3, [fp, #-18]	; 0xffffffee
    fa64:	e3a02000 	mov	r2, #0
    fa68:	e1823003 	orr	r3, r2, r3
    fa6c:	e54b3009 	strb	r3, [fp, #-9]
    fa70:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    fa74:	e3a02000 	mov	r2, #0
    fa78:	e1823003 	orr	r3, r2, r3
    fa7c:	e54b3008 	strb	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:54
    pkt.first.y = y;
    fa80:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    fa84:	e3a02000 	mov	r2, #0
    fa88:	e1823003 	orr	r3, r2, r3
    fa8c:	e54b3007 	strb	r3, [fp, #-7]
    fa90:	e55b3013 	ldrb	r3, [fp, #-19]	; 0xffffffed
    fa94:	e3a02000 	mov	r2, #0
    fa98:	e1823003 	orr	r3, r2, r3
    fa9c:	e54b3006 	strb	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:55
    pkt.first.set = set ? 1 : 0;
    faa0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    faa4:	e3530000 	cmp	r3, #0
    faa8:	0a000001 	beq	fab4 <_ZN13COLED_Display9Set_PixelEttb+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:55 (discriminator 1)
    faac:	e3a03001 	mov	r3, #1
    fab0:	ea000000 	b	fab8 <_ZN13COLED_Display9Set_PixelEttb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:55 (discriminator 2)
    fab4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:55 (discriminator 4)
    fab8:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:56 (discriminator 4)
    write(mHandle, reinterpret_cast<char*>(&pkt), sizeof(pkt));
    fabc:	e51b3010 	ldr	r3, [fp, #-16]
    fac0:	e5933000 	ldr	r3, [r3]
    fac4:	e24b100c 	sub	r1, fp, #12
    fac8:	e3a02008 	mov	r2, #8
    facc:	e1a00003 	mov	r0, r3
    fad0:	ebfffe11 	bl	f31c <_Z5writejPKcj>
    fad4:	ea000000 	b	fadc <_ZN13COLED_Display9Set_PixelEttb+0xe4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:47
        return;
    fad8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:57
}
    fadc:	e24bd004 	sub	sp, fp, #4
    fae0:	e8bd8800 	pop	{fp, pc}

0000fae4 <_ZN13COLED_Display8Put_CharEttc>:
_ZN13COLED_Display8Put_CharEttc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:60

void COLED_Display::Put_Char(uint16_t x, uint16_t y, char c)
{
    fae4:	e92d4800 	push	{fp, lr}
    fae8:	e28db004 	add	fp, sp, #4
    faec:	e24dd028 	sub	sp, sp, #40	; 0x28
    faf0:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    faf4:	e1a00001 	mov	r0, r1
    faf8:	e1a01002 	mov	r1, r2
    fafc:	e1a02003 	mov	r2, r3
    fb00:	e1a03000 	mov	r3, r0
    fb04:	e14b32b2 	strh	r3, [fp, #-34]	; 0xffffffde
    fb08:	e1a03001 	mov	r3, r1
    fb0c:	e14b32b4 	strh	r3, [fp, #-36]	; 0xffffffdc
    fb10:	e1a03002 	mov	r3, r2
    fb14:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:61
    if (!mOpened)
    fb18:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    fb1c:	e5d33004 	ldrb	r3, [r3, #4]
    fb20:	e2233001 	eor	r3, r3, #1
    fb24:	e6ef3073 	uxtb	r3, r3
    fb28:	e3530000 	cmp	r3, #0
    fb2c:	1a000040 	bne	fc34 <_ZN13COLED_Display8Put_CharEttc+0x150>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:65
        return;

    // umime jen nektere znaky
    if (c < OLED_Font::Char_Begin || c >= OLED_Font::Char_End)
    fb30:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    fb34:	e353001f 	cmp	r3, #31
    fb38:	9a00003f 	bls	fc3c <_ZN13COLED_Display8Put_CharEttc+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:65 (discriminator 1)
    fb3c:	e15b32d5 	ldrsb	r3, [fp, #-37]	; 0xffffffdb
    fb40:	e3530000 	cmp	r3, #0
    fb44:	ba00003c 	blt	fc3c <_ZN13COLED_Display8Put_CharEttc+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:70
        return;

    char buf[sizeof(TDisplay_Pixels_To_Rect) + OLED_Font::Char_Width];

    TDisplay_Pixels_To_Rect* ptr = reinterpret_cast<TDisplay_Pixels_To_Rect*>(buf);
    fb48:	e24b301c 	sub	r3, fp, #28
    fb4c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:71
    ptr->header.cmd = NDisplay_Command::Draw_Pixel_Array_To_Rect;
    fb50:	e51b3008 	ldr	r3, [fp, #-8]
    fb54:	e3a02004 	mov	r2, #4
    fb58:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:72
    ptr->w = OLED_Font::Char_Width;
    fb5c:	e51b3008 	ldr	r3, [fp, #-8]
    fb60:	e3a02000 	mov	r2, #0
    fb64:	e3822006 	orr	r2, r2, #6
    fb68:	e5c32005 	strb	r2, [r3, #5]
    fb6c:	e3a02000 	mov	r2, #0
    fb70:	e5c32006 	strb	r2, [r3, #6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:73
    ptr->h = OLED_Font::Char_Height;
    fb74:	e51b3008 	ldr	r3, [fp, #-8]
    fb78:	e3a02000 	mov	r2, #0
    fb7c:	e3822008 	orr	r2, r2, #8
    fb80:	e5c32007 	strb	r2, [r3, #7]
    fb84:	e3a02000 	mov	r2, #0
    fb88:	e5c32008 	strb	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:74
    ptr->x1 = x;
    fb8c:	e51b3008 	ldr	r3, [fp, #-8]
    fb90:	e55b2022 	ldrb	r2, [fp, #-34]	; 0xffffffde
    fb94:	e3a01000 	mov	r1, #0
    fb98:	e1812002 	orr	r2, r1, r2
    fb9c:	e5c32001 	strb	r2, [r3, #1]
    fba0:	e55b2021 	ldrb	r2, [fp, #-33]	; 0xffffffdf
    fba4:	e3a01000 	mov	r1, #0
    fba8:	e1812002 	orr	r2, r1, r2
    fbac:	e5c32002 	strb	r2, [r3, #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:75
    ptr->y1 = y;
    fbb0:	e51b3008 	ldr	r3, [fp, #-8]
    fbb4:	e55b2024 	ldrb	r2, [fp, #-36]	; 0xffffffdc
    fbb8:	e3a01000 	mov	r1, #0
    fbbc:	e1812002 	orr	r2, r1, r2
    fbc0:	e5c32003 	strb	r2, [r3, #3]
    fbc4:	e55b2023 	ldrb	r2, [fp, #-35]	; 0xffffffdd
    fbc8:	e3a01000 	mov	r1, #0
    fbcc:	e1812002 	orr	r2, r1, r2
    fbd0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:76
    ptr->vflip = OLED_Font::Flip_Chars ? 1 : 0;
    fbd4:	e51b3008 	ldr	r3, [fp, #-8]
    fbd8:	e3a02001 	mov	r2, #1
    fbdc:	e5c32009 	strb	r2, [r3, #9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:78
    
    memcpy(&OLED_Font::OLED_Font_Default[OLED_Font::Char_Width * (((uint16_t)c) - OLED_Font::Char_Begin)], &ptr->first, OLED_Font::Char_Width);
    fbe0:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    fbe4:	e2432020 	sub	r2, r3, #32
    fbe8:	e1a03002 	mov	r3, r2
    fbec:	e1a03083 	lsl	r3, r3, #1
    fbf0:	e0833002 	add	r3, r3, r2
    fbf4:	e1a03083 	lsl	r3, r3, #1
    fbf8:	e1a02003 	mov	r2, r3
    fbfc:	e59f3044 	ldr	r3, [pc, #68]	; fc48 <_ZN13COLED_Display8Put_CharEttc+0x164>
    fc00:	e0820003 	add	r0, r2, r3
    fc04:	e51b3008 	ldr	r3, [fp, #-8]
    fc08:	e283300a 	add	r3, r3, #10
    fc0c:	e3a02006 	mov	r2, #6
    fc10:	e1a01003 	mov	r1, r3
    fc14:	ebffff01 	bl	f820 <_Z6memcpyPKvPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:87
    for (uint16_t i = 0; i < OLED_Font::Char_Width; ++i)
    {
        sMonitor << static_cast<unsigned int>(memdst[i]) << '\n';
    }*/

    write(mHandle, buf, sizeof(buf));
    fc18:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    fc1c:	e5933000 	ldr	r3, [r3]
    fc20:	e24b101c 	sub	r1, fp, #28
    fc24:	e3a02011 	mov	r2, #17
    fc28:	e1a00003 	mov	r0, r3
    fc2c:	ebfffdba 	bl	f31c <_Z5writejPKcj>
    fc30:	ea000002 	b	fc40 <_ZN13COLED_Display8Put_CharEttc+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:62
        return;
    fc34:	e320f000 	nop	{0}
    fc38:	ea000000 	b	fc40 <_ZN13COLED_Display8Put_CharEttc+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:66
        return;
    fc3c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:88
}
    fc40:	e24bd004 	sub	sp, fp, #4
    fc44:	e8bd8800 	pop	{fp, pc}
    fc48:	000107b4 			; <UNDEFINED> instruction: 0x000107b4

0000fc4c <_ZN13COLED_Display4FlipEv>:
_ZN13COLED_Display4FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:91

void COLED_Display::Flip()
{
    fc4c:	e92d4800 	push	{fp, lr}
    fc50:	e28db004 	add	fp, sp, #4
    fc54:	e24dd010 	sub	sp, sp, #16
    fc58:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:92
    if (!mOpened)
    fc5c:	e51b3010 	ldr	r3, [fp, #-16]
    fc60:	e5d33004 	ldrb	r3, [r3, #4]
    fc64:	e2233001 	eor	r3, r3, #1
    fc68:	e6ef3073 	uxtb	r3, r3
    fc6c:	e3530000 	cmp	r3, #0
    fc70:	1a000008 	bne	fc98 <_ZN13COLED_Display4FlipEv+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:96
        return;

    TDisplay_NonParametric_Packet pkt;
    pkt.header.cmd = NDisplay_Command::Flip;
    fc74:	e3a03001 	mov	r3, #1
    fc78:	e54b3008 	strb	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:98

    write(mHandle, reinterpret_cast<char*>(&pkt), sizeof(pkt));
    fc7c:	e51b3010 	ldr	r3, [fp, #-16]
    fc80:	e5933000 	ldr	r3, [r3]
    fc84:	e24b1008 	sub	r1, fp, #8
    fc88:	e3a02001 	mov	r2, #1
    fc8c:	e1a00003 	mov	r0, r3
    fc90:	ebfffda1 	bl	f31c <_Z5writejPKcj>
    fc94:	ea000000 	b	fc9c <_ZN13COLED_Display4FlipEv+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:93
        return;
    fc98:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:99
}
    fc9c:	e24bd004 	sub	sp, fp, #4
    fca0:	e8bd8800 	pop	{fp, pc}

0000fca4 <_ZN13COLED_Display10Put_StringEttPKc>:
_ZN13COLED_Display10Put_StringEttPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:102

void COLED_Display::Put_String(uint16_t x, uint16_t y, const char* str)
{
    fca4:	e92d4800 	push	{fp, lr}
    fca8:	e28db004 	add	fp, sp, #4
    fcac:	e24dd018 	sub	sp, sp, #24
    fcb0:	e50b0010 	str	r0, [fp, #-16]
    fcb4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    fcb8:	e1a03001 	mov	r3, r1
    fcbc:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
    fcc0:	e1a03002 	mov	r3, r2
    fcc4:	e14b31b4 	strh	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:103
    if (!mOpened)
    fcc8:	e51b3010 	ldr	r3, [fp, #-16]
    fccc:	e5d33004 	ldrb	r3, [r3, #4]
    fcd0:	e2233001 	eor	r3, r3, #1
    fcd4:	e6ef3073 	uxtb	r3, r3
    fcd8:	e3530000 	cmp	r3, #0
    fcdc:	1a000019 	bne	fd48 <_ZN13COLED_Display10Put_StringEttPKc+0xa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:106
        return;

    uint16_t xi = x;
    fce0:	e15b31b2 	ldrh	r3, [fp, #-18]	; 0xffffffee
    fce4:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:107
    const char* ptr = str;
    fce8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    fcec:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:109
    // dokud nedojdeme na konec retezce nebo dokud nejsme 64 znaku daleko (limit, kdyby nahodou se neco pokazilo)
    while (*ptr != '\0' && ptr - str < 64)
    fcf0:	e51b300c 	ldr	r3, [fp, #-12]
    fcf4:	e5d33000 	ldrb	r3, [r3]
    fcf8:	e3530000 	cmp	r3, #0
    fcfc:	0a000012 	beq	fd4c <_ZN13COLED_Display10Put_StringEttPKc+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:109 (discriminator 1)
    fd00:	e51b200c 	ldr	r2, [fp, #-12]
    fd04:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    fd08:	e0423003 	sub	r3, r2, r3
    fd0c:	e353003f 	cmp	r3, #63	; 0x3f
    fd10:	ca00000d 	bgt	fd4c <_ZN13COLED_Display10Put_StringEttPKc+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:111
    {
        Put_Char(xi, y, *ptr);
    fd14:	e51b300c 	ldr	r3, [fp, #-12]
    fd18:	e5d33000 	ldrb	r3, [r3]
    fd1c:	e15b21b4 	ldrh	r2, [fp, #-20]	; 0xffffffec
    fd20:	e15b10b6 	ldrh	r1, [fp, #-6]
    fd24:	e51b0010 	ldr	r0, [fp, #-16]
    fd28:	ebffff6d 	bl	fae4 <_ZN13COLED_Display8Put_CharEttc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:112
        xi += OLED_Font::Char_Width;
    fd2c:	e15b30b6 	ldrh	r3, [fp, #-6]
    fd30:	e2833006 	add	r3, r3, #6
    fd34:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:113
        ptr++;
    fd38:	e51b300c 	ldr	r3, [fp, #-12]
    fd3c:	e2833001 	add	r3, r3, #1
    fd40:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:109
    while (*ptr != '\0' && ptr - str < 64)
    fd44:	eaffffe9 	b	fcf0 <_ZN13COLED_Display10Put_StringEttPKc+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:104
        return;
    fd48:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdutils/src/oled.cpp:115
    }
}
    fd4c:	e24bd004 	sub	sp, fp, #4
    fd50:	e8bd8800 	pop	{fp, pc}

0000fd54 <_Znaj>:
_Znaj():
/build/libstdc++-arm-none-eabi-gDiE7C/libstdc++-arm-none-eabi-17/build/arm/v5te/hard/libstdc++/libsupc++/../../../../../../src/libstdc++-v3/libsupc++/new_opv.cc:32
    fd54:	eafff199 	b	c3c0 <_Znwj>

0000fd58 <__udivsi3>:
__udivsi3():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1104
    fd58:	e2512001 	subs	r2, r1, #1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1106
    fd5c:	012fff1e 	bxeq	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1107
    fd60:	3a000074 	bcc	ff38 <__udivsi3+0x1e0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1108
    fd64:	e1500001 	cmp	r0, r1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1109
    fd68:	9a00006b 	bls	ff1c <__udivsi3+0x1c4>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1110
    fd6c:	e1110002 	tst	r1, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1111
    fd70:	0a00006c 	beq	ff28 <__udivsi3+0x1d0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1113
    fd74:	e16f3f10 	clz	r3, r0
    fd78:	e16f2f11 	clz	r2, r1
    fd7c:	e0423003 	sub	r3, r2, r3
    fd80:	e273301f 	rsbs	r3, r3, #31
    fd84:	10833083 	addne	r3, r3, r3, lsl #1
    fd88:	e3a02000 	mov	r2, #0
    fd8c:	108ff103 	addne	pc, pc, r3, lsl #2
    fd90:	e1a00000 	nop			; (mov r0, r0)
    fd94:	e1500f81 	cmp	r0, r1, lsl #31
    fd98:	e0a22002 	adc	r2, r2, r2
    fd9c:	20400f81 	subcs	r0, r0, r1, lsl #31
    fda0:	e1500f01 	cmp	r0, r1, lsl #30
    fda4:	e0a22002 	adc	r2, r2, r2
    fda8:	20400f01 	subcs	r0, r0, r1, lsl #30
    fdac:	e1500e81 	cmp	r0, r1, lsl #29
    fdb0:	e0a22002 	adc	r2, r2, r2
    fdb4:	20400e81 	subcs	r0, r0, r1, lsl #29
    fdb8:	e1500e01 	cmp	r0, r1, lsl #28
    fdbc:	e0a22002 	adc	r2, r2, r2
    fdc0:	20400e01 	subcs	r0, r0, r1, lsl #28
    fdc4:	e1500d81 	cmp	r0, r1, lsl #27
    fdc8:	e0a22002 	adc	r2, r2, r2
    fdcc:	20400d81 	subcs	r0, r0, r1, lsl #27
    fdd0:	e1500d01 	cmp	r0, r1, lsl #26
    fdd4:	e0a22002 	adc	r2, r2, r2
    fdd8:	20400d01 	subcs	r0, r0, r1, lsl #26
    fddc:	e1500c81 	cmp	r0, r1, lsl #25
    fde0:	e0a22002 	adc	r2, r2, r2
    fde4:	20400c81 	subcs	r0, r0, r1, lsl #25
    fde8:	e1500c01 	cmp	r0, r1, lsl #24
    fdec:	e0a22002 	adc	r2, r2, r2
    fdf0:	20400c01 	subcs	r0, r0, r1, lsl #24
    fdf4:	e1500b81 	cmp	r0, r1, lsl #23
    fdf8:	e0a22002 	adc	r2, r2, r2
    fdfc:	20400b81 	subcs	r0, r0, r1, lsl #23
    fe00:	e1500b01 	cmp	r0, r1, lsl #22
    fe04:	e0a22002 	adc	r2, r2, r2
    fe08:	20400b01 	subcs	r0, r0, r1, lsl #22
    fe0c:	e1500a81 	cmp	r0, r1, lsl #21
    fe10:	e0a22002 	adc	r2, r2, r2
    fe14:	20400a81 	subcs	r0, r0, r1, lsl #21
    fe18:	e1500a01 	cmp	r0, r1, lsl #20
    fe1c:	e0a22002 	adc	r2, r2, r2
    fe20:	20400a01 	subcs	r0, r0, r1, lsl #20
    fe24:	e1500981 	cmp	r0, r1, lsl #19
    fe28:	e0a22002 	adc	r2, r2, r2
    fe2c:	20400981 	subcs	r0, r0, r1, lsl #19
    fe30:	e1500901 	cmp	r0, r1, lsl #18
    fe34:	e0a22002 	adc	r2, r2, r2
    fe38:	20400901 	subcs	r0, r0, r1, lsl #18
    fe3c:	e1500881 	cmp	r0, r1, lsl #17
    fe40:	e0a22002 	adc	r2, r2, r2
    fe44:	20400881 	subcs	r0, r0, r1, lsl #17
    fe48:	e1500801 	cmp	r0, r1, lsl #16
    fe4c:	e0a22002 	adc	r2, r2, r2
    fe50:	20400801 	subcs	r0, r0, r1, lsl #16
    fe54:	e1500781 	cmp	r0, r1, lsl #15
    fe58:	e0a22002 	adc	r2, r2, r2
    fe5c:	20400781 	subcs	r0, r0, r1, lsl #15
    fe60:	e1500701 	cmp	r0, r1, lsl #14
    fe64:	e0a22002 	adc	r2, r2, r2
    fe68:	20400701 	subcs	r0, r0, r1, lsl #14
    fe6c:	e1500681 	cmp	r0, r1, lsl #13
    fe70:	e0a22002 	adc	r2, r2, r2
    fe74:	20400681 	subcs	r0, r0, r1, lsl #13
    fe78:	e1500601 	cmp	r0, r1, lsl #12
    fe7c:	e0a22002 	adc	r2, r2, r2
    fe80:	20400601 	subcs	r0, r0, r1, lsl #12
    fe84:	e1500581 	cmp	r0, r1, lsl #11
    fe88:	e0a22002 	adc	r2, r2, r2
    fe8c:	20400581 	subcs	r0, r0, r1, lsl #11
    fe90:	e1500501 	cmp	r0, r1, lsl #10
    fe94:	e0a22002 	adc	r2, r2, r2
    fe98:	20400501 	subcs	r0, r0, r1, lsl #10
    fe9c:	e1500481 	cmp	r0, r1, lsl #9
    fea0:	e0a22002 	adc	r2, r2, r2
    fea4:	20400481 	subcs	r0, r0, r1, lsl #9
    fea8:	e1500401 	cmp	r0, r1, lsl #8
    feac:	e0a22002 	adc	r2, r2, r2
    feb0:	20400401 	subcs	r0, r0, r1, lsl #8
    feb4:	e1500381 	cmp	r0, r1, lsl #7
    feb8:	e0a22002 	adc	r2, r2, r2
    febc:	20400381 	subcs	r0, r0, r1, lsl #7
    fec0:	e1500301 	cmp	r0, r1, lsl #6
    fec4:	e0a22002 	adc	r2, r2, r2
    fec8:	20400301 	subcs	r0, r0, r1, lsl #6
    fecc:	e1500281 	cmp	r0, r1, lsl #5
    fed0:	e0a22002 	adc	r2, r2, r2
    fed4:	20400281 	subcs	r0, r0, r1, lsl #5
    fed8:	e1500201 	cmp	r0, r1, lsl #4
    fedc:	e0a22002 	adc	r2, r2, r2
    fee0:	20400201 	subcs	r0, r0, r1, lsl #4
    fee4:	e1500181 	cmp	r0, r1, lsl #3
    fee8:	e0a22002 	adc	r2, r2, r2
    feec:	20400181 	subcs	r0, r0, r1, lsl #3
    fef0:	e1500101 	cmp	r0, r1, lsl #2
    fef4:	e0a22002 	adc	r2, r2, r2
    fef8:	20400101 	subcs	r0, r0, r1, lsl #2
    fefc:	e1500081 	cmp	r0, r1, lsl #1
    ff00:	e0a22002 	adc	r2, r2, r2
    ff04:	20400081 	subcs	r0, r0, r1, lsl #1
    ff08:	e1500001 	cmp	r0, r1
    ff0c:	e0a22002 	adc	r2, r2, r2
    ff10:	20400001 	subcs	r0, r0, r1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1115
    ff14:	e1a00002 	mov	r0, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1116
    ff18:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1119
    ff1c:	03a00001 	moveq	r0, #1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1120
    ff20:	13a00000 	movne	r0, #0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1121
    ff24:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1123
    ff28:	e16f2f11 	clz	r2, r1
    ff2c:	e262201f 	rsb	r2, r2, #31
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1125
    ff30:	e1a00230 	lsr	r0, r0, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1126
    ff34:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1130
    ff38:	e3500000 	cmp	r0, #0
    ff3c:	13e00000 	mvnne	r0, #0
    ff40:	ea000007 	b	ff64 <__aeabi_idiv0>

0000ff44 <__aeabi_uidivmod>:
__aeabi_uidivmod():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1161
    ff44:	e3510000 	cmp	r1, #0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1162
    ff48:	0afffffa 	beq	ff38 <__udivsi3+0x1e0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1163
    ff4c:	e92d4003 	push	{r0, r1, lr}
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1164
    ff50:	ebffff80 	bl	fd58 <__udivsi3>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1165
    ff54:	e8bd4006 	pop	{r1, r2, lr}
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1166
    ff58:	e0030092 	mul	r3, r2, r0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1167
    ff5c:	e0411003 	sub	r1, r1, r3
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1168
    ff60:	e12fff1e 	bx	lr

0000ff64 <__aeabi_idiv0>:
__aeabi_ldiv0():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1466
    ff64:	e12fff1e 	bx	lr

Disassembly of section .rodata:

0000ff68 <_ZN3halL18Default_Clock_RateE>:
    ff68:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000ff6c <_ZN3halL15Peripheral_BaseE>:
    ff6c:	20000000 	andcs	r0, r0, r0

0000ff70 <_ZN3halL9GPIO_BaseE>:
    ff70:	20200000 	eorcs	r0, r0, r0

0000ff74 <_ZN3halL14GPIO_Pin_CountE>:
    ff74:	00000036 	andeq	r0, r0, r6, lsr r0

0000ff78 <_ZN3halL8AUX_BaseE>:
    ff78:	20215000 	eorcs	r5, r1, r0

0000ff7c <_ZN3halL25Interrupt_Controller_BaseE>:
    ff7c:	2000b200 	andcs	fp, r0, r0, lsl #4

0000ff80 <_ZN3halL10Timer_BaseE>:
    ff80:	2000b400 	andcs	fp, r0, r0, lsl #8

0000ff84 <_ZN3halL9TRNG_BaseE>:
    ff84:	20104000 	andscs	r4, r0, r0

0000ff88 <_ZN3halL9BSC0_BaseE>:
    ff88:	20205000 	eorcs	r5, r0, r0

0000ff8c <_ZN3halL9BSC1_BaseE>:
    ff8c:	20804000 	addcs	r4, r0, r0

0000ff90 <_ZN3halL9BSC2_BaseE>:
    ff90:	20805000 	addcs	r5, r0, r0

0000ff94 <_ZN3halL18Default_Clock_RateE>:
    ff94:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000ff98 <_ZN3halL15Peripheral_BaseE>:
    ff98:	20000000 	andcs	r0, r0, r0

0000ff9c <_ZN3halL9GPIO_BaseE>:
    ff9c:	20200000 	eorcs	r0, r0, r0

0000ffa0 <_ZN3halL14GPIO_Pin_CountE>:
    ffa0:	00000036 	andeq	r0, r0, r6, lsr r0

0000ffa4 <_ZN3halL8AUX_BaseE>:
    ffa4:	20215000 	eorcs	r5, r1, r0

0000ffa8 <_ZN3halL25Interrupt_Controller_BaseE>:
    ffa8:	2000b200 	andcs	fp, r0, r0, lsl #4

0000ffac <_ZN3halL10Timer_BaseE>:
    ffac:	2000b400 	andcs	fp, r0, r0, lsl #8

0000ffb0 <_ZN3halL9TRNG_BaseE>:
    ffb0:	20104000 	andscs	r4, r0, r0

0000ffb4 <_ZN3halL9BSC0_BaseE>:
    ffb4:	20205000 	eorcs	r5, r0, r0

0000ffb8 <_ZN3halL9BSC1_BaseE>:
    ffb8:	20804000 	addcs	r4, r0, r0

0000ffbc <_ZN3halL9BSC2_BaseE>:
    ffbc:	20805000 	addcs	r5, r0, r0

0000ffc0 <_ZL24I2C_Transaction_Max_Size>:
    ffc0:	00000008 	andeq	r0, r0, r8

0000ffc4 <_ZZN8CMonitorlsEjE11BUFFER_SIZE>:
    ffc4:	00000010 	andeq	r0, r0, r0, lsl r0
    ffc8:	65757274 	ldrbvs	r7, [r5, #-628]!	; 0xfffffd8c
    ffcc:	00000000 	andeq	r0, r0, r0
    ffd0:	736c6166 	cmnvc	ip, #-2147483623	; 0x80000019
    ffd4:	00000065 	andeq	r0, r0, r5, rrx
    ffd8:	33323130 	teqcc	r2, #48, 2
    ffdc:	37363534 			; <UNDEFINED> instruction: 0x37363534
    ffe0:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
    ffe4:	46454443 	strbmi	r4, [r5], -r3, asr #8
    ffe8:	00000000 	andeq	r0, r0, r0

0000ffec <_ZN3halL18Default_Clock_RateE>:
    ffec:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fff0 <_ZN3halL15Peripheral_BaseE>:
    fff0:	20000000 	andcs	r0, r0, r0

0000fff4 <_ZN3halL9GPIO_BaseE>:
    fff4:	20200000 	eorcs	r0, r0, r0

0000fff8 <_ZN3halL14GPIO_Pin_CountE>:
    fff8:	00000036 	andeq	r0, r0, r6, lsr r0

0000fffc <_ZN3halL8AUX_BaseE>:
    fffc:	20215000 	eorcs	r5, r1, r0

00010000 <_ZN3halL25Interrupt_Controller_BaseE>:
   10000:	2000b200 	andcs	fp, r0, r0, lsl #4

00010004 <_ZN3halL10Timer_BaseE>:
   10004:	2000b400 	andcs	fp, r0, r0, lsl #8

00010008 <_ZN3halL9TRNG_BaseE>:
   10008:	20104000 	andscs	r4, r0, r0

0001000c <_ZN3halL9BSC0_BaseE>:
   1000c:	20205000 	eorcs	r5, r0, r0

00010010 <_ZN3halL9BSC1_BaseE>:
   10010:	20804000 	addcs	r4, r0, r0

00010014 <_ZN3halL9BSC2_BaseE>:
   10014:	20805000 	addcs	r5, r0, r0

00010018 <_ZL24I2C_Transaction_Max_Size>:
   10018:	00000008 	andeq	r0, r0, r8

0001001c <_ZL21SSD1306_Slave_Address>:
   1001c:	0000003c 	andeq	r0, r0, ip, lsr r0
   10020:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0xfffff7bb
   10024:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
   10028:	444d4320 	strbmi	r4, [sp], #-800	; 0xfffffce0
   1002c:	4f4e203a 	svcmi	0x004e203a
   10030:	00000a50 	andeq	r0, r0, r0, asr sl
   10034:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0xfffff7bb
   10038:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
   1003c:	444d4320 	strbmi	r4, [sp], #-800	; 0xfffffce0
   10040:	6c46203a 	mcrrvs	0, 3, r2, r6, cr10
   10044:	000a7069 	andeq	r7, sl, r9, rrx
   10048:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0xfffff7bb
   1004c:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
   10050:	444d4320 	strbmi	r4, [sp], #-800	; 0xfffffce0
   10054:	6c43203a 	mcrrvs	0, 3, r2, r3, cr10
   10058:	0a726165 	beq	1ca85f4 <_bss_end+0x1c96904>
   1005c:	00000000 	andeq	r0, r0, r0
   10060:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0xfffff7bb
   10064:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
   10068:	444d4320 	strbmi	r4, [sp], #-800	; 0xfffffce0
   1006c:	7244203a 	subvc	r2, r4, #58	; 0x3a
   10070:	505f7761 	subspl	r7, pc, r1, ror #14
   10074:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
   10078:	7272415f 	rsbsvc	r4, r2, #-1073741801	; 0xc0000017
   1007c:	000a7961 	andeq	r7, sl, r1, ror #18
   10080:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0xfffff7bb
   10084:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
   10088:	444d4320 	strbmi	r4, [sp], #-800	; 0xfffffce0
   1008c:	7244203a 	subvc	r2, r4, #58	; 0x3a
   10090:	505f7761 	subspl	r7, pc, r1, ror #14
   10094:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
   10098:	7272415f 	rsbsvc	r4, r2, #-1073741801	; 0xc0000017
   1009c:	545f7961 	ldrbpl	r7, [pc], #-2401	; 100a4 <_ZL21SSD1306_Slave_Address+0x88>
   100a0:	65525f6f 	ldrbvs	r5, [r2, #-3951]	; 0xfffff091
   100a4:	000a7463 	andeq	r7, sl, r3, ror #8
   100a8:	2d746b70 	vldmdbcs	r4!, {d22-<overflow reg d77>}
   100ac:	6c66763e 	stclvs	6, cr7, [r6], #-248	; 0xffffff08
   100b0:	3d207069 	stccc	0, cr7, [r0, #-420]!	; 0xfffffe5c
   100b4:	00000020 	andeq	r0, r0, r0, lsr #32

000100b8 <_ZN3halL18Default_Clock_RateE>:
   100b8:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000100bc <_ZN3halL15Peripheral_BaseE>:
   100bc:	20000000 	andcs	r0, r0, r0

000100c0 <_ZN3halL9GPIO_BaseE>:
   100c0:	20200000 	eorcs	r0, r0, r0

000100c4 <_ZN3halL14GPIO_Pin_CountE>:
   100c4:	00000036 	andeq	r0, r0, r6, lsr r0

000100c8 <_ZN3halL8AUX_BaseE>:
   100c8:	20215000 	eorcs	r5, r1, r0

000100cc <_ZN3halL25Interrupt_Controller_BaseE>:
   100cc:	2000b200 	andcs	fp, r0, r0, lsl #4

000100d0 <_ZN3halL10Timer_BaseE>:
   100d0:	2000b400 	andcs	fp, r0, r0, lsl #8

000100d4 <_ZN3halL9TRNG_BaseE>:
   100d4:	20104000 	andscs	r4, r0, r0

000100d8 <_ZN3halL9BSC0_BaseE>:
   100d8:	20205000 	eorcs	r5, r0, r0

000100dc <_ZN3halL9BSC1_BaseE>:
   100dc:	20804000 	addcs	r4, r0, r0

000100e0 <_ZN3halL9BSC2_BaseE>:
   100e0:	20805000 	addcs	r5, r0, r0

000100e4 <_ZN16CSegment_Display14mCharacter_MapE>:
   100e4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
   100f4:	9dd914de 	cfldrdls	mvd1, [r9, #888]	; 0x378
   100f8:	94cf8f17 	strbls	r8, [pc], #3863	; 10100 <_ZN16CSegment_Display14mCharacter_MapE+0x1c>
   100fc:	00009fdf 	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
	...

00010144 <_ZN3halL18Default_Clock_RateE>:
   10144:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010148 <_ZN3halL15Peripheral_BaseE>:
   10148:	20000000 	andcs	r0, r0, r0

0001014c <_ZN3halL9GPIO_BaseE>:
   1014c:	20200000 	eorcs	r0, r0, r0

00010150 <_ZN3halL14GPIO_Pin_CountE>:
   10150:	00000036 	andeq	r0, r0, r6, lsr r0

00010154 <_ZN3halL8AUX_BaseE>:
   10154:	20215000 	eorcs	r5, r1, r0

00010158 <_ZN3halL25Interrupt_Controller_BaseE>:
   10158:	2000b200 	andcs	fp, r0, r0, lsl #4

0001015c <_ZN3halL10Timer_BaseE>:
   1015c:	2000b400 	andcs	fp, r0, r0, lsl #8

00010160 <_ZN3halL9TRNG_BaseE>:
   10160:	20104000 	andscs	r4, r0, r0

00010164 <_ZN3halL9BSC0_BaseE>:
   10164:	20205000 	eorcs	r5, r0, r0

00010168 <_ZN3halL9BSC1_BaseE>:
   10168:	20804000 	addcs	r4, r0, r0

0001016c <_ZN3halL9BSC2_BaseE>:
   1016c:	20805000 	addcs	r5, r0, r0

00010170 <_ZN3halL18Default_Clock_RateE>:
   10170:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010174 <_ZN3halL15Peripheral_BaseE>:
   10174:	20000000 	andcs	r0, r0, r0

00010178 <_ZN3halL9GPIO_BaseE>:
   10178:	20200000 	eorcs	r0, r0, r0

0001017c <_ZN3halL14GPIO_Pin_CountE>:
   1017c:	00000036 	andeq	r0, r0, r6, lsr r0

00010180 <_ZN3halL8AUX_BaseE>:
   10180:	20215000 	eorcs	r5, r1, r0

00010184 <_ZN3halL25Interrupt_Controller_BaseE>:
   10184:	2000b200 	andcs	fp, r0, r0, lsl #4

00010188 <_ZN3halL10Timer_BaseE>:
   10188:	2000b400 	andcs	fp, r0, r0, lsl #8

0001018c <_ZN3halL9TRNG_BaseE>:
   1018c:	20104000 	andscs	r4, r0, r0

00010190 <_ZN3halL9BSC0_BaseE>:
   10190:	20205000 	eorcs	r5, r0, r0

00010194 <_ZN3halL9BSC1_BaseE>:
   10194:	20804000 	addcs	r4, r0, r0

00010198 <_ZN3halL9BSC2_BaseE>:
   10198:	20805000 	addcs	r5, r0, r0

0001019c <_ZN3halL18Default_Clock_RateE>:
   1019c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000101a0 <_ZN3halL15Peripheral_BaseE>:
   101a0:	20000000 	andcs	r0, r0, r0

000101a4 <_ZN3halL9GPIO_BaseE>:
   101a4:	20200000 	eorcs	r0, r0, r0

000101a8 <_ZN3halL14GPIO_Pin_CountE>:
   101a8:	00000036 	andeq	r0, r0, r6, lsr r0

000101ac <_ZN3halL8AUX_BaseE>:
   101ac:	20215000 	eorcs	r5, r1, r0

000101b0 <_ZN3halL25Interrupt_Controller_BaseE>:
   101b0:	2000b200 	andcs	fp, r0, r0, lsl #4

000101b4 <_ZN3halL10Timer_BaseE>:
   101b4:	2000b400 	andcs	fp, r0, r0, lsl #8

000101b8 <_ZN3halL9TRNG_BaseE>:
   101b8:	20104000 	andscs	r4, r0, r0

000101bc <_ZN3halL9BSC0_BaseE>:
   101bc:	20205000 	eorcs	r5, r0, r0

000101c0 <_ZN3halL9BSC1_BaseE>:
   101c0:	20804000 	addcs	r4, r0, r0

000101c4 <_ZN3halL9BSC2_BaseE>:
   101c4:	20805000 	addcs	r5, r0, r0

000101c8 <_ZL17TRNG_Warmup_Count>:
   101c8:	00040000 	andeq	r0, r4, r0

000101cc <_ZL21MaxFSDriverNameLength>:
   101cc:	00000010 	andeq	r0, r0, r0, lsl r0

000101d0 <_ZL17MaxFilenameLength>:
   101d0:	00000010 	andeq	r0, r0, r0, lsl r0

000101d4 <_ZL13MaxPathLength>:
   101d4:	00000080 	andeq	r0, r0, r0, lsl #1

000101d8 <_ZL18NoFilesystemDriver>:
   101d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   101dc:	00564544 	subseq	r4, r6, r4, asr #10
   101e0:	00535953 	subseq	r5, r3, r3, asr r9
   101e4:	00544e4d 	subseq	r4, r4, sp, asr #28
   101e8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
   101ec:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
   101f0:	676e697a 			; <UNDEFINED> instruction: 0x676e697a
   101f4:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
   101f8:	0a534620 	beq	14e1a80 <_bss_end+0x14cfd90>
   101fc:	00000000 	andeq	r0, r0, r0
   10200:	6e756f6d 	cdpvs	15, 7, cr6, cr5, cr13, {3}
   10204:	6f702074 	svcvs	0x00702074
   10208:	20746e69 	rsbscs	r6, r4, r9, ror #28
   1020c:	0000203d 	andeq	r2, r0, sp, lsr r0
   10210:	0000000a 	andeq	r0, r0, sl
   10214:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
   10218:	20676e69 	rsbcs	r6, r7, r9, ror #28
   1021c:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
   10220:	203d2064 	eorscs	r2, sp, r4, rrx
   10224:	00000000 	andeq	r0, r0, r0
   10228:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
   1022c:	00002064 	andeq	r2, r0, r4, rrx
   10230:	73617720 	cmnvc	r1, #32, 14	; 0x800000
   10234:	756f6620 	strbvc	r6, [pc, #-1568]!	; fc1c <_ZN13COLED_Display8Put_CharEttc+0x138>
   10238:	000a646e 	andeq	r6, sl, lr, ror #8
   1023c:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
   10240:	61772064 	cmnvs	r7, r4, rrx
   10244:	6f6e2073 	svcvs	0x006e2073
   10248:	6f662074 	svcvs	0x00662074
   1024c:	0a646e75 	beq	192bc28 <_bss_end+0x1919f38>
   10250:	00000000 	andeq	r0, r0, r0
   10254:	61657263 	cmnvs	r5, r3, ror #4
   10258:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
   1025c:	0000203a 	andeq	r2, r0, sl, lsr r0
   10260:	696e6946 	stmdbvs	lr!, {r1, r2, r6, r8, fp, sp, lr}^
   10264:	64656873 	strbtvs	r6, [r5], #-2163	; 0xfffff78d
   10268:	20534620 	subscs	r4, r3, r0, lsr #12
   1026c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
   10270:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
   10274:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
   10278:	0a0a6e6f 	beq	2abc3c <_bss_end+0x299f4c>
   1027c:	00000000 	andeq	r0, r0, r0
   10280:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
   10284:	20676e69 	rsbcs	r6, r7, r9, ror #28
   10288:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
   1028c:	0000203a 	andeq	r2, r0, sl, lsr r0
   10290:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
   10294:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   10298:	706f206f 	rsbvc	r2, pc, pc, rrx
   1029c:	203a6e65 	eorscs	r6, sl, r5, ror #28
   102a0:	00000000 	andeq	r0, r0, r0

000102a4 <_ZL21MaxFSDriverNameLength>:
   102a4:	00000010 	andeq	r0, r0, r0, lsl r0

000102a8 <_ZL17MaxFilenameLength>:
   102a8:	00000010 	andeq	r0, r0, r0, lsl r0

000102ac <_ZL13MaxPathLength>:
   102ac:	00000080 	andeq	r0, r0, r0, lsl #1

000102b0 <_ZL18NoFilesystemDriver>:
   102b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000102b4 <_ZN3halL18Default_Clock_RateE>:
   102b4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000102b8 <_ZN3halL15Peripheral_BaseE>:
   102b8:	20000000 	andcs	r0, r0, r0

000102bc <_ZN3halL9GPIO_BaseE>:
   102bc:	20200000 	eorcs	r0, r0, r0

000102c0 <_ZN3halL14GPIO_Pin_CountE>:
   102c0:	00000036 	andeq	r0, r0, r6, lsr r0

000102c4 <_ZN3halL8AUX_BaseE>:
   102c4:	20215000 	eorcs	r5, r1, r0

000102c8 <_ZN3halL25Interrupt_Controller_BaseE>:
   102c8:	2000b200 	andcs	fp, r0, r0, lsl #4

000102cc <_ZN3halL10Timer_BaseE>:
   102cc:	2000b400 	andcs	fp, r0, r0, lsl #8

000102d0 <_ZN3halL9TRNG_BaseE>:
   102d0:	20104000 	andscs	r4, r0, r0

000102d4 <_ZN3halL9BSC0_BaseE>:
   102d4:	20205000 	eorcs	r5, r0, r0

000102d8 <_ZN3halL9BSC1_BaseE>:
   102d8:	20804000 	addcs	r4, r0, r0

000102dc <_ZN3halL9BSC2_BaseE>:
   102dc:	20805000 	addcs	r5, r0, r0

000102e0 <_ZL24I2C_Transaction_Max_Size>:
   102e0:	00000008 	andeq	r0, r0, r8

000102e4 <_ZL21SSD1306_Slave_Address>:
   102e4:	0000003c 	andeq	r0, r0, ip, lsr r0
   102e8:	3a564544 	bcc	15a1800 <_bss_end+0x158fb10>
   102ec:	6f697067 	svcvs	0x00697067
   102f0:	00000000 	andeq	r0, r0, r0
   102f4:	3a564544 	bcc	15a180c <_bss_end+0x158fb1c>
   102f8:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
   102fc:	00726f74 	rsbseq	r6, r2, r4, ror pc
   10300:	3a564544 	bcc	15a1818 <_bss_end+0x158fb28>
   10304:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
   10308:	00000000 	andeq	r0, r0, r0
   1030c:	3a564544 	bcc	15a1824 <_bss_end+0x158fb34>
   10310:	00007273 	andeq	r7, r0, r3, ror r2
   10314:	3a564544 	bcc	15a182c <_bss_end+0x158fb3c>
   10318:	64676573 	strbtvs	r6, [r7], #-1395	; 0xfffffa8d
   1031c:	00000000 	andeq	r0, r0, r0
   10320:	3a564544 	bcc	15a1838 <_bss_end+0x158fb48>
   10324:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
   10328:	00000000 	andeq	r0, r0, r0

0001032c <_ZN11CFilesystem11gFS_DriversE>:
   1032c:	4f495047 	svcmi	0x00495047
   10330:	0053465f 	subseq	r4, r3, pc, asr r6
	...
   1033c:	000102e8 	andeq	r0, r1, r8, ror #5
   10340:	00010b70 	andeq	r0, r1, r0, ror fp
   10344:	494e4f4d 	stmdbmi	lr, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
   10348:	5f524f54 	svcpl	0x00524f54
   1034c:	00005346 	andeq	r5, r0, r6, asr #6
   10350:	00000000 	andeq	r0, r0, r0
   10354:	000102f4 	strdeq	r0, [r1], -r4
   10358:	00010b74 	andeq	r0, r1, r4, ror fp
   1035c:	474e5254 	smlsldmi	r5, lr, r4, r2
   10360:	0053465f 	subseq	r4, r3, pc, asr r6
	...
   1036c:	00010300 	andeq	r0, r1, r0, lsl #6
   10370:	00010b80 	andeq	r0, r1, r0, lsl #23
   10374:	66696853 			; <UNDEFINED> instruction: 0x66696853
   10378:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
   1037c:	53465f67 	movtpl	r5, #28519	; 0x6f67
   10380:	00000000 	andeq	r0, r0, r0
   10384:	0001030c 	andeq	r0, r1, ip, lsl #6
   10388:	00010b7c 	andeq	r0, r1, ip, ror fp
   1038c:	67655337 			; <UNDEFINED> instruction: 0x67655337
   10390:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
   10394:	53465f70 	movtpl	r5, #28528	; 0x6f70
   10398:	00000000 	andeq	r0, r0, r0
   1039c:	00010314 	andeq	r0, r1, r4, lsl r3
   103a0:	00010b78 	andeq	r0, r1, r8, ror fp
   103a4:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
   103a8:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
   103ac:	53465f70 	movtpl	r5, #28528	; 0x6f70
   103b0:	00000000 	andeq	r0, r0, r0
   103b4:	00010320 	andeq	r0, r1, r0, lsr #6
   103b8:	00010b84 	andeq	r0, r1, r4, lsl #23

000103bc <_ZN11CFilesystem17gFS_Drivers_CountE>:
   103bc:	00000006 	andeq	r0, r0, r6

000103c0 <_ZN3halL18Default_Clock_RateE>:
   103c0:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000103c4 <_ZN3halL15Peripheral_BaseE>:
   103c4:	20000000 	andcs	r0, r0, r0

000103c8 <_ZN3halL9GPIO_BaseE>:
   103c8:	20200000 	eorcs	r0, r0, r0

000103cc <_ZN3halL14GPIO_Pin_CountE>:
   103cc:	00000036 	andeq	r0, r0, r6, lsr r0

000103d0 <_ZN3halL8AUX_BaseE>:
   103d0:	20215000 	eorcs	r5, r1, r0

000103d4 <_ZN3halL25Interrupt_Controller_BaseE>:
   103d4:	2000b200 	andcs	fp, r0, r0, lsl #4

000103d8 <_ZN3halL10Timer_BaseE>:
   103d8:	2000b400 	andcs	fp, r0, r0, lsl #8

000103dc <_ZN3halL9TRNG_BaseE>:
   103dc:	20104000 	andscs	r4, r0, r0

000103e0 <_ZN3halL9BSC0_BaseE>:
   103e0:	20205000 	eorcs	r5, r0, r0

000103e4 <_ZN3halL9BSC1_BaseE>:
   103e4:	20804000 	addcs	r4, r0, r0

000103e8 <_ZN3halL9BSC2_BaseE>:
   103e8:	20805000 	addcs	r5, r0, r0

000103ec <_ZL24Max_Process_Opened_Files>:
   103ec:	00000010 	andeq	r0, r0, r0, lsl r0

000103f0 <_ZL21MaxFSDriverNameLength>:
   103f0:	00000010 	andeq	r0, r0, r0, lsl r0

000103f4 <_ZL17MaxFilenameLength>:
   103f4:	00000010 	andeq	r0, r0, r0, lsl r0

000103f8 <_ZL13MaxPathLength>:
   103f8:	00000080 	andeq	r0, r0, r0, lsl #1

000103fc <_ZL18NoFilesystemDriver>:
   103fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010400 <_ZL14Invalid_Handle>:
   10400:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010404 <_ZN3halL18Default_Clock_RateE>:
   10404:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010408 <_ZN3halL15Peripheral_BaseE>:
   10408:	20000000 	andcs	r0, r0, r0

0001040c <_ZN3halL9GPIO_BaseE>:
   1040c:	20200000 	eorcs	r0, r0, r0

00010410 <_ZN3halL14GPIO_Pin_CountE>:
   10410:	00000036 	andeq	r0, r0, r6, lsr r0

00010414 <_ZN3halL8AUX_BaseE>:
   10414:	20215000 	eorcs	r5, r1, r0

00010418 <_ZN3halL25Interrupt_Controller_BaseE>:
   10418:	2000b200 	andcs	fp, r0, r0, lsl #4

0001041c <_ZN3halL10Timer_BaseE>:
   1041c:	2000b400 	andcs	fp, r0, r0, lsl #8

00010420 <_ZN3halL9TRNG_BaseE>:
   10420:	20104000 	andscs	r4, r0, r0

00010424 <_ZN3halL9BSC0_BaseE>:
   10424:	20205000 	eorcs	r5, r0, r0

00010428 <_ZN3halL9BSC1_BaseE>:
   10428:	20804000 	addcs	r4, r0, r0

0001042c <_ZN3halL9BSC2_BaseE>:
   1042c:	20805000 	addcs	r5, r0, r0

00010430 <_ZN3memL9LowMemoryE>:
   10430:	00020000 	andeq	r0, r2, r0

00010434 <_ZN3memL10HighMemoryE>:
   10434:	20000000 	andcs	r0, r0, r0

00010438 <_ZN3memL8PageSizeE>:
   10438:	00004000 	andeq	r4, r0, r0

0001043c <_ZN3memL16PagingMemorySizeE>:
   1043c:	1ffe0000 	svcne	0x00fe0000

00010440 <_ZN3memL9PageCountE>:
   10440:	00007ff8 	strdeq	r7, [r0], -r8

00010444 <_ZL24Max_Process_Opened_Files>:
   10444:	00000010 	andeq	r0, r0, r0, lsl r0

00010448 <_ZL21MaxFSDriverNameLength>:
   10448:	00000010 	andeq	r0, r0, r0, lsl r0

0001044c <_ZL17MaxFilenameLength>:
   1044c:	00000010 	andeq	r0, r0, r0, lsl r0

00010450 <_ZL13MaxPathLength>:
   10450:	00000080 	andeq	r0, r0, r0, lsl #1

00010454 <_ZL18NoFilesystemDriver>:
   10454:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010458 <_ZL14Invalid_Handle>:
   10458:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0001045c <_ZN3halL18Default_Clock_RateE>:
   1045c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010460 <_ZN3halL15Peripheral_BaseE>:
   10460:	20000000 	andcs	r0, r0, r0

00010464 <_ZN3halL9GPIO_BaseE>:
   10464:	20200000 	eorcs	r0, r0, r0

00010468 <_ZN3halL14GPIO_Pin_CountE>:
   10468:	00000036 	andeq	r0, r0, r6, lsr r0

0001046c <_ZN3halL8AUX_BaseE>:
   1046c:	20215000 	eorcs	r5, r1, r0

00010470 <_ZN3halL25Interrupt_Controller_BaseE>:
   10470:	2000b200 	andcs	fp, r0, r0, lsl #4

00010474 <_ZN3halL10Timer_BaseE>:
   10474:	2000b400 	andcs	fp, r0, r0, lsl #8

00010478 <_ZN3halL9TRNG_BaseE>:
   10478:	20104000 	andscs	r4, r0, r0

0001047c <_ZN3halL9BSC0_BaseE>:
   1047c:	20205000 	eorcs	r5, r0, r0

00010480 <_ZN3halL9BSC1_BaseE>:
   10480:	20804000 	addcs	r4, r0, r0

00010484 <_ZN3halL9BSC2_BaseE>:
   10484:	20805000 	addcs	r5, r0, r0

00010488 <_ZN3memL9LowMemoryE>:
   10488:	00020000 	andeq	r0, r2, r0

0001048c <_ZN3memL10HighMemoryE>:
   1048c:	20000000 	andcs	r0, r0, r0

00010490 <_ZN3memL8PageSizeE>:
   10490:	00004000 	andeq	r4, r0, r0

00010494 <_ZN3memL16PagingMemorySizeE>:
   10494:	1ffe0000 	svcne	0x00fe0000

00010498 <_ZN3memL9PageCountE>:
   10498:	00007ff8 	strdeq	r7, [r0], -r8

0001049c <_ZN3halL18Default_Clock_RateE>:
   1049c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000104a0 <_ZN3halL15Peripheral_BaseE>:
   104a0:	20000000 	andcs	r0, r0, r0

000104a4 <_ZN3halL9GPIO_BaseE>:
   104a4:	20200000 	eorcs	r0, r0, r0

000104a8 <_ZN3halL14GPIO_Pin_CountE>:
   104a8:	00000036 	andeq	r0, r0, r6, lsr r0

000104ac <_ZN3halL8AUX_BaseE>:
   104ac:	20215000 	eorcs	r5, r1, r0

000104b0 <_ZN3halL25Interrupt_Controller_BaseE>:
   104b0:	2000b200 	andcs	fp, r0, r0, lsl #4

000104b4 <_ZN3halL10Timer_BaseE>:
   104b4:	2000b400 	andcs	fp, r0, r0, lsl #8

000104b8 <_ZN3halL9TRNG_BaseE>:
   104b8:	20104000 	andscs	r4, r0, r0

000104bc <_ZN3halL9BSC0_BaseE>:
   104bc:	20205000 	eorcs	r5, r0, r0

000104c0 <_ZN3halL9BSC1_BaseE>:
   104c0:	20804000 	addcs	r4, r0, r0

000104c4 <_ZN3halL9BSC2_BaseE>:
   104c4:	20805000 	addcs	r5, r0, r0

000104c8 <_ZN3memL9LowMemoryE>:
   104c8:	00020000 	andeq	r0, r2, r0

000104cc <_ZN3memL10HighMemoryE>:
   104cc:	20000000 	andcs	r0, r0, r0

000104d0 <_ZN3memL8PageSizeE>:
   104d0:	00004000 	andeq	r4, r0, r0

000104d4 <_ZN3memL16PagingMemorySizeE>:
   104d4:	1ffe0000 	svcne	0x00fe0000

000104d8 <_ZN3memL9PageCountE>:
   104d8:	00007ff8 	strdeq	r7, [r0], -r8

000104dc <_ZL24Max_Process_Opened_Files>:
   104dc:	00000010 	andeq	r0, r0, r0, lsl r0

000104e0 <_ZL21MaxFSDriverNameLength>:
   104e0:	00000010 	andeq	r0, r0, r0, lsl r0

000104e4 <_ZL17MaxFilenameLength>:
   104e4:	00000010 	andeq	r0, r0, r0, lsl r0

000104e8 <_ZL13MaxPathLength>:
   104e8:	00000080 	andeq	r0, r0, r0, lsl #1

000104ec <_ZL18NoFilesystemDriver>:
   104ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000104f0 <_ZL14Invalid_Handle>:
   104f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000104f4 <_ZN3halL18Default_Clock_RateE>:
   104f4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

000104f8 <_ZN3halL15Peripheral_BaseE>:
   104f8:	20000000 	andcs	r0, r0, r0

000104fc <_ZN3halL9GPIO_BaseE>:
   104fc:	20200000 	eorcs	r0, r0, r0

00010500 <_ZN3halL14GPIO_Pin_CountE>:
   10500:	00000036 	andeq	r0, r0, r6, lsr r0

00010504 <_ZN3halL8AUX_BaseE>:
   10504:	20215000 	eorcs	r5, r1, r0

00010508 <_ZN3halL25Interrupt_Controller_BaseE>:
   10508:	2000b200 	andcs	fp, r0, r0, lsl #4

0001050c <_ZN3halL10Timer_BaseE>:
   1050c:	2000b400 	andcs	fp, r0, r0, lsl #8

00010510 <_ZN3halL9TRNG_BaseE>:
   10510:	20104000 	andscs	r4, r0, r0

00010514 <_ZN3halL9BSC0_BaseE>:
   10514:	20205000 	eorcs	r5, r0, r0

00010518 <_ZN3halL9BSC1_BaseE>:
   10518:	20804000 	addcs	r4, r0, r0

0001051c <_ZN3halL9BSC2_BaseE>:
   1051c:	20805000 	addcs	r5, r0, r0

00010520 <_ZN3memL9LowMemoryE>:
   10520:	00020000 	andeq	r0, r2, r0

00010524 <_ZN3memL10HighMemoryE>:
   10524:	20000000 	andcs	r0, r0, r0

00010528 <_ZN3memL8PageSizeE>:
   10528:	00004000 	andeq	r4, r0, r0

0001052c <_ZN3memL16PagingMemorySizeE>:
   1052c:	1ffe0000 	svcne	0x00fe0000

00010530 <_ZN3memL9PageCountE>:
   10530:	00007ff8 	strdeq	r7, [r0], -r8
   10534:	61657243 	cmnvs	r5, r3, asr #4
   10538:	20646574 	rsbcs	r6, r4, r4, ror r5
   1053c:	636f7270 	cmnvs	pc, #112, 4
   10540:	20737365 	rsbscs	r7, r3, r5, ror #6
   10544:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
   10548:	64697020 	strbtvs	r7, [r9], #-32	; 0xffffffe0
   1054c:	00000020 	andeq	r0, r0, r0, lsr #32
   10550:	00002820 	andeq	r2, r0, r0, lsr #16
   10554:	3d205053 	stccc	0, cr5, [r0, #-332]!	; 0xfffffeb4
   10558:	00783020 	rsbseq	r3, r8, r0, lsr #32
   1055c:	00000a29 	andeq	r0, r0, r9, lsr #20

00010560 <_ZL21MaxFSDriverNameLength>:
   10560:	00000010 	andeq	r0, r0, r0, lsl r0

00010564 <_ZL17MaxFilenameLength>:
   10564:	00000010 	andeq	r0, r0, r0, lsl r0

00010568 <_ZL13MaxPathLength>:
   10568:	00000080 	andeq	r0, r0, r0, lsl #1

0001056c <_ZL18NoFilesystemDriver>:
   1056c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   10570:	6c622049 	stclvs	0, cr2, [r2], #-292	; 0xfffffedc
   10574:	2c6b6e69 	stclcs	14, cr6, [fp], #-420	; 0xfffffe5c
   10578:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
   1057c:	6f666572 	svcvs	0x00666572
   10580:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
   10584:	2e6d6120 	powcsep	f6, f5, f0
   10588:	00000000 	andeq	r0, r0, r0
   1058c:	65732049 	ldrbvs	r2, [r3, #-73]!	; 0xffffffb7
   10590:	65642065 	strbvs	r2, [r4, #-101]!	; 0xffffff9b
   10594:	70206461 	eorvc	r6, r0, r1, ror #8
   10598:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
   1059c:	00002e73 	andeq	r2, r0, r3, ror lr
   105a0:	20656e4f 	rsbcs	r6, r5, pc, asr #28
   105a4:	20555043 	subscs	r5, r5, r3, asr #32
   105a8:	656c7572 	strbvs	r7, [ip, #-1394]!	; 0xfffffa8e
   105ac:	68742073 	ldmdavs	r4!, {r0, r1, r4, r5, r6, sp}^
   105b0:	61206d65 			; <UNDEFINED> instruction: 0x61206d65
   105b4:	002e6c6c 	eoreq	r6, lr, ip, ror #24
   105b8:	6620794d 	strtvs	r7, [r0], -sp, asr #18
   105bc:	756f7661 	strbvc	r7, [pc, #-1633]!	; ff63 <__aeabi_uidivmod+0x1f>
   105c0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
   105c4:	6f707320 	svcvs	0x00707320
   105c8:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
   105cc:	52412073 	subpl	r2, r1, #115	; 0x73
   105d0:	7277204d 	rsbsvc	r2, r7, #77	; 0x4d
   105d4:	6c747365 	ldclvs	3, cr7, [r4], #-404	; 0xfffffe6c
   105d8:	00676e69 	rsbeq	r6, r7, r9, ror #28
   105dc:	20646c4f 	rsbcs	r6, r4, pc, asr #24
   105e0:	4463614d 	strbtmi	r6, [r3], #-333	; 0xfffffeb3
   105e4:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
   105e8:	61682064 	cmnvs	r8, r4, rrx
   105ec:	20612064 	rsbcs	r2, r1, r4, rrx
   105f0:	6d726166 	ldfvse	f6, [r2, #-408]!	; 0xfffffe68
   105f4:	4945202c 	stmdbmi	r5, {r2, r3, r5, sp}^
   105f8:	00505247 	subseq	r5, r0, r7, asr #4
   105fc:	3a564544 	bcc	15a1b14 <_bss_end+0x158fe24>
   10600:	6f697067 	svcvs	0x00697067
   10604:	0038312f 	eorseq	r3, r8, pc, lsr #2
   10608:	636f7270 	cmnvs	pc, #112, 4
   1060c:	20737365 	rsbscs	r7, r3, r5, ror #6
   10610:	69662031 	stmdbvs	r6!, {r0, r4, r5, sp}^
   10614:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   10618:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   1061c:	6f747069 	svcvs	0x00747069
   10620:	203d2072 	eorscs	r2, sp, r2, ror r0
   10624:	00000000 	andeq	r0, r0, r0
   10628:	0000000a 	andeq	r0, r0, sl
   1062c:	00000031 	andeq	r0, r0, r1, lsr r0
   10630:	00000030 	andeq	r0, r0, r0, lsr r0
   10634:	6c6c6548 	cfstr64vs	mvdx6, [ip], #-288	; 0xfffffee0
   10638:	000a216f 	andeq	r2, sl, pc, ror #2
   1063c:	3a564544 	bcc	15a1b54 <_bss_end+0x158fe64>
   10640:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
   10644:	2f726f74 	svccs	0x00726f74
   10648:	00000030 	andeq	r0, r0, r0, lsr r0
   1064c:	3a564544 	bcc	15a1b64 <_bss_end+0x158fe74>
   10650:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
   10654:	00000000 	andeq	r0, r0, r0
   10658:	636f7270 	cmnvs	pc, #112, 4
   1065c:	20737365 	rsbscs	r7, r3, r5, ror #6
   10660:	69662032 	stmdbvs	r6!, {r1, r4, r5, sp}^
   10664:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   10668:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   1066c:	6f747069 	svcvs	0x00747069
   10670:	66282072 			; <UNDEFINED> instruction: 0x66282072
   10674:	203d2029 	eorscs	r2, sp, r9, lsr #32
   10678:	00000000 	andeq	r0, r0, r0
   1067c:	636f7270 	cmnvs	pc, #112, 4
   10680:	20737365 	rsbscs	r7, r3, r5, ror #6
   10684:	69662032 	stmdbvs	r6!, {r1, r4, r5, sp}^
   10688:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   1068c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   10690:	6f747069 	svcvs	0x00747069
   10694:	72282072 	eorvc	r2, r8, #114	; 0x72
   10698:	2966646e 	stmdbcs	r6!, {r1, r2, r3, r5, r6, sl, sp, lr}^
   1069c:	0000203d 	andeq	r2, r0, sp, lsr r0
   106a0:	3a564544 	bcc	15a1bb8 <_bss_end+0x158fec8>
   106a4:	6f697067 	svcvs	0x00697067
   106a8:	0039312f 	eorseq	r3, r9, pc, lsr #2
   106ac:	636f7270 	cmnvs	pc, #112, 4
   106b0:	20737365 	rsbscs	r7, r3, r5, ror #6
   106b4:	69662033 	stmdbvs	r6!, {r0, r1, r4, r5, sp}^
   106b8:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   106bc:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   106c0:	6f747069 	svcvs	0x00747069
   106c4:	203d2072 	eorscs	r2, sp, r2, ror r0
   106c8:	00000000 	andeq	r0, r0, r0
   106cc:	3a564544 	bcc	15a1be4 <_bss_end+0x158fef4>
   106d0:	6f697067 	svcvs	0x00697067
   106d4:	0030322f 	eorseq	r3, r0, pc, lsr #4
   106d8:	636f7270 	cmnvs	pc, #112, 4
   106dc:	20737365 	rsbscs	r7, r3, r5, ror #6
   106e0:	69662034 	stmdbvs	r6!, {r2, r4, r5, sp}^
   106e4:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   106e8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   106ec:	6f747069 	svcvs	0x00747069
   106f0:	203d2072 	eorscs	r2, sp, r2, ror r0
   106f4:	00000000 	andeq	r0, r0, r0
   106f8:	3a564544 	bcc	15a1c10 <_bss_end+0x158ff20>
   106fc:	64676573 	strbtvs	r6, [r7], #-1395	; 0xfffffa8d
   10700:	00000000 	andeq	r0, r0, r0
   10704:	00000034 	andeq	r0, r0, r4, lsr r0
   10708:	636f7270 	cmnvs	pc, #112, 4
   1070c:	20737365 	rsbscs	r7, r3, r5, ror #6
   10710:	69662035 	stmdbvs	r6!, {r0, r2, r4, r5, sp}^
   10714:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
   10718:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   1071c:	6f747069 	svcvs	0x00747069
   10720:	203d2072 	eorscs	r2, sp, r2, ror r0
   10724:	00000000 	andeq	r0, r0, r0
   10728:	3a564544 	bcc	15a1c40 <_bss_end+0x158ff50>
   1072c:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
   10730:	00000000 	andeq	r0, r0, r0
   10734:	2d56494b 	vldrcs.16	s9, [r6, #-150]	; 0xffffff6a	; <UNPREDICTABLE>
   10738:	534f5452 	movtpl	r5, #62546	; 0xf452
   1073c:	696e6920 	stmdbvs	lr!, {r5, r8, fp, sp, lr}^
   10740:	2e2e2e74 	mcrcs	14, 1, r2, cr14, cr4, {3}
   10744:	00000000 	andeq	r0, r0, r0

00010748 <_ZL21MaxFSDriverNameLength>:
   10748:	00000010 	andeq	r0, r0, r0, lsl r0

0001074c <_ZL17MaxFilenameLength>:
   1074c:	00000010 	andeq	r0, r0, r0, lsl r0

00010750 <_ZL13MaxPathLength>:
   10750:	00000080 	andeq	r0, r0, r0, lsl #1

00010754 <_ZL18NoFilesystemDriver>:
   10754:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00010758 <_ZN12_GLOBAL__N_1L11CharConvArrE>:
   10758:	33323130 	teqcc	r2, #48, 2
   1075c:	37363534 			; <UNDEFINED> instruction: 0x37363534
   10760:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
   10764:	46454443 	strbmi	r4, [r5], -r3, asr #8
   10768:	00000000 	andeq	r0, r0, r0

0001076c <_ZL21MaxFSDriverNameLength>:
   1076c:	00000010 	andeq	r0, r0, r0, lsl r0

00010770 <_ZL17MaxFilenameLength>:
   10770:	00000010 	andeq	r0, r0, r0, lsl r0

00010774 <_ZL13MaxPathLength>:
   10774:	00000080 	andeq	r0, r0, r0, lsl #1

00010778 <_ZL18NoFilesystemDriver>:
   10778:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0001077c <_ZN3halL18Default_Clock_RateE>:
   1077c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

00010780 <_ZN3halL15Peripheral_BaseE>:
   10780:	20000000 	andcs	r0, r0, r0

00010784 <_ZN3halL9GPIO_BaseE>:
   10784:	20200000 	eorcs	r0, r0, r0

00010788 <_ZN3halL14GPIO_Pin_CountE>:
   10788:	00000036 	andeq	r0, r0, r6, lsr r0

0001078c <_ZN3halL8AUX_BaseE>:
   1078c:	20215000 	eorcs	r5, r1, r0

00010790 <_ZN3halL25Interrupt_Controller_BaseE>:
   10790:	2000b200 	andcs	fp, r0, r0, lsl #4

00010794 <_ZN3halL10Timer_BaseE>:
   10794:	2000b400 	andcs	fp, r0, r0, lsl #8

00010798 <_ZN3halL9TRNG_BaseE>:
   10798:	20104000 	andscs	r4, r0, r0

0001079c <_ZN3halL9BSC0_BaseE>:
   1079c:	20205000 	eorcs	r5, r0, r0

000107a0 <_ZN3halL9BSC1_BaseE>:
   107a0:	20804000 	addcs	r4, r0, r0

000107a4 <_ZN3halL9BSC2_BaseE>:
   107a4:	20805000 	addcs	r5, r0, r0

000107a8 <_ZN9OLED_FontL10Char_WidthE>:
   107a8:	 	andeq	r0, r8, r6

000107aa <_ZN9OLED_FontL11Char_HeightE>:
   107aa:	 	eoreq	r0, r0, r8

000107ac <_ZN9OLED_FontL10Char_BeginE>:
   107ac:	 	addeq	r0, r0, r0, lsr #32

000107ae <_ZN9OLED_FontL8Char_EndE>:
   107ae:	 	andeq	r0, r1, r0, lsl #1

000107b0 <_ZN9OLED_FontL10Flip_CharsE>:
   107b0:	00000001 	andeq	r0, r0, r1

000107b4 <_ZN9OLED_FontL17OLED_Font_DefaultE>:
	...
   107bc:	00002f00 	andeq	r2, r0, r0, lsl #30
   107c0:	00070000 	andeq	r0, r7, r0
   107c4:	14000007 	strne	r0, [r0], #-7
   107c8:	147f147f 	ldrbtne	r1, [pc], #-1151	; 107d0 <_ZN9OLED_FontL17OLED_Font_DefaultE+0x1c>
   107cc:	7f2a2400 	svcvc	0x002a2400
   107d0:	2300122a 	movwcs	r1, #554	; 0x22a
   107d4:	62640813 	rsbvs	r0, r4, #1245184	; 0x130000
   107d8:	55493600 	strbpl	r3, [r9, #-1536]	; 0xfffffa00
   107dc:	00005022 	andeq	r5, r0, r2, lsr #32
   107e0:	00000305 	andeq	r0, r0, r5, lsl #6
   107e4:	221c0000 	andscs	r0, ip, #0
   107e8:	00000041 	andeq	r0, r0, r1, asr #32
   107ec:	001c2241 	andseq	r2, ip, r1, asr #4
   107f0:	3e081400 	cfcpyscc	mvf1, mvf8
   107f4:	08001408 	stmdaeq	r0, {r3, sl, ip}
   107f8:	08083e08 	stmdaeq	r8, {r3, r9, sl, fp, ip, sp}
   107fc:	a0000000 	andge	r0, r0, r0
   10800:	08000060 	stmdaeq	r0, {r5, r6}
   10804:	08080808 	stmdaeq	r8, {r3, fp}
   10808:	60600000 	rsbvs	r0, r0, r0
   1080c:	20000000 	andcs	r0, r0, r0
   10810:	02040810 	andeq	r0, r4, #16, 16	; 0x100000
   10814:	49513e00 	ldmdbmi	r1, {r9, sl, fp, ip, sp}^
   10818:	00003e45 	andeq	r3, r0, r5, asr #28
   1081c:	00407f42 	subeq	r7, r0, r2, asr #30
   10820:	51614200 	cmnpl	r1, r0, lsl #4
   10824:	21004649 	tstcs	r0, r9, asr #12
   10828:	314b4541 	cmpcc	fp, r1, asr #10
   1082c:	12141800 	andsne	r1, r4, #0, 16
   10830:	2700107f 	smlsdxcs	r0, pc, r0, r1	; <UNPREDICTABLE>
   10834:	39454545 	stmdbcc	r5, {r0, r2, r6, r8, sl, lr}^
   10838:	494a3c00 	stmdbmi	sl, {sl, fp, ip, sp}^
   1083c:	01003049 	tsteq	r0, r9, asr #32
   10840:	03050971 	movweq	r0, #22897	; 0x5971
   10844:	49493600 	stmdbmi	r9, {r9, sl, ip, sp}^
   10848:	06003649 	streq	r3, [r0], -r9, asr #12
   1084c:	1e294949 	vnmulne.f16	s8, s18, s18	; <UNPREDICTABLE>
   10850:	36360000 	ldrtcc	r0, [r6], -r0
   10854:	00000000 	andeq	r0, r0, r0
   10858:	00003656 	andeq	r3, r0, r6, asr r6
   1085c:	22140800 	andscs	r0, r4, #0, 16
   10860:	14000041 	strne	r0, [r0], #-65	; 0xffffffbf
   10864:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
   10868:	22410000 	subcs	r0, r1, #0
   1086c:	02000814 	andeq	r0, r0, #20, 16	; 0x140000
   10870:	06095101 	streq	r5, [r9], -r1, lsl #2
   10874:	59493200 	stmdbpl	r9, {r9, ip, sp}^
   10878:	7c003e51 	stcvc	14, cr3, [r0], {81}	; 0x51
   1087c:	7c121112 	ldfvcs	f1, [r2], {18}
   10880:	49497f00 	stmdbmi	r9, {r8, r9, sl, fp, ip, sp, lr}^
   10884:	3e003649 	cfmadd32cc	mvax2, mvfx3, mvfx0, mvfx9
   10888:	22414141 	subcs	r4, r1, #1073741840	; 0x40000010
   1088c:	41417f00 	cmpmi	r1, r0, lsl #30
   10890:	7f001c22 	svcvc	0x00001c22
   10894:	41494949 	cmpmi	r9, r9, asr #18
   10898:	09097f00 	stmdbeq	r9, {r8, r9, sl, fp, ip, sp, lr}
   1089c:	3e000109 	adfccs	f0, f0, #1.0
   108a0:	7a494941 	bvc	1262dac <_bss_end+0x12510bc>
   108a4:	08087f00 	stmdaeq	r8, {r8, r9, sl, fp, ip, sp, lr}
   108a8:	00007f08 	andeq	r7, r0, r8, lsl #30
   108ac:	00417f41 	subeq	r7, r1, r1, asr #30
   108b0:	41402000 	mrsmi	r2, (UNDEF: 64)
   108b4:	7f00013f 	svcvc	0x0000013f
   108b8:	41221408 			; <UNDEFINED> instruction: 0x41221408
   108bc:	40407f00 	submi	r7, r0, r0, lsl #30
   108c0:	7f004040 	svcvc	0x00004040
   108c4:	7f020c02 	svcvc	0x00020c02
   108c8:	08047f00 	stmdaeq	r4, {r8, r9, sl, fp, ip, sp, lr}
   108cc:	3e007f10 	mcrcc	15, 0, r7, cr0, cr0, {0}
   108d0:	3e414141 	dvfccsm	f4, f1, f1
   108d4:	09097f00 	stmdbeq	r9, {r8, r9, sl, fp, ip, sp, lr}
   108d8:	3e000609 	cfmadd32cc	mvax0, mvfx0, mvfx0, mvfx9
   108dc:	5e215141 	sufplsm	f5, f1, f1
   108e0:	19097f00 	stmdbne	r9, {r8, r9, sl, fp, ip, sp, lr}
   108e4:	46004629 	strmi	r4, [r0], -r9, lsr #12
   108e8:	31494949 	cmpcc	r9, r9, asr #18
   108ec:	7f010100 	svcvc	0x00010100
   108f0:	3f000101 	svccc	0x00000101
   108f4:	3f404040 	svccc	0x00404040
   108f8:	40201f00 	eormi	r1, r0, r0, lsl #30
   108fc:	3f001f20 	svccc	0x00001f20
   10900:	3f403840 	svccc	0x00403840
   10904:	08146300 	ldmdaeq	r4, {r8, r9, sp, lr}
   10908:	07006314 	smladeq	r0, r4, r3, r6
   1090c:	07087008 	streq	r7, [r8, -r8]
   10910:	49516100 	ldmdbmi	r1, {r8, sp, lr}^
   10914:	00004345 	andeq	r4, r0, r5, asr #6
   10918:	0041417f 	subeq	r4, r1, pc, ror r1
   1091c:	552a5500 	strpl	r5, [sl, #-1280]!	; 0xfffffb00
   10920:	0000552a 	andeq	r5, r0, sl, lsr #10
   10924:	007f4141 	rsbseq	r4, pc, r1, asr #2
   10928:	01020400 	tsteq	r2, r0, lsl #8
   1092c:	40000402 	andmi	r0, r0, r2, lsl #8
   10930:	40404040 	submi	r4, r0, r0, asr #32
   10934:	02010000 	andeq	r0, r1, #0
   10938:	20000004 	andcs	r0, r0, r4
   1093c:	78545454 	ldmdavc	r4, {r2, r4, r6, sl, ip, lr}^
   10940:	44487f00 	strbmi	r7, [r8], #-3840	; 0xfffff100
   10944:	38003844 	stmdacc	r0, {r2, r6, fp, ip, sp}
   10948:	20444444 	subcs	r4, r4, r4, asr #8
   1094c:	44443800 	strbmi	r3, [r4], #-2048	; 0xfffff800
   10950:	38007f48 	stmdacc	r0, {r3, r6, r8, r9, sl, fp, ip, sp, lr}
   10954:	18545454 	ldmdane	r4, {r2, r4, r6, sl, ip, lr}^
   10958:	097e0800 	ldmdbeq	lr!, {fp}^
   1095c:	18000201 	stmdane	r0, {r0, r9}
   10960:	7ca4a4a4 	cfstrsvc	mvf10, [r4], #656	; 0x290
   10964:	04087f00 	streq	r7, [r8], #-3840	; 0xfffff100
   10968:	00007804 	andeq	r7, r0, r4, lsl #16
   1096c:	00407d44 	subeq	r7, r0, r4, asr #26
   10970:	84804000 	strhi	r4, [r0], #0
   10974:	7f00007d 	svcvc	0x0000007d
   10978:	00442810 	subeq	r2, r4, r0, lsl r8
   1097c:	7f410000 	svcvc	0x00410000
   10980:	7c000040 	stcvc	0, cr0, [r0], {64}	; 0x40
   10984:	78041804 	stmdavc	r4, {r2, fp, ip}
   10988:	04087c00 	streq	r7, [r8], #-3072	; 0xfffff400
   1098c:	38007804 	stmdacc	r0, {r2, fp, ip, sp, lr}
   10990:	38444444 	stmdacc	r4, {r2, r6, sl, lr}^
   10994:	2424fc00 	strtcs	pc, [r4], #-3072	; 0xfffff400
   10998:	18001824 	stmdane	r0, {r2, r5, fp, ip}
   1099c:	fc182424 	ldc2	4, cr2, [r8], {36}	; 0x24
   109a0:	04087c00 	streq	r7, [r8], #-3072	; 0xfffff400
   109a4:	48000804 	stmdami	r0, {r2, fp}
   109a8:	20545454 	subscs	r5, r4, r4, asr r4
   109ac:	443f0400 	ldrtmi	r0, [pc], #-1024	; 109b4 <_ZN9OLED_FontL17OLED_Font_DefaultE+0x200>
   109b0:	3c002040 	stccc	0, cr2, [r0], {64}	; 0x40
   109b4:	7c204040 	stcvc	0, cr4, [r0], #-256	; 0xffffff00
   109b8:	40201c00 	eormi	r1, r0, r0, lsl #24
   109bc:	3c001c20 	stccc	12, cr1, [r0], {32}
   109c0:	3c403040 	mcrrcc	0, 4, r3, r0, cr0
   109c4:	10284400 	eorne	r4, r8, r0, lsl #8
   109c8:	1c004428 	cfstrsne	mvf4, [r0], {40}	; 0x28
   109cc:	7ca0a0a0 	stcvc	0, cr10, [r0], #640	; 0x280
   109d0:	54644400 	strbtpl	r4, [r4], #-1024	; 0xfffffc00
   109d4:	0000444c 	andeq	r4, r0, ip, asr #8
   109d8:	00007708 	andeq	r7, r0, r8, lsl #14
   109dc:	7f000000 	svcvc	0x00000000
   109e0:	00000000 	andeq	r0, r0, r0
   109e4:	00000877 	andeq	r0, r0, r7, ror r8
   109e8:	10081000 	andne	r1, r8, r0
   109ec:	00000008 	andeq	r0, r0, r8
   109f0:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata._ZTV23COLED_Display_FS_Driver:

000109f4 <_ZTV23COLED_Display_FS_Driver>:
	...
   109fc:	0000d4c8 	andeq	sp, r0, r8, asr #9
   10a00:	0000d4e8 	andeq	sp, r0, r8, ror #9

Disassembly of section .rodata._ZTV18COLED_Display_File:

00010a04 <_ZTV18COLED_Display_File>:
	...
   10a0c:	0000d364 	andeq	sp, r0, r4, ror #6
   10a10:	0000d3a8 	andeq	sp, r0, r8, lsr #7
   10a14:	0000d3dc 	ldrdeq	sp, [r0], -ip
   10a18:	0000d408 	andeq	sp, r0, r8, lsl #8
   10a1c:	0000d444 	andeq	sp, r0, r4, asr #8
   10a20:	0000d49c 	muleq	r0, ip, r4

Disassembly of section .rodata._ZTV15CTRNG_FS_Driver:

00010a24 <_ZTV15CTRNG_FS_Driver>:
	...
   10a2c:	0000d278 	andeq	sp, r0, r8, ror r2
   10a30:	0000d298 	muleq	r0, r8, r2

Disassembly of section .rodata._ZTV10CTRNG_File:

00010a34 <_ZTV10CTRNG_File>:
	...
   10a3c:	0000d068 	andeq	sp, r0, r8, rrx
   10a40:	0000d0ac 	andeq	sp, r0, ip, lsr #1
   10a44:	0000d0e0 	andeq	sp, r0, r0, ror #1
   10a48:	0000d1c8 	andeq	sp, r0, r8, asr #3
   10a4c:	0000d1f4 	strdeq	sp, [r0], -r4
   10a50:	0000d24c 	andeq	sp, r0, ip, asr #4

Disassembly of section .rodata._ZTV25CShift_Register_FS_Driver:

00010a54 <_ZTV25CShift_Register_FS_Driver>:
	...
   10a5c:	0000cfa0 	andeq	ip, r0, r0, lsr #31
   10a60:	0000cfc0 	andeq	ip, r0, r0, asr #31

Disassembly of section .rodata._ZTV20CShift_Register_File:

00010a64 <_ZTV20CShift_Register_File>:
	...
   10a6c:	0000ce08 	andeq	ip, r0, r8, lsl #28
   10a70:	0000ce4c 	andeq	ip, r0, ip, asr #28
   10a74:	0000ce80 	andeq	ip, r0, r0, lsl #29
   10a78:	0000ceac 	andeq	ip, r0, ip, lsr #29
   10a7c:	0000cf1c 	andeq	ip, r0, ip, lsl pc
   10a80:	0000cf74 	andeq	ip, r0, r4, ror pc

Disassembly of section .rodata._ZTV26CSegment_Display_FS_Driver:

00010a84 <_ZTV26CSegment_Display_FS_Driver>:
	...
   10a8c:	0000cd34 	andeq	ip, r0, r4, lsr sp
   10a90:	0000cd54 	andeq	ip, r0, r4, asr sp

Disassembly of section .rodata._ZTV21CSegment_Display_File:

00010a94 <_ZTV21CSegment_Display_File>:
	...
   10a9c:	0000cb70 	andeq	ip, r0, r0, ror fp
   10aa0:	0000cbb4 			; <UNDEFINED> instruction: 0x0000cbb4
   10aa4:	0000cbe8 	andeq	ip, r0, r8, ror #23
   10aa8:	0000cc40 	andeq	ip, r0, r0, asr #24
   10aac:	0000ccb0 			; <UNDEFINED> instruction: 0x0000ccb0
   10ab0:	0000cd08 	andeq	ip, r0, r8, lsl #26

Disassembly of section .rodata._ZTV18CMonitor_FS_Driver:

00010ab4 <_ZTV18CMonitor_FS_Driver>:
	...
   10abc:	0000caa0 	andeq	ip, r0, r0, lsr #21
   10ac0:	0000cac0 	andeq	ip, r0, r0, asr #21

Disassembly of section .rodata._ZTV13CMonitor_File:

00010ac4 <_ZTV13CMonitor_File>:
	...
   10acc:	0000c908 	andeq	ip, r0, r8, lsl #18
   10ad0:	0000c94c 	andeq	ip, r0, ip, asr #18
   10ad4:	0000c980 	andeq	ip, r0, r0, lsl #19
   10ad8:	0000c9ac 	andeq	ip, r0, ip, lsr #19
   10adc:	0000ca14 	andeq	ip, r0, r4, lsl sl
   10ae0:	0000ca5c 	andeq	ip, r0, ip, asr sl

Disassembly of section .rodata._ZTV15CGPIO_FS_Driver:

00010ae4 <_ZTV15CGPIO_FS_Driver>:
	...
   10aec:	0000c744 	andeq	ip, r0, r4, asr #14
   10af0:	0000c764 	andeq	ip, r0, r4, ror #14

Disassembly of section .rodata._ZTV10CGPIO_File:

00010af4 <_ZTV10CGPIO_File>:
	...
   10afc:	0000c508 	andeq	ip, r0, r8, lsl #10
   10b00:	0000c54c 	andeq	ip, r0, ip, asr #10
   10b04:	0000c580 	andeq	ip, r0, r0, lsl #11
   10b08:	0000c600 	andeq	ip, r0, r0, lsl #12
   10b0c:	0000c67c 	andeq	ip, r0, ip, ror r6
   10b10:	0000c718 	andeq	ip, r0, r8, lsl r7

Disassembly of section .rodata._ZTV5IFile:

00010b14 <_ZTV5IFile>:
	...
   10b1c:	0000c424 	andeq	ip, r0, r4, lsr #8
   10b20:	0000c458 	andeq	ip, r0, r8, asr r4
   10b24:	0000c318 	andeq	ip, r0, r8, lsl r3
   10b28:	0000c344 	andeq	ip, r0, r4, asr #6
   10b2c:	0000c370 	andeq	ip, r0, r0, ror r3
   10b30:	0000c394 	muleq	r0, r4, r3

Disassembly of section .ARM.exidx.text._Znaj:

00010b34 <.ARM.exidx.text._Znaj>:
   10b34:	7ffff220 	svcvc	0x00fff220
   10b38:	00000001 	andeq	r0, r0, r1

Disassembly of section .data:

00010b3c <__CTOR_LIST__>:
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/libgcc2.c:2355
   10b3c:	000089f4 	strdeq	r8, [r0], -r4
   10b40:	000090bc 	strheq	r9, [r0], -ip
   10b44:	00009780 	andeq	r9, r0, r0, lsl #15
   10b48:	0000ab84 	andeq	sl, r0, r4, lsl #23
   10b4c:	0000af64 	andeq	sl, r0, r4, ror #30
   10b50:	0000b528 	andeq	fp, r0, r8, lsr #10
   10b54:	0000b7b8 			; <UNDEFINED> instruction: 0x0000b7b8
   10b58:	0000ba38 	andeq	fp, r0, r8, lsr sl
   10b5c:	0000c294 	muleq	r0, r4, r2
   10b60:	0000d824 	andeq	sp, r0, r4, lsr #16
   10b64:	0000dc38 	andeq	sp, r0, r8, lsr ip
   10b68:	0000dedc 	ldrdeq	sp, [r0], -ip
   10b6c:	0000eab0 			; <UNDEFINED> instruction: 0x0000eab0

00010b70 <__DTOR_LIST__>:
__DTOR_END__():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:120
};

CGPIO_FS_Driver fsGPIO_FS_Driver;
   10b70:	00010aec 	andeq	r0, r1, ip, ror #21

00010b74 <fsMonitor_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:88
};

CMonitor_FS_Driver fsMonitor_FS_Driver;
   10b74:	00010abc 			; <UNDEFINED> instruction: 0x00010abc

00010b78 <fsSegment_Display_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:86
};

CSegment_Display_FS_Driver fsSegment_Display_FS_Driver;
   10b78:	00010a8c 	andeq	r0, r1, ip, lsl #21

00010b7c <fsShift_Register_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:82
};

CShift_Register_FS_Driver fsShift_Register_FS_Driver;
   10b7c:	00010a5c 	andeq	r0, r1, ip, asr sl

00010b80 <fsTRNG_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:89
};

CTRNG_FS_Driver fsTRNG_FS_Driver;
   10b80:	00010a2c 	andeq	r0, r1, ip, lsr #20

00010b84 <fsOLED_Display_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/oled_ssd1306_fs.h:80
};

COLED_Display_FS_Driver fsOLED_Display_FS_Driver;
   10b84:	000109fc 	strdeq	r0, [r1], -ip

00010b88 <messages>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:7
const char* messages[] = {
   10b88:	00010570 	andeq	r0, r1, r0, ror r5
   10b8c:	0001058c 	andeq	r0, r1, ip, lsl #11
   10b90:	000105a0 	andeq	r0, r1, r0, lsr #11
   10b94:	000105b8 			; <UNDEFINED> instruction: 0x000105b8
   10b98:	000105dc 	ldrdeq	r0, [r1], -ip

Disassembly of section .bss:

00010b9c <sGPIO>:
	...

00010bb0 <sI2C1>:
	...

00010bd4 <sMonitor>:
	...

00010bec <_ZZN8CMonitorlsEjE8s_buffer>:
	...

00010bfc <sDisplay_SSD1306>:
	...

00010c10 <sSegment_Display>:
_ZZN8CMonitorlsEjE8s_buffer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
   10c10:	00000000 	andeq	r0, r0, r0

00010c14 <sShift_Register>:
	...

00010c24 <sTimer>:
	...

00010c2c <sTRNG>:
	...

00010c34 <sFilesystem>:
	...

00010cc4 <sInterruptCtl>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:9
CInterrupt_Controller sInterruptCtl(hal::Interrupt_Controller_Base);
   10cc4:	00000000 	andeq	r0, r0, r0

00010cc8 <_ZL11_SWI_Result>:
	...

00010cd0 <sKernelMem>:
_ZL11_SWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:4
CKernel_Heap_Manager sKernelMem;
   10cd0:	00000000 	andeq	r0, r0, r0

00010cd4 <sPage_Manager>:
	...

00011cd4 <sProcessMgr>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000126 	andeq	r0, r0, r6, lsr #2
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000014 	andeq	r0, r0, r4, lsl r0
      10:	00011204 	andeq	r1, r1, r4, lsl #4
      14:	0000c500 	andeq	ip, r0, r0, lsl #10
      18:	0080ac00 	addeq	sl, r0, r0, lsl #24
      1c:	0000d800 	andeq	sp, r0, r0, lsl #16
      20:	00000000 	andeq	r0, r0, r0
      24:	01a60200 			; <UNDEFINED> instruction: 0x01a60200
      28:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
      2c:	00817811 	addeq	r7, r1, r1, lsl r8
      30:	00000c00 	andeq	r0, r0, r0, lsl #24
      34:	029c0100 	addseq	r0, ip, #0, 2
      38:	00000193 	muleq	r0, r3, r1
      3c:	60112301 	andsvs	r2, r1, r1, lsl #6
      40:	18000081 	stmdane	r0, {r0, r7}
      44:	01000000 	mrseq	r0, (UNDEF: 0)
      48:	0167029c 			; <UNDEFINED> instruction: 0x0167029c
      4c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
      50:	00814811 	addeq	r4, r1, r1, lsl r8
      54:	00001800 	andeq	r1, r0, r0, lsl #16
      58:	029c0100 	addseq	r0, ip, #0, 2
      5c:	0000015a 	andeq	r0, r0, sl, asr r1
      60:	30111901 	andscc	r1, r1, r1, lsl #18
      64:	18000081 	stmdane	r0, {r0, r7}
      68:	01000000 	mrseq	r0, (UNDEF: 0)
      6c:	0188039c 			; <UNDEFINED> instruction: 0x0188039c
      70:	00020000 	andeq	r0, r2, r0
      74:	000000bb 	strheq	r0, [r0], -fp
      78:	00010004 	andeq	r0, r1, r4
      7c:	15140100 	ldrne	r0, [r4, #-256]	; 0xffffff00
      80:	0000008a 	andeq	r0, r0, sl, lsl #1
      84:	0000bb05 	andeq	fp, r0, r5, lsl #22
      88:	bd060000 	stclt	0, cr0, [r6, #-0]
      8c:	01000001 	tsteq	r0, r1
      90:	00c11f04 	sbceq	r1, r1, r4, lsl #30
      94:	00040000 	andeq	r0, r4, r0
      98:	01000000 	mrseq	r0, (UNDEF: 0)
      9c:	00a8150f 	adceq	r1, r8, pc, lsl #10
      a0:	bb050000 	bllt	1400a8 <_bss_end+0x12e3b8>
      a4:	00000000 	andeq	r0, r0, r0
      a8:	00017407 	andeq	r7, r1, r7, lsl #8
      ac:	140a0100 	strne	r0, [sl], #-256	; 0xffffff00
      b0:	00000105 	andeq	r0, r0, r5, lsl #2
      b4:	0000bb05 	andeq	fp, r0, r5, lsl #22
      b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      bc:	00008a04 	andeq	r8, r0, r4, lsl #20
      c0:	05080900 	streq	r0, [r8, #-2304]	; 0xfffff700
      c4:	000001c5 	andeq	r0, r0, r5, asr #3
      c8:	0000780a 	andeq	r7, r0, sl, lsl #16
      cc:	00811000 	addeq	r1, r1, r0
      d0:	00002000 	andeq	r2, r0, r0
      d4:	e49c0100 	ldr	r0, [ip], #256	; 0x100
      d8:	0b000000 	bleq	e0 <CPSR_IRQ_INHIBIT+0x60>
      dc:	000000bb 	strheq	r0, [r0], -fp
      e0:	00749102 	rsbseq	r9, r4, r2, lsl #2
      e4:	0000960a 	andeq	r9, r0, sl, lsl #12
      e8:	0080e400 	addeq	lr, r0, r0, lsl #8
      ec:	00002c00 	andeq	r2, r0, r0, lsl #24
      f0:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
      f4:	0c000001 	stceq	0, cr0, [r0], {1}
      f8:	0f010067 	svceq	0x00010067
      fc:	0000bb32 	andeq	fp, r0, r2, lsr fp
     100:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     104:	05040d00 	streq	r0, [r4, #-3328]	; 0xfffff300
     108:	00746e69 	rsbseq	r6, r4, r9, ror #28
     10c:	0000a80e 	andeq	sl, r0, lr, lsl #16
     110:	0080ac00 	addeq	sl, r0, r0, lsl #24
     114:	00003800 	andeq	r3, r0, r0, lsl #16
     118:	0c9c0100 	ldfeqs	f0, [ip], {0}
     11c:	0a010067 	beq	402c0 <_bss_end+0x2e5d0>
     120:	0000bb31 	andeq	fp, r0, r1, lsr fp
     124:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     128:	09150000 	ldmdbeq	r5, {}	; <UNPREDICTABLE>
     12c:	00040000 	andeq	r0, r4, r0
     130:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     134:	00140104 	andseq	r0, r4, r4, lsl #2
     138:	5c040000 	stcpl	0, cr0, [r4], {-0}
     13c:	c5000006 	strgt	r0, [r0, #-6]
     140:	84000000 	strhi	r0, [r0], #-0
     144:	8c000081 	stchi	0, cr0, [r0], {129}	; 0x81
     148:	a9000008 	stmdbge	r0, {r3}
     14c:	02000000 	andeq	r0, r0, #0
     150:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
     154:	02020000 	andeq	r0, r2, #0
     158:	00059905 	andeq	r9, r5, r5, lsl #18
     15c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
     160:	00746e69 	rsbseq	r6, r4, r9, ror #28
     164:	6a080102 	bvs	200574 <_bss_end+0x1ee884>
     168:	02000005 	andeq	r0, r0, #5
     16c:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
     170:	e4040000 	str	r0, [r4], #-0
     174:	04000005 	streq	r0, [r0], #-5
     178:	00590709 	subseq	r0, r9, r9, lsl #14
     17c:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
     180:	02000000 	andeq	r0, r0, #0
     184:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
     188:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
     18c:	06000000 	streq	r0, [r0], -r0
     190:	00000059 	andeq	r0, r0, r9, asr r0
     194:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
     198:	0b050200 	bleq	1409a0 <_bss_end+0x12ecb0>
     19c:	000001e5 	andeq	r0, r0, r5, ror #3
     1a0:	00048708 	andeq	r8, r4, r8, lsl #14
     1a4:	1c070200 	sfmne	f0, 4, [r7], {-0}
     1a8:	00000060 	andeq	r0, r0, r0, rrx
     1ac:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
     1b0:	0005cc08 	andeq	ip, r5, r8, lsl #24
     1b4:	1d0a0200 	sfmne	f0, 4, [sl, #-0]
     1b8:	000001f1 	strdeq	r0, [r0], -r1
     1bc:	20000000 	andcs	r0, r0, r0
     1c0:	00045208 	andeq	r5, r4, r8, lsl #4
     1c4:	1d0d0200 	sfmne	f0, 4, [sp, #-0]
     1c8:	000001f1 	strdeq	r0, [r0], -r1
     1cc:	20200000 	eorcs	r0, r0, r0
     1d0:	00058a09 	andeq	r8, r5, r9, lsl #20
     1d4:	18100200 	ldmdane	r0, {r9}
     1d8:	00000054 	andeq	r0, r0, r4, asr r0
     1dc:	03f90a36 	mvnseq	r0, #221184	; 0x36000
     1e0:	04050000 	streq	r0, [r5], #-0
     1e4:	00000033 	andeq	r0, r0, r3, lsr r0
     1e8:	74101302 	ldrvc	r1, [r0], #-770	; 0xfffffcfe
     1ec:	0b000001 	bleq	1f8 <CPSR_IRQ_INHIBIT+0x178>
     1f0:	0000037c 	andeq	r0, r0, ip, ror r3
     1f4:	03840b00 	orreq	r0, r4, #0, 22
     1f8:	0b010000 	bleq	40200 <_bss_end+0x2e510>
     1fc:	0000038c 	andeq	r0, r0, ip, lsl #7
     200:	03940b02 	orrseq	r0, r4, #2048	; 0x800
     204:	0b030000 	bleq	c020c <_bss_end+0xae51c>
     208:	0000039c 	muleq	r0, ip, r3
     20c:	03a40b04 			; <UNDEFINED> instruction: 0x03a40b04
     210:	0b050000 	bleq	140218 <_bss_end+0x12e528>
     214:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     218:	02f70b07 	rscseq	r0, r7, #7168	; 0x1c00
     21c:	0b080000 	bleq	200224 <_bss_end+0x1ee534>
     220:	00000408 	andeq	r0, r0, r8, lsl #8
     224:	040f0b0a 	streq	r0, [pc], #-2826	; 22c <CPSR_IRQ_INHIBIT+0x1ac>
     228:	0b0b0000 	bleq	2c0230 <_bss_end+0x2ae540>
     22c:	0000031e 	andeq	r0, r0, lr, lsl r3
     230:	03250b0d 			; <UNDEFINED> instruction: 0x03250b0d
     234:	0b0e0000 	bleq	38023c <_bss_end+0x36e54c>
     238:	00000640 	andeq	r0, r0, r0, asr #12
     23c:	06470b10 			; <UNDEFINED> instruction: 0x06470b10
     240:	0b110000 	bleq	440248 <_bss_end+0x42e558>
     244:	00000479 	andeq	r0, r0, r9, ror r4
     248:	04800b13 	streq	r0, [r0], #2835	; 0xb13
     24c:	0b140000 	bleq	500254 <_bss_end+0x4ee564>
     250:	0000064e 	andeq	r0, r0, lr, asr #12
     254:	06550b16 			; <UNDEFINED> instruction: 0x06550b16
     258:	0b170000 	bleq	5c0260 <_bss_end+0x5ae570>
     25c:	0000055c 	andeq	r0, r0, ip, asr r5
     260:	05630b19 	strbeq	r0, [r3, #-2841]!	; 0xfffff4e7
     264:	0b1a0000 	bleq	68026c <_bss_end+0x66e57c>
     268:	000002e2 	andeq	r0, r0, r2, ror #5
     26c:	02e90b1c 	rsceq	r0, r9, #28, 22	; 0x7000
     270:	0b1d0000 	bleq	740278 <_bss_end+0x72e588>
     274:	00000509 	andeq	r0, r0, r9, lsl #10
     278:	05110b1f 	ldreq	r0, [r1, #-2847]	; 0xfffff4e1
     27c:	0b200000 	bleq	800284 <_bss_end+0x7ee594>
     280:	000006dc 	ldrdeq	r0, [r0], -ip
     284:	06e40b22 	strbteq	r0, [r4], r2, lsr #22
     288:	0b230000 	bleq	8c0290 <_bss_end+0x8ae5a0>
     28c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
     290:	029c0b25 	addseq	r0, ip, #37888	; 0x9400
     294:	0b260000 	bleq	98029c <_bss_end+0x96e5ac>
     298:	000002a6 	andeq	r0, r0, r6, lsr #5
     29c:	73080027 	movwvc	r0, #32807	; 0x8027
     2a0:	02000003 	andeq	r0, r0, #3
     2a4:	01f11d42 	mvnseq	r1, r2, asr #26
     2a8:	50000000 	andpl	r0, r0, r0
     2ac:	4a082021 	bmi	208338 <_bss_end+0x1f6648>
     2b0:	02000003 	andeq	r0, r0, #3
     2b4:	01f11d71 	mvnseq	r1, r1, ror sp
     2b8:	b2000000 	andlt	r0, r0, #0
     2bc:	b6082000 	strlt	r2, [r8], -r0
     2c0:	02000002 	andeq	r0, r0, #2
     2c4:	01f11da4 	mvnseq	r1, r4, lsr #27
     2c8:	b4000000 	strlt	r0, [r0], #-0
     2cc:	64082000 	strvs	r2, [r8], #-0
     2d0:	02000003 	andeq	r0, r0, #3
     2d4:	01f11db3 	ldrheq	r1, [r1, #211]!	; 0xd3
     2d8:	40000000 	andmi	r0, r0, r0
     2dc:	31082010 	tstcc	r8, r0, lsl r0
     2e0:	02000003 	andeq	r0, r0, #3
     2e4:	01f11dbe 	ldrheq	r1, [r1, #222]!	; 0xde
     2e8:	50000000 	andpl	r0, r0, r0
     2ec:	ef082020 	svc	0x00082020
     2f0:	02000003 	andeq	r0, r0, #3
     2f4:	01f11dbf 	ldrheq	r1, [r1, #223]!	; 0xdf
     2f8:	40000000 	andmi	r0, r0, r0
     2fc:	5c082080 	stcpl	0, cr2, [r8], {128}	; 0x80
     300:	02000004 	andeq	r0, r0, #4
     304:	01f11dc0 	mvnseq	r1, r0, asr #27
     308:	50000000 	andpl	r0, r0, r0
     30c:	0c002080 	stceq	0, cr2, [r0], {128}	; 0x80
     310:	00000076 	andeq	r0, r0, r6, ror r0
     314:	8c070402 	cfstrshi	mvf0, [r7], {2}
     318:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
     31c:	000001ea 	andeq	r0, r0, sl, ror #3
     320:	0000860c 	andeq	r8, r0, ip, lsl #12
     324:	00960c00 	addseq	r0, r6, r0, lsl #24
     328:	a60c0000 	strge	r0, [ip], -r0
     32c:	0c000000 	stceq	0, cr0, [r0], {-0}
     330:	00000174 	andeq	r0, r0, r4, ror r1
     334:	0001840c 	andeq	r8, r1, ip, lsl #8
     338:	01940c00 	orrseq	r0, r4, r0, lsl #24
     33c:	a40c0000 	strge	r0, [ip], #-0
     340:	0c000001 	stceq	0, cr0, [r0], {1}
     344:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
     348:	0001c40c 	andeq	ip, r1, ip, lsl #8
     34c:	01d40c00 	bicseq	r0, r4, r0, lsl #24
     350:	4d0a0000 	stcmi	0, cr0, [sl, #-0]
     354:	07000005 	streq	r0, [r0, -r5]
     358:	00005904 	andeq	r5, r0, r4, lsl #18
     35c:	0c070300 	stceq	3, cr0, [r7], {-0}
     360:	00000271 	andeq	r0, r0, r1, ror r2
     364:	0002dc0b 	andeq	sp, r2, fp, lsl #24
     368:	1d0b0000 	stcne	0, cr0, [fp, #-0]
     36c:	01000005 	tsteq	r0, r5
     370:	0002150b 	andeq	r1, r2, fp, lsl #10
     374:	0f0b0200 	svceq	0x000b0200
     378:	03000002 	movweq	r0, #2
     37c:	0001f70b 	andeq	pc, r1, fp, lsl #14
     380:	fd0b0400 	stc2	4, cr0, [fp, #-0]
     384:	05000001 	streq	r0, [r0, #-1]
     388:	0002030b 	andeq	r0, r2, fp, lsl #6
     38c:	090b0600 	stmdbeq	fp, {r9, sl}
     390:	07000002 	streq	r0, [r0, -r2]
     394:	0007280b 	andeq	r2, r7, fp, lsl #16
     398:	0d000800 	stceq	8, cr0, [r0, #-0]
     39c:	0000071a 	andeq	r0, r0, sl, lsl r7
     3a0:	071b0314 			; <UNDEFINED> instruction: 0x071b0314
     3a4:	0000046c 	andeq	r0, r0, ip, ror #8
     3a8:	0004020e 	andeq	r0, r4, lr, lsl #4
     3ac:	221f0300 	andscs	r0, pc, #0, 6
     3b0:	00000477 	andeq	r0, r0, r7, ror r4
     3b4:	02c10e00 	sbceq	r0, r1, #0, 28
     3b8:	22030000 	andcs	r0, r3, #0
     3bc:	00047c0e 	andeq	r7, r4, lr, lsl #24
     3c0:	f10e0400 			; <UNDEFINED> instruction: 0xf10e0400
     3c4:	03000004 	movweq	r0, #4
     3c8:	047c0e24 	ldrbteq	r0, [ip], #-3620	; 0xfffff1dc
     3cc:	0f0c0000 	svceq	0x000c0000
     3d0:	0000043e 	andeq	r0, r0, lr, lsr r4
     3d4:	ac0a2803 	stcge	8, cr2, [sl], {3}
     3d8:	8c000003 	stchi	0, cr0, [r0], {3}
     3dc:	02000004 	andeq	r0, r0, #4
     3e0:	000002be 			; <UNDEFINED> instruction: 0x000002be
     3e4:	000002d3 	ldrdeq	r0, [r0], -r3
     3e8:	00049310 	andeq	r9, r4, r0, lsl r3
     3ec:	00481100 	subeq	r1, r8, r0, lsl #2
     3f0:	9e110000 	cdpls	0, 1, cr0, cr1, cr0, {0}
     3f4:	11000004 	tstne	r0, r4
     3f8:	0000049e 	muleq	r0, lr, r4
     3fc:	04de0f00 	ldrbeq	r0, [lr], #3840	; 0xf00
     400:	2a030000 	bcs	c0408 <_bss_end+0xae718>
     404:	0004af0a 	andeq	sl, r4, sl, lsl #30
     408:	00048c00 	andeq	r8, r4, r0, lsl #24
     40c:	02ec0200 	rsceq	r0, ip, #0, 4
     410:	03010000 	movweq	r0, #4096	; 0x1000
     414:	93100000 	tstls	r0, #0
     418:	11000004 	tstne	r0, r4
     41c:	00000048 	andeq	r0, r0, r8, asr #32
     420:	00049e11 	andeq	r9, r4, r1, lsl lr
     424:	049e1100 	ldreq	r1, [lr], #256	; 0x100
     428:	0f000000 	svceq	0x00000000
     42c:	0000062d 	andeq	r0, r0, sp, lsr #12
     430:	ad0a2c03 	stcge	12, cr2, [sl, #-12]
     434:	8c000006 	stchi	0, cr0, [r0], {6}
     438:	02000004 	andeq	r0, r0, #4
     43c:	0000031a 	andeq	r0, r0, sl, lsl r3
     440:	0000032f 	andeq	r0, r0, pc, lsr #6
     444:	00049310 	andeq	r9, r4, r0, lsl r3
     448:	00481100 	subeq	r1, r8, r0, lsl #2
     44c:	9e110000 	cdpls	0, 1, cr0, cr1, cr0, {0}
     450:	11000004 	tstne	r0, r4
     454:	0000049e 	muleq	r0, lr, r4
     458:	04660f00 	strbteq	r0, [r6], #-3840	; 0xfffff100
     45c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     460:	0005fe0a 	andeq	pc, r5, sl, lsl #28
     464:	00048c00 	andeq	r8, r4, r0, lsl #24
     468:	03480200 	movteq	r0, #33280	; 0x8200
     46c:	035d0000 	cmpeq	sp, #0
     470:	93100000 	tstls	r0, #0
     474:	11000004 	tstne	r0, r4
     478:	00000048 	andeq	r0, r0, r8, asr #32
     47c:	00049e11 	andeq	r9, r4, r1, lsl lr
     480:	049e1100 	ldreq	r1, [lr], #256	; 0x100
     484:	0f000000 	svceq	0x00000000
     488:	0000071a 	andeq	r0, r0, sl, lsl r7
     48c:	b5053103 	strlt	r3, [r5, #-259]	; 0xfffffefd
     490:	a4000005 	strge	r0, [r0], #-5
     494:	01000004 	tsteq	r0, r4
     498:	00000376 	andeq	r0, r0, r6, ror r3
     49c:	00000381 	andeq	r0, r0, r1, lsl #7
     4a0:	0004a410 	andeq	sl, r4, r0, lsl r4
     4a4:	00591100 	subseq	r1, r9, r0, lsl #2
     4a8:	12000000 	andne	r0, r0, #0
     4ac:	0000028a 	andeq	r0, r0, sl, lsl #5
     4b0:	240a3403 	strcs	r3, [sl], #-1027	; 0xfffffbfd
     4b4:	01000005 	tsteq	r0, r5
     4b8:	00000396 	muleq	r0, r6, r3
     4bc:	000003a6 	andeq	r0, r0, r6, lsr #7
     4c0:	0004a410 	andeq	sl, r4, r0, lsl r4
     4c4:	00481100 	subeq	r1, r8, r0, lsl #2
     4c8:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
     4cc:	00000002 	andeq	r0, r0, r2
     4d0:	0005780f 	andeq	r7, r5, pc, lsl #16
     4d4:	14360300 	ldrtne	r0, [r6], #-768	; 0xfffffd00
     4d8:	000006ec 	andeq	r0, r0, ip, ror #13
     4dc:	00000228 	andeq	r0, r0, r8, lsr #4
     4e0:	0003bf01 	andeq	fp, r3, r1, lsl #30
     4e4:	0003ca00 	andeq	ip, r3, r0, lsl #20
     4e8:	04931000 	ldreq	r1, [r3], #0
     4ec:	48110000 	ldmdami	r1, {}	; <UNPREDICTABLE>
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00051912 	andeq	r1, r5, r2, lsl r9
     4f8:	0a390300 	beq	e41100 <_bss_end+0xe2f410>
     4fc:	00000416 	andeq	r0, r0, r6, lsl r4
     500:	0003df01 	andeq	sp, r3, r1, lsl #30
     504:	0003ef00 	andeq	lr, r3, r0, lsl #30
     508:	04a41000 	strteq	r1, [r4], #0
     50c:	48110000 	ldmdami	r1, {}	; <UNPREDICTABLE>
     510:	11000000 	mrsne	r0, (UNDEF: 0)
     514:	0000048c 	andeq	r0, r0, ip, lsl #9
     518:	02d80f00 	sbcseq	r0, r8, #0, 30
     51c:	3c030000 	stccc	0, cr0, [r3], {-0}
     520:	00026b0a 	andeq	r6, r2, sl, lsl #22
     524:	00048c00 	andeq	r8, r4, r0, lsl #24
     528:	04080100 	streq	r0, [r8], #-256	; 0xffffff00
     52c:	04130000 	ldreq	r0, [r3], #-0
     530:	a4100000 	ldrge	r0, [r0], #-0
     534:	11000004 	tstne	r0, r4
     538:	00000048 	andeq	r0, r0, r8, asr #32
     53c:	05ed0f00 	strbeq	r0, [sp, #3840]!	; 0xf00
     540:	3f030000 	svccc	0x00030000
     544:	0001d30a 	andeq	sp, r1, sl, lsl #6
     548:	00048c00 	andeq	r8, r4, r0, lsl #24
     54c:	042c0100 	strteq	r0, [ip], #-256	; 0xffffff00
     550:	04410000 	strbeq	r0, [r1], #-0
     554:	a4100000 	ldrge	r0, [r0], #-0
     558:	11000004 	tstne	r0, r4
     55c:	00000048 	andeq	r0, r0, r8, asr #32
     560:	00048c11 	andeq	r8, r4, r1, lsl ip
     564:	048c1100 	streq	r1, [ip], #256	; 0x100
     568:	13000000 	movwne	r0, #0
     56c:	000005a3 	andeq	r0, r0, r3, lsr #11
     570:	fe0a4103 	cdp2	1, 0, cr4, cr10, cr3, {0}
     574:	8c000002 	stchi	0, cr0, [r0], {2}
     578:	01000004 	tsteq	r0, r4
     57c:	00000456 	andeq	r0, r0, r6, asr r4
     580:	0004a410 	andeq	sl, r4, r0, lsl r4
     584:	00481100 	subeq	r1, r8, r0, lsl #2
     588:	8c110000 	ldchi	0, cr0, [r1], {-0}
     58c:	11000004 	tstne	r0, r4
     590:	0000048c 	andeq	r0, r0, ip, lsl #9
     594:	71050000 	mrsvc	r0, (UNDEF: 5)
     598:	14000002 	strne	r0, [r0], #-2
     59c:	00006504 	andeq	r6, r0, r4, lsl #10
     5a0:	04710500 	ldrbteq	r0, [r1], #-1280	; 0xfffffb00
     5a4:	48150000 	ldmdami	r5, {}	; <UNPREDICTABLE>
     5a8:	8c000000 	stchi	0, cr0, [r0], {-0}
     5ac:	16000004 	strne	r0, [r0], -r4
     5b0:	00000059 	andeq	r0, r0, r9, asr r0
     5b4:	01020001 	tsteq	r2, r1
     5b8:	00454802 	subeq	r4, r5, r2, lsl #16
     5bc:	6c041400 	cfstrsvs	mvf1, [r4], {-0}
     5c0:	05000004 	streq	r0, [r0, #-4]
     5c4:	00000493 	muleq	r0, r3, r4
     5c8:	00480417 	subeq	r0, r8, r7, lsl r4
     5cc:	04140000 	ldreq	r0, [r4], #-0
     5d0:	00000271 	andeq	r0, r0, r1, ror r2
     5d4:	0004a405 	andeq	sl, r4, r5, lsl #8
     5d8:	04a91800 	strteq	r1, [r9], #2048	; 0x800
     5dc:	45030000 	strmi	r0, [r3, #-0]
     5e0:	00027116 	andeq	r7, r2, r6, lsl r1
     5e4:	04af1900 	strteq	r1, [pc], #2304	; 5ec <CPSR_IRQ_INHIBIT+0x56c>
     5e8:	06010000 	streq	r0, [r1], -r0
     5ec:	9c03050f 	cfstr32ls	mvfx0, [r3], {15}
     5f0:	1a00010b 	bne	a24 <CPSR_IRQ_INHIBIT+0x9a4>
     5f4:	0000049a 	muleq	r0, sl, r4
     5f8:	000089f4 	strdeq	r8, [r0], -r4
     5fc:	0000001c 	andeq	r0, r0, ip, lsl r0
     600:	411b9c01 	tstmi	fp, r1, lsl #24
     604:	a0000002 	andge	r0, r0, r2
     608:	54000089 	strpl	r0, [r0], #-137	; 0xffffff77
     60c:	01000000 	mrseq	r0, (UNDEF: 0)
     610:	00050a9c 	muleq	r5, ip, sl
     614:	033b1c00 	teqeq	fp, #0, 24
     618:	97010000 	strls	r0, [r1, -r0]
     61c:	00003301 	andeq	r3, r0, r1, lsl #6
     620:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     624:	0007341c 	andeq	r3, r7, ip, lsl r4
     628:	01970100 	orrseq	r0, r7, r0, lsl #2
     62c:	00000033 	andeq	r0, r0, r3, lsr r0
     630:	00709102 	rsbseq	r9, r0, r2, lsl #2
     634:	0004411d 	andeq	r4, r4, sp, lsl r1
     638:	06850100 	streq	r0, [r5], r0, lsl #2
     63c:	00000524 	andeq	r0, r0, r4, lsr #10
     640:	00008800 	andeq	r8, r0, r0, lsl #16
     644:	000001a0 	andeq	r0, r0, r0, lsr #3
     648:	057c9c01 	ldrbeq	r9, [ip, #-3073]!	; 0xfffff3ff
     64c:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
     650:	aa000003 	bge	664 <CPSR_IRQ_INHIBIT+0x5e4>
     654:	02000004 	andeq	r0, r0, #4
     658:	701f5c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     65c:	01006e69 	tsteq	r0, r9, ror #28
     660:	00482785 	subeq	r2, r8, r5, lsl #15
     664:	91020000 	mrsls	r0, (UNDEF: 2)
     668:	07151c58 			; <UNDEFINED> instruction: 0x07151c58
     66c:	85010000 	strhi	r0, [r1, #-0]
     670:	00048c31 	andeq	r8, r4, r1, lsr ip
     674:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
     678:	0004381c 	andeq	r3, r4, ip, lsl r8
     67c:	3c850100 	stfccs	f0, [r5], {0}
     680:	0000048c 	andeq	r0, r0, ip, lsl #9
     684:	20569102 	subscs	r9, r6, r2, lsl #2
     688:	000005ac 	andeq	r0, r0, ip, lsr #11
     68c:	480e8701 	stmdami	lr, {r0, r8, r9, sl, pc}
     690:	02000000 	andeq	r0, r0, #0
     694:	dc206491 	cfstrsle	mvf6, [r0], #-580	; 0xfffffdbc
     698:	01000005 	tsteq	r0, r5
     69c:	00480e88 	subeq	r0, r8, r8, lsl #29
     6a0:	91020000 	mrsls	r0, (UNDEF: 2)
     6a4:	131d0060 	tstne	sp, #96	; 0x60
     6a8:	01000004 	tsteq	r0, r4
     6ac:	0596066f 	ldreq	r0, [r6, #1647]	; 0x66f
     6b0:	86680000 	strbthi	r0, [r8], -r0
     6b4:	01980000 	orrseq	r0, r8, r0
     6b8:	9c010000 	stcls	0, cr0, [r1], {-0}
     6bc:	000005ee 	andeq	r0, r0, lr, ror #11
     6c0:	00032c1e 	andeq	r2, r3, lr, lsl ip
     6c4:	0004aa00 	andeq	sl, r4, r0, lsl #20
     6c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
     6cc:	6e69701f 	mcrvs	0, 3, r7, cr9, cr15, {0}
     6d0:	2a6f0100 	bcs	1bc0ad8 <_bss_end+0x1baede8>
     6d4:	00000048 	andeq	r0, r0, r8, asr #32
     6d8:	1c589102 	ldfnep	f1, [r8], {2}
     6dc:	00000715 	andeq	r0, r0, r5, lsl r7
     6e0:	8c346f01 	ldchi	15, cr6, [r4], #-4
     6e4:	02000004 	andeq	r0, r0, #4
     6e8:	381c5791 	ldmdacc	ip, {r0, r4, r7, r8, r9, sl, ip, lr}
     6ec:	01000004 	tsteq	r0, r4
     6f0:	048c3f6f 	streq	r3, [ip], #3951	; 0xf6f
     6f4:	91020000 	mrsls	r0, (UNDEF: 2)
     6f8:	05ac2056 	streq	r2, [ip, #86]!	; 0x56
     6fc:	73010000 	movwvc	r0, #4096	; 0x1000
     700:	0000480e 	andeq	r4, r0, lr, lsl #16
     704:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     708:	0005dc20 	andeq	sp, r5, r0, lsr #24
     70c:	0e740100 	rpweqs	f0, f4, f0
     710:	00000048 	andeq	r0, r0, r8, asr #32
     714:	00609102 	rsbeq	r9, r0, r2, lsl #2
     718:	0003ef21 	andeq	lr, r3, r1, lsr #30
     71c:	06660100 	strbteq	r0, [r6], -r0, lsl #2
     720:	00000608 	andeq	r0, r0, r8, lsl #12
     724:	000085e4 	andeq	r8, r0, r4, ror #11
     728:	00000084 	andeq	r0, r0, r4, lsl #1
     72c:	06429c01 	strbeq	r9, [r2], -r1, lsl #24
     730:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
     734:	aa000003 	bge	748 <CPSR_IRQ_INHIBIT+0x6c8>
     738:	02000004 	andeq	r0, r0, #4
     73c:	701f6c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     740:	01006e69 	tsteq	r0, r9, ror #28
     744:	00482866 	subeq	r2, r8, r6, ror #16
     748:	91020000 	mrsls	r0, (UNDEF: 2)
     74c:	65722268 	ldrbvs	r2, [r2, #-616]!	; 0xfffffd98
     750:	68010067 	stmdavs	r1, {r0, r1, r2, r5, r6}
     754:	0000480e 	andeq	r4, r0, lr, lsl #16
     758:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     75c:	74696222 	strbtvc	r6, [r9], #-546	; 0xfffffdde
     760:	13680100 	cmnne	r8, #0, 2
     764:	00000048 	andeq	r0, r0, r8, asr #32
     768:	00709102 	rsbseq	r9, r0, r2, lsl #2
     76c:	0003ca21 	andeq	ip, r3, r1, lsr #20
     770:	065d0100 	ldrbeq	r0, [sp], -r0, lsl #2
     774:	0000065c 	andeq	r0, r0, ip, asr r6
     778:	0000850c 	andeq	r8, r0, ip, lsl #10
     77c:	000000d8 	ldrdeq	r0, [r0], -r8
     780:	06a59c01 	strteq	r9, [r5], r1, lsl #24
     784:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
     788:	aa000003 	bge	79c <CPSR_IRQ_INHIBIT+0x71c>
     78c:	02000004 	andeq	r0, r0, #4
     790:	701f6c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     794:	01006e69 	tsteq	r0, r9, ror #28
     798:	0048295d 	subeq	r2, r8, sp, asr r9
     79c:	91020000 	mrsls	r0, (UNDEF: 2)
     7a0:	65731f68 	ldrbvs	r1, [r3, #-3944]!	; 0xfffff098
     7a4:	5d010074 	stcpl	0, cr0, [r1, #-464]	; 0xfffffe30
     7a8:	00048c33 	andeq	r8, r4, r3, lsr ip
     7ac:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
     7b0:	67657222 	strbvs	r7, [r5, -r2, lsr #4]!
     7b4:	0e5f0100 	rdfeqe	f0, f7, f0
     7b8:	00000048 	andeq	r0, r0, r8, asr #32
     7bc:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
     7c0:	00746962 	rsbseq	r6, r4, r2, ror #18
     7c4:	48135f01 	ldmdami	r3, {r0, r8, r9, sl, fp, ip, lr}
     7c8:	02000000 	andeq	r0, r0, #0
     7cc:	21007091 	swpcs	r7, r1, [r0]
     7d0:	000003a6 	andeq	r0, r0, r6, lsr #7
     7d4:	bf105401 	svclt	0x00105401
     7d8:	98000006 	stmdals	r0, {r1, r2}
     7dc:	74000084 	strvc	r0, [r0], #-132	; 0xffffff7c
     7e0:	01000000 	mrseq	r0, (UNDEF: 0)
     7e4:	0006f99c 	muleq	r6, ip, r9
     7e8:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     7ec:	04990000 	ldreq	r0, [r9], #0
     7f0:	91020000 	mrsls	r0, (UNDEF: 2)
     7f4:	69701f6c 	ldmdbvs	r0!, {r2, r3, r5, r6, r8, r9, sl, fp, ip}^
     7f8:	5401006e 	strpl	r0, [r1], #-110	; 0xffffff92
     7fc:	0000483a 	andeq	r4, r0, sl, lsr r8
     800:	68910200 	ldmvs	r1, {r9}
     804:	67657222 	strbvs	r7, [r5, -r2, lsr #4]!
     808:	0e560100 	rdfeqs	f0, f6, f0
     80c:	00000048 	andeq	r0, r0, r8, asr #32
     810:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
     814:	00746962 	rsbseq	r6, r4, r2, ror #18
     818:	48135601 	ldmdami	r3, {r0, r9, sl, ip, lr}
     81c:	02000000 	andeq	r0, r0, #0
     820:	21007091 	swpcs	r7, r1, [r0]
     824:	00000381 	andeq	r0, r0, r1, lsl #7
     828:	13064501 	movwne	r4, #25857	; 0x6501
     82c:	d0000007 	andle	r0, r0, r7
     830:	c8000083 	stmdagt	r0, {r0, r1, r7}
     834:	01000000 	mrseq	r0, (UNDEF: 0)
     838:	0007799c 	muleq	r7, ip, r9
     83c:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     840:	04aa0000 	strteq	r0, [sl], #0
     844:	91020000 	mrsls	r0, (UNDEF: 2)
     848:	69701f64 	ldmdbvs	r0!, {r2, r5, r6, r8, r9, sl, fp, ip}^
     84c:	4501006e 	strmi	r0, [r1, #-110]	; 0xffffff92
     850:	00004830 	andeq	r4, r0, r0, lsr r8
     854:	60910200 	addsvs	r0, r1, r0, lsl #4
     858:	0005f91c 	andeq	pc, r5, ip, lsl r9	; <UNPREDICTABLE>
     85c:	44450100 	strbmi	r0, [r5], #-256	; 0xffffff00
     860:	00000228 	andeq	r0, r0, r8, lsr #4
     864:	225c9102 	subscs	r9, ip, #-2147483648	; 0x80000000
     868:	00676572 	rsbeq	r6, r7, r2, ror r5
     86c:	480e4701 	stmdami	lr, {r0, r8, r9, sl, lr}
     870:	02000000 	andeq	r0, r0, #0
     874:	62226c91 	eorvs	r6, r2, #37120	; 0x9100
     878:	01007469 	tsteq	r0, r9, ror #8
     87c:	00481347 	subeq	r1, r8, r7, asr #6
     880:	91020000 	mrsls	r0, (UNDEF: 2)
     884:	036e2068 	cmneq	lr, #104	; 0x68
     888:	4b010000 	blmi	40890 <_bss_end+0x2eba0>
     88c:	00005912 	andeq	r5, r0, r2, lsl r9
     890:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     894:	00647222 	rsbeq	r7, r4, r2, lsr #4
     898:	59124d01 	ldmdbpl	r2, {r0, r8, sl, fp, lr}
     89c:	02000000 	andeq	r0, r0, #0
     8a0:	1d007091 	stcne	0, cr7, [r0, #-580]	; 0xfffffdbc
     8a4:	0000032f 	andeq	r0, r0, pc, lsr #6
     8a8:	93063a01 	movwls	r3, #27137	; 0x6a01
     8ac:	5c000007 	stcpl	0, cr0, [r0], {7}
     8b0:	74000083 	strvc	r0, [r0], #-131	; 0xffffff7d
     8b4:	01000000 	mrseq	r0, (UNDEF: 0)
     8b8:	0007cd9c 	muleq	r7, ip, sp
     8bc:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     8c0:	04990000 	ldreq	r0, [r9], #0
     8c4:	91020000 	mrsls	r0, (UNDEF: 2)
     8c8:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     8cc:	3a01006e 	bcc	40a8c <_bss_end+0x2ed9c>
     8d0:	00004831 	andeq	r4, r0, r1, lsr r8
     8d4:	70910200 	addsvc	r0, r1, r0, lsl #4
     8d8:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     8dc:	403a0100 	eorsmi	r0, sl, r0, lsl #2
     8e0:	0000049e 	muleq	r0, lr, r4
     8e4:	1c6c9102 	stfnep	f1, [ip], #-8
     8e8:	000005dc 	ldrdeq	r0, [r0], -ip
     8ec:	9e4f3a01 	vmlals.f32	s7, s30, s2
     8f0:	02000004 	andeq	r0, r0, #4
     8f4:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     8f8:	00000301 	andeq	r0, r0, r1, lsl #6
     8fc:	e7062f01 	str	r2, [r6, -r1, lsl #30]
     900:	e8000007 	stmda	r0, {r0, r1, r2}
     904:	74000082 	strvc	r0, [r0], #-130	; 0xffffff7e
     908:	01000000 	mrseq	r0, (UNDEF: 0)
     90c:	0008219c 	muleq	r8, ip, r1
     910:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     914:	04990000 	ldreq	r0, [r9], #0
     918:	91020000 	mrsls	r0, (UNDEF: 2)
     91c:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     920:	2f01006e 	svccs	0x0001006e
     924:	00004831 	andeq	r4, r0, r1, lsr r8
     928:	70910200 	addsvc	r0, r1, r0, lsl #4
     92c:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     930:	402f0100 	eormi	r0, pc, r0, lsl #2
     934:	0000049e 	muleq	r0, lr, r4
     938:	1c6c9102 	stfnep	f1, [ip], #-8
     93c:	000005dc 	ldrdeq	r0, [r0], -ip
     940:	9e4f2f01 	cdpls	15, 4, cr2, cr15, cr1, {0}
     944:	02000004 	andeq	r0, r0, #4
     948:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     94c:	000002d3 	ldrdeq	r0, [r0], -r3
     950:	3b062401 	blcc	18995c <_bss_end+0x177c6c>
     954:	74000008 	strvc	r0, [r0], #-8
     958:	74000082 	strvc	r0, [r0], #-130	; 0xffffff7e
     95c:	01000000 	mrseq	r0, (UNDEF: 0)
     960:	0008759c 	muleq	r8, ip, r5
     964:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     968:	04990000 	ldreq	r0, [r9], #0
     96c:	91020000 	mrsls	r0, (UNDEF: 2)
     970:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     974:	2401006e 	strcs	r0, [r1], #-110	; 0xffffff92
     978:	00004831 	andeq	r4, r0, r1, lsr r8
     97c:	70910200 	addsvc	r0, r1, r0, lsl #4
     980:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     984:	40240100 	eormi	r0, r4, r0, lsl #2
     988:	0000049e 	muleq	r0, lr, r4
     98c:	1c6c9102 	stfnep	f1, [ip], #-8
     990:	000005dc 	ldrdeq	r0, [r0], -ip
     994:	9e4f2401 	cdpls	4, 4, cr2, cr15, cr1, {0}
     998:	02000004 	andeq	r0, r0, #4
     99c:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     9a0:	000002a5 	andeq	r0, r0, r5, lsr #5
     9a4:	8f060f01 	svchi	0x00060f01
     9a8:	dc000008 	stcle	0, cr0, [r0], {8}
     9ac:	98000081 	stmdals	r0, {r0, r7}
     9b0:	01000000 	mrseq	r0, (UNDEF: 0)
     9b4:	0008c99c 	muleq	r8, ip, r9
     9b8:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
     9bc:	04990000 	ldreq	r0, [r9], #0
     9c0:	91020000 	mrsls	r0, (UNDEF: 2)
     9c4:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     9c8:	0f01006e 	svceq	0x0001006e
     9cc:	00004832 	andeq	r4, r0, r2, lsr r8
     9d0:	70910200 	addsvc	r0, r1, r0, lsl #4
     9d4:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     9d8:	410f0100 	mrsmi	r0, (UNDEF: 31)
     9dc:	0000049e 	muleq	r0, lr, r4
     9e0:	1c6c9102 	stfnep	f1, [ip], #-8
     9e4:	000005dc 	ldrdeq	r0, [r0], -ip
     9e8:	9e500f01 	cdpls	15, 5, cr0, cr0, cr1, {0}
     9ec:	02000004 	andeq	r0, r0, #4
     9f0:	23006891 	movwcs	r6, #2193	; 0x891
     9f4:	0000035d 	andeq	r0, r0, sp, asr r3
     9f8:	da010801 	ble	42a04 <_bss_end+0x30d14>
     9fc:	00000008 	andeq	r0, r0, r8
     a00:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a04:	00032c24 	andeq	r2, r3, r4, lsr #24
     a08:	0004aa00 	andeq	sl, r4, r0, lsl #20
     a0c:	021b2500 	andseq	r2, fp, #0, 10
     a10:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     a14:	0000592b 	andeq	r5, r0, fp, lsr #18
     a18:	c9260000 	stmdbgt	r6!, {}	; <UNPREDICTABLE>
     a1c:	2a000008 	bcs	a44 <CPSR_IRQ_INHIBIT+0x9c4>
     a20:	07000002 	streq	r0, [r0, -r2]
     a24:	84000009 	strhi	r0, [r0], #-9
     a28:	58000081 	stmdapl	r0, {r0, r7}
     a2c:	01000000 	mrseq	r0, (UNDEF: 0)
     a30:	08da279c 	ldmeq	sl, {r2, r3, r4, r7, r8, r9, sl, sp}^
     a34:	91020000 	mrsls	r0, (UNDEF: 2)
     a38:	08e32774 	stmiaeq	r3!, {r2, r4, r5, r6, r8, r9, sl, sp}^
     a3c:	91020000 	mrsls	r0, (UNDEF: 2)
     a40:	72000070 	andvc	r0, r0, #112	; 0x70
     a44:	0400000a 	streq	r0, [r0], #-10
     a48:	00033100 	andeq	r3, r3, r0, lsl #2
     a4c:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
     a50:	04000000 	streq	r0, [r0], #-0
     a54:	000009bc 			; <UNDEFINED> instruction: 0x000009bc
     a58:	000000c5 	andeq	r0, r0, r5, asr #1
	...
     a64:	0000047a 	andeq	r0, r0, sl, ror r4
     a68:	73080102 	movwvc	r0, #33026	; 0x8102
     a6c:	03000005 	movweq	r0, #5
     a70:	00000025 	andeq	r0, r0, r5, lsr #32
     a74:	99050202 	stmdbls	r5, {r1, r9}
     a78:	04000005 	streq	r0, [r0], #-5
     a7c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     a80:	38050074 	stmdacc	r5, {r2, r4, r5, r6}
     a84:	06000000 	streq	r0, [r0], -r0
     a88:	00000982 	andeq	r0, r0, r2, lsl #19
     a8c:	50070703 	andpl	r0, r7, r3, lsl #14
     a90:	02000000 	andeq	r0, r0, #0
     a94:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
     a98:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
     a9c:	03000007 	movweq	r0, #7
     aa0:	00630708 	rsbeq	r0, r3, r8, lsl #14
     aa4:	02020000 	andeq	r0, r2, #0
     aa8:	0003dc07 	andeq	sp, r3, r7, lsl #24
     aac:	05e40600 	strbeq	r0, [r4, #1536]!	; 0x600
     ab0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
     ab4:	00008007 	andeq	r8, r0, r7
     ab8:	006a0300 	rsbeq	r0, sl, r0, lsl #6
     abc:	6a050000 	bvs	140ac4 <_bss_end+0x12edd4>
     ac0:	02000000 	andeq	r0, r0, #0
     ac4:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
     ac8:	80030000 	andhi	r0, r3, r0
     acc:	05000000 	streq	r0, [r0, #-0]
     ad0:	00000080 	andeq	r0, r0, r0, lsl #1
     ad4:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
     ad8:	0b050400 	bleq	141ae0 <_bss_end+0x12fdf0>
     adc:	0000018a 	andeq	r0, r0, sl, lsl #3
     ae0:	00048708 	andeq	r8, r4, r8, lsl #14
     ae4:	1c070400 	cfstrsne	mvf0, [r7], {-0}
     ae8:	00000087 	andeq	r0, r0, r7, lsl #1
     aec:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
     af0:	0005cc08 	andeq	ip, r5, r8, lsl #24
     af4:	1d0a0400 	cfstrsne	mvf0, [sl, #-0]
     af8:	00000196 	muleq	r0, r6, r1
     afc:	20000000 	andcs	r0, r0, r0
     b00:	00045208 	andeq	r5, r4, r8, lsl #4
     b04:	1d0d0400 	cfstrsne	mvf0, [sp, #-0]
     b08:	00000196 	muleq	r0, r6, r1
     b0c:	20200000 	eorcs	r0, r0, r0
     b10:	00058a09 	andeq	r8, r5, r9, lsl #20
     b14:	18100400 	ldmdane	r0, {sl}
     b18:	00000076 	andeq	r0, r0, r6, ror r0
     b1c:	03730836 	cmneq	r3, #3538944	; 0x360000
     b20:	42040000 	andmi	r0, r4, #0
     b24:	0001961d 	andeq	r9, r1, sp, lsl r6
     b28:	21500000 	cmpcs	r0, r0
     b2c:	034a0820 	movteq	r0, #43040	; 0xa820
     b30:	71040000 	mrsvc	r0, (UNDEF: 4)
     b34:	0001961d 	andeq	r9, r1, sp, lsl r6
     b38:	00b20000 	adcseq	r0, r2, r0
     b3c:	02b60820 	adcseq	r0, r6, #32, 16	; 0x200000
     b40:	a4040000 	strge	r0, [r4], #-0
     b44:	0001961d 	andeq	r9, r1, sp, lsl r6
     b48:	00b40000 	adcseq	r0, r4, r0
     b4c:	03640820 	cmneq	r4, #32, 16	; 0x200000
     b50:	b3040000 	movwlt	r0, #16384	; 0x4000
     b54:	0001961d 	andeq	r9, r1, sp, lsl r6
     b58:	10400000 	subne	r0, r0, r0
     b5c:	03310820 	teqeq	r1, #32, 16	; 0x200000
     b60:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
     b64:	0001961d 	andeq	r9, r1, sp, lsl r6
     b68:	20500000 	subscs	r0, r0, r0
     b6c:	03ef0820 	mvneq	r0, #32, 16	; 0x200000
     b70:	bf040000 	svclt	0x00040000
     b74:	0001961d 	andeq	r9, r1, sp, lsl r6
     b78:	80400000 	subhi	r0, r0, r0
     b7c:	045c0820 	ldrbeq	r0, [ip], #-2080	; 0xfffff7e0
     b80:	c0040000 	andgt	r0, r4, r0
     b84:	0001961d 	andeq	r9, r1, sp, lsl r6
     b88:	80500000 	subshi	r0, r0, r0
     b8c:	07a10a20 	streq	r0, [r1, r0, lsr #20]!
     b90:	04050000 	streq	r0, [r5], #-0
     b94:	00000038 	andeq	r0, r0, r8, lsr r0
     b98:	0b10c204 	bleq	4313b0 <_bss_end+0x41f6c0>
     b9c:	0000358a 	andeq	r3, r0, sl, lsl #11
     ba0:	0a0c0b00 	beq	3037a8 <_bss_end+0x2f1ab8>
     ba4:	0b010000 	bleq	40bac <_bss_end+0x2eebc>
     ba8:	0000094a 	andeq	r0, r0, sl, asr #18
     bac:	128b0b02 	addne	r0, fp, #2048	; 0x800
     bb0:	0b030000 	bleq	c0bb8 <_bss_end+0xaeec8>
     bb4:	00000868 	andeq	r0, r0, r8, ror #16
     bb8:	08030b04 	stmdaeq	r3, {r2, r8, r9, fp}
     bbc:	0b050000 	bleq	140bc4 <_bss_end+0x12eed4>
     bc0:	00000749 	andeq	r0, r0, r9, asr #14
     bc4:	07e40b06 	strbeq	r0, [r4, r6, lsl #22]!
     bc8:	00070000 	andeq	r0, r7, r0
     bcc:	009d0c00 	addseq	r0, sp, r0, lsl #24
     bd0:	04020000 	streq	r0, [r2], #-0
     bd4:	00458c07 	subeq	r8, r5, r7, lsl #24
     bd8:	018f0300 	orreq	r0, pc, r0, lsl #6
     bdc:	ad0c0000 	stcge	0, cr0, [ip, #-0]
     be0:	0c000000 	stceq	0, cr0, [r0], {-0}
     be4:	000000bd 	strheq	r0, [r0], -sp
     be8:	0000cd0c 	andeq	ip, r0, ip, lsl #26
     bec:	00da0c00 	sbcseq	r0, sl, r0, lsl #24
     bf0:	ea0c0000 	b	300bf8 <_bss_end+0x2eef08>
     bf4:	0c000000 	stceq	0, cr0, [r0], {-0}
     bf8:	000000fa 	strdeq	r0, [r0], -sl
     bfc:	00010a0c 	andeq	r0, r1, ip, lsl #20
     c00:	011a0c00 	tsteq	sl, r0, lsl #24
     c04:	2a0c0000 	bcs	300c0c <_bss_end+0x2eef1c>
     c08:	0c000001 	stceq	0, cr0, [r0], {1}
     c0c:	0000013a 	andeq	r0, r0, sl, lsr r1
     c10:	00098a0d 	andeq	r8, r9, sp, lsl #20
     c14:	14060100 	strne	r0, [r6], #-256	; 0xffffff00
     c18:	00000076 	andeq	r0, r0, r6, ror r0
     c1c:	ffc00305 			; <UNDEFINED> instruction: 0xffc00305
     c20:	540e0000 	strpl	r0, [lr], #-0
     c24:	14000007 	strne	r0, [r0], #-7
     c28:	5d070b01 	vstrpl	d0, [r7, #-4]
     c2c:	0f000002 	svceq	0x00000002
     c30:	000007d7 	ldrdeq	r0, [r0], -r7
     c34:	5d0e0f01 	stcpl	15, cr0, [lr, #-4]
     c38:	00000002 	andeq	r0, r0, r2
     c3c:	0008600f 	andeq	r6, r8, pc
     c40:	11110100 	tstne	r1, r0, lsl #2
     c44:	00000264 	andeq	r0, r0, r4, ror #4
     c48:	09420f01 	stmdbeq	r2, {r0, r8, r9, sl, fp}^
     c4c:	13010000 	movwne	r0, #4096	; 0x1000
     c50:	00006a12 	andeq	r6, r0, r2, lsl sl
     c54:	f20f0c00 			; <UNDEFINED> instruction: 0xf20f0c00
     c58:	01000008 	tsteq	r0, r8
     c5c:	00571215 	subseq	r1, r7, r5, lsl r2
     c60:	10100000 	andsne	r0, r0, r0
     c64:	00000754 	andeq	r0, r0, r4, asr r7
     c68:	e9091801 	stmdb	r9, {r0, fp, ip}
     c6c:	74000007 	strvc	r0, [r0], #-7
     c70:	01000002 	tsteq	r0, r2
     c74:	00023a01 	andeq	r3, r2, r1, lsl #20
     c78:	00024000 	andeq	r4, r2, r0
     c7c:	02741100 	rsbseq	r1, r4, #0, 2
     c80:	12000000 	andne	r0, r0, #0
     c84:	00000956 	andeq	r0, r0, r6, asr r9
     c88:	720e1a01 	andvc	r1, lr, #4096	; 0x1000
     c8c:	01000008 	tsteq	r0, r8
     c90:	00000251 	andeq	r0, r0, r1, asr r2
     c94:	00027411 	andeq	r7, r2, r1, lsl r4
     c98:	00571300 	subseq	r1, r7, r0, lsl #6
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	48020102 	stmdami	r2, {r1, r8}
     ca4:	14000045 	strne	r0, [r0], #-69	; 0xffffffbb
     ca8:	00000044 	andeq	r0, r0, r4, asr #32
     cac:	00000274 	andeq	r0, r0, r4, ror r2
     cb0:	00008015 	andeq	r8, r0, r5, lsl r0
     cb4:	16000700 	strne	r0, [r0], -r0, lsl #14
     cb8:	0001df04 	andeq	sp, r1, r4, lsl #30
     cbc:	02740300 	rsbseq	r0, r4, #0, 6
     cc0:	770e0000 	strvc	r0, [lr, -r0]
     cc4:	2400000f 	strcs	r0, [r0], #-15
     cc8:	2d072c01 	stccs	12, cr2, [r7, #-4]
     ccc:	0f000004 	svceq	0x00000004
     cd0:	000009a3 	andeq	r0, r0, r3, lsr #19
     cd4:	38223001 	stmdacc	r2!, {r0, ip, sp}
     cd8:	00000004 	andeq	r0, r0, r4
     cdc:	0007650f 	andeq	r6, r7, pc, lsl #10
     ce0:	0e320100 	rsfeqs	f0, f2, f0
     ce4:	0000025d 	andeq	r0, r0, sp, asr r2
     ce8:	09b30f04 	ldmibeq	r3!, {r2, r8, r9, sl, fp}
     cec:	35010000 	strcc	r0, [r1, #-0]
     cf0:	00006a12 	andeq	r6, r0, r2, lsl sl
     cf4:	e90f0800 	stmdb	pc, {fp}	; <UNPREDICTABLE>
     cf8:	01000008 	tsteq	r0, r8
     cfc:	006a1237 	rsbeq	r1, sl, r7, lsr r2
     d00:	0f0c0000 	svceq	0x000c0000
     d04:	00000a13 	andeq	r0, r0, r3, lsl sl
     d08:	df1a3a01 	svcle	0x001a3a01
     d0c:	10000001 	andne	r0, r0, r1
     d10:	67655217 			; <UNDEFINED> instruction: 0x67655217
     d14:	1c3d0100 	ldfnes	f0, [sp], #-0
     d18:	0000077c 	andeq	r0, r0, ip, ror r7
     d1c:	0000043d 	andeq	r0, r0, sp, lsr r4
     d20:	0002e602 	andeq	lr, r2, r2, lsl #12
     d24:	0002f100 	andeq	pc, r2, r0, lsl #2
     d28:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     d2c:	4a130000 	bmi	4c0d34 <_bss_end+0x4af044>
     d30:	00000001 	andeq	r0, r0, r1
     d34:	00096218 	andeq	r6, r9, r8, lsl r2
     d38:	0e400100 	dvfeqs	f0, f0, f0
     d3c:	000007a9 	andeq	r0, r0, r9, lsr #15
     d40:	00030602 	andeq	r0, r3, r2, lsl #12
     d44:	00030c00 	andeq	r0, r3, r0, lsl #24
     d48:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     d4c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     d50:	00000f77 	andeq	r0, r0, r7, ror pc
     d54:	c0094301 	andgt	r4, r9, r1, lsl #6
     d58:	43000007 	movwmi	r0, #7
     d5c:	01000004 	tsteq	r0, r4
     d60:	00000325 	andeq	r0, r0, r5, lsr #6
     d64:	0000033a 	andeq	r0, r0, sl, lsr r3
     d68:	00044311 	andeq	r4, r4, r1, lsl r3
     d6c:	018f1300 	orreq	r1, pc, r0, lsl #6
     d70:	6a130000 	bvs	4c0d78 <_bss_end+0x4af088>
     d74:	13000000 	movwne	r0, #0
     d78:	0000006a 	andeq	r0, r0, sl, rrx
     d7c:	0a201900 	beq	807184 <_bss_end+0x7f5494>
     d80:	46010000 	strmi	r0, [r1], -r0
     d84:	000a3b0e 	andeq	r3, sl, lr, lsl #22
     d88:	00025d00 	andeq	r5, r2, r0, lsl #26
     d8c:	03530100 	cmpeq	r3, #0, 2
     d90:	03590000 	cmpeq	r9, #0
     d94:	43110000 	tstmi	r1, #0
     d98:	00000004 	andeq	r0, r0, r4
     d9c:	0009ad18 	andeq	sl, r9, r8, lsl sp
     da0:	0e480100 	dvfeqe	f0, f0, f0
     da4:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     da8:	00036e01 	andeq	r6, r3, r1, lsl #28
     dac:	00037400 	andeq	r7, r3, r0, lsl #8
     db0:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     db4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     db8:	0000073f 	andeq	r0, r0, pc, lsr r7
     dbc:	fb0e4a01 	blx	3935ca <_bss_end+0x3818da>
     dc0:	5d000008 	stcpl	0, cr0, [r0, #-32]	; 0xffffffe0
     dc4:	01000002 	tsteq	r0, r2
     dc8:	0000038d 	andeq	r0, r0, sp, lsl #7
     dcc:	00000393 	muleq	r0, r3, r3
     dd0:	00044e11 	andeq	r4, r4, r1, lsl lr
     dd4:	23180000 	tstcs	r8, #0
     dd8:	01000009 	tsteq	r0, r9
     ddc:	08b00e4d 	ldmeq	r0!, {r0, r2, r3, r6, r9, sl, fp}
     de0:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
     de4:	bd000003 	stclt	0, cr0, [r0, #-12]
     de8:	11000003 	tstne	r0, r3
     dec:	00000443 	andeq	r0, r0, r3, asr #8
     df0:	00005713 	andeq	r5, r0, r3, lsl r7
     df4:	04591300 	ldrbeq	r1, [r9], #-768	; 0xfffffd00
     df8:	6a130000 	bvs	4c0e00 <_bss_end+0x4af110>
     dfc:	00000000 	andeq	r0, r0, r0
     e00:	0007cf18 	andeq	ip, r7, r8, lsl pc
     e04:	0e4f0100 	dvfeqe	f0, f7, f0
     e08:	00000a25 	andeq	r0, r0, r5, lsr #20
     e0c:	0003d201 	andeq	sp, r3, r1, lsl #4
     e10:	0003e700 	andeq	lr, r3, r0, lsl #14
     e14:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     e18:	57130000 	ldrpl	r0, [r3, -r0]
     e1c:	13000000 	movwne	r0, #0
     e20:	0000045f 	andeq	r0, r0, pc, asr r4
     e24:	00006a13 	andeq	r6, r0, r3, lsl sl
     e28:	11190000 	tstne	r9, r0
     e2c:	01000009 	tsteq	r0, r9
     e30:	08c41b52 	stmiaeq	r4, {r1, r4, r6, r8, r9, fp, ip}^
     e34:	04650000 	strbteq	r0, [r5], #-0
     e38:	00010000 	andeq	r0, r1, r0
     e3c:	0b000004 	bleq	e54 <CPSR_IRQ_INHIBIT+0xdd4>
     e40:	11000004 	tstne	r0, r4
     e44:	00000443 	andeq	r0, r0, r3, asr #8
     e48:	00005713 	andeq	r5, r0, r3, lsl r7
     e4c:	3c120000 	ldccc	0, cr0, [r2], {-0}
     e50:	01000008 	tsteq	r0, r8
     e54:	080d0e54 	stmdaeq	sp, {r2, r4, r6, r9, sl, fp}
     e58:	1c010000 	stcne	0, cr0, [r1], {-0}
     e5c:	11000004 	tstne	r0, r4
     e60:	00000443 	andeq	r0, r0, r3, asr #8
     e64:	00046513 	andeq	r6, r4, r3, lsl r5
     e68:	025d1300 	subseq	r1, sp, #0, 6
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	00027f03 	andeq	r7, r2, r3, lsl #30
     e74:	7b041600 	blvc	10667c <_bss_end+0xf498c>
     e78:	03000000 	movweq	r0, #0
     e7c:	00000432 	andeq	r0, r0, r2, lsr r4
     e80:	007b041a 	rsbseq	r0, fp, sl, lsl r4
     e84:	04160000 	ldreq	r0, [r6], #-0
     e88:	0000027f 	andeq	r0, r0, pc, ror r2
     e8c:	00044303 	andeq	r4, r4, r3, lsl #6
     e90:	2d041600 	stccs	6, cr1, [r4, #-0]
     e94:	03000004 	movweq	r0, #4
     e98:	0000044e 	andeq	r0, r0, lr, asr #8
     e9c:	002c0416 	eoreq	r0, ip, r6, lsl r4
     ea0:	04160000 	ldreq	r0, [r6], #-0
     ea4:	00000025 	andeq	r0, r0, r5, lsr #32
     ea8:	01df041a 	bicseq	r0, pc, sl, lsl r4	; <UNPREDICTABLE>
     eac:	7c1b0000 	ldcvc	0, cr0, [fp], {-0}
     eb0:	01000009 	tsteq	r0, r9
     eb4:	027f0d58 	rsbseq	r0, pc, #88, 26	; 0x1600
     eb8:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
     ebc:	07000005 	streq	r0, [r0, -r5]
     ec0:	00008004 	andeq	r8, r0, r4
     ec4:	0c070500 	cfstr32eq	mvfx0, [r7], {-0}
     ec8:	000004c0 	andeq	r0, r0, r0, asr #9
     ecc:	0002dc0b 	andeq	sp, r2, fp, lsl #24
     ed0:	1d0b0000 	stcne	0, cr0, [fp, #-0]
     ed4:	01000005 	tsteq	r0, r5
     ed8:	0002150b 	andeq	r1, r2, fp, lsl #10
     edc:	0f0b0200 	svceq	0x000b0200
     ee0:	03000002 	movweq	r0, #2
     ee4:	0001f70b 	andeq	pc, r1, fp, lsl #14
     ee8:	fd0b0400 	stc2	4, cr0, [fp, #-0]
     eec:	05000001 	streq	r0, [r0, #-1]
     ef0:	0002030b 	andeq	r0, r2, fp, lsl #6
     ef4:	090b0600 	stmdbeq	fp, {r9, sl}
     ef8:	07000002 	streq	r0, [r0, -r2]
     efc:	0007280b 	andeq	r2, r7, fp, lsl #16
     f00:	0e000800 	cdpeq	8, 0, cr0, cr0, cr0, {0}
     f04:	0000071a 	andeq	r0, r0, sl, lsl r7
     f08:	071b0514 			; <UNDEFINED> instruction: 0x071b0514
     f0c:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
     f10:	0004020f 	andeq	r0, r4, pc, lsl #4
     f14:	221f0500 	andscs	r0, pc, #0, 10
     f18:	000006c6 	andeq	r0, r0, r6, asr #13
     f1c:	02c10f00 	sbceq	r0, r1, #0, 30
     f20:	22050000 	andcs	r0, r5, #0
     f24:	0006cb0e 	andeq	ip, r6, lr, lsl #22
     f28:	f10f0400 			; <UNDEFINED> instruction: 0xf10f0400
     f2c:	05000004 	streq	r0, [r0, #-4]
     f30:	06cb0e24 	strbeq	r0, [fp], r4, lsr #28
     f34:	190c0000 	stmdbne	ip, {}	; <UNPREDICTABLE>
     f38:	0000043e 	andeq	r0, r0, lr, lsr r4
     f3c:	ac0a2805 	stcge	8, cr2, [sl], {5}
     f40:	5d000003 	stcpl	0, cr0, [r0, #-12]
     f44:	02000002 	andeq	r0, r0, #2
     f48:	0000050d 	andeq	r0, r0, sp, lsl #10
     f4c:	00000522 	andeq	r0, r0, r2, lsr #10
     f50:	0006db11 	andeq	sp, r6, r1, lsl fp
     f54:	006a1300 	rsbeq	r1, sl, r0, lsl #6
     f58:	e1130000 	tst	r3, r0
     f5c:	13000006 	movwne	r0, #6
     f60:	000006e1 	andeq	r0, r0, r1, ror #13
     f64:	04de1900 	ldrbeq	r1, [lr], #2304	; 0x900
     f68:	2a050000 	bcs	140f70 <_bss_end+0x12f280>
     f6c:	0004af0a 	andeq	sl, r4, sl, lsl #30
     f70:	00025d00 	andeq	r5, r2, r0, lsl #26
     f74:	053b0200 	ldreq	r0, [fp, #-512]!	; 0xfffffe00
     f78:	05500000 	ldrbeq	r0, [r0, #-0]
     f7c:	db110000 	blle	440f84 <_bss_end+0x42f294>
     f80:	13000006 	movwne	r0, #6
     f84:	0000006a 	andeq	r0, r0, sl, rrx
     f88:	0006e113 	andeq	lr, r6, r3, lsl r1
     f8c:	06e11300 	strbteq	r1, [r1], r0, lsl #6
     f90:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     f94:	0000062d 	andeq	r0, r0, sp, lsr #12
     f98:	ad0a2c05 	stcge	12, cr2, [sl, #-20]	; 0xffffffec
     f9c:	5d000006 	stcpl	0, cr0, [r0, #-24]	; 0xffffffe8
     fa0:	02000002 	andeq	r0, r0, #2
     fa4:	00000569 	andeq	r0, r0, r9, ror #10
     fa8:	0000057e 	andeq	r0, r0, lr, ror r5
     fac:	0006db11 	andeq	sp, r6, r1, lsl fp
     fb0:	006a1300 	rsbeq	r1, sl, r0, lsl #6
     fb4:	e1130000 	tst	r3, r0
     fb8:	13000006 	movwne	r0, #6
     fbc:	000006e1 	andeq	r0, r0, r1, ror #13
     fc0:	04661900 	strbteq	r1, [r6], #-2304	; 0xfffff700
     fc4:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
     fc8:	0005fe0a 	andeq	pc, r5, sl, lsl #28
     fcc:	00025d00 	andeq	r5, r2, r0, lsl #26
     fd0:	05970200 	ldreq	r0, [r7, #512]	; 0x200
     fd4:	05ac0000 	streq	r0, [ip, #0]!
     fd8:	db110000 	blle	440fe0 <_bss_end+0x42f2f0>
     fdc:	13000006 	movwne	r0, #6
     fe0:	0000006a 	andeq	r0, r0, sl, rrx
     fe4:	0006e113 	andeq	lr, r6, r3, lsl r1
     fe8:	06e11300 	strbteq	r1, [r1], r0, lsl #6
     fec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     ff0:	0000071a 	andeq	r0, r0, sl, lsl r7
     ff4:	b5053105 	strlt	r3, [r5, #-261]	; 0xfffffefb
     ff8:	e7000005 	str	r0, [r0, -r5]
     ffc:	01000006 	tsteq	r0, r6
    1000:	000005c5 	andeq	r0, r0, r5, asr #11
    1004:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1008:	0006e711 	andeq	lr, r6, r1, lsl r7
    100c:	00801300 	addeq	r1, r0, r0, lsl #6
    1010:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1014:	0000028a 	andeq	r0, r0, sl, lsl #5
    1018:	240a3405 	strcs	r3, [sl], #-1029	; 0xfffffbfb
    101c:	01000005 	tsteq	r0, r5
    1020:	000005e5 	andeq	r0, r0, r5, ror #11
    1024:	000005f5 	strdeq	r0, [r0], -r5
    1028:	0006e711 	andeq	lr, r6, r1, lsl r7
    102c:	006a1300 	rsbeq	r1, sl, r0, lsl #6
    1030:	77130000 	ldrvc	r0, [r3, -r0]
    1034:	00000004 	andeq	r0, r0, r4
    1038:	00057819 	andeq	r7, r5, r9, lsl r8
    103c:	14360500 	ldrtne	r0, [r6], #-1280	; 0xfffffb00
    1040:	000006ec 	andeq	r0, r0, ip, ror #13
    1044:	00000477 	andeq	r0, r0, r7, ror r4
    1048:	00060e01 	andeq	r0, r6, r1, lsl #28
    104c:	00061900 	andeq	r1, r6, r0, lsl #18
    1050:	06db1100 	ldrbeq	r1, [fp], r0, lsl #2
    1054:	6a130000 	bvs	4c105c <_bss_end+0x4af36c>
    1058:	00000000 	andeq	r0, r0, r0
    105c:	00051918 	andeq	r1, r5, r8, lsl r9
    1060:	0a390500 	beq	e42468 <_bss_end+0xe30778>
    1064:	00000416 	andeq	r0, r0, r6, lsl r4
    1068:	00062e01 	andeq	r2, r6, r1, lsl #28
    106c:	00063e00 	andeq	r3, r6, r0, lsl #28
    1070:	06e71100 	strbteq	r1, [r7], r0, lsl #2
    1074:	6a130000 	bvs	4c107c <_bss_end+0x4af38c>
    1078:	13000000 	movwne	r0, #0
    107c:	0000025d 	andeq	r0, r0, sp, asr r2
    1080:	02d81900 	sbcseq	r1, r8, #0, 18
    1084:	3c050000 	stccc	0, cr0, [r5], {-0}
    1088:	00026b0a 	andeq	r6, r2, sl, lsl #22
    108c:	00025d00 	andeq	r5, r2, r0, lsl #26
    1090:	06570100 	ldrbeq	r0, [r7], -r0, lsl #2
    1094:	06620000 	strbteq	r0, [r2], -r0
    1098:	e7110000 	ldr	r0, [r1, -r0]
    109c:	13000006 	movwne	r0, #6
    10a0:	0000006a 	andeq	r0, r0, sl, rrx
    10a4:	05ed1900 	strbeq	r1, [sp, #2304]!	; 0x900
    10a8:	3f050000 	svccc	0x00050000
    10ac:	0001d30a 	andeq	sp, r1, sl, lsl #6
    10b0:	00025d00 	andeq	r5, r2, r0, lsl #26
    10b4:	067b0100 	ldrbteq	r0, [fp], -r0, lsl #2
    10b8:	06900000 	ldreq	r0, [r0], r0
    10bc:	e7110000 	ldr	r0, [r1, -r0]
    10c0:	13000006 	movwne	r0, #6
    10c4:	0000006a 	andeq	r0, r0, sl, rrx
    10c8:	00025d13 	andeq	r5, r2, r3, lsl sp
    10cc:	025d1300 	subseq	r1, sp, #0, 6
    10d0:	1d000000 	stcne	0, cr0, [r0, #-0]
    10d4:	000005a3 	andeq	r0, r0, r3, lsr #11
    10d8:	fe0a4105 	cdp2	1, 0, cr4, cr10, cr5, {0}
    10dc:	5d000002 	stcpl	0, cr0, [r0, #-8]
    10e0:	01000002 	tsteq	r0, r2
    10e4:	000006a5 	andeq	r0, r0, r5, lsr #13
    10e8:	0006e711 	andeq	lr, r6, r1, lsl r7
    10ec:	006a1300 	rsbeq	r1, sl, r0, lsl #6
    10f0:	5d130000 	ldcpl	0, cr0, [r3, #-0]
    10f4:	13000002 	movwne	r0, #2
    10f8:	0000025d 	andeq	r0, r0, sp, asr r2
    10fc:	c0030000 	andgt	r0, r3, r0
    1100:	16000004 	strne	r0, [r0], -r4
    1104:	00008c04 	andeq	r8, r0, r4, lsl #24
    1108:	06c00300 	strbeq	r0, [r0], r0, lsl #6
    110c:	6a140000 	bvs	501114 <_bss_end+0x4ef424>
    1110:	db000000 	blle	1118 <CPSR_IRQ_INHIBIT+0x1098>
    1114:	15000006 	strne	r0, [r0, #-6]
    1118:	00000080 	andeq	r0, r0, r0, lsl #1
    111c:	04160001 	ldreq	r0, [r6], #-1
    1120:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    1124:	006a041a 	rsbeq	r0, sl, sl, lsl r4
    1128:	04160000 	ldreq	r0, [r6], #-0
    112c:	000004c0 	andeq	r0, r0, r0, asr #9
    1130:	0004a91b 	andeq	sl, r4, fp, lsl r9
    1134:	16450500 	strbne	r0, [r5], -r0, lsl #10
    1138:	000004c0 	andeq	r0, r0, r0, asr #9
    113c:	00046b1e 	andeq	r6, r4, lr, lsl fp
    1140:	06050200 	streq	r0, [r5], -r0, lsl #4
    1144:	0bb00305 	bleq	fec01d60 <_bss_end+0xfebf0070>
    1148:	6d1f0001 	ldcvs	0, cr0, [pc, #-4]	; 114c <CPSR_IRQ_INHIBIT+0x10cc>
    114c:	bc000009 	stclt	0, cr0, [r0], {9}
    1150:	1c000090 	stcne	0, cr0, [r0], {144}	; 0x90
    1154:	01000000 	mrseq	r0, (UNDEF: 0)
    1158:	0241209c 	subeq	r2, r1, #156	; 0x9c
    115c:	90600000 	rsbls	r0, r0, r0
    1160:	005c0000 	subseq	r0, ip, r0
    1164:	9c010000 	stcls	0, cr0, [r1], {-0}
    1168:	00000748 	andeq	r0, r0, r8, asr #14
    116c:	00033b21 	andeq	r3, r3, r1, lsr #22
    1170:	017e0200 	cmneq	lr, r0, lsl #4
    1174:	00000038 	andeq	r0, r0, r8, lsr r0
    1178:	21749102 	cmncs	r4, r2, lsl #2
    117c:	00000734 	andeq	r0, r0, r4, lsr r7
    1180:	38017e02 	stmdacc	r1, {r1, r9, sl, fp, ip, sp, lr}
    1184:	02000000 	andeq	r0, r0, #0
    1188:	22007091 	andcs	r7, r0, #145	; 0x91
    118c:	0000040b 	andeq	r0, r0, fp, lsl #8
    1190:	62066a02 	andvs	r6, r6, #8192	; 0x2000
    1194:	04000007 	streq	r0, [r0], #-7
    1198:	5c00008f 	stcpl	0, cr0, [r0], {143}	; 0x8f
    119c:	01000001 	tsteq	r0, r1
    11a0:	0007a49c 	muleq	r7, ip, r4
    11a4:	032c2300 			; <UNDEFINED> instruction: 0x032c2300
    11a8:	04490000 	strbeq	r0, [r9], #-0
    11ac:	91020000 	mrsls	r0, (UNDEF: 2)
    11b0:	084c2164 	stmdaeq	ip, {r2, r5, r6, r8, sp}^
    11b4:	6a020000 	bvs	811bc <_bss_end+0x6f4cc>
    11b8:	0004652e 	andeq	r6, r4, lr, lsr #10
    11bc:	60910200 	addsvs	r0, r1, r0, lsl #4
    11c0:	0008e221 	andeq	lr, r8, r1, lsr #4
    11c4:	406a0200 	rsbmi	r0, sl, r0, lsl #4
    11c8:	0000025d 	andeq	r0, r0, sp, asr r2
    11cc:	245f9102 	ldrbcs	r9, [pc], #-258	; 11d4 <CPSR_IRQ_INHIBIT+0x1154>
    11d0:	00008fa4 	andeq	r8, r0, r4, lsr #31
    11d4:	00000064 	andeq	r0, r0, r4, rrx
    11d8:	02006925 	andeq	r6, r0, #606208	; 0x94000
    11dc:	003f1777 	eorseq	r1, pc, r7, ror r7	; <UNPREDICTABLE>
    11e0:	91020000 	mrsls	r0, (UNDEF: 2)
    11e4:	2200006c 	andcs	r0, r0, #108	; 0x6c
    11e8:	000003e7 	andeq	r0, r0, r7, ror #7
    11ec:	be135e02 	cdplt	14, 1, cr5, cr3, cr2, {0}
    11f0:	8c000007 	stchi	0, cr0, [r0], {7}
    11f4:	7800008e 	stmdavc	r0, {r1, r2, r3, r7}
    11f8:	01000000 	mrseq	r0, (UNDEF: 0)
    11fc:	0007da9c 	muleq	r7, ip, sl
    1200:	032c2300 			; <UNDEFINED> instruction: 0x032c2300
    1204:	04490000 	strbeq	r0, [r9], #-0
    1208:	91020000 	mrsls	r0, (UNDEF: 2)
    120c:	02252174 	eoreq	r2, r5, #116, 2
    1210:	5e020000 	cdppl	0, 0, cr0, cr2, cr0, {0}
    1214:	00005734 	andeq	r5, r0, r4, lsr r7
    1218:	72910200 	addsvc	r0, r1, #0, 4
    121c:	03bd2200 			; <UNDEFINED> instruction: 0x03bd2200
    1220:	50020000 	andpl	r0, r2, r0
    1224:	0007f406 	andeq	pc, r7, r6, lsl #8
    1228:	008da000 	addeq	sl, sp, r0
    122c:	0000ec00 	andeq	lr, r0, r0, lsl #24
    1230:	459c0100 	ldrmi	r0, [ip, #256]	; 0x100
    1234:	23000008 	movwcs	r0, #8
    1238:	0000032c 	andeq	r0, r0, ip, lsr #6
    123c:	00000449 	andeq	r0, r0, r9, asr #8
    1240:	216c9102 	cmncs	ip, r2, lsl #2
    1244:	00000225 	andeq	r0, r0, r5, lsr #4
    1248:	571d5002 	ldrpl	r5, [sp, -r2]
    124c:	02000000 	andeq	r0, r0, #0
    1250:	ba216a91 	blt	85bc9c <_bss_end+0x849fac>
    1254:	0200000c 	andeq	r0, r0, #12
    1258:	045f2950 	ldrbeq	r2, [pc], #-2384	; 1260 <CPSR_IRQ_INHIBIT+0x11e0>
    125c:	91020000 	mrsls	r0, (UNDEF: 2)
    1260:	656c2664 	strbvs	r2, [ip, #-1636]!	; 0xfffff99c
    1264:	5002006e 	andpl	r0, r2, lr, rrx
    1268:	00006a3a 	andeq	r6, r0, sl, lsr sl
    126c:	60910200 	addsvs	r0, r1, r0, lsl #4
    1270:	008e2824 	addeq	r2, lr, r4, lsr #16
    1274:	00005000 	andeq	r5, r0, r0
    1278:	00692500 	rsbeq	r2, r9, r0, lsl #10
    127c:	6a135a02 	bvs	4d7a8c <_bss_end+0x4c5d9c>
    1280:	02000000 	andeq	r0, r0, #0
    1284:	00007491 	muleq	r0, r1, r4
    1288:	00039322 	andeq	r9, r3, r2, lsr #6
    128c:	06420200 	strbeq	r0, [r2], -r0, lsl #4
    1290:	0000085f 	andeq	r0, r0, pc, asr r8
    1294:	00008cb4 			; <UNDEFINED> instruction: 0x00008cb4
    1298:	000000ec 	andeq	r0, r0, ip, ror #1
    129c:	08b09c01 	ldmeq	r0!, {r0, sl, fp, ip, pc}
    12a0:	2c230000 	stccs	0, cr0, [r3], #-0
    12a4:	49000003 	stmdbmi	r0, {r0, r1}
    12a8:	02000004 	andeq	r0, r0, #4
    12ac:	25216491 	strcs	r6, [r1, #-1169]!	; 0xfffffb6f
    12b0:	02000002 	andeq	r0, r0, #2
    12b4:	00571a42 	subseq	r1, r7, r2, asr #20
    12b8:	91020000 	mrsls	r0, (UNDEF: 2)
    12bc:	0cba2162 	ldfeqs	f2, [sl], #392	; 0x188
    12c0:	42020000 	andmi	r0, r2, #0
    12c4:	0004592c 	andeq	r5, r4, ip, lsr #18
    12c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    12cc:	6e656c26 	cdpvs	12, 6, cr6, cr5, cr6, {1}
    12d0:	3d420200 	sfmcc	f0, 2, [r2, #-0]
    12d4:	0000006a 	andeq	r0, r0, sl, rrx
    12d8:	24589102 	ldrbcs	r9, [r8], #-258	; 0xfffffefe
    12dc:	00008d04 	andeq	r8, r0, r4, lsl #26
    12e0:	00000050 	andeq	r0, r0, r0, asr r0
    12e4:	02006925 	andeq	r6, r0, #606208	; 0x94000
    12e8:	006a1347 	rsbeq	r1, sl, r7, asr #6
    12ec:	91020000 	mrsls	r0, (UNDEF: 2)
    12f0:	2700006c 	strcs	r0, [r0, -ip, rrx]
    12f4:	00000374 	andeq	r0, r0, r4, ror r3
    12f8:	ca063d02 	bgt	190708 <_bss_end+0x17ea18>
    12fc:	8c000008 	stchi	0, cr0, [r0], {8}
    1300:	2800008c 	stmdacs	r0, {r2, r3, r7}
    1304:	01000000 	mrseq	r0, (UNDEF: 0)
    1308:	0008d79c 	muleq	r8, ip, r7
    130c:	032c2300 			; <UNDEFINED> instruction: 0x032c2300
    1310:	04540000 	ldrbeq	r0, [r4], #-0
    1314:	91020000 	mrsls	r0, (UNDEF: 2)
    1318:	59220074 	stmdbpl	r2!, {r2, r4, r5, r6}
    131c:	02000003 	andeq	r0, r0, #3
    1320:	08f10630 	ldmeq	r1!, {r4, r5, r9, sl}^
    1324:	8be80000 	blhi	ffa0132c <_bss_end+0xff9ef63c>
    1328:	00a40000 	adceq	r0, r4, r0
    132c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1330:	000008fe 	strdeq	r0, [r0], -lr
    1334:	00032c23 	andeq	r2, r3, r3, lsr #24
    1338:	00044900 	andeq	r4, r4, r0, lsl #18
    133c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1340:	033a2200 	teqeq	sl, #0, 4
    1344:	1b020000 	blne	8134c <_bss_end+0x6f65c>
    1348:	00091806 	andeq	r1, r9, r6, lsl #16
    134c:	008b0800 	addeq	r0, fp, r0, lsl #16
    1350:	0000e000 	andeq	lr, r0, r0
    1354:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    1358:	23000009 	movwcs	r0, #9
    135c:	0000032c 	andeq	r0, r0, ip, lsr #6
    1360:	00000449 	andeq	r0, r0, r9, asr #8
    1364:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1368:	0002f122 	andeq	pc, r2, r2, lsr #2
    136c:	06120200 	ldreq	r0, [r2], -r0, lsl #4
    1370:	0000093f 	andeq	r0, r0, pc, lsr r9
    1374:	00008ab4 			; <UNDEFINED> instruction: 0x00008ab4
    1378:	00000054 	andeq	r0, r0, r4, asr r0
    137c:	09599c01 	ldmdbeq	r9, {r0, sl, fp, ip, pc}^
    1380:	2c230000 	stccs	0, cr0, [r3], #-0
    1384:	49000003 	stmdbmi	r0, {r0, r1}
    1388:	02000004 	andeq	r0, r0, #4
    138c:	73256c91 			; <UNDEFINED> instruction: 0x73256c91
    1390:	18140200 	ldmdane	r4, {r9}
    1394:	0000043d 	andeq	r0, r0, sp, lsr r4
    1398:	00749102 	rsbseq	r9, r4, r2, lsl #2
    139c:	0002cd27 	andeq	ip, r2, r7, lsr #26
    13a0:	140d0200 	strne	r0, [sp], #-512	; 0xfffffe00
    13a4:	00000973 	andeq	r0, r0, r3, ror r9
    13a8:	00008a7c 	andeq	r8, r0, ip, ror sl
    13ac:	00000038 	andeq	r0, r0, r8, lsr r0
    13b0:	098f9c01 	stmibeq	pc, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
    13b4:	2c230000 	stccs	0, cr0, [r3], #-0
    13b8:	49000003 	stmdbmi	r0, {r0, r1}
    13bc:	02000004 	andeq	r0, r0, #4
    13c0:	72267491 	eorvc	r7, r6, #-1862270976	; 0x91000000
    13c4:	02006765 	andeq	r6, r0, #26476544	; 0x1940000
    13c8:	014a2b0d 	cmpeq	sl, sp, lsl #22
    13cc:	91020000 	mrsls	r0, (UNDEF: 2)
    13d0:	0c280070 	stceq	0, cr0, [r8], #-448	; 0xfffffe40
    13d4:	02000003 	andeq	r0, r0, #3
    13d8:	09a00107 	stmibeq	r0!, {r0, r1, r2, r8}
    13dc:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    13e0:	29000009 	stmdbcs	r0, {r0, r3}
    13e4:	0000032c 	andeq	r0, r0, ip, lsr #6
    13e8:	00000449 	andeq	r0, r0, r9, asr #8
    13ec:	001afe2a 	andseq	pc, sl, sl, lsr #28
    13f0:	1a070200 	bne	1c1bf8 <_bss_end+0x1aff08>
    13f4:	0000018f 	andeq	r0, r0, pc, lsl #3
    13f8:	0008972a 	andeq	r9, r8, sl, lsr #14
    13fc:	29070200 	stmdbcs	r7, {r9}
    1400:	0000006a 	andeq	r0, r0, sl, rrx
    1404:	0008582a 	andeq	r5, r8, sl, lsr #16
    1408:	3b070200 	blcc	1c1c10 <_bss_end+0x1aff20>
    140c:	0000006a 	andeq	r0, r0, sl, rrx
    1410:	098f2b00 	stmibeq	pc, {r8, r9, fp, sp}	; <UNPREDICTABLE>
    1414:	076d0000 	strbeq	r0, [sp, -r0]!
    1418:	09e90000 	stmibeq	r9!, {}^	; <UNPREDICTABLE>
    141c:	8a100000 	bhi	401424 <_bss_end+0x3ef734>
    1420:	006c0000 	rsbeq	r0, ip, r0
    1424:	9c010000 	stcls	0, cr0, [r1], {-0}
    1428:	00000a0a 	andeq	r0, r0, sl, lsl #20
    142c:	0009a02c 	andeq	sl, r9, ip, lsr #32
    1430:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1434:	0009a92c 	andeq	sl, r9, ip, lsr #18
    1438:	70910200 	addsvc	r0, r1, r0, lsl #4
    143c:	0009b52c 	andeq	fp, r9, ip, lsr #10
    1440:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1444:	0009c12c 	andeq	ip, r9, ip, lsr #2
    1448:	68910200 	ldmvs	r1, {r9}
    144c:	02202d00 	eoreq	r2, r0, #0, 26
    1450:	0a180000 	beq	601458 <_bss_end+0x5ef768>
    1454:	22020000 	andcs	r0, r2, #0
    1458:	2900000a 	stmdbcs	r0, {r1, r3}
    145c:	0000032c 	andeq	r0, r0, ip, lsr #6
    1460:	0000027a 	andeq	r0, r0, sl, ror r2
    1464:	0a0a2e00 	beq	28cc6c <_bss_end+0x27af7c>
    1468:	09280000 	stmdbeq	r8!, {}	; <UNPREDICTABLE>
    146c:	0a3d0000 	beq	f41474 <_bss_end+0xf2f784>
    1470:	910c0000 	mrsls	r0, (UNDEF: 12)
    1474:	00480000 	subeq	r0, r8, r0
    1478:	9c010000 	stcls	0, cr0, [r1], {-0}
    147c:	00000a46 	andeq	r0, r0, r6, asr #20
    1480:	000a182c 	andeq	r1, sl, ip, lsr #16
    1484:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1488:	02402f00 	subeq	r2, r0, #0, 30
    148c:	0a590000 	beq	1641494 <_bss_end+0x162f7a4>
    1490:	90d80000 	sbcsls	r0, r8, r0
    1494:	00340000 	eorseq	r0, r4, r0
    1498:	9c010000 	stcls	0, cr0, [r1], {-0}
    149c:	00032c23 	andeq	r2, r3, r3, lsr #24
    14a0:	00027a00 	andeq	r7, r2, r0, lsl #20
    14a4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    14a8:	00022521 	andeq	r2, r2, r1, lsr #10
    14ac:	231a0100 	tstcs	sl, #0, 2
    14b0:	00000057 	andeq	r0, r0, r7, asr r0
    14b4:	00729102 	rsbseq	r9, r2, r2, lsl #2
    14b8:	0006b400 	andeq	fp, r6, r0, lsl #8
    14bc:	39000400 	stmdbcc	r0, {sl}
    14c0:	04000006 	streq	r0, [r0], #-6
    14c4:	00001401 	andeq	r1, r0, r1, lsl #8
    14c8:	0ac20400 	beq	ff0824d0 <_bss_end+0xff0707e0>
    14cc:	00c50000 	sbceq	r0, r5, r0
    14d0:	00200000 	eoreq	r0, r0, r0
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	07bf0000 	ldreq	r0, [pc, r0]!
    14dc:	98020000 	stmdals	r2, {}	; <UNPREDICTABLE>
    14e0:	1800000b 	stmdane	r0, {r0, r1, r3}
    14e4:	66070302 	strvs	r0, [r7], -r2, lsl #6
    14e8:	03000002 	movweq	r0, #2
    14ec:	00000b16 	andeq	r0, r0, r6, lsl fp
    14f0:	02660407 	rsbeq	r0, r6, #117440512	; 0x7000000
    14f4:	06020000 	streq	r0, [r2], -r0
    14f8:	00520110 	subseq	r0, r2, r0, lsl r1
    14fc:	48040000 	stmdami	r4, {}	; <UNPREDICTABLE>
    1500:	10005845 	andne	r5, r0, r5, asr #16
    1504:	43454404 	movtmi	r4, #21508	; 0x5404
    1508:	05000a00 	streq	r0, [r0, #-2560]	; 0xfffff600
    150c:	00000032 	andeq	r0, r0, r2, lsr r0
    1510:	000b2306 	andeq	r2, fp, r6, lsl #6
    1514:	24020800 	strcs	r0, [r2], #-2048	; 0xfffff800
    1518:	00007b0c 	andeq	r7, r0, ip, lsl #22
    151c:	00790700 	rsbseq	r0, r9, r0, lsl #14
    1520:	66162602 	ldrvs	r2, [r6], -r2, lsl #12
    1524:	00000002 	andeq	r0, r0, r2
    1528:	02007807 	andeq	r7, r0, #458752	; 0x70000
    152c:	02661627 	rsbeq	r1, r6, #40894464	; 0x2700000
    1530:	00040000 	andeq	r0, r4, r0
    1534:	000c7508 	andeq	r7, ip, r8, lsl #10
    1538:	1b0c0200 	blne	301d40 <_bss_end+0x2f0050>
    153c:	00000052 	andeq	r0, r0, r2, asr r0
    1540:	e8090a01 	stmda	r9, {r0, r9, fp}
    1544:	0200000b 	andeq	r0, r0, #11
    1548:	0278280d 	rsbseq	r2, r8, #851968	; 0xd0000
    154c:	0a010000 	beq	41554 <_bss_end+0x2f864>
    1550:	00000b98 	muleq	r0, r8, fp
    1554:	620e1002 	andvs	r1, lr, #2
    1558:	8900000c 	stmdbhi	r0, {r2, r3}
    155c:	01000002 	tsteq	r0, r2
    1560:	000000af 	andeq	r0, r0, pc, lsr #1
    1564:	000000c4 	andeq	r0, r0, r4, asr #1
    1568:	0002890b 	andeq	r8, r2, fp, lsl #18
    156c:	02660c00 	rsbeq	r0, r6, #0, 24
    1570:	660c0000 	strvs	r0, [ip], -r0
    1574:	0c000002 	stceq	0, cr0, [r0], {2}
    1578:	00000266 	andeq	r0, r0, r6, ror #4
    157c:	18a20d00 	stmiane	r2!, {r8, sl, fp}
    1580:	12020000 	andne	r0, r2, #0
    1584:	000b830a 	andeq	r8, fp, sl, lsl #6
    1588:	00d90100 	sbcseq	r0, r9, r0, lsl #2
    158c:	00df0000 	sbcseq	r0, pc, r0
    1590:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    1594:	00000002 	andeq	r0, r0, r2
    1598:	000ba10e 	andeq	sl, fp, lr, lsl #2
    159c:	0f140200 	svceq	0x00140200
    15a0:	00000c05 	andeq	r0, r0, r5, lsl #24
    15a4:	00000294 	muleq	r0, r4, r2
    15a8:	0000f801 	andeq	pc, r0, r1, lsl #16
    15ac:	00010300 	andeq	r0, r1, r0, lsl #6
    15b0:	02890b00 	addeq	r0, r9, #0, 22
    15b4:	7d0c0000 	stcvc	0, cr0, [ip, #-0]
    15b8:	00000002 	andeq	r0, r0, r2
    15bc:	000ba10e 	andeq	sl, fp, lr, lsl #2
    15c0:	0f150200 	svceq	0x00150200
    15c4:	00000bac 	andeq	r0, r0, ip, lsr #23
    15c8:	00000294 	muleq	r0, r4, r2
    15cc:	00011c01 	andeq	r1, r1, r1, lsl #24
    15d0:	00012700 	andeq	r2, r1, r0, lsl #14
    15d4:	02890b00 	addeq	r0, r9, #0, 22
    15d8:	720c0000 	andvc	r0, ip, #0
    15dc:	00000002 	andeq	r0, r0, r2
    15e0:	000ba10e 	andeq	sl, fp, lr, lsl #2
    15e4:	0f160200 	svceq	0x00160200
    15e8:	00000c89 	andeq	r0, r0, r9, lsl #25
    15ec:	00000294 	muleq	r0, r4, r2
    15f0:	00014001 	andeq	r4, r1, r1
    15f4:	00014b00 	andeq	r4, r1, r0, lsl #22
    15f8:	02890b00 	addeq	r0, r9, #0, 22
    15fc:	320c0000 	andcc	r0, ip, #0
    1600:	00000000 	andeq	r0, r0, r0
    1604:	000ba10e 	andeq	sl, fp, lr, lsl #2
    1608:	0f170200 	svceq	0x00170200
    160c:	00000c34 	andeq	r0, r0, r4, lsr ip
    1610:	00000294 	muleq	r0, r4, r2
    1614:	00016401 	andeq	r6, r1, r1, lsl #8
    1618:	00016f00 	andeq	r6, r1, r0, lsl #30
    161c:	02890b00 	addeq	r0, r9, #0, 22
    1620:	660c0000 	strvs	r0, [ip], -r0
    1624:	00000002 	andeq	r0, r0, r2
    1628:	000ba10e 	andeq	sl, fp, lr, lsl #2
    162c:	0f180200 	svceq	0x00180200
    1630:	00000bf4 	strdeq	r0, [r0], -r4
    1634:	00000294 	muleq	r0, r4, r2
    1638:	00018801 	andeq	r8, r1, r1, lsl #16
    163c:	00019300 	andeq	r9, r1, r0, lsl #6
    1640:	02890b00 	addeq	r0, r9, #0, 22
    1644:	9a0c0000 	bls	30164c <_bss_end+0x2ef95c>
    1648:	00000002 	andeq	r0, r0, r2
    164c:	000ab40f 	andeq	fp, sl, pc, lsl #8
    1650:	111b0200 	tstne	fp, r0, lsl #4
    1654:	00000a84 	andeq	r0, r0, r4, lsl #21
    1658:	000001a7 	andeq	r0, r0, r7, lsr #3
    165c:	000001ad 	andeq	r0, r0, sp, lsr #3
    1660:	0002890b 	andeq	r8, r2, fp, lsl #18
    1664:	a70f0000 	strge	r0, [pc, -r0]
    1668:	0200000a 	andeq	r0, r0, #10
    166c:	0c45111c 	stfeqe	f1, [r5], {28}
    1670:	01c10000 	biceq	r0, r1, r0
    1674:	01c70000 	biceq	r0, r7, r0
    1678:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    167c:	00000002 	andeq	r0, r0, r2
    1680:	000a5f0f 	andeq	r5, sl, pc, lsl #30
    1684:	111d0200 	tstne	sp, r0, lsl #4
    1688:	00000b2d 	andeq	r0, r0, sp, lsr #22
    168c:	000001db 	ldrdeq	r0, [r0], -fp
    1690:	000001e1 	andeq	r0, r0, r1, ror #3
    1694:	0002890b 	andeq	r8, r2, fp, lsl #18
    1698:	e10f0000 	mrs	r0, CPSR
    169c:	02000013 	andeq	r0, r0, #19
    16a0:	0c1e0a1f 			; <UNDEFINED> instruction: 0x0c1e0a1f
    16a4:	01f50000 	mvnseq	r0, r0
    16a8:	01fb0000 	mvnseq	r0, r0
    16ac:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    16b0:	00000002 	andeq	r0, r0, r2
    16b4:	000aa20f 	andeq	sl, sl, pc, lsl #4
    16b8:	0a210200 	beq	841ec0 <_bss_end+0x8301d0>
    16bc:	00000bbf 			; <UNDEFINED> instruction: 0x00000bbf
    16c0:	0000020f 	andeq	r0, r0, pc, lsl #4
    16c4:	00000224 	andeq	r0, r0, r4, lsr #4
    16c8:	0002890b 	andeq	r8, r2, fp, lsl #18
    16cc:	02660c00 	rsbeq	r0, r6, #0, 24
    16d0:	a10c0000 	mrsge	r0, (UNDEF: 12)
    16d4:	0c000002 	stceq	0, cr0, [r0], {2}
    16d8:	00000266 	andeq	r0, r0, r6, ror #4
    16dc:	0b4f1000 	bleq	13c56e4 <_bss_end+0x13b39f4>
    16e0:	2b020000 	blcs	816e8 <_bss_end+0x6f9f8>
    16e4:	0002ad23 	andeq	sl, r2, r3, lsr #26
    16e8:	16100000 	ldrne	r0, [r0], -r0
    16ec:	0200000c 	andeq	r0, r0, #12
    16f0:	0266122c 	rsbeq	r1, r6, #44, 4	; 0xc0000002
    16f4:	10040000 	andne	r0, r4, r0
    16f8:	00000bd6 	ldrdeq	r0, [r0], -r6
    16fc:	66122d02 	ldrvs	r2, [r2], -r2, lsl #26
    1700:	08000002 	stmdaeq	r0, {r1}
    1704:	000bdf10 	andeq	sp, fp, r0, lsl pc
    1708:	0f2e0200 	svceq	0x002e0200
    170c:	00000057 	andeq	r0, r0, r7, asr r0
    1710:	0a51100c 	beq	1445748 <_bss_end+0x1433a58>
    1714:	2f020000 	svccs	0x00020000
    1718:	00003212 	andeq	r3, r0, r2, lsl r2
    171c:	11001400 	tstne	r0, r0, lsl #8
    1720:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
    1724:	66050000 	strvs	r0, [r5], -r0
    1728:	12000002 	andne	r0, r0, #2
    172c:	00028404 	andeq	r8, r2, r4, lsl #8
    1730:	02720500 	rsbseq	r0, r2, #0, 10
    1734:	01110000 	tsteq	r1, r0
    1738:	00057308 	andeq	r7, r5, r8, lsl #6
    173c:	027d0500 	rsbseq	r0, sp, #0, 10
    1740:	04120000 	ldreq	r0, [r2], #-0
    1744:	00000025 	andeq	r0, r0, r5, lsr #32
    1748:	00028905 	andeq	r8, r2, r5, lsl #18
    174c:	25041300 	strcs	r1, [r4, #-768]	; 0xfffffd00
    1750:	11000000 	mrsne	r0, (UNDEF: 0)
    1754:	45480201 	strbmi	r0, [r8, #-513]	; 0xfffffdff
    1758:	04120000 	ldreq	r0, [r2], #-0
    175c:	0000027d 	andeq	r0, r0, sp, ror r2
    1760:	02b90412 	adcseq	r0, r9, #301989888	; 0x12000000
    1764:	a7050000 	strge	r0, [r5, -r0]
    1768:	11000002 	tstne	r0, r2
    176c:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    1770:	b2140000 	andslt	r0, r4, #0
    1774:	15000002 	strne	r0, [r0, #-2]
    1778:	00000b68 	andeq	r0, r0, r8, ror #22
    177c:	25113202 	ldrcs	r3, [r1, #-514]	; 0xfffffdfe
    1780:	16000000 	strne	r0, [r0], -r0
    1784:	000002be 			; <UNDEFINED> instruction: 0x000002be
    1788:	050a0301 	streq	r0, [sl, #-769]	; 0xfffffcff
    178c:	010bd403 	tsteq	fp, r3, lsl #8
    1790:	0b591700 	bleq	1647398 <_bss_end+0x16356a8>
    1794:	97800000 	strls	r0, [r0, r0]
    1798:	001c0000 	andseq	r0, ip, r0
    179c:	9c010000 	stcls	0, cr0, [r1], {-0}
    17a0:	00024118 	andeq	r4, r2, r8, lsl r1
    17a4:	00972800 	addseq	r2, r7, r0, lsl #16
    17a8:	00005800 	andeq	r5, r0, r0, lsl #16
    17ac:	199c0100 	ldmibne	ip, {r8}
    17b0:	19000003 	stmdbne	r0, {r0, r1}
    17b4:	0000033b 	andeq	r0, r0, fp, lsr r3
    17b8:	1901a201 	stmdbne	r1, {r0, r9, sp, pc}
    17bc:	02000003 	andeq	r0, r0, #3
    17c0:	34197491 	ldrcc	r7, [r9], #-1169	; 0xfffffb6f
    17c4:	01000007 	tsteq	r0, r7
    17c8:	031901a2 	tsteq	r9, #-2147483608	; 0x80000028
    17cc:	91020000 	mrsls	r0, (UNDEF: 2)
    17d0:	041a0070 	ldreq	r0, [sl], #-112	; 0xffffff90
    17d4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    17d8:	01fb1b00 	mvnseq	r1, r0, lsl #22
    17dc:	87010000 	strhi	r0, [r1, -r0]
    17e0:	00033a06 	andeq	r3, r3, r6, lsl #20
    17e4:	0095ac00 	addseq	sl, r5, r0, lsl #24
    17e8:	00017c00 	andeq	r7, r1, r0, lsl #24
    17ec:	af9c0100 	svcge	0x009c0100
    17f0:	1c000003 	stcne	0, cr0, [r0], {3}
    17f4:	0000032c 	andeq	r0, r0, ip, lsr #6
    17f8:	0000028f 	andeq	r0, r0, pc, lsl #5
    17fc:	19649102 	stmdbne	r4!, {r1, r8, ip, pc}^
    1800:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    1804:	66228701 	strtvs	r8, [r2], -r1, lsl #14
    1808:	02000002 	andeq	r0, r0, #2
    180c:	ab196091 	blge	659a58 <_bss_end+0x647d68>
    1810:	0100000c 	tsteq	r0, ip
    1814:	02a12f87 	adceq	r2, r1, #540	; 0x21c
    1818:	91020000 	mrsls	r0, (UNDEF: 2)
    181c:	1afe195c 	bne	fff87d94 <_bss_end+0xfff760a4>
    1820:	87010000 	strhi	r0, [r1, -r0]
    1824:	00026644 	andeq	r6, r2, r4, asr #12
    1828:	58910200 	ldmpl	r1, {r9}
    182c:	0100691d 	tsteq	r0, sp, lsl r9
    1830:	03190989 	tsteq	r9, #2244608	; 0x224000
    1834:	91020000 	mrsls	r0, (UNDEF: 2)
    1838:	96801e74 			; <UNDEFINED> instruction: 0x96801e74
    183c:	00980000 	addseq	r0, r8, r0
    1840:	6a1d0000 	bvs	741848 <_bss_end+0x72fb58>
    1844:	0e9c0100 	fmleqe	f0, f4, f0
    1848:	00000319 	andeq	r0, r0, r9, lsl r3
    184c:	1e709102 	expnes	f1, f2
    1850:	000096a8 	andeq	r9, r0, r8, lsr #13
    1854:	00000060 	andeq	r0, r0, r0, rrx
    1858:	0100631d 	tsteq	r0, sp, lsl r3
    185c:	027d0e9e 	rsbseq	r0, sp, #2528	; 0x9e0
    1860:	91020000 	mrsls	r0, (UNDEF: 2)
    1864:	0000006f 	andeq	r0, r0, pc, rrx
    1868:	00016f1b 	andeq	r6, r1, fp, lsl pc
    186c:	0b770100 	bleq	1dc1c74 <_bss_end+0x1daff84>
    1870:	000003c9 	andeq	r0, r0, r9, asr #7
    1874:	0000954c 	andeq	r9, r0, ip, asr #10
    1878:	00000060 	andeq	r0, r0, r0, rrx
    187c:	03e59c01 	mvneq	r9, #256	; 0x100
    1880:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    1884:	8f000003 	svchi	0x00000003
    1888:	02000002 	andeq	r0, r0, #2
    188c:	4b197491 	blmi	65ead8 <_bss_end+0x64cde8>
    1890:	0100000a 	tsteq	r0, sl
    1894:	029a2577 	addseq	r2, sl, #499122176	; 0x1dc00000
    1898:	91020000 	mrsls	r0, (UNDEF: 2)
    189c:	4b1b0073 	blmi	6c1a70 <_bss_end+0x6afd80>
    18a0:	01000001 	tsteq	r0, r1
    18a4:	03ff0b6a 	mvnseq	r0, #108544	; 0x1a800
    18a8:	94f80000 	ldrbtls	r0, [r8], #0
    18ac:	00540000 	subseq	r0, r4, r0
    18b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    18b4:	0000043f 	andeq	r0, r0, pc, lsr r4
    18b8:	00032c1c 	andeq	r2, r3, ip, lsl ip
    18bc:	00028f00 	andeq	r8, r2, r0, lsl #30
    18c0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    18c4:	6d756e1f 	ldclvs	14, cr6, [r5, #-124]!	; 0xffffff84
    18c8:	2d6a0100 	stfcse	f0, [sl, #-0]
    18cc:	00000266 	andeq	r0, r0, r6, ror #4
    18d0:	20709102 	rsbscs	r9, r0, r2, lsl #2
    18d4:	00000cc1 	andeq	r0, r0, r1, asr #25
    18d8:	6d236c01 	stcvs	12, cr6, [r3, #-4]!
    18dc:	05000002 	streq	r0, [r0, #-2]
    18e0:	00ffc403 	rscseq	ip, pc, r3, lsl #8
    18e4:	0cb82100 	ldfeqs	f2, [r8]
    18e8:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    18ec:	00043f11 	andeq	r3, r4, r1, lsl pc
    18f0:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    18f4:	0000010b 	andeq	r0, r0, fp, lsl #2
    18f8:	00027d22 	andeq	r7, r2, r2, lsr #26
    18fc:	00044f00 	andeq	r4, r4, r0, lsl #30
    1900:	02662300 	rsbeq	r2, r6, #0, 6
    1904:	000f0000 	andeq	r0, pc, r0
    1908:	00012724 	andeq	r2, r1, r4, lsr #14
    190c:	0b630100 	bleq	18c1d14 <_bss_end+0x18b0024>
    1910:	00000469 	andeq	r0, r0, r9, ror #8
    1914:	000094c4 	andeq	r9, r0, r4, asr #9
    1918:	00000034 	andeq	r0, r0, r4, lsr r0
    191c:	04859c01 	streq	r9, [r5], #3073	; 0xc01
    1920:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    1924:	8f000003 	svchi	0x00000003
    1928:	02000002 	andeq	r0, r0, #2
    192c:	53197491 	tstpl	r9, #-1862270976	; 0x91000000
    1930:	0100000a 	tsteq	r0, sl
    1934:	00323763 	eorseq	r3, r2, r3, ror #14
    1938:	91020000 	mrsls	r0, (UNDEF: 2)
    193c:	031b0070 	tsteq	fp, #112	; 0x70
    1940:	01000001 	tsteq	r0, r1
    1944:	049f0b57 	ldreq	r0, [pc], #2903	; 194c <CPSR_IRQ_INHIBIT+0x18cc>
    1948:	944c0000 	strbls	r0, [ip], #-0
    194c:	00780000 	rsbseq	r0, r8, r0
    1950:	9c010000 	stcls	0, cr0, [r1], {-0}
    1954:	000004d2 	ldrdeq	r0, [r0], -r2
    1958:	00032c1c 	andeq	r2, r3, ip, lsl ip
    195c:	00028f00 	andeq	r8, r2, r0, lsl #30
    1960:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1964:	7274731f 	rsbsvc	r7, r4, #2080374784	; 0x7c000000
    1968:	2c570100 	ldfcse	f0, [r7], {-0}
    196c:	00000272 	andeq	r0, r0, r2, ror r2
    1970:	1e689102 	lgnnee	f1, f2
    1974:	00009460 	andeq	r9, r0, r0, ror #8
    1978:	0000004c 	andeq	r0, r0, ip, asr #32
    197c:	0100691d 	tsteq	r0, sp, lsl r9
    1980:	02661759 	rsbeq	r1, r6, #23330816	; 0x1640000
    1984:	91020000 	mrsls	r0, (UNDEF: 2)
    1988:	1b000074 	blne	1b60 <CPSR_IRQ_INHIBIT+0x1ae0>
    198c:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1990:	ec0b4501 	cfstr32	mvfx4, [fp], {1}
    1994:	a4000004 	strge	r0, [r0], #-4
    1998:	a8000093 	stmdage	r0, {r0, r1, r4, r7}
    199c:	01000000 	mrseq	r0, (UNDEF: 0)
    19a0:	0005069c 	muleq	r5, ip, r6
    19a4:	032c1c00 			; <UNDEFINED> instruction: 0x032c1c00
    19a8:	028f0000 	addeq	r0, pc, #0
    19ac:	91020000 	mrsls	r0, (UNDEF: 2)
    19b0:	00631f74 	rsbeq	r1, r3, r4, ror pc
    19b4:	7d254501 	cfstr32vc	mvfx4, [r5, #-4]!
    19b8:	02000002 	andeq	r0, r0, #2
    19bc:	24007391 	strcs	r7, [r0], #-913	; 0xfffffc6f
    19c0:	000001c7 	andeq	r0, r0, r7, asr #3
    19c4:	20064001 	andcs	r4, r6, r1
    19c8:	5c000005 	stcpl	0, cr0, [r0], {5}
    19cc:	2c000098 	stccs	0, cr0, [r0], {152}	; 0x98
    19d0:	01000000 	mrseq	r0, (UNDEF: 0)
    19d4:	00052d9c 	muleq	r5, ip, sp
    19d8:	032c1c00 			; <UNDEFINED> instruction: 0x032c1c00
    19dc:	028f0000 	addeq	r0, pc, #0
    19e0:	91020000 	mrsls	r0, (UNDEF: 2)
    19e4:	e1240074 	bkpt	0x4004
    19e8:	01000001 	tsteq	r0, r1
    19ec:	05470630 	strbeq	r0, [r7, #-1584]	; 0xfffff9d0
    19f0:	92740000 	rsbsls	r0, r4, #0
    19f4:	01300000 	teqeq	r0, r0
    19f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    19fc:	0000059d 	muleq	r0, sp, r5
    1a00:	00032c1c 	andeq	r2, r3, ip, lsl ip
    1a04:	00028f00 	andeq	r8, r2, r0, lsl #30
    1a08:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    1a0c:	00928425 	addseq	r8, r2, r5, lsr #8
    1a10:	0000b000 	andeq	fp, r0, r0
    1a14:	00058500 	andeq	r8, r5, r0, lsl #10
    1a18:	00791d00 	rsbseq	r1, r9, r0, lsl #26
    1a1c:	66173201 	ldrvs	r3, [r7], -r1, lsl #4
    1a20:	02000002 	andeq	r0, r0, #2
    1a24:	a01e7491 	mulsge	lr, r1, r4
    1a28:	84000092 	strhi	r0, [r0], #-146	; 0xffffff6e
    1a2c:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a30:	34010078 	strcc	r0, [r1], #-120	; 0xffffff88
    1a34:	0002661b 	andeq	r6, r2, fp, lsl r6
    1a38:	70910200 	addsvc	r0, r1, r0, lsl #4
    1a3c:	341e0000 	ldrcc	r0, [lr], #-0
    1a40:	60000093 	mulvs	r0, r3, r0
    1a44:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a48:	3a010078 	bcc	41c30 <_bss_end+0x2ff40>
    1a4c:	00026617 	andeq	r6, r2, r7, lsl r6
    1a50:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1a54:	931b0000 	tstls	fp, #0
    1a58:	01000001 	tsteq	r0, r1
    1a5c:	05b70621 	ldreq	r0, [r7, #1569]!	; 0x621
    1a60:	97d40000 	ldrbls	r0, [r4, r0]
    1a64:	00880000 	addeq	r0, r8, r0
    1a68:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a6c:	000005c4 	andeq	r0, r0, r4, asr #11
    1a70:	00032c1c 	andeq	r2, r3, ip, lsl ip
    1a74:	00028f00 	andeq	r8, r2, r0, lsl #30
    1a78:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1a7c:	00c41b00 	sbceq	r1, r4, r0, lsl #22
    1a80:	14010000 	strne	r0, [r1], #-0
    1a84:	0005de06 	andeq	sp, r5, r6, lsl #28
    1a88:	0091cc00 	addseq	ip, r1, r0, lsl #24
    1a8c:	0000a800 	andeq	sl, r0, r0, lsl #16
    1a90:	199c0100 	ldmibne	ip, {r8}
    1a94:	1c000006 	stcne	0, cr0, [r0], {6}
    1a98:	0000032c 	andeq	r0, r0, ip, lsr #6
    1a9c:	0000028f 	andeq	r0, r0, pc, lsl #5
    1aa0:	1e6c9102 	lgnnee	f1, f2
    1aa4:	000091e4 	andeq	r9, r0, r4, ror #3
    1aa8:	00000084 	andeq	r0, r0, r4, lsl #1
    1aac:	0100791d 	tsteq	r0, sp, lsl r9
    1ab0:	02661718 	rsbeq	r1, r6, #24, 14	; 0x600000
    1ab4:	91020000 	mrsls	r0, (UNDEF: 2)
    1ab8:	92001e74 	andls	r1, r0, #116, 28	; 0x740
    1abc:	00580000 	subseq	r0, r8, r0
    1ac0:	781d0000 	ldmdavc	sp, {}	; <UNPREDICTABLE>
    1ac4:	1b1a0100 	blne	681ecc <_bss_end+0x6701dc>
    1ac8:	00000266 	andeq	r0, r0, r6, ror #4
    1acc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    1ad0:	ad240000 	stcge	0, cr0, [r4, #-0]
    1ad4:	01000001 	tsteq	r0, r1
    1ad8:	0633060e 	ldrteq	r0, [r3], -lr, lsl #12
    1adc:	979c0000 	ldrls	r0, [ip, r0]
    1ae0:	00380000 	eorseq	r0, r8, r0
    1ae4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ae8:	00000640 	andeq	r0, r0, r0, asr #12
    1aec:	00032c1c 	andeq	r2, r3, ip, lsl ip
    1af0:	00028f00 	andeq	r8, r2, r0, lsl #30
    1af4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1af8:	00962600 	addseq	r2, r6, r0, lsl #12
    1afc:	05010000 	streq	r0, [r1, #-0]
    1b00:	00065101 	andeq	r5, r6, r1, lsl #2
    1b04:	067f0000 	ldrbteq	r0, [pc], -r0
    1b08:	2c270000 	stccs	0, cr0, [r7], #-0
    1b0c:	8f000003 	svchi	0x00000003
    1b10:	28000002 	stmdacs	r0, {r1}
    1b14:	00000b71 	andeq	r0, r0, r1, ror fp
    1b18:	66210501 	strtvs	r0, [r1], -r1, lsl #10
    1b1c:	28000002 	stmdacs	r0, {r1}
    1b20:	00000c18 	andeq	r0, r0, r8, lsl ip
    1b24:	66410501 	strbvs	r0, [r1], -r1, lsl #10
    1b28:	28000002 	stmdacs	r0, {r1}
    1b2c:	00000bd8 	ldrdeq	r0, [r0], -r8
    1b30:	66550501 	ldrbvs	r0, [r5], -r1, lsl #10
    1b34:	00000002 	andeq	r0, r0, r2
    1b38:	00064029 	andeq	r4, r6, r9, lsr #32
    1b3c:	000a7100 	andeq	r7, sl, r0, lsl #2
    1b40:	00069600 	andeq	r9, r6, r0, lsl #12
    1b44:	00915400 	addseq	r5, r1, r0, lsl #8
    1b48:	00007800 	andeq	r7, r0, r0, lsl #16
    1b4c:	2a9c0100 	bcs	fe701f54 <_bss_end+0xfe6f0264>
    1b50:	00000651 	andeq	r0, r0, r1, asr r6
    1b54:	2a749102 	bcs	1d25f64 <_bss_end+0x1d14274>
    1b58:	0000065a 	andeq	r0, r0, sl, asr r6
    1b5c:	2a709102 	bcs	1c25f6c <_bss_end+0x1c1427c>
    1b60:	00000666 	andeq	r0, r0, r6, ror #12
    1b64:	2a6c9102 	bcs	1b25f74 <_bss_end+0x1b14284>
    1b68:	00000672 	andeq	r0, r0, r2, ror r6
    1b6c:	00689102 	rsbeq	r9, r8, r2, lsl #2
    1b70:	00134700 	andseq	r4, r3, r0, lsl #14
    1b74:	e1000400 	tst	r0, r0, lsl #8
    1b78:	04000008 	streq	r0, [r0], #-8
    1b7c:	00001401 	andeq	r1, r0, r1, lsl #8
    1b80:	0d3a0400 	cfldrseq	mvf0, [sl, #-0]
    1b84:	00c50000 	sbceq	r0, r5, r0
    1b88:	00900000 	addseq	r0, r0, r0
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	0ba00000 	bleq	fe801b98 <_bss_end+0xfe7efea8>
    1b94:	01020000 	mrseq	r0, (UNDEF: 2)
    1b98:	00057308 	andeq	r7, r5, r8, lsl #6
    1b9c:	00250300 	eoreq	r0, r5, r0, lsl #6
    1ba0:	02020000 	andeq	r0, r2, #0
    1ba4:	00059905 	andeq	r9, r5, r5, lsl #18
    1ba8:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1bac:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1bb0:	00003803 	andeq	r3, r0, r3, lsl #16
    1bb4:	09820500 	stmibeq	r2, {r8, sl}
    1bb8:	07040000 	streq	r0, [r4, -r0]
    1bbc:	00005507 	andeq	r5, r0, r7, lsl #10
    1bc0:	00440300 	subeq	r0, r4, r0, lsl #6
    1bc4:	01020000 	mrseq	r0, (UNDEF: 2)
    1bc8:	00056a08 	andeq	r6, r5, r8, lsl #20
    1bcc:	00550600 	subseq	r0, r5, r0, lsl #12
    1bd0:	55030000 	strpl	r0, [r3, #-0]
    1bd4:	05000000 	streq	r0, [r0, #-0]
    1bd8:	00000798 	muleq	r0, r8, r7
    1bdc:	77070804 	strvc	r0, [r7, -r4, lsl #16]
    1be0:	03000000 	movweq	r0, #0
    1be4:	00000066 	andeq	r0, r0, r6, rrx
    1be8:	dc070202 	sfmle	f0, 4, [r7], {2}
    1bec:	05000003 	streq	r0, [r0, #-3]
    1bf0:	000005e4 	andeq	r0, r0, r4, ror #11
    1bf4:	94070904 	strls	r0, [r7], #-2308	; 0xfffff6fc
    1bf8:	03000000 	movweq	r0, #0
    1bfc:	0000007e 	andeq	r0, r0, lr, ror r0
    1c00:	00007e06 	andeq	r7, r0, r6, lsl #28
    1c04:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1c08:	00004591 	muleq	r0, r1, r5
    1c0c:	00009403 	andeq	r9, r0, r3, lsl #8
    1c10:	61680700 	cmnvs	r8, r0, lsl #14
    1c14:	0505006c 	streq	r0, [r5, #-108]	; 0xffffff94
    1c18:	0001990b 	andeq	r9, r1, fp, lsl #18
    1c1c:	04870800 	streq	r0, [r7], #2048	; 0x800
    1c20:	07050000 	streq	r0, [r5, -r0]
    1c24:	00009b1c 	andeq	r9, r0, ip, lsl fp
    1c28:	e6b28000 	ldrt	r8, [r2], r0
    1c2c:	05cc080e 	strbeq	r0, [ip, #2062]	; 0x80e
    1c30:	0a050000 	beq	141c38 <_bss_end+0x12ff48>
    1c34:	0001a51d 	andeq	sl, r1, sp, lsl r5
    1c38:	00000000 	andeq	r0, r0, r0
    1c3c:	04520820 	ldrbeq	r0, [r2], #-2080	; 0xfffff7e0
    1c40:	0d050000 	stceq	0, cr0, [r5, #-0]
    1c44:	0001a51d 	andeq	sl, r1, sp, lsl r5
    1c48:	20000000 	andcs	r0, r0, r0
    1c4c:	058a0920 	streq	r0, [sl, #2336]	; 0x920
    1c50:	10050000 	andne	r0, r5, r0
    1c54:	00008a18 	andeq	r8, r0, r8, lsl sl
    1c58:	73083600 	movwvc	r3, #34304	; 0x8600
    1c5c:	05000003 	streq	r0, [r0, #-3]
    1c60:	01a51d42 			; <UNDEFINED> instruction: 0x01a51d42
    1c64:	50000000 	andpl	r0, r0, r0
    1c68:	4a082021 	bmi	209cf4 <_bss_end+0x1f8004>
    1c6c:	05000003 	streq	r0, [r0, #-3]
    1c70:	01a51d71 			; <UNDEFINED> instruction: 0x01a51d71
    1c74:	b2000000 	andlt	r0, r0, #0
    1c78:	b6082000 	strlt	r2, [r8], -r0
    1c7c:	05000002 	streq	r0, [r0, #-2]
    1c80:	01a51da4 			; <UNDEFINED> instruction: 0x01a51da4
    1c84:	b4000000 	strlt	r0, [r0], #-0
    1c88:	64082000 	strvs	r2, [r8], #-0
    1c8c:	05000003 	streq	r0, [r0, #-3]
    1c90:	01a51db3 			; <UNDEFINED> instruction: 0x01a51db3
    1c94:	40000000 	andmi	r0, r0, r0
    1c98:	31082010 	tstcc	r8, r0, lsl r0
    1c9c:	05000003 	streq	r0, [r0, #-3]
    1ca0:	01a51dbe 			; <UNDEFINED> instruction: 0x01a51dbe
    1ca4:	50000000 	andpl	r0, r0, r0
    1ca8:	ef082020 	svc	0x00082020
    1cac:	05000003 	streq	r0, [r0, #-3]
    1cb0:	01a51dbf 			; <UNDEFINED> instruction: 0x01a51dbf
    1cb4:	40000000 	andmi	r0, r0, r0
    1cb8:	5c082080 	stcpl	0, cr2, [r8], {128}	; 0x80
    1cbc:	05000004 	streq	r0, [r0, #-4]
    1cc0:	01a51dc0 			; <UNDEFINED> instruction: 0x01a51dc0
    1cc4:	50000000 	andpl	r0, r0, r0
    1cc8:	a10a2080 	smlabbge	sl, r0, r0, r2
    1ccc:	05000007 	streq	r0, [r0, #-7]
    1cd0:	00003804 	andeq	r3, r0, r4, lsl #16
    1cd4:	10c20500 	sbcne	r0, r2, r0, lsl #10
    1cd8:	00358a0b 	eorseq	r8, r5, fp, lsl #20
    1cdc:	0c0b0000 	stceq	0, cr0, [fp], {-0}
    1ce0:	0100000a 	tsteq	r0, sl
    1ce4:	00094a0b 	andeq	r4, r9, fp, lsl #20
    1ce8:	8b0b0200 	blhi	2c24f0 <_bss_end+0x2b0800>
    1cec:	03000012 	movweq	r0, #18
    1cf0:	0008680b 	andeq	r6, r8, fp, lsl #16
    1cf4:	030b0400 	movweq	r0, #46080	; 0xb400
    1cf8:	05000008 	streq	r0, [r0, #-8]
    1cfc:	0007490b 	andeq	r4, r7, fp, lsl #18
    1d00:	e40b0600 	str	r0, [fp], #-1536	; 0xfffffa00
    1d04:	07000007 	streq	r0, [r0, -r7]
    1d08:	ac0c0000 	stcge	0, cr0, [ip], {-0}
    1d0c:	02000000 	andeq	r0, r0, #0
    1d10:	458c0704 	strmi	r0, [ip, #1796]	; 0x704
    1d14:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    1d18:	0c000001 	stceq	0, cr0, [r0], {1}
    1d1c:	000000bc 	strheq	r0, [r0], -ip
    1d20:	0000cc0c 	andeq	ip, r0, ip, lsl #24
    1d24:	00dc0c00 	sbcseq	r0, ip, r0, lsl #24
    1d28:	e90c0000 	stmdb	ip, {}	; <UNPREDICTABLE>
    1d2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d30:	000000f9 	strdeq	r0, [r0], -r9
    1d34:	0001090c 	andeq	r0, r1, ip, lsl #18
    1d38:	01190c00 	tsteq	r9, r0, lsl #24
    1d3c:	290c0000 	stmdbcs	ip, {}	; <UNPREDICTABLE>
    1d40:	0c000001 	stceq	0, cr0, [r0], {1}
    1d44:	00000139 	andeq	r0, r0, r9, lsr r1
    1d48:	0001490c 	andeq	r4, r1, ip, lsl #18
    1d4c:	098a0d00 	stmibeq	sl, {r8, sl, fp}
    1d50:	06030000 	streq	r0, [r3], -r0
    1d54:	00008a14 	andeq	r8, r0, r4, lsl sl
    1d58:	18030500 	stmdane	r3, {r8, sl}
    1d5c:	0e000100 	adfeqs	f0, f0, f0
    1d60:	00000754 	andeq	r0, r0, r4, asr r7
    1d64:	070b0314 	smladeq	fp, r4, r3, r0
    1d68:	000002ed 	andeq	r0, r0, sp, ror #5
    1d6c:	0007d70f 	andeq	sp, r7, pc, lsl #14
    1d70:	0e0f0300 	cdpeq	3, 0, cr0, cr15, cr0, {0}
    1d74:	000002ed 	andeq	r0, r0, sp, ror #5
    1d78:	08600f00 	stmdaeq	r0!, {r8, r9, sl, fp}^
    1d7c:	11030000 	mrsne	r0, (UNDEF: 3)
    1d80:	0002f911 	andeq	pc, r2, r1, lsl r9	; <UNPREDICTABLE>
    1d84:	420f0100 	andmi	r0, pc, #0, 2
    1d88:	03000009 	movweq	r0, #9
    1d8c:	007e1213 	rsbseq	r1, lr, r3, lsl r2
    1d90:	0f0c0000 	svceq	0x000c0000
    1d94:	000008f2 	strdeq	r0, [r0], -r2
    1d98:	66121503 	ldrvs	r1, [r2], -r3, lsl #10
    1d9c:	10000000 	andne	r0, r0, r0
    1da0:	00075410 	andeq	r5, r7, r0, lsl r4
    1da4:	09180300 	ldmdbeq	r8, {r8, r9}
    1da8:	000007e9 	andeq	r0, r0, r9, ror #15
    1dac:	00000309 	andeq	r0, r0, r9, lsl #6
    1db0:	02490101 	subeq	r0, r9, #1073741824	; 0x40000000
    1db4:	024f0000 	subeq	r0, pc, #0
    1db8:	09110000 	ldmdbeq	r1, {}	; <UNPREDICTABLE>
    1dbc:	00000003 	andeq	r0, r0, r3
    1dc0:	00095612 	andeq	r5, r9, r2, lsl r6
    1dc4:	0e1a0300 	cdpeq	3, 1, cr0, cr10, cr0, {0}
    1dc8:	00000872 	andeq	r0, r0, r2, ror r8
    1dcc:	00026401 	andeq	r6, r2, r1, lsl #8
    1dd0:	00026f00 	andeq	r6, r2, r0, lsl #30
    1dd4:	03091100 	movweq	r1, #37120	; 0x9100
    1dd8:	66130000 	ldrvs	r0, [r3], -r0
    1ddc:	00000000 	andeq	r0, r0, r0
    1de0:	000f7c14 	andeq	r7, pc, r4, lsl ip	; <UNPREDICTABLE>
    1de4:	1b210300 	blne	8429ec <_bss_end+0x830cfc>
    1de8:	00000fcc 	andeq	r0, r0, ip, asr #31
    1dec:	000004f5 	strdeq	r0, [r0], -r5
    1df0:	00028f01 	andeq	r8, r2, r1, lsl #30
    1df4:	00029a00 	andeq	r9, r2, r0, lsl #20
    1df8:	00541500 	subseq	r1, r4, r0, lsl #10
    1dfc:	00000055 	andeq	r0, r0, r5, asr r0
    1e00:	00030911 	andeq	r0, r3, r1, lsl r9
    1e04:	0cab1300 	stceq	3, cr1, [fp]
    1e08:	14000000 	strne	r0, [r0], #-0
    1e0c:	00001106 	andeq	r1, r0, r6, lsl #2
    1e10:	ef1b2103 	svc	0x001b2103
    1e14:	f500000f 			; <UNDEFINED> instruction: 0xf500000f
    1e18:	01000004 	tsteq	r0, r4
    1e1c:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
    1e20:	000002c5 	andeq	r0, r0, r5, asr #5
    1e24:	38005415 	stmdacc	r0, {r0, r2, r4, sl, ip, lr}
    1e28:	11000000 	mrsne	r0, (UNDEF: 0)
    1e2c:	00000309 	andeq	r0, r0, r9, lsl #6
    1e30:	000ceb13 	andeq	lr, ip, r3, lsl fp
    1e34:	03160000 	tsteq	r6, #0
    1e38:	03000014 	movweq	r0, #20
    1e3c:	12b11b21 	adcsne	r1, r1, #33792	; 0x8400
    1e40:	04f50000 	ldrbteq	r0, [r5], #0
    1e44:	e1010000 	mrs	r0, (UNDEF: 1)
    1e48:	15000002 	strne	r0, [r0, #-2]
    1e4c:	05190054 	ldreq	r0, [r9, #-84]	; 0xffffffac
    1e50:	09110000 	ldmdbeq	r1, {}	; <UNPREDICTABLE>
    1e54:	13000003 	movwne	r0, #3
    1e58:	00000d2b 	andeq	r0, r0, fp, lsr #26
    1e5c:	01020000 	mrseq	r0, (UNDEF: 2)
    1e60:	00454802 	subeq	r4, r5, r2, lsl #16
    1e64:	02ed0300 	rsceq	r0, sp, #0, 6
    1e68:	44170000 	ldrmi	r0, [r7], #-0
    1e6c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1e70:	18000003 	stmdane	r0, {r0, r1}
    1e74:	00000094 	muleq	r0, r4, r0
    1e78:	04190007 	ldreq	r0, [r9], #-7
    1e7c:	000001ee 	andeq	r0, r0, lr, ror #3
    1e80:	00030903 	andeq	r0, r3, r3, lsl #18
    1e84:	0f770e00 	svceq	0x00770e00
    1e88:	03240000 			; <UNDEFINED> instruction: 0x03240000
    1e8c:	04c2072c 	strbeq	r0, [r2], #1836	; 0x72c
    1e90:	a30f0000 	movwge	r0, #61440	; 0xf000
    1e94:	03000009 	movweq	r0, #9
    1e98:	04cd2230 	strbeq	r2, [sp], #560	; 0x230
    1e9c:	0f000000 	svceq	0x00000000
    1ea0:	00000765 	andeq	r0, r0, r5, ror #14
    1ea4:	ed0e3203 	sfm	f3, 4, [lr, #-12]
    1ea8:	04000002 	streq	r0, [r0], #-2
    1eac:	0009b30f 	andeq	fp, r9, pc, lsl #6
    1eb0:	12350300 	eorsne	r0, r5, #0, 6
    1eb4:	0000007e 	andeq	r0, r0, lr, ror r0
    1eb8:	08e90f08 	stmiaeq	r9!, {r3, r8, r9, sl, fp}^
    1ebc:	37030000 	strcc	r0, [r3, -r0]
    1ec0:	00007e12 	andeq	r7, r0, r2, lsl lr
    1ec4:	130f0c00 	movwne	r0, #64512	; 0xfc00
    1ec8:	0300000a 	movweq	r0, #10
    1ecc:	01ee1a3a 	mvneq	r1, sl, lsr sl
    1ed0:	1a100000 	bne	401ed8 <_bss_end+0x3f01e8>
    1ed4:	00676552 	rsbeq	r6, r7, r2, asr r5
    1ed8:	7c1c3d03 	ldcvc	13, cr3, [ip], {3}
    1edc:	d2000007 	andle	r0, r0, #7
    1ee0:	02000004 	andeq	r0, r0, #4
    1ee4:	0000037b 	andeq	r0, r0, fp, ror r3
    1ee8:	00000386 	andeq	r0, r0, r6, lsl #7
    1eec:	0004d811 	andeq	sp, r4, r1, lsl r8
    1ef0:	01591300 	cmpeq	r9, r0, lsl #6
    1ef4:	12000000 	andne	r0, r0, #0
    1ef8:	00000962 	andeq	r0, r0, r2, ror #18
    1efc:	a90e4003 	stmdbge	lr, {r0, r1, lr}
    1f00:	02000007 	andeq	r0, r0, #7
    1f04:	0000039b 	muleq	r0, fp, r3
    1f08:	000003a1 	andeq	r0, r0, r1, lsr #7
    1f0c:	0004d811 	andeq	sp, r4, r1, lsl r8
    1f10:	77140000 	ldrvc	r0, [r4, -r0]
    1f14:	0300000f 	movweq	r0, #15
    1f18:	07c00943 	strbeq	r0, [r0, r3, asr #18]
    1f1c:	04d80000 	ldrbeq	r0, [r8], #0
    1f20:	ba010000 	blt	41f28 <_bss_end+0x30238>
    1f24:	cf000003 	svcgt	0x00000003
    1f28:	11000003 	tstne	r0, r3
    1f2c:	000004d8 	ldrdeq	r0, [r0], -r8
    1f30:	00019e13 	andeq	r9, r1, r3, lsl lr
    1f34:	007e1300 	rsbseq	r1, lr, r0, lsl #6
    1f38:	7e130000 	cdpvc	0, 1, cr0, cr3, cr0, {0}
    1f3c:	00000000 	andeq	r0, r0, r0
    1f40:	000a2014 	andeq	r2, sl, r4, lsl r0
    1f44:	0e460300 	cdpeq	3, 4, cr0, cr6, cr0, {0}
    1f48:	00000a3b 	andeq	r0, r0, fp, lsr sl
    1f4c:	000002ed 	andeq	r0, r0, sp, ror #5
    1f50:	0003e801 	andeq	lr, r3, r1, lsl #16
    1f54:	0003ee00 	andeq	lr, r3, r0, lsl #28
    1f58:	04d81100 	ldrbeq	r1, [r8], #256	; 0x100
    1f5c:	12000000 	andne	r0, r0, #0
    1f60:	000009ad 	andeq	r0, r0, sp, lsr #19
    1f64:	9f0e4803 	svcls	0x000e4803
    1f68:	01000008 	tsteq	r0, r8
    1f6c:	00000403 	andeq	r0, r0, r3, lsl #8
    1f70:	00000409 	andeq	r0, r0, r9, lsl #8
    1f74:	0004d811 	andeq	sp, r4, r1, lsl r8
    1f78:	3f140000 	svccc	0x00140000
    1f7c:	03000007 	movweq	r0, #7
    1f80:	08fb0e4a 	ldmeq	fp!, {r1, r3, r6, r9, sl, fp}^
    1f84:	02ed0000 	rsceq	r0, sp, #0
    1f88:	22010000 	andcs	r0, r1, #0
    1f8c:	28000004 	stmdacs	r0, {r2}
    1f90:	11000004 	tstne	r0, r4
    1f94:	000004de 	ldrdeq	r0, [r0], -lr
    1f98:	09231200 	stmdbeq	r3!, {r9, ip}
    1f9c:	4d030000 	stcmi	0, cr0, [r3, #-0]
    1fa0:	0008b00e 	andeq	fp, r8, lr
    1fa4:	043d0100 	ldrteq	r0, [sp], #-256	; 0xffffff00
    1fa8:	04520000 	ldrbeq	r0, [r2], #-0
    1fac:	d8110000 	ldmdale	r1, {}	; <UNPREDICTABLE>
    1fb0:	13000004 	movwne	r0, #4
    1fb4:	00000066 	andeq	r0, r0, r6, rrx
    1fb8:	0004e413 	andeq	lr, r4, r3, lsl r4
    1fbc:	007e1300 	rsbseq	r1, lr, r0, lsl #6
    1fc0:	12000000 	andne	r0, r0, #0
    1fc4:	000007cf 	andeq	r0, r0, pc, asr #15
    1fc8:	250e4f03 	strcs	r4, [lr, #-3843]	; 0xfffff0fd
    1fcc:	0100000a 	tsteq	r0, sl
    1fd0:	00000467 	andeq	r0, r0, r7, ror #8
    1fd4:	0000047c 	andeq	r0, r0, ip, ror r4
    1fd8:	0004d811 	andeq	sp, r4, r1, lsl r8
    1fdc:	00661300 	rsbeq	r1, r6, r0, lsl #6
    1fe0:	ef130000 	svc	0x00130000
    1fe4:	13000004 	movwne	r0, #4
    1fe8:	0000007e 	andeq	r0, r0, lr, ror r0
    1fec:	09111400 	ldmdbeq	r1, {sl, ip}
    1ff0:	52030000 	andpl	r0, r3, #0
    1ff4:	0008c41b 	andeq	ip, r8, fp, lsl r4
    1ff8:	0004f500 	andeq	pc, r4, r0, lsl #10
    1ffc:	04950100 	ldreq	r0, [r5], #256	; 0x100
    2000:	04a00000 	strteq	r0, [r0], #0
    2004:	d8110000 	ldmdale	r1, {}	; <UNPREDICTABLE>
    2008:	13000004 	movwne	r0, #4
    200c:	00000066 	andeq	r0, r0, r6, rrx
    2010:	083c1b00 	ldmdaeq	ip!, {r8, r9, fp, ip}
    2014:	54030000 	strpl	r0, [r3], #-0
    2018:	00080d0e 	andeq	r0, r8, lr, lsl #26
    201c:	04b10100 	ldrteq	r0, [r1], #256	; 0x100
    2020:	d8110000 	ldmdale	r1, {}	; <UNPREDICTABLE>
    2024:	13000004 	movwne	r0, #4
    2028:	000004f5 	strdeq	r0, [r0], -r5
    202c:	0002ed13 	andeq	lr, r2, r3, lsl sp
    2030:	03000000 	movweq	r0, #0
    2034:	00000314 	andeq	r0, r0, r4, lsl r3
    2038:	008f0419 	addeq	r0, pc, r9, lsl r4	; <UNPREDICTABLE>
    203c:	c7030000 	strgt	r0, [r3, -r0]
    2040:	1c000004 	stcne	0, cr0, [r0], {4}
    2044:	00008f04 	andeq	r8, r0, r4, lsl #30
    2048:	14041900 	strne	r1, [r4], #-2304	; 0xfffff700
    204c:	19000003 	stmdbne	r0, {r0, r1}
    2050:	0004c204 	andeq	ip, r4, r4, lsl #4
    2054:	2c041900 			; <UNDEFINED> instruction: 0x2c041900
    2058:	03000000 	movweq	r0, #0
    205c:	000004e4 	andeq	r0, r0, r4, ror #9
    2060:	00250419 	eoreq	r0, r5, r9, lsl r4
    2064:	041c0000 	ldreq	r0, [ip], #-0
    2068:	000001ee 	andeq	r0, r0, lr, ror #3
    206c:	00097c1d 	andeq	r7, r9, sp, lsl ip
    2070:	0d580300 	ldcleq	3, cr0, [r8, #-0]
    2074:	00000314 	andeq	r0, r0, r4, lsl r3
    2078:	0012830d 	andseq	r8, r2, sp, lsl #6
    207c:	14060600 	strne	r0, [r6], #-1536	; 0xfffffa00
    2080:	00000072 	andeq	r0, r0, r2, ror r0
    2084:	001c0305 	andseq	r0, ip, r5, lsl #6
    2088:	d91e0001 	ldmdble	lr, {r0}
    208c:	0500000d 	streq	r0, [r0, #-13]
    2090:	00003804 	andeq	r3, r0, r4, lsl #16
    2094:	0c090600 	stceq	6, cr0, [r9], {-0}
    2098:	000005f8 	strdeq	r0, [r0], -r8
    209c:	000f4f0b 	andeq	r4, pc, fp, lsl #30
    20a0:	d50b0000 	strle	r0, [fp, #-0]
    20a4:	c000000c 	andgt	r0, r0, ip
    20a8:	0012fb0b 	andseq	pc, r2, fp, lsl #22
    20ac:	b10b4000 	mrslt	r4, (UNDEF: 11)
    20b0:	81000013 	tsthi	r0, r3, lsl r0
    20b4:	00117c0b 	andseq	r7, r1, fp, lsl #24
    20b8:	280ba400 	stmdacs	fp, {sl, sp, pc}
    20bc:	a5000010 	strge	r0, [r0, #-16]
    20c0:	0011e80b 	andseq	lr, r1, fp, lsl #16
    20c4:	720ba600 	andvc	sl, fp, #0, 12
    20c8:	a7000012 	smladge	r0, r2, r0, r0
    20cc:	00131a0b 	andseq	r1, r3, fp, lsl #20
    20d0:	a70bae00 	strge	sl, [fp, -r0, lsl #28]
    20d4:	af00000f 	svcge	0x0000000f
    20d8:	706f4e1f 	rsbvc	r4, pc, pc, lsl lr	; <UNPREDICTABLE>
    20dc:	160be300 	strne	lr, [fp], -r0, lsl #6
    20e0:	26000012 			; <UNDEFINED> instruction: 0x26000012
    20e4:	0013950b 	andseq	r9, r3, fp, lsl #10
    20e8:	360b2700 	strcc	r2, [fp], -r0, lsl #14
    20ec:	2900000e 	stmdbcs	r0, {r1, r2, r3}
    20f0:	0013e80b 	andseq	lr, r3, fp, lsl #16
    20f4:	bb0b2a00 	bllt	2cc8fc <_bss_end+0x2bac0c>
    20f8:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    20fc:	0013d80b 	andseq	sp, r3, fp, lsl #16
    2100:	730b2f00 	movwvc	r2, #48896	; 0xbf00
    2104:	a3000010 	movwge	r0, #16
    2108:	000d930b 	andeq	r9, sp, fp, lsl #6
    210c:	a90b0000 	stmdbge	fp, {}	; <UNPREDICTABLE>
    2110:	10000010 	andne	r0, r0, r0, lsl r0
    2114:	000e5e0b 	andeq	r5, lr, fp, lsl #28
    2118:	b20b2000 	andlt	r2, fp, #0
    211c:	2100000f 	tstcs	r0, pc
    2120:	0010870b 	andseq	r8, r0, fp, lsl #14
    2124:	540b2200 	strpl	r2, [fp], #-512	; 0xfffffe00
    2128:	40000011 	andmi	r0, r0, r1, lsl r0
    212c:	0012e00b 	andseq	lr, r2, fp
    2130:	2d0ba000 	stccs	0, cr10, [fp, #-0]
    2134:	a8000011 	stmdage	r0, {r0, r4}
    2138:	0012a00b 	andseq	sl, r2, fp
    213c:	f50bc000 			; <UNDEFINED> instruction: 0xf50bc000
    2140:	c8000010 	stmdagt	r0, {r4}
    2144:	00122e0b 	andseq	r2, r2, fp, lsl #28
    2148:	ae0bd300 	cdpge	3, 0, cr13, cr11, cr0, {0}
    214c:	da00000e 	ble	218c <CPSR_IRQ_INHIBIT+0x210c>
    2150:	0011dc0b 	andseq	sp, r1, fp, lsl #24
    2154:	eb0b8d00 	bl	2e555c <_bss_end+0x2d386c>
    2158:	d500000e 	strle	r0, [r0, #-14]
    215c:	000f070b 	andeq	r0, pc, fp, lsl #14
    2160:	1c0bd900 			; <UNDEFINED> instruction: 0x1c0bd900
    2164:	d800000f 	stmdale	r0, {r0, r1, r2, r3}
    2168:	05190300 	ldreq	r0, [r9, #-768]	; 0xfffffd00
    216c:	170e0000 	strne	r0, [lr, -r0]
    2170:	14000010 	strne	r0, [r0], #-16
    2174:	7e073606 	cfmadd32vc	mvax0, mvfx3, mvfx7, mvfx6
    2178:	0f000007 	svceq	0x00000007
    217c:	00001037 	andeq	r1, r0, r7, lsr r0
    2180:	830f3a06 	movwhi	r3, #64006	; 0xfa06
    2184:	00000007 	andeq	r0, r0, r7
    2188:	0007650f 	andeq	r6, r7, pc, lsl #10
    218c:	0e3c0600 	cfmsuba32eq	mvax0, mvax0, mvfx12, mvfx0
    2190:	000002ed 	andeq	r0, r0, sp, ror #5
    2194:	08600f04 	stmdaeq	r0!, {r2, r8, r9, sl, fp}^
    2198:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    219c:	00078912 	andeq	r8, r7, r2, lsl r9
    21a0:	570f0800 	strpl	r0, [pc, -r0, lsl #16]
    21a4:	0600000e 	streq	r0, [r0], -lr
    21a8:	00380d40 	eorseq	r0, r8, r0, asr #26
    21ac:	0f0c0000 	svceq	0x000c0000
    21b0:	00000ccd 	andeq	r0, r0, sp, asr #25
    21b4:	38154006 	ldmdacc	r5, {r1, r2, lr}
    21b8:	10000000 	andne	r0, r0, r0
    21bc:	00124112 	andseq	r4, r2, r2, lsl r1
    21c0:	0e440600 	cdpeq	6, 4, cr0, cr4, cr0, {0}
    21c4:	0000134b 	andeq	r1, r0, fp, asr #6
    21c8:	00066002 	andeq	r6, r6, r2
    21cc:	00067000 	andeq	r7, r6, r0
    21d0:	078f1100 	streq	r1, [pc, r0, lsl #2]
    21d4:	19130000 	ldmdbne	r3, {}	; <UNPREDICTABLE>
    21d8:	13000005 	movwne	r0, #5
    21dc:	00000044 	andeq	r0, r0, r4, asr #32
    21e0:	10171400 	andsne	r1, r7, r0, lsl #8
    21e4:	47060000 	strmi	r0, [r6, -r0]
    21e8:	0011f709 	andseq	pc, r1, r9, lsl #14
    21ec:	00078f00 	andeq	r8, r7, r0, lsl #30
    21f0:	06890100 	streq	r0, [r9], r0, lsl #2
    21f4:	06940000 	ldreq	r0, [r4], r0
    21f8:	8f110000 	svchi	0x00110000
    21fc:	13000007 	movwne	r0, #7
    2200:	00000783 	andeq	r0, r0, r3, lsl #15
    2204:	0a201400 	beq	80720c <_bss_end+0x7f551c>
    2208:	4a060000 	bmi	182210 <_bss_end+0x170520>
    220c:	000f2c0e 	andeq	r2, pc, lr, lsl #24
    2210:	0002ed00 	andeq	lr, r2, r0, lsl #26
    2214:	06ad0100 	strteq	r0, [sp], r0, lsl #2
    2218:	06bd0000 	ldrteq	r0, [sp], r0
    221c:	8f110000 	svchi	0x00110000
    2220:	13000007 	movwne	r0, #7
    2224:	00000038 	andeq	r0, r0, r8, lsr r0
    2228:	00003813 	andeq	r3, r0, r3, lsl r8
    222c:	ad120000 	ldcge	0, cr0, [r2, #-0]
    2230:	06000009 	streq	r0, [r0], -r9
    2234:	141c0e4c 	ldrne	r0, [ip], #-3660	; 0xfffff1b4
    2238:	d2010000 	andle	r0, r1, #0
    223c:	d8000006 	stmdale	r0, {r1, r2}
    2240:	11000006 	tstne	r0, r6
    2244:	0000078f 	andeq	r0, r0, pc, lsl #15
    2248:	073f1400 	ldreq	r1, [pc, -r0, lsl #8]!
    224c:	4e060000 	cdpmi	0, 0, cr0, cr6, cr0, {0}
    2250:	000e750e 	andeq	r7, lr, lr, lsl #10
    2254:	0002ed00 	andeq	lr, r2, r0, lsl #26
    2258:	06f10100 	ldrbteq	r0, [r1], r0, lsl #2
    225c:	06f70000 	ldrbteq	r0, [r7], r0
    2260:	9a110000 	bls	442268 <_bss_end+0x430578>
    2264:	00000007 	andeq	r0, r0, r7
    2268:	0018a212 	andseq	sl, r8, r2, lsl r2
    226c:	0e510600 	cdpeq	6, 5, cr0, cr1, cr0, {0}
    2270:	00001055 	andeq	r1, r0, r5, asr r0
    2274:	00070c01 	andeq	r0, r7, r1, lsl #24
    2278:	00071700 	andeq	r1, r7, r0, lsl #14
    227c:	078f1100 	streq	r1, [pc, r0, lsl #2]
    2280:	ed130000 	ldc	0, cr0, [r3, #-0]
    2284:	00000002 	andeq	r0, r0, r2
    2288:	000fc212 	andeq	ip, pc, r2, lsl r2	; <UNPREDICTABLE>
    228c:	0e530600 	cdpeq	6, 5, cr0, cr3, cr0, {0}
    2290:	0000124e 	andeq	r1, r0, lr, asr #4
    2294:	00072c01 	andeq	r2, r7, r1, lsl #24
    2298:	00074100 	andeq	r4, r7, r0, lsl #2
    229c:	078f1100 	streq	r1, [pc, r0, lsl #2]
    22a0:	7e130000 	cdpvc	0, 1, cr0, cr3, cr0, {0}
    22a4:	13000000 	movwne	r0, #0
    22a8:	0000007e 	andeq	r0, r0, lr, ror r0
    22ac:	0002ed13 	andeq	lr, r2, r3, lsl sp
    22b0:	4a120000 	bmi	4822b8 <_bss_end+0x4705c8>
    22b4:	0600000f 	streq	r0, [r0], -pc
    22b8:	0ce00e55 	stcleq	14, cr0, [r0], #340	; 0x154
    22bc:	56010000 	strpl	r0, [r1], -r0
    22c0:	5c000007 	stcpl	0, cr0, [r0], {7}
    22c4:	11000007 	tstne	r0, r7
    22c8:	0000078f 	andeq	r0, r0, pc, lsl #15
    22cc:	10ba1b00 	adcsne	r1, sl, r0, lsl #22
    22d0:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
    22d4:	000da40e 	andeq	sl, sp, lr, lsl #8
    22d8:	076d0100 	strbeq	r0, [sp, -r0, lsl #2]!
    22dc:	8f110000 	svchi	0x00110000
    22e0:	13000007 	movwne	r0, #7
    22e4:	000004e4 	andeq	r0, r0, r4, ror #9
    22e8:	00007e13 	andeq	r7, r0, r3, lsl lr
    22ec:	03000000 	movweq	r0, #0
    22f0:	000005fd 	strdeq	r0, [r0], -sp
    22f4:	0314041c 	tsteq	r4, #28, 8	; 0x1c000000
    22f8:	04190000 	ldreq	r0, [r9], #-0
    22fc:	00000044 	andeq	r0, r0, r4, asr #32
    2300:	05fd0419 	ldrbeq	r0, [sp, #1049]!	; 0x419
    2304:	8f030000 	svchi	0x00030000
    2308:	19000007 	stmdbne	r0, {r0, r1, r2}
    230c:	00077e04 	andeq	r7, r7, r4, lsl #28
    2310:	079a0300 	ldreq	r0, [sl, r0, lsl #6]
    2314:	f41d0000 			; <UNDEFINED> instruction: 0xf41d0000
    2318:	0600000d 	streq	r0, [r0], -sp
    231c:	05fd195b 	ldrbeq	r1, [sp, #2395]!	; 0x95b
    2320:	980e0000 	stmdals	lr, {}	; <UNPREDICTABLE>
    2324:	1800000b 	stmdane	r0, {r0, r1, r3}
    2328:	f2070307 	vcgt.s8	d0, d7, d7
    232c:	20000009 	andcs	r0, r0, r9
    2330:	00000b16 	andeq	r0, r0, r6, lsl fp
    2334:	00940407 	addseq	r0, r4, r7, lsl #8
    2338:	06070000 	streq	r0, [r7], -r0
    233c:	07de0110 	bfieq	r0, r0, #2, #29
    2340:	481f0000 	ldmdami	pc, {}	; <UNPREDICTABLE>
    2344:	10005845 	andne	r5, r0, r5, asr #16
    2348:	4345441f 	movtmi	r4, #21535	; 0x541f
    234c:	03000a00 	movweq	r0, #2560	; 0xa00
    2350:	000007be 			; <UNDEFINED> instruction: 0x000007be
    2354:	000b2321 	andeq	r2, fp, r1, lsr #6
    2358:	24070800 	strcs	r0, [r7], #-2048	; 0xfffff800
    235c:	0008070c 	andeq	r0, r8, ip, lsl #14
    2360:	00792200 	rsbseq	r2, r9, r0, lsl #4
    2364:	94162607 	ldrls	r2, [r6], #-1543	; 0xfffff9f9
    2368:	00000000 	andeq	r0, r0, r0
    236c:	07007822 	streq	r7, [r0, -r2, lsr #16]
    2370:	00941627 	addseq	r1, r4, r7, lsr #12
    2374:	00040000 	andeq	r0, r4, r0
    2378:	000c7523 	andeq	r7, ip, r3, lsr #10
    237c:	1b0c0700 	blne	303f84 <_bss_end+0x2f2294>
    2380:	000007de 	ldrdeq	r0, [r0], -lr
    2384:	e8240a01 	stmda	r4!, {r0, r9, fp}
    2388:	0700000b 	streq	r0, [r0, -fp]
    238c:	04ea280d 	strbteq	r2, [sl], #2061	; 0x80d
    2390:	25010000 	strcs	r0, [r1, #-0]
    2394:	00000b98 	muleq	r0, r8, fp
    2398:	620e1007 	andvs	r1, lr, #7
    239c:	f200000c 	vhadd.s8	d0, d0, d12
    23a0:	01000009 	tsteq	r0, r9
    23a4:	0000083b 	andeq	r0, r0, fp, lsr r8
    23a8:	00000850 	andeq	r0, r0, r0, asr r8
    23ac:	0009f211 	andeq	pc, r9, r1, lsl r2	; <UNPREDICTABLE>
    23b0:	00941300 	addseq	r1, r4, r0, lsl #6
    23b4:	94130000 	ldrls	r0, [r3], #-0
    23b8:	13000000 	movwne	r0, #0
    23bc:	00000094 	muleq	r0, r4, r0
    23c0:	18a21200 	stmiane	r2!, {r9, ip}
    23c4:	12070000 	andne	r0, r7, #0
    23c8:	000b830a 	andeq	r8, fp, sl, lsl #6
    23cc:	08650100 	stmdaeq	r5!, {r8}^
    23d0:	086b0000 	stmdaeq	fp!, {}^	; <UNPREDICTABLE>
    23d4:	f2110000 	vhadd.s16	d0, d1, d0
    23d8:	00000009 	andeq	r0, r0, r9
    23dc:	000ba114 	andeq	sl, fp, r4, lsl r1
    23e0:	0f140700 	svceq	0x00140700
    23e4:	00000c05 	andeq	r0, r0, r5, lsl #24
    23e8:	000009f8 	strdeq	r0, [r0], -r8
    23ec:	00088401 	andeq	r8, r8, r1, lsl #8
    23f0:	00088f00 	andeq	r8, r8, r0, lsl #30
    23f4:	09f21100 	ldmibeq	r2!, {r8, ip}^
    23f8:	25130000 	ldrcs	r0, [r3, #-0]
    23fc:	00000000 	andeq	r0, r0, r0
    2400:	000ba114 	andeq	sl, fp, r4, lsl r1
    2404:	0f150700 	svceq	0x00150700
    2408:	00000bac 	andeq	r0, r0, ip, lsr #23
    240c:	000009f8 	strdeq	r0, [r0], -r8
    2410:	0008a801 	andeq	sl, r8, r1, lsl #16
    2414:	0008b300 	andeq	fp, r8, r0, lsl #6
    2418:	09f21100 	ldmibeq	r2!, {r8, ip}^
    241c:	e4130000 	ldr	r0, [r3], #-0
    2420:	00000004 	andeq	r0, r0, r4
    2424:	000ba114 	andeq	sl, fp, r4, lsl r1
    2428:	0f160700 	svceq	0x00160700
    242c:	00000c89 	andeq	r0, r0, r9, lsl #25
    2430:	000009f8 	strdeq	r0, [r0], -r8
    2434:	0008cc01 	andeq	ip, r8, r1, lsl #24
    2438:	0008d700 	andeq	sp, r8, r0, lsl #14
    243c:	09f21100 	ldmibeq	r2!, {r8, ip}^
    2440:	be130000 	cdplt	0, 1, cr0, cr3, cr0, {0}
    2444:	00000007 	andeq	r0, r0, r7
    2448:	000ba114 	andeq	sl, fp, r4, lsl r1
    244c:	0f170700 	svceq	0x00170700
    2450:	00000c34 	andeq	r0, r0, r4, lsr ip
    2454:	000009f8 	strdeq	r0, [r0], -r8
    2458:	0008f001 	andeq	pc, r8, r1
    245c:	0008fb00 	andeq	pc, r8, r0, lsl #22
    2460:	09f21100 	ldmibeq	r2!, {r8, ip}^
    2464:	94130000 	ldrls	r0, [r3], #-0
    2468:	00000000 	andeq	r0, r0, r0
    246c:	000ba114 	andeq	sl, fp, r4, lsl r1
    2470:	0f180700 	svceq	0x00180700
    2474:	00000bf4 	strdeq	r0, [r0], -r4
    2478:	000009f8 	strdeq	r0, [r0], -r8
    247c:	00091401 	andeq	r1, r9, r1, lsl #8
    2480:	00091f00 	andeq	r1, r9, r0, lsl #30
    2484:	09f21100 	ldmibeq	r2!, {r8, ip}^
    2488:	ed130000 	ldc	0, cr0, [r3, #-0]
    248c:	00000002 	andeq	r0, r0, r2
    2490:	000ab426 	andeq	fp, sl, r6, lsr #8
    2494:	111b0700 	tstne	fp, r0, lsl #14
    2498:	00000a84 	andeq	r0, r0, r4, lsl #21
    249c:	00000933 	andeq	r0, r0, r3, lsr r9
    24a0:	00000939 	andeq	r0, r0, r9, lsr r9
    24a4:	0009f211 	andeq	pc, r9, r1, lsl r2	; <UNPREDICTABLE>
    24a8:	a7260000 	strge	r0, [r6, -r0]!
    24ac:	0700000a 	streq	r0, [r0, -sl]
    24b0:	0c45111c 	stfeqe	f1, [r5], {28}
    24b4:	094d0000 	stmdbeq	sp, {}^	; <UNPREDICTABLE>
    24b8:	09530000 	ldmdbeq	r3, {}^	; <UNPREDICTABLE>
    24bc:	f2110000 	vhadd.s16	d0, d1, d0
    24c0:	00000009 	andeq	r0, r0, r9
    24c4:	000a5f26 	andeq	r5, sl, r6, lsr #30
    24c8:	111d0700 	tstne	sp, r0, lsl #14
    24cc:	00000b2d 	andeq	r0, r0, sp, lsr #22
    24d0:	00000967 	andeq	r0, r0, r7, ror #18
    24d4:	0000096d 	andeq	r0, r0, sp, ror #18
    24d8:	0009f211 	andeq	pc, r9, r1, lsl r2	; <UNPREDICTABLE>
    24dc:	e1260000 			; <UNDEFINED> instruction: 0xe1260000
    24e0:	07000013 	smladeq	r0, r3, r0, r0
    24e4:	0c1e0a1f 			; <UNDEFINED> instruction: 0x0c1e0a1f
    24e8:	09810000 	stmibeq	r1, {}	; <UNPREDICTABLE>
    24ec:	09870000 	stmibeq	r7, {}	; <UNPREDICTABLE>
    24f0:	f2110000 	vhadd.s16	d0, d1, d0
    24f4:	00000009 	andeq	r0, r0, r9
    24f8:	000aa226 	andeq	sl, sl, r6, lsr #4
    24fc:	0a210700 	beq	844104 <_bss_end+0x832414>
    2500:	00000bbf 			; <UNDEFINED> instruction: 0x00000bbf
    2504:	0000099b 	muleq	r0, fp, r9
    2508:	000009b0 			; <UNDEFINED> instruction: 0x000009b0
    250c:	0009f211 	andeq	pc, r9, r1, lsl r2	; <UNPREDICTABLE>
    2510:	00941300 	addseq	r1, r4, r0, lsl #6
    2514:	ef130000 	svc	0x00130000
    2518:	13000004 	movwne	r0, #4
    251c:	00000094 	muleq	r0, r4, r0
    2520:	0b4f0f00 	bleq	13c6128 <_bss_end+0x13b4438>
    2524:	2b070000 	blcs	1c252c <_bss_end+0x1b083c>
    2528:	000a0423 	andeq	r0, sl, r3, lsr #8
    252c:	160f0000 	strne	r0, [pc], -r0
    2530:	0700000c 	streq	r0, [r0, -ip]
    2534:	0094122c 	addseq	r1, r4, ip, lsr #4
    2538:	0f040000 	svceq	0x00040000
    253c:	00000bd6 	ldrdeq	r0, [r0], -r6
    2540:	94122d07 	ldrls	r2, [r2], #-3335	; 0xfffff2f9
    2544:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2548:	000bdf0f 	andeq	sp, fp, pc, lsl #30
    254c:	0f2e0700 	svceq	0x002e0700
    2550:	000007e3 	andeq	r0, r0, r3, ror #15
    2554:	0a510f0c 	beq	144618c <_bss_end+0x143449c>
    2558:	2f070000 	svccs	0x00070000
    255c:	0007be12 	andeq	fp, r7, r2, lsl lr
    2560:	19001400 	stmdbne	r0, {sl, ip}
    2564:	0007b104 	andeq	fp, r7, r4, lsl #2
    2568:	b1041c00 	tstlt	r4, r0, lsl #24
    256c:	19000007 	stmdbne	r0, {r0, r1, r2}
    2570:	00005c04 	andeq	r5, r0, r4, lsl #24
    2574:	09fe0300 	ldmibeq	lr!, {r8, r9}^
    2578:	681d0000 	ldmdavs	sp, {}	; <UNPREDICTABLE>
    257c:	0700000b 	streq	r0, [r0, -fp]
    2580:	07b11132 			; <UNDEFINED> instruction: 0x07b11132
    2584:	be210000 	cdplt	0, 2, cr0, cr1, cr0, {0}
    2588:	10000013 	andne	r0, r0, r3, lsl r0
    258c:	57080801 	strpl	r0, [r8, -r1, lsl #16]
    2590:	0f00000a 	svceq	0x0000000a
    2594:	00000d08 	andeq	r0, r0, r8, lsl #26
    2598:	57200a01 	strpl	r0, [r0, -r1, lsl #20]!
    259c:	0000000a 	andeq	r0, r0, sl
    25a0:	000e050f 	andeq	r0, lr, pc, lsl #10
    25a4:	200b0100 	andcs	r0, fp, r0, lsl #2
    25a8:	00000a57 	andeq	r0, r0, r7, asr sl
    25ac:	0e520f04 	cdpeq	15, 5, cr0, cr2, cr4, {0}
    25b0:	0c010000 	stceq	0, cr0, [r1], {-0}
    25b4:	00007e0e 	andeq	r7, r0, lr, lsl #28
    25b8:	a60f0800 	strge	r0, [pc], -r0, lsl #16
    25bc:	0100000e 	tsteq	r0, lr
    25c0:	02ed0a0d 	rsceq	r0, sp, #53248	; 0xd000
    25c4:	000c0000 	andeq	r0, ip, r0
    25c8:	0a150419 	beq	543634 <_bss_end+0x531944>
    25cc:	0a0e0000 	beq	3825d4 <_bss_end+0x3708e4>
    25d0:	0400000e 	streq	r0, [r0], #-14
    25d4:	f5071001 			; <UNDEFINED> instruction: 0xf5071001
    25d8:	0f00000a 	svceq	0x0000000a
    25dc:	00001344 	andeq	r1, r0, r4, asr #6
    25e0:	57201301 	strpl	r1, [r0, -r1, lsl #6]!
    25e4:	0000000a 	andeq	r0, r0, sl
    25e8:	00138527 	andseq	r8, r3, r7, lsr #10
    25ec:	20150100 	andscs	r0, r5, r0, lsl #2
    25f0:	00000d0d 	andeq	r0, r0, sp, lsl #26
    25f4:	00000a57 	andeq	r0, r0, r7, asr sl
    25f8:	00000a8f 	andeq	r0, r0, pc, lsl #21
    25fc:	00000a95 	muleq	r0, r5, sl
    2600:	000af511 	andeq	pc, sl, r1, lsl r5	; <UNPREDICTABLE>
    2604:	0a140000 	beq	50260c <_bss_end+0x4f091c>
    2608:	0100000e 	tsteq	r0, lr
    260c:	13260518 			; <UNDEFINED> instruction: 0x13260518
    2610:	0af50000 	beq	ffd42618 <_bss_end+0xffd30928>
    2614:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    2618:	b400000a 	strlt	r0, [r0], #-10
    261c:	1100000a 	tstne	r0, sl
    2620:	00000af5 	strdeq	r0, [r0], -r5
    2624:	0ee51400 	cdpeq	4, 14, cr1, cr5, cr0, {0}
    2628:	1a010000 	bne	42630 <_bss_end+0x30940>
    262c:	0011ba0b 	andseq	fp, r1, fp, lsl #20
    2630:	000afb00 	andeq	pc, sl, r0, lsl #22
    2634:	0acd0100 	beq	ff342a3c <_bss_end+0xff330d4c>
    2638:	0ad80000 	beq	ff602640 <_bss_end+0xff5f0950>
    263c:	f5110000 			; <UNDEFINED> instruction: 0xf5110000
    2640:	1300000a 	movwne	r0, #10
    2644:	0000007e 	andeq	r0, r0, lr, ror r0
    2648:	13ac1b00 			; <UNDEFINED> instruction: 0x13ac1b00
    264c:	1b010000 	blne	42654 <_bss_end+0x30964>
    2650:	0010d30a 	andseq	sp, r0, sl, lsl #6
    2654:	0ae90100 	beq	ffa42a5c <_bss_end+0xffa30d6c>
    2658:	f5110000 			; <UNDEFINED> instruction: 0xf5110000
    265c:	1300000a 	movwne	r0, #10
    2660:	00000afb 	strdeq	r0, [r0], -fp
    2664:	04190000 	ldreq	r0, [r9], #-0
    2668:	00000a5d 	andeq	r0, r0, sp, asr sl
    266c:	fa1d0428 	blx	743714 <_bss_end+0x731a24>
    2670:	01000037 	tsteq	r0, r7, lsr r0
    2674:	0a5d1d24 	beq	1749b0c <_bss_end+0x1737e1c>
    2678:	091e0000 	ldmdbeq	lr, {}	; <UNPREDICTABLE>
    267c:	07000013 	smladeq	r0, r3, r0, r0
    2680:	00004401 	andeq	r4, r0, r1, lsl #8
    2684:	0c060800 	stceq	8, cr0, [r6], {-0}
    2688:	00000b3a 	andeq	r0, r0, sl, lsr fp
    268c:	706f4e1f 	rsbvc	r4, pc, pc, lsl lr	; <UNPREDICTABLE>
    2690:	4a0b0000 	bmi	2c2698 <_bss_end+0x2b09a8>
    2694:	0100000f 	tsteq	r0, pc
    2698:	0018a20b 	andseq	sl, r8, fp, lsl #4
    269c:	630b0200 	movwvs	r0, #45568	; 0xb200
    26a0:	03000011 	movweq	r0, #17
    26a4:	00103c0b 	andseq	r3, r0, fp, lsl #24
    26a8:	21000400 	tstcs	r0, r0, lsl #8
    26ac:	00001095 	muleq	r0, r5, r0
    26b0:	08220805 	stmdaeq	r2!, {r0, r2, fp}
    26b4:	00000b6b 	andeq	r0, r0, fp, ror #22
    26b8:	08007822 	stmdaeq	r0, {r1, r5, fp, ip, sp, lr}
    26bc:	00660e24 	rsbeq	r0, r6, r4, lsr #28
    26c0:	22000000 	andcs	r0, r0, #0
    26c4:	25080079 	strcs	r0, [r8, #-121]	; 0xffffff87
    26c8:	0000660e 	andeq	r6, r0, lr, lsl #12
    26cc:	73220200 			; <UNDEFINED> instruction: 0x73220200
    26d0:	08007465 	stmdaeq	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    26d4:	00440d26 	subeq	r0, r4, r6, lsr #26
    26d8:	00040000 	andeq	r0, r4, r0
    26dc:	000b3a03 	andeq	r3, fp, r3, lsl #20
    26e0:	0e1f2100 	mufeqe	f2, f7, f0
    26e4:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    26e8:	0b8b082a 	bleq	fe2c4798 <_bss_end+0xfe2b2aa8>
    26ec:	63220000 			; <UNDEFINED> instruction: 0x63220000
    26f0:	0800646d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, sp, lr}
    26f4:	0b09162c 	bleq	247fac <_bss_end+0x2362bc>
    26f8:	00000000 	andeq	r0, r0, r0
    26fc:	00111721 	andseq	r1, r1, r1, lsr #14
    2700:	36080200 	strcc	r0, [r8], -r0, lsl #4
    2704:	000bb308 	andeq	fp, fp, r8, lsl #6
    2708:	137e0f00 	cmnne	lr, #0, 30
    270c:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
    2710:	000b701c 	andeq	r7, fp, ip, lsl r0
    2714:	f20f0000 	vhadd.s8	d0, d15, d0
    2718:	08000012 	stmdaeq	r0, {r1, r4}
    271c:	00440d39 	subeq	r0, r4, r9, lsr sp
    2720:	00010000 	andeq	r0, r1, r0
    2724:	000b8b03 	andeq	r8, fp, r3, lsl #22
    2728:	11922100 	orrsne	r2, r2, r0, lsl #2
    272c:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    2730:	0bed083d 	bleq	ffb4482c <_bss_end+0xffb32b3c>
    2734:	7e0f0000 	cdpvc	0, 0, cr0, cr15, cr0, {0}
    2738:	08000013 	stmdaeq	r0, {r0, r1, r4}
    273c:	0b701c3f 	bleq	1c09840 <_bss_end+0x1bf7b50>
    2740:	0f000000 	svceq	0x00000000
    2744:	00002cd5 	ldrdeq	r2, [r0], -r5
    2748:	660e4008 	strvs	r4, [lr], -r8
    274c:	01000000 	mrseq	r0, (UNDEF: 0)
    2750:	000e6f0f 	andeq	r6, lr, pc, lsl #30
    2754:	19420800 	stmdbne	r2, {fp}^
    2758:	00000b3a 	andeq	r0, r0, sl, lsr fp
    275c:	b8030003 	stmdalt	r3, {r0, r1}
    2760:	2100000b 	tstcs	r0, fp
    2764:	00000ecd 	andeq	r0, r0, sp, asr #29
    2768:	0846080b 	stmdaeq	r6, {r0, r1, r3, fp}^
    276c:	00000c55 	andeq	r0, r0, r5, asr ip
    2770:	00137e0f 	andseq	r7, r3, pc, lsl #28
    2774:	1c480800 	mcrrne	8, 0, r0, r8, cr0
    2778:	00000b70 	andeq	r0, r0, r0, ror fp
    277c:	31782200 	cmncc	r8, r0, lsl #4
    2780:	0e490800 	cdpeq	8, 4, cr0, cr9, cr0, {0}
    2784:	00000066 	andeq	r0, r0, r6, rrx
    2788:	31792201 	cmncc	r9, r1, lsl #4
    278c:	12490800 	subne	r0, r9, #0, 16
    2790:	00000066 	andeq	r0, r0, r6, rrx
    2794:	00772203 	rsbseq	r2, r7, r3, lsl #4
    2798:	660e4a08 	strvs	r4, [lr], -r8, lsl #20
    279c:	05000000 	streq	r0, [r0, #-0]
    27a0:	08006822 	stmdaeq	r0, {r1, r5, fp, sp, lr}
    27a4:	0066114a 	rsbeq	r1, r6, sl, asr #2
    27a8:	0f070000 	svceq	0x00070000
    27ac:	00000ea0 	andeq	r0, r0, r0, lsr #29
    27b0:	440d4b08 	strmi	r4, [sp], #-2824	; 0xfffff4f8
    27b4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    27b8:	000e6f0f 	andeq	r6, lr, pc, lsl #30
    27bc:	0d4d0800 	stcleq	8, cr0, [sp, #-0]
    27c0:	00000044 	andeq	r0, r0, r4, asr #32
    27c4:	f203000a 	vhadd.s8	d0, d3, d10
    27c8:	2900000b 	stmdbcs	r0, {r0, r1, r3}
    27cc:	000007a5 	andeq	r0, r0, r5, lsr #15
    27d0:	05120702 	ldreq	r0, [r2, #-1794]	; 0xfffff8fe
    27d4:	010bfc03 	tsteq	fp, r3, lsl #24	; <UNPREDICTABLE>
    27d8:	0de52a00 			; <UNDEFINED> instruction: 0x0de52a00
    27dc:	ab840000 	blge	fe1027e4 <_bss_end+0xfe0f0af4>
    27e0:	001c0000 	andseq	r0, ip, r0
    27e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    27e8:	0002412b 	andeq	r4, r2, fp, lsr #2
    27ec:	00ab3000 	adceq	r3, fp, r0
    27f0:	00005400 	andeq	r5, r0, r0, lsl #8
    27f4:	ab9c0100 	blge	fe702bfc <_bss_end+0xfe6f0f0c>
    27f8:	2c00000c 	stccs	0, cr0, [r0], {12}
    27fc:	0000033b 	andeq	r0, r0, fp, lsr r3
    2800:	01018502 	tsteq	r1, r2, lsl #10
    2804:	00000038 	andeq	r0, r0, r8, lsr r0
    2808:	2c749102 	ldfcsp	f1, [r4], #-8
    280c:	00000734 	andeq	r0, r0, r4, lsr r7
    2810:	01018502 	tsteq	r1, r2, lsl #10
    2814:	00000038 	andeq	r0, r0, r8, lsr r0
    2818:	00709102 	rsbseq	r9, r0, r2, lsl #2
    281c:	0061041c 	rsbeq	r0, r1, ip, lsl r4
    2820:	6f2d0000 	svcvs	0x002d0000
    2824:	cf000002 	svcgt	0x00000002
    2828:	b000000c 	andlt	r0, r0, ip
    282c:	6c0000ac 	stcvs	0, cr0, [r0], {172}	; 0xac
    2830:	01000000 	mrseq	r0, (UNDEF: 0)
    2834:	000ceb9c 	muleq	ip, ip, fp
    2838:	00541500 	subseq	r1, r4, r0, lsl #10
    283c:	00000055 	andeq	r0, r0, r5, asr r0
    2840:	00032c2e 	andeq	r2, r3, lr, lsr #24
    2844:	00030f00 	andeq	r0, r3, r0, lsl #30
    2848:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    284c:	7268632f 	rsbvc	r6, r8, #-1140850688	; 0xbc000000
    2850:	2f210300 	svccs	0x00210300
    2854:	00000cab 	andeq	r0, r0, fp, lsr #25
    2858:	00709102 	rsbseq	r9, r0, r2, lsl #2
    285c:	003f041c 	eorseq	r0, pc, ip, lsl r4	; <UNPREDICTABLE>
    2860:	9a2d0000 	bls	b42868 <_bss_end+0xb30b78>
    2864:	0f000002 	svceq	0x00000002
    2868:	4000000d 	andmi	r0, r0, sp
    286c:	700000ac 	andvc	r0, r0, ip, lsr #1
    2870:	01000000 	mrseq	r0, (UNDEF: 0)
    2874:	000d2b9c 	muleq	sp, ip, fp
    2878:	00541500 	subseq	r1, r4, r0, lsl #10
    287c:	00000038 	andeq	r0, r0, r8, lsr r0
    2880:	00032c2e 	andeq	r2, r3, lr, lsr #24
    2884:	00030f00 	andeq	r0, r3, r0, lsl #30
    2888:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    288c:	7268632f 	rsbvc	r6, r8, #-1140850688	; 0xbc000000
    2890:	2f210300 	svccs	0x00210300
    2894:	00000ceb 	andeq	r0, r0, fp, ror #25
    2898:	00709102 	rsbseq	r9, r0, r2, lsl #2
    289c:	05f8041c 	ldrbeq	r0, [r8, #1052]!	; 0x41c
    28a0:	c52d0000 	strgt	r0, [sp, #-0]!
    28a4:	4f000002 	svcmi	0x00000002
    28a8:	d000000d 	andle	r0, r0, sp
    28ac:	700000ab 	andvc	r0, r0, fp, lsr #1
    28b0:	01000000 	mrseq	r0, (UNDEF: 0)
    28b4:	000d6b9c 	muleq	sp, ip, fp
    28b8:	00541500 	subseq	r1, r4, r0, lsl #10
    28bc:	00000519 	andeq	r0, r0, r9, lsl r5
    28c0:	00032c2e 	andeq	r2, r3, lr, lsr #24
    28c4:	00030f00 	andeq	r0, r3, r0, lsl #30
    28c8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    28cc:	7268632f 	rsbvc	r6, r8, #-1140850688	; 0xbc000000
    28d0:	2f210300 	svccs	0x00210300
    28d4:	00000d2b 	andeq	r0, r0, fp, lsr #26
    28d8:	00709102 	rsbseq	r9, r0, r2, lsl #2
    28dc:	00075c30 	andeq	r5, r7, r0, lsr ip
    28e0:	01170200 	tsteq	r7, r0, lsl #4
    28e4:	000d8606 	andeq	r8, sp, r6, lsl #12
    28e8:	00a5e000 	adceq	lr, r5, r0
    28ec:	00055000 	andeq	r5, r5, r0
    28f0:	ee9c0100 	fmle	f0, f4, f0
    28f4:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    28f8:	0000032c 	andeq	r0, r0, ip, lsr #6
    28fc:	00000795 	muleq	r0, r5, r7
    2900:	2c449102 	stfcsp	f1, [r4], {2}
    2904:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    2908:	3d011702 	stccc	7, cr1, [r1, #-8]
    290c:	000004e4 	andeq	r0, r0, r4, ror #9
    2910:	2c409102 	stfcsp	f1, [r0], {2}
    2914:	00001299 	muleq	r0, r9, r2
    2918:	4d011702 	stcmi	7, cr1, [r1, #-8]
    291c:	0000007e 	andeq	r0, r0, lr, ror r0
    2920:	7fbc9103 	svcvc	0x00bc9103
    2924:	646d6331 	strbtvs	r6, [sp], #-817	; 0xfffffccf
    2928:	011c0200 	tsteq	ip, r0, lsl #4
    292c:	000b0916 	andeq	r0, fp, r6, lsl r9
    2930:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
    2934:	00004832 	andeq	r4, r0, r2, lsr r8
    2938:	000ddd00 	andeq	sp, sp, r0, lsl #26
    293c:	6b703100 	blvs	1c0ed44 <_bss_end+0x1bfd054>
    2940:	30020074 	andcc	r0, r2, r4, ror r0
    2944:	0eee2a01 	vfmaeq.f32	s5, s28, s2
    2948:	91020000 	mrsls	r0, (UNDEF: 2)
    294c:	60320048 	eorsvs	r0, r2, r8, asr #32
    2950:	1f000000 	svcne	0x00000000
    2954:	3100000e 	tstcc	r0, lr
    2958:	00746b70 	rsbseq	r6, r4, r0, ror fp
    295c:	35013e02 	strcc	r3, [r1, #-3586]	; 0xfffff1fe
    2960:	00000ef4 	strdeq	r0, [r0], -r4
    2964:	31509102 	cmpcc	r0, r2, lsl #2
    2968:	00727470 	rsbseq	r7, r2, r0, ror r4
    296c:	28014002 	stmdacs	r1, {r1, lr}
    2970:	00000efa 	strdeq	r0, [r0], -sl
    2974:	334c9102 	movtcc	r9, #49410	; 0xc102
    2978:	0000a6d0 	ldrdeq	sl, [r0], -r0
    297c:	00000094 	muleq	r0, r4, r0
    2980:	02006931 	andeq	r6, r0, #802816	; 0xc4000
    2984:	661b0142 	ldrvs	r0, [fp], -r2, asr #2
    2988:	02000000 	andeq	r0, r0, #0
    298c:	00007691 	muleq	r0, r1, r6
    2990:	00007834 	andeq	r7, r0, r4, lsr r8
    2994:	6b703100 	blvs	1c0ed9c <_bss_end+0x1bfd0ac>
    2998:	4f020074 	svcmi	0x00020074
    299c:	0f002c01 	svceq	0x00002c01
    29a0:	91020000 	mrsls	r0, (UNDEF: 2)
    29a4:	10123560 	andsne	r3, r2, r0, ror #10
    29a8:	51020000 	mrspl	r0, (UNDEF: 2)
    29ac:	0f061c01 	svceq	0x00061c01
    29b0:	91020000 	mrsls	r0, (UNDEF: 2)
    29b4:	a7e4365c 	ubfxge	r3, ip, #12, #5
    29b8:	019c0000 	orrseq	r0, ip, r0
    29bc:	0e920000 	cdpeq	0, 9, cr0, cr2, cr0, {0}
    29c0:	78310000 	ldmdavc	r1!, {}	; <UNPREDICTABLE>
    29c4:	01570200 	cmpeq	r7, r0, lsl #4
    29c8:	0000661f 	andeq	r6, r0, pc, lsl r6
    29cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    29d0:	00a84033 	adceq	r4, r8, r3, lsr r0
    29d4:	00013000 	andeq	r3, r1, r0
    29d8:	00793100 	rsbseq	r3, r9, r0, lsl #2
    29dc:	23015902 	movwcs	r5, #6402	; 0x1902
    29e0:	00000066 	andeq	r0, r0, r6, rrx
    29e4:	33729102 	cmncc	r2, #-2147483648	; 0x80000000
    29e8:	0000a89c 	muleq	r0, ip, r8
    29ec:	000000c4 	andeq	r0, r0, r4, asr #1
    29f0:	736f7031 	cmnvc	pc, #49	; 0x31
    29f4:	015b0200 	cmpeq	fp, r0, lsl #4
    29f8:	00007228 	andeq	r7, r0, r8, lsr #4
    29fc:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    2a00:	33000000 	movwcc	r0, #0
    2a04:	0000a980 	andeq	sl, r0, r0, lsl #19
    2a08:	00000160 	andeq	r0, r0, r0, ror #2
    2a0c:	02007831 	andeq	r7, r0, #3211264	; 0x310000
    2a10:	7e1f0170 	mrcvc	1, 0, r0, cr15, cr0, {3}
    2a14:	02000000 	andeq	r0, r0, #0
    2a18:	b0336c91 	mlaslt	r3, r1, ip, r6
    2a1c:	200000a9 	andcs	r0, r0, r9, lsr #1
    2a20:	31000001 	tstcc	r0, r1
    2a24:	72020079 	andvc	r0, r2, #121	; 0x79
    2a28:	007e2301 	rsbseq	r2, lr, r1, lsl #6
    2a2c:	91020000 	mrsls	r0, (UNDEF: 2)
    2a30:	a9e03368 	stmibge	r0!, {r3, r5, r6, r8, r9, ip, sp}^
    2a34:	00e00000 	rsceq	r0, r0, r0
    2a38:	70310000 	eorsvc	r0, r1, r0
    2a3c:	0200736f 	andeq	r7, r0, #-1140850687	; 0xbc000001
    2a40:	8a280174 	bhi	a03018 <_bss_end+0x9f1328>
    2a44:	02000000 	andeq	r0, r0, #0
    2a48:	73315891 	teqvc	r1, #9502720	; 0x910000
    2a4c:	02007465 	andeq	r7, r0, #1694498816	; 0x65000000
    2a50:	f424017a 	vld4.16	{d0,d2,d4,d6}, [r4 :256], sl
    2a54:	02000002 	andeq	r0, r0, #2
    2a58:	00005791 	muleq	r0, r1, r7
    2a5c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    2a60:	000bb304 	andeq	fp, fp, r4, lsl #6
    2a64:	ed041900 	vstr.16	s2, [r4, #-0]
    2a68:	1900000b 	stmdbne	r0, {r0, r1, r3}
    2a6c:	000b6b04 	andeq	r6, fp, r4, lsl #22
    2a70:	55041900 	strpl	r1, [r4, #-2304]	; 0xfffff700
    2a74:	1900000c 	stmdbne	r0, {r2, r3}
    2a78:	00005004 	andeq	r5, r0, r4
    2a7c:	07413700 	strbeq	r3, [r1, -r0, lsl #14]
    2a80:	ed020000 	stc	0, cr0, [r2, #-0]
    2a84:	000f2606 	andeq	r2, pc, r6, lsl #12
    2a88:	00a3c800 	adceq	ip, r3, r0, lsl #16
    2a8c:	00021800 	andeq	r1, r2, r0, lsl #16
    2a90:	c39c0100 	orrsgt	r0, ip, #0, 2
    2a94:	2e00000f 	cdpcs	0, 0, cr0, cr0, cr15, {0}
    2a98:	0000032c 	andeq	r0, r0, ip, lsr #6
    2a9c:	00000795 	muleq	r0, r5, r7
    2aa0:	7fbc9103 	svcvc	0x00bc9103
    2aa4:	02006938 	andeq	r6, r0, #56, 18	; 0xe0000
    2aa8:	003809f2 	ldrshteq	r0, [r8], -r2
    2aac:	74390000 	ldrtvc	r0, [r9], #-0
    2ab0:	02000011 	andeq	r0, r0, #17
    2ab4:	3f130104 	svccc	0x00130104
    2ab8:	02000000 	andeq	r0, r0, #0
    2abc:	b3356891 	teqlt	r5, #9502720	; 0x910000
    2ac0:	02000011 	andeq	r0, r0, #17
    2ac4:	3f0f0106 	svccc	0x000f0106
    2ac8:	02000000 	andeq	r0, r0, #0
    2acc:	f0366491 			; <UNDEFINED> instruction: 0xf0366491
    2ad0:	f80000a3 			; <UNDEFINED> instruction: 0xf80000a3
    2ad4:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    2ad8:	3a00000f 	bcc	2b1c <CPSR_IRQ_INHIBIT+0x2a9c>
    2adc:	02006174 	andeq	r6, r0, #116, 2
    2ae0:	04f50ff6 	ldrbteq	r0, [r5], #4086	; 0xff6
    2ae4:	91020000 	mrsls	r0, (UNDEF: 2)
    2ae8:	1c33006c 	ldcne	0, cr0, [r3], #-432	; 0xfffffe50
    2aec:	b80000a5 	stmdalt	r0, {r0, r2, r5, r7}
    2af0:	31000000 	mrscc	r0, (UNDEF: 0)
    2af4:	08020069 	stmdaeq	r2, {r0, r3, r5, r6}
    2af8:	00380e01 	eorseq	r0, r8, r1, lsl #28
    2afc:	91020000 	mrsls	r0, (UNDEF: 2)
    2b00:	a5343374 	ldrge	r3, [r4, #-884]!	; 0xfffffc8c
    2b04:	00900000 	addseq	r0, r0, r0
    2b08:	74310000 	ldrtvc	r0, [r1], #-0
    2b0c:	0a020061 	beq	82c98 <_bss_end+0x70fa8>
    2b10:	04f50f01 	ldrbteq	r0, [r5], #3841	; 0xf01
    2b14:	91020000 	mrsls	r0, (UNDEF: 2)
    2b18:	a5643360 	strbge	r3, [r4, #-864]!	; 0xfffffca0
    2b1c:	00480000 	subeq	r0, r8, r0
    2b20:	6a310000 	bvs	c42b28 <_bss_end+0xc30e38>
    2b24:	010d0200 	mrseq	r0, SP_fiq
    2b28:	00003812 	andeq	r3, r0, r2, lsl r8
    2b2c:	70910200 	addsvc	r0, r1, r0, lsl #4
    2b30:	00000000 	andeq	r0, r0, r0
    2b34:	0007173b 	andeq	r1, r7, fp, lsr r7
    2b38:	06e20200 	strbteq	r0, [r2], r0, lsl #4
    2b3c:	00000fdd 	ldrdeq	r0, [r0], -sp
    2b40:	0000a280 	andeq	sl, r0, r0, lsl #5
    2b44:	00000148 	andeq	r0, r0, r8, asr #2
    2b48:	10139c01 	andsne	r9, r3, r1, lsl #24
    2b4c:	2c2e0000 	stccs	0, cr0, [lr], #-0
    2b50:	95000003 	strls	r0, [r0, #-3]
    2b54:	02000007 	andeq	r0, r0, #7
    2b58:	782f7491 	stmdavc	pc!, {r0, r4, r7, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2b5c:	2be20200 	blcs	ff883364 <_bss_end+0xff871674>
    2b60:	0000007e 	andeq	r0, r0, lr, ror r0
    2b64:	2f709102 	svccs	0x00709102
    2b68:	e2020079 	and	r0, r2, #121	; 0x79
    2b6c:	00007e37 	andeq	r7, r0, r7, lsr lr
    2b70:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2b74:	7465732f 	strbtvc	r7, [r5], #-815	; 0xfffffcd1
    2b78:	3fe20200 	svccc	0x00e20200
    2b7c:	000002ed 	andeq	r0, r0, sp, ror #5
    2b80:	006b9102 	rsbeq	r9, fp, r2, lsl #2
    2b84:	0006f737 	andeq	pc, r6, r7, lsr r7	; <UNPREDICTABLE>
    2b88:	06d30200 	ldrbeq	r0, [r3], r0, lsl #4
    2b8c:	0000102d 	andeq	r1, r0, sp, lsr #32
    2b90:	0000a1b0 			; <UNDEFINED> instruction: 0x0000a1b0
    2b94:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2b98:	107e9c01 	rsbsne	r9, lr, r1, lsl #24
    2b9c:	2c2e0000 	stccs	0, cr0, [lr], #-0
    2ba0:	95000003 	strls	r0, [r0, #-3]
    2ba4:	02000007 	andeq	r0, r0, #7
    2ba8:	413c6491 	teqmi	ip, r1	; <illegal shifter operand>
    2bac:	02000011 	andeq	r0, r0, #17
    2bb0:	02ed23d3 	rsceq	r2, sp, #1275068419	; 0x4c000003
    2bb4:	91020000 	mrsls	r0, (UNDEF: 2)
    2bb8:	0cfd3d63 	ldcleq	13, cr3, [sp], #396	; 0x18c
    2bbc:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    2bc0:	00005013 	andeq	r5, r0, r3, lsl r0
    2bc4:	73910200 	orrsvc	r0, r1, #0, 4
    2bc8:	0011b33d 	andseq	fp, r1, sp, lsr r3
    2bcc:	0fda0200 	svceq	0x00da0200
    2bd0:	0000003f 	andeq	r0, r0, pc, lsr r0
    2bd4:	336c9102 	cmncc	ip, #-2147483648	; 0x80000000
    2bd8:	0000a228 	andeq	sl, r0, r8, lsr #4
    2bdc:	00000040 	andeq	r0, r0, r0, asr #32
    2be0:	0200693a 	andeq	r6, r0, #950272	; 0xe8000
    2be4:	00380edc 	ldrsbteq	r0, [r8], -ip
    2be8:	91020000 	mrsls	r0, (UNDEF: 2)
    2bec:	3b000074 	blcc	2dc4 <CPSR_IRQ_INHIBIT+0x2d44>
    2bf0:	000006d8 	ldrdeq	r0, [r0], -r8
    2bf4:	9806ce02 	stmdals	r6, {r1, r9, sl, fp, lr, pc}
    2bf8:	88000010 	stmdahi	r0, {r4}
    2bfc:	280000a1 	stmdacs	r0, {r0, r5, r7}
    2c00:	01000000 	mrseq	r0, (UNDEF: 0)
    2c04:	0010a59c 	mulseq	r0, ip, r5
    2c08:	032c2e00 			; <UNDEFINED> instruction: 0x032c2e00
    2c0c:	07a00000 	streq	r0, [r0, r0]!
    2c10:	91020000 	mrsls	r0, (UNDEF: 2)
    2c14:	bd370074 	ldclt	0, cr0, [r7, #-464]!	; 0xfffffe30
    2c18:	02000006 	andeq	r0, r0, #6
    2c1c:	10bf06b8 	ldrhtne	r0, [pc], r8
    2c20:	a0b40000 	adcsge	r0, r4, r0
    2c24:	00d40000 	sbcseq	r0, r4, r0
    2c28:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c2c:	000010e4 	andeq	r1, r0, r4, ror #1
    2c30:	00032c2e 	andeq	r2, r3, lr, lsr #24
    2c34:	00079500 	andeq	r9, r7, r0, lsl #10
    2c38:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2c3c:	00a0dc33 	adceq	sp, r0, r3, lsr ip
    2c40:	00006400 	andeq	r6, r0, r0, lsl #8
    2c44:	61743a00 	cmnvs	r4, r0, lsl #20
    2c48:	0fbf0200 	svceq	0x00bf0200
    2c4c:	000004f5 	strdeq	r0, [r0], -r5
    2c50:	00749102 	rsbseq	r9, r4, r2, lsl #2
    2c54:	064b3700 	strbeq	r3, [fp], -r0, lsl #14
    2c58:	ae020000 	cdpge	0, 0, cr0, cr2, cr0, {0}
    2c5c:	0010fe06 	andseq	pc, r0, r6, lsl #28
    2c60:	00a02000 	adceq	r2, r0, r0
    2c64:	00009400 	andeq	r9, r0, r0, lsl #8
    2c68:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    2c6c:	2e000011 	mcrcs	0, 0, r0, cr0, cr1, {0}
    2c70:	0000032c 	andeq	r0, r0, ip, lsr #6
    2c74:	00000795 	muleq	r0, r5, r7
    2c78:	2f649102 	svccs	0x00649102
    2c7c:	00646d63 	rsbeq	r6, r4, r3, ror #26
    2c80:	1931ae02 	ldmdbne	r1!, {r1, r9, sl, fp, sp, pc}
    2c84:	02000005 	andeq	r0, r0, #5
    2c88:	4c3c6091 	ldcmi	0, cr6, [ip], #-580	; 0xfffffdbc
    2c8c:	02000011 	andeq	r0, r0, #17
    2c90:	00443eae 	subeq	r3, r4, lr, lsr #29
    2c94:	91020000 	mrsls	r0, (UNDEF: 2)
    2c98:	61743a5f 	cmnvs	r4, pc, asr sl
    2c9c:	0bb00200 	bleq	fec034a4 <_bss_end+0xfebf17b4>
    2ca0:	000004f5 	strdeq	r0, [r0], -r5
    2ca4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    2ca8:	00069437 	andeq	r9, r6, r7, lsr r4
    2cac:	060f0200 	streq	r0, [pc], -r0, lsl #4
    2cb0:	00001151 	andeq	r1, r0, r1, asr r1
    2cb4:	000098ec 	andeq	r9, r0, ip, ror #17
    2cb8:	00000734 	andeq	r0, r0, r4, lsr r7
    2cbc:	12cb9c01 	sbcne	r9, fp, #256	; 0x100
    2cc0:	2c2e0000 	stccs	0, cr0, [lr], #-0
    2cc4:	95000003 	strls	r0, [r0, #-3]
    2cc8:	03000007 	movweq	r0, #7
    2ccc:	3c7eac91 	ldclcc	12, cr10, [lr], #-580	; 0xfffffdbc
    2cd0:	00000c18 	andeq	r0, r0, r8, lsl ip
    2cd4:	38210f02 	stmdacc	r1!, {r1, r8, r9, sl, fp}
    2cd8:	03000000 	movweq	r0, #0
    2cdc:	3c7ea891 	ldclcc	8, cr10, [lr], #-580	; 0xfffffdbc
    2ce0:	00000bd8 	ldrdeq	r0, [r0], -r8
    2ce4:	382c0f02 	stmdacc	ip!, {r1, r8, r9, sl, fp}
    2ce8:	03000000 	movweq	r0, #0
    2cec:	367ea491 			; <UNDEFINED> instruction: 0x367ea491
    2cf0:	000099c8 	andeq	r9, r0, r8, asr #19
    2cf4:	000000b8 	strheq	r0, [r0], -r8
    2cf8:	0000119a 	muleq	r0, sl, r1
    2cfc:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2d00:	f50f2402 			; <UNDEFINED> instruction: 0xf50f2402
    2d04:	02000004 	andeq	r0, r0, #4
    2d08:	36007491 			; <UNDEFINED> instruction: 0x36007491
    2d0c:	00009a80 	andeq	r9, r0, r0, lsl #21
    2d10:	00000068 	andeq	r0, r0, r8, rrx
    2d14:	000011b6 			; <UNDEFINED> instruction: 0x000011b6
    2d18:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2d1c:	f50f3102 			; <UNDEFINED> instruction: 0xf50f3102
    2d20:	02000004 	andeq	r0, r0, #4
    2d24:	36007091 			; <UNDEFINED> instruction: 0x36007091
    2d28:	00009ae8 	andeq	r9, r0, r8, ror #21
    2d2c:	000000b8 	strheq	r0, [r0], -r8
    2d30:	000011d2 	ldrdeq	r1, [r0], -r2
    2d34:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2d38:	f50f3b02 			; <UNDEFINED> instruction: 0xf50f3b02
    2d3c:	02000004 	andeq	r0, r0, #4
    2d40:	36006c91 			; <UNDEFINED> instruction: 0x36006c91
    2d44:	00009ba0 	andeq	r9, r0, r0, lsr #23
    2d48:	00000064 	andeq	r0, r0, r4, rrx
    2d4c:	000011ee 	andeq	r1, r0, lr, ror #3
    2d50:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2d54:	f50f4802 			; <UNDEFINED> instruction: 0xf50f4802
    2d58:	02000004 	andeq	r0, r0, #4
    2d5c:	36006891 			; <UNDEFINED> instruction: 0x36006891
    2d60:	00009c04 	andeq	r9, r0, r4, lsl #24
    2d64:	000000b8 	strheq	r0, [r0], -r8
    2d68:	0000120a 	andeq	r1, r0, sl, lsl #4
    2d6c:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2d70:	f50f5302 			; <UNDEFINED> instruction: 0xf50f5302
    2d74:	02000004 	andeq	r0, r0, #4
    2d78:	36006491 			; <UNDEFINED> instruction: 0x36006491
    2d7c:	00009cbc 			; <UNDEFINED> instruction: 0x00009cbc
    2d80:	00000064 	andeq	r0, r0, r4, rrx
    2d84:	00001226 	andeq	r1, r0, r6, lsr #4
    2d88:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2d8c:	f50f6002 			; <UNDEFINED> instruction: 0xf50f6002
    2d90:	02000004 	andeq	r0, r0, #4
    2d94:	36006091 			; <UNDEFINED> instruction: 0x36006091
    2d98:	00009d20 	andeq	r9, r0, r0, lsr #26
    2d9c:	00000064 	andeq	r0, r0, r4, rrx
    2da0:	00001242 	andeq	r1, r0, r2, asr #4
    2da4:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2da8:	f50f6a02 			; <UNDEFINED> instruction: 0xf50f6a02
    2dac:	02000004 	andeq	r0, r0, #4
    2db0:	36005c91 			; <UNDEFINED> instruction: 0x36005c91
    2db4:	00009d84 	andeq	r9, r0, r4, lsl #27
    2db8:	00000064 	andeq	r0, r0, r4, rrx
    2dbc:	0000125e 	andeq	r1, r0, lr, asr r2
    2dc0:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2dc4:	f50f7402 			; <UNDEFINED> instruction: 0xf50f7402
    2dc8:	02000004 	andeq	r0, r0, #4
    2dcc:	36005891 			; <UNDEFINED> instruction: 0x36005891
    2dd0:	00009de8 	andeq	r9, r0, r8, ror #27
    2dd4:	00000064 	andeq	r0, r0, r4, rrx
    2dd8:	0000127a 	andeq	r1, r0, sl, ror r2
    2ddc:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2de0:	f50f7e02 			; <UNDEFINED> instruction: 0xf50f7e02
    2de4:	02000004 	andeq	r0, r0, #4
    2de8:	36005491 			; <UNDEFINED> instruction: 0x36005491
    2dec:	00009e4c 	andeq	r9, r0, ip, asr #28
    2df0:	00000064 	andeq	r0, r0, r4, rrx
    2df4:	00001296 	muleq	r0, r6, r2
    2df8:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2dfc:	f50f8802 			; <UNDEFINED> instruction: 0xf50f8802
    2e00:	02000004 	andeq	r0, r0, #4
    2e04:	36005091 			; <UNDEFINED> instruction: 0x36005091
    2e08:	00009eb0 			; <UNDEFINED> instruction: 0x00009eb0
    2e0c:	00000064 	andeq	r0, r0, r4, rrx
    2e10:	000012b2 			; <UNDEFINED> instruction: 0x000012b2
    2e14:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2e18:	f50f9202 			; <UNDEFINED> instruction: 0xf50f9202
    2e1c:	02000004 	andeq	r0, r0, #4
    2e20:	33004c91 	movwcc	r4, #3217	; 0xc91
    2e24:	00009f14 	andeq	r9, r0, r4, lsl pc
    2e28:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2e2c:	0061743a 	rsbeq	r7, r1, sl, lsr r4
    2e30:	f50f9c02 			; <UNDEFINED> instruction: 0xf50f9c02
    2e34:	02000004 	andeq	r0, r0, #4
    2e38:	00004891 	muleq	r0, r1, r8
    2e3c:	0006703e 	andeq	r7, r6, lr, lsr r0
    2e40:	01090200 	mrseq	r0, R9_fiq
    2e44:	000012dc 	ldrdeq	r1, [r0], -ip
    2e48:	0012f200 	andseq	pc, r2, r0, lsl #4
    2e4c:	032c3f00 			; <UNDEFINED> instruction: 0x032c3f00
    2e50:	07950000 	ldreq	r0, [r5, r0]
    2e54:	69400000 	stmdbvs	r0, {}^	; <UNPREDICTABLE>
    2e58:	02006332 	andeq	r6, r0, #-939524096	; 0xc8000000
    2e5c:	07832a09 	streq	r2, [r3, r9, lsl #20]
    2e60:	41000000 	mrsmi	r0, (UNDEF: 0)
    2e64:	000012cb 	andeq	r1, r0, fp, asr #5
    2e68:	00000f5d 	andeq	r0, r0, sp, asr pc
    2e6c:	0000130d 	andeq	r1, r0, sp, lsl #6
    2e70:	00009888 	andeq	r9, r0, r8, lsl #17
    2e74:	00000064 	andeq	r0, r0, r4, rrx
    2e78:	131e9c01 	tstne	lr, #256	; 0x100
    2e7c:	dc420000 	marle	acc0, r0, r2
    2e80:	02000012 	andeq	r0, r0, #18
    2e84:	e5427491 	strb	r7, [r2, #-1169]	; 0xfffffb6f
    2e88:	02000012 	andeq	r0, r0, #18
    2e8c:	43007091 	movwmi	r7, #145	; 0x91
    2e90:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    2e94:	980d3d01 	stmdals	sp, {r0, r8, sl, fp, ip, sp}
    2e98:	a000000e 	andge	r0, r0, lr
    2e9c:	300000ab 	andcc	r0, r0, fp, lsr #1
    2ea0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ea4:	00702f9c 			; <UNDEFINED> instruction: 0x00702f9c
    2ea8:	fb233d01 	blx	8d22b6 <_bss_end+0x8c05c6>
    2eac:	0200000a 	andeq	r0, r0, #10
    2eb0:	7e447491 	mcrvc	4, 2, r7, cr4, cr1, {4}
    2eb4:	02000000 	andeq	r0, r0, #0
    2eb8:	00007091 	muleq	r0, r1, r0
    2ebc:	00000537 	andeq	r0, r0, r7, lsr r5
    2ec0:	0d570004 	ldcleq	0, cr0, [r7, #-16]
    2ec4:	01040000 	mrseq	r0, (UNDEF: 4)
    2ec8:	00000014 	andeq	r0, r0, r4, lsl r0
    2ecc:	00145c04 	andseq	r5, r4, r4, lsl #24
    2ed0:	0000c500 	andeq	ip, r0, r0, lsl #10
    2ed4:	00ad1c00 	adceq	r1, sp, r0, lsl #24
    2ed8:	00026400 	andeq	r6, r2, r0, lsl #8
    2edc:	0013aa00 	andseq	sl, r3, r0, lsl #20
    2ee0:	08010200 	stmdaeq	r1, {r9}
    2ee4:	00000573 	andeq	r0, r0, r3, ror r5
    2ee8:	99050202 	stmdbls	r5, {r1, r9}
    2eec:	03000005 	movweq	r0, #5
    2ef0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2ef4:	82040074 	andhi	r0, r4, #116	; 0x74
    2ef8:	02000009 	andeq	r0, r0, #9
    2efc:	004b0707 	subeq	r0, fp, r7, lsl #14
    2f00:	3a050000 	bcc	142f08 <_bss_end+0x131218>
    2f04:	02000000 	andeq	r0, r0, #0
    2f08:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    2f0c:	02020000 	andeq	r0, r2, #0
    2f10:	0003dc07 	andeq	sp, r3, r7, lsl #24
    2f14:	05e40400 	strbeq	r0, [r4, #1024]!	; 0x400
    2f18:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2f1c:	00006a07 	andeq	r6, r0, r7, lsl #20
    2f20:	00590500 	subseq	r0, r9, r0, lsl #10
    2f24:	04020000 	streq	r0, [r2], #-0
    2f28:	00459107 	subeq	r9, r5, r7, lsl #2
    2f2c:	006a0500 	rsbeq	r0, sl, r0, lsl #10
    2f30:	68060000 	stmdavs	r6, {}	; <UNPREDICTABLE>
    2f34:	03006c61 	movweq	r6, #3169	; 0xc61
    2f38:	01300b05 	teqeq	r0, r5, lsl #22
    2f3c:	87070000 	strhi	r0, [r7, -r0]
    2f40:	03000004 	movweq	r0, #4
    2f44:	00711c07 	rsbseq	r1, r1, r7, lsl #24
    2f48:	b2800000 	addlt	r0, r0, #0
    2f4c:	cc070ee6 	stcgt	14, cr0, [r7], {230}	; 0xe6
    2f50:	03000005 	movweq	r0, #5
    2f54:	013c1d0a 	teqeq	ip, sl, lsl #26
    2f58:	00000000 	andeq	r0, r0, r0
    2f5c:	52072000 	andpl	r2, r7, #0
    2f60:	03000004 	movweq	r0, #4
    2f64:	013c1d0d 	teqeq	ip, sp, lsl #26
    2f68:	00000000 	andeq	r0, r0, r0
    2f6c:	8a082020 	bhi	20aff4 <_bss_end+0x1f9304>
    2f70:	03000005 	movweq	r0, #5
    2f74:	00651810 	rsbeq	r1, r5, r0, lsl r8
    2f78:	07360000 	ldreq	r0, [r6, -r0]!
    2f7c:	00000373 	andeq	r0, r0, r3, ror r3
    2f80:	3c1d4203 	lfmcc	f4, 4, [sp], {3}
    2f84:	00000001 	andeq	r0, r0, r1
    2f88:	07202150 			; <UNDEFINED> instruction: 0x07202150
    2f8c:	0000034a 	andeq	r0, r0, sl, asr #6
    2f90:	3c1d7103 	ldfccs	f7, [sp], {3}
    2f94:	00000001 	andeq	r0, r0, r1
    2f98:	072000b2 			; <UNDEFINED> instruction: 0x072000b2
    2f9c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    2fa0:	3c1da403 	cfldrscc	mvf10, [sp], {3}
    2fa4:	00000001 	andeq	r0, r0, r1
    2fa8:	072000b4 			; <UNDEFINED> instruction: 0x072000b4
    2fac:	00000364 	andeq	r0, r0, r4, ror #6
    2fb0:	3c1db303 	ldccc	3, cr11, [sp], {3}
    2fb4:	00000001 	andeq	r0, r0, r1
    2fb8:	07201040 	streq	r1, [r0, -r0, asr #32]!
    2fbc:	00000331 	andeq	r0, r0, r1, lsr r3
    2fc0:	3c1dbe03 	ldccc	14, cr11, [sp], {3}
    2fc4:	00000001 	andeq	r0, r0, r1
    2fc8:	07202050 			; <UNDEFINED> instruction: 0x07202050
    2fcc:	000003ef 	andeq	r0, r0, pc, ror #7
    2fd0:	3c1dbf03 	ldccc	15, cr11, [sp], {3}
    2fd4:	00000001 	andeq	r0, r0, r1
    2fd8:	07208040 	streq	r8, [r0, -r0, asr #32]!
    2fdc:	0000045c 	andeq	r0, r0, ip, asr r4
    2fe0:	3c1dc003 	ldccc	0, cr12, [sp], {3}
    2fe4:	00000001 	andeq	r0, r0, r1
    2fe8:	00208050 	eoreq	r8, r0, r0, asr r0
    2fec:	00008209 	andeq	r8, r0, r9, lsl #4
    2ff0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2ff4:	0000458c 	andeq	r4, r0, ip, lsl #11
    2ff8:	00013505 	andeq	r3, r1, r5, lsl #10
    2ffc:	00920900 	addseq	r0, r2, r0, lsl #18
    3000:	a2090000 	andge	r0, r9, #0
    3004:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3008:	000000b2 	strheq	r0, [r0], -r2
    300c:	0000bf09 	andeq	fp, r0, r9, lsl #30
    3010:	00cf0900 	sbceq	r0, pc, r0, lsl #18
    3014:	df090000 	svcle	0x00090000
    3018:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    301c:	000000ef 	andeq	r0, r0, pc, ror #1
    3020:	0000ff09 	andeq	pc, r0, r9, lsl #30
    3024:	010f0900 	tsteq	pc, r0, lsl #18
    3028:	1f090000 	svcne	0x00090000
    302c:	02000001 	andeq	r0, r0, #1
    3030:	45480201 	strbmi	r0, [r8, #-513]	; 0xfffffdff
    3034:	b70a0000 	strlt	r0, [sl, -r0]
    3038:	10000014 	andne	r0, r0, r4, lsl r0
    303c:	7f070704 	svcvc	0x00070704
    3040:	0b000002 	bleq	3050 <CPSR_IRQ_INHIBIT+0x2fd0>
    3044:	00001690 	muleq	r0, r0, r6
    3048:	590e0b04 	stmdbpl	lr, {r2, r8, r9, fp}
    304c:	00000000 	andeq	r0, r0, r0
    3050:	0015260b 	andseq	r2, r5, fp, lsl #12
    3054:	0e0d0400 	cfcpyseq	mvf0, mvf13
    3058:	00000059 	andeq	r0, r0, r9, asr r0
    305c:	15880b04 	strne	r0, [r8, #2820]	; 0xb04
    3060:	0f040000 	svceq	0x00040000
    3064:	0000590e 	andeq	r5, r0, lr, lsl #18
    3068:	650b0800 	strvs	r0, [fp, #-2048]	; 0xfffff800
    306c:	04000007 	streq	r0, [r0], #-7
    3070:	01730a12 	cmneq	r3, r2, lsl sl
    3074:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    3078:	000014b7 			; <UNDEFINED> instruction: 0x000014b7
    307c:	50051504 	andpl	r1, r5, r4, lsl #10
    3080:	84000015 	strhi	r0, [r0], #-21	; 0xffffffeb
    3084:	01000002 	tsteq	r0, r2
    3088:	000001d4 	ldrdeq	r0, [r0], -r4
    308c:	000001e9 	andeq	r0, r0, r9, ror #3
    3090:	0002840d 	andeq	r8, r2, sp, lsl #8
    3094:	00590e00 	subseq	r0, r9, r0, lsl #28
    3098:	590e0000 	stmdbpl	lr, {}	; <UNPREDICTABLE>
    309c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    30a0:	00000059 	andeq	r0, r0, r9, asr r0
    30a4:	0a200c00 	beq	8060ac <_bss_end+0x7f43bc>
    30a8:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    30ac:	0016000a 	andseq	r0, r6, sl
    30b0:	00017300 	andeq	r7, r1, r0, lsl #6
    30b4:	02020100 	andeq	r0, r2, #0, 2
    30b8:	02080000 	andeq	r0, r8, #0
    30bc:	840d0000 	strhi	r0, [sp], #-0
    30c0:	00000002 	andeq	r0, r0, r2
    30c4:	0009ad0f 	andeq	sl, r9, pc, lsl #26
    30c8:	0a1a0400 	beq	6840d0 <_bss_end+0x6723e0>
    30cc:	0000156b 	andeq	r1, r0, fp, ror #10
    30d0:	00021d01 	andeq	r1, r2, r1, lsl #26
    30d4:	00022300 	andeq	r2, r2, r0, lsl #6
    30d8:	02840d00 	addeq	r0, r4, #0, 26
    30dc:	0c000000 	stceq	0, cr0, [r0], {-0}
    30e0:	0000073f 	andeq	r0, r0, pc, lsr r7
    30e4:	3a0a1c04 	bcc	28a0fc <_bss_end+0x27840c>
    30e8:	73000014 	movwvc	r0, #20
    30ec:	01000001 	tsteq	r0, r1
    30f0:	0000023c 	andeq	r0, r0, ip, lsr r2
    30f4:	00000242 	andeq	r0, r0, r2, asr #4
    30f8:	00028a0d 	andeq	r8, r2, sp, lsl #20
    30fc:	9b0f0000 	blls	3c3104 <_bss_end+0x3b1414>
    3100:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    3104:	15300a1f 	ldrne	r0, [r0, #-2591]!	; 0xfffff5e1
    3108:	57010000 	strpl	r0, [r1, -r0]
    310c:	62000002 	andvs	r0, r0, #2
    3110:	0d000002 	stceq	0, cr0, [r0, #-8]
    3114:	00000284 	andeq	r0, r0, r4, lsl #5
    3118:	0001730e 	andeq	r7, r1, lr, lsl #6
    311c:	9b100000 	blls	403124 <_bss_end+0x3f1434>
    3120:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    3124:	15930a21 	ldrne	r0, [r3, #2593]	; 0xa21
    3128:	73010000 	movwvc	r0, #4096	; 0x1000
    312c:	0d000002 	stceq	0, cr0, [r0, #-8]
    3130:	00000284 	andeq	r0, r0, r4, lsl #5
    3134:	00003a0e 	andeq	r3, r0, lr, lsl #20
    3138:	05000000 	streq	r0, [r0, #-0]
    313c:	0000017a 	andeq	r0, r0, sl, ror r1
    3140:	017a0411 	cmneq	sl, r1, lsl r4
    3144:	04110000 	ldreq	r0, [r1], #-0
    3148:	0000027f 	andeq	r0, r0, pc, ror r2
    314c:	0016eb12 	andseq	lr, r6, r2, lsl fp
    3150:	18240400 	stmdane	r4!, {sl}
    3154:	0000017a 	andeq	r0, r0, sl, ror r1
    3158:	0015d50a 	andseq	sp, r5, sl, lsl #10
    315c:	07050200 	streq	r0, [r5, -r0, lsl #4]
    3160:	00038307 	andeq	r8, r3, r7, lsl #6
    3164:	07650b00 	strbeq	r0, [r5, -r0, lsl #22]!
    3168:	0b050000 	bleq	143170 <_bss_end+0x131480>
    316c:	0001730a 	andeq	r7, r1, sl, lsl #6
    3170:	cd0b0000 	stcgt	0, cr0, [fp, #-0]
    3174:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    3178:	00250a0d 	eoreq	r0, r5, sp, lsl #20
    317c:	13010000 	movwne	r0, #4096	; 0x1000
    3180:	0000161c 	andeq	r1, r0, ip, lsl r6
    3184:	981a1005 	ldmdals	sl, {r0, r2, ip}
    3188:	0c000003 	stceq	0, cr0, [r0], {3}
    318c:	000015d5 	ldrdeq	r1, [r0], -r5
    3190:	b3051305 	movwlt	r1, #21253	; 0x5305
    3194:	9d000015 	stcls	0, cr0, [r0, #-84]	; 0xffffffac
    3198:	01000003 	tsteq	r0, r3
    319c:	000002e8 	andeq	r0, r0, r8, ror #5
    31a0:	000002ee 	andeq	r0, r0, lr, ror #5
    31a4:	00039d0d 	andeq	r9, r3, sp, lsl #26
    31a8:	200c0000 	andcs	r0, ip, r0
    31ac:	0500000a 	streq	r0, [r0, #-10]
    31b0:	16a40a16 	ssatne	r0, #5, r6, lsl #20
    31b4:	01730000 	cmneq	r3, r0
    31b8:	07010000 	streq	r0, [r1, -r0]
    31bc:	0d000003 	stceq	0, cr0, [r0, #-12]
    31c0:	0d000003 	stceq	0, cr0, [r0, #-12]
    31c4:	0000039d 	muleq	r0, sp, r3
    31c8:	09ad0f00 	stmibeq	sp!, {r8, r9, sl, fp}
    31cc:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
    31d0:	0015080a 	andseq	r0, r5, sl, lsl #16
    31d4:	03220100 			; <UNDEFINED> instruction: 0x03220100
    31d8:	03280000 			; <UNDEFINED> instruction: 0x03280000
    31dc:	9d0d0000 	stcls	0, cr0, [sp, #-0]
    31e0:	00000003 	andeq	r0, r0, r3
    31e4:	00073f0c 	andeq	r3, r7, ip, lsl #30
    31e8:	0a1a0500 	beq	6845f0 <_bss_end+0x672900>
    31ec:	000014e5 	andeq	r1, r0, r5, ror #9
    31f0:	00000173 	andeq	r0, r0, r3, ror r1
    31f4:	00034101 	andeq	r4, r3, r1, lsl #2
    31f8:	00034700 	andeq	r4, r3, r0, lsl #14
    31fc:	03a80d00 			; <UNDEFINED> instruction: 0x03a80d00
    3200:	0f000000 	svceq	0x00000000
    3204:	00001ce0 	andeq	r1, r0, r0, ror #25
    3208:	4b0a1d05 	blmi	28a624 <_bss_end+0x278934>
    320c:	01000016 	tsteq	r0, r6, lsl r0
    3210:	0000035c 	andeq	r0, r0, ip, asr r3
    3214:	00000367 	andeq	r0, r0, r7, ror #6
    3218:	00039d0d 	andeq	r9, r3, sp, lsl #26
    321c:	00250e00 	eoreq	r0, r5, r0, lsl #28
    3220:	14000000 	strne	r0, [r0], #-0
    3224:	000002d3 	ldrdeq	r0, [r0], -r3
    3228:	c70a1f05 	strgt	r1, [sl, -r5, lsl #30]
    322c:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    3230:	01000000 	mrseq	r0, (UNDEF: 0)
    3234:	0000037c 	andeq	r0, r0, ip, ror r3
    3238:	0003a80d 	andeq	sl, r3, sp, lsl #16
    323c:	05000000 	streq	r0, [r0, #-0]
    3240:	0000029c 	muleq	r0, ip, r2
    3244:	00004615 	andeq	r4, r0, r5, lsl r6
    3248:	00039800 	andeq	r9, r3, r0, lsl #16
    324c:	006a1600 	rsbeq	r1, sl, r0, lsl #12
    3250:	005f0000 	subseq	r0, pc, r0
    3254:	00038805 	andeq	r8, r3, r5, lsl #16
    3258:	9c041100 	stflss	f1, [r4], {-0}
    325c:	05000002 	streq	r0, [r0, #-2]
    3260:	0000039d 	muleq	r0, sp, r3
    3264:	03830411 	orreq	r0, r3, #285212672	; 0x11000000
    3268:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
    326c:	12000003 	andne	r0, r0, #3
    3270:	0000163a 	andeq	r1, r0, sl, lsr r6
    3274:	9c192205 	lfmls	f2, 4, [r9], {5}
    3278:	17000002 	strne	r0, [r0, -r2]
    327c:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    3280:	05120301 	ldreq	r0, [r2, #-769]	; 0xfffffcff
    3284:	010c1003 	tsteq	ip, r3
    3288:	02c31800 	sbceq	r1, r3, #0, 16
    328c:	15010000 	strne	r0, [r1, #-0]
    3290:	0016690f 	andseq	r6, r6, pc, lsl #18
    3294:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    3298:	19000100 	stmdbne	r0, {r8}
    329c:	0000162b 	andeq	r1, r0, fp, lsr #12
    32a0:	0000af64 	andeq	sl, r0, r4, ror #30
    32a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    32a8:	411a9c01 	tstmi	sl, r1, lsl #24
    32ac:	18000002 	stmdane	r0, {r1}
    32b0:	4c0000af 	stcmi	0, cr0, [r0], {175}	; 0xaf
    32b4:	01000000 	mrseq	r0, (UNDEF: 0)
    32b8:	0004209c 	muleq	r4, ip, r0
    32bc:	033b1b00 	teqeq	fp, #0, 22
    32c0:	b4010000 	strlt	r0, [r1], #-0
    32c4:	00003301 	andeq	r3, r0, r1, lsl #6
    32c8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    32cc:	0007341b 	andeq	r3, r7, fp, lsl r4
    32d0:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
    32d4:	00000033 	andeq	r0, r0, r3, lsr r0
    32d8:	00709102 	rsbseq	r9, r0, r2, lsl #2
    32dc:	0003671c 	andeq	r6, r3, ip, lsl r7
    32e0:	06ae0100 	strteq	r0, [lr], r0, lsl #2
    32e4:	0000043a 	andeq	r0, r0, sl, lsr r4
    32e8:	0000aed0 	ldrdeq	sl, [r0], -r0
    32ec:	00000048 	andeq	r0, r0, r8, asr #32
    32f0:	04479c01 	strbeq	r9, [r7], #-3073	; 0xfffff3ff
    32f4:	2c1d0000 	ldccs	0, cr0, [sp], {-0}
    32f8:	ae000003 	cdpge	0, 0, cr0, cr0, cr3, {0}
    32fc:	02000003 	andeq	r0, r0, #3
    3300:	1e007491 	mcrne	4, 0, r7, cr0, cr1, {4}
    3304:	00000347 	andeq	r0, r0, r7, asr #6
    3308:	61069f01 	tstvs	r6, r1, lsl #30
    330c:	3c000004 	stccc	0, cr0, [r0], {4}
    3310:	940000ae 	strls	r0, [r0], #-174	; 0xffffff52
    3314:	01000000 	mrseq	r0, (UNDEF: 0)
    3318:	00048a9c 	muleq	r4, ip, sl
    331c:	032c1d00 			; <UNDEFINED> instruction: 0x032c1d00
    3320:	03a30000 			; <UNDEFINED> instruction: 0x03a30000
    3324:	91020000 	mrsls	r0, (UNDEF: 2)
    3328:	00631f6c 	rsbeq	r1, r3, ip, ror #30
    332c:	25239f01 	strcs	r9, [r3, #-3841]!	; 0xfffff0ff
    3330:	02000000 	andeq	r0, r0, #0
    3334:	69206b91 	stmdbvs	r0!, {r0, r4, r7, r8, r9, fp, sp, lr}
    3338:	01007864 	tsteq	r0, r4, ror #16
    333c:	003a0da4 	eorseq	r0, sl, r4, lsr #27
    3340:	91020000 	mrsls	r0, (UNDEF: 2)
    3344:	281c0077 	ldmdacs	ip, {r0, r1, r2, r4, r5, r6}
    3348:	01000003 	tsteq	r0, r3
    334c:	04a4069a 	strteq	r0, [r4], #1690	; 0x69a
    3350:	ae140000 	cdpge	0, 1, cr0, cr4, cr0, {0}
    3354:	00280000 	eoreq	r0, r8, r0
    3358:	9c010000 	stcls	0, cr0, [r1], {-0}
    335c:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
    3360:	00032c1d 	andeq	r2, r3, sp, lsl ip
    3364:	0003ae00 	andeq	sl, r3, r0, lsl #28
    3368:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    336c:	030d1e00 	movweq	r1, #56832	; 0xde00
    3370:	90010000 	andls	r0, r1, r0
    3374:	0004cb06 	andeq	ip, r4, r6, lsl #22
    3378:	00adc400 	adceq	ip, sp, r0, lsl #8
    337c:	00005000 	andeq	r5, r0, r0
    3380:	d89c0100 	ldmle	ip, {r8}
    3384:	1d000004 	stcne	0, cr0, [r0, #-16]
    3388:	0000032c 	andeq	r0, r0, ip, lsr #6
    338c:	000003a3 	andeq	r0, r0, r3, lsr #7
    3390:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3394:	0002ee1e 	andeq	lr, r2, lr, lsl lr
    3398:	06830100 	streq	r0, [r3], r0, lsl #2
    339c:	000004f2 	strdeq	r0, [r0], -r2
    33a0:	0000ad58 	andeq	sl, r0, r8, asr sp
    33a4:	0000006c 	andeq	r0, r0, ip, rrx
    33a8:	04ff9c01 	ldrbteq	r9, [pc], #3073	; 33b0 <CPSR_IRQ_INHIBIT+0x3330>
    33ac:	2c1d0000 	ldccs	0, cr0, [sp], {-0}
    33b0:	a3000003 	movwge	r0, #3
    33b4:	02000003 	andeq	r0, r0, #3
    33b8:	21007491 			; <UNDEFINED> instruction: 0x21007491
    33bc:	000002cf 	andeq	r0, r0, pc, asr #5
    33c0:	10017c01 	andne	r7, r1, r1, lsl #24
    33c4:	00000005 	andeq	r0, r0, r5
    33c8:	0000051a 	andeq	r0, r0, sl, lsl r5
    33cc:	00032c22 	andeq	r2, r3, r2, lsr #24
    33d0:	0003a300 	andeq	sl, r3, r0, lsl #6
    33d4:	ff230000 			; <UNDEFINED> instruction: 0xff230000
    33d8:	e6000004 	str	r0, [r0], -r4
    33dc:	31000015 	tstcc	r0, r5, lsl r0
    33e0:	1c000005 	stcne	0, cr0, [r0], {5}
    33e4:	3c0000ad 	stccc	0, cr0, [r0], {173}	; 0xad
    33e8:	01000000 	mrseq	r0, (UNDEF: 0)
    33ec:	0510249c 	ldreq	r2, [r0, #-1180]	; 0xfffffb64
    33f0:	91020000 	mrsls	r0, (UNDEF: 2)
    33f4:	02000074 	andeq	r0, r0, #116	; 0x74
    33f8:	04000007 	streq	r0, [r0], #-7
    33fc:	000fa300 	andeq	sl, pc, r0, lsl #6
    3400:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
    3404:	04000000 	streq	r0, [r0], #-0
    3408:	00001712 	andeq	r1, r0, r2, lsl r7
    340c:	000000c5 	andeq	r0, r0, r5, asr #1
    3410:	0000af80 	andeq	sl, r0, r0, lsl #31
    3414:	000005c4 	andeq	r0, r0, r4, asr #11
    3418:	000015b9 			; <UNDEFINED> instruction: 0x000015b9
    341c:	73080102 	movwvc	r0, #33026	; 0x8102
    3420:	02000005 	andeq	r0, r0, #5
    3424:	05990502 	ldreq	r0, [r9, #1282]	; 0x502
    3428:	04030000 	streq	r0, [r3], #-0
    342c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3430:	00330400 	eorseq	r0, r3, r0, lsl #8
    3434:	82050000 	andhi	r0, r5, #0
    3438:	02000009 	andeq	r0, r0, #9
    343c:	004b0707 	subeq	r0, fp, r7, lsl #14
    3440:	01020000 	mrseq	r0, (UNDEF: 2)
    3444:	00056a08 	andeq	r6, r5, r8, lsl #20
    3448:	07020200 	streq	r0, [r2, -r0, lsl #4]
    344c:	000003dc 	ldrdeq	r0, [r0], -ip
    3450:	0005e405 	andeq	lr, r5, r5, lsl #8
    3454:	07090200 	streq	r0, [r9, -r0, lsl #4]
    3458:	0000006a 	andeq	r0, r0, sl, rrx
    345c:	00005906 	andeq	r5, r0, r6, lsl #18
    3460:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3464:	00004591 	muleq	r0, r1, r5
    3468:	00006a06 	andeq	r6, r0, r6, lsl #20
    346c:	006a0400 	rsbeq	r0, sl, r0, lsl #8
    3470:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    3474:	03006c61 	movweq	r6, #3169	; 0xc61
    3478:	01350b05 	teqeq	r5, r5, lsl #22
    347c:	87080000 	strhi	r0, [r8, -r0]
    3480:	03000004 	movweq	r0, #4
    3484:	00711c07 	rsbseq	r1, r1, r7, lsl #24
    3488:	b2800000 	addlt	r0, r0, #0
    348c:	cc080ee6 	stcgt	14, cr0, [r8], {230}	; 0xe6
    3490:	03000005 	movweq	r0, #5
    3494:	01411d0a 	cmpeq	r1, sl, lsl #26
    3498:	00000000 	andeq	r0, r0, r0
    349c:	52082000 	andpl	r2, r8, #0
    34a0:	03000004 	movweq	r0, #4
    34a4:	01411d0d 	cmpeq	r1, sp, lsl #26
    34a8:	00000000 	andeq	r0, r0, r0
    34ac:	8a092020 	bhi	24b534 <_bss_end+0x239844>
    34b0:	03000005 	movweq	r0, #5
    34b4:	00651810 	rsbeq	r1, r5, r0, lsl r8
    34b8:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    34bc:	00000373 	andeq	r0, r0, r3, ror r3
    34c0:	411d4203 	tstmi	sp, r3, lsl #4
    34c4:	00000001 	andeq	r0, r0, r1
    34c8:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    34cc:	0000034a 	andeq	r0, r0, sl, asr #6
    34d0:	411d7103 	tstmi	sp, r3, lsl #2
    34d4:	00000001 	andeq	r0, r0, r1
    34d8:	082000b2 	stmdaeq	r0!, {r1, r4, r5, r7}
    34dc:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    34e0:	411da403 	tstmi	sp, r3, lsl #8
    34e4:	00000001 	andeq	r0, r0, r1
    34e8:	082000b4 	stmdaeq	r0!, {r2, r4, r5, r7}
    34ec:	00000364 	andeq	r0, r0, r4, ror #6
    34f0:	411db303 	tstmi	sp, r3, lsl #6
    34f4:	00000001 	andeq	r0, r0, r1
    34f8:	08201040 	stmdaeq	r0!, {r6, ip}
    34fc:	00000331 	andeq	r0, r0, r1, lsr r3
    3500:	411dbe03 	tstmi	sp, r3, lsl #28
    3504:	00000001 	andeq	r0, r0, r1
    3508:	08202050 	stmdaeq	r0!, {r4, r6, sp}
    350c:	000003ef 	andeq	r0, r0, pc, ror #7
    3510:	411dbf03 	tstmi	sp, r3, lsl #30
    3514:	00000001 	andeq	r0, r0, r1
    3518:	08208040 	stmdaeq	r0!, {r6, pc}
    351c:	0000045c 	andeq	r0, r0, ip, asr r4
    3520:	411dc003 	tstmi	sp, r3
    3524:	00000001 	andeq	r0, r0, r1
    3528:	00208050 	eoreq	r8, r0, r0, asr r0
    352c:	0000870a 	andeq	r8, r0, sl, lsl #14
    3530:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3534:	0000458c 	andeq	r4, r0, ip, lsl #11
    3538:	00013a06 	andeq	r3, r1, r6, lsl #20
    353c:	00970a00 	addseq	r0, r7, r0, lsl #20
    3540:	a70a0000 	strge	r0, [sl, -r0]
    3544:	0a000000 	beq	354c <CPSR_IRQ_INHIBIT+0x34cc>
    3548:	000000b7 	strheq	r0, [r0], -r7
    354c:	0000c40a 	andeq	ip, r0, sl, lsl #8
    3550:	00d40a00 	sbcseq	r0, r4, r0, lsl #20
    3554:	e40a0000 	str	r0, [sl], #-0
    3558:	0a000000 	beq	3560 <CPSR_IRQ_INHIBIT+0x34e0>
    355c:	000000f4 	strdeq	r0, [r0], -r4
    3560:	0001040a 	andeq	r0, r1, sl, lsl #8
    3564:	01140a00 	tsteq	r4, r0, lsl #20
    3568:	240a0000 	strcs	r0, [sl], #-0
    356c:	0b000001 	bleq	3578 <CPSR_IRQ_INHIBIT+0x34f8>
    3570:	0000054d 	andeq	r0, r0, sp, asr #10
    3574:	006a0407 	rsbeq	r0, sl, r7, lsl #8
    3578:	07040000 	streq	r0, [r4, -r0]
    357c:	0001c10c 	andeq	ip, r1, ip, lsl #2
    3580:	02dc0c00 	sbcseq	r0, ip, #0, 24
    3584:	0c000000 	stceq	0, cr0, [r0], {-0}
    3588:	0000051d 	andeq	r0, r0, sp, lsl r5
    358c:	02150c01 	andseq	r0, r5, #256	; 0x100
    3590:	0c020000 	stceq	0, cr0, [r2], {-0}
    3594:	0000020f 	andeq	r0, r0, pc, lsl #4
    3598:	01f70c03 	mvnseq	r0, r3, lsl #24
    359c:	0c040000 	stceq	0, cr0, [r4], {-0}
    35a0:	000001fd 	strdeq	r0, [r0], -sp
    35a4:	02030c05 	andeq	r0, r3, #1280	; 0x500
    35a8:	0c060000 	stceq	0, cr0, [r6], {-0}
    35ac:	00000209 	andeq	r0, r0, r9, lsl #4
    35b0:	07280c07 	streq	r0, [r8, -r7, lsl #24]!
    35b4:	00080000 	andeq	r0, r8, r0
    35b8:	00071a0d 	andeq	r1, r7, sp, lsl #20
    35bc:	1b041400 	blne	1085c4 <_bss_end+0xf68d4>
    35c0:	0003bc07 	andeq	fp, r3, r7, lsl #24
    35c4:	04020e00 	streq	r0, [r2], #-3584	; 0xfffff200
    35c8:	1f040000 	svcne	0x00040000
    35cc:	0003c722 	andeq	ip, r3, r2, lsr #14
    35d0:	c10e0000 	mrsgt	r0, (UNDEF: 14)
    35d4:	04000002 	streq	r0, [r0], #-2
    35d8:	03cc0e22 	biceq	r0, ip, #544	; 0x220
    35dc:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    35e0:	000004f1 	strdeq	r0, [r0], -r1
    35e4:	cc0e2404 	cfstrsgt	mvf2, [lr], {4}
    35e8:	0c000003 	stceq	0, cr0, [r0], {3}
    35ec:	00043e0f 	andeq	r3, r4, pc, lsl #28
    35f0:	0a280400 	beq	a045f8 <_bss_end+0x9f2908>
    35f4:	000003ac 	andeq	r0, r0, ip, lsr #7
    35f8:	000003dc 	ldrdeq	r0, [r0], -ip
    35fc:	00020e02 	andeq	r0, r2, r2, lsl #28
    3600:	00022300 	andeq	r2, r2, r0, lsl #6
    3604:	03e31000 	mvneq	r1, #0
    3608:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    360c:	11000000 	mrsne	r0, (UNDEF: 0)
    3610:	000003e9 	andeq	r0, r0, r9, ror #7
    3614:	0003e911 	andeq	lr, r3, r1, lsl r9
    3618:	de0f0000 	cdple	0, 0, cr0, cr15, cr0, {0}
    361c:	04000004 	streq	r0, [r0], #-4
    3620:	04af0a2a 	strteq	r0, [pc], #2602	; 3628 <CPSR_IRQ_INHIBIT+0x35a8>
    3624:	03dc0000 	bicseq	r0, ip, #0
    3628:	3c020000 	stccc	0, cr0, [r2], {-0}
    362c:	51000002 	tstpl	r0, r2
    3630:	10000002 	andne	r0, r0, r2
    3634:	000003e3 	andeq	r0, r0, r3, ror #7
    3638:	00005911 	andeq	r5, r0, r1, lsl r9
    363c:	03e91100 	mvneq	r1, #0, 2
    3640:	e9110000 	ldmdb	r1, {}	; <UNPREDICTABLE>
    3644:	00000003 	andeq	r0, r0, r3
    3648:	00062d0f 	andeq	r2, r6, pc, lsl #26
    364c:	0a2c0400 	beq	b04654 <_bss_end+0xaf2964>
    3650:	000006ad 	andeq	r0, r0, sp, lsr #13
    3654:	000003dc 	ldrdeq	r0, [r0], -ip
    3658:	00026a02 	andeq	r6, r2, r2, lsl #20
    365c:	00027f00 	andeq	r7, r2, r0, lsl #30
    3660:	03e31000 	mvneq	r1, #0
    3664:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    3668:	11000000 	mrsne	r0, (UNDEF: 0)
    366c:	000003e9 	andeq	r0, r0, r9, ror #7
    3670:	0003e911 	andeq	lr, r3, r1, lsl r9
    3674:	660f0000 	strvs	r0, [pc], -r0
    3678:	04000004 	streq	r0, [r0], #-4
    367c:	05fe0a2e 	ldrbeq	r0, [lr, #2606]!	; 0xa2e
    3680:	03dc0000 	bicseq	r0, ip, #0
    3684:	98020000 	stmdals	r2, {}	; <UNPREDICTABLE>
    3688:	ad000002 	stcge	0, cr0, [r0, #-8]
    368c:	10000002 	andne	r0, r0, r2
    3690:	000003e3 	andeq	r0, r0, r3, ror #7
    3694:	00005911 	andeq	r5, r0, r1, lsl r9
    3698:	03e91100 	mvneq	r1, #0, 2
    369c:	e9110000 	ldmdb	r1, {}	; <UNPREDICTABLE>
    36a0:	00000003 	andeq	r0, r0, r3
    36a4:	00071a0f 	andeq	r1, r7, pc, lsl #20
    36a8:	05310400 	ldreq	r0, [r1, #-1024]!	; 0xfffffc00
    36ac:	000005b5 			; <UNDEFINED> instruction: 0x000005b5
    36b0:	000003ef 	andeq	r0, r0, pc, ror #7
    36b4:	0002c601 	andeq	ip, r2, r1, lsl #12
    36b8:	0002d100 	andeq	sp, r2, r0, lsl #2
    36bc:	03ef1000 	mvneq	r1, #0
    36c0:	6a110000 	bvs	4436c8 <_bss_end+0x4319d8>
    36c4:	00000000 	andeq	r0, r0, r0
    36c8:	00028a12 	andeq	r8, r2, r2, lsl sl
    36cc:	0a340400 	beq	d046d4 <_bss_end+0xcf29e4>
    36d0:	00000524 	andeq	r0, r0, r4, lsr #10
    36d4:	0002e601 	andeq	lr, r2, r1, lsl #12
    36d8:	0002f600 	andeq	pc, r2, r0, lsl #12
    36dc:	03ef1000 	mvneq	r1, #0
    36e0:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    36e4:	11000000 	mrsne	r0, (UNDEF: 0)
    36e8:	00000178 	andeq	r0, r0, r8, ror r1
    36ec:	05780f00 	ldrbeq	r0, [r8, #-3840]!	; 0xfffff100
    36f0:	36040000 	strcc	r0, [r4], -r0
    36f4:	0006ec14 	andeq	lr, r6, r4, lsl ip
    36f8:	00017800 	andeq	r7, r1, r0, lsl #16
    36fc:	030f0100 	movweq	r0, #61696	; 0xf100
    3700:	031a0000 	tsteq	sl, #0
    3704:	e3100000 	tst	r0, #0
    3708:	11000003 	tstne	r0, r3
    370c:	00000059 	andeq	r0, r0, r9, asr r0
    3710:	05191200 	ldreq	r1, [r9, #-512]	; 0xfffffe00
    3714:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    3718:	0004160a 	andeq	r1, r4, sl, lsl #12
    371c:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    3720:	033f0000 	teqeq	pc, #0
    3724:	ef100000 	svc	0x00100000
    3728:	11000003 	tstne	r0, r3
    372c:	00000059 	andeq	r0, r0, r9, asr r0
    3730:	0003dc11 	andeq	sp, r3, r1, lsl ip
    3734:	d80f0000 	stmdale	pc, {}	; <UNPREDICTABLE>
    3738:	04000002 	streq	r0, [r0], #-2
    373c:	026b0a3c 	rsbeq	r0, fp, #60, 20	; 0x3c000
    3740:	03dc0000 	bicseq	r0, ip, #0
    3744:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    3748:	63000003 	movwvs	r0, #3
    374c:	10000003 	andne	r0, r0, r3
    3750:	000003ef 	andeq	r0, r0, pc, ror #7
    3754:	00005911 	andeq	r5, r0, r1, lsl r9
    3758:	ed0f0000 	stc	0, cr0, [pc, #-0]	; 3760 <CPSR_IRQ_INHIBIT+0x36e0>
    375c:	04000005 	streq	r0, [r0], #-5
    3760:	01d30a3f 	bicseq	r0, r3, pc, lsr sl
    3764:	03dc0000 	bicseq	r0, ip, #0
    3768:	7c010000 	stcvc	0, cr0, [r1], {-0}
    376c:	91000003 	tstls	r0, r3
    3770:	10000003 	andne	r0, r0, r3
    3774:	000003ef 	andeq	r0, r0, pc, ror #7
    3778:	00005911 	andeq	r5, r0, r1, lsl r9
    377c:	03dc1100 	bicseq	r1, ip, #0, 2
    3780:	dc110000 	ldcle	0, cr0, [r1], {-0}
    3784:	00000003 	andeq	r0, r0, r3
    3788:	0005a313 	andeq	sl, r5, r3, lsl r3
    378c:	0a410400 	beq	1044794 <_bss_end+0x1032aa4>
    3790:	000002fe 	strdeq	r0, [r0], -lr
    3794:	000003dc 	ldrdeq	r0, [r0], -ip
    3798:	0003a601 	andeq	sl, r3, r1, lsl #12
    379c:	03ef1000 	mvneq	r1, #0
    37a0:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    37a4:	11000000 	mrsne	r0, (UNDEF: 0)
    37a8:	000003dc 	ldrdeq	r0, [r0], -ip
    37ac:	0003dc11 	andeq	sp, r3, r1, lsl ip
    37b0:	06000000 	streq	r0, [r0], -r0
    37b4:	000001c1 	andeq	r0, r0, r1, asr #3
    37b8:	00760414 	rsbseq	r0, r6, r4, lsl r4
    37bc:	c1060000 	mrsgt	r0, (UNDEF: 6)
    37c0:	15000003 	strne	r0, [r0, #-3]
    37c4:	00000059 	andeq	r0, r0, r9, asr r0
    37c8:	000003dc 	ldrdeq	r0, [r0], -ip
    37cc:	00006a16 	andeq	r6, r0, r6, lsl sl
    37d0:	02000100 	andeq	r0, r0, #0, 2
    37d4:	45480201 	strbmi	r0, [r8, #-513]	; 0xfffffdff
    37d8:	04140000 	ldreq	r0, [r4], #-0
    37dc:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    37e0:	00590417 	subseq	r0, r9, r7, lsl r4
    37e4:	04140000 	ldreq	r0, [r4], #-0
    37e8:	000001c1 	andeq	r0, r0, r1, asr #3
    37ec:	0004a918 	andeq	sl, r4, r8, lsl r9
    37f0:	16450400 	strbne	r0, [r5], -r0, lsl #8
    37f4:	000001c1 	andeq	r0, r0, r1, asr #3
    37f8:	0014b70d 	andseq	fp, r4, sp, lsl #14
    37fc:	07051000 	streq	r1, [r5, -r0]
    3800:	00050607 	andeq	r0, r5, r7, lsl #12
    3804:	16900e00 	ldrne	r0, [r0], r0, lsl #28
    3808:	0b050000 	bleq	143810 <_bss_end+0x131b20>
    380c:	0000590e 	andeq	r5, r0, lr, lsl #18
    3810:	260e0000 	strcs	r0, [lr], -r0
    3814:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    3818:	00590e0d 	subseq	r0, r9, sp, lsl #28
    381c:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    3820:	00001588 	andeq	r1, r0, r8, lsl #11
    3824:	590e0f05 	stmdbpl	lr, {r0, r2, r8, r9, sl, fp}
    3828:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    382c:	0007650e 	andeq	r6, r7, lr, lsl #10
    3830:	0a120500 	beq	484c38 <_bss_end+0x472f48>
    3834:	000003dc 	ldrdeq	r0, [r0], -ip
    3838:	14b70f0c 	ldrtne	r0, [r7], #3852	; 0xf0c
    383c:	15050000 	strne	r0, [r5, #-0]
    3840:	00155005 	andseq	r5, r5, r5
    3844:	00050b00 	andeq	r0, r5, r0, lsl #22
    3848:	045b0100 	ldrbeq	r0, [fp], #-256	; 0xffffff00
    384c:	04700000 	ldrbteq	r0, [r0], #-0
    3850:	0b100000 	bleq	403858 <_bss_end+0x3f1b68>
    3854:	11000005 	tstne	r0, r5
    3858:	00000059 	andeq	r0, r0, r9, asr r0
    385c:	00005911 	andeq	r5, r0, r1, lsl r9
    3860:	00591100 	subseq	r1, r9, r0, lsl #2
    3864:	0f000000 	svceq	0x00000000
    3868:	00000a20 	andeq	r0, r0, r0, lsr #20
    386c:	000a1805 	andeq	r1, sl, r5, lsl #16
    3870:	dc000016 	stcle	0, cr0, [r0], {22}
    3874:	01000003 	tsteq	r0, r3
    3878:	00000489 	andeq	r0, r0, r9, lsl #9
    387c:	0000048f 	andeq	r0, r0, pc, lsl #9
    3880:	00050b10 	andeq	r0, r5, r0, lsl fp
    3884:	ad120000 	ldcge	0, cr0, [r2, #-0]
    3888:	05000009 	streq	r0, [r0, #-9]
    388c:	156b0a1a 	strbne	r0, [fp, #-2586]!	; 0xfffff5e6
    3890:	a4010000 	strge	r0, [r1], #-0
    3894:	aa000004 	bge	38ac <CPSR_IRQ_INHIBIT+0x382c>
    3898:	10000004 	andne	r0, r0, r4
    389c:	0000050b 	andeq	r0, r0, fp, lsl #10
    38a0:	073f0f00 	ldreq	r0, [pc, -r0, lsl #30]!
    38a4:	1c050000 	stcne	0, cr0, [r5], {-0}
    38a8:	00143a0a 	andseq	r3, r4, sl, lsl #20
    38ac:	0003dc00 	andeq	sp, r3, r0, lsl #24
    38b0:	04c30100 	strbeq	r0, [r3], #256	; 0x100
    38b4:	04c90000 	strbeq	r0, [r9], #0
    38b8:	16100000 	ldrne	r0, [r0], -r0
    38bc:	00000005 	andeq	r0, r0, r5
    38c0:	00169b12 	andseq	r9, r6, r2, lsl fp
    38c4:	0a1f0500 	beq	7c4ccc <_bss_end+0x7b2fdc>
    38c8:	00001530 	andeq	r1, r0, r0, lsr r5
    38cc:	0004de01 	andeq	sp, r4, r1, lsl #28
    38d0:	0004e900 	andeq	lr, r4, r0, lsl #18
    38d4:	050b1000 	streq	r1, [fp, #-0]
    38d8:	dc110000 	ldcle	0, cr0, [r1], {-0}
    38dc:	00000003 	andeq	r0, r0, r3
    38e0:	00169b19 	andseq	r9, r6, r9, lsl fp
    38e4:	0a210500 	beq	844cec <_bss_end+0x832ffc>
    38e8:	00001593 	muleq	r0, r3, r5
    38ec:	0004fa01 	andeq	pc, r4, r1, lsl #20
    38f0:	050b1000 	streq	r1, [fp, #-0]
    38f4:	3f110000 	svccc	0x00110000
    38f8:	00000000 	andeq	r0, r0, r0
    38fc:	04010600 	streq	r0, [r1], #-1536	; 0xfffffa00
    3900:	04140000 	ldreq	r0, [r4], #-0
    3904:	00000401 	andeq	r0, r0, r1, lsl #8
    3908:	00050b06 	andeq	r0, r5, r6, lsl #22
    390c:	06041400 	streq	r1, [r4], -r0, lsl #8
    3910:	06000005 	streq	r0, [r0], -r5
    3914:	00000516 	andeq	r0, r0, r6, lsl r5
    3918:	0016eb18 	andseq	lr, r6, r8, lsl fp
    391c:	18240500 	stmdane	r4!, {r8, sl}
    3920:	00000401 	andeq	r0, r0, r1, lsl #8
    3924:	0005211a 	andeq	r2, r5, sl, lsl r1
    3928:	11050100 	mrsne	r0, (UNDEF: 21)
    392c:	0c140305 	ldceq	3, cr0, [r4], {5}
    3930:	dc1b0001 	ldcle	0, cr0, [fp], {1}
    3934:	28000016 	stmdacs	r0, {r1, r2, r4}
    3938:	1c0000b5 	stcne	0, cr0, [r0], {181}	; 0xb5
    393c:	01000000 	mrseq	r0, (UNDEF: 0)
    3940:	02411c9c 	subeq	r1, r1, #156, 24	; 0x9c00
    3944:	b4d00000 	ldrblt	r0, [r0], #0
    3948:	00580000 	subseq	r0, r8, r0
    394c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3950:	0000057c 	andeq	r0, r0, ip, ror r5
    3954:	00033b1d 	andeq	r3, r3, sp, lsl fp
    3958:	01800100 	orreq	r0, r0, r0, lsl #2
    395c:	00000033 	andeq	r0, r0, r3, lsr r0
    3960:	1d749102 	ldfnep	f1, [r4, #-8]!
    3964:	00000734 	andeq	r0, r0, r4, lsr r7
    3968:	33018001 	movwcc	r8, #4097	; 0x1001
    396c:	02000000 	andeq	r0, r0, #0
    3970:	1e007091 	mcrne	0, 0, r7, cr0, cr1, {4}
    3974:	000004e9 	andeq	r0, r0, r9, ror #9
    3978:	96066501 	strls	r6, [r6], -r1, lsl #10
    397c:	6c000005 	stcvs	0, cr0, [r0], {5}
    3980:	640000b3 	strvs	r0, [r0], #-179	; 0xffffff4d
    3984:	01000001 	tsteq	r0, r1
    3988:	0005d69c 	muleq	r5, ip, r6
    398c:	032c1f00 			; <UNDEFINED> instruction: 0x032c1f00
    3990:	05110000 	ldreq	r0, [r1, #-0]
    3994:	91020000 	mrsls	r0, (UNDEF: 2)
    3998:	16fb1d6c 	ldrbtne	r1, [fp], ip, ror #26
    399c:	65010000 	strvs	r0, [r1, #-0]
    39a0:	00003f28 	andeq	r3, r0, r8, lsr #30
    39a4:	6b910200 	blvs	fe4441ac <_bss_end+0xfe4324bc>
    39a8:	01006920 	tsteq	r0, r0, lsr #18
    39ac:	003a126a 	eorseq	r1, sl, sl, ror #4
    39b0:	91020000 	mrsls	r0, (UNDEF: 2)
    39b4:	b3b42170 			; <UNDEFINED> instruction: 0xb3b42170
    39b8:	00f00000 	rscseq	r0, r0, r0
    39bc:	6a200000 	bvs	8039c4 <_bss_end+0x7f1cd4>
    39c0:	0e700100 	rpweqs	f0, f0, f0
    39c4:	00000033 	andeq	r0, r0, r3, lsr r0
    39c8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    39cc:	04c91e00 	strbeq	r1, [r9], #3584	; 0xe00
    39d0:	47010000 	strmi	r0, [r1, -r0]
    39d4:	0005f006 	andeq	pc, r5, r6
    39d8:	00b24800 	adcseq	r4, r2, r0, lsl #16
    39dc:	00012400 	andeq	r2, r1, r0, lsl #8
    39e0:	199c0100 	ldmibne	ip, {r8}
    39e4:	1f000006 	svcne	0x00000006
    39e8:	0000032c 	andeq	r0, r0, ip, lsr #6
    39ec:	00000511 	andeq	r0, r0, r1, lsl r5
    39f0:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    39f4:	00746962 	rsbseq	r6, r4, r2, ror #18
    39f8:	dc254701 	stcle	7, cr4, [r5], #-4
    39fc:	02000003 	andeq	r0, r0, #3
    3a00:	69206b91 	stmdbvs	r0!, {r0, r4, r7, r8, r9, fp, sp, lr}
    3a04:	124c0100 	subne	r0, ip, #0, 2
    3a08:	0000003a 	andeq	r0, r0, sl, lsr r0
    3a0c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3a10:	0004aa23 	andeq	sl, r4, r3, lsr #20
    3a14:	06420100 	strbeq	r0, [r2], -r0, lsl #2
    3a18:	00000633 	andeq	r0, r0, r3, lsr r6
    3a1c:	0000b220 	andeq	fp, r0, r0, lsr #4
    3a20:	00000028 	andeq	r0, r0, r8, lsr #32
    3a24:	06409c01 	strbeq	r9, [r0], -r1, lsl #24
    3a28:	2c1f0000 	ldccs	0, cr0, [pc], {-0}
    3a2c:	1c000003 	stcne	0, cr0, [r0], {3}
    3a30:	02000005 	andeq	r0, r0, #5
    3a34:	1e007491 	mcrne	4, 0, r7, cr0, cr1, {4}
    3a38:	0000048f 	andeq	r0, r0, pc, lsl #9
    3a3c:	5a063001 	bpl	18fa48 <_bss_end+0x17dd58>
    3a40:	48000006 	stmdami	r0, {r1, r2}
    3a44:	d80000b1 	stmdale	r0, {r0, r4, r5, r7}
    3a48:	01000000 	mrseq	r0, (UNDEF: 0)
    3a4c:	0006679c 	muleq	r6, ip, r7
    3a50:	032c1f00 			; <UNDEFINED> instruction: 0x032c1f00
    3a54:	05110000 	ldreq	r0, [r1, #-0]
    3a58:	91020000 	mrsls	r0, (UNDEF: 2)
    3a5c:	701e0074 	andsvc	r0, lr, r4, ror r0
    3a60:	01000004 	tsteq	r0, r4
    3a64:	0681060f 	streq	r0, [r1], pc, lsl #12
    3a68:	afd40000 	svcge	0x00d40000
    3a6c:	01740000 	cmneq	r4, r0
    3a70:	9c010000 	stcls	0, cr0, [r1], {-0}
    3a74:	0000068e 	andeq	r0, r0, lr, lsl #13
    3a78:	00032c1f 	andeq	r2, r3, pc, lsl ip
    3a7c:	00051100 	andeq	r1, r5, r0, lsl #2
    3a80:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3a84:	04422400 	strbeq	r2, [r2], #-1024	; 0xfffffc00
    3a88:	07010000 	streq	r0, [r1, -r0]
    3a8c:	00069f01 	andeq	r9, r6, r1, lsl #30
    3a90:	06cd0000 	strbeq	r0, [sp], r0
    3a94:	2c250000 	stccs	0, cr0, [r5], #-0
    3a98:	11000003 	tstne	r0, r3
    3a9c:	26000005 	strcs	r0, [r0], -r5
    3aa0:	00001709 	andeq	r1, r0, r9, lsl #14
    3aa4:	592b0701 	stmdbpl	fp!, {r0, r8, r9, sl}
    3aa8:	26000000 	strcs	r0, [r0], -r0
    3aac:	0000176c 	andeq	r1, r0, ip, ror #14
    3ab0:	593e0701 	ldmdbpl	lr!, {r0, r8, r9, sl}
    3ab4:	26000000 	strcs	r0, [r0], -r0
    3ab8:	00001700 	andeq	r1, r0, r0, lsl #14
    3abc:	59500701 	ldmdbpl	r0, {r0, r8, r9, sl}^
    3ac0:	00000000 	andeq	r0, r0, r0
    3ac4:	00068e27 	andeq	r8, r6, r7, lsr #28
    3ac8:	0016c100 	andseq	ip, r6, r0, lsl #2
    3acc:	0006e400 	andeq	lr, r6, r0, lsl #8
    3ad0:	00af8000 	adceq	r8, pc, r0
    3ad4:	00005400 	andeq	r5, r0, r0, lsl #8
    3ad8:	289c0100 	ldmcs	ip, {r8}
    3adc:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    3ae0:	28749102 	ldmdacs	r4!, {r1, r8, ip, pc}^
    3ae4:	000006a8 	andeq	r0, r0, r8, lsr #13
    3ae8:	28709102 	ldmdacs	r0!, {r1, r8, ip, pc}^
    3aec:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    3af0:	286c9102 	stmdacs	ip!, {r1, r8, ip, pc}^
    3af4:	000006c0 	andeq	r0, r0, r0, asr #13
    3af8:	00689102 	rsbeq	r9, r8, r2, lsl #2
    3afc:	0005a700 	andeq	sl, r5, r0, lsl #14
    3b00:	13000400 	movwne	r0, #1024	; 0x400
    3b04:	04000012 	streq	r0, [r0], #-18	; 0xffffffee
    3b08:	00001401 	andeq	r1, r0, r1, lsl #8
    3b0c:	19150400 	ldmdbne	r5, {sl}
    3b10:	00c50000 	sbceq	r0, r5, r0
    3b14:	b5440000 	strblt	r0, [r4, #-0]
    3b18:	02900000 	addseq	r0, r0, #0
    3b1c:	18490000 	stmdane	r9, {}^	; <UNPREDICTABLE>
    3b20:	01020000 	mrseq	r0, (UNDEF: 2)
    3b24:	00057308 	andeq	r7, r5, r8, lsl #6
    3b28:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    3b2c:	00000599 	muleq	r0, r9, r5
    3b30:	69050403 	stmdbvs	r5, {r0, r1, sl}
    3b34:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    3b38:	00000982 	andeq	r0, r0, r2, lsl #19
    3b3c:	46070702 	strmi	r0, [r7], -r2, lsl #14
    3b40:	02000000 	andeq	r0, r0, #0
    3b44:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    3b48:	98040000 	stmdals	r4, {}	; <UNPREDICTABLE>
    3b4c:	02000007 	andeq	r0, r0, #7
    3b50:	00590708 	subseq	r0, r9, r8, lsl #14
    3b54:	02020000 	andeq	r0, r2, #0
    3b58:	0003dc07 	andeq	sp, r3, r7, lsl #24
    3b5c:	05e40400 	strbeq	r0, [r4, #1024]!	; 0x400
    3b60:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3b64:	00007107 	andeq	r7, r0, r7, lsl #2
    3b68:	00600500 	rsbeq	r0, r0, r0, lsl #10
    3b6c:	04020000 	streq	r0, [r2], #-0
    3b70:	00459107 	subeq	r9, r5, r7, lsl #2
    3b74:	00710500 	rsbseq	r0, r1, r0, lsl #10
    3b78:	71060000 	mrsvc	r0, (UNDEF: 6)
    3b7c:	07000000 	streq	r0, [r0, -r0]
    3b80:	006c6168 	rsbeq	r6, ip, r8, ror #2
    3b84:	850b0503 	strhi	r0, [fp, #-1283]	; 0xfffffafd
    3b88:	08000001 	stmdaeq	r0, {r0}
    3b8c:	00000487 	andeq	r0, r0, r7, lsl #9
    3b90:	781c0703 	ldmdavc	ip, {r0, r1, r8, r9, sl}
    3b94:	80000000 	andhi	r0, r0, r0
    3b98:	080ee6b2 	stmdaeq	lr, {r1, r4, r5, r7, r9, sl, sp, lr, pc}
    3b9c:	000005cc 	andeq	r0, r0, ip, asr #11
    3ba0:	911d0a03 	tstls	sp, r3, lsl #20
    3ba4:	00000001 	andeq	r0, r0, r1
    3ba8:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    3bac:	00000452 	andeq	r0, r0, r2, asr r4
    3bb0:	911d0d03 	tstls	sp, r3, lsl #26
    3bb4:	00000001 	andeq	r0, r0, r1
    3bb8:	09202000 	stmdbeq	r0!, {sp}
    3bbc:	0000058a 	andeq	r0, r0, sl, lsl #11
    3bc0:	6c181003 	ldcvs	0, cr1, [r8], {3}
    3bc4:	36000000 	strcc	r0, [r0], -r0
    3bc8:	00037308 	andeq	r7, r3, r8, lsl #6
    3bcc:	1d420300 	stclne	3, cr0, [r2, #-0]
    3bd0:	00000191 	muleq	r0, r1, r1
    3bd4:	20215000 	eorcs	r5, r1, r0
    3bd8:	00034a08 	andeq	r4, r3, r8, lsl #20
    3bdc:	1d710300 	ldclne	3, cr0, [r1, #-0]
    3be0:	00000191 	muleq	r0, r1, r1
    3be4:	2000b200 	andcs	fp, r0, r0, lsl #4
    3be8:	0002b608 	andeq	fp, r2, r8, lsl #12
    3bec:	1da40300 	stcne	3, cr0, [r4]
    3bf0:	00000191 	muleq	r0, r1, r1
    3bf4:	2000b400 	andcs	fp, r0, r0, lsl #8
    3bf8:	0018d90a 	andseq	sp, r8, sl, lsl #18
    3bfc:	33040500 	movwcc	r0, #17664	; 0x4500
    3c00:	03000000 	movweq	r0, #0
    3c04:	014410a6 	smlaltbeq	r1, r4, r6, r0
    3c08:	780b0000 	stmdavc	fp, {}	; <UNPREDICTABLE>
    3c0c:	00000019 	andeq	r0, r0, r9, lsl r0
    3c10:	0018b50b 	andseq	fp, r8, fp, lsl #10
    3c14:	8a0b0100 	bhi	2c401c <_bss_end+0x2b232c>
    3c18:	02000035 	andeq	r0, r0, #53	; 0x35
    3c1c:	00189e0b 	andseq	r9, r8, fp, lsl #28
    3c20:	fc0b0300 	stc2	3, cr0, [fp], {-0}
    3c24:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3c28:	0017f00b 	andseq	pc, r7, fp
    3c2c:	dc0b0500 	cfstr32le	mvfx0, [fp], {-0}
    3c30:	06000017 			; <UNDEFINED> instruction: 0x06000017
    3c34:	0018cd0b 	andseq	ip, r8, fp, lsl #26
    3c38:	be0b0700 	cdplt	7, 0, cr0, cr11, cr0, {0}
    3c3c:	08000019 	stmdaeq	r0, {r0, r3, r4}
    3c40:	03640800 	cmneq	r4, #0, 16
    3c44:	b3030000 	movwlt	r0, #12288	; 0x3000
    3c48:	0001911d 	andeq	r9, r1, sp, lsl r1
    3c4c:	10400000 	subne	r0, r0, r0
    3c50:	03310820 	teqeq	r1, #32, 16	; 0x200000
    3c54:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    3c58:	0001911d 	andeq	r9, r1, sp, lsl r1
    3c5c:	20500000 	subscs	r0, r0, r0
    3c60:	03ef0820 	mvneq	r0, #32, 16	; 0x200000
    3c64:	bf030000 	svclt	0x00030000
    3c68:	0001911d 	andeq	r9, r1, sp, lsl r1
    3c6c:	80400000 	subhi	r0, r0, r0
    3c70:	045c0820 	ldrbeq	r0, [ip], #-2080	; 0xfffff7e0
    3c74:	c0030000 	andgt	r0, r3, r0
    3c78:	0001911d 	andeq	r9, r1, sp, lsl r1
    3c7c:	80500000 	subshi	r0, r0, r0
    3c80:	8e0c0020 	cdphi	0, 0, cr0, cr12, cr0, {1}
    3c84:	02000000 	andeq	r0, r0, #0
    3c88:	458c0704 	strmi	r0, [ip, #1796]	; 0x704
    3c8c:	8a050000 	bhi	143c94 <_bss_end+0x131fa4>
    3c90:	0c000001 	stceq	0, cr0, [r0], {1}
    3c94:	0000009e 	muleq	r0, lr, r0
    3c98:	0000ae0c 	andeq	sl, r0, ip, lsl #28
    3c9c:	00be0c00 	adcseq	r0, lr, r0, lsl #24
    3ca0:	cb0c0000 	blgt	303ca8 <_bss_end+0x2f1fb8>
    3ca4:	0c000000 	stceq	0, cr0, [r0], {-0}
    3ca8:	000000db 	ldrdeq	r0, [r0], -fp
    3cac:	0000eb0c 	andeq	lr, r0, ip, lsl #22
    3cb0:	01440c00 	cmpeq	r4, r0, lsl #24
    3cb4:	540c0000 	strpl	r0, [ip], #-0
    3cb8:	0c000001 	stceq	0, cr0, [r0], {1}
    3cbc:	00000164 	andeq	r0, r0, r4, ror #2
    3cc0:	0001740c 	andeq	r7, r1, ip, lsl #8
    3cc4:	18620a00 	stmdane	r2!, {r9, fp}^
    3cc8:	01070000 	mrseq	r0, (UNDEF: 7)
    3ccc:	0000003a 	andeq	r0, r0, sl, lsr r0
    3cd0:	ed0c0604 	stc	6, cr0, [ip, #-16]
    3cd4:	0b000001 	bleq	3ce0 <CPSR_IRQ_INHIBIT+0x3c60>
    3cd8:	000019cb 	andeq	r1, r0, fp, asr #19
    3cdc:	18a80b00 	stmiane	r8!, {r8, r9, fp}
    3ce0:	0b010000 	bleq	43ce8 <_bss_end+0x31ff8>
    3ce4:	0000183a 	andeq	r1, r0, sl, lsr r8
    3ce8:	a80d0002 	stmdage	sp, {r1}
    3cec:	08000019 	stmdaeq	r0, {r0, r3, r4}
    3cf0:	e5070d04 	str	r0, [r7, #-3332]	; 0xfffff2fc
    3cf4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3cf8:	00001774 	andeq	r1, r0, r4, ror r7
    3cfc:	e51c1504 	ldr	r1, [ip, #-1284]	; 0xfffffafc
    3d00:	00000002 	andeq	r0, r0, r2
    3d04:	0019ec0f 	andseq	lr, r9, pc, lsl #24
    3d08:	0b110400 	bleq	444d10 <_bss_end+0x433020>
    3d0c:	000002eb 	andeq	r0, r0, fp, ror #5
    3d10:	197d0e01 	ldmdbne	sp!, {r0, r9, sl, fp}^
    3d14:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    3d18:	00020715 	andeq	r0, r2, r5, lsl r7
    3d1c:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    3d20:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    3d24:	19871c1b 	stmibne	r7, {r0, r1, r3, r4, sl, fp, ip}
    3d28:	02f20000 	rscseq	r0, r2, #0
    3d2c:	3a020000 	bcc	83d34 <_bss_end+0x72044>
    3d30:	45000002 	strmi	r0, [r0, #-2]
    3d34:	11000002 	tstne	r0, r2
    3d38:	000002f8 	strdeq	r0, [r0], -r8
    3d3c:	0000fb12 	andeq	pc, r0, r2, lsl fp	; <UNPREDICTABLE>
    3d40:	a8100000 	ldmdage	r0, {}	; <UNPREDICTABLE>
    3d44:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3d48:	19af051e 	stmibne	pc!, {r1, r2, r3, r4, r8, sl}	; <UNPREDICTABLE>
    3d4c:	02f80000 	rscseq	r0, r8, #0
    3d50:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    3d54:	69000002 	stmdbvs	r0, {r1}
    3d58:	11000002 	tstne	r0, r2
    3d5c:	000002f8 	strdeq	r0, [r0], -r8
    3d60:	00018a12 	andeq	r8, r1, r2, lsl sl
    3d64:	e8130000 	ldmda	r3, {}	; <UNPREDICTABLE>
    3d68:	04000035 	streq	r0, [r0], #-53	; 0xffffffcb
    3d6c:	18480522 	stmdane	r8, {r1, r5, r8, sl}^
    3d70:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    3d74:	93000002 	movwls	r0, #2
    3d78:	11000002 	tstne	r0, r2
    3d7c:	000002f8 	strdeq	r0, [r0], -r8
    3d80:	00020712 	andeq	r0, r2, r2, lsl r7
    3d84:	00711200 	rsbseq	r1, r1, r0, lsl #4
    3d88:	c8120000 	ldmdagt	r2, {}	; <UNPREDICTABLE>
    3d8c:	00000001 	andeq	r0, r0, r1
    3d90:	0033f413 	eorseq	pc, r3, r3, lsl r4	; <UNPREDICTABLE>
    3d94:	0a240400 	beq	904d9c <_bss_end+0x8f30ac>
    3d98:	000018e3 	andeq	r1, r0, r3, ror #17
    3d9c:	0002a801 	andeq	sl, r2, r1, lsl #16
    3da0:	0002ae00 	andeq	sl, r2, r0, lsl #28
    3da4:	02f81100 	rscseq	r1, r8, #0, 2
    3da8:	13000000 	movwne	r0, #0
    3dac:	000017e3 	andeq	r1, r0, r3, ror #15
    3db0:	040a2704 	streq	r2, [sl], #-1796	; 0xfffff8fc
    3db4:	0100001a 	tsteq	r0, sl, lsl r0
    3db8:	000002c3 	andeq	r0, r0, r3, asr #5
    3dbc:	000002c9 	andeq	r0, r0, r9, asr #5
    3dc0:	0002f811 	andeq	pc, r2, r1, lsl r8	; <UNPREDICTABLE>
    3dc4:	d7140000 	ldrle	r0, [r4, -r0]
    3dc8:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3dcc:	17960a29 	ldrne	r0, [r6, r9, lsr #20]
    3dd0:	03030000 	movweq	r0, #12288	; 0x3000
    3dd4:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    3dd8:	11000002 	tstne	r0, r2
    3ddc:	000002f8 	strdeq	r0, [r0], -r8
    3de0:	04150000 	ldreq	r0, [r5], #-0
    3de4:	0000007d 	andeq	r0, r0, sp, ror r0
    3de8:	02f10415 	rscseq	r0, r1, #352321536	; 0x15000000
    3dec:	17160000 	ldrne	r0, [r6, -r0]
    3df0:	00007d04 	andeq	r7, r0, r4, lsl #26
    3df4:	ed041500 	cfstr32	mvfx1, [r4, #-0]
    3df8:	05000001 	streq	r0, [r0, #-1]
    3dfc:	000002f8 	strdeq	r0, [r0], -r8
    3e00:	48020102 	stmdami	r2, {r1, r8}
    3e04:	18000045 	stmdane	r0, {r0, r2, r6}
    3e08:	0000178f 	andeq	r1, r0, pc, lsl #15
    3e0c:	ed0f2c04 	stc	12, cr2, [pc, #-16]	; 3e04 <CPSR_IRQ_INHIBIT+0x3d84>
    3e10:	19000001 	stmdbne	r0, {r0}
    3e14:	0000030a 	andeq	r0, r0, sl, lsl #6
    3e18:	05080401 	streq	r0, [r8, #-1025]	; 0xfffffbff
    3e1c:	010c2403 	tsteq	ip, r3, lsl #8
    3e20:	19671a00 	stmdbne	r7!, {r9, fp, ip}^
    3e24:	01060000 	mrseq	r0, (UNDEF: 6)
    3e28:	03f20808 	mvnseq	r0, #8, 16	; 0x80000
    3e2c:	011b0000 	tsteq	fp, r0
    3e30:	01000018 	tsteq	r0, r8, lsl r0
    3e34:	003a0d0a 	eorseq	r0, sl, sl, lsl #26
    3e38:	01010000 	mrseq	r0, (UNDEF: 1)
    3e3c:	2e1b0007 	cdpcs	0, 1, cr0, cr11, cr7, {0}
    3e40:	01000018 	tsteq	r0, r8, lsl r0
    3e44:	003a0d0b 	eorseq	r0, sl, fp, lsl #26
    3e48:	01010000 	mrseq	r0, (UNDEF: 1)
    3e4c:	801b0006 	andshi	r0, fp, r6
    3e50:	01000018 	tsteq	r0, r8, lsl r0
    3e54:	003a0d0c 	eorseq	r0, sl, ip, lsl #26
    3e58:	02010000 	andeq	r0, r1, #0
    3e5c:	0a1b0004 	beq	6c3e74 <_bss_end+0x6b2184>
    3e60:	01000018 	tsteq	r0, r8, lsl r0
    3e64:	003a0d0d 	eorseq	r0, sl, sp, lsl #26
    3e68:	01010000 	mrseq	r0, (UNDEF: 1)
    3e6c:	bb1b0003 	bllt	6c3e80 <_bss_end+0x6b2190>
    3e70:	01000018 	tsteq	r0, r8, lsl r0
    3e74:	003a0d0e 	eorseq	r0, sl, lr, lsl #26
    3e78:	01010000 	mrseq	r0, (UNDEF: 1)
    3e7c:	131b0002 	tstne	fp, #2
    3e80:	01000018 	tsteq	r0, r8, lsl r0
    3e84:	003a0d0f 	eorseq	r0, sl, pc, lsl #26
    3e88:	01010000 	mrseq	r0, (UNDEF: 1)
    3e8c:	071b0001 	ldreq	r0, [fp, -r1]
    3e90:	01000019 	tsteq	r0, r9, lsl r0
    3e94:	003a0d10 	eorseq	r0, sl, r0, lsl sp
    3e98:	01010000 	mrseq	r0, (UNDEF: 1)
    3e9c:	b91b0000 	ldmdblt	fp, {}	; <UNPREDICTABLE>
    3ea0:	01000017 	tsteq	r0, r7, lsl r0
    3ea4:	003a0d11 	eorseq	r0, sl, r1, lsl sp
    3ea8:	01010000 	mrseq	r0, (UNDEF: 1)
    3eac:	8a1b0107 	bhi	6c42d0 <_bss_end+0x6b25e0>
    3eb0:	01000018 	tsteq	r0, r8, lsl r0
    3eb4:	003a0d12 	eorseq	r0, sl, r2, lsl sp
    3eb8:	01010000 	mrseq	r0, (UNDEF: 1)
    3ebc:	1c1c0106 	ldfnes	f0, [ip], {6}
    3ec0:	01000018 	tsteq	r0, r8, lsl r0
    3ec4:	004d0e13 	subeq	r0, sp, r3, lsl lr
    3ec8:	0a020000 	beq	83ed0 <_bss_end+0x721e0>
    3ecc:	731c007c 	tstvc	ip, #124	; 0x7c
    3ed0:	01000018 	tsteq	r0, r8, lsl r0
    3ed4:	004d0e14 	subeq	r0, sp, r4, lsl lr
    3ed8:	10020000 	andne	r0, r2, r0
    3edc:	251b027c 	ldrcs	r0, [fp, #-636]	; 0xfffffd84
    3ee0:	01000018 	tsteq	r0, r8, lsl r0
    3ee4:	004d0e15 	subeq	r0, sp, r5, lsl lr
    3ee8:	0a020000 	beq	83ef0 <_bss_end+0x72200>
    3eec:	06000402 	streq	r0, [r0], -r2, lsl #8
    3ef0:	00000324 	andeq	r0, r0, r4, lsr #6
    3ef4:	0017801d 	andseq	r8, r7, sp, lsl r0
    3ef8:	00b7b800 	adcseq	fp, r7, r0, lsl #16
    3efc:	00001c00 	andeq	r1, r0, r0, lsl #24
    3f00:	1e9c0100 	fmlnee	f0, f4, f0
    3f04:	00000241 	andeq	r0, r0, r1, asr #4
    3f08:	0000b764 	andeq	fp, r0, r4, ror #14
    3f0c:	00000054 	andeq	r0, r0, r4, asr r0
    3f10:	04389c01 	ldrteq	r9, [r8], #-3073	; 0xfffff3ff
    3f14:	3b1f0000 	blcc	7c3f1c <_bss_end+0x7b222c>
    3f18:	01000003 	tsteq	r0, r3
    3f1c:	0033014a 	eorseq	r0, r3, sl, asr #2
    3f20:	91020000 	mrsls	r0, (UNDEF: 2)
    3f24:	07341f74 			; <UNDEFINED> instruction: 0x07341f74
    3f28:	4a010000 	bmi	43f30 <_bss_end+0x32240>
    3f2c:	00003301 	andeq	r3, r0, r1, lsl #6
    3f30:	70910200 	addsvc	r0, r1, r0, lsl #4
    3f34:	02c92000 	sbceq	r2, r9, #0
    3f38:	47010000 	strmi	r0, [r1, -r0]
    3f3c:	00045206 	andeq	r5, r4, r6, lsl #4
    3f40:	00b72400 	adcseq	r2, r7, r0, lsl #8
    3f44:	00004000 	andeq	r4, r0, r0
    3f48:	5f9c0100 	svcpl	0x009c0100
    3f4c:	21000004 	tstcs	r0, r4
    3f50:	0000032c 	andeq	r0, r0, ip, lsr #6
    3f54:	000002fe 	strdeq	r0, [r0], -lr
    3f58:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3f5c:	0002ae20 	andeq	sl, r2, r0, lsr #28
    3f60:	063f0100 	ldrteq	r0, [pc], -r0, lsl #2
    3f64:	00000479 	andeq	r0, r0, r9, ror r4
    3f68:	0000b6d4 	ldrdeq	fp, [r0], -r4
    3f6c:	00000050 	andeq	r0, r0, r0, asr r0
    3f70:	04869c01 	streq	r9, [r6], #3073	; 0xc01
    3f74:	2c210000 	stccs	0, cr0, [r1], #-0
    3f78:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
    3f7c:	02000002 	andeq	r0, r0, #2
    3f80:	20007491 	mulcs	r0, r1, r4
    3f84:	00000293 	muleq	r0, r3, r2
    3f88:	a0063701 	andge	r3, r6, r1, lsl #14
    3f8c:	88000004 	stmdahi	r0, {r2}
    3f90:	4c0000b6 	stcmi	0, cr0, [r0], {182}	; 0xb6
    3f94:	01000000 	mrseq	r0, (UNDEF: 0)
    3f98:	0004bc9c 	muleq	r4, ip, ip
    3f9c:	032c2100 			; <UNDEFINED> instruction: 0x032c2100
    3fa0:	02fe0000 	rscseq	r0, lr, #0
    3fa4:	91020000 	mrsls	r0, (UNDEF: 2)
    3fa8:	6572226c 	ldrbvs	r2, [r2, #-620]!	; 0xfffffd94
    3fac:	39010067 	stmdbcc	r1, {r0, r1, r2, r5, r6}
    3fb0:	0004bc20 	andeq	fp, r4, r0, lsr #24
    3fb4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3fb8:	f2041700 	vabd.s8	d1, d4, d0
    3fbc:	20000003 	andcs	r0, r0, r3
    3fc0:	00000269 	andeq	r0, r0, r9, ror #4
    3fc4:	dc062601 	stcle	6, cr2, [r6], {1}
    3fc8:	bc000004 	stclt	0, cr0, [r0], {4}
    3fcc:	cc0000b5 	stcgt	0, cr0, [r0], {181}	; 0xb5
    3fd0:	01000000 	mrseq	r0, (UNDEF: 0)
    3fd4:	0005259c 	muleq	r5, ip, r5
    3fd8:	032c2100 			; <UNDEFINED> instruction: 0x032c2100
    3fdc:	02fe0000 	rscseq	r0, lr, #0
    3fe0:	91020000 	mrsls	r0, (UNDEF: 2)
    3fe4:	1a1f1f64 	bne	7cbd7c <_bss_end+0x7ba08c>
    3fe8:	26010000 	strcs	r0, [r1], -r0
    3fec:	00020725 	andeq	r0, r2, r5, lsr #14
    3ff0:	60910200 	addsvs	r0, r1, r0, lsl #4
    3ff4:	0017fb1f 	andseq	pc, r7, pc, lsl fp	; <UNPREDICTABLE>
    3ff8:	3c260100 	stfccs	f0, [r6], #-0
    3ffc:	00000071 	andeq	r0, r0, r1, ror r0
    4000:	1f5c9102 	svcne	0x005c9102
    4004:	00001880 	andeq	r1, r0, r0, lsl #17
    4008:	c8542601 	ldmdagt	r4, {r0, r9, sl, sp}^
    400c:	02000001 	andeq	r0, r0, #1
    4010:	72225b91 	eorvc	r5, r2, #148480	; 0x24400
    4014:	01006765 	tsteq	r0, r5, ror #14
    4018:	0324162a 			; <UNDEFINED> instruction: 0x0324162a
    401c:	91020000 	mrsls	r0, (UNDEF: 2)
    4020:	21230068 			; <UNDEFINED> instruction: 0x21230068
    4024:	01000002 	tsteq	r0, r2
    4028:	053f1821 	ldreq	r1, [pc, #-2081]!	; 380f <CPSR_IRQ_INHIBIT+0x378f>
    402c:	b5840000 	strlt	r0, [r4]
    4030:	00380000 	eorseq	r0, r8, r0
    4034:	9c010000 	stcls	0, cr0, [r1], {-0}
    4038:	0000055b 	andeq	r0, r0, fp, asr r5
    403c:	00032c21 	andeq	r2, r3, r1, lsr #24
    4040:	0002fe00 	andeq	pc, r2, r0, lsl #28
    4044:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4048:	67657224 	strbvs	r7, [r5, -r4, lsr #4]!
    404c:	34210100 	strtcc	r0, [r1], #-256	; 0xffffff00
    4050:	000000fb 	strdeq	r0, [r0], -fp
    4054:	00709102 	rsbseq	r9, r0, r2, lsl #2
    4058:	00024525 	andeq	r4, r2, r5, lsr #10
    405c:	011a0100 	tsteq	sl, r0, lsl #2
    4060:	0000056c 	andeq	r0, r0, ip, ror #10
    4064:	00058200 	andeq	r8, r5, r0, lsl #4
    4068:	032c2600 			; <UNDEFINED> instruction: 0x032c2600
    406c:	02fe0000 	rscseq	r0, lr, #0
    4070:	f8270000 			; <UNDEFINED> instruction: 0xf8270000
    4074:	01000018 	tsteq	r0, r8, lsl r0
    4078:	018a1e1a 	orreq	r1, sl, sl, lsl lr
    407c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    4080:	0000055b 	andeq	r0, r0, fp, asr r5
    4084:	000017cd 	andeq	r1, r0, sp, asr #15
    4088:	00000599 	muleq	r0, r9, r5
    408c:	0000b544 	andeq	fp, r0, r4, asr #10
    4090:	00000040 	andeq	r0, r0, r0, asr #32
    4094:	6c299c01 	stcvs	12, cr9, [r9], #-4
    4098:	02000005 	andeq	r0, r0, #5
    409c:	75297491 	strvc	r7, [r9, #-1169]!	; 0xfffffb6f
    40a0:	02000005 	andeq	r0, r0, #5
    40a4:	00007091 	muleq	r0, r1, r0
    40a8:	000003e8 	andeq	r0, r0, r8, ror #7
    40ac:	14a60004 	strtne	r0, [r6], #4
    40b0:	01040000 	mrseq	r0, (UNDEF: 4)
    40b4:	00000014 	andeq	r0, r0, r4, lsl r0
    40b8:	001a7704 	andseq	r7, sl, r4, lsl #14
    40bc:	0000c500 	andeq	ip, r0, r0, lsl #10
    40c0:	00b7d400 	adcseq	sp, r7, r0, lsl #8
    40c4:	00028000 	andeq	r8, r2, r0
    40c8:	001a1c00 	andseq	r1, sl, r0, lsl #24
    40cc:	08010200 	stmdaeq	r1, {r9}
    40d0:	00000573 	andeq	r0, r0, r3, ror r5
    40d4:	99050202 	stmdbls	r5, {r1, r9}
    40d8:	03000005 	movweq	r0, #5
    40dc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    40e0:	01020074 	tsteq	r2, r4, ror r0
    40e4:	00056a08 	andeq	r6, r5, r8, lsl #20
    40e8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    40ec:	000003dc 	ldrdeq	r0, [r0], -ip
    40f0:	0005e404 	andeq	lr, r5, r4, lsl #8
    40f4:	07090400 	streq	r0, [r9, -r0, lsl #8]
    40f8:	00000059 	andeq	r0, r0, r9, asr r0
    40fc:	00004805 	andeq	r4, r0, r5, lsl #16
    4100:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4104:	00004591 	muleq	r0, r1, r5
    4108:	00005905 	andeq	r5, r0, r5, lsl #18
    410c:	00590600 	subseq	r0, r9, r0, lsl #12
    4110:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    4114:	02006c61 	andeq	r6, r0, #24832	; 0x6100
    4118:	014f0b05 	cmpeq	pc, r5, lsl #22
    411c:	87080000 	strhi	r0, [r8, -r0]
    4120:	02000004 	andeq	r0, r0, #4
    4124:	00601c07 	rsbeq	r1, r0, r7, lsl #24
    4128:	b2800000 	addlt	r0, r0, #0
    412c:	cc080ee6 	stcgt	14, cr0, [r8], {230}	; 0xe6
    4130:	02000005 	andeq	r0, r0, #5
    4134:	015b1d0a 	cmpeq	fp, sl, lsl #26
    4138:	00000000 	andeq	r0, r0, r0
    413c:	52082000 	andpl	r2, r8, #0
    4140:	02000004 	andeq	r0, r0, #4
    4144:	015b1d0d 	cmpeq	fp, sp, lsl #26
    4148:	00000000 	andeq	r0, r0, r0
    414c:	8a092020 	bhi	24c1d4 <_bss_end+0x23a4e4>
    4150:	02000005 	andeq	r0, r0, #5
    4154:	00541810 	subseq	r1, r4, r0, lsl r8
    4158:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    415c:	00000373 	andeq	r0, r0, r3, ror r3
    4160:	5b1d4202 	blpl	754970 <_bss_end+0x742c80>
    4164:	00000001 	andeq	r0, r0, r1
    4168:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    416c:	0000034a 	andeq	r0, r0, sl, asr #6
    4170:	5b1d7102 	blpl	760580 <_bss_end+0x74e890>
    4174:	00000001 	andeq	r0, r0, r1
    4178:	082000b2 	stmdaeq	r0!, {r1, r4, r5, r7}
    417c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    4180:	5b1da402 	blpl	76d190 <_bss_end+0x75b4a0>
    4184:	00000001 	andeq	r0, r0, r1
    4188:	082000b4 	stmdaeq	r0!, {r2, r4, r5, r7}
    418c:	00000364 	andeq	r0, r0, r4, ror #6
    4190:	5b1db302 	blpl	770da0 <_bss_end+0x75f0b0>
    4194:	00000001 	andeq	r0, r0, r1
    4198:	0a201040 	beq	8082a0 <_bss_end+0x7f65b0>
    419c:	00001b5e 	andeq	r1, r0, lr, asr fp
    41a0:	00330405 	eorseq	r0, r3, r5, lsl #8
    41a4:	b5020000 	strlt	r0, [r2, #-0]
    41a8:	00011e10 	andeq	r1, r1, r0, lsl lr
    41ac:	358a0b00 	strcc	r0, [sl, #2816]	; 0xb00
    41b0:	0b000000 	bleq	41b8 <CPSR_IRQ_INHIBIT+0x4138>
    41b4:	00000a0c 	andeq	r0, r0, ip, lsl #20
    41b8:	1ac80b01 	bne	ff206dc4 <_bss_end+0xff1f50d4>
    41bc:	0b020000 	bleq	841c4 <_bss_end+0x724d4>
    41c0:	00001a6e 	andeq	r1, r0, lr, ror #20
    41c4:	31080004 	tstcc	r8, r4
    41c8:	02000003 	andeq	r0, r0, #3
    41cc:	015b1dbe 	ldrheq	r1, [fp, #-222]	; 0xffffff22
    41d0:	50000000 	andpl	r0, r0, r0
    41d4:	ef082020 	svc	0x00082020
    41d8:	02000003 	andeq	r0, r0, #3
    41dc:	015b1dbf 	ldrheq	r1, [fp, #-223]	; 0xffffff21
    41e0:	40000000 	andmi	r0, r0, r0
    41e4:	5c082080 	stcpl	0, cr2, [r8], {128}	; 0x80
    41e8:	02000004 	andeq	r0, r0, #4
    41ec:	015b1dc0 	cmpeq	fp, r0, asr #27
    41f0:	50000000 	andpl	r0, r0, r0
    41f4:	0c002080 	stceq	0, cr2, [r0], {128}	; 0x80
    41f8:	00000076 	andeq	r0, r0, r6, ror r0
    41fc:	8c070402 	cfstrshi	mvf0, [r7], {2}
    4200:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    4204:	00000154 	andeq	r0, r0, r4, asr r1
    4208:	0000860c 	andeq	r8, r0, ip, lsl #12
    420c:	00960c00 	addseq	r0, r6, r0, lsl #24
    4210:	a60c0000 	strge	r0, [ip], -r0
    4214:	0c000000 	stceq	0, cr0, [r0], {-0}
    4218:	000000b3 	strheq	r0, [r0], -r3
    421c:	0000c30c 	andeq	ip, r0, ip, lsl #6
    4220:	00d30c00 	sbcseq	r0, r3, r0, lsl #24
    4224:	e30c0000 	movw	r0, #49152	; 0xc000
    4228:	0c000000 	stceq	0, cr0, [r0], {-0}
    422c:	0000011e 	andeq	r0, r0, lr, lsl r1
    4230:	00012e0c 	andeq	r2, r1, ip, lsl #28
    4234:	013e0c00 	teqeq	lr, r0, lsl #24
    4238:	430d0000 	movwmi	r0, #53248	; 0xd000
    423c:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    4240:	57070603 	strpl	r0, [r7, -r3, lsl #12]
    4244:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    4248:	00001a28 	andeq	r1, r0, r8, lsr #20
    424c:	62220a03 	eorvs	r0, r2, #12288	; 0x3000
    4250:	00000002 	andeq	r0, r0, r2
    4254:	0007650e 	andeq	r6, r7, lr, lsl #10
    4258:	0e0e0300 	cdpeq	3, 0, cr0, cr14, cr0, {0}
    425c:	00000048 	andeq	r0, r0, r8, asr #32
    4260:	1b430f04 	blne	10c7e78 <_bss_end+0x10b6188>
    4264:	11030000 	mrsne	r0, (UNDEF: 3)
    4268:	001b1505 	andseq	r1, fp, r5, lsl #10
    426c:	00026700 	andeq	r6, r2, r0, lsl #14
    4270:	01d20100 	bicseq	r0, r2, r0, lsl #2
    4274:	01dd0000 	bicseq	r0, sp, r0
    4278:	67100000 	ldrvs	r0, [r0, -r0]
    427c:	11000002 	tstne	r0, r2
    4280:	00000048 	andeq	r0, r0, r8, asr #32
    4284:	0a200f00 	beq	807e8c <_bss_end+0x7f619c>
    4288:	14030000 	strne	r0, [r3], #-0
    428c:	001acd0a 	andseq	ip, sl, sl, lsl #26
    4290:	00027200 	andeq	r7, r2, r0, lsl #4
    4294:	01f60100 	mvnseq	r0, r0, lsl #2
    4298:	02010000 	andeq	r0, r1, #0
    429c:	67100000 	ldrvs	r0, [r0, -r0]
    42a0:	11000002 	tstne	r0, r2
    42a4:	00000272 	andeq	r0, r0, r2, ror r2
    42a8:	09ad1200 	stmibeq	sp!, {r9, ip}
    42ac:	16030000 	strne	r0, [r3], -r0
    42b0:	001b230a 	andseq	r2, fp, sl, lsl #6
    42b4:	02160100 	andseq	r0, r6, #0, 2
    42b8:	021c0000 	andseq	r0, ip, #0
    42bc:	67100000 	ldrvs	r0, [r0, -r0]
    42c0:	00000002 	andeq	r0, r0, r2
    42c4:	00073f0f 	andeq	r3, r7, pc, lsl #30
    42c8:	0a180300 	beq	604ed0 <_bss_end+0x5f31e0>
    42cc:	00001ade 	ldrdeq	r1, [r0], -lr
    42d0:	00000272 	andeq	r0, r0, r2, ror r2
    42d4:	00023501 	andeq	r3, r2, r1, lsl #10
    42d8:	00023b00 	andeq	r3, r2, r0, lsl #22
    42dc:	02791000 	rsbseq	r1, r9, #0
    42e0:	13000000 	movwne	r0, #0
    42e4:	00001b03 	andeq	r1, r0, r3, lsl #22
    42e8:	3d0e1b03 	vstrcc	d1, [lr, #-12]
    42ec:	4800001a 	stmdami	r0, {r1, r3, r4}
    42f0:	01000000 	mrseq	r0, (UNDEF: 0)
    42f4:	00000250 	andeq	r0, r0, r0, asr r2
    42f8:	00026710 	andeq	r6, r2, r0, lsl r7
    42fc:	05000000 	streq	r0, [r0, #-0]
    4300:	00000192 	muleq	r0, r2, r1
    4304:	00650414 	rsbeq	r0, r5, r4, lsl r4
    4308:	5c050000 	stcpl	0, cr0, [r5], {-0}
    430c:	14000002 	strne	r0, [r0], #-2
    4310:	00019204 	andeq	r9, r1, r4, lsl #4
    4314:	02670500 	rsbeq	r0, r7, #0, 10
    4318:	01020000 	mrseq	r0, (UNDEF: 2)
    431c:	00454802 	subeq	r4, r5, r2, lsl #16
    4320:	57041400 	strpl	r1, [r4, -r0, lsl #8]
    4324:	05000002 	streq	r0, [r0, #-2]
    4328:	00000279 	andeq	r0, r0, r9, ror r2
    432c:	001b5815 	andseq	r5, fp, r5, lsl r8
    4330:	0e1e0300 	cdpeq	3, 1, cr0, cr14, cr0, {0}
    4334:	00000192 	muleq	r0, r2, r1
    4338:	00028416 	andeq	r8, r2, r6, lsl r4
    433c:	07030100 	streq	r0, [r3, -r0, lsl #2]
    4340:	0c2c0305 	stceq	3, cr0, [ip], #-20	; 0xffffffec
    4344:	5c170001 	ldcpl	0, cr0, [r7], {1}
    4348:	0100001a 	tsteq	r0, sl, lsl r0
    434c:	00541406 	subseq	r1, r4, r6, lsl #8
    4350:	03050000 	movweq	r0, #20480	; 0x5000
    4354:	000101c8 	andeq	r0, r1, r8, asr #3
    4358:	001b4918 	andseq	r4, fp, r8, lsl r9
    435c:	00ba3800 	adcseq	r3, sl, r0, lsl #16
    4360:	00001c00 	andeq	r1, r0, r0, lsl #24
    4364:	199c0100 	ldmibne	ip, {r8}
    4368:	00000241 	andeq	r0, r0, r1, asr #4
    436c:	0000b9e4 	andeq	fp, r0, r4, ror #19
    4370:	00000054 	andeq	r0, r0, r4, asr r0
    4374:	02f19c01 	rscseq	r9, r1, #256	; 0x100
    4378:	3b1a0000 	blcc	684380 <_bss_end+0x672690>
    437c:	01000003 	tsteq	r0, r3
    4380:	0033013e 	eorseq	r0, r3, lr, lsr r1
    4384:	91020000 	mrsls	r0, (UNDEF: 2)
    4388:	07341a74 			; <UNDEFINED> instruction: 0x07341a74
    438c:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    4390:	00003301 	andeq	r3, r0, r1, lsl #6
    4394:	70910200 	addsvc	r0, r1, r0, lsl #4
    4398:	023b1b00 	eorseq	r1, fp, #0, 22
    439c:	34010000 	strcc	r0, [r1], #-0
    43a0:	00030b0a 	andeq	r0, r3, sl, lsl #22
    43a4:	00b99c00 	adcseq	r9, r9, r0, lsl #24
    43a8:	00004800 	andeq	r4, r0, r0, lsl #16
    43ac:	189c0100 	ldmne	ip, {r8}
    43b0:	1c000003 	stcne	0, cr0, [r0], {3}
    43b4:	0000032c 	andeq	r0, r0, ip, lsr #6
    43b8:	0000026d 	andeq	r0, r0, sp, ror #4
    43bc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    43c0:	00021c1b 	andeq	r1, r2, fp, lsl ip
    43c4:	062f0100 	strteq	r0, [pc], -r0, lsl #2
    43c8:	00000332 	andeq	r0, r0, r2, lsr r3
    43cc:	0000b964 	andeq	fp, r0, r4, ror #18
    43d0:	00000038 	andeq	r0, r0, r8, lsr r0
    43d4:	033f9c01 	teqeq	pc, #256	; 0x100
    43d8:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    43dc:	7f000003 	svcvc	0x00000003
    43e0:	02000002 	andeq	r0, r0, #2
    43e4:	1b007491 	blne	21630 <_bss_end+0xf940>
    43e8:	00000201 	andeq	r0, r0, r1, lsl #4
    43ec:	59062401 	stmdbpl	r6, {r0, sl, sp}
    43f0:	fc000003 	stc2	0, cr0, [r0], {3}
    43f4:	680000b8 	stmdavs	r0, {r3, r4, r5, r7}
    43f8:	01000000 	mrseq	r0, (UNDEF: 0)
    43fc:	0003669c 	muleq	r3, ip, r6
    4400:	032c1c00 			; <UNDEFINED> instruction: 0x032c1c00
    4404:	026d0000 	rsbeq	r0, sp, #0
    4408:	91020000 	mrsls	r0, (UNDEF: 2)
    440c:	dd1b0074 	ldcle	0, cr0, [fp, #-464]	; 0xfffffe30
    4410:	01000001 	tsteq	r0, r1
    4414:	0380060f 	orreq	r0, r0, #15728640	; 0xf00000
    4418:	b8140000 	ldmdalt	r4, {}	; <UNPREDICTABLE>
    441c:	00e80000 	rsceq	r0, r8, r0
    4420:	9c010000 	stcls	0, cr0, [r1], {-0}
    4424:	0000039c 	muleq	r0, ip, r3
    4428:	00032c1c 	andeq	r2, r3, ip, lsl ip
    442c:	00026d00 	andeq	r6, r2, r0, lsl #26
    4430:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4434:	001a331a 	andseq	r3, sl, sl, lsl r3
    4438:	170f0100 	strne	r0, [pc, -r0, lsl #2]
    443c:	00000272 	andeq	r0, r0, r2, ror r2
    4440:	00739102 	rsbseq	r9, r3, r2, lsl #2
    4444:	0001b91d 	andeq	fp, r1, sp, lsl r9
    4448:	01080100 	mrseq	r0, (UNDEF: 24)
    444c:	000003ad 	andeq	r0, r0, sp, lsr #7
    4450:	0003c300 	andeq	ip, r3, r0, lsl #6
    4454:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
    4458:	026d0000 	rsbeq	r0, sp, #0
    445c:	f51f0000 			; <UNDEFINED> instruction: 0xf51f0000
    4460:	0100001a 	tsteq	r0, sl, lsl r0
    4464:	00481708 	subeq	r1, r8, r8, lsl #14
    4468:	20000000 	andcs	r0, r0, r0
    446c:	0000039c 	muleq	r0, ip, r3
    4470:	00001b35 	andeq	r1, r0, r5, lsr fp
    4474:	000003da 	ldrdeq	r0, [r0], -sl
    4478:	0000b7d4 	ldrdeq	fp, [r0], -r4
    447c:	00000040 	andeq	r0, r0, r0, asr #32
    4480:	ad219c01 	stcge	12, cr9, [r1, #-4]!
    4484:	02000003 	andeq	r0, r0, #3
    4488:	b6217491 			; <UNDEFINED> instruction: 0xb6217491
    448c:	02000003 	andeq	r0, r0, #3
    4490:	00007091 	muleq	r0, r1, r0
    4494:	000008ae 	andeq	r0, r0, lr, lsr #17
    4498:	16b20004 	ldrtne	r0, [r2], r4
    449c:	01040000 	mrseq	r0, (UNDEF: 4)
    44a0:	00000014 	andeq	r0, r0, r4, lsl r0
    44a4:	001d4104 	andseq	r4, sp, r4, lsl #2
    44a8:	0000c500 	andeq	ip, r0, r0, lsl #10
    44ac:	0000c000 	andeq	ip, r0, r0
    44b0:	00000000 	andeq	r0, r0, r0
    44b4:	001c0a00 	andseq	r0, ip, r0, lsl #20
    44b8:	08010200 	stmdaeq	r1, {r9}
    44bc:	00000573 	andeq	r0, r0, r3, ror r5
    44c0:	00002503 	andeq	r2, r0, r3, lsl #10
    44c4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    44c8:	00000599 	muleq	r0, r9, r5
    44cc:	69050404 	stmdbvs	r5, {r2, sl}
    44d0:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    44d4:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    44d8:	3f050000 	svccc	0x00050000
    44dc:	02000000 	andeq	r0, r0, #0
    44e0:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    44e4:	e4060000 	str	r0, [r6], #-0
    44e8:	05000005 	streq	r0, [r0, #-5]
    44ec:	00630709 	rsbeq	r0, r3, r9, lsl #14
    44f0:	52030000 	andpl	r0, r3, #0
    44f4:	02000000 	andeq	r0, r0, #0
    44f8:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
    44fc:	44070000 	strmi	r0, [r7], #-0
    4500:	0100001c 	tsteq	r0, ip, lsl r0
    4504:	005e1a06 	subseq	r1, lr, r6, lsl #20
    4508:	03050000 	movweq	r0, #20480	; 0x5000
    450c:	000101cc 	andeq	r0, r1, ip, asr #3
    4510:	001c7507 	andseq	r7, ip, r7, lsl #10
    4514:	1a080100 	bne	20491c <_bss_end+0x1f2c2c>
    4518:	0000005e 	andeq	r0, r0, lr, asr r0
    451c:	01d00305 	bicseq	r0, r0, r5, lsl #6
    4520:	93070001 	movwls	r0, #28673	; 0x7001
    4524:	0100001d 	tsteq	r0, sp, lsl r0
    4528:	005e1a0a 	subseq	r1, lr, sl, lsl #20
    452c:	03050000 	movweq	r0, #20480	; 0x5000
    4530:	000101d4 	ldrdeq	r0, [r1], -r4
    4534:	001b7907 	andseq	r7, fp, r7, lsl #18
    4538:	1a0c0100 	bne	304940 <_bss_end+0x2f2c50>
    453c:	0000005e 	andeq	r0, r0, lr, asr r0
    4540:	01d80305 	bicseq	r0, r8, r5, lsl #6
    4544:	32080001 	andcc	r0, r8, #1
    4548:	05000024 	streq	r0, [r0, #-36]	; 0xffffffdc
    454c:	00003804 	andeq	r3, r0, r4, lsl #16
    4550:	0c0e0100 	stfeqs	f0, [lr], {-0}
    4554:	000000d7 	ldrdeq	r0, [r0], -r7
    4558:	001d3709 	andseq	r3, sp, r9, lsl #14
    455c:	3d090000 	stccc	0, cr0, [r9, #-0]
    4560:	0100001e 	tsteq	r0, lr, lsl r0
    4564:	001cdb09 	andseq	sp, ip, r9, lsl #22
    4568:	0a000200 	beq	4d70 <CPSR_IRQ_INHIBIT+0x4cf0>
    456c:	00001c87 	andeq	r1, r0, r7, lsl #25
    4570:	074c0190 			; <UNDEFINED> instruction: 0x074c0190
    4574:	00000260 	andeq	r0, r0, r0, ror #4
    4578:	001c670b 	andseq	r6, ip, fp, lsl #14
    457c:	50012400 	andpl	r2, r1, r0, lsl #8
    4580:	00017a0c 	andeq	r7, r1, ip, lsl #20
    4584:	3eab0c00 	cdpcc	12, 10, cr0, cr11, cr0, {0}
    4588:	52010000 	andpl	r0, r1, #0
    458c:	0002600e 	andeq	r6, r2, lr
    4590:	380c0000 	stmdacc	ip, {}	; <UNPREDICTABLE>
    4594:	0100001c 	tsteq	r0, ip, lsl r0
    4598:	02700e54 	rsbseq	r0, r0, #84, 28	; 0x540
    459c:	0c100000 	ldceq	0, cr0, [r0], {-0}
    45a0:	00001b8c 	andeq	r1, r0, ip, lsl #23
    45a4:	52125601 	andspl	r5, r2, #1048576	; 0x100000
    45a8:	14000000 	strne	r0, [r0], #-0
    45ac:	001c600c 	andseq	r6, ip, ip
    45b0:	18590100 	ldmdane	r9, {r8}^
    45b4:	00000277 	andeq	r0, r0, r7, ror r2
    45b8:	1c930c18 	ldcne	12, cr0, [r3], {24}
    45bc:	5b010000 	blpl	445c4 <_bss_end+0x328d4>
    45c0:	00027718 	andeq	r7, r2, r8, lsl r7
    45c4:	050c1c00 	streq	r1, [ip, #-3072]	; 0xfffff400
    45c8:	0100000e 	tsteq	r0, lr
    45cc:	0277185e 	rsbseq	r1, r7, #6160384	; 0x5e0000
    45d0:	0d200000 	stceq	0, cr0, [r0, #-0]
    45d4:	00001d11 	andeq	r1, r0, r1, lsl sp
    45d8:	cf186001 	svcgt	0x00186001
    45dc:	7700001d 	smladvc	r0, sp, r0, r0
    45e0:	57000002 	strpl	r0, [r0, -r2]
    45e4:	62000001 	andvs	r0, r0, #1
    45e8:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    45ec:	00000277 	andeq	r0, r0, r7, ror r2
    45f0:	0002820f 	andeq	r8, r2, pc, lsl #4
    45f4:	67100000 	ldrvs	r0, [r0, -r0]
    45f8:	a400001c 	strge	r0, [r0], #-28	; 0xffffffe4
    45fc:	7700001c 	smladvc	r0, ip, r0, r0
    4600:	73000002 	movwvc	r0, #2
    4604:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4608:	00000277 	andeq	r0, r0, r7, ror r2
    460c:	d00b0000 	andle	r0, fp, r0
    4610:	1800001c 	stmdane	r0, {r2, r3, r4}
    4614:	af0c6401 	svcge	0x000c6401
    4618:	0c000001 	stceq	0, cr0, [r0], {1}
    461c:	00003eab 	andeq	r3, r0, fp, lsr #29
    4620:	600e6701 	andvs	r6, lr, r1, lsl #14
    4624:	00000002 	andeq	r0, r0, r2
    4628:	001bb60c 	andseq	fp, fp, ip, lsl #12
    462c:	15690100 	strbne	r0, [r9, #-256]!	; 0xffffff00
    4630:	00000282 	andeq	r0, r0, r2, lsl #5
    4634:	1d260c10 	stcne	12, cr0, [r6, #-64]!	; 0xffffffc0
    4638:	6b010000 	blvs	44640 <_bss_end+0x32950>
    463c:	0002921d 	andeq	r9, r2, sp, lsl r2
    4640:	03001400 	movweq	r1, #1024	; 0x400
    4644:	0000017a 	andeq	r0, r0, sl, ror r1
    4648:	001bcc11 	andseq	ip, fp, r1, lsl ip
    464c:	1d6f0100 	stfnee	f0, [pc, #-0]	; 4654 <CPSR_IRQ_INHIBIT+0x45d4>
    4650:	00000298 	muleq	r0, r8, r2
    4654:	001b6711 	andseq	r6, fp, r1, lsl r7
    4658:	1b710100 	blne	1c44a60 <_bss_end+0x1c32d70>
    465c:	0000005e 	andeq	r0, r0, lr, asr r0
    4660:	001da10c 	andseq	sl, sp, ip, lsl #2
    4664:	13740100 	cmnne	r4, #0, 2
    4668:	000000e4 	andeq	r0, r0, r4, ror #1
    466c:	1b970c00 	blne	fe5c7674 <_bss_end+0xfe5b5984>
    4670:	77010000 	strvc	r0, [r1, -r0]
    4674:	0000e413 	andeq	lr, r0, r3, lsl r4
    4678:	2d0c2400 	cfstrscs	mvf2, [ip, #-0]
    467c:	0100001d 	tsteq	r0, sp, lsl r0
    4680:	00e41378 	rsceq	r1, r4, r8, ror r3
    4684:	0c480000 	mareq	acc0, r0, r8
    4688:	00001d1c 	andeq	r1, r0, ip, lsl sp
    468c:	e4137901 	ldr	r7, [r3], #-2305	; 0xfffff6ff
    4690:	6c000000 	stcvs	0, cr0, [r0], {-0}
    4694:	001c8712 	andseq	r8, ip, r2, lsl r7
    4698:	057c0100 	ldrbeq	r0, [ip, #-256]!	; 0xffffff00
    469c:	00001dff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    46a0:	000002a3 	andeq	r0, r0, r3, lsr #5
    46a4:	00021901 	andeq	r1, r2, r1, lsl #18
    46a8:	00021f00 	andeq	r1, r2, r0, lsl #30
    46ac:	02a30e00 	adceq	r0, r3, #0, 28
    46b0:	13000000 	movwne	r0, #0
    46b4:	00001bc1 	andeq	r1, r0, r1, asr #23
    46b8:	480a7f01 	stmdami	sl, {r0, r8, r9, sl, fp, ip, sp, lr}
    46bc:	0100001e 	tsteq	r0, lr, lsl r0
    46c0:	00000234 	andeq	r0, r0, r4, lsr r2
    46c4:	0000023a 	andeq	r0, r0, sl, lsr r2
    46c8:	0002a30e 	andeq	sl, r2, lr, lsl #6
    46cc:	20140000 	andscs	r0, r4, r0
    46d0:	0100000a 	tsteq	r0, sl
    46d4:	1ce60c82 	stclne	12, cr0, [r6], #520	; 0x208
    46d8:	02b30000 	adcseq	r0, r3, #0
    46dc:	4f010000 	svcmi	0x00010000
    46e0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    46e4:	000002a3 	andeq	r0, r0, r3, lsr #5
    46e8:	0002820f 	andeq	r8, r2, pc, lsl #4
    46ec:	00b20f00 	adcseq	r0, r2, r0, lsl #30
    46f0:	00000000 	andeq	r0, r0, r0
    46f4:	00002515 	andeq	r2, r0, r5, lsl r5
    46f8:	00027000 	andeq	r7, r2, r0
    46fc:	00631600 	rsbeq	r1, r3, r0, lsl #12
    4700:	000f0000 	andeq	r0, pc, r0
    4704:	48020102 	stmdami	r2, {r1, r8}
    4708:	17000045 	strne	r0, [r0, -r5, asr #32]
    470c:	0000e404 	andeq	lr, r0, r4, lsl #8
    4710:	02770300 	rsbseq	r0, r7, #0, 6
    4714:	04170000 	ldreq	r0, [r7], #-0
    4718:	0000002c 	andeq	r0, r0, ip, lsr #32
    471c:	00028203 	andeq	r8, r2, r3, lsl #4
    4720:	29e11800 	stmibcs	r1!, {fp, ip}^
    4724:	04170000 	ldreq	r0, [r7], #-0
    4728:	0000028d 	andeq	r0, r0, sp, lsl #5
    472c:	0001af15 	andeq	sl, r1, r5, lsl pc
    4730:	0002a300 	andeq	sl, r2, r0, lsl #6
    4734:	17001900 	strne	r1, [r0, -r0, lsl #18]
    4738:	0000d704 	andeq	sp, r0, r4, lsl #14
    473c:	02a30300 	adceq	r0, r3, #0, 6
    4740:	c8180000 	ldmdagt	r8, {}	; <UNPREDICTABLE>
    4744:	1700002b 	strne	r0, [r0, -fp, lsr #32]
    4748:	0002ae04 	andeq	sl, r2, r4, lsl #28
    474c:	1be71a00 	blne	ff9caf54 <_bss_end+0xff9b9264>
    4750:	85010000 	strhi	r0, [r1, #-0]
    4754:	0000d714 	andeq	sp, r0, r4, lsl r7
    4758:	0b980a00 	bleq	fe606f60 <_bss_end+0xfe5f5270>
    475c:	04180000 	ldreq	r0, [r8], #-0
    4760:	05060703 	streq	r0, [r6, #-1795]	; 0xfffff8fd
    4764:	161b0000 	ldrne	r0, [fp], -r0
    4768:	0700000b 	streq	r0, [r0, -fp]
    476c:	00006304 	andeq	r6, r0, r4, lsl #6
    4770:	10060400 	andne	r0, r6, r0, lsl #8
    4774:	0002f201 	andeq	pc, r2, r1, lsl #4
    4778:	45481c00 	strbmi	r1, [r8, #-3072]	; 0xfffff400
    477c:	1c100058 	ldcne	0, cr0, [r0], {88}	; 0x58
    4780:	00434544 	subeq	r4, r3, r4, asr #10
    4784:	d203000a 	andle	r0, r3, #10
    4788:	0b000002 	bleq	4798 <CPSR_IRQ_INHIBIT+0x4718>
    478c:	00000b23 	andeq	r0, r0, r3, lsr #22
    4790:	0c240408 	cfstrseq	mvf0, [r4], #-32	; 0xffffffe0
    4794:	0000031b 	andeq	r0, r0, fp, lsl r3
    4798:	0400791d 	streq	r7, [r0], #-2333	; 0xfffff6e3
    479c:	00631626 	rsbeq	r1, r3, r6, lsr #12
    47a0:	1d000000 	stcne	0, cr0, [r0, #-0]
    47a4:	27040078 	smlsdxcs	r4, r8, r0, r0
    47a8:	00006316 	andeq	r6, r0, r6, lsl r3
    47ac:	1e000400 	cfcpysne	mvf0, mvf0
    47b0:	00000c75 	andeq	r0, r0, r5, ror ip
    47b4:	f21b0c04 			; <UNDEFINED> instruction: 0xf21b0c04
    47b8:	01000002 	tsteq	r0, r2
    47bc:	0be81f0a 	bleq	ffa0c3ec <_bss_end+0xff9fa6fc>
    47c0:	0d040000 	stceq	0, cr0, [r4, #-0]
    47c4:	00028828 	andeq	r8, r2, r8, lsr #16
    47c8:	98200100 	stmdals	r0!, {r8}
    47cc:	0400000b 	streq	r0, [r0], #-11
    47d0:	0c620e10 	stcleq	14, cr0, [r2], #-64	; 0xffffffc0
    47d4:	05060000 	streq	r0, [r6, #-0]
    47d8:	4f010000 	svcmi	0x00010000
    47dc:	64000003 	strvs	r0, [r0], #-3
    47e0:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    47e4:	00000506 	andeq	r0, r0, r6, lsl #10
    47e8:	0000630f 	andeq	r6, r0, pc, lsl #6
    47ec:	00630f00 	rsbeq	r0, r3, r0, lsl #30
    47f0:	630f0000 	movwvs	r0, #61440	; 0xf000
    47f4:	00000000 	andeq	r0, r0, r0
    47f8:	0018a213 	andseq	sl, r8, r3, lsl r2
    47fc:	0a120400 	beq	485804 <_bss_end+0x473b14>
    4800:	00000b83 	andeq	r0, r0, r3, lsl #23
    4804:	00037901 	andeq	r7, r3, r1, lsl #18
    4808:	00037f00 	andeq	r7, r3, r0, lsl #30
    480c:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    4810:	12000000 	andne	r0, r0, #0
    4814:	00000ba1 	andeq	r0, r0, r1, lsr #23
    4818:	050f1404 	streq	r1, [pc, #-1028]	; 441c <CPSR_IRQ_INHIBIT+0x439c>
    481c:	0c00000c 	stceq	0, cr0, [r0], {12}
    4820:	01000005 	tsteq	r0, r5
    4824:	00000398 	muleq	r0, r8, r3
    4828:	000003a3 	andeq	r0, r0, r3, lsr #7
    482c:	0005060e 	andeq	r0, r5, lr, lsl #12
    4830:	00250f00 	eoreq	r0, r5, r0, lsl #30
    4834:	12000000 	andne	r0, r0, #0
    4838:	00000ba1 	andeq	r0, r0, r1, lsr #23
    483c:	ac0f1504 	cfstr32ge	mvfx1, [pc], {4}
    4840:	0c00000b 	stceq	0, cr0, [r0], {11}
    4844:	01000005 	tsteq	r0, r5
    4848:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    484c:	000003c7 	andeq	r0, r0, r7, asr #7
    4850:	0005060e 	andeq	r0, r5, lr, lsl #12
    4854:	02820f00 	addeq	r0, r2, #0, 30
    4858:	12000000 	andne	r0, r0, #0
    485c:	00000ba1 	andeq	r0, r0, r1, lsr #23
    4860:	890f1604 	stmdbhi	pc, {r2, r9, sl, ip}	; <UNPREDICTABLE>
    4864:	0c00000c 	stceq	0, cr0, [r0], {12}
    4868:	01000005 	tsteq	r0, r5
    486c:	000003e0 	andeq	r0, r0, r0, ror #7
    4870:	000003eb 	andeq	r0, r0, fp, ror #7
    4874:	0005060e 	andeq	r0, r5, lr, lsl #12
    4878:	02d20f00 	sbcseq	r0, r2, #0, 30
    487c:	12000000 	andne	r0, r0, #0
    4880:	00000ba1 	andeq	r0, r0, r1, lsr #23
    4884:	340f1704 	strcc	r1, [pc], #-1796	; 488c <CPSR_IRQ_INHIBIT+0x480c>
    4888:	0c00000c 	stceq	0, cr0, [r0], {12}
    488c:	01000005 	tsteq	r0, r5
    4890:	00000404 	andeq	r0, r0, r4, lsl #8
    4894:	0000040f 	andeq	r0, r0, pc, lsl #8
    4898:	0005060e 	andeq	r0, r5, lr, lsl #12
    489c:	00630f00 	rsbeq	r0, r3, r0, lsl #30
    48a0:	12000000 	andne	r0, r0, #0
    48a4:	00000ba1 	andeq	r0, r0, r1, lsr #23
    48a8:	f40f1804 	vst2.8	{d1-d2}, [pc], r4
    48ac:	0c00000b 	stceq	0, cr0, [r0], {11}
    48b0:	01000005 	tsteq	r0, r5
    48b4:	00000428 	andeq	r0, r0, r8, lsr #8
    48b8:	00000433 	andeq	r0, r0, r3, lsr r4
    48bc:	0005060e 	andeq	r0, r5, lr, lsl #12
    48c0:	02700f00 	rsbseq	r0, r0, #0, 30
    48c4:	21000000 	mrscs	r0, (UNDEF: 0)
    48c8:	00000ab4 			; <UNDEFINED> instruction: 0x00000ab4
    48cc:	84111b04 	ldrhi	r1, [r1], #-2820	; 0xfffff4fc
    48d0:	4700000a 	strmi	r0, [r0, -sl]
    48d4:	4d000004 	stcmi	0, cr0, [r0, #-16]
    48d8:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    48dc:	00000506 	andeq	r0, r0, r6, lsl #10
    48e0:	0aa72100 	beq	fe9ccce8 <_bss_end+0xfe9baff8>
    48e4:	1c040000 	stcne	0, cr0, [r4], {-0}
    48e8:	000c4511 	andeq	r4, ip, r1, lsl r5
    48ec:	00046100 	andeq	r6, r4, r0, lsl #2
    48f0:	00046700 	andeq	r6, r4, r0, lsl #14
    48f4:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    48f8:	21000000 	mrscs	r0, (UNDEF: 0)
    48fc:	00000a5f 	andeq	r0, r0, pc, asr sl
    4900:	2d111d04 	ldccs	13, cr1, [r1, #-16]
    4904:	7b00000b 	blvc	4938 <CPSR_IRQ_INHIBIT+0x48b8>
    4908:	81000004 	tsthi	r0, r4
    490c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4910:	00000506 	andeq	r0, r0, r6, lsl #10
    4914:	13e12100 	mvnne	r2, #0, 2
    4918:	1f040000 	svcne	0x00040000
    491c:	000c1e0a 	andeq	r1, ip, sl, lsl #28
    4920:	00049500 	andeq	r9, r4, r0, lsl #10
    4924:	00049b00 	andeq	r9, r4, r0, lsl #22
    4928:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    492c:	21000000 	mrscs	r0, (UNDEF: 0)
    4930:	00000aa2 	andeq	r0, r0, r2, lsr #21
    4934:	bf0a2104 	svclt	0x000a2104
    4938:	af00000b 	svcge	0x0000000b
    493c:	c4000004 	strgt	r0, [r0], #-4
    4940:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4944:	00000506 	andeq	r0, r0, r6, lsl #10
    4948:	0000630f 	andeq	r6, r0, pc, lsl #6
    494c:	05120f00 	ldreq	r0, [r2, #-3840]	; 0xfffff100
    4950:	630f0000 	movwvs	r0, #61440	; 0xf000
    4954:	00000000 	andeq	r0, r0, r0
    4958:	000b4f0c 	andeq	r4, fp, ip, lsl #30
    495c:	232b0400 			; <UNDEFINED> instruction: 0x232b0400
    4960:	0000051e 	andeq	r0, r0, lr, lsl r5
    4964:	0c160c00 	ldceq	12, cr0, [r6], {-0}
    4968:	2c040000 	stccs	0, cr0, [r4], {-0}
    496c:	00006312 	andeq	r6, r0, r2, lsl r3
    4970:	d60c0400 	strle	r0, [ip], -r0, lsl #8
    4974:	0400000b 	streq	r0, [r0], #-11
    4978:	0063122d 	rsbeq	r1, r3, sp, lsr #4
    497c:	0c080000 	stceq	0, cr0, [r8], {-0}
    4980:	00000bdf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4984:	f70f2e04 			; <UNDEFINED> instruction: 0xf70f2e04
    4988:	0c000002 	stceq	0, cr0, [r0], {2}
    498c:	000a510c 	andeq	r5, sl, ip, lsl #2
    4990:	122f0400 	eorne	r0, pc, #0, 8
    4994:	000002d2 	ldrdeq	r0, [r0], -r2
    4998:	04170014 	ldreq	r0, [r7], #-20	; 0xffffffec
    499c:	000002c5 	andeq	r0, r0, r5, asr #5
    49a0:	02c50422 	sbceq	r0, r5, #570425344	; 0x22000000
    49a4:	04170000 	ldreq	r0, [r7], #-0
    49a8:	00000025 	andeq	r0, r0, r5, lsr #32
    49ac:	00460417 	subeq	r0, r6, r7, lsl r4
    49b0:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    49b4:	1a000005 	bne	49d0 <CPSR_IRQ_INHIBIT+0x4950>
    49b8:	00000b68 	andeq	r0, r0, r8, ror #22
    49bc:	c5113204 	ldrgt	r3, [r1, #-516]	; 0xfffffdfc
    49c0:	0b000002 	bleq	49d0 <CPSR_IRQ_INHIBIT+0x4950>
    49c4:	000013be 			; <UNDEFINED> instruction: 0x000013be
    49c8:	08080310 	stmdaeq	r8, {r4, r8, r9}
    49cc:	00000571 	andeq	r0, r0, r1, ror r5
    49d0:	000d080c 	andeq	r0, sp, ip, lsl #16
    49d4:	200a0300 	andcs	r0, sl, r0, lsl #6
    49d8:	00000571 	andeq	r0, r0, r1, ror r5
    49dc:	0e050c00 	cdpeq	12, 0, cr0, cr5, cr0, {0}
    49e0:	0b030000 	bleq	c49e8 <_bss_end+0xb2cf8>
    49e4:	00057120 	andeq	r7, r5, r0, lsr #2
    49e8:	520c0400 	andpl	r0, ip, #0, 8
    49ec:	0300000e 	movweq	r0, #14
    49f0:	00520e0c 	subseq	r0, r2, ip, lsl #28
    49f4:	0c080000 	stceq	0, cr0, [r8], {-0}
    49f8:	00000ea6 	andeq	r0, r0, r6, lsr #29
    49fc:	700a0d03 	andvc	r0, sl, r3, lsl #26
    4a00:	0c000002 	stceq	0, cr0, [r0], {2}
    4a04:	2f041700 	svccs	0x00041700
    4a08:	0a000005 	beq	4a24 <CPSR_IRQ_INHIBIT+0x49a4>
    4a0c:	00000e0a 	andeq	r0, r0, sl, lsl #28
    4a10:	07100304 	ldreq	r0, [r0, -r4, lsl #6]
    4a14:	00000635 	andeq	r0, r0, r5, lsr r6
    4a18:	0013440c 	andseq	r4, r3, ip, lsl #8
    4a1c:	20130300 	andscs	r0, r3, r0, lsl #6
    4a20:	00000571 	andeq	r0, r0, r1, ror r5
    4a24:	13850d00 	orrne	r0, r5, #0, 26
    4a28:	15030000 	strne	r0, [r3, #-0]
    4a2c:	000d0d20 	andeq	r0, sp, r0, lsr #26
    4a30:	00057100 	andeq	r7, r5, r0, lsl #2
    4a34:	0005a900 	andeq	sl, r5, r0, lsl #18
    4a38:	0005af00 	andeq	sl, r5, r0, lsl #30
    4a3c:	06350e00 	ldrteq	r0, [r5], -r0, lsl #28
    4a40:	12000000 	andne	r0, r0, #0
    4a44:	00000e0a 	andeq	r0, r0, sl, lsl #28
    4a48:	26051803 	strcs	r1, [r5], -r3, lsl #16
    4a4c:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
    4a50:	01000006 	tsteq	r0, r6
    4a54:	000005c8 	andeq	r0, r0, r8, asr #11
    4a58:	000005ce 	andeq	r0, r0, lr, asr #11
    4a5c:	0006350e 	andeq	r3, r6, lr, lsl #10
    4a60:	e5120000 	ldr	r0, [r2, #-0]
    4a64:	0300000e 	movweq	r0, #14
    4a68:	11ba0b1a 			; <UNDEFINED> instruction: 0x11ba0b1a
    4a6c:	06400000 	strbeq	r0, [r0], -r0
    4a70:	e7010000 	str	r0, [r1, -r0]
    4a74:	f2000005 	vhadd.s8	d0, d0, d5
    4a78:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    4a7c:	00000635 	andeq	r0, r0, r5, lsr r6
    4a80:	0000520f 	andeq	r5, r0, pc, lsl #4
    4a84:	ac130000 	ldcge	0, cr0, [r3], {-0}
    4a88:	03000013 	movweq	r0, #19
    4a8c:	10d30a1b 	sbcsne	r0, r3, fp, lsl sl
    4a90:	07010000 	streq	r0, [r1, -r0]
    4a94:	12000006 	andne	r0, r0, #6
    4a98:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    4a9c:	00000635 	andeq	r0, r0, r5, lsr r6
    4aa0:	0006400f 	andeq	r4, r6, pc
    4aa4:	ad140000 	ldcge	0, cr0, [r4, #-0]
    4aa8:	0300001d 	movweq	r0, #29
    4aac:	1bf3081e 	blne	ffcc6b2c <_bss_end+0xffcb4e3c>
    4ab0:	02770000 	rsbseq	r0, r7, #0
    4ab4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4ab8:	23000006 	movwcs	r0, #6
    4abc:	00e40054 	rsceq	r0, r4, r4, asr r0
    4ac0:	350e0000 	strcc	r0, [lr, #-0]
    4ac4:	00000006 	andeq	r0, r0, r6
    4ac8:	77041700 	strvc	r1, [r4, -r0, lsl #14]
    4acc:	03000005 	movweq	r0, #5
    4ad0:	00000635 	andeq	r0, r0, r5, lsr r6
    4ad4:	fa1a0424 	blx	685b6c <_bss_end+0x673e7c>
    4ad8:	03000037 	movweq	r0, #55	; 0x37
    4adc:	05771d24 	ldrbeq	r1, [r7, #-3364]!	; 0xfffff2dc
    4ae0:	b9250000 	stmdblt	r5!, {}	; <UNPREDICTABLE>
    4ae4:	02000002 	andeq	r0, r0, #2
    4ae8:	03050d08 	movweq	r0, #23816	; 0x5d08
    4aec:	00010c34 	andeq	r0, r1, r4, lsr ip
    4af0:	001bd826 	andseq	sp, fp, r6, lsr #16
    4af4:	00c29400 	sbceq	r9, r2, r0, lsl #8
    4af8:	00001c00 	andeq	r1, r0, r0, lsl #24
    4afc:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
    4b00:	00000241 	andeq	r0, r0, r1, asr #4
    4b04:	0000c248 	andeq	ip, r0, r8, asr #4
    4b08:	0000004c 	andeq	r0, r0, ip, asr #32
    4b0c:	069d9c01 	ldreq	r9, [sp], r1, lsl #24
    4b10:	3b280000 	blcc	a04b18 <_bss_end+0x9f2e28>
    4b14:	02000003 	andeq	r0, r0, #3
    4b18:	003801b8 	ldrhteq	r0, [r8], -r8
    4b1c:	91020000 	mrsls	r0, (UNDEF: 2)
    4b20:	07342874 			; <UNDEFINED> instruction: 0x07342874
    4b24:	b8020000 	stmdalt	r2, {}	; <UNPREDICTABLE>
    4b28:	00003801 	andeq	r3, r0, r1, lsl #16
    4b2c:	70910200 	addsvc	r0, r1, r0, lsl #4
    4b30:	06122900 	ldreq	r2, [r2], -r0, lsl #18
    4b34:	06bb0000 	ldrteq	r0, [fp], r0
    4b38:	c2ec0000 	rscgt	r0, ip, #0
    4b3c:	002c0000 	eoreq	r0, ip, r0
    4b40:	9c010000 	stcls	0, cr0, [r1], {-0}
    4b44:	000006c8 	andeq	r0, r0, r8, asr #13
    4b48:	e4005423 	str	r5, [r0], #-1059	; 0xfffffbdd
    4b4c:	2a000000 	bcs	4b54 <CPSR_IRQ_INHIBIT+0x4ad4>
    4b50:	0000032c 	andeq	r0, r0, ip, lsr #6
    4b54:	0000063b 	andeq	r0, r0, fp, lsr r6
    4b58:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4b5c:	00023a2b 	andeq	r3, r2, fp, lsr #20
    4b60:	088a0200 	stmeq	sl, {r9}
    4b64:	000006e2 	andeq	r0, r0, r2, ror #13
    4b68:	0000bfec 	andeq	fp, r0, ip, ror #31
    4b6c:	0000025c 	andeq	r0, r0, ip, asr r2
    4b70:	07569c01 	ldrbeq	r9, [r6, -r1, lsl #24]
    4b74:	2c2a0000 	stccs	0, cr0, [sl], #-0
    4b78:	a9000003 	stmdbge	r0, {r0, r1}
    4b7c:	02000002 	andeq	r0, r0, #2
    4b80:	14285491 	strtne	r5, [r8], #-1169	; 0xfffffb6f
    4b84:	0200001e 	andeq	r0, r0, #30
    4b88:	0282268a 	addeq	r2, r2, #144703488	; 0x8a00000
    4b8c:	91020000 	mrsls	r0, (UNDEF: 2)
    4b90:	036e2850 	cmneq	lr, #80, 16	; 0x500000
    4b94:	8a020000 	bhi	84b9c <_bss_end+0x72eac>
    4b98:	0000b23c 	andeq	fp, r0, ip, lsr r2
    4b9c:	4c910200 	lfmmi	f0, 4, [r1], {0}
    4ba0:	001cc82c 	andseq	ip, ip, ip, lsr #16
    4ba4:	0a8c0200 	beq	fe3053ac <_bss_end+0xfe2f36bc>
    4ba8:	00000260 	andeq	r0, r0, r0, ror #4
    4bac:	2c589102 	ldfcsp	f1, [r8], {2}
    4bb0:	00001c5a 	andeq	r1, r0, sl, asr ip
    4bb4:	82118d02 	andshi	r8, r1, #2, 26	; 0x80
    4bb8:	02000002 	andeq	r0, r0, #2
    4bbc:	6a2d7491 	bvs	b61e08 <_bss_end+0xb50118>
    4bc0:	09900200 	ldmibeq	r0, {r9}
    4bc4:	00000038 	andeq	r0, r0, r8, lsr r0
    4bc8:	2c709102 	ldfcsp	f1, [r0], #-8
    4bcc:	00003abb 			; <UNDEFINED> instruction: 0x00003abb
    4bd0:	77149402 	ldrvc	r9, [r4, -r2, lsl #8]
    4bd4:	02000002 	andeq	r0, r0, #2
    4bd8:	9c2c6c91 	stcls	12, cr6, [ip], #-580	; 0xfffffdbc
    4bdc:	0200001c 	andeq	r0, r0, #28
    4be0:	02772494 	rsbseq	r2, r7, #148, 8	; 0x94000000
    4be4:	91020000 	mrsls	r0, (UNDEF: 2)
    4be8:	1f2b0068 	svcne	0x002b0068
    4bec:	02000002 	andeq	r0, r0, #2
    4bf0:	0770063a 			; <UNDEFINED> instruction: 0x0770063a
    4bf4:	bc900000 	ldclt	0, cr0, [r0], {0}
    4bf8:	035c0000 	cmpeq	ip, #0
    4bfc:	9c010000 	stcls	0, cr0, [r1], {-0}
    4c00:	000007ec 	andeq	r0, r0, ip, ror #15
    4c04:	00032c2a 	andeq	r2, r3, sl, lsr #24
    4c08:	0002a900 	andeq	sl, r2, r0, lsl #18
    4c0c:	4c910200 	lfmmi	f0, 4, [r1], {0}
    4c10:	001cc82c 	andseq	ip, ip, ip, lsr #16
    4c14:	0a3e0200 	beq	f8541c <_bss_end+0xf7372c>
    4c18:	00000260 	andeq	r0, r0, r0, ror #4
    4c1c:	2c509102 	ldfcsp	f1, [r0], {2}
    4c20:	00001c5a 	andeq	r1, r0, sl, asr ip
    4c24:	82113f02 	andshi	r3, r1, #2, 30
    4c28:	02000002 	andeq	r0, r0, #2
    4c2c:	692d7491 	pushvs	{r0, r4, r7, sl, ip, sp, lr}
    4c30:	09410200 	stmdbeq	r1, {r9}^
    4c34:	00000038 	andeq	r0, r0, r8, lsr r0
    4c38:	2d709102 	ldfcsp	f1, [r0, #-8]!
    4c3c:	4102006a 	tstmi	r2, sl, rrx
    4c40:	0000380c 	andeq	r3, r0, ip, lsl #16
    4c44:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4c48:	00bcc82e 	adcseq	ip, ip, lr, lsr #16
    4c4c:	0002c400 	andeq	ip, r2, r0, lsl #8
    4c50:	74702d00 	ldrbtvc	r2, [r0], #-3328	; 0xfffff300
    4c54:	45020072 	strmi	r0, [r2, #-114]	; 0xffffff8e
    4c58:	0007ec1b 	andeq	lr, r7, fp, lsl ip
    4c5c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    4c60:	003abb2c 	eorseq	fp, sl, ip, lsr #22
    4c64:	184b0200 	stmdane	fp, {r9}^
    4c68:	00000277 	andeq	r0, r0, r7, ror r2
    4c6c:	2c689102 	stfcsp	f1, [r8], #-8
    4c70:	00001c9c 	muleq	r0, ip, ip
    4c74:	77284b02 	strvc	r4, [r8, -r2, lsl #22]!
    4c78:	02000002 	andeq	r0, r0, #2
    4c7c:	00006091 	muleq	r0, r1, r0
    4c80:	01af0417 			; <UNDEFINED> instruction: 0x01af0417
    4c84:	3f2b0000 	svccc	0x002b0000
    4c88:	02000001 	andeq	r0, r0, #1
    4c8c:	080c1d2b 	stmdaeq	ip, {r0, r1, r3, r5, r8, sl, fp, ip}
    4c90:	bc0c0000 	stclt	0, cr0, [ip], {-0}
    4c94:	00840000 	addeq	r0, r4, r0
    4c98:	9c010000 	stcls	0, cr0, [r1], {-0}
    4c9c:	00000837 	andeq	r0, r0, r7, lsr r8
    4ca0:	00032c2a 	andeq	r2, r3, sl, lsr #24
    4ca4:	00027d00 	andeq	r7, r2, r0, lsl #26
    4ca8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4cac:	003eab28 	eorseq	sl, lr, r8, lsr #22
    4cb0:	502b0200 	eorpl	r0, fp, r0, lsl #4
    4cb4:	00000282 	andeq	r0, r0, r2, lsl #5
    4cb8:	2c689102 	stfcsp	f1, [r8], #-8
    4cbc:	00001da7 	andeq	r1, r0, r7, lsr #27
    4cc0:	77142d02 	ldrvc	r2, [r4, -r2, lsl #26]
    4cc4:	02000002 	andeq	r0, r0, #2
    4cc8:	2f007491 	svccs	0x00007491
    4ccc:	00000200 	andeq	r0, r0, r0, lsl #4
    4cd0:	48010a02 	stmdami	r1, {r1, r9, fp}
    4cd4:	00000008 	andeq	r0, r0, r8
    4cd8:	00000852 	andeq	r0, r0, r2, asr r8
    4cdc:	00032c30 	andeq	r2, r3, r0, lsr ip
    4ce0:	0002a900 	andeq	sl, r2, r0, lsl #18
    4ce4:	37310000 	ldrcc	r0, [r1, -r0]!
    4ce8:	a1000008 	tstge	r0, r8
    4cec:	6d00001b 	stcvs	0, cr0, [r0, #-108]	; 0xffffff94
    4cf0:	54000008 	strpl	r0, [r0], #-8
    4cf4:	b80000ba 	stmdalt	r0, {r1, r3, r4, r5, r7}
    4cf8:	01000001 	tsteq	r0, r1
    4cfc:	0008769c 	muleq	r8, ip, r6
    4d00:	08483200 	stmdaeq	r8, {r9, ip, sp}^
    4d04:	91020000 	mrsls	r0, (UNDEF: 2)
    4d08:	622f0074 	eorvs	r0, pc, #116	; 0x74
    4d0c:	01000001 	tsteq	r0, r1
    4d10:	08870c50 	stmeq	r7, {r4, r6, sl, fp}
    4d14:	91020000 	mrsls	r0, (UNDEF: 2)
    4d18:	30000008 	andcc	r0, r0, r8
    4d1c:	0000032c 	andeq	r0, r0, ip, lsr #6
    4d20:	0000027d 	andeq	r0, r0, sp, ror r2
    4d24:	08763300 	ldmdaeq	r6!, {r8, r9, ip, sp}^
    4d28:	1e190000 	cdpne	0, 1, cr0, cr9, cr0, {0}
    4d2c:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    4d30:	c2b00000 	adcsgt	r0, r0, #0
    4d34:	003c0000 	eorseq	r0, ip, r0
    4d38:	9c010000 	stcls	0, cr0, [r1], {-0}
    4d3c:	00088732 	andeq	r8, r8, r2, lsr r7
    4d40:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4d44:	32a50000 	adccc	r0, r5, #0
    4d48:	00040000 	andeq	r0, r4, r0
    4d4c:	000019e4 	andeq	r1, r0, r4, ror #19
    4d50:	00140104 	andseq	r0, r4, r4, lsl #2
    4d54:	9c040000 	stcls	0, cr0, [r4], {-0}
    4d58:	c5000023 	strgt	r0, [r0, #-35]	; 0xffffffdd
    4d5c:	e0000000 	and	r0, r0, r0
    4d60:	00000000 	andeq	r0, r0, r0
    4d64:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    4d68:	02000020 	andeq	r0, r0, #32
    4d6c:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    4d70:	25030000 	strcs	r0, [r3, #-0]
    4d74:	02000000 	andeq	r0, r0, #0
    4d78:	05990502 	ldreq	r0, [r9, #1282]	; 0x502
    4d7c:	04040000 	streq	r0, [r4], #-0
    4d80:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4d84:	00380300 	eorseq	r0, r8, r0, lsl #6
    4d88:	82050000 	andhi	r0, r5, #0
    4d8c:	09000009 	stmdbeq	r0, {r0, r3}
    4d90:	00550707 	subseq	r0, r5, r7, lsl #14
    4d94:	44030000 	strmi	r0, [r3], #-0
    4d98:	02000000 	andeq	r0, r0, #0
    4d9c:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    4da0:	55060000 	strpl	r0, [r6, #-0]
    4da4:	05000000 	streq	r0, [r0, #-0]
    4da8:	00000798 	muleq	r0, r8, r7
    4dac:	72070809 	andvc	r0, r7, #589824	; 0x90000
    4db0:	03000000 	movweq	r0, #0
    4db4:	00000061 	andeq	r0, r0, r1, rrx
    4db8:	dc070202 	sfmle	f0, 4, [r7], {2}
    4dbc:	05000003 	streq	r0, [r0, #-3]
    4dc0:	000005e4 	andeq	r0, r0, r4, ror #11
    4dc4:	8f070909 	svchi	0x00070909
    4dc8:	03000000 	movweq	r0, #0
    4dcc:	00000079 	andeq	r0, r0, r9, ror r0
    4dd0:	00007906 	andeq	r7, r0, r6, lsl #18
    4dd4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4dd8:	00004591 	muleq	r0, r1, r5
    4ddc:	00008f03 	andeq	r8, r0, r3, lsl #30
    4de0:	008f0600 	addeq	r0, pc, r0, lsl #12
    4de4:	61070000 	mrsvs	r0, (UNDEF: 7)
    4de8:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
    4dec:	00003804 	andeq	r3, r0, r4, lsl #16
    4df0:	0c430a00 	mcrreq	10, 0, r0, r3, cr0
    4df4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    4df8:	00229008 	eoreq	r9, r2, r8
    4dfc:	25080000 	strcs	r0, [r8, #-0]
    4e00:	01000020 	tsteq	r0, r0, lsr #32
    4e04:	1c440900 	mcrrne	9, 0, r0, r4, cr0	; <UNPREDICTABLE>
    4e08:	06010000 	streq	r0, [r1], -r0
    4e0c:	0000851a 	andeq	r8, r0, sl, lsl r5
    4e10:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    4e14:	09000102 	stmdbeq	r0, {r1, r8}
    4e18:	00001c75 	andeq	r1, r0, r5, ror ip
    4e1c:	851a0801 	ldrhi	r0, [sl, #-2049]	; 0xfffff7ff
    4e20:	05000000 	streq	r0, [r0, #-0]
    4e24:	0102a803 	tsteq	r2, r3, lsl #16
    4e28:	1d930900 	vldrne.16	s0, [r3]	; <UNPREDICTABLE>
    4e2c:	0a010000 	beq	44e34 <_bss_end+0x33144>
    4e30:	0000851a 	andeq	r8, r0, sl, lsl r5
    4e34:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    4e38:	09000102 	stmdbeq	r0, {r1, r8}
    4e3c:	00001b79 	andeq	r1, r0, r9, ror fp
    4e40:	851a0c01 	ldrhi	r0, [sl, #-3073]	; 0xfffff3ff
    4e44:	05000000 	streq	r0, [r0, #-0]
    4e48:	0102b003 	tsteq	r2, r3
    4e4c:	24320700 	ldrtcs	r0, [r2], #-1792	; 0xfffff900
    4e50:	04050000 	streq	r0, [r5], #-0
    4e54:	00000038 	andeq	r0, r0, r8, lsr r0
    4e58:	2c0c0e01 	stccs	14, cr0, [ip], {1}
    4e5c:	08000001 	stmdaeq	r0, {r0}
    4e60:	00001d37 	andeq	r1, r0, r7, lsr sp
    4e64:	1e3d0800 	cdpne	8, 3, cr0, cr13, cr0, {0}
    4e68:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    4e6c:	00001cdb 	ldrdeq	r1, [r0], -fp
    4e70:	870a0002 	strhi	r0, [sl, -r2]
    4e74:	9000001c 	andls	r0, r0, ip, lsl r0
    4e78:	9a074c01 	bls	1d7e84 <_bss_end+0x1c6194>
    4e7c:	0b000002 	bleq	4e8c <CPSR_IRQ_INHIBIT+0x4e0c>
    4e80:	00001c67 	andeq	r1, r0, r7, ror #24
    4e84:	0c500124 	ldfeqe	f0, [r0], {36}	; 0x24
    4e88:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
    4e8c:	003eab0c 	eorseq	sl, lr, ip, lsl #22
    4e90:	0e520100 	rdfeqs	f0, f2, f0
    4e94:	0000029a 	muleq	r0, sl, r2
    4e98:	1c380c00 	ldcne	12, cr0, [r8], #-0
    4e9c:	54010000 	strpl	r0, [r1], #-0
    4ea0:	0002aa0e 	andeq	sl, r2, lr, lsl #20
    4ea4:	8c0c1000 	stchi	0, cr1, [ip], {-0}
    4ea8:	0100001b 	tsteq	r0, fp, lsl r0
    4eac:	00791256 	rsbseq	r1, r9, r6, asr r2
    4eb0:	0c140000 	ldceq	0, cr0, [r4], {-0}
    4eb4:	00001c60 	andeq	r1, r0, r0, ror #24
    4eb8:	b1185901 	tstlt	r8, r1, lsl #18
    4ebc:	18000002 	stmdane	r0, {r1}
    4ec0:	001c930c 	andseq	r9, ip, ip, lsl #6
    4ec4:	185b0100 	ldmdane	fp, {r8}^
    4ec8:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    4ecc:	0e050c1c 	mcreq	12, 0, r0, cr5, cr12, {0}
    4ed0:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    4ed4:	0002b118 	andeq	fp, r2, r8, lsl r1
    4ed8:	110d2000 	mrsne	r2, (UNDEF: 13)
    4edc:	0100001d 	tsteq	r0, sp, lsl r0
    4ee0:	1dcf1860 	stclne	8, cr1, [pc, #384]	; 5068 <CPSR_IRQ_INHIBIT+0x4fe8>
    4ee4:	02b10000 	adcseq	r0, r1, #0
    4ee8:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    4eec:	b10e0000 	mrslt	r0, (UNDEF: 14)
    4ef0:	0f000002 	svceq	0x00000002
    4ef4:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    4ef8:	d00b0000 	andle	r0, fp, r0
    4efc:	1800001c 	stmdane	r0, {r2, r3, r4}
    4f00:	e90c6401 	stmdb	ip, {r0, sl, sp, lr}
    4f04:	0c000001 	stceq	0, cr0, [r0], {1}
    4f08:	00003eab 	andeq	r3, r0, fp, lsr #29
    4f0c:	9a0e6701 	bls	39eb18 <_bss_end+0x38ce28>
    4f10:	00000002 	andeq	r0, r0, r2
    4f14:	001bb60c 	andseq	fp, fp, ip, lsl #12
    4f18:	15690100 	strbne	r0, [r9, #-256]!	; 0xffffff00
    4f1c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    4f20:	1d260c10 	stcne	12, cr0, [r6, #-64]!	; 0xffffffc0
    4f24:	6b010000 	blvs	44f2c <_bss_end+0x3323c>
    4f28:	0003b31d 	andeq	fp, r3, sp, lsl r3
    4f2c:	03001400 	movweq	r1, #1024	; 0x400
    4f30:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
    4f34:	001bcc10 	andseq	ip, fp, r0, lsl ip
    4f38:	1d6f0100 	stfnee	f0, [pc, #-0]	; 4f40 <CPSR_IRQ_INHIBIT+0x4ec0>
    4f3c:	000003b9 			; <UNDEFINED> instruction: 0x000003b9
    4f40:	001b6710 	andseq	r6, fp, r0, lsl r7
    4f44:	1b710100 	blne	1c4534c <_bss_end+0x1c3365c>
    4f48:	00000085 	andeq	r0, r0, r5, lsl #1
    4f4c:	001da10c 	andseq	sl, sp, ip, lsl #2
    4f50:	13740100 	cmnne	r4, #0, 2
    4f54:	00000139 	andeq	r0, r0, r9, lsr r1
    4f58:	1b970c00 	blne	fe5c7f60 <_bss_end+0xfe5b6270>
    4f5c:	77010000 	strvc	r0, [r1, -r0]
    4f60:	00013913 	andeq	r3, r1, r3, lsl r9
    4f64:	2d0c2400 	cfstrscs	mvf2, [ip, #-0]
    4f68:	0100001d 	tsteq	r0, sp, lsl r0
    4f6c:	01391378 	teqeq	r9, r8, ror r3
    4f70:	0c480000 	mareq	acc0, r0, r8
    4f74:	00001d1c 	andeq	r1, r0, ip, lsl sp
    4f78:	39137901 	ldmdbcc	r3, {r0, r8, fp, ip, sp, lr}
    4f7c:	6c000001 	stcvs	0, cr0, [r0], {1}
    4f80:	001c8711 	andseq	r8, ip, r1, lsl r7
    4f84:	057c0100 	ldrbeq	r0, [ip, #-256]!	; 0xffffff00
    4f88:	00001dff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4f8c:	000003c4 	andeq	r0, r0, r4, asr #7
    4f90:	00025301 	andeq	r5, r2, r1, lsl #6
    4f94:	00025900 	andeq	r5, r2, r0, lsl #18
    4f98:	03c40e00 	biceq	r0, r4, #0, 28
    4f9c:	12000000 	andne	r0, r0, #0
    4fa0:	00001bc1 	andeq	r1, r0, r1, asr #23
    4fa4:	480a7f01 	stmdami	sl, {r0, r8, r9, sl, fp, ip, sp, lr}
    4fa8:	0100001e 	tsteq	r0, lr, lsl r0
    4fac:	0000026e 	andeq	r0, r0, lr, ror #4
    4fb0:	00000274 	andeq	r0, r0, r4, ror r2
    4fb4:	0003c40e 	andeq	ip, r3, lr, lsl #8
    4fb8:	20130000 	andscs	r0, r3, r0
    4fbc:	0100000a 	tsteq	r0, sl
    4fc0:	1ce60c82 	stclne	12, cr0, [r6], #520	; 0x208
    4fc4:	05090000 	streq	r0, [r9, #-0]
    4fc8:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    4fcc:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    4fd0:	000003c4 	andeq	r0, r0, r4, asr #7
    4fd4:	0002b70f 	andeq	fp, r2, pc, lsl #14
    4fd8:	01070f00 	tsteq	r7, r0, lsl #30
    4fdc:	00000000 	andeq	r0, r0, r0
    4fe0:	00002514 	andeq	r2, r0, r4, lsl r5
    4fe4:	0002aa00 	andeq	sl, r2, r0, lsl #20
    4fe8:	008f1500 	addeq	r1, pc, r0, lsl #10
    4fec:	000f0000 	andeq	r0, pc, r0
    4ff0:	48020102 	stmdami	r2, {r1, r8}
    4ff4:	16000045 	strne	r0, [r0], -r5, asr #32
    4ff8:	00013904 	andeq	r3, r1, r4, lsl #18
    4ffc:	2c041600 	stccs	6, cr1, [r4], {-0}
    5000:	03000000 	movweq	r0, #0
    5004:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    5008:	0029e117 	eoreq	lr, r9, r7, lsl r1
    500c:	43010400 	movwmi	r0, #5120	; 0x1400
    5010:	0002c207 	andeq	ip, r2, r7, lsl #4
    5014:	0003ae00 	andeq	sl, r3, r0, lsl #28
    5018:	2dbc1800 	ldccs	8, cr1, [ip]
    501c:	1ffb0000 	svcne	0x00fb0000
    5020:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    5024:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    5028:	f4000002 	vst4.8	{d0-d3}, [r0], r2
    502c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    5030:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    5034:	0000380e 	andeq	r3, r0, lr, lsl #16
    5038:	e1180000 	tst	r8, r0
    503c:	60000029 	andvs	r0, r0, r9, lsr #32
    5040:	b300002e 	movwlt	r0, #46	; 0x2e
    5044:	01000003 	tsteq	r0, r3
    5048:	0000030a 	andeq	r0, r0, sl, lsl #6
    504c:	00000315 	andeq	r0, r0, r5, lsl r3
    5050:	0003b30e 	andeq	fp, r3, lr, lsl #6
    5054:	23750f00 	cmncs	r5, #0, 30
    5058:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    505c:	000029e1 	andeq	r2, r0, r1, ror #19
    5060:	000021ba 			; <UNDEFINED> instruction: 0x000021ba
    5064:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    5068:	00032b01 	andeq	r2, r3, r1, lsl #22
    506c:	00033600 	andeq	r3, r3, r0, lsl #12
    5070:	03b30e00 			; <UNDEFINED> instruction: 0x03b30e00
    5074:	7b0f0000 	blvc	3c507c <_bss_end+0x3b338c>
    5078:	00000023 	andeq	r0, r0, r3, lsr #32
    507c:	0029e118 	eoreq	lr, r9, r8, lsl r1
    5080:	00282300 	eoreq	r2, r8, r0, lsl #6
    5084:	0003b300 	andeq	fp, r3, r0, lsl #6
    5088:	034c0100 	movteq	r0, #49408	; 0xc100
    508c:	03520000 	cmpeq	r2, #0
    5090:	b30e0000 	movwlt	r0, #57344	; 0xe000
    5094:	00000003 	andeq	r0, r0, r3
    5098:	0029db19 	eoreq	sp, r9, r9, lsl fp
    509c:	00238c00 	eoreq	r8, r3, r0, lsl #24
    50a0:	1a010000 	bne	450a8 <_bss_end+0x333b8>
    50a4:	000025cf 	andeq	r2, r0, pc, asr #11
    50a8:	b7124701 	ldrlt	r4, [r2, -r1, lsl #14]
    50ac:	0100002e 	tsteq	r0, lr, lsr #32
    50b0:	c2001002 	andgt	r1, r0, #2
    50b4:	01000002 	tsteq	r0, r2
    50b8:	0000037a 	andeq	r0, r0, sl, ror r3
    50bc:	00000380 	andeq	r0, r0, r0, lsl #7
    50c0:	0003b30e 	andeq	fp, r3, lr, lsl #6
    50c4:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    50c8:	01000023 	tsteq	r0, r3, lsr #32
    50cc:	274c1449 	strbcs	r1, [ip, -r9, asr #8]
    50d0:	05090000 	streq	r0, [r9, #-0]
    50d4:	02010000 	andeq	r0, r1, #0
    50d8:	02c20110 	sbceq	r0, r2, #16, 2
    50dc:	9d010000 	stcls	0, cr0, [r1, #-0]
    50e0:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    50e4:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    50e8:	0002b70f 	andeq	fp, r2, pc, lsl #14
    50ec:	01070f00 	tsteq	r7, r0, lsl #30
    50f0:	00000000 	andeq	r0, r0, r0
    50f4:	0002c203 	andeq	ip, r2, r3, lsl #4
    50f8:	c2041600 	andgt	r1, r4, #0, 12
    50fc:	14000002 	strne	r0, [r0], #-2
    5100:	000001e9 	andeq	r0, r0, r9, ror #3
    5104:	000003c4 	andeq	r0, r0, r4, asr #7
    5108:	0416001c 	ldreq	r0, [r6], #-28	; 0xffffffe4
    510c:	0000012c 	andeq	r0, r0, ip, lsr #2
    5110:	002bc817 	eoreq	ip, fp, r7, lsl r8
    5114:	24010400 	strcs	r0, [r1], #-1024	; 0xfffffc00
    5118:	0003ca07 	andeq	ip, r3, r7, lsl #20
    511c:	00050400 	andeq	r0, r5, r0, lsl #8
    5120:	2bc81800 	blcs	ff20b128 <_bss_end+0xff1f9438>
    5124:	2a440000 	bcs	110512c <_bss_end+0x10f343c>
    5128:	05090000 	streq	r0, [r9, #-0]
    512c:	f1010000 	setend	le
    5130:	fc000003 	stc2	0, cr0, [r0], {3}
    5134:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    5138:	00000509 	andeq	r0, r0, r9, lsl #10
    513c:	00239c0f 	eoreq	r9, r3, pc, lsl #24
    5140:	c8180000 	ldmdagt	r8, {}	; <UNPREDICTABLE>
    5144:	ad00002b 	stcge	0, cr0, [r0, #-172]	; 0xffffff54
    5148:	0900001e 	stmdbeq	r0, {r1, r2, r3, r4}
    514c:	01000005 	tsteq	r0, r5
    5150:	00000412 	andeq	r0, r0, r2, lsl r4
    5154:	00000418 	andeq	r0, r0, r8, lsl r4
    5158:	0005090e 	andeq	r0, r5, lr, lsl #18
    515c:	c2190000 	andsgt	r0, r9, #0
    5160:	8c00002b 	stchi	0, cr0, [r0], {43}	; 0x2b
    5164:	00000023 	andeq	r0, r0, r3, lsr #32
    5168:	29201d01 	stmdbcs	r0!, {r0, r8, sl, fp, ip}
    516c:	27010000 	strcs	r0, [r1, -r0]
    5170:	0020170d 	eoreq	r1, r0, sp, lsl #14
    5174:	0009b800 	andeq	fp, r9, r0, lsl #16
    5178:	03ca0100 	biceq	r0, sl, #0, 2
    517c:	01010000 	mrseq	r0, (UNDEF: 1)
    5180:	00000442 	andeq	r0, r0, r2, asr #8
    5184:	0000044d 	andeq	r0, r0, sp, asr #8
    5188:	0005090e 	andeq	r0, r5, lr, lsl #18
    518c:	00380e00 	eorseq	r0, r8, r0, lsl #28
    5190:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5194:	000002d3 	ldrdeq	r0, [r0], -r3
    5198:	75162b01 	ldrvc	r2, [r6, #-2817]	; 0xfffff4ff
    519c:	79000024 	stmdbvc	r0, {r2, r5}
    51a0:	01000000 	mrseq	r0, (UNDEF: 0)
    51a4:	ca021002 	bgt	891b4 <_bss_end+0x774c4>
    51a8:	01000003 	tsteq	r0, r3
    51ac:	0000046e 	andeq	r0, r0, lr, ror #8
    51b0:	0000047e 	andeq	r0, r0, lr, ror r4
    51b4:	0005090e 	andeq	r0, r5, lr, lsl #18
    51b8:	0d120f00 	ldceq	15, cr0, [r2, #-0]
    51bc:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    51c0:	00000000 	andeq	r0, r0, r0
    51c4:	001ce01e 	andseq	lr, ip, lr, lsl r0
    51c8:	16310100 	ldrtne	r0, [r1], -r0, lsl #2
    51cc:	00002608 	andeq	r2, r0, r8, lsl #12
    51d0:	00000079 	andeq	r0, r0, r9, ror r0
    51d4:	03100201 	tsteq	r0, #268435456	; 0x10000000
    51d8:	000003ca 	andeq	r0, r0, sl, asr #7
    51dc:	00049f01 	andeq	r9, r4, r1, lsl #30
    51e0:	0004af00 	andeq	sl, r4, r0, lsl #30
    51e4:	05090e00 	streq	r0, [r9, #-3584]	; 0xfffff200
    51e8:	b70f0000 	strlt	r0, [pc, -r0]
    51ec:	0f000002 	svceq	0x00000002
    51f0:	00000079 	andeq	r0, r0, r9, ror r0
    51f4:	09ad1e00 	stmibeq	sp!, {r9, sl, fp, ip}
    51f8:	36010000 	strcc	r0, [r1], -r0
    51fc:	0028f712 	eoreq	pc, r8, r2, lsl r7	; <UNPREDICTABLE>
    5200:	0002aa00 	andeq	sl, r2, r0, lsl #20
    5204:	10020100 	andne	r0, r2, r0, lsl #2
    5208:	0003ca04 	andeq	ip, r3, r4, lsl #20
    520c:	04d00100 	ldrbeq	r0, [r0], #256	; 0x100
    5210:	04d60000 	ldrbeq	r0, [r6], #0
    5214:	090e0000 	stmdbeq	lr, {}	; <UNPREDICTABLE>
    5218:	00000005 	andeq	r0, r0, r5
    521c:	0024ea1b 	eoreq	lr, r4, fp, lsl sl
    5220:	123b0100 	eorsne	r0, fp, #0, 2
    5224:	000027bb 			; <UNDEFINED> instruction: 0x000027bb
    5228:	000002aa 	andeq	r0, r0, sl, lsr #5
    522c:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    5230:	000003ca 	andeq	r0, r0, sl, asr #7
    5234:	0004f301 	andeq	pc, r4, r1, lsl #6
    5238:	05090e00 	streq	r0, [r9, #-3584]	; 0xfffff200
    523c:	a00f0000 	andge	r0, pc, r0
    5240:	0f000000 	svceq	0x00000000
    5244:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    5248:	ca030000 	bgt	c5250 <_bss_end+0xb3560>
    524c:	16000003 	strne	r0, [r0], -r3
    5250:	0003ca04 	andeq	ip, r3, r4, lsl #20
    5254:	05090300 	streq	r0, [r9, #-768]	; 0xfffffd00
    5258:	681f0000 	ldmdavs	pc, {}	; <UNPREDICTABLE>
    525c:	0b006c61 	bleq	203e8 <_bss_end+0xe6f8>
    5260:	060d0b05 	streq	r0, [sp], -r5, lsl #22
    5264:	87200000 	strhi	r0, [r0, -r0]!
    5268:	0b000004 	bleq	5280 <CPSR_IRQ_INHIBIT+0x5200>
    526c:	00961c07 	addseq	r1, r6, r7, lsl #24
    5270:	b2800000 	addlt	r0, r0, #0
    5274:	cc200ee6 	stcgt	14, cr0, [r0], #-920	; 0xfffffc68
    5278:	0b000005 	bleq	5294 <CPSR_IRQ_INHIBIT+0x5214>
    527c:	06191d0a 	ldreq	r1, [r9], -sl, lsl #26
    5280:	00000000 	andeq	r0, r0, r0
    5284:	52202000 	eorpl	r2, r0, #0
    5288:	0b000004 	bleq	52a0 <CPSR_IRQ_INHIBIT+0x5220>
    528c:	06191d0d 	ldreq	r1, [r9], -sp, lsl #26
    5290:	00000000 	andeq	r0, r0, r0
    5294:	8a212020 	bhi	84d31c <_bss_end+0x83b62c>
    5298:	0b000005 	bleq	52b4 <CPSR_IRQ_INHIBIT+0x5234>
    529c:	00851810 	addeq	r1, r5, r0, lsl r8
    52a0:	20360000 	eorscs	r0, r6, r0
    52a4:	00000373 	andeq	r0, r0, r3, ror r3
    52a8:	191d420b 	ldmdbne	sp, {r0, r1, r3, r9, lr}
    52ac:	00000006 	andeq	r0, r0, r6
    52b0:	20202150 	eorcs	r2, r0, r0, asr r1
    52b4:	0000034a 	andeq	r0, r0, sl, asr #6
    52b8:	191d710b 	ldmdbne	sp, {r0, r1, r3, r8, ip, sp, lr}
    52bc:	00000006 	andeq	r0, r0, r6
    52c0:	202000b2 	strhtcs	r0, [r0], -r2
    52c4:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    52c8:	191da40b 	ldmdbne	sp, {r0, r1, r3, sl, sp, pc}
    52cc:	00000006 	andeq	r0, r0, r6
    52d0:	202000b4 	strhtcs	r0, [r0], -r4
    52d4:	00000364 	andeq	r0, r0, r4, ror #6
    52d8:	191db30b 	ldmdbne	sp, {r0, r1, r3, r8, r9, ip, sp, pc}
    52dc:	00000006 	andeq	r0, r0, r6
    52e0:	20201040 	eorcs	r1, r0, r0, asr #32
    52e4:	00000331 	andeq	r0, r0, r1, lsr r3
    52e8:	191dbe0b 	ldmdbne	sp, {r0, r1, r3, r9, sl, fp, ip, sp, pc}
    52ec:	00000006 	andeq	r0, r0, r6
    52f0:	20202050 	eorcs	r2, r0, r0, asr r0
    52f4:	000003ef 	andeq	r0, r0, pc, ror #7
    52f8:	191dbf0b 	ldmdbne	sp, {r0, r1, r3, r8, r9, sl, fp, ip, sp, pc}
    52fc:	00000006 	andeq	r0, r0, r6
    5300:	20208040 	eorcs	r8, r0, r0, asr #32
    5304:	0000045c 	andeq	r0, r0, ip, asr r4
    5308:	191dc00b 	ldmdbne	sp, {r0, r1, r3, lr, pc}
    530c:	00000006 	andeq	r0, r0, r6
    5310:	22208050 	eorcs	r8, r0, #80	; 0x50
    5314:	000007a1 	andeq	r0, r0, r1, lsr #15
    5318:	00380405 	eorseq	r0, r8, r5, lsl #8
    531c:	c20b0000 	andgt	r0, fp, #0
    5320:	358a0810 	strcc	r0, [sl, #2064]	; 0x810
    5324:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5328:	00000a0c 	andeq	r0, r0, ip, lsl #20
    532c:	094a0801 	stmdbeq	sl, {r0, fp}^
    5330:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5334:	0000128b 	andeq	r1, r0, fp, lsl #5
    5338:	08680803 	stmdaeq	r8!, {r0, r1, fp}^
    533c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    5340:	00000803 	andeq	r0, r0, r3, lsl #16
    5344:	07490805 	strbeq	r0, [r9, -r5, lsl #16]
    5348:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    534c:	000007e4 	andeq	r0, r0, r4, ror #15
    5350:	23000007 	movwcs	r0, #7
    5354:	00000520 	andeq	r0, r0, r0, lsr #10
    5358:	8c070402 	cfstrshi	mvf0, [r7], {2}
    535c:	03000045 	movweq	r0, #69	; 0x45
    5360:	00000612 	andeq	r0, r0, r2, lsl r6
    5364:	00053023 	andeq	r3, r5, r3, lsr #32
    5368:	05402300 	strbeq	r2, [r0, #-768]	; 0xfffffd00
    536c:	50230000 	eorpl	r0, r3, r0
    5370:	23000005 	movwcs	r0, #5
    5374:	0000055d 	andeq	r0, r0, sp, asr r5
    5378:	00056d23 	andeq	r6, r5, r3, lsr #26
    537c:	057d2300 	ldrbeq	r2, [sp, #-768]!	; 0xfffffd00
    5380:	8d230000 	stchi	0, cr0, [r3, #-0]
    5384:	23000005 	movwcs	r0, #5
    5388:	0000059d 	muleq	r0, sp, r5
    538c:	0005ad23 	andeq	sl, r5, r3, lsr #26
    5390:	05bd2300 	ldreq	r2, [sp, #768]!	; 0x300
    5394:	4d070000 	stcmi	0, cr0, [r7, #-0]
    5398:	07000005 	streq	r0, [r0, -r5]
    539c:	00008f04 	andeq	r8, r0, r4, lsl #30
    53a0:	0c070c00 	stceq	12, cr0, [r7], {-0}
    53a4:	00000699 	muleq	r0, r9, r6
    53a8:	0002dc08 	andeq	sp, r2, r8, lsl #24
    53ac:	1d080000 	stcne	0, cr0, [r8, #-0]
    53b0:	01000005 	tsteq	r0, r5
    53b4:	00021508 	andeq	r1, r2, r8, lsl #10
    53b8:	0f080200 	svceq	0x00080200
    53bc:	03000002 	movweq	r0, #2
    53c0:	0001f708 	andeq	pc, r1, r8, lsl #14
    53c4:	fd080400 	stc2	4, cr0, [r8, #-0]
    53c8:	05000001 	streq	r0, [r0, #-1]
    53cc:	00020308 	andeq	r0, r2, r8, lsl #6
    53d0:	09080600 	stmdbeq	r8, {r9, sl}
    53d4:	07000002 	streq	r0, [r0, -r2]
    53d8:	00072808 	andeq	r2, r7, r8, lsl #16
    53dc:	0a000800 	beq	73e4 <CPSR_IRQ_INHIBIT+0x7364>
    53e0:	0000071a 	andeq	r0, r0, sl, lsl r7
    53e4:	071b0c14 			; <UNDEFINED> instruction: 0x071b0c14
    53e8:	00000894 	muleq	r0, r4, r8
    53ec:	0004020c 	andeq	r0, r4, ip, lsl #4
    53f0:	221f0c00 	andscs	r0, pc, #0, 24
    53f4:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    53f8:	02c10c00 	sbceq	r0, r1, #0, 24
    53fc:	220c0000 	andcs	r0, ip, #0
    5400:	0008a40e 	andeq	sl, r8, lr, lsl #8
    5404:	f10c0400 			; <UNDEFINED> instruction: 0xf10c0400
    5408:	0c000004 	stceq	0, cr0, [r0], {4}
    540c:	08a40e24 	stmiaeq	r4!, {r2, r5, r9, sl, fp}
    5410:	110c0000 	mrsne	r0, (UNDEF: 12)
    5414:	0000043e 	andeq	r0, r0, lr, lsr r4
    5418:	ac0a280c 	stcge	8, cr2, [sl], {12}
    541c:	aa000003 	bge	5430 <CPSR_IRQ_INHIBIT+0x53b0>
    5420:	02000002 	andeq	r0, r0, #2
    5424:	000006e6 	andeq	r0, r0, r6, ror #13
    5428:	000006fb 	strdeq	r0, [r0], -fp
    542c:	0008b40e 	andeq	fp, r8, lr, lsl #8
    5430:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    5434:	ba0f0000 	blt	3c543c <_bss_end+0x3b374c>
    5438:	0f000008 	svceq	0x00000008
    543c:	000008ba 			; <UNDEFINED> instruction: 0x000008ba
    5440:	04de1100 	ldrbeq	r1, [lr], #256	; 0x100
    5444:	2a0c0000 	bcs	30544c <_bss_end+0x2f375c>
    5448:	0004af0a 	andeq	sl, r4, sl, lsl #30
    544c:	0002aa00 	andeq	sl, r2, r0, lsl #20
    5450:	07140200 	ldreq	r0, [r4, -r0, lsl #4]
    5454:	07290000 	streq	r0, [r9, -r0]!
    5458:	b40e0000 	strlt	r0, [lr], #-0
    545c:	0f000008 	svceq	0x00000008
    5460:	00000079 	andeq	r0, r0, r9, ror r0
    5464:	0008ba0f 	andeq	fp, r8, pc, lsl #20
    5468:	08ba0f00 	ldmeq	sl!, {r8, r9, sl, fp}
    546c:	11000000 	mrsne	r0, (UNDEF: 0)
    5470:	0000062d 	andeq	r0, r0, sp, lsr #12
    5474:	ad0a2c0c 	stcge	12, cr2, [sl, #-48]	; 0xffffffd0
    5478:	aa000006 	bge	5498 <CPSR_IRQ_INHIBIT+0x5418>
    547c:	02000002 	andeq	r0, r0, #2
    5480:	00000742 	andeq	r0, r0, r2, asr #14
    5484:	00000757 	andeq	r0, r0, r7, asr r7
    5488:	0008b40e 	andeq	fp, r8, lr, lsl #8
    548c:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    5490:	ba0f0000 	blt	3c5498 <_bss_end+0x3b37a8>
    5494:	0f000008 	svceq	0x00000008
    5498:	000008ba 			; <UNDEFINED> instruction: 0x000008ba
    549c:	04661100 	strbteq	r1, [r6], #-256	; 0xffffff00
    54a0:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    54a4:	0005fe0a 	andeq	pc, r5, sl, lsl #28
    54a8:	0002aa00 	andeq	sl, r2, r0, lsl #20
    54ac:	07700200 	ldrbeq	r0, [r0, -r0, lsl #4]!
    54b0:	07850000 	streq	r0, [r5, r0]
    54b4:	b40e0000 	strlt	r0, [lr], #-0
    54b8:	0f000008 	svceq	0x00000008
    54bc:	00000079 	andeq	r0, r0, r9, ror r0
    54c0:	0008ba0f 	andeq	fp, r8, pc, lsl #20
    54c4:	08ba0f00 	ldmeq	sl!, {r8, r9, sl, fp}
    54c8:	11000000 	mrsne	r0, (UNDEF: 0)
    54cc:	0000071a 	andeq	r0, r0, sl, lsl r7
    54d0:	b505310c 	strlt	r3, [r5, #-268]	; 0xfffffef4
    54d4:	c0000005 	andgt	r0, r0, r5
    54d8:	01000008 	tsteq	r0, r8
    54dc:	0000079e 	muleq	r0, lr, r7
    54e0:	000007a9 	andeq	r0, r0, r9, lsr #15
    54e4:	0008c00e 	andeq	ip, r8, lr
    54e8:	008f0f00 	addeq	r0, pc, r0, lsl #30
    54ec:	12000000 	andne	r0, r0, #0
    54f0:	0000028a 	andeq	r0, r0, sl, lsl #5
    54f4:	240a340c 	strcs	r3, [sl], #-1036	; 0xfffffbf4
    54f8:	01000005 	tsteq	r0, r5
    54fc:	000007be 			; <UNDEFINED> instruction: 0x000007be
    5500:	000007ce 	andeq	r0, r0, lr, asr #15
    5504:	0008c00e 	andeq	ip, r8, lr
    5508:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    550c:	500f0000 	andpl	r0, pc, r0
    5510:	00000006 	andeq	r0, r0, r6
    5514:	00057811 	andeq	r7, r5, r1, lsl r8
    5518:	14360c00 	ldrtne	r0, [r6], #-3072	; 0xfffff400
    551c:	000006ec 	andeq	r0, r0, ip, ror #13
    5520:	00000650 	andeq	r0, r0, r0, asr r6
    5524:	0007e701 	andeq	lr, r7, r1, lsl #14
    5528:	0007f200 	andeq	pc, r7, r0, lsl #4
    552c:	08b40e00 	ldmeq	r4!, {r9, sl, fp}
    5530:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5534:	00000000 	andeq	r0, r0, r0
    5538:	00051912 	andeq	r1, r5, r2, lsl r9
    553c:	0a390c00 	beq	e48544 <_bss_end+0xe36854>
    5540:	00000416 	andeq	r0, r0, r6, lsl r4
    5544:	00080701 	andeq	r0, r8, r1, lsl #14
    5548:	00081700 	andeq	r1, r8, r0, lsl #14
    554c:	08c00e00 	stmiaeq	r0, {r9, sl, fp}^
    5550:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5554:	0f000000 	svceq	0x00000000
    5558:	000002aa 	andeq	r0, r0, sl, lsr #5
    555c:	02d81100 	sbcseq	r1, r8, #0, 2
    5560:	3c0c0000 	stccc	0, cr0, [ip], {-0}
    5564:	00026b0a 	andeq	r6, r2, sl, lsl #22
    5568:	0002aa00 	andeq	sl, r2, r0, lsl #20
    556c:	08300100 	ldmdaeq	r0!, {r8}
    5570:	083b0000 	ldmdaeq	fp!, {}	; <UNPREDICTABLE>
    5574:	c00e0000 	andgt	r0, lr, r0
    5578:	0f000008 	svceq	0x00000008
    557c:	00000079 	andeq	r0, r0, r9, ror r0
    5580:	05ed1100 	strbeq	r1, [sp, #256]!	; 0x100
    5584:	3f0c0000 	svccc	0x000c0000
    5588:	0001d30a 	andeq	sp, r1, sl, lsl #6
    558c:	0002aa00 	andeq	sl, r2, r0, lsl #20
    5590:	08540100 	ldmdaeq	r4, {r8}^
    5594:	08690000 	stmdaeq	r9!, {}^	; <UNPREDICTABLE>
    5598:	c00e0000 	andgt	r0, lr, r0
    559c:	0f000008 	svceq	0x00000008
    55a0:	00000079 	andeq	r0, r0, r9, ror r0
    55a4:	0002aa0f 	andeq	sl, r2, pc, lsl #20
    55a8:	02aa0f00 	adceq	r0, sl, #0, 30
    55ac:	13000000 	movwne	r0, #0
    55b0:	000005a3 	andeq	r0, r0, r3, lsr #11
    55b4:	fe0a410c 	cdp2	1, 0, cr4, cr10, cr12, {0}
    55b8:	aa000002 	bge	55c8 <CPSR_IRQ_INHIBIT+0x5548>
    55bc:	01000002 	tsteq	r0, r2
    55c0:	0000087e 	andeq	r0, r0, lr, ror r8
    55c4:	0008c00e 	andeq	ip, r8, lr
    55c8:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    55cc:	aa0f0000 	bge	3c55d4 <_bss_end+0x3b38e4>
    55d0:	0f000002 	svceq	0x00000002
    55d4:	000002aa 	andeq	r0, r0, sl, lsr #5
    55d8:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    55dc:	16000006 	strne	r0, [r0], -r6
    55e0:	00009b04 	andeq	r9, r0, r4, lsl #22
    55e4:	08990300 	ldmeq	r9, {r8, r9}
    55e8:	79140000 	ldmdbvc	r4, {}	; <UNPREDICTABLE>
    55ec:	b4000000 	strlt	r0, [r0], #-0
    55f0:	15000008 	strne	r0, [r0, #-8]
    55f4:	0000008f 	andeq	r0, r0, pc, lsl #1
    55f8:	04160001 	ldreq	r0, [r6], #-1
    55fc:	00000894 	muleq	r0, r4, r8
    5600:	00790424 	rsbseq	r0, r9, r4, lsr #8
    5604:	04160000 	ldreq	r0, [r6], #-0
    5608:	00000699 	muleq	r0, r9, r6
    560c:	0004a925 	andeq	sl, r4, r5, lsr #18
    5610:	16450c00 	strbne	r0, [r5], -r0, lsl #24
    5614:	00000699 	muleq	r0, r9, r6
    5618:	0013be0b 	andseq	fp, r3, fp, lsl #28
    561c:	08021000 	stmdaeq	r2, {ip}
    5620:	00091408 	andeq	r1, r9, r8, lsl #8
    5624:	0d080c00 	stceq	12, cr0, [r8, #-0]
    5628:	0a020000 	beq	85630 <_bss_end+0x73940>
    562c:	00091420 	andeq	r1, r9, r0, lsr #8
    5630:	050c0000 	streq	r0, [ip, #-0]
    5634:	0200000e 	andeq	r0, r0, #14
    5638:	0914200b 	ldmdbeq	r4, {r0, r1, r3, sp}
    563c:	0c040000 	stceq	0, cr0, [r4], {-0}
    5640:	00000e52 	andeq	r0, r0, r2, asr lr
    5644:	790e0c02 	stmdbvc	lr, {r1, sl, fp}
    5648:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    564c:	000ea60c 	andeq	sl, lr, ip, lsl #12
    5650:	0a0d0200 	beq	345e58 <_bss_end+0x334168>
    5654:	000002aa 	andeq	r0, r0, sl, lsr #5
    5658:	0416000c 	ldreq	r0, [r6], #-12
    565c:	000008d2 	ldrdeq	r0, [r0], -r2
    5660:	000e0a0a 	andeq	r0, lr, sl, lsl #20
    5664:	10020400 	andne	r0, r2, r0, lsl #8
    5668:	0009b207 	andeq	fp, r9, r7, lsl #4
    566c:	13440c00 	movtne	r0, #19456	; 0x4c00
    5670:	13020000 	movwne	r0, #8192	; 0x2000
    5674:	00091420 	andeq	r1, r9, r0, lsr #8
    5678:	85260000 	strhi	r0, [r6, #-0]!
    567c:	02000013 	andeq	r0, r0, #19
    5680:	0d0d2015 	stceq	0, cr2, [sp, #-84]	; 0xffffffac
    5684:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    5688:	094c0000 	stmdbeq	ip, {}^	; <UNPREDICTABLE>
    568c:	09520000 	ldmdbeq	r2, {}^	; <UNPREDICTABLE>
    5690:	b20e0000 	andlt	r0, lr, #0
    5694:	00000009 	andeq	r0, r0, r9
    5698:	000e0a11 	andeq	r0, lr, r1, lsl sl
    569c:	05180200 	ldreq	r0, [r8, #-512]	; 0xfffffe00
    56a0:	00001326 	andeq	r1, r0, r6, lsr #6
    56a4:	000009b2 			; <UNDEFINED> instruction: 0x000009b2
    56a8:	00096b01 	andeq	r6, r9, r1, lsl #22
    56ac:	00097100 	andeq	r7, r9, r0, lsl #2
    56b0:	09b20e00 	ldmibeq	r2!, {r9, sl, fp}
    56b4:	11000000 	mrsne	r0, (UNDEF: 0)
    56b8:	00000ee5 	andeq	r0, r0, r5, ror #29
    56bc:	ba0b1a02 	blt	2cbecc <_bss_end+0x2ba1dc>
    56c0:	b8000011 	stmdalt	r0, {r0, r4}
    56c4:	01000009 	tsteq	r0, r9
    56c8:	0000098a 	andeq	r0, r0, sl, lsl #19
    56cc:	00000995 	muleq	r0, r5, r9
    56d0:	0009b20e 	andeq	fp, r9, lr, lsl #4
    56d4:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    56d8:	27000000 	strcs	r0, [r0, -r0]
    56dc:	000013ac 	andeq	r1, r0, ip, lsr #7
    56e0:	d30a1b02 	movwle	r1, #43778	; 0xab02
    56e4:	01000010 	tsteq	r0, r0, lsl r0
    56e8:	000009a6 	andeq	r0, r0, r6, lsr #19
    56ec:	0009b20e 	andeq	fp, r9, lr, lsl #4
    56f0:	09b80f00 	ldmibeq	r8!, {r8, r9, sl, fp}
    56f4:	00000000 	andeq	r0, r0, r0
    56f8:	091a0416 	ldmdbeq	sl, {r1, r2, r4, sl}
    56fc:	04280000 	strteq	r0, [r8], #-0
    5700:	0037fa25 	eorseq	pc, r7, r5, lsr #20
    5704:	1d240200 	sfmne	f0, 4, [r4, #-0]
    5708:	0000091a 	andeq	r0, r0, sl, lsl r9
    570c:	0027fa17 	eoreq	pc, r7, r7, lsl sl	; <UNPREDICTABLE>
    5710:	4f030400 	svcmi	0x00030400
    5714:	0002c207 	andeq	ip, r2, r7, lsl #4
    5718:	000aae00 	andeq	sl, sl, r0, lsl #28
    571c:	02c22900 	sbceq	r2, r2, #0, 18
    5720:	01000000 	mrseq	r0, (UNDEF: 0)
    5724:	0027f918 	eoreq	pc, r7, r8, lsl r9	; <UNPREDICTABLE>
    5728:	00218d00 	eoreq	r8, r1, r0, lsl #26
    572c:	0009b800 	andeq	fp, r9, r0, lsl #16
    5730:	09f40100 	ldmibeq	r4!, {r8}^
    5734:	09ff0000 	ldmibeq	pc!, {}^	; <UNPREDICTABLE>
    5738:	da0e0000 	ble	385740 <_bss_end+0x373a50>
    573c:	0e000021 	cdpeq	0, 0, cr0, cr0, cr1, {1}
    5740:	00000038 	andeq	r0, r0, r8, lsr r0
    5744:	27fa1800 	ldrbcs	r1, [sl, r0, lsl #16]!
    5748:	26970000 	ldrcs	r0, [r7], r0
    574c:	21da0000 	bicscs	r0, sl, r0
    5750:	15010000 	strne	r0, [r1, #-0]
    5754:	2000000a 	andcs	r0, r0, sl
    5758:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    575c:	000021da 	ldrdeq	r2, [r0], -sl
    5760:	0021e50f 	eoreq	lr, r1, pc, lsl #10
    5764:	fa180000 	blx	60576c <_bss_end+0x5f3a7c>
    5768:	d9000027 	stmdble	r0, {r0, r1, r2, r5}
    576c:	da000021 	ble	57f8 <CPSR_IRQ_INHIBIT+0x5778>
    5770:	01000021 	tsteq	r0, r1, lsr #32
    5774:	00000a36 	andeq	r0, r0, r6, lsr sl
    5778:	00000a41 	andeq	r0, r0, r1, asr #20
    577c:	0021da0e 	eoreq	sp, r1, lr, lsl #20
    5780:	21eb0f00 	mvncs	r0, r0, lsl #30
    5784:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5788:	000027fa 	strdeq	r2, [r0], -sl
    578c:	000027e0 	andeq	r2, r0, r0, ror #15
    5790:	000021da 	ldrdeq	r2, [r0], -sl
    5794:	000a5701 	andeq	r5, sl, r1, lsl #14
    5798:	000a5d00 	andeq	r5, sl, r0, lsl #26
    579c:	21da0e00 	bicscs	r0, sl, r0, lsl #28
    57a0:	1a000000 	bne	57a8 <CPSR_IRQ_INHIBIT+0x5728>
    57a4:	000025cf 	andeq	r2, r0, pc, asr #11
    57a8:	c6125203 	ldrgt	r5, [r2], -r3, lsl #4
    57ac:	01000024 	tsteq	r0, r4, lsr #32
    57b0:	c6001002 	strgt	r1, [r0], -r2
    57b4:	01000009 	tsteq	r0, r9
    57b8:	00000a7a 	andeq	r0, r0, sl, ror sl
    57bc:	00000a80 	andeq	r0, r0, r0, lsl #21
    57c0:	0021da0e 	eoreq	sp, r1, lr, lsl #20
    57c4:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    57c8:	03000023 	movweq	r0, #35	; 0x23
    57cc:	25071457 	strcs	r1, [r7, #-1111]	; 0xfffffba9
    57d0:	05090000 	streq	r0, [r9, #-0]
    57d4:	02010000 	andeq	r0, r1, #0
    57d8:	09c60110 	stmibeq	r6, {r4, r8}^
    57dc:	9d010000 	stcls	0, cr0, [r1, #-0]
    57e0:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    57e4:	000021da 	ldrdeq	r2, [r0], -sl
    57e8:	0002b70f 	andeq	fp, r2, pc, lsl #14
    57ec:	01070f00 	tsteq	r7, r0, lsl #30
    57f0:	00000000 	andeq	r0, r0, r0
    57f4:	0009c603 	andeq	ip, r9, r3, lsl #12
    57f8:	1f742a00 	svcne	0x00742a00
    57fc:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    5800:	0009c611 	andeq	ip, r9, r1, lsl r6
    5804:	70030500 	andvc	r0, r3, r0, lsl #10
    5808:	0a00010b 	beq	5c3c <CPSR_IRQ_INHIBIT+0x5bbc>
    580c:	00000b98 	muleq	r0, r8, fp
    5810:	07030d18 	smladeq	r3, r8, sp, r0
    5814:	00000d06 	andeq	r0, r0, r6, lsl #26
    5818:	000b162b 	andeq	r1, fp, fp, lsr #12
    581c:	8f040700 	svchi	0x00040700
    5820:	0d000000 	stceq	0, cr0, [r0, #-0]
    5824:	f2011006 	vhadd.s8	d1, d1, d6
    5828:	2c00000a 	stccs	0, cr0, [r0], {10}
    582c:	00584548 	subseq	r4, r8, r8, asr #10
    5830:	45442c10 	strbmi	r2, [r4, #-3088]	; 0xfffff3f0
    5834:	000a0043 	andeq	r0, sl, r3, asr #32
    5838:	000ad203 	andeq	sp, sl, r3, lsl #4
    583c:	0b230b00 	bleq	8c8444 <_bss_end+0x8b6754>
    5840:	0d080000 	stceq	0, cr0, [r8, #-0]
    5844:	0b1b0c24 	bleq	6c88dc <_bss_end+0x6b6bec>
    5848:	792d0000 	pushvc	{}	; <UNPREDICTABLE>
    584c:	16260d00 	strtne	r0, [r6], -r0, lsl #26
    5850:	0000008f 	andeq	r0, r0, pc, lsl #1
    5854:	00782d00 	rsbseq	r2, r8, r0, lsl #26
    5858:	8f16270d 	svchi	0x0016270d
    585c:	04000000 	streq	r0, [r0], #-0
    5860:	0c752e00 	ldcleq	14, cr2, [r5], #-0
    5864:	0c0d0000 	stceq	0, cr0, [sp], {-0}
    5868:	000af21b 	andeq	pc, sl, fp, lsl r2	; <UNPREDICTABLE>
    586c:	2f0a0100 	svccs	0x000a0100
    5870:	00000be8 	andeq	r0, r0, r8, ror #23
    5874:	bd280d0d 	stclt	13, cr0, [r8, #-52]!	; 0xffffffcc
    5878:	01000002 	tsteq	r0, r2
    587c:	000b9830 	andeq	r9, fp, r0, lsr r8
    5880:	0e100d00 	cdpeq	13, 1, cr0, cr0, cr0, {0}
    5884:	00000c62 	andeq	r0, r0, r2, ror #24
    5888:	00000d06 	andeq	r0, r0, r6, lsl #26
    588c:	000b4f01 	andeq	r4, fp, r1, lsl #30
    5890:	000b6400 	andeq	r6, fp, r0, lsl #8
    5894:	0d060e00 	stceq	14, cr0, [r6, #-0]
    5898:	8f0f0000 	svchi	0x000f0000
    589c:	0f000000 	svceq	0x00000000
    58a0:	0000008f 	andeq	r0, r0, pc, lsl #1
    58a4:	00008f0f 	andeq	r8, r0, pc, lsl #30
    58a8:	a2120000 	andsge	r0, r2, #0
    58ac:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
    58b0:	0b830a12 	bleq	fe0c8100 <_bss_end+0xfe0b6410>
    58b4:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    58b8:	7f00000b 	svcvc	0x0000000b
    58bc:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    58c0:	00000d06 	andeq	r0, r0, r6, lsl #26
    58c4:	0ba11100 	bleq	fe849ccc <_bss_end+0xfe837fdc>
    58c8:	140d0000 	strne	r0, [sp], #-0
    58cc:	000c050f 	andeq	r0, ip, pc, lsl #10
    58d0:	000d0c00 	andeq	r0, sp, r0, lsl #24
    58d4:	0b980100 	bleq	fe605cdc <_bss_end+0xfe5f3fec>
    58d8:	0ba30000 	bleq	fe8c58e0 <_bss_end+0xfe8b3bf0>
    58dc:	060e0000 	streq	r0, [lr], -r0
    58e0:	0f00000d 	svceq	0x0000000d
    58e4:	00000025 	andeq	r0, r0, r5, lsr #32
    58e8:	0ba11100 	bleq	fe849cf0 <_bss_end+0xfe838000>
    58ec:	150d0000 	strne	r0, [sp, #-0]
    58f0:	000bac0f 	andeq	sl, fp, pc, lsl #24
    58f4:	000d0c00 	andeq	r0, sp, r0, lsl #24
    58f8:	0bbc0100 	bleq	fef05d00 <_bss_end+0xfeef4010>
    58fc:	0bc70000 	bleq	ff1c5904 <_bss_end+0xff1b3c14>
    5900:	060e0000 	streq	r0, [lr], -r0
    5904:	0f00000d 	svceq	0x0000000d
    5908:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    590c:	0ba11100 	bleq	fe849d14 <_bss_end+0xfe838024>
    5910:	160d0000 	strne	r0, [sp], -r0
    5914:	000c890f 	andeq	r8, ip, pc, lsl #18
    5918:	000d0c00 	andeq	r0, sp, r0, lsl #24
    591c:	0be00100 	bleq	ff805d24 <_bss_end+0xff7f4034>
    5920:	0beb0000 	bleq	ffac5928 <_bss_end+0xffab3c38>
    5924:	060e0000 	streq	r0, [lr], -r0
    5928:	0f00000d 	svceq	0x0000000d
    592c:	00000ad2 	ldrdeq	r0, [r0], -r2
    5930:	0ba11100 	bleq	fe849d38 <_bss_end+0xfe838048>
    5934:	170d0000 	strne	r0, [sp, -r0]
    5938:	000c340f 	andeq	r3, ip, pc, lsl #8
    593c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    5940:	0c040100 	stfeqs	f0, [r4], {-0}
    5944:	0c0f0000 	stceq	0, cr0, [pc], {-0}
    5948:	060e0000 	streq	r0, [lr], -r0
    594c:	0f00000d 	svceq	0x0000000d
    5950:	0000008f 	andeq	r0, r0, pc, lsl #1
    5954:	0ba11100 	bleq	fe849d5c <_bss_end+0xfe83806c>
    5958:	180d0000 	stmdane	sp, {}	; <UNPREDICTABLE>
    595c:	000bf40f 	andeq	pc, fp, pc, lsl #8
    5960:	000d0c00 	andeq	r0, sp, r0, lsl #24
    5964:	0c280100 	stfeqs	f0, [r8], #-0
    5968:	0c330000 	ldceq	0, cr0, [r3], #-0
    596c:	060e0000 	streq	r0, [lr], -r0
    5970:	0f00000d 	svceq	0x0000000d
    5974:	000002aa 	andeq	r0, r0, sl, lsr #5
    5978:	0ab43100 	beq	fed11d80 <_bss_end+0xfed00090>
    597c:	1b0d0000 	blne	345984 <_bss_end+0x333c94>
    5980:	000a8411 	andeq	r8, sl, r1, lsl r4
    5984:	000c4700 	andeq	r4, ip, r0, lsl #14
    5988:	000c4d00 	andeq	r4, ip, r0, lsl #26
    598c:	0d060e00 	stceq	14, cr0, [r6, #-0]
    5990:	31000000 	mrscc	r0, (UNDEF: 0)
    5994:	00000aa7 	andeq	r0, r0, r7, lsr #21
    5998:	45111c0d 	ldrmi	r1, [r1, #-3085]	; 0xfffff3f3
    599c:	6100000c 	tstvs	r0, ip
    59a0:	6700000c 	strvs	r0, [r0, -ip]
    59a4:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    59a8:	00000d06 	andeq	r0, r0, r6, lsl #26
    59ac:	0a5f3100 	beq	17d1db4 <_bss_end+0x17c00c4>
    59b0:	1d0d0000 	stcne	0, cr0, [sp, #-0]
    59b4:	000b2d11 	andeq	r2, fp, r1, lsl sp
    59b8:	000c7b00 	andeq	r7, ip, r0, lsl #22
    59bc:	000c8100 	andeq	r8, ip, r0, lsl #2
    59c0:	0d060e00 	stceq	14, cr0, [r6, #-0]
    59c4:	31000000 	mrscc	r0, (UNDEF: 0)
    59c8:	000013e1 	andeq	r1, r0, r1, ror #7
    59cc:	1e0a1f0d 	cdpne	15, 0, cr1, cr10, cr13, {0}
    59d0:	9500000c 	strls	r0, [r0, #-12]
    59d4:	9b00000c 	blls	5a0c <CPSR_IRQ_INHIBIT+0x598c>
    59d8:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    59dc:	00000d06 	andeq	r0, r0, r6, lsl #26
    59e0:	0aa23100 	beq	fe891de8 <_bss_end+0xfe8800f8>
    59e4:	210d0000 	mrscs	r0, (UNDEF: 13)
    59e8:	000bbf0a 	andeq	fp, fp, sl, lsl #30
    59ec:	000caf00 	andeq	sl, ip, r0, lsl #30
    59f0:	000cc400 	andeq	ip, ip, r0, lsl #8
    59f4:	0d060e00 	stceq	14, cr0, [r6, #-0]
    59f8:	8f0f0000 	svchi	0x000f0000
    59fc:	0f000000 	svceq	0x00000000
    5a00:	00000d12 	andeq	r0, r0, r2, lsl sp
    5a04:	00008f0f 	andeq	r8, r0, pc, lsl #30
    5a08:	4f0c0000 	svcmi	0x000c0000
    5a0c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    5a10:	0d1e232b 	ldceq	3, cr2, [lr, #-172]	; 0xffffff54
    5a14:	0c000000 	stceq	0, cr0, [r0], {-0}
    5a18:	00000c16 	andeq	r0, r0, r6, lsl ip
    5a1c:	8f122c0d 	svchi	0x00122c0d
    5a20:	04000000 	streq	r0, [r0], #-0
    5a24:	000bd60c 	andeq	sp, fp, ip, lsl #12
    5a28:	122d0d00 	eorne	r0, sp, #0, 26
    5a2c:	0000008f 	andeq	r0, r0, pc, lsl #1
    5a30:	0bdf0c08 	bleq	ff7c8a58 <_bss_end+0xff7b6d68>
    5a34:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    5a38:	000af70f 	andeq	pc, sl, pc, lsl #14
    5a3c:	510c0c00 	tstpl	ip, r0, lsl #24
    5a40:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    5a44:	0ad2122f 	beq	ff48a308 <_bss_end+0xff478618>
    5a48:	00140000 	andseq	r0, r4, r0
    5a4c:	0ac50416 	beq	ff146aac <_bss_end+0xff134dbc>
    5a50:	04240000 	strteq	r0, [r4], #-0
    5a54:	00000ac5 	andeq	r0, r0, r5, asr #21
    5a58:	00250416 	eoreq	r0, r5, r6, lsl r4
    5a5c:	04160000 	ldreq	r0, [r6], #-0
    5a60:	0000005c 	andeq	r0, r0, ip, asr r0
    5a64:	000d1803 	andeq	r1, sp, r3, lsl #16
    5a68:	0b682500 	bleq	1a0ee70 <_bss_end+0x19fd180>
    5a6c:	320d0000 	andcc	r0, sp, #0
    5a70:	000ac511 	andeq	ip, sl, r1, lsl r5
    5a74:	1f611700 	svcne	0x00611700
    5a78:	04040000 	streq	r0, [r4], #-0
    5a7c:	02c20745 	sbceq	r0, r2, #18087936	; 0x1140000
    5a80:	0e170000 	cdpeq	0, 1, cr0, cr7, cr0, {0}
    5a84:	c2290000 	eorgt	r0, r9, #0
    5a88:	00000002 	andeq	r0, r0, r2
    5a8c:	1f601801 	svcne	0x00601801
    5a90:	29b70000 	ldmibcs	r7!, {}	; <UNPREDICTABLE>
    5a94:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    5a98:	5d010000 	stcpl	0, cr0, [r1, #-0]
    5a9c:	6800000d 	stmdavs	r0, {r0, r2, r3}
    5aa0:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
    5aa4:	00002063 	andeq	r2, r0, r3, rrx
    5aa8:	0000380e 	andeq	r3, r0, lr, lsl #16
    5aac:	61180000 	tstvs	r8, r0
    5ab0:	2100001f 	tstcs	r0, pc, lsl r0
    5ab4:	63000021 	movwvs	r0, #33	; 0x21
    5ab8:	01000020 	tsteq	r0, r0, lsr #32
    5abc:	00000d7e 	andeq	r0, r0, lr, ror sp
    5ac0:	00000d89 	andeq	r0, r0, r9, lsl #27
    5ac4:	0020630e 	eoreq	r6, r0, lr, lsl #6
    5ac8:	206e0f00 	rsbcs	r0, lr, r0, lsl #30
    5acc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5ad0:	00001f61 	andeq	r1, r0, r1, ror #30
    5ad4:	00002e00 	andeq	r2, r0, r0, lsl #28
    5ad8:	00002063 	andeq	r2, r0, r3, rrx
    5adc:	000d9f01 	andeq	r9, sp, r1, lsl #30
    5ae0:	000daa00 	andeq	sl, sp, r0, lsl #20
    5ae4:	20630e00 	rsbcs	r0, r3, r0, lsl #28
    5ae8:	740f0000 	strvc	r0, [pc], #-0	; 5af0 <CPSR_IRQ_INHIBIT+0x5a70>
    5aec:	00000020 	andeq	r0, r0, r0, lsr #32
    5af0:	001f6118 	andseq	r6, pc, r8, lsl r1	; <UNPREDICTABLE>
    5af4:	001f1600 	andseq	r1, pc, r0, lsl #12
    5af8:	00206300 	eoreq	r6, r0, r0, lsl #6
    5afc:	0dc00100 	stfeqe	f0, [r0]
    5b00:	0dc60000 	stcleq	0, cr0, [r6]
    5b04:	630e0000 	movwvs	r0, #57344	; 0xe000
    5b08:	00000020 	andeq	r0, r0, r0, lsr #32
    5b0c:	0025cf1a 	eoreq	ip, r5, sl, lsl pc
    5b10:	12480400 	subne	r0, r8, #0, 8
    5b14:	0000207d 	andeq	r2, r0, sp, ror r0
    5b18:	00100201 	andseq	r0, r0, r1, lsl #4
    5b1c:	00000d2f 	andeq	r0, r0, pc, lsr #26
    5b20:	000de301 	andeq	lr, sp, r1, lsl #6
    5b24:	000de900 	andeq	lr, sp, r0, lsl #18
    5b28:	20630e00 	rsbcs	r0, r3, r0, lsl #28
    5b2c:	1b000000 	blne	5b34 <CPSR_IRQ_INHIBIT+0x5ab4>
    5b30:	000023f6 	strdeq	r2, [r0], -r6
    5b34:	2d144c04 	ldccs	12, cr4, [r4, #-16]
    5b38:	09000022 	stmdbeq	r0, {r1, r5}
    5b3c:	01000005 	tsteq	r0, r5
    5b40:	2f011002 	svccs	0x00011002
    5b44:	0100000d 	tsteq	r0, sp
    5b48:	00000e06 	andeq	r0, r0, r6, lsl #28
    5b4c:	0020630e 	eoreq	r6, r0, lr, lsl #6
    5b50:	02b70f00 	adcseq	r0, r7, #0, 30
    5b54:	070f0000 	streq	r0, [pc, -r0]
    5b58:	00000001 	andeq	r0, r0, r1
    5b5c:	0d2f0300 	stceq	3, cr0, [pc, #-0]	; 5b64 <CPSR_IRQ_INHIBIT+0x5ae4>
    5b60:	852a0000 	strhi	r0, [sl, #-0]!
    5b64:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    5b68:	0d2f1458 	cfstrseq	mvf1, [pc, #-352]!	; 5a10 <CPSR_IRQ_INHIBIT+0x5990>
    5b6c:	03050000 	movweq	r0, #20480	; 0x5000
    5b70:	00010b74 	andeq	r0, r1, r4, ror fp
    5b74:	0014b70a 	andseq	fp, r4, sl, lsl #14
    5b78:	070e1000 	streq	r1, [lr, -r0]
    5b7c:	000f3307 	andeq	r3, pc, r7, lsl #6
    5b80:	16900c00 	ldrne	r0, [r0], r0, lsl #24
    5b84:	0b0e0000 	bleq	385b8c <_bss_end+0x373e9c>
    5b88:	0000790e 	andeq	r7, r0, lr, lsl #18
    5b8c:	260c0000 	strcs	r0, [ip], -r0
    5b90:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    5b94:	00790e0d 	rsbseq	r0, r9, sp, lsl #28
    5b98:	0c040000 	stceq	0, cr0, [r4], {-0}
    5b9c:	00001588 	andeq	r1, r0, r8, lsl #11
    5ba0:	790e0f0e 	stmdbvc	lr, {r1, r2, r3, r8, r9, sl, fp}
    5ba4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5ba8:	0007650c 	andeq	r6, r7, ip, lsl #10
    5bac:	0a120e00 	beq	4893b4 <_bss_end+0x4776c4>
    5bb0:	000002aa 	andeq	r0, r0, sl, lsr #5
    5bb4:	14b7110c 	ldrtne	r1, [r7], #268	; 0x10c
    5bb8:	150e0000 	strne	r0, [lr, #-0]
    5bbc:	00155005 	andseq	r5, r5, r5
    5bc0:	000f3800 	andeq	r3, pc, r0, lsl #16
    5bc4:	0e880100 	rmfeqe	f0, f0, f0
    5bc8:	0e9d0000 	cdpeq	0, 9, cr0, cr13, cr0, {0}
    5bcc:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    5bd0:	0f00000f 	svceq	0x0000000f
    5bd4:	00000079 	andeq	r0, r0, r9, ror r0
    5bd8:	0000790f 	andeq	r7, r0, pc, lsl #18
    5bdc:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    5be0:	11000000 	mrsne	r0, (UNDEF: 0)
    5be4:	00000a20 	andeq	r0, r0, r0, lsr #20
    5be8:	000a180e 	andeq	r1, sl, lr, lsl #16
    5bec:	aa000016 	bge	5c4c <CPSR_IRQ_INHIBIT+0x5bcc>
    5bf0:	01000002 	tsteq	r0, r2
    5bf4:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    5bf8:	00000ebc 			; <UNDEFINED> instruction: 0x00000ebc
    5bfc:	000f380e 	andeq	r3, pc, lr, lsl #16
    5c00:	ad120000 	ldcge	0, cr0, [r2, #-0]
    5c04:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    5c08:	156b0a1a 	strbne	r0, [fp, #-2586]!	; 0xfffff5e6
    5c0c:	d1010000 	mrsle	r0, (UNDEF: 1)
    5c10:	d700000e 	strle	r0, [r0, -lr]
    5c14:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    5c18:	00000f38 	andeq	r0, r0, r8, lsr pc
    5c1c:	073f1100 	ldreq	r1, [pc, -r0, lsl #2]!
    5c20:	1c0e0000 	stcne	0, cr0, [lr], {-0}
    5c24:	00143a0a 	andseq	r3, r4, sl, lsl #20
    5c28:	0002aa00 	andeq	sl, r2, r0, lsl #20
    5c2c:	0ef00100 	cdpeq	1, 15, cr0, cr0, cr0, {0}
    5c30:	0ef60000 	cdpeq	0, 15, cr0, cr6, cr0, {0}
    5c34:	3e0e0000 	cdpcc	0, 0, cr0, cr14, cr0, {0}
    5c38:	0000000f 	andeq	r0, r0, pc
    5c3c:	00169b12 	andseq	r9, r6, r2, lsl fp
    5c40:	0a1f0e00 	beq	7c9448 <_bss_end+0x7b7758>
    5c44:	00001530 	andeq	r1, r0, r0, lsr r5
    5c48:	000f0b01 	andeq	r0, pc, r1, lsl #22
    5c4c:	000f1600 	andeq	r1, pc, r0, lsl #12
    5c50:	0f380e00 	svceq	0x00380e00
    5c54:	aa0f0000 	bge	3c5c5c <_bss_end+0x3b3f6c>
    5c58:	00000002 	andeq	r0, r0, r2
    5c5c:	00169b27 	andseq	r9, r6, r7, lsr #22
    5c60:	0a210e00 	beq	849468 <_bss_end+0x837778>
    5c64:	00001593 	muleq	r0, r3, r5
    5c68:	000f2701 	andeq	r2, pc, r1, lsl #14
    5c6c:	0f380e00 	svceq	0x00380e00
    5c70:	440f0000 	strmi	r0, [pc], #-0	; 5c78 <CPSR_IRQ_INHIBIT+0x5bf8>
    5c74:	00000000 	andeq	r0, r0, r0
    5c78:	0e2e0300 	cdpeq	3, 2, cr0, cr14, cr0, {0}
    5c7c:	04160000 	ldreq	r0, [r6], #-0
    5c80:	00000e2e 	andeq	r0, r0, lr, lsr #28
    5c84:	0f330416 	svceq	0x00330416
    5c88:	eb250000 	bl	945c90 <_bss_end+0x933fa0>
    5c8c:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    5c90:	0e2e1824 	cdpeq	8, 2, cr1, cr14, cr4, {1}
    5c94:	d50a0000 	strle	r0, [sl, #-0]
    5c98:	02000015 	andeq	r0, r0, #21
    5c9c:	3707070f 	strcc	r0, [r7, -pc, lsl #14]
    5ca0:	0c000010 	stceq	0, cr0, [r0], {16}
    5ca4:	00000765 	andeq	r0, r0, r5, ror #14
    5ca8:	aa0a0b0f 	bge	2888ec <_bss_end+0x276bfc>
    5cac:	00000002 	andeq	r0, r0, r2
    5cb0:	0015cd0c 	andseq	ip, r5, ip, lsl #26
    5cb4:	0a0d0f00 	beq	3498bc <_bss_end+0x337bcc>
    5cb8:	00000025 	andeq	r0, r0, r5, lsr #32
    5cbc:	161c1001 	ldrne	r1, [ip], -r1
    5cc0:	100f0000 	andne	r0, pc, r0
    5cc4:	00104c1a 	andseq	r4, r0, sl, lsl ip
    5cc8:	15d51100 	ldrbne	r1, [r5, #256]	; 0x100
    5ccc:	130f0000 	movwne	r0, #61440	; 0xf000
    5cd0:	0015b305 	andseq	fp, r5, r5, lsl #6
    5cd4:	00105100 	andseq	r5, r0, r0, lsl #2
    5cd8:	0f9c0100 	svceq	0x009c0100
    5cdc:	0fa20000 	svceq	0x00a20000
    5ce0:	510e0000 	mrspl	r0, (UNDEF: 14)
    5ce4:	00000010 	andeq	r0, r0, r0, lsl r0
    5ce8:	000a2011 	andeq	r2, sl, r1, lsl r0
    5cec:	0a160f00 	beq	5898f4 <_bss_end+0x577c04>
    5cf0:	000016a4 	andeq	r1, r0, r4, lsr #13
    5cf4:	000002aa 	andeq	r0, r0, sl, lsr #5
    5cf8:	000fbb01 	andeq	fp, pc, r1, lsl #22
    5cfc:	000fc100 	andeq	ip, pc, r0, lsl #2
    5d00:	10510e00 	subsne	r0, r1, r0, lsl #28
    5d04:	12000000 	andne	r0, r0, #0
    5d08:	000009ad 	andeq	r0, r0, sp, lsr #19
    5d0c:	080a180f 	stmdaeq	sl, {r0, r1, r2, r3, fp, ip}
    5d10:	01000015 	tsteq	r0, r5, lsl r0
    5d14:	00000fd6 	ldrdeq	r0, [r0], -r6
    5d18:	00000fdc 	ldrdeq	r0, [r0], -ip
    5d1c:	0010510e 	andseq	r5, r0, lr, lsl #2
    5d20:	3f110000 	svccc	0x00110000
    5d24:	0f000007 	svceq	0x00000007
    5d28:	14e50a1a 	strbtne	r0, [r5], #2586	; 0xa1a
    5d2c:	02aa0000 	adceq	r0, sl, #0
    5d30:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    5d34:	fb00000f 	blx	5d7a <CPSR_IRQ_INHIBIT+0x5cfa>
    5d38:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    5d3c:	00001057 	andeq	r1, r0, r7, asr r0
    5d40:	1ce01200 	sfmne	f1, 2, [r0]
    5d44:	1d0f0000 	stcne	0, cr0, [pc, #-0]	; 5d4c <CPSR_IRQ_INHIBIT+0x5ccc>
    5d48:	00164b0a 	andseq	r4, r6, sl, lsl #22
    5d4c:	10100100 	andsne	r0, r0, r0, lsl #2
    5d50:	101b0000 	andsne	r0, fp, r0
    5d54:	510e0000 	mrspl	r0, (UNDEF: 14)
    5d58:	0f000010 	svceq	0x00000010
    5d5c:	00000025 	andeq	r0, r0, r5, lsr #32
    5d60:	02d31300 	sbcseq	r1, r3, #0, 6
    5d64:	1f0f0000 	svcne	0x000f0000
    5d68:	0014c70a 	andseq	ip, r4, sl, lsl #14
    5d6c:	00002500 	andeq	r2, r0, r0, lsl #10
    5d70:	10300100 	eorsne	r0, r0, r0, lsl #2
    5d74:	570e0000 	strpl	r0, [lr, -r0]
    5d78:	00000010 	andeq	r0, r0, r0, lsl r0
    5d7c:	0f500300 	svceq	0x00500300
    5d80:	50140000 	andspl	r0, r4, r0
    5d84:	4c000000 	stcmi	0, cr0, [r0], {-0}
    5d88:	15000010 	strne	r0, [r0, #-16]
    5d8c:	0000008f 	andeq	r0, r0, pc, lsl #1
    5d90:	3c03005f 	stccc	0, cr0, [r3], {95}	; 0x5f
    5d94:	16000010 			; <UNDEFINED> instruction: 0x16000010
    5d98:	000f5004 	andeq	r5, pc, r4
    5d9c:	37041600 	strcc	r1, [r4, -r0, lsl #12]
    5da0:	25000010 	strcs	r0, [r0, #-16]
    5da4:	0000163a 	andeq	r1, r0, sl, lsr r6
    5da8:	5019220f 	andspl	r2, r9, pc, lsl #4
    5dac:	1700000f 	strne	r0, [r0, -pc]
    5db0:	00002f04 	andeq	r2, r0, r4, lsl #30
    5db4:	07410504 	strbeq	r0, [r1, -r4, lsl #10]
    5db8:	000002c2 	andeq	r0, r0, r2, asr #5
    5dbc:	00001151 	andeq	r1, r0, r1, asr r1
    5dc0:	0002c229 	andeq	ip, r2, r9, lsr #4
    5dc4:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    5dc8:	00002f03 	andeq	r2, r0, r3, lsl #30
    5dcc:	00002488 	andeq	r2, r0, r8, lsl #9
    5dd0:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    5dd4:	00109701 	andseq	r9, r0, r1, lsl #14
    5dd8:	0010a200 	andseq	sl, r0, r0, lsl #4
    5ddc:	1ef10e00 	cdpne	14, 15, cr0, cr1, cr0, {0}
    5de0:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    5de4:	00000000 	andeq	r0, r0, r0
    5de8:	002f0418 	eoreq	r0, pc, r8, lsl r4	; <UNPREDICTABLE>
    5dec:	00284600 	eoreq	r4, r8, r0, lsl #12
    5df0:	001ef100 	andseq	pc, lr, r0, lsl #2
    5df4:	10b80100 	adcsne	r0, r8, r0, lsl #2
    5df8:	10c30000 	sbcne	r0, r3, r0
    5dfc:	f10e0000 	cpsid	,#0
    5e00:	0f00001e 	svceq	0x0000001e
    5e04:	00001efc 	strdeq	r1, [r0], -ip
    5e08:	2f041800 	svccs	0x00041800
    5e0c:	2d380000 	ldccs	0, cr0, [r8, #-0]
    5e10:	1ef10000 	cdpne	0, 15, cr0, cr1, cr0, {0}
    5e14:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    5e18:	e4000010 	str	r0, [r0], #-16
    5e1c:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    5e20:	00001ef1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5e24:	001f020f 	andseq	r0, pc, pc, lsl #4
    5e28:	04180000 	ldreq	r0, [r8], #-0
    5e2c:	4900002f 	stmdbmi	r0, {r0, r1, r2, r3, r5}
    5e30:	f100002c 			; <UNDEFINED> instruction: 0xf100002c
    5e34:	0100001e 	tsteq	r0, lr, lsl r0
    5e38:	000010fa 	strdeq	r1, [r0], -sl
    5e3c:	00001100 	andeq	r1, r0, r0, lsl #2
    5e40:	001ef10e 	andseq	pc, lr, lr, lsl #2
    5e44:	cf1a0000 	svcgt	0x001a0000
    5e48:	05000025 	streq	r0, [r0, #-37]	; 0xffffffdb
    5e4c:	2ab91244 	bcs	fee4a764 <_bss_end+0xfee38a74>
    5e50:	02010000 	andeq	r0, r1, #0
    5e54:	10690010 	rsbne	r0, r9, r0, lsl r0
    5e58:	1d010000 	stcne	0, cr0, [r1, #-0]
    5e5c:	23000011 	movwcs	r0, #17
    5e60:	0e000011 	mcreq	0, 0, r0, cr0, cr1, {0}
    5e64:	00001ef1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5e68:	23f61b00 	mvnscs	r1, #0, 22
    5e6c:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    5e70:	002a5514 	eoreq	r5, sl, r4, lsl r5
    5e74:	00050900 	andeq	r0, r5, r0, lsl #18
    5e78:	10020100 	andne	r0, r2, r0, lsl #2
    5e7c:	00106901 	andseq	r6, r0, r1, lsl #18
    5e80:	11400100 	mrsne	r0, (UNDEF: 80)
    5e84:	f10e0000 	cpsid	,#0
    5e88:	0f00001e 	svceq	0x0000001e
    5e8c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    5e90:	0001070f 	andeq	r0, r1, pc, lsl #14
    5e94:	03000000 	movweq	r0, #0
    5e98:	00001069 	andeq	r1, r0, r9, rrx
    5e9c:	00232c2a 	eoreq	r2, r3, sl, lsr #24
    5ea0:	1c560500 	cfldr64ne	mvdx0, [r6], {-0}
    5ea4:	00001069 	andeq	r1, r0, r9, rrx
    5ea8:	0b780305 	bleq	1e06ac4 <_bss_end+0x1df4dd4>
    5eac:	68170001 	ldmdavs	r7, {r0}
    5eb0:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    5eb4:	c2073d06 	andgt	r3, r7, #384	; 0x180
    5eb8:	50000002 	andpl	r0, r0, r2
    5ebc:	29000012 	stmdbcs	r0, {r1, r4}
    5ec0:	000002c2 	andeq	r0, r0, r2, asr #5
    5ec4:	67180100 	ldrvs	r0, [r8, -r0, lsl #2]
    5ec8:	48000029 	stmdami	r0, {r0, r3, r5}
    5ecc:	b8000023 	stmdalt	r0, {r0, r1, r5}
    5ed0:	01000009 	tsteq	r0, r9
    5ed4:	00001196 	muleq	r0, r6, r1
    5ed8:	000011a1 	andeq	r1, r0, r1, lsr #3
    5edc:	001d7f0e 	andseq	r7, sp, lr, lsl #30
    5ee0:	00380e00 	eorseq	r0, r8, r0, lsl #28
    5ee4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5ee8:	00002968 	andeq	r2, r0, r8, ror #18
    5eec:	000029f4 	strdeq	r2, [r0], -r4
    5ef0:	00001d7f 	andeq	r1, r0, pc, ror sp
    5ef4:	0011b701 	andseq	fp, r1, r1, lsl #14
    5ef8:	0011c200 	andseq	ip, r1, r0, lsl #4
    5efc:	1d7f0e00 	ldclne	14, cr0, [pc, #-0]	; 5f04 <CPSR_IRQ_INHIBIT+0x5e84>
    5f00:	8a0f0000 	bhi	3c5f08 <_bss_end+0x3b4218>
    5f04:	0000001d 	andeq	r0, r0, sp, lsl r0
    5f08:	00296818 	eoreq	r6, r9, r8, lsl r8
    5f0c:	00261d00 	eoreq	r1, r6, r0, lsl #26
    5f10:	001d7f00 	andseq	r7, sp, r0, lsl #30
    5f14:	11d80100 	bicsne	r0, r8, r0, lsl #2
    5f18:	11e30000 	mvnne	r0, r0
    5f1c:	7f0e0000 	svcvc	0x000e0000
    5f20:	0f00001d 	svceq	0x0000001d
    5f24:	00001d90 	muleq	r0, r0, sp
    5f28:	29681800 	stmdbcs	r8!, {fp, ip}^
    5f2c:	2b840000 	blcs	fe105f34 <_bss_end+0xfe0f4244>
    5f30:	1d7f0000 	ldclne	0, cr0, [pc, #-0]	; 5f38 <CPSR_IRQ_INHIBIT+0x5eb8>
    5f34:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    5f38:	ff000011 			; <UNDEFINED> instruction: 0xff000011
    5f3c:	0e000011 	mcreq	0, 0, r0, cr0, cr1, {0}
    5f40:	00001d7f 	andeq	r1, r0, pc, ror sp
    5f44:	25cf1a00 	strbcs	r1, [pc, #2560]	; 694c <CPSR_IRQ_INHIBIT+0x68cc>
    5f48:	40060000 	andmi	r0, r6, r0
    5f4c:	001f3212 	andseq	r3, pc, r2, lsl r2	; <UNPREDICTABLE>
    5f50:	10020100 	andne	r0, r2, r0, lsl #2
    5f54:	00116800 	andseq	r6, r1, r0, lsl #16
    5f58:	121c0100 	andsne	r0, ip, #0, 2
    5f5c:	12220000 	eorne	r0, r2, #0
    5f60:	7f0e0000 	svcvc	0x000e0000
    5f64:	0000001d 	andeq	r0, r0, sp, lsl r0
    5f68:	0023f61b 	eoreq	pc, r3, fp, lsl r6	; <UNPREDICTABLE>
    5f6c:	14450600 	strbne	r0, [r5], #-1536	; 0xfffffa00
    5f70:	000028a0 	andeq	r2, r0, r0, lsr #17
    5f74:	00000509 	andeq	r0, r0, r9, lsl #10
    5f78:	01100201 	tsteq	r0, r1, lsl #4
    5f7c:	00001168 	andeq	r1, r0, r8, ror #2
    5f80:	00123f01 	andseq	r3, r2, r1, lsl #30
    5f84:	1d7f0e00 	ldclne	14, cr0, [pc, #-0]	; 5f8c <CPSR_IRQ_INHIBIT+0x5f0c>
    5f88:	b70f0000 	strlt	r0, [pc, -r0]
    5f8c:	0f000002 	svceq	0x00000002
    5f90:	00000107 	andeq	r0, r0, r7, lsl #2
    5f94:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    5f98:	2a000011 	bcs	5fe4 <CPSR_IRQ_INHIBIT+0x5f64>
    5f9c:	0000253b 	andeq	r2, r0, fp, lsr r5
    5fa0:	681b5206 	ldmdavs	fp, {r1, r2, r9, ip, lr}
    5fa4:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    5fa8:	010b7c03 	tsteq	fp, r3, lsl #24
    5fac:	1b430a00 	blne	10c87b4 <_bss_end+0x10b6ac4>
    5fb0:	10080000 	andne	r0, r8, r0
    5fb4:	132c0706 			; <UNDEFINED> instruction: 0x132c0706
    5fb8:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    5fbc:	1000001a 	andne	r0, r0, sl, lsl r0
    5fc0:	089f220a 	ldmeq	pc, {r1, r3, r9, sp}	; <UNPREDICTABLE>
    5fc4:	0c000000 	stceq	0, cr0, [r0], {-0}
    5fc8:	00000765 	andeq	r0, r0, r5, ror #14
    5fcc:	790e0e10 	stmdbvc	lr, {r4, r9, sl, fp}
    5fd0:	04000000 	streq	r0, [r0], #-0
    5fd4:	001b4311 	andseq	r4, fp, r1, lsl r3
    5fd8:	05111000 	ldreq	r1, [r1, #-0]
    5fdc:	00001b15 	andeq	r1, r0, r5, lsl fp
    5fe0:	00001331 	andeq	r1, r0, r1, lsr r3
    5fe4:	0012a701 	andseq	sl, r2, r1, lsl #14
    5fe8:	0012b200 	andseq	fp, r2, r0, lsl #4
    5fec:	13310e00 	teqne	r1, #0, 28
    5ff0:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	000a2011 	andeq	r2, sl, r1, lsl r0
    5ffc:	0a141000 	beq	50a004 <_bss_end+0x4f8314>
    6000:	00001acd 	andeq	r1, r0, sp, asr #21
    6004:	000002aa 	andeq	r0, r0, sl, lsr #5
    6008:	0012cb01 	andseq	ip, r2, r1, lsl #22
    600c:	0012d600 	andseq	sp, r2, r0, lsl #12
    6010:	13310e00 	teqne	r1, #0, 28
    6014:	aa0f0000 	bge	3c601c <_bss_end+0x3b432c>
    6018:	00000002 	andeq	r0, r0, r2
    601c:	0009ad12 	andeq	sl, r9, r2, lsl sp
    6020:	0a161000 	beq	58a028 <_bss_end+0x578338>
    6024:	00001b23 	andeq	r1, r0, r3, lsr #22
    6028:	0012eb01 	andseq	lr, r2, r1, lsl #22
    602c:	0012f100 	andseq	pc, r2, r0, lsl #2
    6030:	13310e00 	teqne	r1, #0, 28
    6034:	11000000 	mrsne	r0, (UNDEF: 0)
    6038:	0000073f 	andeq	r0, r0, pc, lsr r7
    603c:	de0a1810 	mcrle	8, 0, r1, cr10, cr0, {0}
    6040:	aa00001a 	bge	60b0 <CPSR_IRQ_INHIBIT+0x6030>
    6044:	01000002 	tsteq	r0, r2
    6048:	0000130a 	andeq	r1, r0, sl, lsl #6
    604c:	00001310 	andeq	r1, r0, r0, lsl r3
    6050:	0013370e 	andseq	r3, r3, lr, lsl #14
    6054:	03130000 	tsteq	r3, #0
    6058:	1000001b 	andne	r0, r0, fp, lsl r0
    605c:	1a3d0e1b 	bne	f498d0 <_bss_end+0xf37be0>
    6060:	00790000 	rsbseq	r0, r9, r0
    6064:	25010000 	strcs	r0, [r1, #-0]
    6068:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    606c:	00001331 	andeq	r1, r0, r1, lsr r3
    6070:	67030000 	strvs	r0, [r3, -r0]
    6074:	16000012 			; <UNDEFINED> instruction: 0x16000012
    6078:	00126704 	andseq	r6, r2, r4, lsl #14
    607c:	2c041600 	stccs	6, cr1, [r4], {-0}
    6080:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    6084:	00001b58 	andeq	r1, r0, r8, asr fp
    6088:	670e1e10 	smladvs	lr, r0, lr, r1
    608c:	17000012 	smladne	r0, r2, r0, r0
    6090:	000027a3 	andeq	r2, r0, r3, lsr #15
    6094:	07440704 	strbeq	r0, [r4, -r4, lsl #14]
    6098:	000002c2 	andeq	r0, r0, r2, asr #5
    609c:	00001431 	andeq	r1, r0, r1, lsr r4
    60a0:	0002c229 	andeq	ip, r2, r9, lsr #4
    60a4:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    60a8:	000027a2 	andeq	r2, r0, r2, lsr #15
    60ac:	00002982 	andeq	r2, r0, r2, lsl #19
    60b0:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    60b4:	00137701 	andseq	r7, r3, r1, lsl #14
    60b8:	00138200 	andseq	r8, r3, r0, lsl #4
    60bc:	1c0d0e00 	stcne	14, cr0, [sp], {-0}
    60c0:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    60c4:	00000000 	andeq	r0, r0, r0
    60c8:	0027a318 	eoreq	sl, r7, r8, lsl r3
    60cc:	002bf200 	eoreq	pc, fp, r0, lsl #4
    60d0:	001c0d00 	andseq	r0, ip, r0, lsl #26
    60d4:	13980100 	orrsne	r0, r8, #0, 2
    60d8:	13a30000 			; <UNDEFINED> instruction: 0x13a30000
    60dc:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    60e0:	0f00001c 	svceq	0x0000001c
    60e4:	00001c18 	andeq	r1, r0, r8, lsl ip
    60e8:	27a31800 	strcs	r1, [r3, r0, lsl #16]!
    60ec:	21050000 	mrscs	r0, (UNDEF: 5)
    60f0:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    60f4:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    60f8:	c4000013 	strgt	r0, [r0], #-19	; 0xffffffed
    60fc:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    6100:	00001c0d 	andeq	r1, r0, sp, lsl #24
    6104:	001c1e0f 	andseq	r1, ip, pc, lsl #28
    6108:	a3180000 	tstge	r8, #0
    610c:	c1000027 	tstgt	r0, r7, lsr #32
    6110:	0d00001e 	stceq	0, cr0, [r0, #-120]	; 0xffffff88
    6114:	0100001c 	tsteq	r0, ip, lsl r0
    6118:	000013da 	ldrdeq	r1, [r0], -sl
    611c:	000013e0 	andeq	r1, r0, r0, ror #7
    6120:	001c0d0e 	andseq	r0, ip, lr, lsl #26
    6124:	cf1a0000 	svcgt	0x001a0000
    6128:	07000025 	streq	r0, [r0, -r5, lsr #32]
    612c:	21f51247 	mvnscs	r1, r7, asr #4
    6130:	02010000 	andeq	r0, r1, #0
    6134:	13490010 	movtne	r0, #36880	; 0x9010
    6138:	fd010000 	stc2	0, cr0, [r1, #-0]
    613c:	03000013 	movweq	r0, #19
    6140:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    6144:	00001c0d 	andeq	r1, r0, sp, lsl #24
    6148:	23f61b00 	mvnscs	r1, #0, 22
    614c:	4c070000 	stcmi	0, cr0, [r7], {-0}
    6150:	00240e14 	eoreq	r0, r4, r4, lsl lr
    6154:	00050900 	andeq	r0, r5, r0, lsl #18
    6158:	10020100 	andne	r0, r2, r0, lsl #2
    615c:	00134901 	andseq	r4, r3, r1, lsl #18
    6160:	14200100 	strtne	r0, [r0], #-256	; 0xffffff00
    6164:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    6168:	0f00001c 	svceq	0x0000001c
    616c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    6170:	0001070f 	andeq	r0, r1, pc, lsl #14
    6174:	03000000 	movweq	r0, #0
    6178:	00001349 	andeq	r1, r0, r9, asr #6
    617c:	002ef22a 	eoreq	pc, lr, sl, lsr #4
    6180:	11590700 	cmpne	r9, r0, lsl #14
    6184:	00001349 	andeq	r1, r0, r9, asr #6
    6188:	0b800305 	bleq	fe006da4 <_bss_end+0xfdff50b4>
    618c:	8a090001 	bhi	246198 <_bss_end+0x2344a8>
    6190:	11000009 	tstne	r0, r9
    6194:	00851406 	addeq	r1, r5, r6, lsl #8
    6198:	03050000 	movweq	r0, #20480	; 0x5000
    619c:	000102e0 	andeq	r0, r1, r0, ror #5
    61a0:	0007540a 	andeq	r5, r7, sl, lsl #8
    61a4:	0b111400 	bleq	44b1ac <_bss_end+0x4394bc>
    61a8:	0014d807 	andseq	sp, r4, r7, lsl #16
    61ac:	07d70c00 	ldrbeq	r0, [r7, r0, lsl #24]
    61b0:	0f110000 	svceq	0x00110000
    61b4:	0002aa0e 	andeq	sl, r2, lr, lsl #20
    61b8:	600c0000 	andvs	r0, ip, r0
    61bc:	11000008 	tstne	r0, r8
    61c0:	14d81111 	ldrbne	r1, [r8], #273	; 0x111
    61c4:	0c010000 	stceq	0, cr0, [r1], {-0}
    61c8:	00000942 	andeq	r0, r0, r2, asr #18
    61cc:	79121311 	ldmdbvc	r2, {r0, r4, r8, r9, ip}
    61d0:	0c000000 	stceq	0, cr0, [r0], {-0}
    61d4:	0008f20c 	andeq	pc, r8, ip, lsl #4
    61d8:	12151100 	andsne	r1, r5, #0, 2
    61dc:	00000061 	andeq	r0, r0, r1, rrx
    61e0:	07543210 	smmlaeq	r4, r0, r2, r3
    61e4:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
    61e8:	0007e909 	andeq	lr, r7, r9, lsl #18
    61ec:	0014e800 	andseq	lr, r4, r0, lsl #16
    61f0:	b5010100 	strlt	r0, [r1, #-256]	; 0xffffff00
    61f4:	bb000014 	bllt	624c <CPSR_IRQ_INHIBIT+0x61cc>
    61f8:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    61fc:	000014e8 	andeq	r1, r0, r8, ror #9
    6200:	09562700 	ldmdbeq	r6, {r8, r9, sl, sp}^
    6204:	1a110000 	bne	44620c <_bss_end+0x43451c>
    6208:	0008720e 	andeq	r7, r8, lr, lsl #4
    620c:	14cc0100 	strbne	r0, [ip], #256	; 0x100
    6210:	e80e0000 	stmda	lr, {}	; <UNPREDICTABLE>
    6214:	0f000014 	svceq	0x00000014
    6218:	00000061 	andeq	r0, r0, r1, rrx
    621c:	44140000 	ldrmi	r0, [r4], #-0
    6220:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    6224:	15000014 	strne	r0, [r0, #-20]	; 0xffffffec
    6228:	0000008f 	andeq	r0, r0, pc, lsl #1
    622c:	04160007 	ldreq	r0, [r6], #-7
    6230:	0000145a 	andeq	r1, r0, sl, asr r4
    6234:	000f770a 	andeq	r7, pc, sl, lsl #14
    6238:	2c112400 	cfldrscs	mvf2, [r1], {-0}
    623c:	00169c07 	andseq	r9, r6, r7, lsl #24
    6240:	09a30c00 	stmibeq	r3!, {sl, fp}
    6244:	30110000 	andscc	r0, r1, r0
    6248:	0016a722 	andseq	sl, r6, r2, lsr #14
    624c:	650c0000 	strvs	r0, [ip, #-0]
    6250:	11000007 	tstne	r0, r7
    6254:	02aa0e32 	adceq	r0, sl, #800	; 0x320
    6258:	0c040000 	stceq	0, cr0, [r4], {-0}
    625c:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
    6260:	79123511 	ldmdbvc	r2, {r0, r4, r8, sl, ip, sp}
    6264:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6268:	0008e90c 	andeq	lr, r8, ip, lsl #18
    626c:	12371100 	eorsne	r1, r7, #0, 2
    6270:	00000079 	andeq	r0, r0, r9, ror r0
    6274:	0a130c0c 	beq	4c92ac <_bss_end+0x4b75bc>
    6278:	3a110000 	bcc	446280 <_bss_end+0x434590>
    627c:	00145a1a 	andseq	r5, r4, sl, lsl sl
    6280:	52331000 	eorspl	r1, r3, #0
    6284:	11006765 	tstne	r0, r5, ror #14
    6288:	077c1c3d 			; <UNDEFINED> instruction: 0x077c1c3d
    628c:	16ac0000 	strtne	r0, [ip], r0
    6290:	55020000 	strpl	r0, [r2, #-0]
    6294:	60000015 	andvs	r0, r0, r5, lsl r0
    6298:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    629c:	000016b2 			; <UNDEFINED> instruction: 0x000016b2
    62a0:	0005cd0f 	andeq	ip, r5, pc, lsl #26
    62a4:	62120000 	andsvs	r0, r2, #0
    62a8:	11000009 	tstne	r0, r9
    62ac:	07a90e40 	streq	r0, [r9, r0, asr #28]!
    62b0:	75020000 	strvc	r0, [r2, #-0]
    62b4:	7b000015 	blvc	6310 <CPSR_IRQ_INHIBIT+0x6290>
    62b8:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    62bc:	000016b2 			; <UNDEFINED> instruction: 0x000016b2
    62c0:	0f771100 	svceq	0x00771100
    62c4:	43110000 	tstmi	r1, #0
    62c8:	0007c009 	andeq	ip, r7, r9
    62cc:	0016b200 	andseq	fp, r6, r0, lsl #4
    62d0:	15940100 	ldrne	r0, [r4, #256]	; 0x100
    62d4:	15a90000 	strne	r0, [r9, #0]!
    62d8:	b20e0000 	andlt	r0, lr, #0
    62dc:	0f000016 	svceq	0x00000016
    62e0:	00000612 	andeq	r0, r0, r2, lsl r6
    62e4:	0000790f 	andeq	r7, r0, pc, lsl #18
    62e8:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    62ec:	11000000 	mrsne	r0, (UNDEF: 0)
    62f0:	00000a20 	andeq	r0, r0, r0, lsr #20
    62f4:	3b0e4611 	blcc	397b40 <_bss_end+0x385e50>
    62f8:	aa00000a 	bge	6328 <CPSR_IRQ_INHIBIT+0x62a8>
    62fc:	01000002 	tsteq	r0, r2
    6300:	000015c2 	andeq	r1, r0, r2, asr #11
    6304:	000015c8 	andeq	r1, r0, r8, asr #11
    6308:	0016b20e 	andseq	fp, r6, lr, lsl #4
    630c:	ad120000 	ldcge	0, cr0, [r2, #-0]
    6310:	11000009 	tstne	r0, r9
    6314:	089f0e48 	ldmeq	pc, {r3, r6, r9, sl, fp}	; <UNPREDICTABLE>
    6318:	dd010000 	stcle	0, cr0, [r1, #-0]
    631c:	e3000015 	movw	r0, #21
    6320:	0e000015 	mcreq	0, 0, r0, cr0, cr5, {0}
    6324:	000016b2 			; <UNDEFINED> instruction: 0x000016b2
    6328:	073f1100 	ldreq	r1, [pc, -r0, lsl #2]!
    632c:	4a110000 	bmi	446334 <_bss_end+0x434644>
    6330:	0008fb0e 	andeq	pc, r8, lr, lsl #22
    6334:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6338:	15fc0100 	ldrbne	r0, [ip, #256]!	; 0x100
    633c:	16020000 	strne	r0, [r2], -r0
    6340:	b80e0000 	stmdalt	lr, {}	; <UNPREDICTABLE>
    6344:	00000016 	andeq	r0, r0, r6, lsl r0
    6348:	00092312 	andeq	r2, r9, r2, lsl r3
    634c:	0e4d1100 	dvfeqe	f1, f5, f0
    6350:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
    6354:	00161701 	andseq	r1, r6, r1, lsl #14
    6358:	00162c00 	andseq	r2, r6, r0, lsl #24
    635c:	16b20e00 	ldrtne	r0, [r2], r0, lsl #28
    6360:	610f0000 	mrsvs	r0, CPSR
    6364:	0f000000 	svceq	0x00000000
    6368:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    636c:	0000790f 	andeq	r7, r0, pc, lsl #18
    6370:	cf120000 	svcgt	0x00120000
    6374:	11000007 	tstne	r0, r7
    6378:	0a250e4f 	beq	949cbc <_bss_end+0x937fcc>
    637c:	41010000 	mrsmi	r0, (UNDEF: 1)
    6380:	56000016 			; <UNDEFINED> instruction: 0x56000016
    6384:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    6388:	000016b2 			; <UNDEFINED> instruction: 0x000016b2
    638c:	0000610f 	andeq	r6, r0, pc, lsl #2
    6390:	0d120f00 	ldceq	15, cr0, [r2, #-0]
    6394:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6398:	00000000 	andeq	r0, r0, r0
    639c:	00091111 	andeq	r1, r9, r1, lsl r1
    63a0:	1b521100 	blne	148a7a8 <_bss_end+0x1478ab8>
    63a4:	000008c4 	andeq	r0, r0, r4, asr #17
    63a8:	000016be 			; <UNDEFINED> instruction: 0x000016be
    63ac:	00166f01 	andseq	r6, r6, r1, lsl #30
    63b0:	00167a00 	andseq	r7, r6, r0, lsl #20
    63b4:	16b20e00 	ldrtne	r0, [r2], r0, lsl #28
    63b8:	610f0000 	mrsvs	r0, CPSR
    63bc:	00000000 	andeq	r0, r0, r0
    63c0:	00083c27 	andeq	r3, r8, r7, lsr #24
    63c4:	0e541100 	rdfeqs	f1, f4, f0
    63c8:	0000080d 	andeq	r0, r0, sp, lsl #16
    63cc:	00168b01 	andseq	r8, r6, r1, lsl #22
    63d0:	16b20e00 	ldrtne	r0, [r2], r0, lsl #28
    63d4:	be0f0000 	cdplt	0, 0, cr0, cr15, cr0, {0}
    63d8:	0f000016 	svceq	0x00000016
    63dc:	000002aa 	andeq	r0, r0, sl, lsr #5
    63e0:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    63e4:	16000014 			; <UNDEFINED> instruction: 0x16000014
    63e8:	00008a04 	andeq	r8, r0, r4, lsl #20
    63ec:	16a10300 	strtne	r0, [r1], r0, lsl #6
    63f0:	04240000 	strteq	r0, [r4], #-0
    63f4:	0000008a 	andeq	r0, r0, sl, lsl #1
    63f8:	14ee0416 	strbtne	r0, [lr], #1046	; 0x416
    63fc:	04160000 	ldreq	r0, [r6], #-0
    6400:	0000169c 	muleq	r0, ip, r6
    6404:	145a0424 	ldrbne	r0, [sl], #-1060	; 0xfffffbdc
    6408:	83090000 	movwhi	r0, #36864	; 0x9000
    640c:	12000012 	andne	r0, r0, #18
    6410:	006d1406 	rsbeq	r1, sp, r6, lsl #8
    6414:	03050000 	movweq	r0, #20480	; 0x5000
    6418:	000102e4 	andeq	r0, r1, r4, ror #5
    641c:	000dd907 	andeq	sp, sp, r7, lsl #18
    6420:	38040500 	stmdacc	r4, {r8, sl}
    6424:	12000000 	andne	r0, r0, #0
    6428:	17b50c09 	ldrne	r0, [r5, r9, lsl #24]!
    642c:	4f080000 	svcmi	0x00080000
    6430:	0000000f 	andeq	r0, r0, pc
    6434:	000cd508 	andeq	sp, ip, r8, lsl #10
    6438:	fb08c000 	blx	236442 <_bss_end+0x224752>
    643c:	40000012 	andmi	r0, r0, r2, lsl r0
    6440:	0013b108 	andseq	fp, r3, r8, lsl #2
    6444:	7c088100 	stfvcd	f0, [r8], {-0}
    6448:	a4000011 	strge	r0, [r0], #-17	; 0xffffffef
    644c:	00102808 	andseq	r2, r0, r8, lsl #16
    6450:	e808a500 	stmda	r8, {r8, sl, sp, pc}
    6454:	a6000011 			; <UNDEFINED> instruction: 0xa6000011
    6458:	00127208 	andseq	r7, r2, r8, lsl #4
    645c:	1a08a700 	bne	230064 <_bss_end+0x21e374>
    6460:	ae000013 	mcrge	0, 0, r0, cr0, cr3, {0}
    6464:	000fa708 	andeq	sl, pc, r8, lsl #14
    6468:	4e2caf00 	cdpmi	15, 2, cr10, cr12, cr0, {0}
    646c:	e300706f 	movw	r7, #111	; 0x6f
    6470:	00121608 	andseq	r1, r2, r8, lsl #12
    6474:	95082600 	strls	r2, [r8, #-1536]	; 0xfffffa00
    6478:	27000013 	smladcs	r0, r3, r0, r0
    647c:	000e3608 	andeq	r3, lr, r8, lsl #12
    6480:	e8082900 	stmda	r8, {r8, fp, sp}
    6484:	2a000013 	bcs	64d8 <CPSR_IRQ_INHIBIT+0x6458>
    6488:	000ebb08 	andeq	fp, lr, r8, lsl #22
    648c:	d8082e00 	stmdale	r8, {r9, sl, fp, sp}
    6490:	2f000013 	svccs	0x00000013
    6494:	00107308 	andseq	r7, r0, r8, lsl #6
    6498:	9308a300 	movwls	sl, #33536	; 0x8300
    649c:	0000000d 	andeq	r0, r0, sp
    64a0:	0010a908 	andseq	sl, r0, r8, lsl #18
    64a4:	5e081000 	cdppl	0, 0, cr1, cr8, cr0, {0}
    64a8:	2000000e 	andcs	r0, r0, lr
    64ac:	000fb208 	andeq	fp, pc, r8, lsl #4
    64b0:	87082100 	strhi	r2, [r8, -r0, lsl #2]
    64b4:	22000010 	andcs	r0, r0, #16
    64b8:	00115408 	andseq	r5, r1, r8, lsl #8
    64bc:	e0084000 	and	r4, r8, r0
    64c0:	a0000012 	andge	r0, r0, r2, lsl r0
    64c4:	00112d08 	andseq	r2, r1, r8, lsl #26
    64c8:	a008a800 	andge	sl, r8, r0, lsl #16
    64cc:	c0000012 	andgt	r0, r0, r2, lsl r0
    64d0:	0010f508 	andseq	pc, r0, r8, lsl #10
    64d4:	2e08c800 	cdpcs	8, 0, cr12, cr8, cr0, {0}
    64d8:	d3000012 	movwle	r0, #18
    64dc:	000eae08 	andeq	sl, lr, r8, lsl #28
    64e0:	dc08da00 			; <UNDEFINED> instruction: 0xdc08da00
    64e4:	8d000011 	stchi	0, cr0, [r0, #-68]	; 0xffffffbc
    64e8:	000eeb08 	andeq	lr, lr, r8, lsl #22
    64ec:	0708d500 	streq	sp, [r8, -r0, lsl #10]
    64f0:	d900000f 	stmdble	r0, {r0, r1, r2, r3}
    64f4:	000f1c08 	andeq	r1, pc, r8, lsl #24
    64f8:	0a00d800 	beq	3c500 <_bss_end+0x2a810>
    64fc:	00001017 	andeq	r1, r0, r7, lsl r0
    6500:	07361214 			; <UNDEFINED> instruction: 0x07361214
    6504:	00001936 	andeq	r1, r0, r6, lsr r9
    6508:	0010370c 	andseq	r3, r0, ip, lsl #14
    650c:	0f3a1200 	svceq	0x003a1200
    6510:	0000193b 	andeq	r1, r0, fp, lsr r9
    6514:	07650c00 	strbeq	r0, [r5, -r0, lsl #24]!
    6518:	3c120000 	ldccc	0, cr0, [r2], {-0}
    651c:	0002aa0e 	andeq	sl, r2, lr, lsl #20
    6520:	600c0400 	andvs	r0, ip, r0, lsl #8
    6524:	12000008 	andne	r0, r0, #8
    6528:	1941123e 	stmdbne	r1, {r1, r2, r3, r4, r5, r9, ip}^
    652c:	0c080000 	stceq	0, cr0, [r8], {-0}
    6530:	00000e57 	andeq	r0, r0, r7, asr lr
    6534:	380d4012 	stmdacc	sp, {r1, r4, lr}
    6538:	0c000000 	stceq	0, cr0, [r0], {-0}
    653c:	000ccd0c 	andeq	ip, ip, ip, lsl #26
    6540:	15401200 	strbne	r1, [r0, #-512]	; 0xfffffe00
    6544:	00000038 	andeq	r0, r0, r8, lsr r0
    6548:	12411210 	subne	r1, r1, #16, 4
    654c:	44120000 	ldrmi	r0, [r2], #-0
    6550:	00134b0e 	andseq	r4, r3, lr, lsl #22
    6554:	18180200 	ldmdane	r8, {r9}
    6558:	18280000 	stmdane	r8!, {}	; <UNPREDICTABLE>
    655c:	470e0000 	strmi	r0, [lr, -r0]
    6560:	0f000019 	svceq	0x00000019
    6564:	000016d6 	ldrdeq	r1, [r0], -r6
    6568:	0000440f 	andeq	r4, r0, pc, lsl #8
    656c:	17110000 	ldrne	r0, [r1, -r0]
    6570:	12000010 	andne	r0, r0, #16
    6574:	11f70947 	mvnsne	r0, r7, asr #18
    6578:	19470000 	stmdbne	r7, {}^	; <UNPREDICTABLE>
    657c:	41010000 	mrsmi	r0, (UNDEF: 1)
    6580:	4c000018 	stcmi	0, cr0, [r0], {24}
    6584:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    6588:	00001947 	andeq	r1, r0, r7, asr #18
    658c:	00193b0f 	andseq	r3, r9, pc, lsl #22
    6590:	20110000 	andscs	r0, r1, r0
    6594:	1200000a 	andne	r0, r0, #10
    6598:	0f2c0e4a 	svceq	0x002c0e4a
    659c:	02aa0000 	adceq	r0, sl, #0
    65a0:	65010000 	strvs	r0, [r1, #-0]
    65a4:	75000018 	strvc	r0, [r0, #-24]	; 0xffffffe8
    65a8:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    65ac:	00001947 	andeq	r1, r0, r7, asr #18
    65b0:	0000380f 	andeq	r3, r0, pc, lsl #16
    65b4:	00380f00 	eorseq	r0, r8, r0, lsl #30
    65b8:	12000000 	andne	r0, r0, #0
    65bc:	000009ad 	andeq	r0, r0, sp, lsr #19
    65c0:	1c0e4c12 	stcne	12, cr4, [lr], {18}
    65c4:	01000014 	tsteq	r0, r4, lsl r0
    65c8:	0000188a 	andeq	r1, r0, sl, lsl #17
    65cc:	00001890 	muleq	r0, r0, r8
    65d0:	0019470e 	andseq	r4, r9, lr, lsl #14
    65d4:	3f110000 	svccc	0x00110000
    65d8:	12000007 	andne	r0, r0, #7
    65dc:	0e750e4e 	cdpeq	14, 7, cr0, cr5, cr14, {2}
    65e0:	02aa0000 	adceq	r0, sl, #0
    65e4:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    65e8:	af000018 	svcge	0x00000018
    65ec:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    65f0:	0000194d 	andeq	r1, r0, sp, asr #18
    65f4:	18a21200 	stmiane	r2!, {r9, ip}
    65f8:	51120000 	tstpl	r2, r0
    65fc:	0010550e 	andseq	r5, r0, lr, lsl #10
    6600:	18c40100 	stmiane	r4, {r8}^
    6604:	18cf0000 	stmiane	pc, {}^	; <UNPREDICTABLE>
    6608:	470e0000 	strmi	r0, [lr, -r0]
    660c:	0f000019 	svceq	0x00000019
    6610:	000002aa 	andeq	r0, r0, sl, lsr #5
    6614:	0fc21200 	svceq	0x00c21200
    6618:	53120000 	tstpl	r2, #0
    661c:	00124e0e 	andseq	r4, r2, lr, lsl #28
    6620:	18e40100 	stmiane	r4!, {r8}^
    6624:	18f90000 	ldmne	r9!, {}^	; <UNPREDICTABLE>
    6628:	470e0000 	strmi	r0, [lr, -r0]
    662c:	0f000019 	svceq	0x00000019
    6630:	00000079 	andeq	r0, r0, r9, ror r0
    6634:	0000790f 	andeq	r7, r0, pc, lsl #18
    6638:	02aa0f00 	adceq	r0, sl, #0, 30
    663c:	12000000 	andne	r0, r0, #0
    6640:	00000f4a 	andeq	r0, r0, sl, asr #30
    6644:	e00e5512 	and	r5, lr, r2, lsl r5
    6648:	0100000c 	tsteq	r0, ip
    664c:	0000190e 	andeq	r1, r0, lr, lsl #18
    6650:	00001914 	andeq	r1, r0, r4, lsl r9
    6654:	0019470e 	andseq	r4, r9, lr, lsl #14
    6658:	ba270000 	blt	9c6660 <_bss_end+0x9b4970>
    665c:	12000010 	andne	r0, r0, #16
    6660:	0da40e58 	stceq	14, cr0, [r4, #352]!	; 0x160
    6664:	25010000 	strcs	r0, [r1, #-0]
    6668:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    666c:	00001947 	andeq	r1, r0, r7, asr #18
    6670:	0002b70f 	andeq	fp, r2, pc, lsl #14
    6674:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    6678:	00000000 	andeq	r0, r0, r0
    667c:	0017b503 	andseq	fp, r7, r3, lsl #10
    6680:	ee042400 	cfcpys	mvf2, mvf4
    6684:	16000014 			; <UNDEFINED> instruction: 0x16000014
    6688:	00004404 	andeq	r4, r0, r4, lsl #8
    668c:	b5041600 	strlt	r1, [r4, #-1536]	; 0xfffffa00
    6690:	16000017 			; <UNDEFINED> instruction: 0x16000017
    6694:	00193604 	andseq	r3, r9, r4, lsl #12
    6698:	0df42500 	cfldr64eq	mvdx2, [r4]
    669c:	5b120000 	blpl	4866a4 <_bss_end+0x4749b4>
    66a0:	0017b519 	andseq	fp, r7, r9, lsl r5
    66a4:	28df1700 	ldmcs	pc, {r8, r9, sl, ip}^	; <UNPREDICTABLE>
    66a8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    66ac:	02c2073b 	sbceq	r0, r2, #15466496	; 0xec0000
    66b0:	1a470000 	bne	11c66b8 <_bss_end+0x11b49c8>
    66b4:	c2290000 	eorgt	r0, r9, #0
    66b8:	00000002 	andeq	r0, r0, r2
    66bc:	28de1801 	ldmcs	lr, {r0, fp, ip}^
    66c0:	2c7b0000 	ldclcs	0, cr0, [fp], #-0
    66c4:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    66c8:	8d010000 	stchi	0, cr0, [r1, #-0]
    66cc:	98000019 	stmdals	r0, {r0, r3, r4}
    66d0:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    66d4:	00001a9b 	muleq	r0, fp, sl
    66d8:	0000380e 	andeq	r3, r0, lr, lsl #16
    66dc:	df180000 	svcle	0x00180000
    66e0:	09000028 	stmdbeq	r0, {r3, r5}
    66e4:	9b000023 	blls	6778 <CPSR_IRQ_INHIBIT+0x66f8>
    66e8:	0100001a 	tsteq	r0, sl, lsl r0
    66ec:	000019ae 	andeq	r1, r0, lr, lsr #19
    66f0:	000019b9 			; <UNDEFINED> instruction: 0x000019b9
    66f4:	001a9b0e 	andseq	r9, sl, lr, lsl #22
    66f8:	1aa60f00 	bne	fe98a300 <_bss_end+0xfe978610>
    66fc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    6700:	000028df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    6704:	00002bce 	andeq	r2, r0, lr, asr #23
    6708:	00001a9b 	muleq	r0, fp, sl
    670c:	0019cf01 	andseq	ip, r9, r1, lsl #30
    6710:	0019da00 	andseq	sp, r9, r0, lsl #20
    6714:	1a9b0e00 	bne	fe6c9f1c <_bss_end+0xfe6b822c>
    6718:	ac0f0000 	stcge	0, cr0, [pc], {-0}
    671c:	0000001a 	andeq	r0, r0, sl, lsl r0
    6720:	0028df18 	eoreq	sp, r8, r8, lsl pc
    6724:	0025e700 	eoreq	lr, r5, r0, lsl #14
    6728:	001a9b00 	andseq	r9, sl, r0, lsl #22
    672c:	19f00100 	ldmibne	r0!, {r8}^
    6730:	19f60000 	ldmibne	r6!, {}^	; <UNPREDICTABLE>
    6734:	9b0e0000 	blls	38673c <_bss_end+0x374a4c>
    6738:	0000001a 	andeq	r0, r0, sl, lsl r0
    673c:	0025cf1a 	eoreq	ip, r5, sl, lsl pc
    6740:	103e0800 	eorsne	r0, lr, r0, lsl #16
    6744:	00002264 	andeq	r2, r0, r4, ror #4
    6748:	00100201 	andseq	r0, r0, r1, lsl #4
    674c:	0000195f 	andeq	r1, r0, pc, asr r9
    6750:	001a1301 	andseq	r1, sl, r1, lsl #6
    6754:	001a1900 	andseq	r1, sl, r0, lsl #18
    6758:	1a9b0e00 	bne	fe6c9f60 <_bss_end+0xfe6b8270>
    675c:	1b000000 	blne	6764 <CPSR_IRQ_INHIBIT+0x66e4>
    6760:	000023f6 	strdeq	r2, [r0], -r6
    6764:	bf184308 	svclt	0x00184308
    6768:	0900001f 	stmdbeq	r0, {r0, r1, r2, r3, r4}
    676c:	01000005 	tsteq	r0, r5
    6770:	5f011002 	svcpl	0x00011002
    6774:	01000019 	tsteq	r0, r9, lsl r0
    6778:	00001a36 	andeq	r1, r0, r6, lsr sl
    677c:	001a9b0e 	andseq	r9, sl, lr, lsl #22
    6780:	02b70f00 	adcseq	r0, r7, #0, 30
    6784:	070f0000 	streq	r0, [pc, -r0]
    6788:	00000001 	andeq	r0, r0, r1
    678c:	195f0300 	ldmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    6790:	832a0000 			; <UNDEFINED> instruction: 0x832a0000
    6794:	08000023 	stmdaeq	r0, {r0, r1, r5}
    6798:	195f1950 	ldmdbne	pc, {r4, r6, r8, fp, ip}^	; <UNPREDICTABLE>
    679c:	03050000 	movweq	r0, #20480	; 0x5000
    67a0:	00010b84 	andeq	r0, r1, r4, lsl #23
    67a4:	0001e914 	andeq	lr, r1, r4, lsl r9
    67a8:	001a6e00 	andseq	r6, sl, r0, lsl #28
    67ac:	008f1500 	addeq	r1, pc, r0, lsl #10
    67b0:	00050000 	andeq	r0, r5, r0
    67b4:	001a5e03 	andseq	r5, sl, r3, lsl #28
    67b8:	01ee3400 	mvneq	r3, r0, lsl #8
    67bc:	0d130000 	ldceq	0, cr0, [r3, #-0]
    67c0:	0027831f 	eoreq	r8, r7, pc, lsl r3
    67c4:	001a6e00 	andseq	r6, sl, r0, lsl #28
    67c8:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    67cc:	35000103 	strcc	r0, [r0, #-259]	; 0xfffffefd
    67d0:	000001fa 	strdeq	r0, [r0], -sl
    67d4:	f1101713 			; <UNDEFINED> instruction: 0xf1101713
    67d8:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    67dc:	0103bc03 	tsteq	r3, r3, lsl #24
    67e0:	5f041600 	svcpl	0x00041600
    67e4:	03000019 	movweq	r0, #25
    67e8:	00001a9b 	muleq	r0, fp, sl
    67ec:	195f0436 	ldmdbne	pc, {r1, r2, r4, r5, sl}^	; <UNPREDICTABLE>
    67f0:	04240000 	strteq	r0, [r4], #-0
    67f4:	00001a47 	andeq	r1, r0, r7, asr #20
    67f8:	002ae917 	eoreq	lr, sl, r7, lsl r9
    67fc:	0b080800 	bleq	208804 <_bss_end+0x1f6b14>
    6800:	0003ca07 	andeq	ip, r3, r7, lsl #20
    6804:	001bf700 	andseq	pc, fp, r0, lsl #14
    6808:	03ca2900 	biceq	r2, sl, #0, 18
    680c:	01000000 	mrseq	r0, (UNDEF: 0)
    6810:	002ae918 	eoreq	lr, sl, r8, lsl r9
    6814:	002b6500 	eoreq	r6, fp, r0, lsl #10
    6818:	001bfc00 	andseq	pc, fp, r0, lsl #24
    681c:	1ae00100 	bne	ff806c24 <_bss_end+0xff7f4f34>
    6820:	1aeb0000 	bne	ffac6828 <_bss_end+0xffab4b38>
    6824:	fc0e0000 	stc2	0, cr0, [lr], {-0}
    6828:	0f00001b 	svceq	0x0000001b
    682c:	00001c07 	andeq	r1, r0, r7, lsl #24
    6830:	07650c00 	strbeq	r0, [r5, -r0, lsl #24]!
    6834:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    6838:	0002aa0e 	andeq	sl, r2, lr, lsl #20
    683c:	e9110400 	ldmdb	r1, {sl}
    6840:	0800002a 	stmdaeq	r0, {r1, r3, r5}
    6844:	299b0911 	ldmibcs	fp, {r0, r4, r8, fp}
    6848:	1bfc0000 	blne	fff06850 <_bss_end+0xffef4b60>
    684c:	11010000 	mrsne	r0, (UNDEF: 1)
    6850:	1700001b 	smladne	r0, fp, r0, r0
    6854:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    6858:	00001bfc 	strdeq	r1, [r0], -ip
    685c:	2ae83700 	bcs	ffa14464 <_bss_end+0xffa02774>
    6860:	17080000 	strne	r0, [r8, -r0]
    6864:	002cb809 	eoreq	fp, ip, r9, lsl #16
    6868:	0009b800 	andeq	fp, r9, r0, lsl #16
    686c:	1ab20100 	bne	fec86c74 <_bss_end+0xfec74f84>
    6870:	35010000 	strcc	r0, [r1, #-0]
    6874:	4000001b 	andmi	r0, r0, fp, lsl r0
    6878:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    687c:	00001bfc 	strdeq	r1, [r0], -ip
    6880:	0000380e 	andeq	r3, r0, lr, lsl #16
    6884:	d31e0000 	tstle	lr, #0
    6888:	08000002 	stmdaeq	r0, {r1}
    688c:	22c51a1c 	sbccs	r1, r5, #28, 20	; 0x1c000
    6890:	00790000 	rsbseq	r0, r9, r0
    6894:	02010000 	andeq	r0, r1, #0
    6898:	1ab20210 	bne	fec870e0 <_bss_end+0xfec753f0>
    689c:	61010000 	mrsvs	r0, (UNDEF: 1)
    68a0:	7100001b 	tstvc	r0, fp, lsl r0
    68a4:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    68a8:	00001bfc 	strdeq	r1, [r0], -ip
    68ac:	000d120f 	andeq	r1, sp, pc, lsl #4
    68b0:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    68b4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    68b8:	00001ce0 	andeq	r1, r0, r0, ror #25
    68bc:	5f1a2308 	svcpl	0x001a2308
    68c0:	7900002d 	stmdbvc	r0, {r0, r2, r3, r5}
    68c4:	01000000 	mrseq	r0, (UNDEF: 0)
    68c8:	b2031002 	andlt	r1, r3, #2
    68cc:	0100001a 	tsteq	r0, sl, lsl r0
    68d0:	00001b92 	muleq	r0, r2, fp
    68d4:	00001ba2 	andeq	r1, r0, r2, lsr #23
    68d8:	001bfc0e 	andseq	pc, fp, lr, lsl #24
    68dc:	02b70f00 	adcseq	r0, r7, #0, 30
    68e0:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    68e4:	00000000 	andeq	r0, r0, r0
    68e8:	0009ad1e 	andeq	sl, r9, lr, lsl sp
    68ec:	162a0800 	strtne	r0, [sl], -r0, lsl #16
    68f0:	000025af 	andeq	r2, r0, pc, lsr #11
    68f4:	000002aa 	andeq	r0, r0, sl, lsr #5
    68f8:	04100201 	ldreq	r0, [r0], #-513	; 0xfffffdff
    68fc:	00001ab2 			; <UNDEFINED> instruction: 0x00001ab2
    6900:	001bc301 	andseq	ip, fp, r1, lsl #6
    6904:	001bc900 	andseq	ip, fp, r0, lsl #18
    6908:	1bfc0e00 	blne	fff0a110 <_bss_end+0xffef8420>
    690c:	1b000000 	blne	6914 <CPSR_IRQ_INHIBIT+0x6894>
    6910:	000024ea 	andeq	r2, r0, sl, ror #9
    6914:	fb163508 	blx	593d3e <_bss_end+0x58204e>
    6918:	aa000026 	bge	69b8 <CPSR_IRQ_INHIBIT+0x6938>
    691c:	01000002 	tsteq	r0, r2
    6920:	b2051002 	andlt	r1, r5, #2
    6924:	0100001a 	tsteq	r0, sl, lsl r0
    6928:	00001be6 	andeq	r1, r0, r6, ror #23
    692c:	001bfc0e 	andseq	pc, fp, lr, lsl #24
    6930:	00a00f00 	adceq	r0, r0, r0, lsl #30
    6934:	b80f0000 	stmdalt	pc, {}	; <UNPREDICTABLE>
    6938:	00000009 	andeq	r0, r0, r9
    693c:	1ab20300 	bne	fec87544 <_bss_end+0xfec75854>
    6940:	04160000 	ldreq	r0, [r6], #-0
    6944:	00001ab2 			; <UNDEFINED> instruction: 0x00001ab2
    6948:	001bfc03 	andseq	pc, fp, r3, lsl #24
    694c:	f7042400 			; <UNDEFINED> instruction: 0xf7042400
    6950:	1600001b 			; <UNDEFINED> instruction: 0x1600001b
    6954:	00134904 	andseq	r4, r3, r4, lsl #18
    6958:	1c0d0300 	stcne	3, cr0, [sp], {-0}
    695c:	04360000 	ldrteq	r0, [r6], #-0
    6960:	00001349 	andeq	r1, r0, r9, asr #6
    6964:	14310424 	ldrtne	r0, [r1], #-1060	; 0xfffffbdc
    6968:	dc170000 	ldcle	0, cr0, [r7], {-0}
    696c:	08000025 	stmdaeq	r0, {r0, r2, r5}
    6970:	ca070a07 	bgt	1c9194 <_bss_end+0x1b74a4>
    6974:	69000003 	stmdbvs	r0, {r0, r1}
    6978:	2900001d 	stmdbcs	r0, {r0, r2, r3, r4}
    697c:	000003ca 	andeq	r0, r0, sl, asr #7
    6980:	dc180100 	ldfles	f0, [r8], {-0}
    6984:	09000025 	stmdbeq	r0, {r0, r2, r5}
    6988:	6e000029 	cdpvs	0, 0, cr0, cr0, cr9, {1}
    698c:	0100001d 	tsteq	r0, sp, lsl r0
    6990:	00001c52 	andeq	r1, r0, r2, asr ip
    6994:	00001c5d 	andeq	r1, r0, sp, asr ip
    6998:	001d6e0e 	andseq	r6, sp, lr, lsl #28
    699c:	1d790f00 	ldclne	15, cr0, [r9, #-0]
    69a0:	0c000000 	stceq	0, cr0, [r0], {-0}
    69a4:	00000765 	andeq	r0, r0, r5, ror #14
    69a8:	aa0a0d07 	bge	289dcc <_bss_end+0x2780dc>
    69ac:	04000002 	streq	r0, [r0], #-2
    69b0:	0025dc11 	eoreq	sp, r5, r1, lsl ip
    69b4:	05100700 	ldreq	r0, [r0, #-1792]	; 0xfffff900
    69b8:	0000288c 	andeq	r2, r0, ip, lsl #17
    69bc:	00001d6e 	andeq	r1, r0, lr, ror #26
    69c0:	001c8301 	andseq	r8, ip, r1, lsl #6
    69c4:	001c8900 	andseq	r8, ip, r0, lsl #18
    69c8:	1d6e0e00 	stclne	14, cr0, [lr, #-0]
    69cc:	37000000 	strcc	r0, [r0, -r0]
    69d0:	000025db 	ldrdeq	r2, [r0], -fp
    69d4:	19051507 	stmdbne	r5, {r0, r1, r2, r8, sl, ip}
    69d8:	b8000022 	stmdalt	r0, {r1, r5}
    69dc:	01000009 	tsteq	r0, r9
    69e0:	00001c24 	andeq	r1, r0, r4, lsr #24
    69e4:	001ca701 	andseq	sl, ip, r1, lsl #14
    69e8:	001cb200 	andseq	fp, ip, r0, lsl #4
    69ec:	1d6e0e00 	stclne	14, cr0, [lr, #-0]
    69f0:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    69f4:	00000000 	andeq	r0, r0, r0
    69f8:	0002d31e 	andeq	sp, r2, lr, lsl r3
    69fc:	161a0700 	ldrne	r0, [sl], -r0, lsl #14
    6a00:	0000280a 	andeq	r2, r0, sl, lsl #16
    6a04:	00000079 	andeq	r0, r0, r9, ror r0
    6a08:	02100201 	andseq	r0, r0, #268435456	; 0x10000000
    6a0c:	00001c24 	andeq	r1, r0, r4, lsr #24
    6a10:	001cd301 	andseq	sp, ip, r1, lsl #6
    6a14:	001ce300 	andseq	lr, ip, r0, lsl #6
    6a18:	1d6e0e00 	stclne	14, cr0, [lr, #-0]
    6a1c:	120f0000 	andne	r0, pc, #0
    6a20:	0f00000d 	svceq	0x0000000d
    6a24:	00000079 	andeq	r0, r0, r9, ror r0
    6a28:	1ce01e00 	stclne	14, cr1, [r0]
    6a2c:	2c070000 	stccs	0, cr0, [r7], {-0}
    6a30:	00217216 	eoreq	r7, r1, r6, lsl r2
    6a34:	00007900 	andeq	r7, r0, r0, lsl #18
    6a38:	10020100 	andne	r0, r2, r0, lsl #2
    6a3c:	001c2403 	andseq	r2, ip, r3, lsl #8
    6a40:	1d040100 	stfnes	f0, [r4, #-0]
    6a44:	1d140000 	ldcne	0, cr0, [r4, #-0]
    6a48:	6e0e0000 	cdpvs	0, 0, cr0, cr14, cr0, {0}
    6a4c:	0f00001d 	svceq	0x0000001d
    6a50:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    6a54:	0000790f 	andeq	r7, r0, pc, lsl #18
    6a58:	ad1e0000 	ldcge	0, cr0, [lr, #-0]
    6a5c:	07000009 	streq	r0, [r0, -r9]
    6a60:	236b1233 	cmncs	fp, #805306371	; 0x30000003
    6a64:	02aa0000 	adceq	r0, sl, #0
    6a68:	02010000 	andeq	r0, r1, #0
    6a6c:	1c240410 	cfstrsne	mvf0, [r4], #-64	; 0xffffffc0
    6a70:	35010000 	strcc	r0, [r1, #-0]
    6a74:	3b00001d 	blcc	6af0 <CPSR_IRQ_INHIBIT+0x6a70>
    6a78:	0e00001d 	mcreq	0, 0, r0, cr0, cr13, {0}
    6a7c:	00001d6e 	andeq	r1, r0, lr, ror #26
    6a80:	24ea1b00 	strbtcs	r1, [sl], #2816	; 0xb00
    6a84:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    6a88:	00264312 	eoreq	r4, r6, r2, lsl r3
    6a8c:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6a90:	10020100 	andne	r0, r2, r0, lsl #2
    6a94:	001c2405 	andseq	r2, ip, r5, lsl #8
    6a98:	1d580100 	ldfnee	f0, [r8, #-0]
    6a9c:	6e0e0000 	cdpvs	0, 0, cr0, cr14, cr0, {0}
    6aa0:	0f00001d 	svceq	0x0000001d
    6aa4:	000000a0 	andeq	r0, r0, r0, lsr #1
    6aa8:	0009b80f 	andeq	fp, r9, pc, lsl #16
    6aac:	03000000 	movweq	r0, #0
    6ab0:	00001c24 	andeq	r1, r0, r4, lsr #24
    6ab4:	1c240416 	cfstrsne	mvf0, [r4], #-88	; 0xffffffa8
    6ab8:	6e030000 	cdpvs	0, 0, cr0, cr3, cr0, {0}
    6abc:	2400001d 	strcs	r0, [r0], #-29	; 0xffffffe3
    6ac0:	001d6904 	andseq	r6, sp, r4, lsl #18
    6ac4:	68041600 	stmdavs	r4, {r9, sl, ip}
    6ac8:	03000011 	movweq	r0, #17
    6acc:	00001d7f 	andeq	r1, r0, pc, ror sp
    6ad0:	11680436 	cmnne	r8, r6, lsr r4
    6ad4:	04240000 	strteq	r0, [r4], #-0
    6ad8:	00001250 	andeq	r1, r0, r0, asr r2
    6adc:	002afd17 	eoreq	pc, sl, r7, lsl sp	; <UNPREDICTABLE>
    6ae0:	0a060800 	beq	188ae8 <_bss_end+0x176df8>
    6ae4:	0003ca07 	andeq	ip, r3, r7, lsl #20
    6ae8:	001edb00 	andseq	sp, lr, r0, lsl #22
    6aec:	03ca2900 	biceq	r2, sl, #0, 18
    6af0:	01000000 	mrseq	r0, (UNDEF: 0)
    6af4:	002afd18 	eoreq	pc, sl, r8, lsl sp	; <UNPREDICTABLE>
    6af8:	001e6700 	andseq	r6, lr, r0, lsl #14
    6afc:	001ee000 	andseq	lr, lr, r0
    6b00:	1dc40100 	stfnee	f0, [r4]
    6b04:	1dcf0000 	stclne	0, cr0, [pc]	; 6b0c <CPSR_IRQ_INHIBIT+0x6a8c>
    6b08:	e00e0000 	and	r0, lr, r0
    6b0c:	0f00001e 	svceq	0x0000001e
    6b10:	00001eeb 	andeq	r1, r0, fp, ror #29
    6b14:	07650c00 	strbeq	r0, [r5, -r0, lsl #24]!
    6b18:	0d060000 	stceq	0, cr0, [r6, #-0]
    6b1c:	0002aa0a 	andeq	sl, r2, sl, lsl #20
    6b20:	fd110400 	ldc2	4, cr0, [r1, #-0]
    6b24:	0600002a 	streq	r0, [r0], -sl, lsr #32
    6b28:	2d820510 	cfstr32cs	mvfx0, [r2, #64]	; 0x40
    6b2c:	1ee00000 	cdpne	0, 14, cr0, cr0, cr0, {0}
    6b30:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    6b34:	fb00001d 	blx	6bb2 <CPSR_IRQ_INHIBIT+0x6b32>
    6b38:	0e00001d 	mcreq	0, 0, r0, cr0, cr13, {0}
    6b3c:	00001ee0 	andeq	r1, r0, r0, ror #29
    6b40:	2afc3700 	bcs	fff14748 <_bss_end+0xfff02a58>
    6b44:	16060000 	strne	r0, [r6], -r0
    6b48:	00272e05 	eoreq	r2, r7, r5, lsl #28
    6b4c:	0009b800 	andeq	fp, r9, r0, lsl #16
    6b50:	1d960100 	ldfnes	f0, [r6]
    6b54:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    6b58:	2400001e 	strcs	r0, [r0], #-30	; 0xffffffe2
    6b5c:	0e00001e 	mcreq	0, 0, r0, cr0, cr14, {0}
    6b60:	00001ee0 	andeq	r1, r0, r0, ror #29
    6b64:	0000380e 	andeq	r3, r0, lr, lsl #16
    6b68:	d31e0000 	tstle	lr, #0
    6b6c:	06000002 	streq	r0, [r0], -r2
    6b70:	229b161b 	addscs	r1, fp, #28311552	; 0x1b00000
    6b74:	00790000 	rsbseq	r0, r9, r0
    6b78:	02010000 	andeq	r0, r1, #0
    6b7c:	1d960210 	lfmne	f0, 4, [r6, #64]	; 0x40
    6b80:	45010000 	strmi	r0, [r1, #-0]
    6b84:	5500001e 	strpl	r0, [r0, #-30]	; 0xffffffe2
    6b88:	0e00001e 	mcreq	0, 0, r0, cr0, cr14, {0}
    6b8c:	00001ee0 	andeq	r1, r0, r0, ror #29
    6b90:	000d120f 	andeq	r1, sp, pc, lsl #4
    6b94:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    6b98:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6b9c:	00001ce0 	andeq	r1, r0, r0, ror #25
    6ba0:	94162206 	ldrls	r2, [r6], #-518	; 0xfffffdfa
    6ba4:	7900002a 	stmdbvc	r0, {r1, r3, r5}
    6ba8:	01000000 	mrseq	r0, (UNDEF: 0)
    6bac:	96031002 	strls	r1, [r3], -r2
    6bb0:	0100001d 	tsteq	r0, sp, lsl r0
    6bb4:	00001e76 	andeq	r1, r0, r6, ror lr
    6bb8:	00001e86 	andeq	r1, r0, r6, lsl #29
    6bbc:	001ee00e 	andseq	lr, lr, lr
    6bc0:	02b70f00 	adcseq	r0, r7, #0, 30
    6bc4:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6bc8:	00000000 	andeq	r0, r0, r0
    6bcc:	0009ad1e 	andeq	sl, r9, lr, lsl sp
    6bd0:	122c0600 	eorne	r0, ip, #0, 12
    6bd4:	0000213f 	andeq	r2, r0, pc, lsr r1
    6bd8:	000002aa 	andeq	r0, r0, sl, lsr #5
    6bdc:	04100201 	ldreq	r0, [r0], #-513	; 0xfffffdff
    6be0:	00001d96 	muleq	r0, r6, sp
    6be4:	001ea701 	andseq	sl, lr, r1, lsl #14
    6be8:	001ead00 	andseq	sl, lr, r0, lsl #26
    6bec:	1ee00e00 	cdpne	14, 14, cr0, cr0, cr0, {0}
    6bf0:	1b000000 	blne	6bf8 <CPSR_IRQ_INHIBIT+0x6b78>
    6bf4:	000024ea 	andeq	r2, r0, sl, ror #9
    6bf8:	c6123706 	ldrgt	r3, [r2], -r6, lsl #14
    6bfc:	aa000026 	bge	6c9c <CPSR_IRQ_INHIBIT+0x6c1c>
    6c00:	01000002 	tsteq	r0, r2
    6c04:	96051002 	strls	r1, [r5], -r2
    6c08:	0100001d 	tsteq	r0, sp, lsl r0
    6c0c:	00001eca 	andeq	r1, r0, sl, asr #29
    6c10:	001ee00e 	andseq	lr, lr, lr
    6c14:	00a00f00 	adceq	r0, r0, r0, lsl #30
    6c18:	b80f0000 	stmdalt	pc, {}	; <UNPREDICTABLE>
    6c1c:	00000009 	andeq	r0, r0, r9
    6c20:	1d960300 	ldcne	3, cr0, [r6]
    6c24:	04160000 	ldreq	r0, [r6], #-0
    6c28:	00001d96 	muleq	r0, r6, sp
    6c2c:	001ee003 	andseq	lr, lr, r3
    6c30:	db042400 	blle	10fc38 <_bss_end+0xfdf48>
    6c34:	1600001e 			; <UNDEFINED> instruction: 0x1600001e
    6c38:	00106904 	andseq	r6, r0, r4, lsl #18
    6c3c:	1ef10300 	cdpne	3, 15, cr0, cr1, cr0, {0}
    6c40:	04360000 	ldrteq	r0, [r6], #-0
    6c44:	00001069 	andeq	r1, r0, r9, rrx
    6c48:	11510424 	cmpne	r1, r4, lsr #8
    6c4c:	ea170000 	b	5c6c54 <_bss_end+0x5b4f64>
    6c50:	0800002d 	stmdaeq	r0, {r0, r2, r3, r5}
    6c54:	ca070a05 	bgt	1c9470 <_bss_end+0x1b7780>
    6c58:	4d000003 	stcmi	0, cr0, [r0, #-12]
    6c5c:	29000020 	stmdbcs	r0, {r5}
    6c60:	000003ca 	andeq	r0, r0, sl, asr #7
    6c64:	ea180100 	b	60706c <_bss_end+0x5f537c>
    6c68:	7500002d 	strvc	r0, [r0, #-45]	; 0xffffffd3
    6c6c:	52000026 	andpl	r0, r0, #38	; 0x26
    6c70:	01000020 	tsteq	r0, r0, lsr #32
    6c74:	00001f36 	andeq	r1, r0, r6, lsr pc
    6c78:	00001f41 	andeq	r1, r0, r1, asr #30
    6c7c:	0020520e 	eoreq	r5, r0, lr, lsl #4
    6c80:	205d0f00 	subscs	r0, sp, r0, lsl #30
    6c84:	0c000000 	stceq	0, cr0, [r0], {-0}
    6c88:	00000765 	andeq	r0, r0, r5, ror #14
    6c8c:	aa0a0d05 	bge	28a0a8 <_bss_end+0x2783b8>
    6c90:	04000002 	streq	r0, [r0], #-2
    6c94:	002dea11 	eoreq	lr, sp, r1, lsl sl
    6c98:	05100500 	ldreq	r0, [r0, #-1280]	; 0xfffffb00
    6c9c:	000020a4 	andeq	r2, r0, r4, lsr #1
    6ca0:	00002052 	andeq	r2, r0, r2, asr r0
    6ca4:	001f6701 	andseq	r6, pc, r1, lsl #14
    6ca8:	001f6d00 	andseq	r6, pc, r0, lsl #26
    6cac:	20520e00 	subscs	r0, r2, r0, lsl #28
    6cb0:	37000000 	strcc	r0, [r0, -r0]
    6cb4:	00002de9 	andeq	r2, r0, r9, ror #27
    6cb8:	46051605 	strmi	r1, [r5], -r5, lsl #12
    6cbc:	b800002b 	stmdalt	r0, {r0, r1, r3, r5}
    6cc0:	01000009 	tsteq	r0, r9
    6cc4:	00001f08 	andeq	r1, r0, r8, lsl #30
    6cc8:	001f8b01 	andseq	r8, pc, r1, lsl #22
    6ccc:	001f9600 	andseq	r9, pc, r0, lsl #12
    6cd0:	20520e00 	subscs	r0, r2, r0, lsl #28
    6cd4:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    6cd8:	00000000 	andeq	r0, r0, r0
    6cdc:	0002d31e 	andeq	sp, r2, lr, lsl r3
    6ce0:	161b0500 	ldrne	r0, [fp], -r0, lsl #10
    6ce4:	00002ce0 	andeq	r2, r0, r0, ror #25
    6ce8:	00000079 	andeq	r0, r0, r9, ror r0
    6cec:	02100201 	andseq	r0, r0, #268435456	; 0x10000000
    6cf0:	00001f08 	andeq	r1, r0, r8, lsl #30
    6cf4:	001fb701 	andseq	fp, pc, r1, lsl #14
    6cf8:	001fc700 	andseq	ip, pc, r0, lsl #14
    6cfc:	20520e00 	subscs	r0, r2, r0, lsl #28
    6d00:	120f0000 	andne	r0, pc, #0
    6d04:	0f00000d 	svceq	0x0000000d
    6d08:	00000079 	andeq	r0, r0, r9, ror r0
    6d0c:	1ce01e00 	stclne	14, cr1, [r0]
    6d10:	27050000 	strcs	r0, [r5, -r0]
    6d14:	001f9916 	andseq	r9, pc, r6, lsl r9	; <UNPREDICTABLE>
    6d18:	00007900 	andeq	r7, r0, r0, lsl #18
    6d1c:	10020100 	andne	r0, r2, r0, lsl #2
    6d20:	001f0803 	andseq	r0, pc, r3, lsl #16
    6d24:	1fe80100 	svcne	0x00e80100
    6d28:	1ff80000 	svcne	0x00f80000
    6d2c:	520e0000 	andpl	r0, lr, #0
    6d30:	0f000020 	svceq	0x00000020
    6d34:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    6d38:	0000790f 	andeq	r7, r0, pc, lsl #18
    6d3c:	ad1e0000 	ldcge	0, cr0, [lr, #-0]
    6d40:	05000009 	streq	r0, [r0, #-9]
    6d44:	22e61230 	rsccs	r1, r6, #48, 4
    6d48:	02aa0000 	adceq	r0, sl, #0
    6d4c:	02010000 	andeq	r0, r1, #0
    6d50:	1f080410 	svcne	0x00080410
    6d54:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    6d58:	1f000020 	svcne	0x00000020
    6d5c:	0e000020 	cdpeq	0, 0, cr0, cr0, cr0, {1}
    6d60:	00002052 	andeq	r2, r0, r2, asr r0
    6d64:	24ea1b00 	strbtcs	r1, [sl], #2816	; 0xb00
    6d68:	3b050000 	blcc	146d70 <_bss_end+0x135080>
    6d6c:	002c1312 	eoreq	r1, ip, r2, lsl r3
    6d70:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6d74:	10020100 	andne	r0, r2, r0, lsl #2
    6d78:	001f0805 	andseq	r0, pc, r5, lsl #16
    6d7c:	203c0100 	eorscs	r0, ip, r0, lsl #2
    6d80:	520e0000 	andpl	r0, lr, #0
    6d84:	0f000020 	svceq	0x00000020
    6d88:	000000a0 	andeq	r0, r0, r0, lsr #1
    6d8c:	0009b80f 	andeq	fp, r9, pc, lsl #16
    6d90:	03000000 	movweq	r0, #0
    6d94:	00001f08 	andeq	r1, r0, r8, lsl #30
    6d98:	1f080416 	svcne	0x00080416
    6d9c:	52030000 	andpl	r0, r3, #0
    6da0:	24000020 	strcs	r0, [r0], #-32	; 0xffffffe0
    6da4:	00204d04 	eoreq	r4, r0, r4, lsl #26
    6da8:	2f041600 	svccs	0x00041600
    6dac:	0300000d 	movweq	r0, #13
    6db0:	00002063 	andeq	r2, r0, r3, rrx
    6db4:	0d2f0436 	cfstrseq	mvf0, [pc, #-216]!	; 6ce4 <CPSR_IRQ_INHIBIT+0x6c64>
    6db8:	04240000 	strteq	r0, [r4], #-0
    6dbc:	00000e17 	andeq	r0, r0, r7, lsl lr
    6dc0:	002f2017 	eoreq	r2, pc, r7, lsl r0	; <UNPREDICTABLE>
    6dc4:	09040800 	stmdbeq	r4, {fp}
    6dc8:	0003ca07 	andeq	ip, r3, r7, lsl #20
    6dcc:	0021c400 	eoreq	ip, r1, r0, lsl #8
    6dd0:	03ca2900 	biceq	r2, sl, #0, 18
    6dd4:	01000000 	mrseq	r0, (UNDEF: 0)
    6dd8:	002f2018 	eoreq	r2, pc, r8, lsl r0	; <UNPREDICTABLE>
    6ddc:	0024ac00 	eoreq	sl, r4, r0, lsl #24
    6de0:	0021c900 	eoreq	ip, r1, r0, lsl #18
    6de4:	20a80100 	adccs	r0, r8, r0, lsl #2
    6de8:	20b30000 	adcscs	r0, r3, r0
    6dec:	c90e0000 	stmdbgt	lr, {}	; <UNPREDICTABLE>
    6df0:	0f000021 	svceq	0x00000021
    6df4:	000021d4 	ldrdeq	r2, [r0], -r4
    6df8:	25840c00 	strcs	r0, [r4, #3072]	; 0xc00
    6dfc:	0c040000 	stceq	0, cr0, [r4], {-0}
    6e00:	00003809 	andeq	r3, r0, r9, lsl #16
    6e04:	20110400 	andscs	r0, r1, r0, lsl #8
    6e08:	0400002f 	streq	r0, [r0], #-47	; 0xffffffd1
    6e0c:	20d7050f 	sbcscs	r0, r7, pc, lsl #10
    6e10:	21c90000 	biccs	r0, r9, r0
    6e14:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    6e18:	e4000020 	str	r0, [r0], #-32	; 0xffffffe0
    6e1c:	0e000020 	cdpeq	0, 0, cr0, cr0, cr0, {1}
    6e20:	000021c9 	andeq	r2, r0, r9, asr #3
    6e24:	0000380f 	andeq	r3, r0, pc, lsl #16
    6e28:	1f370000 	svcne	0x00370000
    6e2c:	0400002f 	streq	r0, [r0], #-47	; 0xffffffd1
    6e30:	29500514 	ldmdbcs	r0, {r2, r4, r8, sl}^
    6e34:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    6e38:	7a010000 	bvc	46e40 <_bss_end+0x35150>
    6e3c:	01000020 	tsteq	r0, r0, lsr #32
    6e40:	00002102 	andeq	r2, r0, r2, lsl #2
    6e44:	0000210d 	andeq	r2, r0, sp, lsl #2
    6e48:	0021c90e 	eoreq	ip, r1, lr, lsl #18
    6e4c:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6e50:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6e54:	000002d3 	ldrdeq	r0, [r0], -r3
    6e58:	a0161904 	andsge	r1, r6, r4, lsl #18
    6e5c:	7900002d 	stmdbvc	r0, {r0, r2, r3, r5}
    6e60:	01000000 	mrseq	r0, (UNDEF: 0)
    6e64:	7a021002 	bvc	8ae74 <_bss_end+0x79184>
    6e68:	01000020 	tsteq	r0, r0, lsr #32
    6e6c:	0000212e 	andeq	r2, r0, lr, lsr #2
    6e70:	0000213e 	andeq	r2, r0, lr, lsr r1
    6e74:	0021c90e 	eoreq	ip, r1, lr, lsl #18
    6e78:	0d120f00 	ldceq	15, cr0, [r2, #-0]
    6e7c:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    6e80:	00000000 	andeq	r0, r0, r0
    6e84:	001ce01e 	andseq	lr, ip, lr, lsl r0
    6e88:	161e0400 	ldrne	r0, [lr], -r0, lsl #8
    6e8c:	00002d04 	andeq	r2, r0, r4, lsl #26
    6e90:	00000079 	andeq	r0, r0, r9, ror r0
    6e94:	03100201 	tsteq	r0, #268435456	; 0x10000000
    6e98:	0000207a 	andeq	r2, r0, sl, ror r0
    6e9c:	00215f01 	eoreq	r5, r1, r1, lsl #30
    6ea0:	00216f00 	eoreq	r6, r1, r0, lsl #30
    6ea4:	21c90e00 	biccs	r0, r9, r0, lsl #28
    6ea8:	b70f0000 	strlt	r0, [pc, -r0]
    6eac:	0f000002 	svceq	0x00000002
    6eb0:	00000079 	andeq	r0, r0, r9, ror r0
    6eb4:	09ad1e00 	stmibeq	sp!, {r9, sl, fp, ip}
    6eb8:	2c040000 	stccs	0, cr0, [r4], {-0}
    6ebc:	002ba712 	eoreq	sl, fp, r2, lsl r7
    6ec0:	0002aa00 	andeq	sl, r2, r0, lsl #20
    6ec4:	10020100 	andne	r0, r2, r0, lsl #2
    6ec8:	00207a04 	eoreq	r7, r0, r4, lsl #20
    6ecc:	21900100 	orrscs	r0, r0, r0, lsl #2
    6ed0:	21960000 	orrscs	r0, r6, r0
    6ed4:	c90e0000 	stmdbgt	lr, {}	; <UNPREDICTABLE>
    6ed8:	00000021 	andeq	r0, r0, r1, lsr #32
    6edc:	0024ea1b 	eoreq	lr, r4, fp, lsl sl
    6ee0:	123a0400 	eorsne	r0, sl, #0, 8
    6ee4:	00002556 	andeq	r2, r0, r6, asr r5
    6ee8:	000002aa 	andeq	r0, r0, sl, lsr #5
    6eec:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    6ef0:	0000207a 	andeq	r2, r0, sl, ror r0
    6ef4:	0021b301 	eoreq	fp, r1, r1, lsl #6
    6ef8:	21c90e00 	biccs	r0, r9, r0, lsl #28
    6efc:	a00f0000 	andge	r0, pc, r0
    6f00:	0f000000 	svceq	0x00000000
    6f04:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    6f08:	7a030000 	bvc	c6f10 <_bss_end+0xb5220>
    6f0c:	16000020 	strne	r0, [r0], -r0, lsr #32
    6f10:	00207a04 	eoreq	r7, r0, r4, lsl #20
    6f14:	21c90300 	biccs	r0, r9, r0, lsl #6
    6f18:	04240000 	strteq	r0, [r4], #-0
    6f1c:	000021c4 	andeq	r2, r0, r4, asr #3
    6f20:	09c60416 	stmibeq	r6, {r1, r2, r4, sl}^
    6f24:	da030000 	ble	c6f2c <_bss_end+0xb523c>
    6f28:	36000021 	strcc	r0, [r0], -r1, lsr #32
    6f2c:	0009c604 	andeq	ip, r9, r4, lsl #12
    6f30:	ae042400 	cfcpysge	mvf2, mvf4
    6f34:	1700000a 	strne	r0, [r0, -sl]
    6f38:	00002881 	andeq	r2, r0, r1, lsl #17
    6f3c:	070a030c 	streq	r0, [sl, -ip, lsl #6]
    6f40:	000003ca 	andeq	r0, r0, sl, asr #7
    6f44:	0000235f 	andeq	r2, r0, pc, asr r3
    6f48:	0003ca29 	andeq	ip, r3, r9, lsr #20
    6f4c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    6f50:	00002881 	andeq	r2, r0, r1, lsl #17
    6f54:	00001eda 	ldrdeq	r1, [r0], -sl
    6f58:	00002364 	andeq	r2, r0, r4, ror #6
    6f5c:	00221f01 	eoreq	r1, r2, r1, lsl #30
    6f60:	00222a00 	eoreq	r2, r2, r0, lsl #20
    6f64:	23640e00 	cmncs	r4, #0, 28
    6f68:	6f0f0000 	svcvs	0x000f0000
    6f6c:	00000023 	andeq	r0, r0, r3, lsr #32
    6f70:	00283f0c 	eoreq	r3, r8, ip, lsl #30
    6f74:	090e0300 	stmdbeq	lr, {r8, r9}
    6f78:	00000038 	andeq	r0, r0, r8, lsr r0
    6f7c:	2c0d0c04 	stccs	12, cr0, [sp], {4}
    6f80:	10030000 	andne	r0, r3, r0
    6f84:	0002aa0a 	andeq	sl, r2, sl, lsl #20
    6f88:	be0c0800 	cdplt	8, 0, cr0, cr12, cr0, {0}
    6f8c:	03000022 	movweq	r0, #34	; 0x22
    6f90:	02aa0a12 	adceq	r0, sl, #73728	; 0x12000
    6f94:	11090000 	mrsne	r0, (UNDEF: 9)
    6f98:	00002881 	andeq	r2, r0, r1, lsl #17
    6f9c:	30051503 	andcc	r1, r5, r3, lsl #10
    6fa0:	6400002b 	strvs	r0, [r0], #-43	; 0xffffffd5
    6fa4:	01000023 	tsteq	r0, r3, lsr #32
    6fa8:	0000226a 	andeq	r2, r0, sl, ror #4
    6fac:	0000227f 	andeq	r2, r0, pc, ror r2
    6fb0:	0023640e 	eoreq	r6, r3, lr, lsl #8
    6fb4:	00380f00 	eorseq	r0, r8, r0, lsl #30
    6fb8:	aa0f0000 	bge	3c6fc0 <_bss_end+0x3b52d0>
    6fbc:	0f000002 	svceq	0x00000002
    6fc0:	000002aa 	andeq	r0, r0, sl, lsr #5
    6fc4:	28803700 	stmcs	r0, {r8, r9, sl, ip, sp}
    6fc8:	1d030000 	stcne	0, cr0, [r3, #-0]
    6fcc:	0026b205 	eoreq	fp, r6, r5, lsl #4
    6fd0:	0009b800 	andeq	fp, r9, r0, lsl #16
    6fd4:	21f10100 	mvnscs	r0, r0, lsl #2
    6fd8:	9d010000 	stcls	0, cr0, [r1, #-0]
    6fdc:	a8000022 	stmdage	r0, {r1, r5}
    6fe0:	0e000022 	cdpeq	0, 0, cr0, cr0, cr2, {1}
    6fe4:	00002364 	andeq	r2, r0, r4, ror #6
    6fe8:	0000380e 	andeq	r3, r0, lr, lsl #16
    6fec:	d31e0000 	tstle	lr, #0
    6ff0:	03000002 	movweq	r0, #2
    6ff4:	2dd01623 	ldclcs	6, cr1, [r0, #140]	; 0x8c
    6ff8:	00790000 	rsbseq	r0, r9, r0
    6ffc:	02010000 	andeq	r0, r1, #0
    7000:	21f10210 	mvnscs	r0, r0, lsl r2
    7004:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    7008:	d9000022 	stmdble	r0, {r1, r5}
    700c:	0e000022 	cdpeq	0, 0, cr0, cr0, cr2, {1}
    7010:	00002364 	andeq	r2, r0, r4, ror #6
    7014:	000d120f 	andeq	r1, sp, pc, lsl #4
    7018:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    701c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    7020:	00001ce0 	andeq	r1, r0, r0, ror #25
    7024:	7e162f03 	cdpvc	15, 1, cr2, cr6, cr3, {0}
    7028:	7900002e 	stmdbvc	r0, {r1, r2, r3, r5}
    702c:	01000000 	mrseq	r0, (UNDEF: 0)
    7030:	f1031002 			; <UNDEFINED> instruction: 0xf1031002
    7034:	01000021 	tsteq	r0, r1, lsr #32
    7038:	000022fa 	strdeq	r2, [r0], -sl
    703c:	0000230a 	andeq	r2, r0, sl, lsl #6
    7040:	0023640e 	eoreq	r6, r3, lr, lsl #8
    7044:	02b70f00 	adcseq	r0, r7, #0, 30
    7048:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    704c:	00000000 	andeq	r0, r0, r0
    7050:	0009ad1e 	andeq	sl, r9, lr, lsl sp
    7054:	123b0300 	eorsne	r0, fp, #0, 6
    7058:	00002e1f 	andeq	r2, r0, pc, lsl lr
    705c:	000002aa 	andeq	r0, r0, sl, lsr #5
    7060:	04100201 	ldreq	r0, [r0], #-513	; 0xfffffdff
    7064:	000021f1 	strdeq	r2, [r0], -r1
    7068:	00232b01 	eoreq	r2, r3, r1, lsl #22
    706c:	00233100 	eoreq	r3, r3, r0, lsl #2
    7070:	23640e00 	cmncs	r4, #0, 28
    7074:	1b000000 	blne	707c <CPSR_IRQ_INHIBIT+0x6ffc>
    7078:	000024ea 	andeq	r2, r0, sl, ror #9
    707c:	19124703 	ldmdbne	r2, {r0, r1, r8, r9, sl, lr}
    7080:	aa00002a 	bge	7130 <CPSR_IRQ_INHIBIT+0x70b0>
    7084:	01000002 	tsteq	r0, r2
    7088:	f1051002 			; <UNDEFINED> instruction: 0xf1051002
    708c:	01000021 	tsteq	r0, r1, lsr #32
    7090:	0000234e 	andeq	r2, r0, lr, asr #6
    7094:	0023640e 	eoreq	r6, r3, lr, lsl #8
    7098:	00a00f00 	adceq	r0, r0, r0, lsl #30
    709c:	b80f0000 	stmdalt	pc, {}	; <UNPREDICTABLE>
    70a0:	00000009 	andeq	r0, r0, r9
    70a4:	21f10300 	mvnscs	r0, r0, lsl #6
    70a8:	04160000 	ldreq	r0, [r6], #-0
    70ac:	000021f1 	strdeq	r2, [r0], -r1
    70b0:	00236403 	eoreq	r6, r3, r3, lsl #8
    70b4:	5f042400 	svcpl	0x00042400
    70b8:	36000023 	strcc	r0, [r0], -r3, lsr #32
    70bc:	0002c204 	andeq	ip, r2, r4, lsl #4
    70c0:	ae042400 	cfcpysge	mvf2, mvf4
    70c4:	38000003 	stmdacc	r0, {r0, r1}
    70c8:	00000038 	andeq	r0, r0, r8, lsr r0
    70cc:	0000238c 	andeq	r2, r0, ip, lsl #7
    70d0:	04160039 	ldreq	r0, [r6], #-57	; 0xffffffc7
    70d4:	00002392 	muleq	r0, r2, r3
    70d8:	2030043a 	eorscs	r0, r0, sl, lsr r4
    70dc:	23810000 	orrcs	r0, r1, #0
    70e0:	04240000 	strteq	r0, [r4], #-0
    70e4:	00000504 	andeq	r0, r0, r4, lsl #10
    70e8:	001a193b 	andseq	r1, sl, fp, lsr r9
    70ec:	0023b900 	eoreq	fp, r3, r0, lsl #18
    70f0:	00d4e800 	sbcseq	lr, r4, r0, lsl #16
    70f4:	00007400 	andeq	r7, r0, r0, lsl #8
    70f8:	f19c0100 			; <UNDEFINED> instruction: 0xf19c0100
    70fc:	3c000023 	stccc	0, cr0, [r0], {35}	; 0x23
    7100:	0000032c 	andeq	r0, r0, ip, lsr #6
    7104:	00001aa1 	andeq	r1, r0, r1, lsr #21
    7108:	3d649102 	stfccp	f1, [r4, #-8]!
    710c:	00001e14 	andeq	r1, r0, r4, lsl lr
    7110:	b72e4308 	strlt	r4, [lr, -r8, lsl #6]!
    7114:	02000002 	andeq	r0, r0, #2
    7118:	6e3d6091 	mrcvs	0, 1, r6, cr13, cr1, {4}
    711c:	08000003 	stmdaeq	r0, {r0, r1}
    7120:	01074443 	tsteq	r7, r3, asr #8
    7124:	91020000 	mrsls	r0, (UNDEF: 2)
    7128:	00663e5c 	rsbeq	r3, r6, ip, asr lr
    712c:	fc214a08 	stc2	10, cr4, [r1], #-32	; 0xffffffe0	; <UNPREDICTABLE>
    7130:	0200001b 	andeq	r0, r0, #27
    7134:	3f006c91 	svccc	0x00006c91
    7138:	000019f6 	strdeq	r1, [r0], -r6
    713c:	00002408 	andeq	r2, r0, r8, lsl #8
    7140:	0000d4c8 	andeq	sp, r0, r8, asr #9
    7144:	00000020 	andeq	r0, r0, r0, lsr #32
    7148:	24159c01 	ldrcs	r9, [r5], #-3073	; 0xfffff3ff
    714c:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7150:	a1000003 	tstge	r0, r3
    7154:	0200001a 	andeq	r0, r0, #26
    7158:	3f007491 	svccc	0x00007491
    715c:	00001bc9 	andeq	r1, r0, r9, asr #23
    7160:	0000242c 	andeq	r2, r0, ip, lsr #8
    7164:	0000d49c 	muleq	r0, ip, r4
    7168:	0000002c 	andeq	r0, r0, ip, lsr #32
    716c:	24579c01 	ldrbcs	r9, [r7], #-3073	; 0xfffff3ff
    7170:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7174:	02000003 	andeq	r0, r0, #3
    7178:	0200001c 	andeq	r0, r0, #28
    717c:	64407491 	strbvs	r7, [r0], #-1169	; 0xfffffb6f
    7180:	08007269 	stmdaeq	r0, {r0, r3, r5, r6, r9, ip, sp, lr}
    7184:	00a02d35 	adceq	r2, r0, r5, lsr sp
    7188:	91020000 	mrsls	r0, (UNDEF: 2)
    718c:	266e3d70 			; <UNDEFINED> instruction: 0x266e3d70
    7190:	35080000 	strcc	r0, [r8, #-0]
    7194:	0009b838 	andeq	fp, r9, r8, lsr r8
    7198:	6c910200 	lfmvs	f0, 4, [r1], {0}
    719c:	1ba23b00 	blne	fe895da4 <_bss_end+0xfe8840b4>
    71a0:	246e0000 	strbtcs	r0, [lr], #-0
    71a4:	d4440000 	strble	r0, [r4], #-0
    71a8:	00580000 	subseq	r0, r8, r0
    71ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    71b0:	0000247b 	andeq	r2, r0, fp, ror r4
    71b4:	00032c3c 	andeq	r2, r3, ip, lsr ip
    71b8:	001c0200 	andseq	r0, ip, r0, lsl #4
    71bc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    71c0:	1b713b00 	blne	1c55dc8 <_bss_end+0x1c440d8>
    71c4:	24920000 	ldrcs	r0, [r2], #0
    71c8:	d4080000 	strle	r0, [r8], #-0
    71cc:	003c0000 	eorseq	r0, ip, r0
    71d0:	9c010000 	stcls	0, cr0, [r1], {-0}
    71d4:	000024bd 			; <UNDEFINED> instruction: 0x000024bd
    71d8:	00032c3c 	andeq	r2, r3, ip, lsr ip
    71dc:	001c0200 	andseq	r0, ip, r0, lsl #4
    71e0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    71e4:	000cba3d 	andeq	fp, ip, sp, lsr sl
    71e8:	2c230800 	stccs	8, cr0, [r3], #-0
    71ec:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    71f0:	40709102 	rsbsmi	r9, r0, r2, lsl #2
    71f4:	006d756e 	rsbeq	r7, sp, lr, ror #10
    71f8:	793d2308 	ldmdbvc	sp!, {r3, r8, r9, sp}
    71fc:	02000000 	andeq	r0, r0, #0
    7200:	3f006c91 	svccc	0x00006c91
    7204:	00001b40 	andeq	r1, r0, r0, asr #22
    7208:	000024d4 	ldrdeq	r2, [r0], -r4
    720c:	0000d3dc 	ldrdeq	sp, [r0], -ip
    7210:	0000002c 	andeq	r0, r0, ip, lsr #32
    7214:	24ff9c01 	ldrbtcs	r9, [pc], #3073	; 721c <CPSR_IRQ_INHIBIT+0x719c>
    7218:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    721c:	02000003 	andeq	r0, r0, #3
    7220:	0200001c 	andeq	r0, r0, #28
    7224:	ba3d7491 	blt	f64470 <_bss_end+0xf52780>
    7228:	0800000c 	stmdaeq	r0, {r2, r3}
    722c:	0d12251c 	cfldr32eq	mvfx2, [r2, #-112]	; 0xffffff90
    7230:	91020000 	mrsls	r0, (UNDEF: 2)
    7234:	756e4070 	strbvc	r4, [lr, #-112]!	; 0xffffff90
    7238:	1c08006d 	stcne	0, cr0, [r8], {109}	; 0x6d
    723c:	00007936 	andeq	r7, r0, r6, lsr r9
    7240:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7244:	1b174100 	blne	5d764c <_bss_end+0x5c595c>
    7248:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    724c:	25110000 	ldrcs	r0, [r1, #-0]
    7250:	24020000 	strcs	r0, [r2], #-0
    7254:	42000025 	andmi	r0, r0, #37	; 0x25
    7258:	0000032c 	andeq	r0, r0, ip, lsr #6
    725c:	00001c02 	andeq	r1, r0, r2, lsl #24
    7260:	002e5642 	eoreq	r5, lr, r2, asr #12
    7264:	00003f00 	andeq	r3, r0, r0, lsl #30
    7268:	ff430000 			; <UNDEFINED> instruction: 0xff430000
    726c:	27000024 	strcs	r0, [r0, -r4, lsr #32]
    7270:	3f000029 	svccc	0x00000029
    7274:	a8000025 	stmdage	r0, {r0, r2, r5}
    7278:	340000d3 	strcc	r0, [r0], #-211	; 0xffffff2d
    727c:	01000000 	mrseq	r0, (UNDEF: 0)
    7280:	0025489c 	mlaeq	r5, ip, r8, r4
    7284:	25114400 	ldrcs	r4, [r1, #-1024]	; 0xfffffc00
    7288:	91020000 	mrsls	r0, (UNDEF: 2)
    728c:	ff430074 			; <UNDEFINED> instruction: 0xff430074
    7290:	8d000024 	stchi	0, cr0, [r0, #-144]	; 0xffffff70
    7294:	63000025 	movwvs	r0, #37	; 0x25
    7298:	64000025 	strvs	r0, [r0], #-37	; 0xffffffdb
    729c:	440000d3 	strmi	r0, [r0], #-211	; 0xffffff2d
    72a0:	01000000 	mrseq	r0, (UNDEF: 0)
    72a4:	00256c9c 	mlaeq	r5, ip, ip, r6
    72a8:	25114400 	ldrcs	r4, [r1, #-1024]	; 0xfffffc00
    72ac:	91020000 	mrsls	r0, (UNDEF: 2)
    72b0:	f8450074 			; <UNDEFINED> instruction: 0xf8450074
    72b4:	7a00001a 	bvc	7324 <CPSR_IRQ_INHIBIT+0x72a4>
    72b8:	02000025 	andeq	r0, r0, #37	; 0x25
    72bc:	00002584 	andeq	r2, r0, r4, lsl #11
    72c0:	00032c42 	andeq	r2, r3, r2, asr #24
    72c4:	001c0200 	andseq	r0, ip, r0, lsl #4
    72c8:	6c430000 	marvs	acc0, r0, r3
    72cc:	9c000025 	stcls	0, cr0, [r0], {37}	; 0x25
    72d0:	9f00002c 	svcls	0x0000002c
    72d4:	1c000025 	stcne	0, cr0, [r0], {37}	; 0x25
    72d8:	480000d3 	stmdami	r0, {r0, r1, r4, r6, r7}
    72dc:	01000000 	mrseq	r0, (UNDEF: 0)
    72e0:	0025a89c 	mlaeq	r5, ip, r8, sl
    72e4:	257a4400 	ldrbcs	r4, [sl, #-1024]!	; 0xfffffc00
    72e8:	91020000 	mrsls	r0, (UNDEF: 2)
    72ec:	033b0074 	teqeq	fp, #116	; 0x74
    72f0:	bf000014 	svclt	0x00000014
    72f4:	98000025 	stmdals	r0, {r0, r2, r5}
    72f8:	840000d2 	strhi	r0, [r0], #-210	; 0xffffff2e
    72fc:	01000000 	mrseq	r0, (UNDEF: 0)
    7300:	0025f79c 	mlaeq	r5, ip, r7, pc	; <UNPREDICTABLE>
    7304:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7308:	1c130000 	ldcne	0, cr0, [r3], {-0}
    730c:	91020000 	mrsls	r0, (UNDEF: 2)
    7310:	1e143d64 	cdpne	13, 1, cr3, cr4, cr4, {3}
    7314:	4c070000 	stcmi	0, cr0, [r7], {-0}
    7318:	0002b72a 	andeq	fp, r2, sl, lsr #14
    731c:	60910200 	addsvs	r0, r1, r0, lsl #4
    7320:	00036e3d 	andeq	r6, r3, sp, lsr lr
    7324:	404c0700 	submi	r0, ip, r0, lsl #14
    7328:	00000107 	andeq	r0, r0, r7, lsl #2
    732c:	3e5c9102 	logcce	f1, f2
    7330:	53070066 	movwpl	r0, #28774	; 0x7066
    7334:	001d6e15 	andseq	r6, sp, r5, lsl lr
    7338:	6c910200 	lfmvs	f0, 4, [r1], {0}
    733c:	13e03f00 	mvnne	r3, #0, 30
    7340:	260e0000 	strcs	r0, [lr], -r0
    7344:	d2780000 	rsbsle	r0, r8, #0
    7348:	00200000 	eoreq	r0, r0, r0
    734c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7350:	0000261b 	andeq	r2, r0, fp, lsl r6
    7354:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7358:	001c1300 	andseq	r1, ip, r0, lsl #6
    735c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7360:	1d3b3f00 	ldcne	15, cr3, [fp, #-0]
    7364:	26320000 	ldrtcs	r0, [r2], -r0
    7368:	d24c0000 	suble	r0, ip, #0
    736c:	002c0000 	eoreq	r0, ip, r0
    7370:	9c010000 	stcls	0, cr0, [r1], {-0}
    7374:	0000265d 	andeq	r2, r0, sp, asr r6
    7378:	00032c3c 	andeq	r2, r3, ip, lsr ip
    737c:	001d7400 	andseq	r7, sp, r0, lsl #8
    7380:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7384:	72696440 	rsbvc	r6, r9, #64, 8	; 0x40000000
    7388:	293e0700 	ldmdbcs	lr!, {r8, r9, sl}
    738c:	000000a0 	andeq	r0, r0, r0, lsr #1
    7390:	3d709102 	ldfccp	f1, [r0, #-8]!
    7394:	0000266e 	andeq	r2, r0, lr, ror #12
    7398:	b8343e07 	ldmdalt	r4!, {r0, r1, r2, r9, sl, fp, ip, sp}
    739c:	02000009 	andeq	r0, r0, #9
    73a0:	3b006c91 	blcc	225ec <_bss_end+0x108fc>
    73a4:	00001d14 	andeq	r1, r0, r4, lsl sp
    73a8:	00002674 	andeq	r2, r0, r4, ror r6
    73ac:	0000d1f4 	strdeq	sp, [r0], -r4
    73b0:	00000058 	andeq	r0, r0, r8, asr r0
    73b4:	26819c01 	strcs	r9, [r1], r1, lsl #24
    73b8:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    73bc:	74000003 	strvc	r0, [r0], #-3
    73c0:	0200001d 	andeq	r0, r0, #29
    73c4:	3f007491 	svccc	0x00007491
    73c8:	00001ce3 	andeq	r1, r0, r3, ror #25
    73cc:	00002698 	muleq	r0, r8, r6
    73d0:	0000d1c8 	andeq	sp, r0, r8, asr #3
    73d4:	0000002c 	andeq	r0, r0, ip, lsr #32
    73d8:	26c39c01 	strbcs	r9, [r3], r1, lsl #24
    73dc:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    73e0:	74000003 	strvc	r0, [r0], #-3
    73e4:	0200001d 	andeq	r0, r0, #29
    73e8:	ba3d7491 	blt	f64634 <_bss_end+0xf52944>
    73ec:	0700000c 	streq	r0, [r0, -ip]
    73f0:	02b7282c 	adcseq	r2, r7, #44, 16	; 0x2c0000
    73f4:	91020000 	mrsls	r0, (UNDEF: 2)
    73f8:	756e4070 	strbvc	r4, [lr, #-112]!	; 0xffffff90
    73fc:	2c07006d 	stccs	0, cr0, [r7], {109}	; 0x6d
    7400:	00007939 	andeq	r7, r0, r9, lsr r9
    7404:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7408:	1cb23b00 	vldmiane	r2!, {d3-d2}
    740c:	26da0000 	ldrbcs	r0, [sl], r0
    7410:	d0e00000 	rscle	r0, r0, r0
    7414:	00e80000 	rsceq	r0, r8, r0
    7418:	9c010000 	stcls	0, cr0, [r1], {-0}
    741c:	00002755 	andeq	r2, r0, r5, asr r7
    7420:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7424:	001d7400 	andseq	r7, sp, r0, lsl #8
    7428:	5c910200 	lfmpl	f0, 4, [r1], {0}
    742c:	000cba3d 	andeq	fp, ip, sp, lsr sl
    7430:	211a0700 	tstcs	sl, r0, lsl #14
    7434:	00000d12 	andeq	r0, r0, r2, lsl sp
    7438:	40589102 	subsmi	r9, r8, r2, lsl #2
    743c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    7440:	79321a07 	ldmdbvc	r2!, {r0, r1, r2, r9, fp, ip}
    7444:	02000000 	andeq	r0, r0, #0
    7448:	d4465491 	strble	r5, [r6], #-1169	; 0xfffffb6f
    744c:	0700002c 	streq	r0, [r0, -ip, lsr #32]
    7450:	0085181c 	addeq	r1, r5, ip, lsl r8
    7454:	91020000 	mrsls	r0, (UNDEF: 2)
    7458:	2cdb4664 	ldclcs	6, cr4, [fp], {100}	; 0x64
    745c:	1d070000 	stcne	0, cr0, [r7, #-0]
    7460:	00275513 	eoreq	r5, r7, r3, lsl r5
    7464:	60910200 	addsvs	r0, r1, r0, lsl #4
    7468:	00d10c47 	sbcseq	r0, r1, r7, asr #24
    746c:	00004800 	andeq	r4, r0, r0, lsl #16
    7470:	00273d00 	eoreq	r3, r7, r0, lsl #26
    7474:	00693e00 	rsbeq	r3, r9, r0, lsl #28
    7478:	38121e07 	ldmdacc	r2, {r0, r1, r2, r9, sl, fp, ip}
    747c:	02000000 	andeq	r0, r0, #0
    7480:	48006c91 	stmdami	r0, {r0, r4, r7, sl, fp, sp, lr}
    7484:	0000d168 	andeq	sp, r0, r8, ror #2
    7488:	0000004c 	andeq	r0, r0, ip, asr #32
    748c:	0700693e 	smladxeq	r0, lr, r9, r6
    7490:	00381625 	eorseq	r1, r8, r5, lsr #12
    7494:	91020000 	mrsls	r0, (UNDEF: 2)
    7498:	16000068 	strne	r0, [r0], -r8, rrx
    749c:	00007904 	andeq	r7, r0, r4, lsl #18
    74a0:	1c894100 	stfnes	f4, [r9], {0}
    74a4:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    74a8:	276d0000 	strbcs	r0, [sp, -r0]!
    74ac:	80020000 	andhi	r0, r2, r0
    74b0:	42000027 	andmi	r0, r0, #39	; 0x27
    74b4:	0000032c 	andeq	r0, r0, ip, lsr #6
    74b8:	00001d74 	andeq	r1, r0, r4, ror sp
    74bc:	002e5642 	eoreq	r5, lr, r2, asr #12
    74c0:	00003f00 	andeq	r3, r0, r0, lsl #30
    74c4:	5b430000 	blpl	10c74cc <_bss_end+0x10b57dc>
    74c8:	6c000027 	stcvs	0, cr0, [r0], {39}	; 0x27
    74cc:	9b000028 	blls	7574 <CPSR_IRQ_INHIBIT+0x74f4>
    74d0:	ac000027 	stcge	0, cr0, [r0], {39}	; 0x27
    74d4:	340000d0 	strcc	r0, [r0], #-208	; 0xffffff30
    74d8:	01000000 	mrseq	r0, (UNDEF: 0)
    74dc:	0027a49c 	mlaeq	r7, ip, r4, sl
    74e0:	276d4400 	strbcs	r4, [sp, -r0, lsl #8]!
    74e4:	91020000 	mrsls	r0, (UNDEF: 2)
    74e8:	5b430074 	blpl	10c76c0 <_bss_end+0x10b59d0>
    74ec:	42000027 	andmi	r0, r0, #39	; 0x27
    74f0:	bf000024 	svclt	0x00000024
    74f4:	68000027 	stmdavs	r0, {r0, r1, r2, r5}
    74f8:	440000d0 	strmi	r0, [r0], #-208	; 0xffffff30
    74fc:	01000000 	mrseq	r0, (UNDEF: 0)
    7500:	0027c89c 	mlaeq	r7, ip, r8, ip
    7504:	276d4400 	strbcs	r4, [sp, -r0, lsl #8]!
    7508:	91020000 	mrsls	r0, (UNDEF: 2)
    750c:	6a450074 	bvs	11476e4 <_bss_end+0x11359f4>
    7510:	d600001c 			; <UNDEFINED> instruction: 0xd600001c
    7514:	02000027 	andeq	r0, r0, #39	; 0x27
    7518:	000027e0 	andeq	r2, r0, r0, ror #15
    751c:	00032c42 	andeq	r2, r3, r2, asr #24
    7520:	001d7400 	andseq	r7, sp, r0, lsl #8
    7524:	c8430000 	stmdagt	r3, {}^	; <UNPREDICTABLE>
    7528:	a6000027 	strge	r0, [r0], -r7, lsr #32
    752c:	fb000021 	blx	75ba <CPSR_IRQ_INHIBIT+0x753a>
    7530:	2c000027 	stccs	0, cr0, [r0], {39}	; 0x27
    7534:	3c0000d0 	stccc	0, cr0, [r0], {208}	; 0xd0
    7538:	01000000 	mrseq	r0, (UNDEF: 0)
    753c:	0028049c 	mlaeq	r8, ip, r4, r0
    7540:	27d64400 	ldrbcs	r4, [r6, r0, lsl #8]
    7544:	91020000 	mrsls	r0, (UNDEF: 2)
    7548:	223b0074 	eorscs	r0, fp, #116	; 0x74
    754c:	1b000012 	blne	759c <CPSR_IRQ_INHIBIT+0x751c>
    7550:	c0000028 	andgt	r0, r0, r8, lsr #32
    7554:	6c0000cf 	stcvs	0, cr0, [r0], {207}	; 0xcf
    7558:	01000000 	mrseq	r0, (UNDEF: 0)
    755c:	0028539c 	mlaeq	r8, ip, r3, r5
    7560:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7564:	1d850000 	stcne	0, cr0, [r5]
    7568:	91020000 	mrsls	r0, (UNDEF: 2)
    756c:	1e143d64 	cdpne	13, 1, cr3, cr4, cr4, {3}
    7570:	45060000 	strmi	r0, [r6, #-0]
    7574:	0002b72a 	andeq	fp, r2, sl, lsr #14
    7578:	60910200 	addsvs	r0, r1, r0, lsl #4
    757c:	00036e3d 	andeq	r6, r3, sp, lsr lr
    7580:	40450600 	submi	r0, r5, r0, lsl #12
    7584:	00000107 	andeq	r0, r0, r7, lsl #2
    7588:	3e5c9102 	logcce	f1, f2
    758c:	4c060066 	stcmi	0, cr0, [r6], {102}	; 0x66
    7590:	001ee01f 	andseq	lr, lr, pc, lsl r0
    7594:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7598:	11ff3f00 	mvnsne	r3, r0, lsl #30
    759c:	286a0000 	stmdacs	sl!, {}^	; <UNPREDICTABLE>
    75a0:	cfa00000 	svcgt	0x00a00000
    75a4:	00200000 	eoreq	r0, r0, r0
    75a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    75ac:	00002877 	andeq	r2, r0, r7, ror r8
    75b0:	00032c3c 	andeq	r2, r3, ip, lsr ip
    75b4:	001d8500 	andseq	r8, sp, r0, lsl #10
    75b8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    75bc:	1ead3f00 	cdpne	15, 10, cr3, cr13, cr0, {0}
    75c0:	288e0000 	stmcs	lr, {}	; <UNPREDICTABLE>
    75c4:	cf740000 	svcgt	0x00740000
    75c8:	002c0000 	eoreq	r0, ip, r0
    75cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    75d0:	000028b9 			; <UNDEFINED> instruction: 0x000028b9
    75d4:	00032c3c 	andeq	r2, r3, ip, lsr ip
    75d8:	001ee600 	andseq	lr, lr, r0, lsl #12
    75dc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    75e0:	72696440 	rsbvc	r6, r9, #64, 8	; 0x40000000
    75e4:	29370600 	ldmdbcs	r7!, {r9, sl}
    75e8:	000000a0 	andeq	r0, r0, r0, lsr #1
    75ec:	3d709102 	ldfccp	f1, [r0, #-8]!
    75f0:	0000266e 	andeq	r2, r0, lr, ror #12
    75f4:	b8343706 	ldmdalt	r4!, {r1, r2, r8, r9, sl, ip, sp}
    75f8:	02000009 	andeq	r0, r0, #9
    75fc:	3b006c91 	blcc	22848 <_bss_end+0x10b58>
    7600:	00001e86 	andeq	r1, r0, r6, lsl #29
    7604:	000028d0 	ldrdeq	r2, [r0], -r0
    7608:	0000cf1c 	andeq	ip, r0, ip, lsl pc
    760c:	00000058 	andeq	r0, r0, r8, asr r0
    7610:	28dd9c01 	ldmcs	sp, {r0, sl, fp, ip, pc}^
    7614:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7618:	e6000003 	str	r0, [r0], -r3
    761c:	0200001e 	andeq	r0, r0, #30
    7620:	3b007491 	blcc	2486c <_bss_end+0x12b7c>
    7624:	00001e55 	andeq	r1, r0, r5, asr lr
    7628:	000028f4 	strdeq	r2, [r0], -r4
    762c:	0000ceac 	andeq	ip, r0, ip, lsr #29
    7630:	00000070 	andeq	r0, r0, r0, ror r0
    7634:	29369c01 	ldmdbcs	r6!, {r0, sl, fp, ip, pc}
    7638:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    763c:	e6000003 	str	r0, [r0], -r3
    7640:	0200001e 	andeq	r0, r0, #30
    7644:	ba3d6c91 	blt	f62890 <_bss_end+0xf50ba0>
    7648:	0600000c 	streq	r0, [r0], -ip
    764c:	02b72822 	adcseq	r2, r7, #2228224	; 0x220000
    7650:	91020000 	mrsls	r0, (UNDEF: 2)
    7654:	756e4068 	strbvc	r4, [lr, #-104]!	; 0xffffff98
    7658:	2206006d 	andcs	r0, r6, #109	; 0x6d
    765c:	00007939 	andeq	r7, r0, r9, lsr r9
    7660:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7664:	00cec448 	sbceq	ip, lr, r8, asr #8
    7668:	00004400 	andeq	r4, r0, r0, lsl #8
    766c:	00693e00 	rsbeq	r3, r9, r0, lsl #28
    7670:	79172606 	ldmdbvc	r7, {r1, r2, r9, sl, sp}
    7674:	02000000 	andeq	r0, r0, #0
    7678:	00007491 	muleq	r0, r1, r4
    767c:	001e243f 	andseq	r2, lr, pc, lsr r4
    7680:	00294d00 	eoreq	r4, r9, r0, lsl #26
    7684:	00ce8000 	sbceq	r8, lr, r0
    7688:	00002c00 	andeq	r2, r0, r0, lsl #24
    768c:	789c0100 	ldmvc	ip, {r8}
    7690:	3c000029 	stccc	0, cr0, [r0], {41}	; 0x29
    7694:	0000032c 	andeq	r0, r0, ip, lsr #6
    7698:	00001ee6 	andeq	r1, r0, r6, ror #29
    769c:	3d749102 	ldfccp	f1, [r4, #-8]!
    76a0:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    76a4:	12211b06 	eorne	r1, r1, #6144	; 0x1800
    76a8:	0200000d 	andeq	r0, r0, #13
    76ac:	6e407091 	mcrvs	0, 2, r7, cr0, cr1, {4}
    76b0:	06006d75 			; <UNDEFINED> instruction: 0x06006d75
    76b4:	0079321b 	rsbseq	r3, r9, fp, lsl r2
    76b8:	91020000 	mrsls	r0, (UNDEF: 2)
    76bc:	fb41006c 	blx	1047876 <_bss_end+0x1035b86>
    76c0:	b800001d 	stmdalt	r0, {r0, r2, r3, r4}
    76c4:	8a000009 	bhi	76f0 <CPSR_IRQ_INHIBIT+0x7670>
    76c8:	02000029 	andeq	r0, r0, #41	; 0x29
    76cc:	0000299d 	muleq	r0, sp, r9
    76d0:	00032c42 	andeq	r2, r3, r2, asr #24
    76d4:	001ee600 	andseq	lr, lr, r0, lsl #12
    76d8:	2e564200 	cdpcs	2, 5, cr4, cr6, cr0, {0}
    76dc:	003f0000 	eorseq	r0, pc, r0
    76e0:	43000000 	movwmi	r0, #0
    76e4:	00002978 	andeq	r2, r0, r8, ror r9
    76e8:	00002e99 	muleq	r0, r9, lr
    76ec:	000029b8 			; <UNDEFINED> instruction: 0x000029b8
    76f0:	0000ce4c 	andeq	ip, r0, ip, asr #28
    76f4:	00000034 	andeq	r0, r0, r4, lsr r0
    76f8:	29c19c01 	stmibcs	r1, {r0, sl, fp, ip, pc}^
    76fc:	8a440000 	bhi	1107704 <_bss_end+0x10f5a14>
    7700:	02000029 	andeq	r0, r0, #41	; 0x29
    7704:	43007491 	movwmi	r7, #1169	; 0x491
    7708:	00002978 	andeq	r2, r0, r8, ror r9
    770c:	00002b12 	andeq	r2, r0, r2, lsl fp
    7710:	000029dc 	ldrdeq	r2, [r0], -ip
    7714:	0000ce08 	andeq	ip, r0, r8, lsl #28
    7718:	00000044 	andeq	r0, r0, r4, asr #32
    771c:	29e59c01 	stmibcs	r5!, {r0, sl, fp, ip, pc}^
    7720:	8a440000 	bhi	1107728 <_bss_end+0x10f5a38>
    7724:	02000029 	andeq	r0, r0, #41	; 0x29
    7728:	45007491 	strmi	r7, [r0, #-1169]	; 0xfffffb6f
    772c:	00001ddc 	ldrdeq	r1, [r0], -ip
    7730:	000029f3 	strdeq	r2, [r0], -r3
    7734:	0029fd02 	eoreq	pc, r9, r2, lsl #26
    7738:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    773c:	1ee60000 	cdpne	0, 14, cr0, cr6, cr0, {0}
    7740:	43000000 	movwmi	r0, #0
    7744:	000029e5 	andeq	r2, r0, r5, ror #19
    7748:	00002040 	andeq	r2, r0, r0, asr #32
    774c:	00002a18 	andeq	r2, r0, r8, lsl sl
    7750:	0000cdc0 	andeq	ip, r0, r0, asr #27
    7754:	00000048 	andeq	r0, r0, r8, asr #32
    7758:	2a219c01 	bcs	86e764 <_bss_end+0x85ca74>
    775c:	f3440000 	vhadd.u8	d16, d4, d0
    7760:	02000029 	andeq	r0, r0, #41	; 0x29
    7764:	3b007491 	blcc	249b0 <_bss_end+0x12cc0>
    7768:	00001123 	andeq	r1, r0, r3, lsr #2
    776c:	00002a38 	andeq	r2, r0, r8, lsr sl
    7770:	0000cd54 	andeq	ip, r0, r4, asr sp
    7774:	0000006c 	andeq	r0, r0, ip, rrx
    7778:	2a709c01 	bcs	1c2e784 <_bss_end+0x1c1ca94>
    777c:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7780:	f7000003 			; <UNDEFINED> instruction: 0xf7000003
    7784:	0200001e 	andeq	r0, r0, #30
    7788:	143d6491 	ldrtne	r6, [sp], #-1169	; 0xfffffb6f
    778c:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    7790:	02b72a49 	adcseq	r2, r7, #299008	; 0x49000
    7794:	91020000 	mrsls	r0, (UNDEF: 2)
    7798:	036e3d60 	cmneq	lr, #96, 26	; 0x1800
    779c:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    77a0:	00010740 	andeq	r0, r1, r0, asr #14
    77a4:	5c910200 	lfmpl	f0, 4, [r1], {0}
    77a8:	0500663e 	streq	r6, [r0, #-1598]	; 0xfffff9c2
    77ac:	20522050 	subscs	r2, r2, r0, asr r0
    77b0:	91020000 	mrsls	r0, (UNDEF: 2)
    77b4:	003f006c 	eorseq	r0, pc, ip, rrx
    77b8:	87000011 	smladhi	r0, r1, r0, r0
    77bc:	3400002a 	strcc	r0, [r0], #-42	; 0xffffffd6
    77c0:	200000cd 	andcs	r0, r0, sp, asr #1
    77c4:	01000000 	mrseq	r0, (UNDEF: 0)
    77c8:	002a949c 	mlaeq	sl, ip, r4, r9
    77cc:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    77d0:	1ef70000 	cdpne	0, 15, cr0, cr7, cr0, {0}
    77d4:	91020000 	mrsls	r0, (UNDEF: 2)
    77d8:	1f3f0074 	svcne	0x003f0074
    77dc:	ab000020 	blge	7864 <CPSR_IRQ_INHIBIT+0x77e4>
    77e0:	0800002a 	stmdaeq	r0, {r1, r3, r5}
    77e4:	2c0000cd 	stccs	0, cr0, [r0], {205}	; 0xcd
    77e8:	01000000 	mrseq	r0, (UNDEF: 0)
    77ec:	002ad69c 	mlaeq	sl, ip, r6, sp
    77f0:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    77f4:	20580000 	subscs	r0, r8, r0
    77f8:	91020000 	mrsls	r0, (UNDEF: 2)
    77fc:	69644074 	stmdbvs	r4!, {r2, r4, r5, r6, lr}^
    7800:	3b050072 	blcc	1479d0 <_bss_end+0x135ce0>
    7804:	0000a029 	andeq	sl, r0, r9, lsr #32
    7808:	70910200 	addsvc	r0, r1, r0, lsl #4
    780c:	00266e3d 	eoreq	r6, r6, sp, lsr lr
    7810:	343b0500 	ldrtcc	r0, [fp], #-1280	; 0xfffffb00
    7814:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    7818:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    781c:	001ff83b 	andseq	pc, pc, fp, lsr r8	; <UNPREDICTABLE>
    7820:	002aed00 	eoreq	lr, sl, r0, lsl #26
    7824:	00ccb000 	sbceq	fp, ip, r0
    7828:	00005800 	andeq	r5, r0, r0, lsl #16
    782c:	fa9c0100 	blx	fe707c34 <_bss_end+0xfe6f5f44>
    7830:	3c00002a 	stccc	0, cr0, [r0], {42}	; 0x2a
    7834:	0000032c 	andeq	r0, r0, ip, lsr #6
    7838:	00002058 	andeq	r2, r0, r8, asr r0
    783c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7840:	001fc73b 	andseq	ip, pc, fp, lsr r7	; <UNPREDICTABLE>
    7844:	002b1100 	eoreq	r1, fp, r0, lsl #2
    7848:	00cc4000 	sbceq	r4, ip, r0
    784c:	00007000 	andeq	r7, r0, r0
    7850:	539c0100 	orrspl	r0, ip, #0, 2
    7854:	3c00002b 	stccc	0, cr0, [r0], {43}	; 0x2b
    7858:	0000032c 	andeq	r0, r0, ip, lsr #6
    785c:	00002058 	andeq	r2, r0, r8, asr r0
    7860:	3d6c9102 	stfccp	f1, [ip, #-8]!
    7864:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    7868:	b7282705 	strlt	r2, [r8, -r5, lsl #14]!
    786c:	02000002 	andeq	r0, r0, #2
    7870:	6e406891 	mcrvs	8, 2, r6, cr0, cr1, {4}
    7874:	05006d75 	streq	r6, [r0, #-3445]	; 0xfffff28b
    7878:	00793927 	rsbseq	r3, r9, r7, lsr #18
    787c:	91020000 	mrsls	r0, (UNDEF: 2)
    7880:	cc584864 	mrrcgt	8, 6, r4, r8, cr4
    7884:	00440000 	subeq	r0, r4, r0
    7888:	693e0000 	ldmdbvs	lr!, {}	; <UNPREDICTABLE>
    788c:	172a0500 	strne	r0, [sl, -r0, lsl #10]!
    7890:	00000079 	andeq	r0, r0, r9, ror r0
    7894:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7898:	1f963b00 	svcne	0x00963b00
    789c:	2b6a0000 	blcs	1a878a4 <_bss_end+0x1a75bb4>
    78a0:	cbe80000 	blgt	ffa078a8 <_bss_end+0xff9f5bb8>
    78a4:	00580000 	subseq	r0, r8, r0
    78a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    78ac:	00002b95 	muleq	r0, r5, fp
    78b0:	00032c3c 	andeq	r2, r3, ip, lsr ip
    78b4:	00205800 	eoreq	r5, r0, r0, lsl #16
    78b8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    78bc:	000cba3d 	andeq	fp, ip, sp, lsr sl
    78c0:	211b0500 	tstcs	fp, r0, lsl #10
    78c4:	00000d12 	andeq	r0, r0, r2, lsl sp
    78c8:	40709102 	rsbsmi	r9, r0, r2, lsl #2
    78cc:	006d756e 	rsbeq	r7, sp, lr, ror #10
    78d0:	79321b05 	ldmdbvc	r2!, {r0, r2, r8, r9, fp, ip}
    78d4:	02000000 	andeq	r0, r0, #0
    78d8:	41006c91 			; <UNDEFINED> instruction: 0x41006c91
    78dc:	00001f6d 	andeq	r1, r0, sp, ror #30
    78e0:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    78e4:	00002ba7 	andeq	r2, r0, r7, lsr #23
    78e8:	002bba02 	eoreq	fp, fp, r2, lsl #20
    78ec:	032c4200 			; <UNDEFINED> instruction: 0x032c4200
    78f0:	20580000 	subscs	r0, r8, r0
    78f4:	56420000 	strbpl	r0, [r2], -r0
    78f8:	3f00002e 	svccc	0x0000002e
    78fc:	00000000 	andeq	r0, r0, r0
    7900:	002b9543 	eoreq	r9, fp, r3, asr #10
    7904:	00205e00 	eoreq	r5, r0, r0, lsl #28
    7908:	002bd500 	eoreq	sp, fp, r0, lsl #10
    790c:	00cbb400 	sbceq	fp, fp, r0, lsl #8
    7910:	00003400 	andeq	r3, r0, r0, lsl #8
    7914:	de9c0100 	fmllee	f0, f4, f0
    7918:	4400002b 	strmi	r0, [r0], #-43	; 0xffffffd5
    791c:	00002ba7 	andeq	r2, r0, r7, lsr #23
    7920:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7924:	002b9543 	eoreq	r9, fp, r3, asr #10
    7928:	002e3700 	eoreq	r3, lr, r0, lsl #14
    792c:	002bf900 	eoreq	pc, fp, r0, lsl #18
    7930:	00cb7000 	sbceq	r7, fp, r0
    7934:	00004400 	andeq	r4, r0, r0, lsl #8
    7938:	029c0100 	addseq	r0, ip, #0, 2
    793c:	4400002c 	strmi	r0, [r0], #-44	; 0xffffffd4
    7940:	00002ba7 	andeq	r2, r0, r7, lsr #23
    7944:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7948:	001f4e45 	andseq	r4, pc, r5, asr #28
    794c:	002c1000 	eoreq	r1, ip, r0
    7950:	2c1a0200 	lfmcs	f0, 4, [sl], {-0}
    7954:	2c420000 	marcs	acc0, r0, r2
    7958:	58000003 	stmdapl	r0, {r0, r1}
    795c:	00000020 	andeq	r0, r0, r0, lsr #32
    7960:	002c0243 	eoreq	r0, ip, r3, asr #4
    7964:	00245600 	eoreq	r5, r4, r0, lsl #12
    7968:	002c3500 	eoreq	r3, ip, r0, lsl #10
    796c:	00cb2800 	sbceq	r2, fp, r0, lsl #16
    7970:	00004800 	andeq	r4, r0, r0, lsl #16
    7974:	3e9c0100 	fmlcce	f0, f4, f0
    7978:	4400002c 	strmi	r0, [r0], #-44	; 0xffffffd4
    797c:	00002c10 	andeq	r2, r0, r0, lsl ip
    7980:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7984:	000de93b 	andeq	lr, sp, fp, lsr r9
    7988:	002c5500 	eoreq	r5, ip, r0, lsl #10
    798c:	00cac000 	sbceq	ip, sl, r0
    7990:	00006800 	andeq	r6, r0, r0, lsl #16
    7994:	9c9c0100 	ldflss	f0, [ip], {0}
    7998:	3c00002c 	stccc	0, cr0, [r0], {44}	; 0x2c
    799c:	0000032c 	andeq	r0, r0, ip, lsr #6
    79a0:	00002069 	andeq	r2, r0, r9, rrx
    79a4:	3d649102 	stfccp	f1, [r4, #-8]!
    79a8:	00001e14 	andeq	r1, r0, r4, lsl lr
    79ac:	b72a4c04 	strlt	r4, [sl, -r4, lsl #24]!
    79b0:	02000002 	andeq	r0, r0, #2
    79b4:	6e3d6091 	mrcvs	0, 1, r6, cr13, cr1, {4}
    79b8:	04000003 	streq	r0, [r0], #-3
    79bc:	0107404c 	tsteq	r7, ip, asr #32
    79c0:	91020000 	mrsls	r0, (UNDEF: 2)
    79c4:	29d3465c 	ldmibcs	r3, {r2, r3, r4, r6, r9, sl, lr}^
    79c8:	4e040000 	cdpmi	0, 0, cr0, cr4, cr0, {0}
    79cc:	0000380d 	andeq	r3, r0, sp, lsl #16
    79d0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    79d4:	0400663e 	streq	r6, [r0], #-1598	; 0xfffff9c2
    79d8:	21c91852 	biccs	r1, r9, r2, asr r8
    79dc:	91020000 	mrsls	r0, (UNDEF: 2)
    79e0:	c63f0068 	ldrtgt	r0, [pc], -r8, rrx
    79e4:	b300000d 	movwlt	r0, #13
    79e8:	a000002c 	andge	r0, r0, ip, lsr #32
    79ec:	200000ca 	andcs	r0, r0, sl, asr #1
    79f0:	01000000 	mrseq	r0, (UNDEF: 0)
    79f4:	002cc09c 	mlaeq	ip, ip, r0, ip
    79f8:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    79fc:	20690000 	rsbcs	r0, r9, r0
    7a00:	91020000 	mrsls	r0, (UNDEF: 2)
    7a04:	963f0074 			; <UNDEFINED> instruction: 0x963f0074
    7a08:	d7000021 	strle	r0, [r0, -r1, lsr #32]
    7a0c:	5c00002c 	stcpl	0, cr0, [r0], {44}	; 0x2c
    7a10:	440000ca 	strmi	r0, [r0], #-202	; 0xffffff36
    7a14:	01000000 	mrseq	r0, (UNDEF: 0)
    7a18:	002d029c 	mlaeq	sp, ip, r2, r0
    7a1c:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7a20:	21cf0000 	biccs	r0, pc, r0
    7a24:	91020000 	mrsls	r0, (UNDEF: 2)
    7a28:	69644074 	stmdbvs	r4!, {r2, r4, r5, r6, lr}^
    7a2c:	3a040072 	bcc	107bfc <_bss_end+0xf5f0c>
    7a30:	0000a029 	andeq	sl, r0, r9, lsr #32
    7a34:	70910200 	addsvc	r0, r1, r0, lsl #4
    7a38:	00266e3d 	eoreq	r6, r6, sp, lsr lr
    7a3c:	343a0400 	ldrtcc	r0, [sl], #-1024	; 0xfffffc00
    7a40:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    7a44:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7a48:	00216f3f 	eoreq	r6, r1, pc, lsr pc
    7a4c:	002d1900 	eoreq	r1, sp, r0, lsl #18
    7a50:	00ca1400 	sbceq	r1, sl, r0, lsl #8
    7a54:	00004800 	andeq	r4, r0, r0, lsl #16
    7a58:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
    7a5c:	3c00002d 	stccc	0, cr0, [r0], {45}	; 0x2d
    7a60:	0000032c 	andeq	r0, r0, ip, lsr #6
    7a64:	000021cf 	andeq	r2, r0, pc, asr #3
    7a68:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7a6c:	00213e3b 	eoreq	r3, r1, fp, lsr lr
    7a70:	002d3d00 	eoreq	r3, sp, r0, lsl #26
    7a74:	00c9ac00 	sbceq	sl, r9, r0, lsl #24
    7a78:	00006800 	andeq	r6, r0, r0, lsl #16
    7a7c:	689c0100 	ldmvs	ip, {r8}
    7a80:	3c00002d 	stccc	0, cr0, [r0], {45}	; 0x2d
    7a84:	0000032c 	andeq	r0, r0, ip, lsr #6
    7a88:	000021cf 	andeq	r2, r0, pc, asr #3
    7a8c:	3d749102 	ldfccp	f1, [r4, #-8]!
    7a90:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    7a94:	b7281e04 	strlt	r1, [r8, -r4, lsl #28]!
    7a98:	02000002 	andeq	r0, r0, #2
    7a9c:	6e407091 	mcrvs	0, 2, r7, cr0, cr1, {4}
    7aa0:	04006d75 	streq	r6, [r0], #-3445	; 0xfffff28b
    7aa4:	0079391e 	rsbseq	r3, r9, lr, lsl r9
    7aa8:	91020000 	mrsls	r0, (UNDEF: 2)
    7aac:	0d3f006c 	ldceq	0, cr0, [pc, #-432]!	; 7904 <CPSR_IRQ_INHIBIT+0x7884>
    7ab0:	7f000021 	svcvc	0x00000021
    7ab4:	8000002d 	andhi	r0, r0, sp, lsr #32
    7ab8:	2c0000c9 	stccs	0, cr0, [r0], {201}	; 0xc9
    7abc:	01000000 	mrseq	r0, (UNDEF: 0)
    7ac0:	002daa9c 	mlaeq	sp, ip, sl, sl
    7ac4:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7ac8:	21cf0000 	biccs	r0, pc, r0
    7acc:	91020000 	mrsls	r0, (UNDEF: 2)
    7ad0:	0cba3d74 	ldceq	13, cr3, [sl], #464	; 0x1d0
    7ad4:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    7ad8:	000d1221 	andeq	r1, sp, r1, lsr #4
    7adc:	70910200 	addsvc	r0, r1, r0, lsl #4
    7ae0:	6d756e40 	ldclvs	14, cr6, [r5, #-256]!	; 0xffffff00
    7ae4:	32190400 	andscc	r0, r9, #0, 8
    7ae8:	00000079 	andeq	r0, r0, r9, ror r0
    7aec:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7af0:	0020e441 	eoreq	lr, r0, r1, asr #8
    7af4:	0009b800 	andeq	fp, r9, r0, lsl #16
    7af8:	002dbc00 	eoreq	fp, sp, r0, lsl #24
    7afc:	2dcf0200 	sfmcs	f0, 2, [pc]	; 7b04 <CPSR_IRQ_INHIBIT+0x7a84>
    7b00:	2c420000 	marcs	acc0, r0, r2
    7b04:	cf000003 	svcgt	0x00000003
    7b08:	42000021 	andmi	r0, r0, #33	; 0x21
    7b0c:	00002e56 	andeq	r2, r0, r6, asr lr
    7b10:	0000003f 	andeq	r0, r0, pc, lsr r0
    7b14:	2daa4300 	stccs	3, cr4, [sl]
    7b18:	20ee0000 	rsccs	r0, lr, r0
    7b1c:	2dea0000 	stclcs	0, cr0, [sl]
    7b20:	c94c0000 	stmdbgt	ip, {}^	; <UNPREDICTABLE>
    7b24:	00340000 	eorseq	r0, r4, r0
    7b28:	9c010000 	stcls	0, cr0, [r1], {-0}
    7b2c:	00002df3 	strdeq	r2, [r0], -r3
    7b30:	002dbc44 	eoreq	fp, sp, r4, asr #24
    7b34:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7b38:	2daa4300 	stccs	3, cr4, [sl]
    7b3c:	1e880000 	cdpne	0, 8, cr0, cr8, cr0, {0}
    7b40:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
    7b44:	c9080000 	stmdbgt	r8, {}	; <UNPREDICTABLE>
    7b48:	00440000 	subeq	r0, r4, r0
    7b4c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7b50:	00002e17 	andeq	r2, r0, r7, lsl lr
    7b54:	002dbc44 	eoreq	fp, sp, r4, asr #24
    7b58:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7b5c:	20c04500 	sbccs	r4, r0, r0, lsl #10
    7b60:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    7b64:	3b020000 	blcc	87b6c <_bss_end+0x75e7c>
    7b68:	4200002e 	andmi	r0, r0, #46	; 0x2e
    7b6c:	0000032c 	andeq	r0, r0, ip, lsr #6
    7b70:	000021cf 	andeq	r2, r0, pc, asr #3
    7b74:	0029d349 	eoreq	sp, r9, r9, asr #6
    7b78:	170f0400 	strne	r0, [pc, -r0, lsl #8]
    7b7c:	00000038 	andeq	r0, r0, r8, lsr r0
    7b80:	2e174300 	cdpcs	3, 1, cr4, cr7, cr0, {0}
    7b84:	24f00000 	ldrbtcs	r0, [r0], #0
    7b88:	2e560000 	cdpcs	0, 5, cr0, cr6, cr0, {0}
    7b8c:	c8bc0000 	ldmgt	ip!, {}	; <UNPREDICTABLE>
    7b90:	004c0000 	subeq	r0, ip, r0
    7b94:	9c010000 	stcls	0, cr0, [r1], {-0}
    7b98:	00002e67 	andeq	r2, r0, r7, ror #28
    7b9c:	002e2544 	eoreq	r2, lr, r4, asr #10
    7ba0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7ba4:	002e2e44 	eoreq	r2, lr, r4, asr #28
    7ba8:	70910200 	addsvc	r0, r1, r0, lsl #4
    7bac:	0a803b00 	beq	fe0167b4 <_bss_end+0xfe004ac4>
    7bb0:	2e7e0000 	cdpcs	0, 7, cr0, cr14, cr0, {0}
    7bb4:	c7640000 	strbgt	r0, [r4, -r0]!
    7bb8:	01580000 	cmpeq	r8, r0
    7bbc:	9c010000 	stcls	0, cr0, [r1], {-0}
    7bc0:	00002ec5 	andeq	r2, r0, r5, asr #29
    7bc4:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7bc8:	0021e000 	eoreq	lr, r1, r0
    7bcc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7bd0:	001e143d 	andseq	r1, lr, sp, lsr r4
    7bd4:	2a570300 	bcs	15c87dc <_bss_end+0x15b6aec>
    7bd8:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    7bdc:	3d609102 	stfccp	f1, [r0, #-8]!
    7be0:	0000036e 	andeq	r0, r0, lr, ror #6
    7be4:	07405703 	strbeq	r5, [r0, -r3, lsl #14]
    7be8:	02000001 	andeq	r0, r0, #1
    7bec:	b3465c91 	movtlt	r5, #27793	; 0x6c91
    7bf0:	03000027 	movweq	r0, #39	; 0x27
    7bf4:	00380d5e 	eorseq	r0, r8, lr, asr sp
    7bf8:	91020000 	mrsls	r0, (UNDEF: 2)
    7bfc:	00663e6c 	rsbeq	r3, r6, ip, ror #28
    7c00:	64157103 	ldrvs	r7, [r5], #-259	; 0xfffffefd
    7c04:	02000023 	andeq	r0, r0, #35	; 0x23
    7c08:	3f006891 	svccc	0x00006891
    7c0c:	00000a5d 	andeq	r0, r0, sp, asr sl
    7c10:	00002edc 	ldrdeq	r2, [r0], -ip
    7c14:	0000c744 	andeq	ip, r0, r4, asr #14
    7c18:	00000020 	andeq	r0, r0, r0, lsr #32
    7c1c:	2ee99c01 	cdpcs	12, 14, cr9, cr9, cr1, {0}
    7c20:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7c24:	e0000003 	and	r0, r0, r3
    7c28:	02000021 	andeq	r0, r0, #33	; 0x21
    7c2c:	3f007491 	svccc	0x00007491
    7c30:	00002331 	andeq	r2, r0, r1, lsr r3
    7c34:	00002f00 	andeq	r2, r0, r0, lsl #30
    7c38:	0000c718 	andeq	ip, r0, r8, lsl r7
    7c3c:	0000002c 	andeq	r0, r0, ip, lsr #32
    7c40:	2f2b9c01 	svccs	0x002b9c01
    7c44:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7c48:	6a000003 	bvs	7c5c <CPSR_IRQ_INHIBIT+0x7bdc>
    7c4c:	02000023 	andeq	r0, r0, #35	; 0x23
    7c50:	64407491 	strbvs	r7, [r0], #-1169	; 0xfffffb6f
    7c54:	03007269 	movweq	r7, #617	; 0x269
    7c58:	00a02947 	adceq	r2, r0, r7, asr #18
    7c5c:	91020000 	mrsls	r0, (UNDEF: 2)
    7c60:	266e3d70 			; <UNDEFINED> instruction: 0x266e3d70
    7c64:	47030000 	strmi	r0, [r3, -r0]
    7c68:	0009b834 	andeq	fp, r9, r4, lsr r8
    7c6c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7c70:	230a3b00 	movwcs	r3, #43776	; 0xab00
    7c74:	2f420000 	svccs	0x00420000
    7c78:	c67c0000 	ldrbtgt	r0, [ip], -r0
    7c7c:	009c0000 	addseq	r0, ip, r0
    7c80:	9c010000 	stcls	0, cr0, [r1], {-0}
    7c84:	00002f4f 	andeq	r2, r0, pc, asr #30
    7c88:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7c8c:	00236a00 	eoreq	r6, r3, r0, lsl #20
    7c90:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7c94:	22d93b00 	sbcscs	r3, r9, #0, 22
    7c98:	2f660000 	svccs	0x00660000
    7c9c:	c6000000 	strgt	r0, [r0], -r0
    7ca0:	007c0000 	rsbseq	r0, ip, r0
    7ca4:	9c010000 	stcls	0, cr0, [r1], {-0}
    7ca8:	00002f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    7cac:	00032c3c 	andeq	r2, r3, ip, lsr ip
    7cb0:	00236a00 	eoreq	r6, r3, r0, lsl #20
    7cb4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7cb8:	000cba3d 	andeq	fp, ip, sp, lsr sl
    7cbc:	282f0300 	stmdacs	pc!, {r8, r9}	; <UNPREDICTABLE>
    7cc0:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    7cc4:	40709102 	rsbsmi	r9, r0, r2, lsl #2
    7cc8:	006d756e 	rsbeq	r7, sp, lr, ror #10
    7ccc:	79392f03 	ldmdbvc	r9!, {r0, r1, r8, r9, sl, fp, sp}
    7cd0:	02000000 	andeq	r0, r0, #0
    7cd4:	3b006c91 	blcc	22f20 <_bss_end+0x11230>
    7cd8:	000022a8 	andeq	r2, r0, r8, lsr #5
    7cdc:	00002fa8 	andeq	r2, r0, r8, lsr #31
    7ce0:	0000c580 	andeq	ip, r0, r0, lsl #11
    7ce4:	00000080 	andeq	r0, r0, r0, lsl #1
    7ce8:	2fd39c01 	svccs	0x00d39c01
    7cec:	2c3c0000 	ldccs	0, cr0, [ip], #-0
    7cf0:	6a000003 	bvs	7d04 <CPSR_IRQ_INHIBIT+0x7c84>
    7cf4:	02000023 	andeq	r0, r0, #35	; 0x23
    7cf8:	ba3d7491 	blt	f64f44 <_bss_end+0xf53254>
    7cfc:	0300000c 	movweq	r0, #12
    7d00:	0d122123 	ldfeqs	f2, [r2, #-140]	; 0xffffff74
    7d04:	91020000 	mrsls	r0, (UNDEF: 2)
    7d08:	756e4070 	strbvc	r4, [lr, #-112]!	; 0xffffff90
    7d0c:	2303006d 	movwcs	r0, #12397	; 0x306d
    7d10:	00007932 	andeq	r7, r0, r2, lsr r9
    7d14:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7d18:	227f4100 	rsbscs	r4, pc, #0, 2
    7d1c:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    7d20:	2fe50000 	svccs	0x00e50000
    7d24:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
    7d28:	4200002f 	andmi	r0, r0, #47	; 0x2f
    7d2c:	0000032c 	andeq	r0, r0, ip, lsr #6
    7d30:	0000236a 	andeq	r2, r0, sl, ror #6
    7d34:	002e5642 	eoreq	r5, lr, r2, asr #12
    7d38:	00003f00 	andeq	r3, r0, r0, lsl #30
    7d3c:	d3430000 	movtle	r0, #12288	; 0x3000
    7d40:	c300002f 	movwgt	r0, #47	; 0x2f
    7d44:	13000020 	movwne	r0, #32
    7d48:	4c000030 	stcmi	0, cr0, [r0], {48}	; 0x30
    7d4c:	340000c5 	strcc	r0, [r0], #-197	; 0xffffff3b
    7d50:	01000000 	mrseq	r0, (UNDEF: 0)
    7d54:	00301c9c 	mlaseq	r0, ip, ip, r1
    7d58:	2fe54400 	svccs	0x00e54400
    7d5c:	91020000 	mrsls	r0, (UNDEF: 2)
    7d60:	d3430074 	movtle	r0, #12404	; 0x3074
    7d64:	de00002f 	cdple	0, 0, cr0, cr0, cr15, {1}
    7d68:	3700002e 	strcc	r0, [r0, -lr, lsr #32]
    7d6c:	08000030 	stmdaeq	r0, {r4, r5}
    7d70:	440000c5 	strmi	r0, [r0], #-197	; 0xffffff3b
    7d74:	01000000 	mrseq	r0, (UNDEF: 0)
    7d78:	0030409c 	mlaseq	r0, ip, r0, r4
    7d7c:	2fe54400 	svccs	0x00e54400
    7d80:	91020000 	mrsls	r0, (UNDEF: 2)
    7d84:	51450074 	hvcpl	20484	; 0x5004
    7d88:	4e000022 	cdpmi	0, 0, cr0, cr0, cr2, {1}
    7d8c:	02000030 	andeq	r0, r0, #48	; 0x30
    7d90:	0000307c 	andeq	r3, r0, ip, ror r0
    7d94:	00032c42 	andeq	r2, r3, r2, asr #24
    7d98:	00236a00 	eoreq	r6, r3, r0, lsl #20
    7d9c:	1ebb4900 	vmovne.f16	s8, #176	; 0xc1800000 -16.0	; <UNPREDICTABLE>
    7da0:	15030000 	strne	r0, [r3, #-0]
    7da4:	00003814 	andeq	r3, r0, r4, lsl r8
    7da8:	07154900 	ldreq	r4, [r5, -r0, lsl #18]
    7dac:	15030000 	strne	r0, [r3, #-0]
    7db0:	0002aa20 	andeq	sl, r2, r0, lsr #20
    7db4:	04384900 	ldrteq	r4, [r8], #-2304	; 0xfffff700
    7db8:	15030000 	strne	r0, [r3, #-0]
    7dbc:	0002aa2b 	andeq	sl, r2, fp, lsr #20
    7dc0:	40430000 	submi	r0, r3, r0
    7dc4:	22000030 	andcs	r0, r0, #48	; 0x30
    7dc8:	9700002d 	strls	r0, [r0, -sp, lsr #32]
    7dcc:	8c000030 	stchi	0, cr0, [r0], {48}	; 0x30
    7dd0:	7c0000c4 	stcvc	0, cr0, [r0], {196}	; 0xc4
    7dd4:	01000000 	mrseq	r0, (UNDEF: 0)
    7dd8:	0030b89c 	mlaseq	r0, ip, r8, fp
    7ddc:	304e4400 	subcc	r4, lr, r0, lsl #8
    7de0:	91020000 	mrsls	r0, (UNDEF: 2)
    7de4:	30574474 	subscc	r4, r7, r4, ror r4
    7de8:	91020000 	mrsls	r0, (UNDEF: 2)
    7dec:	30634470 	rsbcc	r4, r3, r0, ror r4
    7df0:	91020000 	mrsls	r0, (UNDEF: 2)
    7df4:	306f446f 	rsbcc	r4, pc, pc, ror #8
    7df8:	91020000 	mrsls	r0, (UNDEF: 2)
    7dfc:	2341006e 	movtcs	r0, #4206	; 0x106e
    7e00:	b8000004 	stmdalt	r0, {r2}
    7e04:	ca000009 	bgt	7e30 <CPSR_IRQ_INHIBIT+0x7db0>
    7e08:	02000030 	andeq	r0, r0, #48	; 0x30
    7e0c:	000030dd 	ldrdeq	r3, [r0], -sp
    7e10:	00032c42 	andeq	r2, r3, r2, asr #24
    7e14:	00050f00 	andeq	r0, r5, r0, lsl #30
    7e18:	2e564200 	cdpcs	2, 5, cr4, cr6, cr0, {0}
    7e1c:	003f0000 	eorseq	r0, pc, r0
    7e20:	43000000 	movwmi	r0, #0
    7e24:	000030b8 	strheq	r3, [r0], -r8
    7e28:	00001e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
    7e2c:	000030f8 	strdeq	r3, [r0], -r8
    7e30:	0000c458 	andeq	ip, r0, r8, asr r4
    7e34:	00000034 	andeq	r0, r0, r4, lsr r0
    7e38:	31019c01 	tstcc	r1, r1, lsl #24
    7e3c:	ca440000 	bgt	1107e44 <_bss_end+0x10f6154>
    7e40:	02000030 	andeq	r0, r0, #48	; 0x30
    7e44:	4a007491 	bmi	25090 <_bss_end+0x133a0>
    7e48:	000030b8 	strheq	r3, [r0], -r8
    7e4c:	00002c6d 	andeq	r2, r0, sp, ror #24
    7e50:	0000311c 	andeq	r3, r0, ip, lsl r1
    7e54:	0000c424 	andeq	ip, r0, r4, lsr #8
    7e58:	00000034 	andeq	r0, r0, r4, lsr r0
    7e5c:	31259c01 			; <UNDEFINED> instruction: 0x31259c01
    7e60:	ca440000 	bgt	1107e68 <_bss_end+0x10f6178>
    7e64:	02000030 	andeq	r0, r0, #48	; 0x30
    7e68:	4b007491 	blmi	250b4 <_bss_end+0x133c4>
    7e6c:	000003fc 	strdeq	r0, [r0], -ip
    7e70:	36072401 	strcc	r2, [r7], -r1, lsl #8
    7e74:	02000031 	andeq	r0, r0, #49	; 0x31
    7e78:	00003140 	andeq	r3, r0, r0, asr #2
    7e7c:	00032c42 	andeq	r2, r3, r2, asr #24
    7e80:	00050f00 	andeq	r0, r5, r0, lsl #30
    7e84:	254a0000 	strbcs	r0, [sl, #-0]
    7e88:	00000031 	andeq	r0, r0, r1, lsr r0
    7e8c:	5b000024 	blpl	7f24 <CPSR_IRQ_INHIBIT+0x7ea4>
    7e90:	f0000031 			; <UNDEFINED> instruction: 0xf0000031
    7e94:	340000c3 	strcc	r0, [r0], #-195	; 0xffffff3d
    7e98:	01000000 	mrseq	r0, (UNDEF: 0)
    7e9c:	0031649c 	mlaseq	r1, ip, r4, r6
    7ea0:	31364400 	teqcc	r6, r0, lsl #8
    7ea4:	91020000 	mrsls	r0, (UNDEF: 2)
    7ea8:	974c0074 	smlsldxls	r0, ip, r4, r0
    7eac:	0200000f 	andeq	r0, r0, #15
    7eb0:	0e980d3d 	mrceq	13, 4, r0, cr8, cr13, {1}
    7eb4:	aba00000 	blge	fe807ebc <_bss_end+0xfe7f61cc>
    7eb8:	00300000 	eorseq	r0, r0, r0
    7ebc:	9c010000 	stcls	0, cr0, [r1], {-0}
    7ec0:	00003194 	muleq	r0, r4, r1
    7ec4:	02007040 	andeq	r7, r0, #64	; 0x40
    7ec8:	09b8233d 	ldmibeq	r8!, {r0, r2, r3, r4, r5, r8, r9, sp}
    7ecc:	91020000 	mrsls	r0, (UNDEF: 2)
    7ed0:	00794d74 	rsbseq	r4, r9, r4, ror sp
    7ed4:	91020000 	mrsls	r0, (UNDEF: 2)
    7ed8:	434e0070 	movtmi	r0, #57456	; 0xe070
    7edc:	02000029 	andeq	r0, r0, #41	; 0x29
    7ee0:	25a90e29 	strcs	r0, [r9, #3625]!	; 0xe29
    7ee4:	09b80000 	ldmibeq	r8!, {}	; <UNPREDICTABLE>
    7ee8:	c3c00000 	bicgt	r0, r0, #0
    7eec:	00300000 	eorseq	r0, r0, r0
    7ef0:	9c010000 	stcls	0, cr0, [r1], {-0}
    7ef4:	000031c2 	andeq	r3, r0, r2, asr #3
    7ef8:	000e523d 	andeq	r5, lr, sp, lsr r2
    7efc:	24290200 	strtcs	r0, [r9], #-512	; 0xfffffe00
    7f00:	00000079 	andeq	r0, r0, r9, ror r0
    7f04:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7f08:	0004d63f 	andeq	sp, r4, pc, lsr r6
    7f0c:	0031d900 	eorseq	sp, r1, r0, lsl #18
    7f10:	00c39400 	sbceq	r9, r3, r0, lsl #8
    7f14:	00002c00 	andeq	r2, r0, r0, lsl #24
    7f18:	049c0100 	ldreq	r0, [ip], #256	; 0x100
    7f1c:	3c000032 	stccc	0, cr0, [r0], {50}	; 0x32
    7f20:	0000032c 	andeq	r0, r0, ip, lsr #6
    7f24:	0000050f 	andeq	r0, r0, pc, lsl #10
    7f28:	40749102 	rsbsmi	r9, r4, r2, lsl #2
    7f2c:	00726964 	rsbseq	r6, r2, r4, ror #18
    7f30:	a0293b01 	eorge	r3, r9, r1, lsl #22
    7f34:	02000000 	andeq	r0, r0, #0
    7f38:	6e3d7091 	mrcvs	0, 1, r7, cr13, cr1, {4}
    7f3c:	01000026 	tsteq	r0, r6, lsr #32
    7f40:	09b8343b 	ldmibeq	r8!, {r0, r1, r3, r4, r5, sl, ip, sp}
    7f44:	91020000 	mrsls	r0, (UNDEF: 2)
    7f48:	af3f006c 	svcge	0x003f006c
    7f4c:	1b000004 	blne	7f64 <CPSR_IRQ_INHIBIT+0x7ee4>
    7f50:	70000032 	andvc	r0, r0, r2, lsr r0
    7f54:	240000c3 	strcs	r0, [r0], #-195	; 0xffffff3d
    7f58:	01000000 	mrseq	r0, (UNDEF: 0)
    7f5c:	0032289c 	mlaseq	r2, ip, r8, r2
    7f60:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7f64:	050f0000 	streq	r0, [pc, #-0]	; 7f6c <CPSR_IRQ_INHIBIT+0x7eec>
    7f68:	91020000 	mrsls	r0, (UNDEF: 2)
    7f6c:	7e3f0074 	mrcvc	0, 1, r0, cr15, cr4, {3}
    7f70:	3f000004 	svccc	0x00000004
    7f74:	44000032 	strmi	r0, [r0], #-50	; 0xffffffce
    7f78:	2c0000c3 	stccs	0, cr0, [r0], {195}	; 0xc3
    7f7c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f80:	00326a9c 	mlaseq	r2, ip, sl, r6
    7f84:	032c3c00 			; <UNDEFINED> instruction: 0x032c3c00
    7f88:	050f0000 	streq	r0, [pc, #-0]	; 7f90 <CPSR_IRQ_INHIBIT+0x7f10>
    7f8c:	91020000 	mrsls	r0, (UNDEF: 2)
    7f90:	0cba3d74 	ldceq	13, cr3, [sl], #464	; 0x1d0
    7f94:	31010000 	mrscc	r0, (UNDEF: 1)
    7f98:	0002b728 	andeq	fp, r2, r8, lsr #14
    7f9c:	70910200 	addsvc	r0, r1, r0, lsl #4
    7fa0:	6d756e40 	ldclvs	14, cr6, [r5, #-256]!	; 0xffffff00
    7fa4:	39310100 	ldmdbcc	r1!, {r8}
    7fa8:	00000079 	andeq	r0, r0, r9, ror r0
    7fac:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7fb0:	00044d4f 	andeq	r4, r4, pc, asr #26
    7fb4:	00327d00 	eorseq	r7, r2, r0, lsl #26
    7fb8:	00c31800 	sbceq	r1, r3, r0, lsl #16
    7fbc:	00002c00 	andeq	r2, r0, r0, lsl #24
    7fc0:	3c9c0100 	ldfccs	f0, [ip], {0}
    7fc4:	0000032c 	andeq	r0, r0, ip, lsr #6
    7fc8:	0000050f 	andeq	r0, r0, pc, lsl #10
    7fcc:	3d749102 	ldfccp	f1, [r4, #-8]!
    7fd0:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    7fd4:	12212b01 	eorne	r2, r1, #1024	; 0x400
    7fd8:	0200000d 	andeq	r0, r0, #13
    7fdc:	6e407091 	mcrvs	0, 2, r7, cr0, cr1, {4}
    7fe0:	01006d75 	tsteq	r0, r5, ror sp
    7fe4:	0079322b 	rsbseq	r3, r9, fp, lsr #4
    7fe8:	91020000 	mrsls	r0, (UNDEF: 2)
    7fec:	1f00006c 	svcne	0x0000006c
    7ff0:	0400000b 	streq	r0, [r0], #-11
    7ff4:	001f4d00 	andseq	r4, pc, r0, lsl #26
    7ff8:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
    7ffc:	04000000 	streq	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:14
	ldr pc, _reset_ptr						;@ 0x00 - reset - vyvolano pri resetu procesoru
    8000:	0000344b 	andeq	r3, r0, fp, asr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:15
	ldr pc, _undefined_instruction_ptr		;@ 0x04 - undefined instruction - vyjimka, vyvolana pri dekodovani nezname instrukce
    8004:	000000c5 	andeq	r0, r0, r5, asr #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:16
	ldr pc, _software_interrupt_ptr			;@ 0x08 - software interrupt - vyvolano, kdyz procesor provede instrukci swi
    8008:	0000d55c 	andeq	sp, r0, ip, asr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:17
	ldr pc, _prefetch_abort_ptr				;@ 0x0C - prefetch abort - vyvolano, kdyz se procesor snazi napr. nacist instrukci z mista, odkud nacist nejde
    800c:	000002e4 	andeq	r0, r0, r4, ror #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:18
	ldr pc, _data_abort_ptr					;@ 0x10 - data abort - vyvolano, kdyz se procesor snazi napr. nacist data z mista, odkud nacist nejdou
    8010:	00002c6a 	andeq	r2, r0, sl, ror #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:19
	ldr pc, _unused_handler_ptr				;@ 0x14 - unused - ve specifikaci ARM neni uvedeno zadne vyuziti
    8014:	73080102 	movwvc	r0, #33026	; 0x8102
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:20
	ldr pc, _irq_ptr						;@ 0x18 - IRQ - hardwarove preruseni (general purpose)
    8018:	02000005 	andeq	r0, r0, #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
	ldr pc, _fast_interrupt_ptr				;@ 0x1C - fast interrupt request - prioritni IRQ pro vysokorychlostni zalezitosti
    801c:	05990502 	ldreq	r0, [r9, #1282]	; 0x502
    8020:	04030000 	streq	r0, [r3], #-0
    8024:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    8028:	09820400 	stmibeq	r2, {sl}
    802c:	07020000 	streq	r0, [r2, -r0]
    8030:	00004607 	andeq	r4, r0, r7, lsl #12
    8034:	08010200 	stmdaeq	r1, {r9}
    8038:	0000056a 	andeq	r0, r0, sl, ror #10
    803c:	dc070202 	sfmle	f0, 4, [r7], {2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:52
	mov r0, #0x8000			;@ adresa 0x8000 (_start) do r0
    8040:	04000003 	streq	r0, [r0], #-3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:53
    mov r1, #0x0000			;@ adresa 0x0000 (pocatek RAM) do r1 - tam budeme vkladat tabulku vektoru preruseni
    8044:	000005e4 	andeq	r0, r0, r4, ror #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:57
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8048:	65070902 	strvs	r0, [r7, #-2306]	; 0xfffff6fe
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:58
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:59
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	00000054 	andeq	r0, r0, r4, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:60
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	91070402 	tstls	r7, r2, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:63
	mov r4, #0x0
    8058:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:66
    mov r0, #(CPSR_MODE_SVR | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    805c:	00000065 	andeq	r0, r0, r5, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:67
    msr cpsr_c, r0
    8060:	00006506 	andeq	r6, r0, r6, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:68
	add sp, r4, #0x8000
    8064:	61680700 	cmnvs	r8, r0, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:71
	mov r0, #(CPSR_MODE_IRQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8068:	0503006c 	streq	r0, [r3, #-108]	; 0xffffff94
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:72
    msr cpsr_c, r0
    806c:	00026c0b 	andeq	r6, r2, fp, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:73
	add sp, r4, #0x7000
    8070:	04870800 	streq	r0, [r7], #2048	; 0x800
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:76
	mov r0, #(CPSR_MODE_FIQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8074:	07030000 	streq	r0, [r3, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:77
    msr cpsr_c, r0
    8078:	00006c1c 	andeq	r6, r0, ip, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:78
	add sp, r4, #0x6000
    807c:	e6b28000 	ldrt	r8, [r2], r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:81
    mov r0, #(CPSR_MODE_SYS | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8080:	05cc080e 	strbeq	r0, [ip, #2062]	; 0x80e
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:82
    msr cpsr_c, r0
    8084:	0a030000 	beq	c808c <_bss_end+0xb639c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:83
	add sp, r4, #0x5000
    8088:	0002781d 	andeq	r7, r2, sp, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:86
	mrc p15, #0, r4, c1, c0, #0
    808c:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:87
	orr r4, #0x400000
    8090:	04520820 	ldrbeq	r0, [r2], #-2080	; 0xfffff7e0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:88
	mcr p15, #0, r4, c1, c0, #0
    8094:	0d030000 	stceq	0, cr0, [r3, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:90
	bl _c_startup			;@ C startup kod (inicializace prostredi)
    8098:	0002781d 	andeq	r7, r2, sp, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:91
	bl _cpp_startup			;@ C++ startup kod (volani globalnich konstruktoru, ...)
    809c:	20000000 	andcs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:92
	bl _kernel_main			;@ skocime do hlavniho kodu jadra (v C)
    80a0:	058a0920 	streq	r0, [sl, #2336]	; 0x920
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:93
	bl _cpp_shutdown		;@ C++ shutdown kod (volani globalnich destruktoru, ...)
    80a4:	10030000 	andne	r0, r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:95
	b hang
    80a8:	00006018 	andeq	r6, r0, r8, lsl r0
__cxa_guard_acquire():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:11
    {
    80ac:	73083600 	movwvc	r3, #34304	; 0x8600
    80b0:	03000003 	movweq	r0, #3
    80b4:	02781d42 	rsbseq	r1, r8, #4224	; 0x1080
    80b8:	50000000 	andpl	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:12
        return !*(char*)(g);
    80bc:	4a082021 	bmi	210148 <_bss_end+0x1fe458>
    80c0:	03000003 	movweq	r0, #3
    80c4:	02781d71 	rsbseq	r1, r8, #7232	; 0x1c40
    80c8:	b2000000 	andlt	r0, r0, #0
    80cc:	2f0a2000 	svccs	0x000a2000
    80d0:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:13
    }
    80d4:	00003304 	andeq	r3, r0, r4, lsl #6
    80d8:	10730300 	rsbsne	r0, r3, r0, lsl #6
    80dc:	0000012e 	andeq	r0, r0, lr, lsr #2
    80e0:	0033660b 	eorseq	r6, r3, fp, lsl #12
__cxa_guard_release():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:16
    {
    80e4:	770b0000 	strvc	r0, [fp, -r0]
    80e8:	01000036 	tsteq	r0, r6, lsr r0
    80ec:	00369f0b 	eorseq	r9, r6, fp, lsl #30
    80f0:	860b0200 	strhi	r0, [fp], -r0, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:17
        *(char*)g = 1;
    80f4:	03000035 	movweq	r0, #53	; 0x35
    80f8:	0031cb0b 	eorseq	ip, r1, fp, lsl #22
    80fc:	d80b0400 	stmdale	fp, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:18
    }
    8100:	05000031 	streq	r0, [r0, #-49]	; 0xffffffcf
    8104:	0035de0b 	eorseq	sp, r5, fp, lsl #28
    8108:	080b0600 	stmdaeq	fp, {r9, sl}
    810c:	07000037 	smladxeq	r0, r7, r0, r0
__cxa_guard_abort():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:21
    {
    8110:	0037160b 	eorseq	r1, r7, fp, lsl #12
    8114:	ea0b0800 	b	2ca11c <_bss_end+0x2b842c>
    8118:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
    811c:	32ae0a00 	adccc	r0, lr, #0, 20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:22
    }
    8120:	04050000 	streq	r0, [r5], #-0
    8124:	00000033 	andeq	r0, r0, r3, lsr r0
    8128:	71108103 	tstvc	r0, r3, lsl #2
    812c:	0b000001 	bleq	8138 <__dso_handle+0x8>
__dso_handle():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:26
{
    8130:	000019a9 	andeq	r1, r0, r9, lsr #19
    8134:	30570b00 	subscc	r0, r7, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:28
}
    8138:	0b010000 	bleq	48140 <_bss_end+0x36450>
    813c:	00003435 	andeq	r3, r0, r5, lsr r4
    8140:	34400b02 	strbcc	r0, [r0], #-2818	; 0xfffff4fe
    8144:	0b030000 	bleq	c814c <_bss_end+0xb645c>
__cxa_atexit():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:31
{
    8148:	000034ad 	andeq	r3, r0, sp, lsr #9
    814c:	304d0b04 	subcc	r0, sp, r4, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:33
}
    8150:	0b050000 	bleq	148158 <_bss_end+0x136468>
    8154:	0000328c 	andeq	r3, r0, ip, lsl #5
    8158:	329d0b06 	addscc	r0, sp, #6144	; 0x1800
    815c:	00070000 	andeq	r0, r7, r0
__cxa_pure_virtual():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:36
{
    8160:	0036850a 	eorseq	r8, r6, sl, lsl #10
    8164:	33040500 	movwcc	r0, #17664	; 0x4500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:38
}
    8168:	03000000 	movweq	r0, #0
    816c:	01d2108d 	bicseq	r1, r2, sp, lsl #1
    8170:	410c0000 	mrsmi	r0, (UNDEF: 12)
    8174:	1d005855 	stcne	8, cr5, [r0, #-340]	; 0xfffffeac
__aeabi_unwind_cpp_pr1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:41
{
    8178:	0035490b 	eorseq	r4, r5, fp, lsl #18
    817c:	240b2b00 	strcs	r2, [fp], #-2816	; 0xfffff500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:42 (discriminator 1)
    while (true)
    8180:	2d000037 	stccs	0, cr0, [r0, #-220]	; 0xffffff24
_ZN13CGPIO_HandlerC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:8
CGPIO_Handler::CGPIO_Handler(unsigned int gpio_base_addr)
    8184:	00372a0b 	eorseq	r2, r7, fp, lsl #20
    8188:	530c2e00 	movwpl	r2, #52736	; 0xce00
    818c:	3000494d 	andcc	r4, r0, sp, asr #18
    8190:	0036ad0b 	eorseq	sl, r6, fp, lsl #26
    8194:	b40b3100 	strlt	r3, [fp], #-256	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:9
: mGPIO(reinterpret_cast<unsigned int*>(gpio_base_addr))
    8198:	32000036 	andcc	r0, r0, #54	; 0x36
    819c:	0036bb0b 	eorseq	fp, r6, fp, lsl #22
    81a0:	c20b3300 	andgt	r3, fp, #0, 6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:11
    bzero(&mPin_Reservations_Read, sizeof(mPin_Reservations_Read));
    81a4:	34000036 	strcc	r0, [r0], #-54	; 0xffffffca
    81a8:	4332490c 	teqmi	r2, #12, 18	; 0x30000
    81ac:	530c3500 	movwpl	r3, #50432	; 0xc500
    81b0:	36004950 			; <UNDEFINED> instruction: 0x36004950
    81b4:	4d43500c 	stclmi	0, cr5, [r3, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:12
    bzero(&mPin_Reservations_Write, sizeof(mPin_Reservations_Write));
    81b8:	2a0b3700 	bcs	2d5dc0 <_bss_end+0x2c40d0>
    81bc:	39000032 	stmdbcc	r0, {r1, r4, r5}
    81c0:	02b60800 	adcseq	r0, r6, #0, 16
    81c4:	a4030000 	strge	r0, [r3], #-0
    81c8:	0002781d 	andeq	r7, r2, sp, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:13
}
    81cc:	00b40000 	adcseq	r0, r4, r0
    81d0:	18d90a20 	ldmne	r9, {r5, r9, fp}^
    81d4:	04050000 	streq	r0, [r5], #-0
    81d8:	00000033 	andeq	r0, r0, r3, lsr r0
_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:16
{
    81dc:	2b10a603 	blcs	4319f0 <_bss_end+0x41fd00>
    81e0:	0b000002 	bleq	81f0 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x14>
    81e4:	00001978 	andeq	r1, r0, r8, ror r9
    81e8:	18b50b00 	ldmne	r5!, {r8, r9, fp}
    81ec:	0b010000 	bleq	481f4 <_bss_end+0x36504>
    81f0:	0000358a 	andeq	r3, r0, sl, lsl #11
    81f4:	189e0b02 	ldmne	lr, {r1, r8, r9, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:17
    if (pin > hal::GPIO_Pin_Count)
    81f8:	0b030000 	bleq	c8200 <_bss_end+0xb6510>
    81fc:	000019fc 	strdeq	r1, [r0], -ip
    8200:	17f00b04 	ldrbne	r0, [r0, r4, lsl #22]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:18
        return false;
    8204:	0b050000 	bleq	14820c <_bss_end+0x13651c>
    8208:	000017dc 	ldrdeq	r1, [r0], -ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:20
    reg = pin / 10;
    820c:	18cd0b06 	stmiane	sp, {r1, r2, r8, r9, fp}^
    8210:	0b070000 	bleq	1c8218 <_bss_end+0x1b6528>
    8214:	000019be 			; <UNDEFINED> instruction: 0x000019be
    8218:	64080008 	strvs	r0, [r8], #-8
    821c:	03000003 	movweq	r0, #3
    8220:	02781db3 	rsbseq	r1, r8, #11456	; 0x2cc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:31
    bit_idx = (pin % 10) * 3;
    8224:	40000000 	andmi	r0, r0, r0
    8228:	31082010 	tstcc	r8, r0, lsl r0
    822c:	03000003 	movweq	r0, #3
    8230:	02781dbe 	rsbseq	r1, r8, #12160	; 0x2f80
    8234:	50000000 	andpl	r0, r0, r0
    8238:	ef082020 	svc	0x00082020
    823c:	03000003 	movweq	r0, #3
    8240:	02781dbf 	rsbseq	r1, r8, #12224	; 0x2fc0
    8244:	40000000 	andmi	r0, r0, r0
    8248:	5c082080 	stcpl	0, cr2, [r8], {128}	; 0x80
    824c:	03000004 	movweq	r0, #4
    8250:	02781dc0 	rsbseq	r1, r8, #192, 26	; 0x3000
    8254:	50000000 	andpl	r0, r0, r0
    8258:	0d002080 	stceq	0, cr2, [r0, #-512]	; 0xfffffe00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:33
    return true;
    825c:	00000082 	andeq	r0, r0, r2, lsl #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:34
}
    8260:	8c070402 	cfstrshi	mvf0, [r7], {2}
    8264:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    8268:	00000271 	andeq	r0, r0, r1, ror r2
    826c:	0000920d 	andeq	r9, r0, sp, lsl #4
    8270:	00a20d00 	adceq	r0, r2, r0, lsl #26
_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:37
{
    8274:	b20d0000 	andlt	r0, sp, #0
    8278:	0d000000 	stceq	0, cr0, [r0, #-0]
    827c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    8280:	0000cf0d 	andeq	ip, r0, sp, lsl #30
    8284:	01d20d00 	bicseq	r0, r2, r0, lsl #26
    8288:	2b0d0000 	blcs	348290 <_bss_end+0x3365a0>
    828c:	0d000002 	stceq	0, cr0, [r0, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:38
    if (pin > hal::GPIO_Pin_Count)
    8290:	0000023b 	andeq	r0, r0, fp, lsr r2
    8294:	00024b0d 	andeq	r4, r2, sp, lsl #22
    8298:	025b0d00 	subseq	r0, fp, #0, 26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:39
        return false;
    829c:	d40e0000 	strle	r0, [lr], #-0
    82a0:	04000033 	streq	r0, [r0], #-51	; 0xffffffcd
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPCLR0 : hal::GPIO_Reg::GPCLR1);
    82a4:	8e070504 	cfsh32hi	mvfx0, mvfx7, #4
    82a8:	0f000003 	svceq	0x00000003
    82ac:	000032e0 	andeq	r3, r0, r0, ror #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 1)
    82b0:	8e1c0904 	vnmlshi.f16	s0, s24, s8	; <UNPREDICTABLE>
    82b4:	00000003 	andeq	r0, r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 2)
    82b8:	001a2e10 	andseq	r2, sl, r0, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 4)
    82bc:	1c0c0400 	cfstrsne	mvf0, [ip], {-0}
    82c0:	00002ff9 	strdeq	r2, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:42 (discriminator 4)
    bit_idx = pin % 32;
    82c4:	00000394 	muleq	r0, r4, r3
    82c8:	0002e202 	andeq	lr, r2, r2, lsl #4
    82cc:	0002ed00 	andeq	lr, r2, r0, lsl #26
    82d0:	039a1100 	orrseq	r1, sl, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:44 (discriminator 4)
    return true;
    82d4:	df120000 	svcle	0x00120000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:45
}
    82d8:	00000000 	andeq	r0, r0, r0
    82dc:	0033d410 	eorseq	sp, r3, r0, lsl r4
    82e0:	050f0400 	streq	r0, [pc, #-1024]	; 7ee8 <CPSR_IRQ_INHIBIT+0x7e68>
    82e4:	0000351e 	andeq	r3, r0, lr, lsl r5
_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:48
{
    82e8:	0000039a 	muleq	r0, sl, r3
    82ec:	00030601 	andeq	r0, r3, r1, lsl #12
    82f0:	00031100 	andeq	r1, r3, r0, lsl #2
    82f4:	039a1100 	orrseq	r1, sl, #0, 2
    82f8:	71120000 	tstvc	r2, r0
    82fc:	00000002 	andeq	r0, r0, r2
    8300:	00340313 	eorseq	r0, r4, r3, lsl r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:49
    if (pin > hal::GPIO_Pin_Count)
    8304:	0a120400 	beq	48930c <_bss_end+0x47761c>
    8308:	000034d8 	ldrdeq	r3, [r0], -r8
    830c:	00032601 	andeq	r2, r3, r1, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:50
        return false;
    8310:	00033100 	andeq	r3, r3, r0, lsl #2
    8314:	039a1100 	orrseq	r1, sl, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPSET0 : hal::GPIO_Reg::GPSET1);
    8318:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    831c:	00000001 	andeq	r0, r0, r1
    8320:	0036d113 	eorseq	sp, r6, r3, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 1)
    8324:	0a140400 	beq	50932c <_bss_end+0x4f763c>
    8328:	00002f68 	andeq	r2, r0, r8, ror #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 2)
    832c:	00034601 	andeq	r4, r3, r1, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 4)
    8330:	00035100 	andeq	r5, r3, r0, lsl #2
    8334:	039a1100 	orrseq	r1, sl, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:53 (discriminator 4)
    bit_idx = pin % 32;
    8338:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    833c:	00000001 	andeq	r0, r0, r1
    8340:	0030b613 	eorseq	fp, r0, r3, lsl r6
    8344:	0a170400 	beq	5c934c <_bss_end+0x5b765c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:55 (discriminator 4)
    return true;
    8348:	00002f2e 	andeq	r2, r0, lr, lsr #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:56
}
    834c:	00036601 	andeq	r6, r3, r1, lsl #12
    8350:	00037100 	andeq	r7, r3, r0, lsl #2
    8354:	039a1100 	orrseq	r1, sl, #0, 2
    8358:	71120000 	tstvc	r2, r0
_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:59
{
    835c:	00000001 	andeq	r0, r0, r1
    8360:	00337814 	eorseq	r7, r3, r4, lsl r8
    8364:	0a190400 	beq	64936c <_bss_end+0x63767c>
    8368:	000032fe 	strdeq	r3, [r0], -lr
    836c:	00038201 	andeq	r8, r3, r1, lsl #4
    8370:	039a1100 	orrseq	r1, sl, #0, 2
    8374:	71120000 	tstvc	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:60
    if (pin > hal::GPIO_Pin_Count)
    8378:	00000001 	andeq	r0, r0, r1
    837c:	71041500 	tstvc	r4, r0, lsl #10
    8380:	16000000 	strne	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:61
        return false;
    8384:	00007104 	andeq	r7, r0, r4, lsl #2
    8388:	af041500 	svcge	0x00041500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPLEV0 : hal::GPIO_Reg::GPLEV1);
    838c:	05000002 	streq	r0, [r0, #-2]
    8390:	0000039a 	muleq	r0, sl, r3
    8394:	002feb17 	eoreq	lr, pc, r7, lsl fp	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 1)
    8398:	1e1c0400 	cfmulsne	mvf0, mvf12, mvf0
    839c:	000002af 	andeq	r0, r0, pc, lsr #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 2)
    83a0:	0018620a 	andseq	r6, r8, sl, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 4)
    83a4:	3a010700 	bcc	49fac <_bss_end+0x382bc>
    83a8:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:64 (discriminator 4)
    bit_idx = pin % 32;
    83ac:	03d60c06 	bicseq	r0, r6, #1536	; 0x600
    83b0:	cb0b0000 	blgt	2c83b8 <_bss_end+0x2b66c8>
    83b4:	00000019 	andeq	r0, r0, r9, lsl r0
    83b8:	0018a80b 	andseq	sl, r8, fp, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:66 (discriminator 4)
    return true;
    83bc:	3a0b0100 	bcc	2c87c4 <_bss_end+0x2b6ad4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:67
}
    83c0:	02000018 	andeq	r0, r0, #24
    83c4:	19a80e00 	stmibne	r8!, {r9, sl, fp}
    83c8:	05080000 	streq	r0, [r8, #-0]
    83cc:	04ce070d 	strbeq	r0, [lr], #1805	; 0x70d
_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:70
{
    83d0:	740f0000 	strvc	r0, [pc], #-0	; 83d8 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0x8>
    83d4:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    83d8:	038e1c15 	orreq	r1, lr, #5376	; 0x1500
    83dc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    83e0:	000019ec 	andeq	r1, r0, ip, ror #19
    83e4:	ce0b1105 	adfgte	f1, f3, f5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:72
    if (!Get_GPFSEL_Location(pin, reg, bit))
    83e8:	01000004 	tsteq	r0, r4
    83ec:	00197d0f 	andseq	r7, r9, pc, lsl #26
    83f0:	15180500 	ldrne	r0, [r8, #-1280]	; 0xfffffb00
    83f4:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    83f8:	1a2e1004 	bne	b8c410 <_bss_end+0xb7a720>
    83fc:	1b050000 	blne	148404 <_bss_end+0x136714>
    8400:	0019871c 	andseq	r8, r9, ip, lsl r7
    8404:	00039400 	andeq	r9, r3, r0, lsl #8
    8408:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    840c:	042e0000 	strteq	r0, [lr], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:75
    unsigned int mode = static_cast<unsigned int>(func);
    8410:	d5110000 	ldrle	r0, [r1, #-0]
    8414:	12000004 	andne	r0, r0, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:77
    unsigned int rd = mGPIO[reg];
    8418:	000001e2 	andeq	r0, r0, r2, ror #3
    841c:	19a81000 	stmibne	r8!, {ip}
    8420:	1e050000 	cdpne	0, 0, cr0, cr5, cr0, {0}
    8424:	0019af05 	andseq	sl, r9, r5, lsl #30
    8428:	0004d500 	andeq	sp, r4, r0, lsl #10
    842c:	04470100 	strbeq	r0, [r7], #-256	; 0xffffff00
    8430:	04520000 	ldrbeq	r0, [r2], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:78
    rd &= ~(7 << bit);
    8434:	d5110000 	ldrle	r0, [r1, #-0]
    8438:	12000004 	andne	r0, r0, #4
    843c:	00000271 	andeq	r0, r0, r1, ror r2
    8440:	35e81300 	strbcc	r1, [r8, #768]!	; 0x300
    8444:	22050000 	andcs	r0, r5, #0
    8448:	00184805 	andseq	r4, r8, r5, lsl #16
    844c:	04670100 	strbteq	r0, [r7], #-256	; 0xffffff00
    8450:	047c0000 	ldrbteq	r0, [ip], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:79
    rd |= (mode << bit);
    8454:	d5110000 	ldrle	r0, [r1, #-0]
    8458:	12000004 	andne	r0, r0, #4
    845c:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8460:	00006512 	andeq	r6, r0, r2, lsl r5
    8464:	03b11200 			; <UNDEFINED> instruction: 0x03b11200
    8468:	13000000 	movwne	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:81
    mGPIO[reg] = rd;
    846c:	000033f4 	strdeq	r3, [r0], -r4
    8470:	e30a2405 	movw	r2, #41989	; 0xa405
    8474:	01000018 	tsteq	r0, r8, lsl r0
    8478:	00000491 	muleq	r0, r1, r4
    847c:	00000497 	muleq	r0, r7, r4
    8480:	0004d511 	andeq	sp, r4, r1, lsl r5
    8484:	e3130000 	tst	r3, #0
    8488:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:73
        return;
    848c:	1a040a27 	bne	10ad30 <_bss_end+0xf9040>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:82
}
    8490:	ac010000 	stcge	0, cr0, [r1], {-0}
    8494:	b2000004 	andlt	r0, r0, #4
_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:85
{
    8498:	11000004 	tstne	r0, r4
    849c:	000004d5 	ldrdeq	r0, [r0], -r5
    84a0:	19d71900 	ldmibne	r7, {r8, fp, ip}^
    84a4:	29050000 	stmdbcs	r5, {}	; <UNPREDICTABLE>
    84a8:	0017960a 	andseq	r9, r7, sl, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:87
    if (!Get_GPFSEL_Location(pin, reg, bit))
    84ac:	0004db00 	andeq	sp, r4, r0, lsl #22
    84b0:	04c70100 	strbeq	r0, [r7], #256	; 0x100
    84b4:	d5110000 	ldrle	r0, [r1, #-0]
    84b8:	00000004 	andeq	r0, r0, r4
    84bc:	d4041500 	strle	r1, [r4], #-1280	; 0xfffffb00
    84c0:	1a000004 	bne	84d8 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x40>
    84c4:	03d60415 	bicseq	r0, r6, #352321536	; 0x15000000
    84c8:	01020000 	mrseq	r0, (UNDEF: 2)
    84cc:	00454802 	subeq	r4, r5, r2, lsl #16
    84d0:	178f1700 	strne	r1, [pc, r0, lsl #14]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:88
        return NGPIO_Function::Unspecified;
    84d4:	2c050000 	stccs	0, cr0, [r5], {-0}
    84d8:	0003d60f 	andeq	sp, r3, pc, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:90
    return static_cast<NGPIO_Function>((mGPIO[reg] >> bit) & 7);
    84dc:	31e51b00 	mvncc	r1, r0, lsl #22
    84e0:	04060000 	streq	r0, [r6], #-0
    84e4:	00006014 	andeq	r6, r0, r4, lsl r0
    84e8:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    84ec:	0a000103 	beq	8900 <_ZN13CGPIO_Handler8Free_PinEjbb+0x100>
    84f0:	000032d4 	ldrdeq	r3, [r0], -r4
    84f4:	00330405 	eorseq	r0, r3, r5, lsl #8
    84f8:	07060000 	streq	r0, [r6, -r0]
    84fc:	00052b0c 	andeq	r2, r5, ip, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:91 (discriminator 1)
}
    8500:	654e0c00 	strbvs	r0, [lr, #-3072]	; 0xfffff400
    8504:	0b000077 	bleq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
    8508:	000032cb 	andeq	r3, r0, fp, asr #5
_ZN13CGPIO_Handler10Set_OutputEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:94
{
    850c:	19c30b01 	stmibne	r3, {r0, r8, r9, fp}^
    8510:	0b020000 	bleq	88518 <_bss_end+0x76828>
    8514:	000033fc 	strdeq	r3, [r0], -ip
    8518:	a81c0003 	ldmdage	ip, {r0, r1}
    851c:	0c000031 	stceq	0, cr0, [r0], {49}	; 0x31
    8520:	5d081606 	stcpl	6, cr1, [r8, #-24]	; 0xffffffe8
    8524:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96
    if (!(set && Get_GPSET_Location(pin, reg, bit)) && !(!set && Get_GPCLR_Location(pin, reg, bit)))
    8528:	0600726c 	streq	r7, [r0], -ip, ror #4
    852c:	02711318 	rsbseq	r1, r1, #24, 6	; 0x60000000
    8530:	1d000000 	stcne	0, cr0, [r0, #-0]
    8534:	06007073 			; <UNDEFINED> instruction: 0x06007073
    8538:	02711319 	rsbseq	r1, r1, #1677721600	; 0x64000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 2)
    853c:	1d040000 	stcne	0, cr0, [r4, #-0]
    8540:	06006370 			; <UNDEFINED> instruction: 0x06006370
    8544:	0271131a 	rsbseq	r1, r1, #1744830464	; 0x68000000
    8548:	00080000 	andeq	r0, r8, r0
    854c:	0035921c 	eorseq	r9, r5, ip, lsl r2
    8550:	22065c00 	andcs	r5, r6, #0, 24
    8554:	0005b908 	andeq	fp, r5, r8, lsl #18
    8558:	353d0f00 	ldrcc	r0, [sp, #-3840]!	; 0xfffff100
    855c:	24060000 	strcs	r0, [r6], #-0
    8560:	00052b12 	andeq	r2, r5, r2, lsl fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 3)
    8564:	701d0000 	andsvc	r0, sp, r0
    8568:	06006469 	streq	r6, [r0], -r9, ror #8
    856c:	00651225 	rsbeq	r1, r5, r5, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 6)
    8570:	0f0c0000 	svceq	0x000c0000
    8574:	0000312c 	andeq	r3, r0, ip, lsr #2
    8578:	00112606 	andseq	r2, r1, r6, lsl #12
    857c:	10000005 	andne	r0, r0, r5
    8580:	0032f00f 	eorseq	pc, r2, pc
    8584:	12270600 	eorne	r0, r7, #0, 12
    8588:	00000065 	andeq	r0, r0, r5, rrx
    858c:	33390f14 	teqcc	r9, #20, 30	; 0x50
    8590:	29060000 	stmdbcs	r6, {}	; <UNPREDICTABLE>
    8594:	00006512 	andeq	r6, r0, r2, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 7)
    8598:	9b0f1800 	blls	3ce5a0 <_bss_end+0x3bc8b0>
    859c:	06000031 			; <UNDEFINED> instruction: 0x06000031
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 8)
    85a0:	05b90c2a 	ldreq	r0, [r9, #3114]!	; 0xc2a
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 10)
    85a4:	001c0000 	andseq	r0, ip, r0
    85a8:	0005c91e 	andeq	ip, r5, lr, lsl r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:99
    mGPIO[reg] = (1 << bit);
    85ac:	0005c900 	andeq	ip, r5, r0, lsl #18
    85b0:	00651f00 	rsbeq	r1, r5, r0, lsl #30
    85b4:	000f0000 	andeq	r0, pc, r0
    85b8:	05cf0415 	strbeq	r0, [pc, #1045]	; 89d5 <_Z41__static_initialization_and_destruction_0ii+0x35>
    85bc:	c8200000 	stmdagt	r0!, {}	; <UNPREDICTABLE>
    85c0:	1c00002b 	stcne	0, cr0, [r0], {43}	; 0x2b
    85c4:	0000318f 	andeq	r3, r0, pc, lsl #3
    85c8:	08060708 	stmdaeq	r6, {r3, r8, r9, sl}
    85cc:	000005fa 	strdeq	r0, [r0], -sl
    85d0:	0030721d 	eorseq	r7, r0, sp, lsl r2
    85d4:	540e0807 	strpl	r0, [lr], #-2055	; 0xfffff7f9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:97
        return;
    85d8:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:100
}
    85dc:	0031721d 	eorseq	r7, r1, sp, lsl r2
    85e0:	540e0907 	strpl	r0, [lr], #-2311	; 0xfffff6f9
_ZN13CGPIO_Handler9Get_InputEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:103
{
    85e4:	04000000 	streq	r0, [r0], #-0
    85e8:	34b70a00 	ldrtcc	r0, [r7], #2560	; 0xa00
    85ec:	04050000 	streq	r0, [r5], #-0
    85f0:	00000033 	andeq	r0, r0, r3, lsr r0
    85f4:	190c1607 	stmdbne	ip, {r0, r1, r2, r9, sl, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:105
    if (!Get_GPLEV_Location(pin, reg, bit))
    85f8:	0b000006 	bleq	8618 <_ZN13CGPIO_Handler9Get_InputEj+0x34>
    85fc:	00003124 	andeq	r3, r0, r4, lsr #2
    8600:	1c880b00 	vstmiane	r8, {d0-d-1}
    8604:	00010000 	andeq	r0, r1, r0
    8608:	0031080a 	eorseq	r0, r1, sl, lsl #16
    860c:	33040500 	movwcc	r0, #17664	; 0x4500
    8610:	07000000 	streq	r0, [r0, -r0]
    8614:	06320c1e 			; <UNDEFINED> instruction: 0x06320c1e
    8618:	c90b0000 	stmdbgt	fp, {}	; <UNPREDICTABLE>
    861c:	00000036 	andeq	r0, r0, r6, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:106
        return false;
    8620:	365f0a00 	ldrbcc	r0, [pc], -r0, lsl #20
    8624:	04050000 	streq	r0, [r5], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:108
    return (mGPIO[reg] >> bit) & 0x1;
    8628:	00000033 	andeq	r0, r0, r3, lsr r0
    862c:	630c2607 	movwvs	r2, #50695	; 0xc607
    8630:	0b000006 	bleq	8650 <_ZN13CGPIO_Handler9Get_InputEj+0x6c>
    8634:	00000a20 	andeq	r0, r0, r0, lsr #20
    8638:	02d30b00 	sbcseq	r0, r3, #0, 22
    863c:	0b010000 	bleq	48644 <_bss_end+0x36954>
    8640:	00001ce0 	andeq	r1, r0, r0, ror #25
    8644:	09ad0b02 	stmibeq	sp!, {r1, r8, r9, fp}
    8648:	0b030000 	bleq	c8650 <_bss_end+0xb6960>
    864c:	000024ea 	andeq	r2, r0, sl, ror #9
    8650:	441b0004 	ldrmi	r0, [fp], #-4
    8654:	0800001c 	stmdaeq	r0, {r2, r3, r4}
    8658:	00601a06 	rsbeq	r1, r0, r6, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:109 (discriminator 1)
}
    865c:	03050000 	movweq	r0, #20480	; 0x5000
    8660:	000103f0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    8664:	001c751b 	andseq	r7, ip, fp, lsl r5
_ZN13CGPIO_Handler11Reserve_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:112
{
    8668:	1a080800 	bne	20a670 <_bss_end+0x1f8980>
    866c:	00000060 	andeq	r0, r0, r0, rrx
    8670:	03f40305 	mvnseq	r0, #335544320	; 0x14000000
    8674:	931b0001 	tstls	fp, #1
    8678:	0800001d 	stmdaeq	r0, {r0, r2, r3, r4}
    867c:	00601a0a 	rsbeq	r1, r0, sl, lsl #20
    8680:	03050000 	movweq	r0, #20480	; 0x5000
    8684:	000103f8 	strdeq	r0, [r1], -r8
    8688:	001b791b 	andseq	r7, fp, fp, lsl r9
    868c:	1a0c0800 	bne	30a694 <_bss_end+0x2f89a4>
    8690:	00000060 	andeq	r0, r0, r0, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:115
    uint32_t bank_idx = pin / 32;
    8694:	03fc0305 	mvnseq	r0, #335544320	; 0x14000000
    8698:	901b0001 	andsls	r0, fp, r1
    869c:	09000036 	stmdbeq	r0, {r1, r2, r4, r5}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:116
    uint32_t bit_idx = pin % 32;
    86a0:	0060140a 	rsbeq	r1, r0, sl, lsl #8
    86a4:	03050000 	movweq	r0, #20480	; 0x5000
    86a8:	00010400 	andeq	r0, r1, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118
    if (read && (mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1)
    86ac:	0035cb1c 	eorseq	ip, r5, ip, lsl fp
    86b0:	0d090c00 	stceq	12, cr0, [r9, #-0]
    86b4:	0006f208 	andeq	pc, r6, r8, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118 (discriminator 1)
    86b8:	0d080f00 	stceq	15, cr0, [r8, #-0]
    86bc:	0f090000 	svceq	0x00090000
    86c0:	0006f219 	andeq	pc, r6, r9, lsl r2	; <UNPREDICTABLE>
    86c4:	050f0000 	streq	r0, [pc, #-0]	; 86cc <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x64>
    86c8:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    86cc:	06f21910 	usateq	r1, #18, r0, lsl #18
    86d0:	0f040000 	svceq	0x00040000
    86d4:	00003581 	andeq	r3, r0, r1, lsl #11
    86d8:	f8131109 			; <UNDEFINED> instruction: 0xf8131109
    86dc:	08000006 	stmdaeq	r0, {r1, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:119
        return false;
    86e0:	bd041500 	cfstr32lt	mvfx1, [r4, #-0]
    86e4:	15000006 	strne	r0, [r0, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121
    if (write && (mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1)
    86e8:	00055d04 	andeq	r5, r5, r4, lsl #26
    86ec:	31320e00 	teqcc	r2, r0, lsl #28
    86f0:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121 (discriminator 1)
    86f4:	08960714 	ldmeq	r6, {r2, r4, r8, r9, sl}
    86f8:	ca0f0000 	bgt	3c8700 <_bss_end+0x3b6a10>
    86fc:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
    8700:	00540e18 	subseq	r0, r4, r8, lsl lr
    8704:	0f000000 	svceq	0x00000000
    8708:	0000305f 	andeq	r3, r0, pc, asr r0
    870c:	f2191b09 	vqdmulh.s16	d1, d9, d9
    8710:	04000006 	streq	r0, [r0], #-6
    8714:	0034c50f 	eorseq	ip, r4, pc, lsl #10
    8718:	191e0900 	ldmdbne	lr, {r8, fp}
    871c:	000006f2 	strdeq	r0, [r0], -r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:122
        return false;
    8720:	36552108 	ldrbcc	r2, [r5], -r8, lsl #2
    8724:	21090000 	mrscs	r0, (UNDEF: 9)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:124
    if (read)
    8728:	0035a80a 	eorseq	sl, r5, sl, lsl #16
    872c:	00074600 	andeq	r4, r7, r0, lsl #12
    8730:	00075100 	andeq	r5, r7, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:125
        mPin_Reservations_Read[bank_idx] |= 1ULL << bit_idx;
    8734:	089b1100 	ldmeq	fp, {r8, ip}
    8738:	f2120000 	vhadd.s16	d0, d2, d0
    873c:	00000006 	andeq	r0, r0, r6
    8740:	00313210 	eorseq	r3, r1, r0, lsl r2
    8744:	05240900 	streq	r0, [r4, #-2304]!	; 0xfffff700
    8748:	000036e3 	andeq	r3, r0, r3, ror #13
    874c:	0000089b 	muleq	r0, fp, r8
    8750:	00076a01 	andeq	r6, r7, r1, lsl #20
    8754:	00077000 	andeq	r7, r7, r0
    8758:	089b1100 	ldmeq	fp, {r8, ip}
    875c:	13000000 	movwne	r0, #0
    8760:	00003641 	andeq	r3, r0, r1, asr #12
    8764:	af0a2709 	svcge	0x000a2709
    8768:	0100002f 	tsteq	r0, pc, lsr #32
    876c:	00000785 	andeq	r0, r0, r5, lsl #15
    8770:	0000078b 	andeq	r0, r0, fp, lsl #15
    8774:	00089b11 	andeq	r9, r8, r1, lsl fp
    8778:	1d100000 	ldcne	0, cr0, [r0, #-0]
    877c:	09000031 	stmdbeq	r0, {r0, r4, r5}
    8780:	30e00e2a 	rsccc	r0, r0, sl, lsr #28
    8784:	00540000 	subseq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:127
    if (write)
    8788:	a4010000 	strge	r0, [r1], #-0
    878c:	af000007 	svcge	0x00000007
    8790:	11000007 	tstne	r0, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:128
        mPin_Reservations_Write[bank_idx] |= 1ULL << bit_idx;
    8794:	0000089b 	muleq	r0, fp, r8
    8798:	00027112 	andeq	r7, r2, r2, lsl r1
    879c:	9f130000 	svcls	0x00130000
    87a0:	09000035 	stmdbeq	r0, {r0, r2, r4, r5}
    87a4:	34140a2e 	ldrcc	r0, [r4], #-2606	; 0xfffff5d2
    87a8:	c4010000 	strgt	r0, [r1], #-0
    87ac:	ca000007 	bgt	87d0 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x168>
    87b0:	11000007 	tstne	r0, r7
    87b4:	0000089b 	muleq	r0, fp, r8
    87b8:	32481000 	subcc	r1, r8, #0
    87bc:	31090000 	mrscc	r0, (UNDEF: 9)
    87c0:	00307213 	eorseq	r7, r0, r3, lsl r2
    87c4:	0006f800 	andeq	pc, r6, r0, lsl #16
    87c8:	07e30100 	strbeq	r0, [r3, r0, lsl #2]!
    87cc:	07e90000 	strbeq	r0, [r9, r0]!
    87d0:	a1110000 	tstge	r1, r0
    87d4:	00000008 	andeq	r0, r0, r8
    87d8:	00325c10 	eorseq	r5, r2, r0, lsl ip
    87dc:	0e340900 	vaddeq.f16	s0, s8, s0	; <UNPREDICTABLE>
    87e0:	00003384 	andeq	r3, r0, r4, lsl #7
    87e4:	00000054 	andeq	r0, r0, r4, asr r0
    87e8:	00080201 	andeq	r0, r8, r1, lsl #4
    87ec:	00080d00 	andeq	r0, r8, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:130
    return true;
    87f0:	089b1100 	ldmeq	fp, {r8, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:131
}
    87f4:	c9120000 	ldmdbgt	r2, {}	; <UNPREDICTABLE>
    87f8:	00000005 	andeq	r0, r0, r5
    87fc:	00303a10 	eorseq	r3, r0, r0, lsl sl
_ZN13CGPIO_Handler8Free_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:134
{
    8800:	0a370900 	beq	dcac08 <_bss_end+0xdb8f18>
    8804:	000031fe 	strdeq	r3, [r0], -lr
    8808:	000004db 	ldrdeq	r0, [r0], -fp
    880c:	00082601 	andeq	r2, r8, r1, lsl #12
    8810:	00083100 	andeq	r3, r8, r0, lsl #2
    8814:	089b1100 	ldmeq	fp, {r8, ip}
    8818:	54120000 	ldrpl	r0, [r2], #-0
    881c:	00000000 	andeq	r0, r0, r0
    8820:	00327913 	eorseq	r7, r2, r3, lsl r9
    8824:	0a3a0900 	beq	e8ac2c <_bss_end+0xe78f3c>
    8828:	000035ef 	andeq	r3, r0, pc, ror #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:135
    uint32_t bank_idx = pin / 32;
    882c:	00084601 	andeq	r4, r8, r1, lsl #12
    8830:	00086500 	andeq	r6, r8, r0, lsl #10
    8834:	089b1100 	ldmeq	fp, {r8, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:136
    uint32_t bit_idx = pin % 32;
    8838:	19120000 	ldmdbne	r2, {}	; <UNPREDICTABLE>
    883c:	12000006 	andne	r0, r0, #6
    8840:	00000054 	andeq	r0, r0, r4, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138
    if (read && !((mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1))
    8844:	00005412 	andeq	r5, r0, r2, lsl r4
    8848:	00541200 	subseq	r1, r4, r0, lsl #4
    884c:	a7120000 	ldrge	r0, [r2, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138 (discriminator 1)
    8850:	00000008 	andeq	r0, r0, r8
    8854:	0030a014 	eorseq	sl, r0, r4, lsl r0
    8858:	053d0900 	ldreq	r0, [sp, #-2304]!	; 0xfffff700
    885c:	00003143 	andeq	r3, r0, r3, asr #2
    8860:	00087601 	andeq	r7, r8, r1, lsl #12
    8864:	089b1100 	ldmeq	fp, {r8, ip}
    8868:	32120000 	andscc	r0, r2, #0
    886c:	12000006 	andne	r0, r0, #6
    8870:	00000054 	andeq	r0, r0, r4, asr r0
    8874:	00005412 	andeq	r5, r0, r2, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:139
        return false;
    8878:	00541200 	subseq	r1, r4, r0, lsl #4
    887c:	a7120000 	ldrge	r0, [r2, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141
    if (write && !((mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1))
    8880:	00000008 	andeq	r0, r0, r8
    8884:	06fe0500 	ldrbteq	r0, [lr], r0, lsl #10
    8888:	04150000 	ldreq	r0, [r5], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141 (discriminator 1)
    888c:	000006fe 	strdeq	r0, [r0], -lr
    8890:	08960415 	ldmeq	r6, {r0, r2, r4, sl}
    8894:	04160000 	ldreq	r0, [r6], #-0
    8898:	000005d4 	ldrdeq	r0, [r0], -r4
    889c:	003a2117 	eorseq	r2, sl, r7, lsl r1
    88a0:	19400900 	stmdbne	r0, {r8, fp}^
    88a4:	000006fe 	strdeq	r0, [r0], -lr
    88a8:	0003a522 	andeq	sl, r3, r2, lsr #10
    88ac:	17090100 	strne	r0, [r9, -r0, lsl #2]
    88b0:	0cc40305 	stcleq	3, cr0, [r4], {5}
    88b4:	bf230001 	svclt	0x00230001
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:142
        return false;
    88b8:	01000032 	tsteq	r0, r2, lsr r0
    88bc:	05d4140d 	ldrbeq	r1, [r4, #1037]	; 0x40d
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:144
    if (read)
    88c0:	03050000 	movweq	r0, #20480	; 0x5000
    88c4:	00010cc8 	andeq	r0, r1, r8, asr #25
    88c8:	002fdc24 	eoreq	sp, pc, r4, lsr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:145
        mPin_Reservations_Read[bank_idx] &= ~(1ULL << bit_idx);
    88cc:	00d82400 	sbcseq	r2, r8, r0, lsl #8
    88d0:	00001c00 	andeq	r1, r0, r0, lsl #24
    88d4:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    88d8:	00000241 	andeq	r0, r0, r1, asr #4
    88dc:	0000d7d0 	ldrdeq	sp, [r0], -r0
    88e0:	00000054 	andeq	r0, r0, r4, asr r0
    88e4:	091a9c01 	ldmdbeq	sl, {r0, sl, fp, ip, pc}
    88e8:	3b260000 	blcc	9888f0 <_bss_end+0x976c00>
    88ec:	01000003 	tsteq	r0, r3
    88f0:	00330160 	eorseq	r0, r3, r0, ror #2
    88f4:	91020000 	mrsls	r0, (UNDEF: 2)
    88f8:	07342674 			; <UNDEFINED> instruction: 0x07342674
    88fc:	60010000 	andvs	r0, r1, r0
    8900:	00003301 	andeq	r3, r0, r1, lsl #6
    8904:	70910200 	addsvc	r0, r1, r0, lsl #4
    8908:	03712700 	cmneq	r1, #0, 14
    890c:	5a010000 	bpl	48914 <_bss_end+0x36c24>
    8910:	00093406 	andeq	r3, r9, r6, lsl #8
    8914:	00d78000 	sbcseq	r8, r7, r0
    8918:	00005000 	andeq	r5, r0, r0
    891c:	5f9c0100 	svcpl	0x009c0100
    8920:	28000009 	stmdacs	r0, {r0, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:147
    if (write)
    8924:	0000032c 	andeq	r0, r0, ip, lsr #6
    8928:	000003a0 	andeq	r0, r0, r0, lsr #7
    892c:	26649102 	strbtcs	r9, [r4], -r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:148
        mPin_Reservations_Write[bank_idx] &= ~(1ULL << bit_idx);
    8930:	000036fd 	strdeq	r3, [r0], -sp
    8934:	71395a01 	teqvc	r9, r1, lsl #20
    8938:	02000001 	andeq	r0, r0, #1
    893c:	70236091 	mlavc	r3, r1, r0, r6
    8940:	01000032 	tsteq	r0, r2, lsr r0
    8944:	006c185c 	rsbeq	r1, ip, ip, asr r8
    8948:	91020000 	mrsls	r0, (UNDEF: 2)
    894c:	5127006c 			; <UNDEFINED> instruction: 0x5127006c
    8950:	01000003 	tsteq	r0, r3
    8954:	09790652 	ldmdbeq	r9!, {r1, r4, r6, r9, sl}^
    8958:	d7300000 	ldrle	r0, [r0, -r0]!
    895c:	00500000 	subseq	r0, r0, r0
    8960:	9c010000 	stcls	0, cr0, [r1], {-0}
    8964:	000009a4 	andeq	r0, r0, r4, lsr #19
    8968:	00032c28 	andeq	r2, r3, r8, lsr #24
    896c:	0003a000 	andeq	sl, r3, r0
    8970:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    8974:	0036fd26 	eorseq	pc, r6, r6, lsr #26
    8978:	38520100 	ldmdacc	r2, {r8}^
    897c:	00000171 	andeq	r0, r0, r1, ror r1
    8980:	23609102 	cmncs	r0, #-2147483648	; 0x80000000
    8984:	00003270 	andeq	r3, r0, r0, ror r2
    8988:	6c185401 	cfldrsvs	mvf5, [r8], {1}
    898c:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:150
    return true;
    8990:	27006c91 			; <UNDEFINED> instruction: 0x27006c91
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    8994:	00000331 	andeq	r0, r0, r1, lsr r3
    8998:	be064d01 	cdplt	13, 0, cr4, cr6, cr1, {0}
    899c:	ec000009 	stc	0, cr0, [r0], {9}
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89a0:	440000d6 	strmi	r0, [r0], #-214	; 0xffffff2a
    89a4:	01000000 	mrseq	r0, (UNDEF: 0)
    89a8:	0009da9c 	muleq	r9, ip, sl
    89ac:	032c2800 			; <UNDEFINED> instruction: 0x032c2800
    89b0:	03a00000 	moveq	r0, #0
    89b4:	91020000 	mrsls	r0, (UNDEF: 2)
    89b8:	36fd266c 	ldrbtcc	r2, [sp], ip, ror #12
    89bc:	4d010000 	stcmi	0, cr0, [r1, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151 (discriminator 1)
    89c0:	00012e45 	andeq	r2, r1, r5, asr #28
    89c4:	68910200 	ldmvs	r1, {r9}
    89c8:	03112700 	tsteq	r1, #0, 14
    89cc:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:6
CGPIO_Handler sGPIO(hal::GPIO_Base);
    89d0:	0009f406 	andeq	pc, r9, r6, lsl #8
    89d4:	00d6a800 	sbcseq	sl, r6, r0, lsl #16
    89d8:	00004400 	andeq	r4, r0, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    89dc:	109c0100 	addsne	r0, ip, r0, lsl #2
    89e0:	2800000a 	stmdacs	r0, {r1, r3}
    89e4:	0000032c 	andeq	r0, r0, ip, lsr #6
    89e8:	000003a0 	andeq	r0, r0, r0, lsr #7
    89ec:	266c9102 	strbtcs	r9, [ip], -r2, lsl #2
    89f0:	000036fd 	strdeq	r3, [r0], -sp
_GLOBAL__sub_I_sGPIO():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89f4:	2e444801 	cdpcs	8, 4, cr4, cr4, cr1, {0}
    89f8:	02000001 	andeq	r0, r0, #1
    89fc:	29006891 	stmdbcs	r0, {r0, r4, r7, fp, sp, lr}
    8a00:	000002c9 	andeq	r0, r0, r9, asr #5
    8a04:	2a184301 	bcs	619610 <_bss_end+0x607920>
    8a08:	7000000a 	andvc	r0, r0, sl
    8a0c:	380000d6 	stmdacc	r0, {r1, r2, r4, r6, r7}
_ZN4CI2CC2Emjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:7
CI2C::CI2C(unsigned long base, uint32_t pin_sda, uint32_t pin_scl)
    8a10:	01000000 	mrseq	r0, (UNDEF: 0)
    8a14:	000a469c 	muleq	sl, ip, r6
    8a18:	032c2800 			; <UNDEFINED> instruction: 0x032c2800
    8a1c:	03a00000 	moveq	r0, #0
    8a20:	91020000 	mrsls	r0, (UNDEF: 2)
    8a24:	65722a74 	ldrbvs	r2, [r2, #-2676]!	; 0xfffff58c
    8a28:	43010067 	movwmi	r0, #4199	; 0x1067
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:8
    : mBSC_Base(reinterpret_cast<volatile uint32_t*>(base)), mOpened(false), mSDA_Pin(pin_sda), mSCL_Pin(pin_scl)
    8a2c:	0000df52 	andeq	sp, r0, r2, asr pc
    8a30:	70910200 	addsvc	r0, r1, r0, lsl #4
    8a34:	02ed2b00 	rsceq	r2, sp, #0, 22
    8a38:	3d010000 	stccc	0, cr0, [r1, #-0]
    8a3c:	000a5701 	andeq	r5, sl, r1, lsl #14
    8a40:	0a6d0000 	beq	1b48a48 <_bss_end+0x1b36d58>
    8a44:	2c2c0000 	stccs	0, cr0, [ip], #-0
    8a48:	a0000003 	andge	r0, r0, r3
    8a4c:	2d000003 	stccs	0, cr0, [r0, #-12]
    8a50:	00001afe 	strdeq	r1, [r0], -lr
    8a54:	713c3d01 	teqvc	ip, r1, lsl #26
    8a58:	00000002 	andeq	r0, r0, r2
    8a5c:	000a462e 	andeq	r4, sl, lr, lsr #12
    8a60:	0030c100 	eorseq	ip, r0, r0, lsl #2
    8a64:	000a8800 	andeq	r8, sl, r0, lsl #16
    8a68:	00d63c00 	sbcseq	r3, r6, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:11
}
    8a6c:	00003400 	andeq	r3, r0, r0, lsl #8
    8a70:	999c0100 	ldmibls	ip, {r8}
    8a74:	2f00000a 	svccs	0x0000000a
    8a78:	00000a57 	andeq	r0, r0, r7, asr sl
_ZN4CI2C3RegEN3hal7BSC_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:14
{
    8a7c:	2f749102 	svccs	0x00749102
    8a80:	00000a60 	andeq	r0, r0, r0, ror #20
    8a84:	00709102 	rsbseq	r9, r0, r2, lsl #2
    8a88:	00334f30 	eorseq	r4, r3, r0, lsr pc
    8a8c:	33360100 	teqcc	r6, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:15
    return mBSC_Base[static_cast<uint32_t>(reg)];
    8a90:	0000d62c 	andeq	sp, r0, ip, lsr #12
    8a94:	00000010 	andeq	r0, r0, r0, lsl r0
    8a98:	b5319c01 	ldrlt	r9, [r1, #-3073]!	; 0xfffff3ff
    8a9c:	01000031 	tsteq	r0, r1, lsr r0
    8aa0:	d5fc112c 	ldrble	r1, [ip, #300]!	; 0x12c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:16
}
    8aa4:	00300000 	eorseq	r0, r0, r0
    8aa8:	9c010000 	stcls	0, cr0, [r1], {-0}
    8aac:	00355c32 	eorseq	r5, r5, r2, lsr ip
    8ab0:	190f0100 	stmdbne	pc, {r8}	; <UNPREDICTABLE>
_ZN4CI2C10Wait_ReadyEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:19
{
    8ab4:	00000b1c 	andeq	r0, r0, ip, lsl fp
    8ab8:	0000d55c 	andeq	sp, r0, ip, asr r5
    8abc:	000000a0 	andeq	r0, r0, r0, lsr #1
    8ac0:	0b1c9c01 	bleq	72facc <_bss_end+0x71dddc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:20
    volatile uint32_t& s = Reg(hal::BSC_Reg::Status);
    8ac4:	722a0000 	eorvc	r0, sl, #0
    8ac8:	0f010030 	svceq	0x00010030
    8acc:	00005450 	andeq	r5, r0, r0, asr r4
    8ad0:	2a500100 	bcs	1408ed8 <_bss_end+0x13f71e8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:23
    while( !(s & (1 << 1)) )
    8ad4:	01003172 	tsteq	r0, r2, ror r1
    8ad8:	00545010 	subseq	r5, r4, r0, lsl r0
    8adc:	51010000 	mrspl	r0, (UNDEF: 1)
    8ae0:	0032722a 	eorseq	r7, r2, sl, lsr #4
    8ae4:	54501101 	ldrbpl	r1, [r0], #-257	; 0xfffffeff
    8ae8:	01000000 	mrseq	r0, (UNDEF: 0)
    8aec:	33b72652 			; <UNDEFINED> instruction: 0x33b72652
    8af0:	12010000 	andne	r0, r1, #0
    8af4:	00005457 	andeq	r5, r0, r7, asr r4
    8af8:	23530100 	cmpcs	r3, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:25
}
    8afc:	000034a4 	andeq	r3, r0, r4, lsr #9
    8b00:	fa131501 	blx	4cdf0c <_bss_end+0x4bc21c>
    8b04:	02000005 	andeq	r0, r0, #5
_ZN4CI2C4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:28
{
    8b08:	15007491 	strne	r7, [r0, #-1169]	; 0xfffffb6f
    8b0c:	0005d404 	andeq	sp, r5, r4, lsl #8
    8b10:	0d7c0000 	ldcleq	0, cr0, [ip, #-0]
    8b14:	00040000 	andeq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:29
    if (!sGPIO.Reserve_Pin(mSDA_Pin, true, true))
    8b18:	00002276 	andeq	r2, r0, r6, ror r2
    8b1c:	00140104 	andseq	r0, r4, r4, lsl #2
    8b20:	30040000 	andcc	r0, r4, r0
    8b24:	c5000037 	strgt	r0, [r0, #-55]	; 0xffffffc9
    8b28:	40000000 	andmi	r0, r0, r0
    8b2c:	a80000d8 	stmdage	r0, {r3, r4, r6, r7}
    8b30:	97000000 	strls	r0, [r0, -r0]
    8b34:	0200002f 	andeq	r0, r0, #47	; 0x2f
    8b38:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    8b3c:	25030000 	strcs	r0, [r3, #-0]
    8b40:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:30
        return false;
    8b44:	05990502 	ldreq	r0, [r9, #1282]	; 0x502
    8b48:	04040000 	streq	r0, [r4], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:32
    if (!sGPIO.Reserve_Pin(mSCL_Pin, true, true))
    8b4c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    8b50:	09820500 	stmibeq	r2, {r8, sl}
    8b54:	07020000 	streq	r0, [r2, -r0]
    8b58:	00004b07 	andeq	r4, r0, r7, lsl #22
    8b5c:	08010200 	stmdaeq	r1, {r9}
    8b60:	0000056a 	andeq	r0, r0, sl, ror #10
    8b64:	00004b06 	andeq	r4, r0, r6, lsl #22
    8b68:	07020200 	streq	r0, [r2, -r0, lsl #4]
    8b6c:	000003dc 	ldrdeq	r0, [r0], -ip
    8b70:	0005e405 	andeq	lr, r5, r5, lsl #8
    8b74:	07090200 	streq	r0, [r9, -r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:34
        sGPIO.Free_Pin(mSDA_Pin, true, true);
    8b78:	0000006f 	andeq	r0, r0, pc, rrx
    8b7c:	00005e03 	andeq	r5, r0, r3, lsl #28
    8b80:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8b84:	00004591 	muleq	r0, r1, r5
    8b88:	00006f03 	andeq	r6, r0, r3, lsl #30
    8b8c:	006f0600 	rsbeq	r0, pc, r0, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:35
        return false;
    8b90:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    8b94:	03006c61 	movweq	r6, #3169	; 0xc61
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:40
    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Alt_0);
    8b98:	02760b05 	rsbseq	r0, r6, #5120	; 0x1400
    8b9c:	87080000 	strhi	r0, [r8, -r0]
    8ba0:	03000004 	movweq	r0, #4
    8ba4:	00761c07 	rsbseq	r1, r6, r7, lsl #24
    8ba8:	b2800000 	addlt	r0, r0, #0
    8bac:	cc080ee6 	stcgt	14, cr0, [r8], {230}	; 0xe6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:41
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Alt_0);
    8bb0:	03000005 	movweq	r0, #5
    8bb4:	02821d0a 	addeq	r1, r2, #640	; 0x280
    8bb8:	00000000 	andeq	r0, r0, r0
    8bbc:	52082000 	andpl	r2, r8, #0
    8bc0:	03000004 	movweq	r0, #4
    8bc4:	02821d0d 	addeq	r1, r2, #832	; 0x340
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:43
    mOpened = true;
    8bc8:	00000000 	andeq	r0, r0, r0
    8bcc:	8a092020 	bhi	250c54 <_bss_end+0x23ef64>
    8bd0:	03000005 	movweq	r0, #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:45
    return true;
    8bd4:	006a1810 	rsbeq	r1, sl, r0, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:46
}
    8bd8:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    8bdc:	00000373 	andeq	r0, r0, r3, ror r3
    8be0:	821d4203 	andshi	r4, sp, #805306368	; 0x30000000
    8be4:	00000002 	andeq	r0, r0, r2
_ZN4CI2C5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:49
{
    8be8:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    8bec:	0000034a 	andeq	r0, r0, sl, asr #6
    8bf0:	821d7103 	andshi	r7, sp, #-1073741824	; 0xc0000000
    8bf4:	00000002 	andeq	r0, r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:50
    Reg(hal::BSC_Reg::Control) = 0;
    8bf8:	0a2000b2 	beq	808ec8 <_bss_end+0x7f71d8>
    8bfc:	0000322f 	andeq	r3, r0, pc, lsr #4
    8c00:	00380405 	eorseq	r0, r8, r5, lsl #8
    8c04:	73030000 	movwvc	r0, #12288	; 0x3000
    8c08:	00013810 	andeq	r3, r1, r0, lsl r8
    8c0c:	33660b00 	cmncc	r6, #0, 22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:52
    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Input);
    8c10:	0b000000 	bleq	8c18 <_ZN4CI2C5CloseEv+0x30>
    8c14:	00003677 	andeq	r3, r0, r7, ror r6
    8c18:	369f0b01 	ldrcc	r0, [pc], r1, lsl #22
    8c1c:	0b020000 	bleq	88c24 <_bss_end+0x76f34>
    8c20:	00003586 	andeq	r3, r0, r6, lsl #11
    8c24:	31cb0b03 	biccc	r0, fp, r3, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:53
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Input);
    8c28:	0b040000 	bleq	108c30 <_bss_end+0xf6f40>
    8c2c:	000031d8 	ldrdeq	r3, [r0], -r8
    8c30:	35de0b05 	ldrbcc	r0, [lr, #2821]	; 0xb05
    8c34:	0b060000 	bleq	188c3c <_bss_end+0x176f4c>
    8c38:	00003708 	andeq	r3, r0, r8, lsl #14
    8c3c:	37160b07 	ldrcc	r0, [r6, -r7, lsl #22]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:55
    sGPIO.Free_Pin(mSDA_Pin, true, true);
    8c40:	0b080000 	bleq	208c48 <_bss_end+0x1f6f58>
    8c44:	000033ea 	andeq	r3, r0, sl, ror #7
    8c48:	ae0a0009 	cdpge	0, 0, cr0, cr10, cr9, {0}
    8c4c:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
    8c50:	00003804 	andeq	r3, r0, r4, lsl #16
    8c54:	10810300 	addne	r0, r1, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:56
    sGPIO.Free_Pin(mSCL_Pin, true, true);
    8c58:	0000017b 	andeq	r0, r0, fp, ror r1
    8c5c:	0019a90b 	andseq	sl, r9, fp, lsl #18
    8c60:	570b0000 	strpl	r0, [fp, -r0]
    8c64:	01000030 	tsteq	r0, r0, lsr r0
    8c68:	0034350b 	eorseq	r3, r4, fp, lsl #10
    8c6c:	400b0200 	andmi	r0, fp, r0, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:58
    mOpened = false;
    8c70:	03000034 	movweq	r0, #52	; 0x34
    8c74:	0034ad0b 	eorseq	sl, r4, fp, lsl #26
    8c78:	4d0b0400 	cfstrsmi	mvf0, [fp, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:59
}
    8c7c:	05000030 	streq	r0, [r0, #-48]	; 0xffffffd0
    8c80:	00328c0b 	eorseq	r8, r2, fp, lsl #24
    8c84:	9d0b0600 	stcls	6, cr0, [fp, #-0]
    8c88:	07000032 	smladxeq	r0, r2, r0, r0
_ZNK4CI2C9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:62
{
    8c8c:	36850a00 	strcc	r0, [r5], r0, lsl #20
    8c90:	04050000 	streq	r0, [r5], #-0
    8c94:	00000038 	andeq	r0, r0, r8, lsr r0
    8c98:	dc108d03 	ldcle	13, cr8, [r0], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:63
    return mOpened;
    8c9c:	0c000001 	stceq	0, cr0, [r0], {1}
    8ca0:	00585541 	subseq	r5, r8, r1, asr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:64
}
    8ca4:	35490b1d 	strbcc	r0, [r9, #-2845]	; 0xfffff4e3
    8ca8:	0b2b0000 	bleq	ac8cb0 <_bss_end+0xab6fc0>
    8cac:	00003724 	andeq	r3, r0, r4, lsr #14
    8cb0:	372a0b2d 	strcc	r0, [sl, -sp, lsr #22]!
_ZN4CI2C4SendEtPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:67
{
    8cb4:	0c2e0000 	stceq	0, cr0, [lr], #-0
    8cb8:	00494d53 	subeq	r4, r9, r3, asr sp
    8cbc:	36ad0b30 			; <UNDEFINED> instruction: 0x36ad0b30
    8cc0:	0b310000 	bleq	c48cc8 <_bss_end+0xc36fd8>
    8cc4:	000036b4 			; <UNDEFINED> instruction: 0x000036b4
    8cc8:	36bb0b32 			; <UNDEFINED> instruction: 0x36bb0b32
    8ccc:	0b330000 	bleq	cc8cd4 <_bss_end+0xcb6fe4>
    8cd0:	000036c2 	andeq	r3, r0, r2, asr #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:68
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8cd4:	32490c34 	subcc	r0, r9, #52, 24	; 0x3400
    8cd8:	0c350043 	ldceq	0, cr0, [r5], #-268	; 0xfffffef4
    8cdc:	00495053 	subeq	r5, r9, r3, asr r0
    8ce0:	43500c36 	cmpmi	r0, #13824	; 0x3600
    8ce4:	0b37004d 	bleq	dc8e20 <_bss_end+0xdb7130>
    8ce8:	0000322a 	andeq	r3, r0, sl, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:69
    Reg(hal::BSC_Reg::Data_Length) = len;
    8cec:	b6080039 			; <UNDEFINED> instruction: 0xb6080039
    8cf0:	03000002 	movweq	r0, #2
    8cf4:	02821da4 	addeq	r1, r2, #164, 26	; 0x2900
    8cf8:	b4000000 	strlt	r0, [r0], #-0
    8cfc:	d90a2000 	stmdble	sl, {sp}
    8d00:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71
    for (uint32_t i = 0; i < len; i++)
    8d04:	00003804 	andeq	r3, r0, r4, lsl #16
    8d08:	10a60300 	adcne	r0, r6, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 3)
    8d0c:	00000235 	andeq	r0, r0, r5, lsr r2
    8d10:	0019780b 	andseq	r7, r9, fp, lsl #16
    8d14:	b50b0000 	strlt	r0, [fp, #-0]
    8d18:	01000018 	tsteq	r0, r8, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:72 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = buffer[i];
    8d1c:	00358a0b 	eorseq	r8, r5, fp, lsl #20
    8d20:	9e0b0200 	cdpls	2, 0, cr0, cr11, cr0, {0}
    8d24:	03000018 	movweq	r0, #24
    8d28:	0019fc0b 	andseq	pc, r9, fp, lsl #24
    8d2c:	f00b0400 			; <UNDEFINED> instruction: 0xf00b0400
    8d30:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    8d34:	0017dc0b 	andseq	sp, r7, fp, lsl #24
    8d38:	cd0b0600 	stcgt	6, cr0, [fp, #-0]
    8d3c:	07000018 	smladeq	r0, r8, r0, r0
    8d40:	0019be0b 	andseq	fp, r9, fp, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8d44:	08000800 	stmdaeq	r0, {fp}
    8d48:	00000364 	andeq	r0, r0, r4, ror #6
    8d4c:	821db303 	andshi	fp, sp, #201326592	; 0xc000000
    8d50:	00000002 	andeq	r0, r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74
    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8d54:	08201040 	stmdaeq	r0!, {r6, ip}
    8d58:	00000331 	andeq	r0, r0, r1, lsr r3
    8d5c:	821dbe03 	andshi	fp, sp, #3, 28	; 0x30
    8d60:	00000002 	andeq	r0, r0, r2
    8d64:	08202050 	stmdaeq	r0!, {r4, r6, sp}
    8d68:	000003ef 	andeq	r0, r0, pc, ror #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:75
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    8d6c:	821dbf03 	andshi	fp, sp, #3, 30
    8d70:	00000002 	andeq	r0, r0, r2
    8d74:	08208040 	stmdaeq	r0!, {r6, pc}
    8d78:	0000045c 	andeq	r0, r0, ip, asr r4
    8d7c:	821dc003 	andshi	ip, sp, #3
    8d80:	00000002 	andeq	r0, r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:77
    Wait_Ready();
    8d84:	00208050 	eoreq	r8, r0, r0, asr r0
    8d88:	00008c0d 	andeq	r8, r0, sp, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:78
}
    8d8c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8d90:	0000458c 	andeq	r4, r0, ip, lsl #11
    8d94:	00027b03 	andeq	r7, r2, r3, lsl #22
    8d98:	009c0d00 	addseq	r0, ip, r0, lsl #26
    8d9c:	ac0d0000 	stcge	0, cr0, [sp], {-0}
_ZN4CI2C7ReceiveEtPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:81
{
    8da0:	0d000000 	stceq	0, cr0, [r0, #-0]
    8da4:	000000bc 	strheq	r0, [r0], -ip
    8da8:	0000c90d 	andeq	ip, r0, sp, lsl #18
    8dac:	00d90d00 	sbcseq	r0, r9, r0, lsl #26
    8db0:	dc0d0000 	stcle	0, cr0, [sp], {-0}
    8db4:	0d000001 	stceq	0, cr0, [r0, #-4]
    8db8:	00000235 	andeq	r0, r0, r5, lsr r2
    8dbc:	0002450d 	andeq	r4, r2, sp, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:82
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8dc0:	02550d00 	subseq	r0, r5, #0, 26
    8dc4:	650d0000 	strvs	r0, [sp, #-0]
    8dc8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    8dcc:	00007b04 	andeq	r7, r0, r4, lsl #22
    8dd0:	02010200 	andeq	r0, r1, #0, 4
    8dd4:	00004548 	andeq	r4, r0, r8, asr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:83
    Reg(hal::BSC_Reg::Data_Length) = len;
    8dd8:	0018620a 	andseq	r6, r8, sl, lsl #4
    8ddc:	3f010700 	svccc	0x00010700
    8de0:	04000000 	streq	r0, [r0], #-0
    8de4:	02eb0c06 	rsceq	r0, fp, #1536	; 0x600
    8de8:	cb0b0000 	blgt	2c8df0 <_bss_end+0x2b7100>
    8dec:	00000019 	andeq	r0, r0, r9, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:85
    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8df0:	0018a80b 	andseq	sl, r8, fp, lsl #16
    8df4:	3a0b0100 	bcc	2c91fc <_bss_end+0x2b750c>
    8df8:	02000018 	andeq	r0, r0, #24
    8dfc:	19a80f00 	stmibne	r8!, {r8, r9, sl, fp}
    8e00:	04080000 	streq	r0, [r8], #-0
    8e04:	03e3070d 	mvneq	r0, #3407872	; 0x340000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:86
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7) | (1 << 4) | (1 << 0); // zapoceti cteni (enable bsc + clear fifo + start transfer + read)
    8e08:	74100000 	ldrvc	r0, [r0], #-0
    8e0c:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    8e10:	02b91c15 	adcseq	r1, r9, #5376	; 0x1500
    8e14:	11000000 	mrsne	r0, (UNDEF: 0)
    8e18:	000019ec 	andeq	r1, r0, ip, ror #19
    8e1c:	e30b1104 	movw	r1, #45316	; 0xb104
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:88
    Wait_Ready();
    8e20:	01000003 	tsteq	r0, r3
    8e24:	00197d10 	andseq	r7, r9, r0, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90
    for (uint32_t i = 0; i < len; i++)
    8e28:	15180400 	ldrne	r0, [r8, #-1024]	; 0xfffffc00
    8e2c:	00000305 	andeq	r0, r0, r5, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 3)
    8e30:	1a2e1204 	bne	b8d648 <_bss_end+0xb7b958>
    8e34:	1b040000 	blne	108e3c <_bss_end+0xf714c>
    8e38:	0019871c 	andseq	r8, r9, ip, lsl r7
    8e3c:	0003ea00 	andeq	lr, r3, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:91 (discriminator 2)
        buffer[i] = Reg(hal::BSC_Reg::Data_FIFO);
    8e40:	03380200 	teqeq	r8, #0, 4
    8e44:	03430000 	movteq	r0, #12288	; 0x3000
    8e48:	f0130000 			; <UNDEFINED> instruction: 0xf0130000
    8e4c:	14000003 	strne	r0, [r0], #-3
    8e50:	000001ec 	andeq	r0, r0, ip, ror #3
    8e54:	19a81200 	stmibne	r8!, {r9, ip}
    8e58:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    8e5c:	0019af05 	andseq	sl, r9, r5, lsl #30
    8e60:	0003f000 	andeq	pc, r3, r0
    8e64:	035c0100 	cmpeq	ip, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8e68:	03670000 	cmneq	r7, #0
    8e6c:	f0130000 			; <UNDEFINED> instruction: 0xf0130000
    8e70:	14000003 	strne	r0, [r0], #-3
    8e74:	0000027b 	andeq	r0, r0, fp, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:92
}
    8e78:	35e81500 	strbcc	r1, [r8, #1280]!	; 0x500
    8e7c:	22040000 	andcs	r0, r4, #0
    8e80:	00184805 	andseq	r4, r8, r5, lsl #16
    8e84:	037c0100 	cmneq	ip, #0, 2
    8e88:	03910000 	orrseq	r0, r1, #0
_ZN4CI2C17Begin_TransactionEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:95
{
    8e8c:	f0130000 			; <UNDEFINED> instruction: 0xf0130000
    8e90:	14000003 	strne	r0, [r0], #-3
    8e94:	00000305 	andeq	r0, r0, r5, lsl #6
    8e98:	00006f14 	andeq	r6, r0, r4, lsl pc
    8e9c:	02c61400 	sbceq	r1, r6, #0, 8
    8ea0:	15000000 	strne	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96
    if (mTransaction.mIn_Progress)
    8ea4:	000033f4 	strdeq	r3, [r0], -r4
    8ea8:	e30a2404 	movw	r2, #41988	; 0xa404
    8eac:	01000018 	tsteq	r0, r8, lsl r0
    8eb0:	000003a6 	andeq	r0, r0, r6, lsr #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:97
        return mTransaction;
    8eb4:	000003ac 	andeq	r0, r0, ip, lsr #7
    8eb8:	0003f013 	andeq	pc, r3, r3, lsl r0	; <UNPREDICTABLE>
    8ebc:	e3150000 	tst	r5, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:99
    mTransaction.mIn_Progress = true;
    8ec0:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    8ec4:	1a040a27 	bne	10b768 <_bss_end+0xf9a78>
    8ec8:	c1010000 	mrsgt	r0, (UNDEF: 1)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:100
    mTransaction.mLength = 0;
    8ecc:	c7000003 	strgt	r0, [r0, -r3]
    8ed0:	13000003 	movwne	r0, #3
    8ed4:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:101
    mTransaction.Set_Address(addr);
    8ed8:	19d71600 	ldmibne	r7, {r9, sl, ip}^
    8edc:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    8ee0:	0017960a 	andseq	r9, r7, sl, lsl #12
    8ee4:	0002bf00 	andeq	fp, r2, r0, lsl #30
    8ee8:	03dc0100 	bicseq	r0, ip, #0, 2
    8eec:	f0130000 			; <UNDEFINED> instruction: 0xf0130000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:103
    return mTransaction;
    8ef0:	00000003 	andeq	r0, r0, r3
    8ef4:	e9040e00 	stmdb	r4, {r9, sl, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:104
}
    8ef8:	17000003 	strne	r0, [r0, -r3]
    8efc:	007b0418 	rsbseq	r0, fp, r8, lsl r4
    8f00:	040e0000 	streq	r0, [lr], #-0
_ZN4CI2C15End_TransactionER16CI2C_Transactionb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:107
{
    8f04:	000002eb 	andeq	r0, r0, fp, ror #5
    8f08:	00178f19 	andseq	r8, r7, r9, lsl pc
    8f0c:	0f2c0400 	svceq	0x002c0400
    8f10:	000002eb 	andeq	r0, r0, fp, ror #5
    8f14:	000b980f 	andeq	r9, fp, pc, lsl #16
    8f18:	03051800 	movweq	r1, #22528	; 0x5800
    8f1c:	00064307 	andeq	r4, r6, r7, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:108
    if (!transaction.mIn_Progress)
    8f20:	0b161a00 	bleq	58f728 <_bss_end+0x57da38>
    8f24:	04070000 	streq	r0, [r7], #-0
    8f28:	0000006f 	andeq	r0, r0, pc, rrx
    8f2c:	01100605 	tsteq	r0, r5, lsl #12
    8f30:	0000042f 	andeq	r0, r0, pc, lsr #8
    8f34:	5845480c 	stmdapl	r5, {r2, r3, fp, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:111
    transaction.mIn_Progress = false;
    8f38:	440c1000 	strmi	r1, [ip], #-0
    8f3c:	0a004345 	beq	19c58 <_bss_end+0x7f68>
    8f40:	040f0300 	streq	r0, [pc], #-768	; 8f48 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113
    if (!commit || transaction.mLength == 0)
    8f44:	231b0000 	tstcs	fp, #0
    8f48:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    8f4c:	580c2405 	stmdapl	ip, {r0, r2, sl, sp}
    8f50:	1c000004 	stcne	0, cr0, [r0], {4}
    8f54:	26050079 			; <UNDEFINED> instruction: 0x26050079
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113 (discriminator 1)
    8f58:	00006f16 	andeq	r6, r0, r6, lsl pc
    8f5c:	781c0000 	ldmdavc	ip, {}	; <UNPREDICTABLE>
    8f60:	16270500 	strtne	r0, [r7], -r0, lsl #10
    8f64:	0000006f 	andeq	r0, r0, pc, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:116
    Reg(hal::BSC_Reg::Slave_Address) = transaction.mAddress;
    8f68:	751d0004 	ldrvc	r0, [sp, #-4]
    8f6c:	0500000c 	streq	r0, [r0, #-12]
    8f70:	042f1b0c 	strteq	r1, [pc], #-2828	; 8f78 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x74>
    8f74:	0a010000 	beq	48f7c <_bss_end+0x3728c>
    8f78:	000be81e 	andeq	lr, fp, lr, lsl r8
    8f7c:	280d0500 	stmdacs	sp, {r8, sl}
    8f80:	00000649 	andeq	r0, r0, r9, asr #12
    8f84:	0b981f01 	bleq	fe610b90 <_bss_end+0xfe5feea0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:117
    Reg(hal::BSC_Reg::Data_Length) = transaction.mLength;
    8f88:	10050000 	andne	r0, r5, r0
    8f8c:	000c620e 	andeq	r6, ip, lr, lsl #4
    8f90:	00064e00 	andeq	r4, r6, r0, lsl #28
    8f94:	048c0100 	streq	r0, [ip], #256	; 0x100
    8f98:	04a10000 	strteq	r0, [r1], #0
    8f9c:	4e130000 	cdpmi	0, 1, cr0, cr3, cr0, {0}
    8fa0:	14000006 	strne	r0, [r0], #-6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119
    for (volatile int i = 0; i < transaction.mLength; i++)
    8fa4:	0000006f 	andeq	r0, r0, pc, rrx
    8fa8:	00006f14 	andeq	r6, r0, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119 (discriminator 3)
    8fac:	006f1400 	rsbeq	r1, pc, r0, lsl #8
    8fb0:	15000000 	strne	r0, [r0, #-0]
    8fb4:	000018a2 	andeq	r1, r0, r2, lsr #17
    8fb8:	830a1205 	movwhi	r1, #41477	; 0xa205
    8fbc:	0100000b 	tsteq	r0, fp
    8fc0:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
    8fc4:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
    8fc8:	00064e13 	andeq	r4, r6, r3, lsl lr
    8fcc:	a1120000 	tstge	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:120 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = transaction.mBuffer[i];
    8fd0:	0500000b 	streq	r0, [r0, #-11]
    8fd4:	0c050f14 	stceq	15, cr0, [r5], {20}
    8fd8:	06540000 	ldrbeq	r0, [r4], -r0
    8fdc:	d5010000 	strle	r0, [r1, #-0]
    8fe0:	e0000004 	and	r0, r0, r4
    8fe4:	13000004 	movwne	r0, #4
    8fe8:	0000064e 	andeq	r0, r0, lr, asr #12
    8fec:	00002514 	andeq	r2, r0, r4, lsl r5
    8ff0:	a1120000 	tstge	r2, r0
    8ff4:	0500000b 	streq	r0, [r0, #-11]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:119 (discriminator 2)
    for (volatile int i = 0; i < transaction.mLength; i++)
    8ff8:	0bac0f15 	bleq	feb0cc54 <_bss_end+0xfeafaf64>
    8ffc:	06540000 	ldrbeq	r0, [r4], -r0
    9000:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    9004:	04000004 	streq	r0, [r0], #-4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:122
    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    9008:	13000005 	movwne	r0, #5
    900c:	0000064e 	andeq	r0, r0, lr, asr #12
    9010:	00064314 	andeq	r4, r6, r4, lsl r3
    9014:	a1120000 	tstge	r2, r0
    9018:	0500000b 	streq	r0, [r0, #-11]
    901c:	0c890f16 	stceq	15, cr0, [r9], {22}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    9020:	06540000 	ldrbeq	r0, [r4], -r0
    9024:	1d010000 	stcne	0, cr0, [r1, #-0]
    9028:	28000005 	stmdacs	r0, {r0, r2}
    902c:	13000005 	movwne	r0, #5
    9030:	0000064e 	andeq	r0, r0, lr, asr #12
    9034:	00040f14 	andeq	r0, r4, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125
    Wait_Ready();
    9038:	a1120000 	tstge	r2, r0
    903c:	0500000b 	streq	r0, [r0, #-11]
    9040:	0c340f17 	ldceq	15, cr0, [r4], #-92	; 0xffffffa4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:109
        return;
    9044:	06540000 	ldrbeq	r0, [r4], -r0
    9048:	41010000 	mrsmi	r0, (UNDEF: 1)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:114
        return;
    904c:	4c000005 	stcmi	0, cr0, [r0], {5}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
}
    9050:	13000005 	movwne	r0, #5
    9054:	0000064e 	andeq	r0, r0, lr, asr #12
    9058:	00006f14 	andeq	r6, r0, r4, lsl pc
    905c:	a1120000 	tstge	r2, r0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
    9060:	0500000b 	streq	r0, [r0, #-11]
    9064:	0bf40f18 	bleq	ffd0cccc <_bss_end+0xffcfafdc>
    9068:	06540000 	ldrbeq	r0, [r4], -r0
    906c:	65010000 	strvs	r0, [r1, #-0]
    9070:	70000005 	andvc	r0, r0, r5
    9074:	13000005 	movwne	r0, #5
    9078:	0000064e 	andeq	r0, r0, lr, asr #12
    907c:	0002bf14 	andeq	fp, r2, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126 (discriminator 1)
    9080:	b4200000 	strtlt	r0, [r0], #-0
    9084:	0500000a 	streq	r0, [r0, #-10]
    9088:	0a84111b 	beq	fe10d4fc <_bss_end+0xfe0fb80c>
    908c:	05840000 	streq	r0, [r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:5
CI2C sI2C1(hal::BSC1_Base, 2, 3);
    9090:	058a0000 	streq	r0, [sl]
    9094:	4e130000 	cdpmi	0, 1, cr0, cr3, cr0, {0}
    9098:	00000006 	andeq	r0, r0, r6
    909c:	000aa720 	andeq	sl, sl, r0, lsr #14
    90a0:	111c0500 	tstne	ip, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
}
    90a4:	00000c45 	andeq	r0, r0, r5, asr #24
    90a8:	0000059e 	muleq	r0, lr, r5
    90ac:	000005a4 	andeq	r0, r0, r4, lsr #11
    90b0:	00064e13 	andeq	r4, r6, r3, lsl lr
    90b4:	5f200000 	svcpl	0x00200000
    90b8:	0500000a 	streq	r0, [r0, #-10]
_GLOBAL__sub_I_sI2C1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:126
    90bc:	0b2d111d 	bleq	b4d538 <_bss_end+0xb3b848>
    90c0:	05b80000 	ldreq	r0, [r8, #0]!
    90c4:	05be0000 	ldreq	r0, [lr, #0]!
    90c8:	4e130000 	cdpmi	0, 1, cr0, cr3, cr0, {0}
    90cc:	00000006 	andeq	r0, r0, r6
    90d0:	0013e120 	andseq	lr, r3, r0, lsr #2
    90d4:	0a1f0500 	beq	7ca4dc <_bss_end+0x7b87ec>
_ZN16CI2C_Transaction11Set_AddressEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:26
        void Set_Address(uint16_t addr)
    90d8:	00000c1e 	andeq	r0, r0, lr, lsl ip
    90dc:	000005d2 	ldrdeq	r0, [r0], -r2
    90e0:	000005d8 	ldrdeq	r0, [r0], -r8
    90e4:	00064e13 	andeq	r4, r6, r3, lsl lr
    90e8:	a2200000 	eorge	r0, r0, #0
    90ec:	0500000a 	streq	r0, [r0, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:28
            mAddress = addr;
    90f0:	0bbf0a21 	bleq	fefcb97c <_bss_end+0xfefb9c8c>
    90f4:	05ec0000 	strbeq	r0, [ip, #0]!
    90f8:	06010000 	streq	r0, [r1], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:29
        } 
    90fc:	4e130000 	cdpmi	0, 1, cr0, cr3, cr0, {0}
    9100:	14000006 	strne	r0, [r0], #-6
    9104:	0000006f 	andeq	r0, r0, pc, rrx
    9108:	00065a14 	andeq	r5, r6, r4, lsl sl
_ZN16CI2C_TransactionC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:24
        CI2C_Transaction() = default;
    910c:	006f1400 	rsbeq	r1, pc, r0, lsl #8
    9110:	10000000 	andne	r0, r0, r0
    9114:	00000b4f 	andeq	r0, r0, pc, asr #22
    9118:	66232b05 	strtvs	r2, [r3], -r5, lsl #22
    911c:	00000006 	andeq	r0, r0, r6
    9120:	000c1610 	andeq	r1, ip, r0, lsl r6
    9124:	122c0500 	eorne	r0, ip, #0, 10
    9128:	0000006f 	andeq	r0, r0, pc, rrx
    912c:	0bd61004 	bleq	ff58d144 <_bss_end+0xff57b454>
    9130:	2d050000 	stccs	0, cr0, [r5, #-0]
    9134:	00006f12 	andeq	r6, r0, r2, lsl pc
    9138:	df100800 	svcle	0x00100800
    913c:	0500000b 	streq	r0, [r0, #-11]
    9140:	04340f2e 	ldrteq	r0, [r4], #-3886	; 0xfffff0d2
    9144:	100c0000 	andne	r0, ip, r0
    9148:	00000a51 	andeq	r0, r0, r1, asr sl
    914c:	0f122f05 	svceq	0x00122f05
    9150:	14000004 	strne	r0, [r0], #-4
_ZN8CMonitorC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:5
CMonitor::CMonitor(unsigned int monitor_base_addr, unsigned int width, unsigned int height)
    9154:	2c040e00 	stccs	14, cr0, [r4], {-0}
    9158:	03000000 	movweq	r0, #0
    915c:	00000643 	andeq	r0, r0, r3, asr #12
    9160:	0402040e 	streq	r0, [r2], #-1038	; 0xfffffbf2
    9164:	04180000 	ldreq	r0, [r8], #-0
    9168:	00000402 	andeq	r0, r0, r2, lsl #8
    916c:	0025040e 	eoreq	r0, r5, lr, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:6
: m_monitor{ reinterpret_cast<unsigned char*>(monitor_base_addr) }
    9170:	040e0000 	streq	r0, [lr], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:10
, m_number_base{ DEFAULT_NUMBER_BASE }
    9174:	00000052 	andeq	r0, r0, r2, asr r0
    9178:	00066003 	andeq	r6, r6, r3
    917c:	0b681900 	bleq	1a0f584 <_bss_end+0x19fd894>
    9180:	32050000 	andcc	r0, r5, #0
    9184:	00040211 	andeq	r0, r4, r1, lsl r2
    9188:	33d40f00 	bicscc	r0, r4, #0, 30
    918c:	06040000 	streq	r0, [r4], -r0
    9190:	07560705 	ldrbeq	r0, [r6, -r5, lsl #14]
    9194:	e0100000 	ands	r0, r0, r0
    9198:	06000032 			; <UNDEFINED> instruction: 0x06000032
    919c:	02b91c09 	adcseq	r1, r9, #2304	; 0x900
    91a0:	12000000 	andne	r0, r0, #0
    91a4:	00001a2e 	andeq	r1, r0, lr, lsr #20
    91a8:	f91c0c06 			; <UNDEFINED> instruction: 0xf91c0c06
    91ac:	ea00002f 	b	9270 <_ZN8CMonitor5ClearEv+0xa4>
    91b0:	02000003 	andeq	r0, r0, #3
    91b4:	000006aa 	andeq	r0, r0, sl, lsr #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:12
}
    91b8:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    91bc:	00075613 	andeq	r5, r7, r3, lsl r6
    91c0:	00e91400 	rsceq	r1, r9, r0, lsl #8
    91c4:	12000000 	andne	r0, r0, #0
    91c8:	000033d4 	ldrdeq	r3, [r0], -r4
_ZN8CMonitor5ClearEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:21
{
    91cc:	1e050f06 	cdpne	15, 0, cr0, cr5, cr6, {0}
    91d0:	56000035 			; <UNDEFINED> instruction: 0x56000035
    91d4:	01000007 	tsteq	r0, r7
    91d8:	000006ce 	andeq	r0, r0, lr, asr #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:22
    Reset_Cursor();
    91dc:	000006d9 	ldrdeq	r0, [r0], -r9
    91e0:	00075613 	andeq	r5, r7, r3, lsl r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24
    for (unsigned int y = 0; y < m_height; ++y)
    91e4:	027b1400 	rsbseq	r1, fp, #0, 8
    91e8:	15000000 	strne	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 1)
    91ec:	00003403 	andeq	r3, r0, r3, lsl #8
    91f0:	d80a1206 	stmdale	sl, {r1, r2, r9, ip}
    91f4:	01000034 	tsteq	r0, r4, lsr r0
    91f8:	000006ee 	andeq	r0, r0, lr, ror #13
    91fc:	000006f9 	strdeq	r0, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26
        for (unsigned int x = 0; x < m_width; ++x)
    9200:	00075613 	andeq	r5, r7, r3, lsl r6
    9204:	01381400 	teqeq	r8, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 3)
    9208:	15000000 	strne	r0, [r0, #-0]
    920c:	000036d1 	ldrdeq	r3, [r0], -r1
    9210:	680a1406 	stmdavs	sl, {r1, r2, sl, ip}
    9214:	0100002f 	tsteq	r0, pc, lsr #32
    9218:	0000070e 	andeq	r0, r0, lr, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:28 (discriminator 2)
            m_monitor[(y * m_width) + x] = ' ';
    921c:	00000719 	andeq	r0, r0, r9, lsl r7
    9220:	00075613 	andeq	r5, r7, r3, lsl r6
    9224:	01381400 	teqeq	r8, r0, lsl #8
    9228:	15000000 	strne	r0, [r0, #-0]
    922c:	000030b6 	strheq	r3, [r0], -r6
    9230:	2e0a1706 	cdpcs	7, 0, cr1, cr10, cr6, {0}
    9234:	0100002f 	tsteq	r0, pc, lsr #32
    9238:	0000072e 	andeq	r0, r0, lr, lsr #14
    923c:	00000739 	andeq	r0, r0, r9, lsr r7
    9240:	00075613 	andeq	r5, r7, r3, lsl r6
    9244:	017b1400 	cmneq	fp, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9248:	21000000 	mrscs	r0, (UNDEF: 0)
    924c:	00003378 	andeq	r3, r0, r8, ror r3
    9250:	fe0a1906 	vseleq.f16	s2, s20, s12
    9254:	01000032 	tsteq	r0, r2, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 2)
    for (unsigned int y = 0; y < m_height; ++y)
    9258:	0000074a 	andeq	r0, r0, sl, asr #14
    925c:	00075613 	andeq	r5, r7, r3, lsl r6
    9260:	017b1400 	cmneq	fp, r0, lsl #8
    9264:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:31
}
    9268:	0677040e 	ldrbteq	r0, [r7], -lr, lsl #8
    926c:	eb190000 	bl	649274 <_bss_end+0x637584>
    9270:	0600002f 	streq	r0, [r0], -pc, lsr #32
_ZN8CMonitor6ScrollEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:49
{
    9274:	06771e1c 			; <UNDEFINED> instruction: 0x06771e1c
    9278:	6d070000 	stcvs	0, cr0, [r7, #-0]
    927c:	07006d65 	streq	r6, [r0, -r5, ror #26]
    9280:	07c10b06 	strbeq	r0, [r1, r6, lsl #22]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50
    for (unsigned int y = 1; y < m_height; ++y)
    9284:	aa080000 	bge	20928c <_bss_end+0x1f759c>
    9288:	07000037 	smladxeq	r0, r7, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 1)
    928c:	006a180a 	rsbeq	r1, sl, sl, lsl #16
    9290:	00000000 	andeq	r0, r0, r0
    9294:	b4080002 	strlt	r0, [r8], #-2
    9298:	07000037 	smladxeq	r0, r7, r0, r0
    929c:	006a180e 	rsbeq	r1, sl, lr, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52
        for (unsigned int x = 0; x < m_width; ++x)
    92a0:	00000000 	andeq	r0, r0, r0
    92a4:	94222000 	strtls	r2, [r2], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 3)
    92a8:	07000037 	smladxeq	r0, r7, r0, r0
    92ac:	006a1811 	rsbeq	r1, sl, r1, lsl r8
    92b0:	40000000 	andmi	r0, r0, r0
    92b4:	00378308 	eorseq	r8, r7, r8, lsl #6
    92b8:	18140700 	ldmdane	r4, {r8, r9, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:54 (discriminator 2)
            m_monitor[((y - 1) * m_width) + x] = m_monitor[(y * m_width) + x];
    92bc:	0000006a 	andeq	r0, r0, sl, rrx
    92c0:	1ffe0000 	svcne	0x00fe0000
    92c4:	00377922 	eorseq	r7, r7, r2, lsr #18
    92c8:	18170700 	ldmdane	r7, {r8, r9, sl}
    92cc:	0000006a 	andeq	r0, r0, sl, rrx
    92d0:	0d007ff8 	stceq	15, cr7, [r0, #-992]	; 0xfffffc20
    92d4:	00000774 	andeq	r0, r0, r4, ror r7
    92d8:	0007840d 	andeq	r8, r7, sp, lsl #8
    92dc:	07940d00 	ldreq	r0, [r4, r0, lsl #26]
    92e0:	a20d0000 	andge	r0, sp, #0
    92e4:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    92e8:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    92ec:	0031e523 	eorseq	lr, r1, r3, lsr #10
    92f0:	14040800 	strne	r0, [r4], #-2048	; 0xfffff800
    92f4:	0000006a 	andeq	r0, r0, sl, rrx
    92f8:	04440305 	strbeq	r0, [r4], #-773	; 0xfffffcfb
    92fc:	d40a0001 	strle	r0, [sl], #-1
    9300:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
    9304:	00003804 	andeq	r3, r0, r4, lsl #16
    9308:	0c070800 	stceq	8, cr0, [r7], {-0}
    930c:	00000817 	andeq	r0, r0, r7, lsl r8
    9310:	77654e0c 	strbvc	r4, [r5, -ip, lsl #28]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9314:	cb0b0000 	blgt	2c931c <_bss_end+0x2b762c>
    9318:	01000032 	tsteq	r0, r2, lsr r0
    931c:	0019c30b 	andseq	ip, r9, fp, lsl #6
    9320:	fc0b0200 	stc2	2, cr0, [fp], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 2)
    for (unsigned int y = 1; y < m_height; ++y)
    9324:	03000033 	movweq	r0, #51	; 0x33
    9328:	31a81b00 			; <UNDEFINED> instruction: 0x31a81b00
    932c:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    9330:	08490816 	stmdaeq	r9, {r1, r2, r4, fp}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58
    for (unsigned int x = 0; x < m_width; ++x)
    9334:	6c1c0000 	ldcvs	0, cr0, [ip], {-0}
    9338:	18080072 	stmdane	r8, {r1, r4, r5, r6}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 3)
    933c:	00027b13 	andeq	r7, r2, r3, lsl fp
    9340:	731c0000 	tstvc	ip, #0
    9344:	19080070 	stmdbne	r8, {r4, r5, r6}
    9348:	00027b13 	andeq	r7, r2, r3, lsl fp
    934c:	701c0400 	andsvc	r0, ip, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:60 (discriminator 2)
        m_monitor[((m_height - 1) * m_width) + x] = ' ';
    9350:	1a080063 	bne	2094e4 <_bss_end+0x1f77f4>
    9354:	00027b13 	andeq	r7, r2, r3, lsl fp
    9358:	1b000800 	blne	b360 <_ZN15CShift_Register8Shift_InEb+0x118>
    935c:	00003592 	muleq	r0, r2, r5
    9360:	0822085c 	stmdaeq	r2!, {r2, r3, r4, r6, fp}
    9364:	000008a5 	andeq	r0, r0, r5, lsr #17
    9368:	00353d10 	eorseq	r3, r5, r0, lsl sp
    936c:	12240800 	eorne	r0, r4, #0, 16
    9370:	00000817 	andeq	r0, r0, r7, lsl r8
    9374:	69701c00 	ldmdbvs	r0!, {sl, fp, ip}^
    9378:	25080064 	strcs	r0, [r8, #-100]	; 0xffffff9c
    937c:	00006f12 	andeq	r6, r0, r2, lsl pc
    9380:	2c100c00 	ldccs	12, cr0, [r0], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 2)
    for (unsigned int x = 0; x < m_width; ++x)
    9384:	08000031 	stmdaeq	r0, {r0, r4, r5}
    9388:	07ec1126 	strbeq	r1, [ip, r6, lsr #2]!
    938c:	10100000 	andsne	r0, r0, r0
    9390:	000032f0 	strdeq	r3, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:62
}
    9394:	6f122708 	svcvs	0x00122708
    9398:	14000000 	strne	r0, [r0], #-0
    939c:	00333910 	eorseq	r3, r3, r0, lsl r9
    93a0:	12290800 	eorne	r0, r9, #0, 16
_ZN8CMonitorlsEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:70
{
    93a4:	0000006f 	andeq	r0, r0, pc, rrx
    93a8:	319b1018 	orrscc	r1, fp, r8, lsl r0
    93ac:	2a080000 	bcs	2093b4 <_bss_end+0x1f76c4>
    93b0:	0008a50c 	andeq	sl, r8, ip, lsl #10
    93b4:	24001c00 	strcs	r1, [r0], #-3072	; 0xfffff400
    93b8:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:71
    if (c != '\n')
    93bc:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
    93c0:	00006f25 	andeq	r6, r0, r5, lsr #30
    93c4:	0e000f00 	cdpeq	15, 0, cr0, cr0, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:73
        m_monitor[(m_cursor.y * m_width) + m_cursor.x] = static_cast<unsigned char>(c);
    93c8:	0008bb04 	andeq	fp, r8, r4, lsl #22
    93cc:	2bc82600 	blcs	ff212bd4 <_bss_end+0xff200ee4>
    93d0:	8f1b0000 	svchi	0x001b0000
    93d4:	08000031 	stmdaeq	r0, {r0, r4, r5}
    93d8:	e6080609 	str	r0, [r8], -r9, lsl #12
    93dc:	1c000008 	stcne	0, cr0, [r0], {8}
    93e0:	09003072 	stmdbeq	r0, {r1, r4, r5, r6, ip, sp}
    93e4:	005e0e08 	subseq	r0, lr, r8, lsl #28
    93e8:	1c000000 	stcne	0, cr0, [r0], {-0}
    93ec:	09003172 	stmdbeq	r0, {r1, r4, r5, r6, r8, ip, sp}
    93f0:	005e0e09 	subseq	r0, lr, r9, lsl #28
    93f4:	00040000 	andeq	r0, r4, r0
    93f8:	0031080a 	eorseq	r0, r1, sl, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:74
        ++m_cursor.x;
    93fc:	38040500 	stmdacc	r4, {r8, sl}
    9400:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9404:	08ff0c1e 	ldmeq	pc!, {r1, r2, r3, r4, sl, fp}^	; <UNPREDICTABLE>
    9408:	c90b0000 	stmdbgt	fp, {}	; <UNPREDICTABLE>
    940c:	00000036 	andeq	r0, r0, r6, lsr r0
    9410:	365f0a00 	ldrbcc	r0, [pc], -r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:78
        m_cursor.x = 0;
    9414:	04050000 	streq	r0, [r5], #-0
    9418:	00000038 	andeq	r0, r0, r8, lsr r0
    941c:	300c2609 	andcc	r2, ip, r9, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:79
        ++m_cursor.y;
    9420:	0b000009 	bleq	944c <_ZN8CMonitorlsEPKc>
    9424:	00000a20 	andeq	r0, r0, r0, lsr #20
    9428:	02d30b00 	sbcseq	r0, r3, #0, 22
    942c:	0b010000 	bleq	49434 <_bss_end+0x37744>
    9430:	00001ce0 	andeq	r1, r0, r0, ror #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:82
    Adjust_Cursor();
    9434:	09ad0b02 	stmibeq	sp!, {r1, r8, r9, fp}
    9438:	0b030000 	bleq	c9440 <_bss_end+0xb7750>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:84
    return *this;
    943c:	000024ea 	andeq	r2, r0, sl, ror #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:85
}
    9440:	44230004 	strtmi	r0, [r3], #-4
    9444:	0a00001c 	beq	94bc <_ZN8CMonitorlsEPKc+0x70>
    9448:	006a1a06 	rsbeq	r1, sl, r6, lsl #20
_ZN8CMonitorlsEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:88
{
    944c:	03050000 	movweq	r0, #20480	; 0x5000
    9450:	00010448 	andeq	r0, r1, r8, asr #8
    9454:	001c7523 	andseq	r7, ip, r3, lsr #10
    9458:	1a080a00 	bne	20bc60 <_bss_end+0x1f9f70>
    945c:	0000006a 	andeq	r0, r0, sl, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    9460:	044c0305 	strbeq	r0, [ip], #-773	; 0xfffffcfb
    9464:	93230001 			; <UNDEFINED> instruction: 0x93230001
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 3)
    9468:	0a00001d 	beq	94e4 <_ZN8CMonitorlsENS_12NNumber_BaseE+0x20>
    946c:	006a1a0a 	rsbeq	r1, sl, sl, lsl #20
    9470:	03050000 	movweq	r0, #20480	; 0x5000
    9474:	00010450 	andeq	r0, r1, r0, asr r4
    9478:	001b7923 	andseq	r7, fp, r3, lsr #18
    947c:	1a0c0a00 	bne	30bc84 <_bss_end+0x2f9f94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:91 (discriminator 2)
        *this << str[i];
    9480:	0000006a 	andeq	r0, r0, sl, rrx
    9484:	04540305 	ldrbeq	r0, [r4], #-773	; 0xfffffcfb
    9488:	320a0001 	andcc	r0, sl, #1
    948c:	05000024 	streq	r0, [r0, #-36]	; 0xffffffdc
    9490:	00003804 	andeq	r3, r0, r4, lsl #16
    9494:	0c0e0a00 			; <UNDEFINED> instruction: 0x0c0e0a00
    9498:	0000099d 	muleq	r0, sp, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 2)
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    949c:	001d370b 	andseq	r3, sp, fp, lsl #14
    94a0:	3d0b0000 	stccc	0, cr0, [fp, #-0]
    94a4:	0100001e 	tsteq	r0, lr, lsl r0
    94a8:	001cdb0b 	andseq	sp, ip, fp, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:94
    Reset_Number_Base();
    94ac:	0f000200 	svceq	0x00000200
    94b0:	00001c87 	andeq	r1, r0, r7, lsl #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:96
    return *this;
    94b4:	074c0a90 			; <UNDEFINED> instruction: 0x074c0a90
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:97
}
    94b8:	00000b0b 	andeq	r0, r0, fp, lsl #22
    94bc:	001c671b 	andseq	r6, ip, fp, lsl r7
    94c0:	500a2400 	andpl	r2, sl, r0, lsl #8
_ZN8CMonitorlsENS_12NNumber_BaseE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:100
{
    94c4:	000a250c 	andeq	r2, sl, ip, lsl #10
    94c8:	3eab1000 	cdpcc	0, 10, cr1, cr11, cr0, {0}
    94cc:	520a0000 	andpl	r0, sl, #0
    94d0:	000b0b0e 	andeq	r0, fp, lr, lsl #22
    94d4:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:101
    m_number_base = number_base;
    94d8:	0a00001c 	beq	9550 <_ZN8CMonitorlsEb+0x4>
    94dc:	02bf0e54 	adcseq	r0, pc, #84, 28	; 0x540
    94e0:	10100000 	andsne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:103
    return *this;
    94e4:	00001b8c 	andeq	r1, r0, ip, lsl #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:104
}
    94e8:	5e12560a 	cfmsub32pl	mvax0, mvfx5, mvfx2, mvfx10
    94ec:	14000000 	strne	r0, [r0], #-0
    94f0:	001c6010 	andseq	r6, ip, r0, lsl r0
    94f4:	18590a00 	ldmdane	r9, {r9, fp}^
_ZN8CMonitorlsEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:107
{
    94f8:	00000b1b 	andeq	r0, r0, fp, lsl fp
    94fc:	1c931018 	ldcne	0, cr1, [r3], {24}
    9500:	5b0a0000 	blpl	289508 <_bss_end+0x277818>
    9504:	000b1b18 	andeq	r1, fp, r8, lsl fp
    9508:	05101c00 	ldreq	r1, [r0, #-3072]	; 0xfffff400
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:112
    itoa(num, s_buffer, static_cast<unsigned int>(m_number_base));
    950c:	0a00000e 	beq	954c <_ZN8CMonitorlsEb>
    9510:	0b1b185e 	bleq	6cf690 <_bss_end+0x6bd9a0>
    9514:	27200000 	strcs	r0, [r0, -r0]!
    9518:	00001d11 	andeq	r1, r0, r1, lsl sp
    951c:	cf18600a 	svcgt	0x0018600a
    9520:	1b00001d 	blne	959c <_ZN8CMonitorlsEb+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:113
    *this << s_buffer;
    9524:	1900000b 	stmdbne	r0, {r0, r1, r3}
    9528:	1300000a 	movwne	r0, #10
    952c:	00000b1b 	andeq	r0, r0, fp, lsl fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:114
    Reset_Number_Base();
    9530:	00064314 	andeq	r4, r6, r4, lsl r3
    9534:	1b000000 	blne	953c <_ZN8CMonitorlsEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:116
    return *this;
    9538:	00001cd0 	ldrdeq	r1, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:117
}
    953c:	0c640a18 			; <UNDEFINED> instruction: 0x0c640a18
    9540:	00000a5a 	andeq	r0, r0, sl, asr sl
    9544:	003eab10 	eorseq	sl, lr, r0, lsl fp
    9548:	0e670a00 	vmuleq.f32	s1, s14, s0
_ZN8CMonitorlsEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:120
{
    954c:	00000b0b 	andeq	r0, r0, fp, lsl #22
    9550:	1bb61000 	blne	fed8d558 <_bss_end+0xfed7b868>
    9554:	690a0000 	stmdbvs	sl, {}	; <UNPREDICTABLE>
    9558:	00064315 	andeq	r4, r6, r5, lsl r3
    955c:	26101000 	ldrcs	r1, [r0], -r0
    9560:	0a00001d 	beq	95dc <_ZN8CMonitor4itoaEjPcj+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:121
    if (value)
    9564:	0b261d6b 	bleq	990b18 <_bss_end+0x97ee28>
    9568:	00140000 	andseq	r0, r4, r0
    956c:	000a2503 	andeq	r2, sl, r3, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:123
        *this << "true";
    9570:	1bcc2800 	blne	ff313578 <_bss_end+0xff301888>
    9574:	6f0a0000 	svcvs	0x000a0000
    9578:	000b2c1d 	andeq	r2, fp, sp, lsl ip
    957c:	1b672800 	blne	19d3584 <_bss_end+0x19c1894>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:127
        *this << "false";
    9580:	710a0000 	mrsvc	r0, (UNDEF: 10)
    9584:	00006a1b 	andeq	r6, r0, fp, lsl sl
    9588:	1da11000 	stcne	0, cr1, [r1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:130
    Reset_Number_Base();
    958c:	740a0000 	strvc	r0, [sl], #-0
    9590:	0009aa13 	andeq	sl, r9, r3, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:132
    return *this;
    9594:	97100000 	ldrls	r0, [r0, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:133
}
    9598:	0a00001b 	beq	960c <_ZN8CMonitor4itoaEjPcj+0x60>
    959c:	09aa1377 	stmibeq	sl!, {r0, r1, r2, r4, r5, r6, r8, r9, ip}
    95a0:	10240000 	eorne	r0, r4, r0
    95a4:	00001d2d 	andeq	r1, r0, sp, lsr #26
    95a8:	aa13780a 	bge	4e75d8 <_bss_end+0x4d58e8>
_ZN8CMonitor4itoaEjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:136
{
    95ac:	48000009 	stmdami	r0, {r0, r3}
    95b0:	001d1c10 	andseq	r1, sp, r0, lsl ip
    95b4:	13790a00 	cmnne	r9, #0, 20
    95b8:	000009aa 	andeq	r0, r0, sl, lsr #19
    95bc:	1c87126c 	sfmne	f1, 4, [r7], {108}	; 0x6c
    95c0:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    95c4:	001dff05 	andseq	pc, sp, r5, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:137
    int i = 0;
    95c8:	000b3700 	andeq	r3, fp, r0, lsl #14
    95cc:	0ac40100 	beq	ff1099d4 <_bss_end+0xff0f7ce4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    95d0:	0aca0000 	beq	ff2895d8 <_bss_end+0xff2778e8>
    95d4:	37130000 	ldrcc	r0, [r3, -r0]
    95d8:	0000000b 	andeq	r0, r0, fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:141
        output[i] = CharConvArr[input % base];
    95dc:	001bc115 	andseq	ip, fp, r5, lsl r1
    95e0:	0a7f0a00 	beq	1fcbde8 <_bss_end+0x1fba0f8>
    95e4:	00001e48 	andeq	r1, r0, r8, asr #28
    95e8:	000adf01 	andeq	sp, sl, r1, lsl #30
    95ec:	000ae500 	andeq	lr, sl, r0, lsl #10
    95f0:	0b371300 	bleq	dce1f8 <_bss_end+0xdbc508>
    95f4:	16000000 	strne	r0, [r0], -r0
    95f8:	00000a20 	andeq	r0, r0, r0, lsr #20
    95fc:	e60c820a 	str	r8, [ip], -sl, lsl #4
    9600:	b500001c 	strlt	r0, [r0, #-28]	; 0xffffffe4
    9604:	01000008 	tsteq	r0, r8
    9608:	00000afa 	strdeq	r0, [r0], -sl
    960c:	000b3713 	andeq	r3, fp, r3, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:142
        input /= base;
    9610:	06431400 	strbeq	r1, [r3], -r0, lsl #8
    9614:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    9618:	00000009 	andeq	r0, r0, r9
    961c:	00252400 	eoreq	r2, r5, r0, lsl #8
    9620:	0b1b0000 	bleq	6c9628 <_bss_end+0x6b7938>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:144
        i++;
    9624:	6f250000 	svcvs	0x00250000
    9628:	0f000000 	svceq	0x00000000
    962c:	aa040e00 	bge	10ce34 <_bss_end+0xfb144>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    9630:	26000009 	strcs	r0, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:147
    if (i == 0)
    9634:	000029e1 	andeq	r2, r0, r1, ror #19
    9638:	0b21040e 	bleq	84a678 <_bss_end+0x838988>
    963c:	5a240000 	bpl	909644 <_bss_end+0x8f7954>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:149
        output[i] = CharConvArr[0];
    9640:	3700000a 	strcc	r0, [r0, -sl]
    9644:	2900000b 	stmdbcs	r0, {r0, r1, r3}
    9648:	9d040e00 	stcls	14, cr0, [r4, #-0]
    964c:	19000009 	stmdbne	r0, {r0, r3}
    9650:	00001be7 	andeq	r1, r0, r7, ror #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:150
        i++;
    9654:	9d14850a 	cfldr32ls	mvfx8, [r4, #-40]	; 0xffffffd8
    9658:	23000009 	movwcs	r0, #9
    965c:	00003690 	muleq	r0, r0, r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:153
    output[i] = '\0';
    9660:	6a140a0b 	bvs	50be94 <_bss_end+0x4fa1a4>
    9664:	05000000 	streq	r0, [r0, #-0]
    9668:	01045803 	tsteq	r4, r3, lsl #16
    966c:	35cb1b00 	strbcc	r1, [fp, #2816]	; 0xb00
    9670:	0b0c0000 	bleq	309678 <_bss_end+0x2f7988>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:154
    i--;
    9674:	0b90080d 	bleq	fe40b6b0 <_bss_end+0xfe3f99c0>
    9678:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
    967c:	0b00000d 	bleq	96b8 <_ZN8CMonitor4itoaEjPcj+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156
    for (int j = 0; j <= (i / 2); j++)
    9680:	0b90190f 	bleq	fe40fac4 <_bss_end+0xfe3fddd4>
    9684:	10000000 	andne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 3)
    9688:	00000e05 	andeq	r0, r0, r5, lsl #28
    968c:	9019100b 	andsls	r1, r9, fp
    9690:	0400000b 	streq	r0, [r0], #-11
    9694:	00358110 	eorseq	r8, r5, r0, lsl r1
    9698:	13110b00 	tstne	r1, #0, 22
    969c:	00000b96 	muleq	r0, r6, fp
    96a0:	040e0008 	streq	r0, [lr], #-8
    96a4:	00000b5b 	andeq	r0, r0, fp, asr fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:158 (discriminator 2)
        char c = output[i - j];
    96a8:	0849040e 	stmdaeq	r9, {r1, r2, r3, sl}^
    96ac:	320f0000 	andcc	r0, pc, #0
    96b0:	0c000031 	stceq	0, cr0, [r0], {49}	; 0x31
    96b4:	3407140b 	strcc	r1, [r7], #-1035	; 0xfffffbf5
    96b8:	1000000d 	andne	r0, r0, sp
    96bc:	000033ca 	andeq	r3, r0, sl, asr #7
    96c0:	5e0e180b 	cdppl	8, 0, cr1, cr14, cr11, {0}
    96c4:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:159 (discriminator 2)
        output[i - j] = output[j];
    96c8:	00305f10 	eorseq	r5, r0, r0, lsl pc
    96cc:	191b0b00 	ldmdbne	fp, {r8, r9, fp}
    96d0:	00000b90 	muleq	r0, r0, fp
    96d4:	34c51004 	strbcc	r1, [r5], #4
    96d8:	1e0b0000 	cdpne	0, 0, cr0, cr11, cr0, {0}
    96dc:	000b9019 	andeq	r9, fp, r9, lsl r0
    96e0:	55200800 	strpl	r0, [r0, #-2048]!	; 0xfffff800
    96e4:	0b000036 	bleq	97c4 <_ZN8CMonitor12Reset_CursorEv+0x28>
    96e8:	35a80a21 	strcc	r0, [r8, #2593]!	; 0xa21
    96ec:	0be40000 	bleq	ff9096f4 <_bss_end+0xff8f7a04>
    96f0:	0bef0000 	bleq	ffbc96f8 <_bss_end+0xffbb7a08>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:160 (discriminator 2)
        output[j] = c;
    96f4:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
    96f8:	1400000d 	strne	r0, [r0], #-13
    96fc:	00000b90 	muleq	r0, r0, fp
    9700:	31321200 	teqcc	r2, r0, lsl #4
    9704:	240b0000 	strcs	r0, [fp], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 2)
    for (int j = 0; j <= (i / 2); j++)
    9708:	0036e305 	eorseq	lr, r6, r5, lsl #6
    970c:	000d3900 	andeq	r3, sp, r0, lsl #18
    9710:	0c080100 	stfeqs	f0, [r8], {-0}
    9714:	0c0e0000 	stceq	0, cr0, [lr], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    9718:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
    971c:	0000000d 	andeq	r0, r0, sp
    9720:	00364115 	eorseq	r4, r6, r5, lsl r1
    9724:	0a270b00 	beq	9cc32c <_bss_end+0x9ba63c>
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9728:	00002faf 	andeq	r2, r0, pc, lsr #31
    972c:	000c2301 	andeq	r2, ip, r1, lsl #6
    9730:	000c2900 	andeq	r2, ip, r0, lsl #18
    9734:	0d391300 	ldceq	3, cr1, [r9, #-0]
    9738:	12000000 	andne	r0, r0, #0
    973c:	0000311d 	andeq	r3, r0, sp, lsl r1
    9740:	e00e2a0b 	and	r2, lr, fp, lsl #20
    9744:	5e000030 	mcrpl	0, 0, r0, cr0, cr0, {1}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162 (discriminator 1)
    9748:	01000000 	mrseq	r0, (UNDEF: 0)
    974c:	00000c42 	andeq	r0, r0, r2, asr #24
    9750:	00000c4d 	andeq	r0, r0, sp, asr #24
    9754:	000d3913 	andeq	r3, sp, r3, lsl r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:3
CMonitor sMonitor{ 0x30000000, 80, 25 };
    9758:	027b1400 	rsbseq	r1, fp, #0, 8
    975c:	15000000 	strne	r0, [r0, #-0]
    9760:	0000359f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    9764:	140a2e0b 	strne	r2, [sl], #-3595	; 0xfffff1f5
    9768:	01000034 	tsteq	r0, r4, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    976c:	00000c62 	andeq	r0, r0, r2, ror #24
    9770:	00000c68 	andeq	r0, r0, r8, ror #24
    9774:	000d3913 	andeq	r3, sp, r3, lsl r9
    9778:	48120000 	ldmdami	r2, {}	; <UNPREDICTABLE>
    977c:	0b000032 	bleq	984c <_ZN8CMonitor13Adjust_CursorEv+0x78>
_GLOBAL__sub_I_sMonitor():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9780:	30721331 	rsbscc	r1, r2, r1, lsr r3
    9784:	0b960000 	bleq	fe58978c <_bss_end+0xfe577a9c>
    9788:	81010000 	mrshi	r0, (UNDEF: 1)
    978c:	8700000c 	strhi	r0, [r0, -ip]
    9790:	1300000c 	movwne	r0, #12
    9794:	00000d3f 	andeq	r0, r0, pc, lsr sp
    9798:	325c1200 	subscc	r1, ip, #0, 4
_ZN8CMonitor12Reset_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:15
{
    979c:	340b0000 	strcc	r0, [fp], #-0
    97a0:	0033840e 	eorseq	r8, r3, lr, lsl #8
    97a4:	00005e00 	andeq	r5, r0, r0, lsl #28
    97a8:	0ca00100 	stfeqs	f0, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:16
    m_cursor.y = 0;
    97ac:	0cab0000 	stceq	0, cr0, [fp]
    97b0:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
    97b4:	1400000d 	strne	r0, [r0], #-13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:17
    m_cursor.y = 0;
    97b8:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
    97bc:	303a1200 	eorscc	r1, sl, r0, lsl #4
    97c0:	370b0000 	strcc	r0, [fp, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:18
}
    97c4:	0031fe0a 	eorseq	pc, r1, sl, lsl #28
    97c8:	0002bf00 	andeq	fp, r2, r0, lsl #30
    97cc:	0cc40100 	stfeqe	f0, [r4], {0}
    97d0:	0ccf0000 	stcleq	0, cr0, [pc], {0}
_ZN8CMonitor13Adjust_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:34
{
    97d4:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
    97d8:	1400000d 	strne	r0, [r0], #-13
    97dc:	0000005e 	andeq	r0, r0, lr, asr r0
    97e0:	32791500 	rsbscc	r1, r9, #0, 10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:35
    if (m_cursor.x >= m_width)
    97e4:	3a0b0000 	bcc	2c97ec <_bss_end+0x2b7afc>
    97e8:	0035ef0a 	eorseq	lr, r5, sl, lsl #30
    97ec:	0ce40100 	stfeqe	f0, [r4]
    97f0:	0d030000 	stceq	0, cr0, [r3, #-0]
    97f4:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
    97f8:	1400000d 	strne	r0, [r0], #-13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:37
        m_cursor.x = 0;
    97fc:	000008e6 	andeq	r0, r0, r6, ror #17
    9800:	00005e14 	andeq	r5, r0, r4, lsl lr
    9804:	005e1400 	subseq	r1, lr, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:38
        ++m_cursor.y;
    9808:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
    980c:	14000000 	strne	r0, [r0], #-0
    9810:	00000d45 	andeq	r0, r0, r5, asr #26
    9814:	30a02100 	adccc	r2, r0, r0, lsl #2
    9818:	3d0b0000 	stccc	0, cr0, [fp, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:41
    if (m_cursor.y >= m_height)
    981c:	00314305 	eorseq	r4, r1, r5, lsl #6
    9820:	0d140100 	ldfeqs	f0, [r4, #-0]
    9824:	39130000 	ldmdbcc	r3, {}	; <UNPREDICTABLE>
    9828:	1400000d 	strne	r0, [r0], #-13
    982c:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    9830:	00005e14 	andeq	r5, r0, r4, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:43
        Scroll();
    9834:	005e1400 	subseq	r1, lr, r0, lsl #8
    9838:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:44
        m_cursor.y = m_height - 1;
    983c:	14000000 	strne	r0, [r0], #-0
    9840:	00000d45 	andeq	r0, r0, r5, asr #26
    9844:	9c030000 	stcls	0, cr0, [r3], {-0}
    9848:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    984c:	000b9c04 	andeq	r9, fp, r4, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:46
}
    9850:	34040e00 	strcc	r0, [r4], #-3584	; 0xfffff200
    9854:	1800000d 	stmdane	r0, {r0, r2, r3}
    9858:	0008c004 	andeq	ip, r8, r4
_ZN8CMonitor17Reset_Number_BaseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:65
{
    985c:	3a211900 	bcc	84fc64 <_bss_end+0x83df74>
    9860:	400b0000 	andmi	r0, fp, r0
    9864:	000b9c19 	andeq	r9, fp, r9, lsl ip
    9868:	379d2a00 	ldrcc	r2, [sp, r0, lsl #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:66
    m_number_base = DEFAULT_NUMBER_BASE;
    986c:	22010000 	andcs	r0, r1, #0
    9870:	00003810 	andeq	r3, r0, r0, lsl r8
    9874:	00d85c00 	sbcseq	r5, r8, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:67
}
    9878:	00008c00 	andeq	r8, r0, r0, lsl #24
    987c:	2b9c0100 	blcs	fe709c84 <_bss_end+0xfe6f7f94>
    9880:	000019ed 	andeq	r1, r0, sp, ror #19
    9884:	40111501 	andsmi	r1, r1, r1, lsl #10
_ZN16CDisplay_SSD1306C2ER4CI2C():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:9
CDisplay_SSD1306::CDisplay_SSD1306(CI2C& i2c)
    9888:	1c0000d8 	stcne	0, cr0, [r0], {216}	; 0xd8
    988c:	01000000 	mrseq	r0, (UNDEF: 0)
    9890:	04f7009c 	ldrbteq	r0, [r7], #156	; 0x9c
    9894:	00040000 	andeq	r0, r4, r0
    9898:	0000253a 	andeq	r2, r0, sl, lsr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:10
    : mI2C(i2c), mOpened(false), mBuffer(nullptr), mWidth(0), mHeight(0)
    989c:	00140104 	andseq	r0, r4, r4, lsl #2
    98a0:	7c040000 	stcvc	0, cr0, [r4], {-0}
    98a4:	c5000038 	strgt	r0, [r0, #-56]	; 0xffffffc8
    98a8:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    98ac:	6c0000d8 	stcvs	0, cr0, [r0], {216}	; 0xd8
    98b0:	92000003 	andls	r0, r0, #3
    98b4:	02000032 	andeq	r0, r0, #50	; 0x32
    98b8:	05730801 	ldrbeq	r0, [r3, #-2049]!	; 0xfffff7ff
    98bc:	02020000 	andeq	r0, r2, #0
    98c0:	00059905 	andeq	r9, r5, r5, lsl #18
    98c4:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    98c8:	00746e69 	rsbseq	r6, r4, r9, ror #28
    98cc:	00098204 	andeq	r8, r9, r4, lsl #4
    98d0:	07070200 	streq	r0, [r7, -r0, lsl #4]
    98d4:	00000046 	andeq	r0, r0, r6, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:13
}
    98d8:	6a080102 	bvs	209ce8 <_bss_end+0x1f7ff8>
    98dc:	02000005 	andeq	r0, r0, #5
    98e0:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
    98e4:	e4040000 	str	r0, [r4], #-0
    98e8:	02000005 	andeq	r0, r0, #5
_ZN16CDisplay_SSD13064OpenEii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:16
{
    98ec:	00650709 	rsbeq	r0, r5, r9, lsl #14
    98f0:	54050000 	strpl	r0, [r5], #-0
    98f4:	02000000 	andeq	r0, r0, #0
    98f8:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
    98fc:	65050000 	strvs	r0, [r5, #-0]
    9900:	06000000 	streq	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:17
    if (!mI2C.Open())
    9904:	000013be 			; <UNDEFINED> instruction: 0x000013be
    9908:	08080310 	stmdaeq	r8, {r4, r8, r9}
    990c:	000000b3 	strheq	r0, [r0], -r3
    9910:	000d0807 	andeq	r0, sp, r7, lsl #16
    9914:	200a0300 	andcs	r0, sl, r0, lsl #6
    9918:	000000b3 	strheq	r0, [r0], -r3
    991c:	0e050700 	cdpeq	7, 0, cr0, cr5, cr0, {0}
    9920:	0b030000 	bleq	c9928 <_bss_end+0xb7c38>
    9924:	0000b320 	andeq	fp, r0, r0, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:18
        return false;
    9928:	52070400 	andpl	r0, r7, #0, 8
    992c:	0300000e 	movweq	r0, #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:20
    mOpened = true;
    9930:	00540e0c 	subseq	r0, r4, ip, lsl #28
    9934:	07080000 	streq	r0, [r8, -r0]
    9938:	00000ea6 	andeq	r0, r0, r6, lsr #29
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:23
    if (height % 8 != 0)
    993c:	b90a0d03 	stmdblt	sl, {r0, r1, r8, sl, fp}
    9940:	0c000000 	stceq	0, cr0, [r0], {-0}
    9944:	71040800 	tstvc	r4, r0, lsl #16
    9948:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:24
        height += 8 - (height % 8);
    994c:	45480201 	strbmi	r0, [r8, #-513]	; 0xfffffdff
    9950:	0a090000 	beq	249958 <_bss_end+0x237c68>
    9954:	0400000e 	streq	r0, [r0], #-14
    9958:	58071003 	stmdapl	r7, {r0, r1, ip}
    995c:	07000001 	streq	r0, [r0, -r1]
    9960:	00001344 	andeq	r1, r0, r4, asr #6
    9964:	b3201303 			; <UNDEFINED> instruction: 0xb3201303
    9968:	00000000 	andeq	r0, r0, r0
    996c:	0013850a 	andseq	r8, r3, sl, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:26
    mWidth = width;
    9970:	20150300 	andscs	r0, r5, r0, lsl #6
    9974:	00000d0d 	andeq	r0, r0, sp, lsl #26
    9978:	000000b3 	strheq	r0, [r0], -r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:27
    mHeight = height;
    997c:	000000f2 	strdeq	r0, [r0], -r2
    9980:	000000f8 	strdeq	r0, [r0], -r8
    9984:	0001580b 	andeq	r5, r1, fp, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:32
    mBuffer = new uint8_t[mWidth * mHeight / 8];
    9988:	0a0c0000 	beq	309990 <_bss_end+0x2f7ca0>
    998c:	0300000e 	movweq	r0, #14
    9990:	13260518 			; <UNDEFINED> instruction: 0x13260518
    9994:	01580000 	cmpeq	r8, r0
    9998:	11010000 	mrsne	r0, (UNDEF: 1)
    999c:	17000001 	strne	r0, [r0, -r1]
    99a0:	0b000001 	bleq	99ac <_ZN16CDisplay_SSD13064OpenEii+0xc0>
    99a4:	00000158 	andeq	r0, r0, r8, asr r1
    99a8:	0ee50c00 	cdpeq	12, 14, cr0, cr5, cr0, {0}
    99ac:	1a030000 	bne	c99b4 <_bss_end+0xb7cc4>
    99b0:	0011ba0b 	andseq	fp, r1, fp, lsl #20
    99b4:	00016300 	andeq	r6, r1, r0, lsl #6
    99b8:	01300100 	teqeq	r0, r0, lsl #2
    99bc:	013b0000 	teqeq	fp, r0
    99c0:	580b0000 	stmdapl	fp, {}	; <UNPREDICTABLE>
    99c4:	0d000001 	stceq	0, cr0, [r0, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:36
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    99c8:	00000054 	andeq	r0, r0, r4, asr r0
    99cc:	13ac0e00 			; <UNDEFINED> instruction: 0x13ac0e00
    99d0:	1b030000 	blne	c99d8 <_bss_end+0xb7ce8>
    99d4:	0010d30a 	andseq	sp, r0, sl, lsl #6
    99d8:	014c0100 	mrseq	r0, (UNDEF: 92)
    99dc:	580b0000 	stmdapl	fp, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:38
        ta << SSD1306_Cmd::Command_Start
    99e0:	0d000001 	stceq	0, cr0, [r0, #-4]
    99e4:	00000163 	andeq	r0, r0, r3, ror #2
    99e8:	04080000 	streq	r0, [r8], #-0
    99ec:	000000c0 	andeq	r0, r0, r0, asr #1
    99f0:	00015805 	andeq	r5, r1, r5, lsl #16
    99f4:	10040f00 	andne	r0, r4, r0, lsl #30
    99f8:	000037fa 	strdeq	r3, [r0], -sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:39
            << SSD1306_Cmd::Display_Off
    99fc:	c01d2403 	andsgt	r2, sp, r3, lsl #8
    9a00:	11000000 	mrsne	r0, (UNDEF: 0)
    9a04:	006c6168 	rsbeq	r6, ip, r8, ror #2
    9a08:	2b0b0504 	blcs	2cae20 <_bss_end+0x2b9130>
    9a0c:	12000002 	andne	r0, r0, #2
    9a10:	00000487 	andeq	r0, r0, r7, lsl #9
    9a14:	6c1c0704 	ldcvs	7, cr0, [ip], {4}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:40
            << SSD1306_Cmd::Set_Display_Clock_Div_Ratio
    9a18:	80000000 	andhi	r0, r0, r0
    9a1c:	120ee6b2 	andne	lr, lr, #186646528	; 0xb200000
    9a20:	000005cc 	andeq	r0, r0, ip, asr #11
    9a24:	371d0a04 	ldrcc	r0, [sp, -r4, lsl #20]
    9a28:	00000002 	andeq	r0, r0, r2
    9a2c:	12200000 	eorne	r0, r0, #0
    9a30:	00000452 	andeq	r0, r0, r2, asr r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:41
            << 0x80
    9a34:	371d0d04 	ldrcc	r0, [sp, -r4, lsl #26]
    9a38:	00000002 	andeq	r0, r0, r2
    9a3c:	13202000 	nopne	{0}	; <UNPREDICTABLE>
    9a40:	0000058a 	andeq	r0, r0, sl, lsl #11
    9a44:	60181004 	andsvs	r1, r8, r4
    9a48:	36000000 	strcc	r0, [r0], -r0
    9a4c:	00037312 	andeq	r7, r3, r2, lsl r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:42
            << SSD1306_Cmd::Set_Multiplex_Ratio;
    9a50:	1d420400 	cfstrdne	mvd0, [r2, #-0]
    9a54:	00000237 	andeq	r0, r0, r7, lsr r2
    9a58:	20215000 	eorcs	r5, r1, r0
    9a5c:	00034a12 	andeq	r4, r3, r2, lsl sl
    9a60:	1d710400 	cfldrdne	mvd0, [r1, #-0]
    9a64:	00000237 	andeq	r0, r0, r7, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:44
        mI2C.End_Transaction(ta);
    9a68:	2000b200 	andcs	fp, r0, r0, lsl #4
    9a6c:	0002b612 	andeq	fp, r2, r2, lsl r6
    9a70:	1da40400 	cfstrsne	mvf0, [r4]
    9a74:	00000237 	andeq	r0, r0, r7, lsr r2
    9a78:	2000b400 	andcs	fp, r0, r0, lsl #8
    9a7c:	00036412 	andeq	r6, r3, r2, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:49
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9a80:	1db30400 	cfldrsne	mvf0, [r3]
    9a84:	00000237 	andeq	r0, r0, r7, lsr r2
    9a88:	20104000 	andscs	r4, r0, r0
    9a8c:	00033112 	andeq	r3, r3, r2, lsl r1
    9a90:	1dbe0400 	cfldrsne	mvf0, [lr]
    9a94:	00000237 	andeq	r0, r0, r7, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:51
        ta << SSD1306_Cmd::Command_Start
    9a98:	20205000 	eorcs	r5, r0, r0
    9a9c:	0003ef12 	andeq	lr, r3, r2, lsl pc
    9aa0:	1dbf0400 	cfldrsne	mvf0, [pc]	; 9aa8 <_ZN16CDisplay_SSD13064OpenEii+0x1bc>
    9aa4:	00000237 	andeq	r0, r0, r7, lsr r2
    9aa8:	20804000 	addcs	r4, r0, r0
    9aac:	00045c12 	andeq	r5, r4, r2, lsl ip
    9ab0:	1dc00400 	cfstrdne	mvd0, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:52
            << height - 1;
    9ab4:	00000237 	andeq	r0, r0, r7, lsr r2
    9ab8:	20805000 	addcs	r5, r0, r0
    9abc:	017d1400 	cmneq	sp, r0, lsl #8
    9ac0:	04020000 	streq	r0, [r2], #-0
    9ac4:	00458c07 	subeq	r8, r5, r7, lsl #24
    9ac8:	02300500 	eorseq	r0, r0, #0, 10
    9acc:	8d140000 	ldchi	0, cr0, [r4, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:54
        mI2C.End_Transaction(ta);
    9ad0:	14000001 	strne	r0, [r0], #-1
    9ad4:	0000019d 	muleq	r0, sp, r1
    9ad8:	0001ad14 	andeq	sl, r1, r4, lsl sp
    9adc:	01ba1400 			; <UNDEFINED> instruction: 0x01ba1400
    9ae0:	ca140000 	bgt	509ae8 <_bss_end+0x4f7df8>
    9ae4:	14000001 	strne	r0, [r0], #-1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:59
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ae8:	000001da 	ldrdeq	r0, [r0], -sl
    9aec:	0001ea14 	andeq	lr, r1, r4, lsl sl
    9af0:	01fa1400 	mvnseq	r1, r0, lsl #8
    9af4:	0a140000 	beq	509afc <_bss_end+0x4f7e0c>
    9af8:	14000002 	strne	r0, [r0], #-2
    9afc:	0000021a 	andeq	r0, r0, sl, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:61
        ta << SSD1306_Cmd::Command_Start
    9b00:	6d656d11 	stclvs	13, cr6, [r5, #-68]!	; 0xffffffbc
    9b04:	0b060500 	bleq	18af0c <_bss_end+0x17921c>
    9b08:	000002c7 	andeq	r0, r0, r7, asr #5
    9b0c:	0037aa12 	eorseq	sl, r7, r2, lsl sl
    9b10:	180a0500 	stmdane	sl, {r8, sl}
    9b14:	00000060 	andeq	r0, r0, r0, rrx
    9b18:	00020000 	andeq	r0, r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:62
            << SSD1306_Cmd::Set_Display_Offset
    9b1c:	0037b412 	eorseq	fp, r7, r2, lsl r4
    9b20:	180e0500 	stmdane	lr, {r8, sl}
    9b24:	00000060 	andeq	r0, r0, r0, rrx
    9b28:	20000000 	andcs	r0, r0, r0
    9b2c:	00379415 	eorseq	r9, r7, r5, lsl r4
    9b30:	18110500 	ldmdane	r1, {r8, sl}
    9b34:	00000060 	andeq	r0, r0, r0, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:63
            << 0x00
    9b38:	83124000 	tsthi	r2, #0
    9b3c:	05000037 	streq	r0, [r0, #-55]	; 0xffffffc9
    9b40:	00601814 	rsbeq	r1, r0, r4, lsl r8
    9b44:	00000000 	andeq	r0, r0, r0
    9b48:	79151ffe 	ldmdbvc	r5, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9b4c:	05000037 	streq	r0, [r0, #-55]	; 0xffffffc9
    9b50:	00601817 	rsbeq	r1, r0, r7, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:64
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Start_Line) | 0x00) // zacatek na radce 0
    9b54:	7ff80000 	svcvc	0x00f80000
    9b58:	027a1400 	rsbseq	r1, sl, #0, 8
    9b5c:	8a140000 	bhi	509b64 <_bss_end+0x4f7e74>
    9b60:	14000002 	strne	r0, [r0], #-2
    9b64:	0000029a 	muleq	r0, sl, r2
    9b68:	0002a814 	andeq	sl, r2, r4, lsl r8
    9b6c:	02b81400 	adcseq	r1, r8, #0, 8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:65
            << SSD1306_Cmd::Charge_Pump;
    9b70:	f2160000 	vhadd.s16	d0, d6, d0
    9b74:	ff000038 			; <UNDEFINED> instruction: 0xff000038
    9b78:	0709060f 	streq	r0, [r9, -pc, lsl #12]
    9b7c:	0000037a 	andeq	r0, r0, sl, ror r3
    9b80:	0037de07 	eorseq	sp, r7, r7, lsl #28
    9b84:	0d0c0600 	stceq	6, cr0, [ip, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:67
        mI2C.End_Transaction(ta);
    9b88:	0000037a 	andeq	r0, r0, sl, ror r3
    9b8c:	37d91700 	ldrbcc	r1, [r9, r0, lsl #14]
    9b90:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    9b94:	00384a0a 	eorseq	r4, r8, sl, lsl #20
    9b98:	00030f00 	andeq	r0, r3, r0, lsl #30
    9b9c:	00031f00 	andeq	r1, r3, r0, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:72
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ba0:	038b0b00 	orreq	r0, fp, #0, 22
    9ba4:	540d0000 	strpl	r0, [sp], #-0
    9ba8:	0d000000 	stceq	0, cr0, [r0, #-0]
    9bac:	000000b9 	strheq	r0, [r0], -r9
    9bb0:	38f20c00 	ldmcc	r2!, {sl, fp}^
    9bb4:	11060000 	mrsne	r0, (UNDEF: 6)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:74
        ta << SSD1306_Cmd::Command_Start
    9bb8:	00386505 	eorseq	r6, r8, r5, lsl #10
    9bbc:	00038b00 	andeq	r8, r3, r0, lsl #22
    9bc0:	03380100 	teqeq	r8, #0, 2
    9bc4:	033e0000 	teqeq	lr, #0
    9bc8:	8b0b0000 	blhi	2c9bd0 <_bss_end+0x2b7ee0>
    9bcc:	00000003 	andeq	r0, r0, r3
    9bd0:	0037c40c 	eorseq	ip, r7, ip, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:75
            << 0x14;
    9bd4:	0e140600 	cfmsub32eq	mvax0, mvfx0, mvfx4, mvfx0
    9bd8:	0000380b 	andeq	r3, r0, fp, lsl #16
    9bdc:	00000054 	andeq	r0, r0, r4, asr r0
    9be0:	00035701 	andeq	r5, r3, r1, lsl #14
    9be4:	00035d00 	andeq	r5, r3, r0, lsl #26
    9be8:	038b0b00 	orreq	r0, fp, #0, 22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:77
        mI2C.End_Transaction(ta);
    9bec:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    9bf0:	000037cf 	andeq	r3, r0, pc, asr #15
    9bf4:	d30a1606 	movwle	r1, #42502	; 0xa606
    9bf8:	01000038 	tsteq	r0, r8, lsr r0
    9bfc:	0000036e 	andeq	r0, r0, lr, ror #6
    9c00:	00038b0b 	andeq	r8, r3, fp, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:83
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9c04:	00540d00 	subseq	r0, r4, r0, lsl #26
    9c08:	00000000 	andeq	r0, r0, r0
    9c0c:	00003a18 	andeq	r3, r0, r8, lsl sl
    9c10:	00038b00 	andeq	r8, r3, r0, lsl #22
    9c14:	00651900 	rsbeq	r1, r5, r0, lsl #18
    9c18:	0ffe0000 	svceq	0x00fe0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:85
        ta << SSD1306_Cmd::Command_Start
    9c1c:	e0040800 	and	r0, r4, r0, lsl #16
    9c20:	10000002 	andne	r0, r0, r2
    9c24:	00003918 	andeq	r3, r0, r8, lsl r9
    9c28:	e0161906 	ands	r1, r6, r6, lsl #18
    9c2c:	1a000002 	bne	9c3c <_ZN16CDisplay_SSD13064OpenEii+0x350>
    9c30:	00000165 	andeq	r0, r0, r5, ror #2
    9c34:	05160401 	ldreq	r0, [r6, #-1025]	; 0xfffffbff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:86
            << SSD1306_Cmd::Memory_Addr_Mode
    9c38:	010cd003 	tsteq	ip, r3
    9c3c:	37eb1b00 	strbcc	r1, [fp, r0, lsl #22]!
    9c40:	dc380000 	ldcle	0, cr0, [r8], #-0
    9c44:	001c0000 	andseq	r0, ip, r0
    9c48:	9c010000 	stcls	0, cr0, [r1], {-0}
    9c4c:	0002411c 	andeq	r4, r2, ip, lsl r1
    9c50:	00dbec00 	sbcseq	lr, fp, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:87
            << 0x00
    9c54:	00004c00 	andeq	r4, r0, r0, lsl #24
    9c58:	ec9c0100 	ldfs	f0, [ip], {0}
    9c5c:	1d000003 	stcne	0, cr0, [r0, #-12]
    9c60:	0000033b 	andeq	r0, r0, fp, lsr r3
    9c64:	33015f01 	movwcc	r5, #7937	; 0x1f01
    9c68:	02000000 	andeq	r0, r0, #0
    9c6c:	341d7491 	ldrcc	r7, [sp], #-1169	; 0xfffffb6f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:88
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Segment_Remap) | 0x01)
    9c70:	01000007 	tsteq	r0, r7
    9c74:	0033015f 	eorseq	r0, r3, pc, asr r1
    9c78:	91020000 	mrsls	r0, (UNDEF: 2)
    9c7c:	3b1e0070 	blcc	789e44 <_bss_end+0x778154>
    9c80:	01000001 	tsteq	r0, r1
    9c84:	04060649 	streq	r0, [r6], #-1609	; 0xfffff9b7
    9c88:	dad00000 	ble	ff409c90 <_bss_end+0xff3f7fa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:89
            << SSD1306_Cmd::Com_Scan_Dir_Dec;
    9c8c:	011c0000 	tsteq	ip, r0
    9c90:	9c010000 	stcls	0, cr0, [r1], {-0}
    9c94:	00000431 	andeq	r0, r0, r1, lsr r4
    9c98:	00032c1f 	andeq	r2, r3, pc, lsl ip
    9c9c:	00015e00 	andeq	r5, r1, r0, lsl #28
    9ca0:	6c910200 	lfmvs	f0, 4, [r1], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:91
        mI2C.End_Transaction(ta);
    9ca4:	6d656d20 	stclvs	13, cr6, [r5, #-128]!	; 0xffffff80
    9ca8:	27490100 	strbcs	r0, [r9, -r0, lsl #2]
    9cac:	00000163 	andeq	r0, r0, r3, ror #2
    9cb0:	21689102 	cmncs	r8, r2, lsl #2
    9cb4:	00003805 	andeq	r3, r0, r5, lsl #16
    9cb8:	b3204b01 			; <UNDEFINED> instruction: 0xb3204b01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:96
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9cbc:	02000000 	andeq	r0, r0, #0
    9cc0:	22007491 	andcs	r7, r0, #-1862270976	; 0x91000000
    9cc4:	00000117 	andeq	r0, r0, r7, lsl r1
    9cc8:	63071901 	movwvs	r1, #30977	; 0x7901
    9ccc:	4f000001 	svcmi	0x00000001
    9cd0:	84000004 	strhi	r0, [r0], #-4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:98
        ta << SSD1306_Cmd::Command_Start
    9cd4:	4c0000d9 	stcmi	0, cr0, [r0], {217}	; 0xd9
    9cd8:	01000001 	tsteq	r0, r1
    9cdc:	0004899c 	muleq	r4, ip, r9
    9ce0:	032c1f00 			; <UNDEFINED> instruction: 0x032c1f00
    9ce4:	015e0000 	cmpeq	lr, r0
    9ce8:	91020000 	mrsls	r0, (UNDEF: 2)
    9cec:	0e521d6c 	cdpeq	13, 5, cr1, cr2, cr12, {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:99
            << SSD1306_Cmd::Set_Com_Pins;
    9cf0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    9cf4:	0000542c 	andeq	r5, r0, ip, lsr #8
    9cf8:	68910200 	ldmvs	r1, {r9}
    9cfc:	00380521 	eorseq	r0, r8, r1, lsr #10
    9d00:	201b0100 	andscs	r0, fp, r0, lsl #2
    9d04:	000000b3 	strheq	r0, [r0], -r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:101
        mI2C.End_Transaction(ta);
    9d08:	21749102 	cmncs	r4, r2, lsl #2
    9d0c:	000037bf 			; <UNDEFINED> instruction: 0x000037bf
    9d10:	b3203801 			; <UNDEFINED> instruction: 0xb3203801
    9d14:	02000000 	andeq	r0, r0, #0
    9d18:	23007091 	movwcs	r7, #145	; 0x91
    9d1c:	000000da 	ldrdeq	r0, [r0], -sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:106
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d20:	a31c0d01 	tstge	ip, #1, 26	; 0x40
    9d24:	1c000004 	stcne	0, cr0, [r0], {4}
    9d28:	680000d9 	stmdavs	r0, {r0, r3, r4, r6, r7}
    9d2c:	01000000 	mrseq	r0, (UNDEF: 0)
    9d30:	0004bf9c 	muleq	r4, ip, pc	; <UNPREDICTABLE>
    9d34:	032c1f00 			; <UNDEFINED> instruction: 0x032c1f00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:108
        ta << SSD1306_Cmd::Command_Start
    9d38:	015e0000 	cmpeq	lr, r0
    9d3c:	91020000 	mrsls	r0, (UNDEF: 2)
    9d40:	3805216c 	stmdacc	r5, {r2, r3, r5, r6, r8, sp}
    9d44:	0f010000 	svceq	0x00010000
    9d48:	0000b320 	andeq	fp, r0, r0, lsr #6
    9d4c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    9d50:	00f82400 	rscseq	r2, r8, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:109
            << 0x02;
    9d54:	06010000 	streq	r0, [r1], -r0
    9d58:	0004d001 	andeq	sp, r4, r1
    9d5c:	04da0000 	ldrbeq	r0, [sl], #0
    9d60:	2c250000 	stccs	0, cr0, [r5], #-0
    9d64:	5e000003 	cdppl	0, 0, cr0, cr0, cr3, {0}
    9d68:	00000001 	andeq	r0, r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:111
        mI2C.End_Transaction(ta);
    9d6c:	0004bf26 	andeq	fp, r4, r6, lsr #30
    9d70:	00382c00 	eorseq	r2, r8, r0, lsl #24
    9d74:	0004f100 	andeq	pc, r4, r0, lsl #2
    9d78:	00d8e800 	sbcseq	lr, r8, r0, lsl #16
    9d7c:	00003400 	andeq	r3, r0, r0, lsl #8
    9d80:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:116
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d84:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    9d88:	00749102 	rsbseq	r9, r4, r2, lsl #2
    9d8c:	00043400 	andeq	r3, r4, r0, lsl #8
    9d90:	ba000400 	blt	ad98 <_ZN16CSegment_Display4OpenEv+0x40>
    9d94:	04000027 	streq	r0, [r0], #-39	; 0xffffffd9
    9d98:	00001401 	andeq	r1, r0, r1, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:118
        ta << SSD1306_Cmd::Command_Start
    9d9c:	39260400 	stmdbcc	r6!, {sl}
    9da0:	00c50000 	sbceq	r0, r5, r0
    9da4:	dc540000 	mrale	r0, r4, acc0
    9da8:	02a40000 	adceq	r0, r4, #0
    9dac:	35220000 	strcc	r0, [r2, #-0]!
    9db0:	01020000 	mrseq	r0, (UNDEF: 2)
    9db4:	00057308 	andeq	r7, r5, r8, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:119
            << SSD1306_Cmd::Set_Contrast;
    9db8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    9dbc:	00000599 	muleq	r0, r9, r5
    9dc0:	69050403 	stmdbvs	r5, {r0, r1, sl}
    9dc4:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    9dc8:	00000982 	andeq	r0, r0, r2, lsl #19
    9dcc:	46070702 	strmi	r0, [r7], -r2, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:121
        mI2C.End_Transaction(ta);
    9dd0:	02000000 	andeq	r0, r0, #0
    9dd4:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    9dd8:	02020000 	andeq	r0, r2, #0
    9ddc:	0003dc07 	andeq	sp, r3, r7, lsl #24
    9de0:	05e40400 	strbeq	r0, [r4, #1024]!	; 0x400
    9de4:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:126
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9de8:	00006507 	andeq	r6, r0, r7, lsl #10
    9dec:	00540500 	subseq	r0, r4, r0, lsl #10
    9df0:	04020000 	streq	r0, [r2], #-0
    9df4:	00459107 	subeq	r9, r5, r7, lsl #2
    9df8:	00650500 	rsbeq	r0, r5, r0, lsl #10
    9dfc:	68060000 	stmdavs	r6, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:128
        ta << SSD1306_Cmd::Command_Start
    9e00:	03006c61 	movweq	r6, #3169	; 0xc61
    9e04:	012b0b05 			; <UNDEFINED> instruction: 0x012b0b05
    9e08:	87070000 	strhi	r0, [r7, -r0]
    9e0c:	03000004 	movweq	r0, #4
    9e10:	006c1c07 	rsbeq	r1, ip, r7, lsl #24
    9e14:	b2800000 	addlt	r0, r0, #0
    9e18:	cc070ee6 	stcgt	14, cr0, [r7], {230}	; 0xe6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:129
            << 0x8F;
    9e1c:	03000005 	movweq	r0, #5
    9e20:	01371d0a 	teqeq	r7, sl, lsl #26
    9e24:	00000000 	andeq	r0, r0, r0
    9e28:	52072000 	andpl	r2, r7, #0
    9e2c:	03000004 	movweq	r0, #4
    9e30:	01371d0d 	teqeq	r7, sp, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:131
        mI2C.End_Transaction(ta);
    9e34:	00000000 	andeq	r0, r0, r0
    9e38:	8a082020 	bhi	211ec0 <_bss_end+0x2001d0>
    9e3c:	03000005 	movweq	r0, #5
    9e40:	00601810 	rsbeq	r1, r0, r0, lsl r8
    9e44:	07360000 	ldreq	r0, [r6, -r0]!
    9e48:	00000373 	andeq	r0, r0, r3, ror r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:136
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9e4c:	371d4203 	ldrcc	r4, [sp, -r3, lsl #4]
    9e50:	00000001 	andeq	r0, r0, r1
    9e54:	07202150 			; <UNDEFINED> instruction: 0x07202150
    9e58:	0000034a 	andeq	r0, r0, sl, asr #6
    9e5c:	371d7103 	ldrcc	r7, [sp, -r3, lsl #2]
    9e60:	00000001 	andeq	r0, r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:138
        ta << SSD1306_Cmd::Command_Start
    9e64:	072000b2 			; <UNDEFINED> instruction: 0x072000b2
    9e68:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    9e6c:	371da403 	ldrcc	sl, [sp, -r3, lsl #8]
    9e70:	00000001 	andeq	r0, r0, r1
    9e74:	072000b4 			; <UNDEFINED> instruction: 0x072000b4
    9e78:	00000364 	andeq	r0, r0, r4, ror #6
    9e7c:	371db303 	ldrcc	fp, [sp, -r3, lsl #6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:139
            << SSD1306_Cmd::Set_Precharge_Period;
    9e80:	00000001 	andeq	r0, r0, r1
    9e84:	07201040 	streq	r1, [r0, -r0, asr #32]!
    9e88:	00000331 	andeq	r0, r0, r1, lsr r3
    9e8c:	371dbe03 	ldrcc	fp, [sp, -r3, lsl #28]
    9e90:	00000001 	andeq	r0, r0, r1
    9e94:	07202050 			; <UNDEFINED> instruction: 0x07202050
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:141
        mI2C.End_Transaction(ta);
    9e98:	000003ef 	andeq	r0, r0, pc, ror #7
    9e9c:	371dbf03 	ldrcc	fp, [sp, -r3, lsl #30]
    9ea0:	00000001 	andeq	r0, r0, r1
    9ea4:	07208040 	streq	r8, [r0, -r0, asr #32]!
    9ea8:	0000045c 	andeq	r0, r0, ip, asr r4
    9eac:	371dc003 	ldrcc	ip, [sp, -r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:146
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9eb0:	00000001 	andeq	r0, r0, r1
    9eb4:	00208050 	eoreq	r8, r0, r0, asr r0
    9eb8:	00007d09 	andeq	r7, r0, r9, lsl #26
    9ebc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    9ec0:	0000458c 	andeq	r4, r0, ip, lsl #11
    9ec4:	00013005 	andeq	r3, r1, r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:148
        ta << SSD1306_Cmd::Command_Start
    9ec8:	008d0900 	addeq	r0, sp, r0, lsl #18
    9ecc:	9d090000 	stcls	0, cr0, [r9, #-0]
    9ed0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9ed4:	000000ad 	andeq	r0, r0, sp, lsr #1
    9ed8:	0000ba09 	andeq	fp, r0, r9, lsl #20
    9edc:	00ca0900 	sbceq	r0, sl, r0, lsl #18
    9ee0:	da090000 	ble	249ee8 <_bss_end+0x2381f8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:149
            << 0xF1;
    9ee4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9ee8:	000000ea 	andeq	r0, r0, sl, ror #1
    9eec:	0000fa09 	andeq	pc, r0, r9, lsl #20
    9ef0:	010a0900 	tsteq	sl, r0, lsl #18
    9ef4:	1a090000 	bne	249efc <_bss_end+0x23820c>
    9ef8:	06000001 	streq	r0, [r0], -r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:151
        mI2C.End_Transaction(ta);
    9efc:	006d656d 	rsbeq	r6, sp, sp, ror #10
    9f00:	c70b0604 	strgt	r0, [fp, -r4, lsl #12]
    9f04:	07000001 	streq	r0, [r0, -r1]
    9f08:	000037aa 	andeq	r3, r0, sl, lsr #15
    9f0c:	60180a04 	andsvs	r0, r8, r4, lsl #20
    9f10:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:156
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9f14:	07000200 	streq	r0, [r0, -r0, lsl #4]
    9f18:	000037b4 			; <UNDEFINED> instruction: 0x000037b4
    9f1c:	60180e04 	andsvs	r0, r8, r4, lsl #28
    9f20:	00000000 	andeq	r0, r0, r0
    9f24:	0a200000 	beq	809f2c <_bss_end+0x7f823c>
    9f28:	00003794 	muleq	r0, r4, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:158
        ta << SSD1306_Cmd::Command_Start
    9f2c:	60181104 	andsvs	r1, r8, r4, lsl #2
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	37830740 	strcc	r0, [r3, r0, asr #14]
    9f38:	14040000 	strne	r0, [r4], #-0
    9f3c:	00006018 	andeq	r6, r0, r8, lsl r0
    9f40:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    9f44:	37790a1f 			; <UNDEFINED> instruction: 0x37790a1f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:159
            << SSD1306_Cmd::Set_VCOM_Detect
    9f48:	17040000 	strne	r0, [r4, -r0]
    9f4c:	00006018 	andeq	r6, r0, r8, lsl r0
    9f50:	007ff800 	rsbseq	pc, pc, r0, lsl #16
    9f54:	00017a09 	andeq	r7, r1, r9, lsl #20
    9f58:	018a0900 	orreq	r0, sl, r0, lsl #18
    9f5c:	9a090000 	bls	249f64 <_bss_end+0x238274>
    9f60:	09000001 	stmdbeq	r0, {r0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:160
            << 0x40
    9f64:	000001a8 	andeq	r0, r0, r8, lsr #3
    9f68:	0001b809 	andeq	fp, r1, r9, lsl #16
    9f6c:	38f20b00 	ldmcc	r2!, {r8, r9, fp}^
    9f70:	0fff0000 	svceq	0x00ff0000
    9f74:	7a070905 	bvc	1cc390 <_bss_end+0x1ba6a0>
    9f78:	0c000002 	stceq	0, cr0, [r0], {2}
    9f7c:	000037de 	ldrdeq	r3, [r0], -lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:161
            << SSD1306_Cmd::Display_All_On_Resume
    9f80:	7a0d0c05 	bvc	34cf9c <_bss_end+0x33b2ac>
    9f84:	00000002 	andeq	r0, r0, r2
    9f88:	0037d90d 	eorseq	sp, r7, sp, lsl #18
    9f8c:	0a0e0500 	beq	38b394 <_bss_end+0x3796a4>
    9f90:	0000384a 	andeq	r3, r0, sl, asr #16
    9f94:	0000020f 	andeq	r0, r0, pc, lsl #4
    9f98:	0000021f 	andeq	r0, r0, pc, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:162
            << SSD1306_Cmd::Normal_Display
    9f9c:	00028b0e 	andeq	r8, r2, lr, lsl #22
    9fa0:	00540f00 	subseq	r0, r4, r0, lsl #30
    9fa4:	960f0000 	strls	r0, [pc], -r0
    9fa8:	00000002 	andeq	r0, r0, r2
    9fac:	0038f210 	eorseq	pc, r8, r0, lsl r2	; <UNPREDICTABLE>
    9fb0:	05110500 	ldreq	r0, [r1, #-1280]	; 0xfffffb00
    9fb4:	00003865 	andeq	r3, r0, r5, ror #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:163
            << SSD1306_Cmd::Deactivate_Scroll
    9fb8:	0000028b 	andeq	r0, r0, fp, lsl #5
    9fbc:	00023801 	andeq	r3, r2, r1, lsl #16
    9fc0:	00023e00 	andeq	r3, r2, r0, lsl #28
    9fc4:	028b0e00 	addeq	r0, fp, #0, 28
    9fc8:	10000000 	andne	r0, r0, r0
    9fcc:	000037c4 	andeq	r3, r0, r4, asr #15
    9fd0:	0b0e1405 	bleq	38efec <_bss_end+0x37d2fc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:164
            << SSD1306_Cmd::Display_On;
    9fd4:	54000038 	strpl	r0, [r0], #-56	; 0xffffffc8
    9fd8:	01000000 	mrseq	r0, (UNDEF: 0)
    9fdc:	00000257 	andeq	r0, r0, r7, asr r2
    9fe0:	0000025d 	andeq	r0, r0, sp, asr r2
    9fe4:	00028b0e 	andeq	r8, r2, lr, lsl #22
    9fe8:	cf110000 	svcgt	0x00110000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:166
        mI2C.End_Transaction(ta);
    9fec:	05000037 	streq	r0, [r0, #-55]	; 0xffffffc9
    9ff0:	38d30a16 	ldmcc	r3, {r1, r2, r4, r9, fp}^
    9ff4:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    9ff8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    9ffc:	0000028b 	andeq	r0, r0, fp, lsl #5
    a000:	0000540f 	andeq	r5, r0, pc, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:169
    Clear();
    a004:	12000000 	andne	r0, r0, #0
    a008:	0000003a 	andeq	r0, r0, sl, lsr r0
    a00c:	0000028b 	andeq	r0, r0, fp, lsl #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:171
    return true;
    a010:	00006513 	andeq	r6, r0, r3, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:172
}
    a014:	000ffe00 	andeq	pc, pc, r0, lsl #28
    a018:	01e00414 	mvneq	r0, r4, lsl r4
    a01c:	8b050000 	blhi	14a024 <_bss_end+0x138334>
_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:175
{
    a020:	02000002 	andeq	r0, r0, #2
    a024:	45480201 	strbmi	r0, [r8, #-513]	; 0xfffffdff
    a028:	18150000 	ldmdane	r5, {}	; <UNPREDICTABLE>
    a02c:	05000039 	streq	r0, [r0, #-57]	; 0xffffffc7
    a030:	01e01619 	mvneq	r1, r9, lsl r6
    a034:	9d160000 	ldcls	0, cr0, [r6, #-0]
    a038:	01000002 	tsteq	r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:176
    auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a03c:	03050f03 	movweq	r0, #24323	; 0x5f03
    a040:	00010cd4 	ldrdeq	r0, [r1], -r4
    a044:	00390917 	eorseq	r0, r9, r7, lsl r9
    a048:	00dedc00 	sbcseq	sp, lr, r0, lsl #24
    a04c:	00001c00 	andeq	r1, r0, r0, lsl #24
    a050:	189c0100 	ldmne	ip, {r8}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:178
    ta << SSD1306_Cmd::Command_Start
    a054:	00000241 	andeq	r0, r0, r1, asr #4
    a058:	0000de90 	muleq	r0, r0, lr
    a05c:	0000004c 	andeq	r0, r0, ip, asr #32
    a060:	02f89c01 	rscseq	r9, r8, #256	; 0x100
    a064:	3b190000 	blcc	64a06c <_bss_end+0x63837c>
    a068:	01000003 	tsteq	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:179
       << (static_cast<uint8_t>(cmd) | lowPart);
    a06c:	00330139 	eorseq	r0, r3, r9, lsr r1
    a070:	91020000 	mrsls	r0, (UNDEF: 2)
    a074:	07341974 			; <UNDEFINED> instruction: 0x07341974
    a078:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    a07c:	00003301 	andeq	r3, r0, r1, lsl #6
    a080:	70910200 	addsvc	r0, r1, r0, lsl #4
    a084:	025d1a00 	subseq	r1, sp, #0, 20
    a088:	34010000 	strcc	r0, [r1], #-0
    a08c:	00031206 	andeq	r1, r3, r6, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:181
    mI2C.End_Transaction(ta);
    a090:	00de5800 	sbcseq	r5, lr, r0, lsl #16
    a094:	00003800 	andeq	r3, r0, r0, lsl #16
    a098:	2d9c0100 	ldfcss	f0, [ip]
    a09c:	1b000003 	blne	a0b0 <_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh+0x90>
    a0a0:	0000032c 	andeq	r0, r0, ip, lsr #6
    a0a4:	00000291 	muleq	r0, r1, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:182
}
    a0a8:	1c749102 	ldfnep	f1, [r4], #-8
    a0ac:	01006166 	tsteq	r0, r6, ror #2
    a0b0:	00542834 	subseq	r2, r4, r4, lsr r8
_ZN16CDisplay_SSD13065CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:185
{
    a0b4:	91020000 	mrsls	r0, (UNDEF: 2)
    a0b8:	3e1a0070 	mrccc	0, 0, r0, cr10, cr0, {3}
    a0bc:	01000002 	tsteq	r0, r2
    a0c0:	03470a16 	movteq	r0, #31254	; 0x7a16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:186
    if (!mOpened)
    a0c4:	dd740000 	ldclle	0, cr0, [r4, #-0]
    a0c8:	00e40000 	rsceq	r0, r4, r0
    a0cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    a0d0:	00000387 	andeq	r0, r0, r7, lsl #7
    a0d4:	00032c1b 	andeq	r2, r3, fp, lsl ip
    a0d8:	00029100 	andeq	r9, r2, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:191
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a0dc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    a0e0:	0100691d 	tsteq	r0, sp, lsl r9
    a0e4:	00540e1b 	subseq	r0, r4, fp, lsl lr
    a0e8:	91020000 	mrsls	r0, (UNDEF: 2)
    a0ec:	006a1d74 	rsbeq	r1, sl, r4, ror sp
    a0f0:	54111b01 	ldrpl	r1, [r1], #-2817	; 0xfffff4ff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:193
        ta << SSD1306_Cmd::Command_Start
    a0f4:	02000000 	andeq	r0, r0, #0
    a0f8:	f01e7091 			; <UNDEFINED> instruction: 0xf01e7091
    a0fc:	340000dd 	strcc	r0, [r0], #-221	; 0xffffff23
    a100:	1f000000 	svcne	0x00000000
    a104:	00003900 	andeq	r3, r0, r0, lsl #18
    a108:	60242901 	eorvs	r2, r4, r1, lsl #18
    a10c:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:194
            << SSD1306_Cmd::Display_Off;
    a110:	00006c91 	muleq	r0, r1, ip
    a114:	0001fb20 	andeq	pc, r1, r0, lsr #22
    a118:	a0060100 	andge	r0, r6, r0, lsl #2
    a11c:	b8000003 	stmdalt	r0, {r0, r1}
    a120:	bc0000dc 	stclt	0, cr0, [r0], {220}	; 0xdc
    a124:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:196
        mI2C.End_Transaction(ta);
    a128:	0003cb9c 	muleq	r3, ip, fp
    a12c:	032c1b00 			; <UNDEFINED> instruction: 0x032c1b00
    a130:	02910000 	addseq	r0, r1, #0
    a134:	91020000 	mrsls	r0, (UNDEF: 2)
    a138:	39001974 	stmdbcc	r0, {r2, r4, r5, r6, r8, fp, ip}
    a13c:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199
    mI2C.Close();
    a140:	00005423 	andeq	r5, r0, r3, lsr #8
    a144:	70910200 	addsvc	r0, r1, r0, lsl #4
    a148:	00397719 	eorseq	r7, r9, r9, lsl r7
    a14c:	320e0100 	andcc	r0, lr, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201
    delete mBuffer;
    a150:	00000296 	muleq	r0, r6, r2
    a154:	006f9102 	rsbeq	r9, pc, r2, lsl #2
    a158:	00021f21 	andeq	r1, r2, r1, lsr #30
    a15c:	01050100 	mrseq	r0, (UNDEF: 21)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201 (discriminator 1)
    a160:	000003dc 	ldrdeq	r0, [r0], -ip
    a164:	0003f200 	andeq	pc, r3, r0, lsl #4
    a168:	032c2200 			; <UNDEFINED> instruction: 0x032c2200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203
    mOpened = false;
    a16c:	02910000 	addseq	r0, r1, #0
    a170:	24230000 	strtcs	r0, [r3], #-0
    a174:	08010069 	stmdaeq	r1, {r0, r3, r5, r6}
    a178:	0000330e 	andeq	r3, r0, lr, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:187
        return;
    a17c:	25000000 	strcs	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:204
}
    a180:	000003cb 	andeq	r0, r0, fp, asr #7
    a184:	0000397c 	andeq	r3, r0, ip, ror r9
_ZNK16CDisplay_SSD13069Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:207
{
    a188:	00000409 	andeq	r0, r0, r9, lsl #8
    a18c:	0000dc54 	andeq	sp, r0, r4, asr ip
    a190:	00000064 	andeq	r0, r0, r4, rrx
    a194:	dc269c01 	stcle	12, cr9, [r6], #-4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:208
    return mOpened;
    a198:	02000003 	andeq	r0, r0, #3
    a19c:	e5276c91 	str	r6, [r7, #-3217]!	; 0xfffff36f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:209
}
    a1a0:	20000003 	andcs	r0, r0, r3
    a1a4:	28000004 	stmdacs	r0, {r2}
    a1a8:	000003e6 	andeq	r0, r0, r6, ror #7
    a1ac:	03e52900 	mvneq	r2, #0, 18
_ZN16CDisplay_SSD13065ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:212
{
    a1b0:	dc640000 	stclle	0, cr0, [r4], #-0
    a1b4:	003c0000 	eorseq	r0, ip, r0
    a1b8:	e62a0000 	strt	r0, [sl], -r0
    a1bc:	02000003 	andeq	r0, r0, #3
    a1c0:	00007491 	muleq	r0, r1, r4
    a1c4:	00111000 	andseq	r1, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:213
    if (!mOpened)
    a1c8:	2c000400 	cfstrscs	mvf0, [r0], {-0}
    a1cc:	0400002a 	streq	r0, [r0], #-42	; 0xffffffd6
    a1d0:	00001401 	andeq	r1, r0, r1, lsl #8
    a1d4:	3a340400 	bcc	d0b1dc <_bss_end+0xcf94ec>
    a1d8:	00c50000 	sbceq	r0, r5, r0
    a1dc:	02f80000 	rscseq	r0, r8, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216
    const uint8_t clearColor = clearWhite ? 0xFF : 0x00;
    a1e0:	00000000 	andeq	r0, r0, r0
    a1e4:	37270000 	strcc	r0, [r7, -r0]!
    a1e8:	01020000 	mrseq	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 1)
    a1ec:	00057308 	andeq	r7, r5, r8, lsl #6
    a1f0:	00250300 	eoreq	r0, r5, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 2)
    a1f4:	02020000 	andeq	r0, r2, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 4)
    a1f8:	00059905 	andeq	r9, r5, r5, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:218 (discriminator 4)
    const int maxIdx = mWidth * (mHeight / 8);
    a1fc:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    a200:	00746e69 	rsbseq	r6, r4, r9, ror #28
    a204:	00098205 	andeq	r8, r9, r5, lsl #4
    a208:	07070300 	streq	r0, [r7, -r0, lsl #6]
    a20c:	0000004b 	andeq	r0, r0, fp, asr #32
    a210:	6a080102 	bvs	20a620 <_bss_end+0x1f8930>
    a214:	06000005 	streq	r0, [r0], -r5
    a218:	0000004b 	andeq	r0, r0, fp, asr #32
    a21c:	dc070202 	sfmle	f0, 4, [r7], {2}
    a220:	05000003 	streq	r0, [r0, #-3]
    a224:	000005e4 	andeq	r0, r0, r4, ror #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 4)
    for (int i = 0; i < maxIdx; i++)
    a228:	6f070903 	svcvs	0x00070903
    a22c:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 3)
    a230:	0000005e 	andeq	r0, r0, lr, asr r0
    a234:	91070402 	tstls	r7, r2, lsl #8
    a238:	03000045 	movweq	r0, #69	; 0x45
    a23c:	0000006f 	andeq	r0, r0, pc, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:221 (discriminator 2)
        mBuffer[i] = clearColor;
    a240:	0031e507 	eorseq	lr, r1, r7, lsl #10
    a244:	14040400 	strne	r0, [r4], #-1024	; 0xfffffc00
    a248:	0000006a 	andeq	r0, r0, sl, rrx
    a24c:	04dc0305 	ldrbeq	r0, [ip], #773	; 0x305
    a250:	d4080001 	strle	r0, [r8], #-1
    a254:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 2)
    for (int i = 0; i < maxIdx; i++)
    a258:	00003804 	andeq	r3, r0, r4, lsl #16
    a25c:	0c070400 	cfstrseq	mvf0, [r7], {-0}
    a260:	000000b8 	strheq	r0, [r0], -r8
    a264:	77654e09 	strbvc	r4, [r5, -r9, lsl #28]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:223
    Flip();
    a268:	cb0a0000 	blgt	28a270 <_bss_end+0x278580>
    a26c:	01000032 	tsteq	r0, r2, lsr r0
    a270:	0019c30a 	andseq	ip, r9, sl, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:214
        return;
    a274:	fc0a0200 	stc2	2, cr0, [sl], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:224
}
    a278:	03000033 	movweq	r0, #51	; 0x33
    a27c:	31a80b00 			; <UNDEFINED> instruction: 0x31a80b00
_ZN16CDisplay_SSD13069Set_PixelEjjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:227
{
    a280:	040c0000 	streq	r0, [ip], #-0
    a284:	00ea0816 	rsceq	r0, sl, r6, lsl r8
    a288:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    a28c:	18040072 	stmdane	r4, {r1, r4, r5, r6}
    a290:	0000ea13 	andeq	lr, r0, r3, lsl sl
    a294:	730c0000 	movwvc	r0, #49152	; 0xc000
    a298:	19040070 	stmdbne	r4, {r4, r5, r6}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:228
    if (!mOpened)
    a29c:	0000ea13 	andeq	lr, r0, r3, lsl sl
    a2a0:	700c0400 	andvc	r0, ip, r0, lsl #8
    a2a4:	1a040063 	bne	10a438 <_bss_end+0xf8748>
    a2a8:	0000ea13 	andeq	lr, r0, r3, lsl sl
    a2ac:	02000800 	andeq	r0, r0, #0, 16
    a2b0:	458c0704 	strmi	r0, [ip, #1796]	; 0x704
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:231
    if (set)
    a2b4:	ea030000 	b	ca2bc <_bss_end+0xb85cc>
    a2b8:	0b000000 	bleq	a2c0 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x40>
    a2bc:	00003592 	muleq	r0, r2, r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:232
        mBuffer[x + (y / 8) * mWidth] |= (1 << (y & 7));
    a2c0:	0822045c 	stmdaeq	r2!, {r2, r3, r4, r6, sl}
    a2c4:	00000152 	andeq	r0, r0, r2, asr r1
    a2c8:	00353d0d 	eorseq	r3, r5, sp, lsl #26
    a2cc:	12240400 	eorne	r0, r4, #0, 8
    a2d0:	000000b8 	strheq	r0, [r0], -r8
    a2d4:	69700c00 	ldmdbvs	r0!, {sl, fp}^
    a2d8:	25040064 	strcs	r0, [r4, #-100]	; 0xffffff9c
    a2dc:	00006f12 	andeq	r6, r0, r2, lsl pc
    a2e0:	2c0d0c00 	stccs	12, cr0, [sp], {-0}
    a2e4:	04000031 	streq	r0, [r0], #-49	; 0xffffffcf
    a2e8:	008d1126 	addeq	r1, sp, r6, lsr #2
    a2ec:	0d100000 	ldceq	0, cr0, [r0, #-0]
    a2f0:	000032f0 	strdeq	r3, [r0], -r0
    a2f4:	6f122704 	svcvs	0x00122704
    a2f8:	14000000 	strne	r0, [r0], #-0
    a2fc:	0033390d 	eorseq	r3, r3, sp, lsl #18
    a300:	12290400 	eorne	r0, r9, #0, 8
    a304:	0000006f 	andeq	r0, r0, pc, rrx
    a308:	319b0d18 	orrscc	r0, fp, r8, lsl sp
    a30c:	2a040000 	bcs	10a314 <_bss_end+0xf8624>
    a310:	0001520c 	andeq	r5, r1, ip, lsl #4
    a314:	0e001c00 	cdpeq	12, 0, cr1, cr0, cr0, {0}
    a318:	00000162 	andeq	r0, r0, r2, ror #2
    a31c:	00000162 	andeq	r0, r0, r2, ror #2
    a320:	00006f0f 	andeq	r6, r0, pc, lsl #30
    a324:	10000f00 	andne	r0, r0, r0, lsl #30
    a328:	00016804 	andeq	r6, r1, r4, lsl #16
    a32c:	2bc81100 	blcs	ff20e734 <_bss_end+0xff1fca44>
    a330:	05040000 	streq	r0, [r4, #-0]
    a334:	01680724 	cmneq	r8, r4, lsr #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:234
        mBuffer[x + (y / 8) * mWidth] &= ~(1 << (y & 7));
    a338:	02650000 	rsbeq	r0, r5, #0
    a33c:	c2120000 	andsgt	r0, r2, #0
    a340:	1f00002b 	svcne	0x0000002b
    a344:	0000000d 	andeq	r0, r0, sp
    a348:	29201301 	stmdbcs	r0!, {r0, r8, r9, ip}
    a34c:	27050000 	strcs	r0, [r5, -r0]
    a350:	0020170d 	eoreq	r1, r0, sp, lsl #14
    a354:	000ad800 	andeq	sp, sl, r0, lsl #16
    a358:	01680100 	cmneq	r8, r0, lsl #2
    a35c:	01010000 	mrseq	r0, (UNDEF: 1)
    a360:	000001a3 	andeq	r0, r0, r3, lsr #3
    a364:	000001ae 	andeq	r0, r0, lr, lsr #3
    a368:	00016214 	andeq	r6, r1, r4, lsl r2
    a36c:	00381400 	eorseq	r1, r8, r0, lsl #8
    a370:	15000000 	strne	r0, [r0, #-0]
    a374:	000002d3 	ldrdeq	r0, [r0], -r3
    a378:	75162b05 	ldrvc	r2, [r6, #-2821]	; 0xfffff4fb
    a37c:	5e000024 	cdppl	0, 0, cr0, cr0, cr4, {1}
    a380:	01000000 	mrseq	r0, (UNDEF: 0)
    a384:	68021002 	stmdavs	r2, {r1, ip}
    a388:	01000001 	tsteq	r0, r1
    a38c:	000001cf 	andeq	r0, r0, pc, asr #3
    a390:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a394:	00016214 	andeq	r6, r1, r4, lsl r2
    a398:	09841600 	stmibeq	r4, {r9, sl, ip}
    a39c:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    a3a0:	00000000 	andeq	r0, r0, r0
    a3a4:	001ce015 	andseq	lr, ip, r5, lsl r0
    a3a8:	16310500 	ldrtne	r0, [r1], -r0, lsl #10
    a3ac:	00002608 	andeq	r2, r0, r8, lsl #12
    a3b0:	0000005e 	andeq	r0, r0, lr, asr r0
    a3b4:	03100201 	tsteq	r0, #268435456	; 0x10000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:229
        return;
    a3b8:	00000168 	andeq	r0, r0, r8, ror #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:235
}
    a3bc:	00020001 	andeq	r0, r2, r1
    a3c0:	00021000 	andeq	r1, r2, r0
    a3c4:	01621400 	cmneq	r2, r0, lsl #8
_ZN16CDisplay_SSD13064FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:238
{
    a3c8:	ec160000 	ldc	0, cr0, [r6], {-0}
    a3cc:	16000004 	strne	r0, [r0], -r4
    a3d0:	0000005e 	andeq	r0, r0, lr, asr r0
    a3d4:	09ad1500 	stmibeq	sp!, {r8, sl, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:239
    if (!mOpened)
    a3d8:	36050000 	strcc	r0, [r5], -r0
    a3dc:	0028f712 	eoreq	pc, r8, r2, lsl r7	; <UNPREDICTABLE>
    a3e0:	0004df00 	andeq	sp, r4, r0, lsl #30
    a3e4:	10020100 	andne	r0, r2, r0, lsl #2
    a3e8:	00016804 	andeq	r6, r1, r4, lsl #16
    a3ec:	02310100 	eorseq	r0, r1, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:246
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a3f0:	02370000 	eorseq	r0, r7, #0
    a3f4:	62140000 	andsvs	r0, r4, #0
    a3f8:	00000001 	andeq	r0, r0, r1
    a3fc:	0024ea17 	eoreq	lr, r4, r7, lsl sl
    a400:	123b0500 	eorsne	r0, fp, #0, 10
    a404:	000027bb 			; <UNDEFINED> instruction: 0x000027bb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:248
        ta << SSD1306_Cmd::Command_Start
    a408:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a40c:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    a410:	00000168 	andeq	r0, r0, r8, ror #2
    a414:	00025401 	andeq	r5, r2, r1, lsl #8
    a418:	01621400 	cmneq	r2, r0, lsl #8
    a41c:	d5160000 	ldrle	r0, [r6, #-0]
    a420:	16000002 	strne	r0, [r0], -r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:249
            << SSD1306_Cmd::Set_Page_Addr
    a424:	00000ad8 	ldrdeq	r0, [r0], -r8
    a428:	8f0b0000 	svchi	0x000b0000
    a42c:	08000031 	stmdaeq	r0, {r0, r4, r5}
    a430:	8b080606 	blhi	20bc50 <_bss_end+0x1f9f60>
    a434:	0c000002 	stceq	0, cr0, [r0], {2}
    a438:	06003072 			; <UNDEFINED> instruction: 0x06003072
    a43c:	005e0e08 	subseq	r0, lr, r8, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:250
            << 0x00
    a440:	0c000000 	stceq	0, cr0, [r0], {-0}
    a444:	06003172 			; <UNDEFINED> instruction: 0x06003172
    a448:	005e0e09 	subseq	r0, lr, r9, lsl #28
    a44c:	00040000 	andeq	r0, r4, r0
    a450:	00310808 	eorseq	r0, r1, r8, lsl #16
    a454:	38040500 	stmdacc	r4, {r8, sl}
    a458:	06000000 	streq	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:251
            << 0xFF
    a45c:	02a40c1e 	adceq	r0, r4, #7680	; 0x1e00
    a460:	c90a0000 	stmdbgt	sl, {}	; <UNPREDICTABLE>
    a464:	00000036 	andeq	r0, r0, r6, lsr r0
    a468:	365f0800 	ldrbcc	r0, [pc], -r0, lsl #16
    a46c:	04050000 	streq	r0, [r5], #-0
    a470:	00000038 	andeq	r0, r0, r8, lsr r0
    a474:	d50c2606 	strle	r2, [ip, #-1542]	; 0xfffff9fa
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:252
            << SSD1306_Cmd::Set_Column_Addr
    a478:	0a000002 	beq	a488 <_ZN16CDisplay_SSD13064FlipEv+0xc0>
    a47c:	00000a20 	andeq	r0, r0, r0, lsr #20
    a480:	02d30a00 	sbcseq	r0, r3, #0, 20
    a484:	0a010000 	beq	4a48c <_bss_end+0x3879c>
    a488:	00001ce0 	andeq	r1, r0, r0, ror #25
    a48c:	09ad0a02 	stmibeq	sp!, {r1, r9, fp}
    a490:	0a030000 	beq	ca498 <_bss_end+0xb87a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:253
            << 0x00
    a494:	000024ea 	andeq	r2, r0, sl, ror #9
    a498:	61080004 	tstvs	r8, r4
    a49c:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
    a4a0:	00003804 	andeq	r3, r0, r4, lsl #16
    a4a4:	0c430600 	mcrreq	6, 0, r0, r3, cr0
    a4a8:	000002f4 	strdeq	r0, [r0], -r4
    a4ac:	0022900a 	eoreq	r9, r2, sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:254
            << mWidth - 1;
    a4b0:	250a0000 	strcs	r0, [sl, #-0]
    a4b4:	01000020 	tsteq	r0, r0, lsr #32
    a4b8:	1c440700 	mcrrne	7, 0, r0, r4, cr0
    a4bc:	06050000 	streq	r0, [r5], -r0
    a4c0:	00006a1a 	andeq	r6, r0, sl, lsl sl
    a4c4:	e0030500 	and	r0, r3, r0, lsl #10
    a4c8:	07000104 	streq	r0, [r0, -r4, lsl #2]
    a4cc:	00001c75 	andeq	r1, r0, r5, ror ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:256
        mI2C.End_Transaction(ta);
    a4d0:	6a1a0805 	bvs	68c4ec <_bss_end+0x67a7fc>
    a4d4:	05000000 	streq	r0, [r0, #-0]
    a4d8:	0104e403 	tsteq	r4, r3, lsl #8
    a4dc:	1d930700 	ldcne	7, cr0, [r3]
    a4e0:	0a050000 	beq	14a4e8 <_bss_end+0x1387f8>
    a4e4:	00006a1a 	andeq	r6, r0, sl, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:260
    constexpr int PktSize = 4;
    a4e8:	e8030500 	stmda	r3, {r8, sl}
    a4ec:	07000104 	streq	r0, [r0, -r4, lsl #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:262
    const int maxIdx = mWidth * (mHeight / 8);
    a4f0:	00001b79 	andeq	r1, r0, r9, ror fp
    a4f4:	6a1a0c05 	bvs	68d510 <_bss_end+0x67b820>
    a4f8:	05000000 	streq	r0, [r0, #-0]
    a4fc:	0104ec03 	tsteq	r4, r3, lsl #24
    a500:	24320800 	ldrtcs	r0, [r2], #-2048	; 0xfffff800
    a504:	04050000 	streq	r0, [r5], #-0
    a508:	00000038 	andeq	r0, r0, r8, lsr r0
    a50c:	610c0e05 	tstvs	ip, r5, lsl #28
    a510:	0a000003 	beq	a524 <_ZN16CDisplay_SSD13064FlipEv+0x15c>
    a514:	00001d37 	andeq	r1, r0, r7, lsr sp
    a518:	1e3d0a00 	vaddne.f32	s0, s26, s0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264
    for (int i = 0; i < maxIdx; i += PktSize)
    a51c:	0a010000 	beq	4a524 <_bss_end+0x38834>
    a520:	00001cdb 	ldrdeq	r1, [r0], -fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264 (discriminator 1)
    a524:	87180002 	ldrhi	r0, [r8, -r2]
    a528:	9000001c 	andls	r0, r0, ip, lsl r0
    a52c:	cf074c05 	svcgt	0x00074c05
    a530:	0b000004 	bleq	a548 <_ZN16CDisplay_SSD13064FlipEv+0x180>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a534:	00001c67 	andeq	r1, r0, r7, ror #24
    a538:	0c500524 	cfldr64eq	mvdx0, [r0], {36}	; 0x24
    a53c:	000003e9 	andeq	r0, r0, r9, ror #7
    a540:	003eab0d 	eorseq	sl, lr, sp, lsl #22
    a544:	0e520500 	cdpeq	5, 5, cr0, cr2, cr0, {0}
    a548:	000004cf 	andeq	r0, r0, pc, asr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:268
        ta << SSD1306_Cmd::Data_Continue;
    a54c:	1c380d00 	ldcne	13, cr0, [r8], #-0
    a550:	54050000 	strpl	r0, [r5], #-0
    a554:	0004df0e 	andeq	sp, r4, lr, lsl #30
    a558:	8c0d1000 	stchi	0, cr1, [sp], {-0}
    a55c:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    a560:	005e1256 	subseq	r1, lr, r6, asr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:269
        for (int j = 0; j < PktSize; j++)
    a564:	0d140000 	ldceq	0, cr0, [r4, #-0]
    a568:	00001c60 	andeq	r1, r0, r0, ror #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:269 (discriminator 3)
    a56c:	e6185905 	ldr	r5, [r8], -r5, lsl #18
    a570:	18000004 	stmdane	r0, {r2}
    a574:	001c930d 	andseq	r9, ip, sp, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271 (discriminator 2)
            ta << mBuffer[i + j];
    a578:	185b0500 	ldmdane	fp, {r8, sl}^
    a57c:	000004e6 	andeq	r0, r0, r6, ror #9
    a580:	0e050d1c 	mcreq	13, 0, r0, cr5, cr12, {0}
    a584:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    a588:	0004e618 	andeq	lr, r4, r8, lsl r6
    a58c:	11192000 	tstne	r9, r0
    a590:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    a594:	1dcf1860 	stclne	8, cr1, [pc, #384]	; a71c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x13c>
    a598:	04e60000 	strbteq	r0, [r6], #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:269 (discriminator 2)
        for (int j = 0; j < PktSize; j++)
    a59c:	03dd0000 	bicseq	r0, sp, #0
    a5a0:	e6140000 	ldr	r0, [r4], -r0
    a5a4:	16000004 	strne	r0, [r0], -r4
    a5a8:	000004ec 	andeq	r0, r0, ip, ror #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:275 (discriminator 2)
        mI2C.End_Transaction(ta);
    a5ac:	d00b0000 	andle	r0, fp, r0
    a5b0:	1800001c 	stmdane	r0, {r2, r3, r4}
    a5b4:	1e0c6405 	cdpne	4, 0, cr6, cr12, cr5, {0}
    a5b8:	0d000004 	stceq	0, cr0, [r0, #-16]
    a5bc:	00003eab 	andeq	r3, r0, fp, lsr #29
    a5c0:	cf0e6705 	svcgt	0x000e6705
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:264 (discriminator 2)
    for (int i = 0; i < maxIdx; i += PktSize)
    a5c4:	00000004 	andeq	r0, r0, r4
    a5c8:	001bb60d 	andseq	fp, fp, sp, lsl #12
    a5cc:	15690500 	strbne	r0, [r9, #-1280]!	; 0xfffffb00
    a5d0:	000004ec 	andeq	r0, r0, ip, ror #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:240
        return;
    a5d4:	1d260d10 	stcne	13, cr0, [r6, #-64]!	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:277
}
    a5d8:	6b050000 	blvs	14a5e0 <_bss_end+0x1388f0>
    a5dc:	0004fc1d 	andeq	pc, r4, sp, lsl ip	; <UNPREDICTABLE>
_ZN16CDisplay_SSD130624Process_External_CommandEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:280
{
    a5e0:	03001400 	movweq	r1, #1024	; 0x400
    a5e4:	000003e9 	andeq	r0, r0, r9, ror #7
    a5e8:	001bcc1a 	andseq	ip, fp, sl, lsl ip
    a5ec:	1d6f0500 	cfstr64ne	mvdx0, [pc, #-0]	; a5f4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x14>
    a5f0:	00000502 	andeq	r0, r0, r2, lsl #10
    a5f4:	001b671a 	andseq	r6, fp, sl, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:281
    if (length <= 0)
    a5f8:	1b710500 	blne	1c4ba00 <_bss_end+0x1c39d10>
    a5fc:	0000006a 	andeq	r0, r0, sl, rrx
    a600:	001da10d 	andseq	sl, sp, sp, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:284
    NDisplay_Command cmd = static_cast<NDisplay_Command>(input[0]);
    a604:	13740500 	cmnne	r4, #0, 10
    a608:	0000036e 	andeq	r0, r0, lr, ror #6
    a60c:	1b970d00 	blne	fe5cda14 <_bss_end+0xfe5bbd24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:286
    switch (cmd)
    a610:	77050000 	strvc	r0, [r5, -r0]
    a614:	00036e13 	andeq	r6, r3, r3, lsl lr
    a618:	2d0d2400 	cfstrscs	mvf2, [sp, #-0]
    a61c:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    a620:	036e1378 	cmneq	lr, #120, 6	; 0xe0000001
    a624:	0d480000 	stcleq	0, cr0, [r8, #-0]
    a628:	00001d1c 	andeq	r1, r0, ip, lsl sp
    a62c:	6e137905 	vnmlsvs.f16	s14, s6, s10	; <UNPREDICTABLE>
    a630:	6c000003 	stcvs	0, cr0, [r0], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:289
            sMonitor << "External CMD: NOP\n";
    a634:	001c871b 	andseq	r8, ip, fp, lsl r7
    a638:	057c0500 	ldrbeq	r0, [ip, #-1280]!	; 0xfffffb00
    a63c:	00001dff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:290
            break;
    a640:	0000050d 	andeq	r0, r0, sp, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:293
            sMonitor << "External CMD: Flip\n";
    a644:	00048801 	andeq	r8, r4, r1, lsl #16
    a648:	00048e00 	andeq	r8, r4, r0, lsl #28
    a64c:	050d1400 	streq	r1, [sp, #-1024]	; 0xfffffc00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:294
            Flip();
    a650:	1c000000 	stcne	0, cr0, [r0], {-0}
    a654:	00001bc1 	andeq	r1, r0, r1, asr #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:295
            break;
    a658:	480a7f05 	stmdami	sl, {r0, r2, r8, r9, sl, fp, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299
            sMonitor << "External CMD: Clear\n";
    a65c:	0100001e 	tsteq	r0, lr, lsl r0
    a660:	000004a3 	andeq	r0, r0, r3, lsr #9
    a664:	000004a9 	andeq	r0, r0, r9, lsr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:301
            if (length != sizeof(TDisplay_Clear_Packet))
    a668:	00050d14 	andeq	r0, r5, r4, lsl sp
    a66c:	201d0000 	andscs	r0, sp, r0
    a670:	0500000a 	streq	r0, [r0, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:304
            const TDisplay_Clear_Packet* pkt = reinterpret_cast<const TDisplay_Clear_Packet*>(input);
    a674:	1ce60c82 	stclne	12, cr0, [r6], #520	; 0x208
    a678:	01620000 	cmneq	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:306
            Clear((pkt->clearSet != 0));
    a67c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    a680:	14000004 	strne	r0, [r0], #-4
    a684:	0000050d 	andeq	r0, r0, sp, lsl #10
    a688:	0004ec16 	andeq	lr, r4, r6, lsl ip
    a68c:	033c1600 	teqeq	ip, #0, 12
    a690:	00000000 	andeq	r0, r0, r0
    a694:	0000250e 	andeq	r2, r0, lr, lsl #10
    a698:	0004df00 	andeq	sp, r4, r0, lsl #30
    a69c:	006f0f00 	rsbeq	r0, pc, r0, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:308
            break;
    a6a0:	000f0000 	andeq	r0, pc, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:313
            sMonitor << "External CMD: Draw_Pixel_Array\n";
    a6a4:	48020102 	stmdami	r2, {r1, r8}
    a6a8:	10000045 	andne	r0, r0, r5, asr #32
    a6ac:	00036e04 	andeq	r6, r3, r4, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315
            if (length < sizeof(TDisplay_Draw_Pixel_Array_Packet))
    a6b0:	2c041000 	stccs	0, cr1, [r4], {-0}
    a6b4:	03000000 	movweq	r0, #0
    a6b8:	000004ec 	andeq	r0, r0, ip, ror #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:318
            const TDisplay_Draw_Pixel_Array_Packet* pkt = reinterpret_cast<const TDisplay_Draw_Pixel_Array_Packet*>(input);
    a6bc:	0029e11e 	eoreq	lr, r9, lr, lsl r1
    a6c0:	f7041000 			; <UNDEFINED> instruction: 0xf7041000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:320
            const TDisplay_Pixel_Spec* ptr = &pkt->first;
    a6c4:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    a6c8:	0000041e 	andeq	r0, r0, lr, lsl r4
    a6cc:	0000050d 	andeq	r0, r0, sp, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:322
            for (uint16_t i = 0; i < pkt->count; i++)
    a6d0:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    a6d4:	00000361 	andeq	r0, r0, r1, ror #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:322 (discriminator 3)
    a6d8:	001be720 	andseq	lr, fp, r0, lsr #14
    a6dc:	14850500 	strne	r0, [r5], #1280	; 0x500
    a6e0:	00000361 	andeq	r0, r0, r1, ror #6
    a6e4:	00369007 	eorseq	r9, r6, r7
    a6e8:	140a0700 	strne	r0, [sl], #-1792	; 0xfffff900
    a6ec:	0000006a 	andeq	r0, r0, sl, rrx
    a6f0:	04f00305 	ldrbteq	r0, [r0], #773	; 0x305
    a6f4:	cb0b0001 	blgt	2ca700 <_bss_end+0x2b8a10>
    a6f8:	0c000035 	stceq	0, cr0, [r0], {53}	; 0x35
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:323 (discriminator 2)
                Set_Pixel(ptr->x, ptr->y, (ptr->set != 0));
    a6fc:	66080d07 	strvs	r0, [r8], -r7, lsl #26
    a700:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    a704:	00000d08 	andeq	r0, r0, r8, lsl #26
    a708:	66190f07 	ldrvs	r0, [r9], -r7, lsl #30
    a70c:	00000005 	andeq	r0, r0, r5
    a710:	000e050d 	andeq	r0, lr, sp, lsl #10
    a714:	19100700 	ldmdbne	r0, {r8, r9, sl}
    a718:	00000566 	andeq	r0, r0, r6, ror #10
    a71c:	35810d04 	strcc	r0, [r1, #3332]	; 0xd04
    a720:	11070000 	mrsne	r0, (UNDEF: 7)
    a724:	00056c13 	andeq	r6, r5, r3, lsl ip
    a728:	10000800 	andne	r0, r0, r0, lsl #16
    a72c:	00053104 	andeq	r3, r5, r4, lsl #2
    a730:	f6041000 			; <UNDEFINED> instruction: 0xf6041000
    a734:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a738:	00003132 	andeq	r3, r0, r2, lsr r1
    a73c:	0714070c 	ldreq	r0, [r4, -ip, lsl #14]
    a740:	0000070a 	andeq	r0, r0, sl, lsl #14
    a744:	0033ca0d 	eorseq	ip, r3, sp, lsl #20
    a748:	0e180700 	cdpeq	7, 1, cr0, cr8, cr0, {0}
    a74c:	0000005e 	andeq	r0, r0, lr, asr r0
    a750:	305f0d00 	subscc	r0, pc, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:322 (discriminator 2)
            for (uint16_t i = 0; i < pkt->count; i++)
    a754:	1b070000 	blne	1ca75c <_bss_end+0x1b8a6c>
    a758:	00056619 	andeq	r6, r5, r9, lsl r6
    a75c:	c50d0400 	strgt	r0, [sp, #-1024]	; 0xfffffc00
    a760:	07000034 	smladxeq	r0, r4, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:330
            sMonitor << "External CMD: Draw_Pixel_Array_To_Rect\n";
    a764:	0566191e 	strbeq	r1, [r6, #-2334]!	; 0xfffff6e2
    a768:	21080000 	mrscs	r0, (UNDEF: 8)
    a76c:	00003655 	andeq	r3, r0, r5, asr r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332
            if (length < sizeof(TDisplay_Pixels_To_Rect))
    a770:	a80a2107 	stmdage	sl, {r0, r1, r2, r8, sp}
    a774:	ba000035 	blt	a850 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x270>
    a778:	c5000005 	strgt	r0, [r0, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:335
            const TDisplay_Pixels_To_Rect* pkt = reinterpret_cast<const TDisplay_Pixels_To_Rect*>(input);
    a77c:	14000005 	strne	r0, [r0], #-5
    a780:	0000070f 	andeq	r0, r0, pc, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:337
            const uint8_t* data = &pkt->first;
    a784:	00056616 	andeq	r6, r5, r6, lsl r6
    a788:	321b0000 	andscc	r0, fp, #0
    a78c:	07000031 	smladxeq	r0, r1, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:339
            sMonitor << "pkt->vflip = " << (pkt->vflip == 0) << '\n';
    a790:	36e30524 	strbtcc	r0, [r3], r4, lsr #10
    a794:	070f0000 	streq	r0, [pc, -r0]
    a798:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    a79c:	e4000005 	str	r0, [r0], #-5
    a7a0:	14000005 	strne	r0, [r0], #-5
    a7a4:	0000070f 	andeq	r0, r0, pc, lsl #14
    a7a8:	36411c00 	strbcc	r1, [r1], -r0, lsl #24
    a7ac:	27070000 	strcs	r0, [r7, -r0]
    a7b0:	002faf0a 	eoreq	sl, pc, sl, lsl #30
    a7b4:	05f90100 	ldrbeq	r0, [r9, #256]!	; 0x100
    a7b8:	05ff0000 	ldrbeq	r0, [pc, #0]!	; a7c0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1e0>
    a7bc:	0f140000 	svceq	0x00140000
    a7c0:	00000007 	andeq	r0, r0, r7
    a7c4:	00311d1b 	eorseq	r1, r1, fp, lsl sp
    a7c8:	0e2a0700 	cdpeq	7, 2, cr0, cr10, cr0, {0}
    a7cc:	000030e0 	andeq	r3, r0, r0, ror #1
    a7d0:	0000005e 	andeq	r0, r0, lr, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:341
            if (pkt->vflip == 0)
    a7d4:	00061801 	andeq	r1, r6, r1, lsl #16
    a7d8:	00062300 	andeq	r2, r6, r0, lsl #6
    a7dc:	070f1400 	streq	r1, [pc, -r0, lsl #8]
    a7e0:	ea160000 	b	58a7e8 <_bss_end+0x578af8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a7e4:	00000000 	andeq	r0, r0, r0
    a7e8:	00359f1c 	eorseq	r9, r5, ip, lsl pc
    a7ec:	0a2e0700 	beq	b8c3f4 <_bss_end+0xb7a704>
    a7f0:	00003414 	andeq	r3, r0, r4, lsl r4
    a7f4:	00063801 	andeq	r3, r6, r1, lsl #16
    a7f8:	00063e00 	andeq	r3, r6, r0, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 1)
    a7fc:	070f1400 	streq	r1, [pc, -r0, lsl #8]
    a800:	1b000000 	blne	a808 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x228>
    a804:	00003248 	andeq	r3, r0, r8, asr #4
    a808:	72133107 	andsvc	r3, r3, #-1073741823	; 0xc0000001
    a80c:	6c000030 	stcvs	0, cr0, [r0], {48}	; 0x30
    a810:	01000005 	tsteq	r0, r5
    a814:	00000657 	andeq	r0, r0, r7, asr r6
    a818:	0000065d 	andeq	r0, r0, sp, asr r6
    a81c:	00071a14 	andeq	r1, r7, r4, lsl sl
    a820:	5c1b0000 	ldcpl	0, cr0, [fp], {-0}
    a824:	07000032 	smladxeq	r0, r2, r0, r0
    a828:	33840e34 	orrcc	r0, r4, #52, 28	; 0x340
    a82c:	005e0000 	subseq	r0, lr, r0
    a830:	76010000 	strvc	r0, [r1], -r0
    a834:	81000006 	tsthi	r0, r6
    a838:	14000006 	strne	r0, [r0], #-6
    a83c:	0000070f 	andeq	r0, r0, pc, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a840:	00016216 	andeq	r6, r1, r6, lsl r2
    a844:	3a1b0000 	bcc	6ca84c <_bss_end+0x6b8b5c>
    a848:	07000030 	smladxeq	r0, r0, r0, r0
    a84c:	31fe0a37 	mvnscc	r0, r7, lsr sl
    a850:	04df0000 	ldrbeq	r0, [pc], #0	; a858 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x278>
    a854:	9a010000 	bls	4a85c <_bss_end+0x38b6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 3)
    a858:	a5000006 	strge	r0, [r0, #-6]
    a85c:	14000006 	strne	r0, [r0], #-6
    a860:	0000070f 	andeq	r0, r0, pc, lsl #14
    a864:	00005e16 	andeq	r5, r0, r6, lsl lr
    a868:	791c0000 	ldmdbvc	ip, {}	; <UNPREDICTABLE>
    a86c:	07000032 	smladxeq	r0, r2, r0, r0
    a870:	35ef0a3a 	strbcc	r0, [pc, #2618]!	; b2b2 <_ZN15CShift_Register8Shift_InEb+0x6a>
    a874:	ba010000 	blt	4a87c <_bss_end+0x38b8c>
    a878:	d9000006 	stmdble	r0, {r1, r2}
    a87c:	14000006 	strne	r0, [r0], #-6
    a880:	0000070f 	andeq	r0, r0, pc, lsl #14
    a884:	00028b16 	andeq	r8, r2, r6, lsl fp
    a888:	005e1600 	subseq	r1, lr, r0, lsl #12
    a88c:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    a890:	16000000 	strne	r0, [r0], -r0
    a894:	0000005e 	andeq	r0, r0, lr, asr r0
    a898:	00072516 	andeq	r2, r7, r6, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:347 (discriminator 2)
                        const uint16_t pos = ((y - pkt->y1) * pkt->w + (x - pkt->x1));
    a89c:	a0220000 	eorge	r0, r2, r0
    a8a0:	07000030 	smladxeq	r0, r0, r0, r0
    a8a4:	3143053d 	cmpcc	r3, sp, lsr r5
    a8a8:	ea010000 	b	4a8b0 <_bss_end+0x38bc0>
    a8ac:	14000006 	strne	r0, [r0], #-6
    a8b0:	0000070f 	andeq	r0, r0, pc, lsl #14
    a8b4:	0002a416 	andeq	sl, r2, r6, lsl r4
    a8b8:	005e1600 	subseq	r1, lr, r0, lsl #12
    a8bc:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    a8c0:	16000000 	strne	r0, [r0], -r0
    a8c4:	0000005e 	andeq	r0, r0, lr, asr r0
    a8c8:	00072516 	andeq	r2, r7, r6, lsl r5
    a8cc:	03000000 	movweq	r0, #0
    a8d0:	00000572 	andeq	r0, r0, r2, ror r5
    a8d4:	05720410 	ldrbeq	r0, [r2, #-1040]!	; 0xfffffbf0
    a8d8:	0f030000 	svceq	0x00030000
    a8dc:	10000007 	andne	r0, r0, r7
    a8e0:	00070a04 	andeq	r0, r7, r4, lsl #20
    a8e4:	071a0300 	ldreq	r0, [sl, -r0, lsl #6]
    a8e8:	04230000 	strteq	r0, [r3], #-0
    a8ec:	00000265 	andeq	r0, r0, r5, ror #4
    a8f0:	003a2120 	eorseq	r2, sl, r0, lsr #2
    a8f4:	19400700 	stmdbne	r0, {r8, r9, sl}^
    a8f8:	00000572 	andeq	r0, r0, r2, ror r5
    a8fc:	000b9818 	andeq	r9, fp, r8, lsl r8
    a900:	03081800 	movweq	r1, #34816	; 0x8800
    a904:	00097807 	andeq	r7, r9, r7, lsl #16
    a908:	0b162400 	bleq	593910 <_bss_end+0x581c20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:350 (discriminator 2)
                        Set_Pixel(x, y, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a90c:	04070000 	streq	r0, [r7], #-0
    a910:	0000006f 	andeq	r0, r0, pc, rrx
    a914:	01100608 	tsteq	r0, r8, lsl #12
    a918:	00000764 	andeq	r0, r0, r4, ror #14
    a91c:	58454809 	stmdapl	r5, {r0, r3, fp, lr}^
    a920:	44091000 	strmi	r1, [r9], #-0
    a924:	0a004345 	beq	1b640 <_bss_end+0x9950>
    a928:	07440300 	strbeq	r0, [r4, -r0, lsl #6]
    a92c:	230b0000 	movwcs	r0, #45056	; 0xb000
    a930:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    a934:	8d0c2408 	cfstrshi	mvf2, [ip, #-32]	; 0xffffffe0
    a938:	0c000007 	stceq	0, cr0, [r0], {7}
    a93c:	26080079 			; <UNDEFINED> instruction: 0x26080079
    a940:	00006f16 	andeq	r6, r0, r6, lsl pc
    a944:	780c0000 	stmdavc	ip, {}	; <UNPREDICTABLE>
    a948:	16270800 	strtne	r0, [r7], -r0, lsl #16
    a94c:	0000006f 	andeq	r0, r0, pc, rrx
    a950:	75250004 	strvc	r0, [r5, #-4]!
    a954:	0800000c 	stmdaeq	r0, {r2, r3}
    a958:	07641b0c 	strbeq	r1, [r4, -ip, lsl #22]!
    a95c:	0a010000 	beq	4a964 <_bss_end+0x38c74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:345 (discriminator 2)
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a960:	000be826 	andeq	lr, fp, r6, lsr #16
    a964:	280d0800 	stmdacs	sp, {fp}
    a968:	000004f2 	strdeq	r0, [r0], -r2
    a96c:	0b982701 	bleq	fe614578 <_bss_end+0xfe602888>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:343 (discriminator 2)
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a970:	10080000 	andne	r0, r8, r0
    a974:	000c620e 	andeq	r6, ip, lr, lsl #4
    a978:	00097800 	andeq	r7, r9, r0, lsl #16
    a97c:	07c10100 	strbeq	r0, [r1, r0, lsl #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:368
                for (uint32_t x = 0; x < pkt->w; x++)
    a980:	07d60000 	ldrbeq	r0, [r6, r0]
    a984:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:368 (discriminator 1)
    a988:	16000009 	strne	r0, [r0], -r9
    a98c:	0000006f 	andeq	r0, r0, pc, rrx
    a990:	00006f16 	andeq	r6, r0, r6, lsl pc
    a994:	006f1600 	rsbeq	r1, pc, r0, lsl #12
    a998:	1c000000 	stcne	0, cr0, [r0], {-0}
    a99c:	000018a2 	andeq	r1, r0, r2, lsr #17
    a9a0:	830a1208 	movwhi	r1, #41480	; 0xa208
    a9a4:	0100000b 	tsteq	r0, fp
    a9a8:	000007eb 	andeq	r0, r0, fp, ror #15
    a9ac:	000007f1 	strdeq	r0, [r0], -r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:370
                    for (uint32_t y = 0; y < pkt->h; y++)
    a9b0:	00097814 	andeq	r7, r9, r4, lsl r8
    a9b4:	a11b0000 	tstge	fp, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:370 (discriminator 3)
    a9b8:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    a9bc:	0c050f14 	stceq	15, cr0, [r5], {20}
    a9c0:	097e0000 	ldmdbeq	lr!, {}^	; <UNPREDICTABLE>
    a9c4:	0a010000 	beq	4a9cc <_bss_end+0x38cdc>
    a9c8:	15000008 	strne	r0, [r0, #-8]
    a9cc:	14000008 	strne	r0, [r0], #-8
    a9d0:	00000978 	andeq	r0, r0, r8, ror r9
    a9d4:	00002516 	andeq	r2, r0, r6, lsl r5
    a9d8:	a11b0000 	tstge	fp, r0
    a9dc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:372 (discriminator 2)
                        const uint32_t pos = (x * pkt->h + y);
    a9e0:	0bac0f15 	bleq	feb0e63c <_bss_end+0xfeafc94c>
    a9e4:	097e0000 	ldmdbeq	lr!, {}^	; <UNPREDICTABLE>
    a9e8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    a9ec:	39000008 	stmdbcc	r0, {r3}
    a9f0:	14000008 	strne	r0, [r0], #-8
    a9f4:	00000978 	andeq	r0, r0, r8, ror r9
    a9f8:	0004ec16 	andeq	lr, r4, r6, lsl ip
    a9fc:	a11b0000 	tstge	fp, r0
    aa00:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    aa04:	0c890f16 	stceq	15, cr0, [r9], {22}
    aa08:	097e0000 	ldmdbeq	lr!, {}^	; <UNPREDICTABLE>
    aa0c:	52010000 	andpl	r0, r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:378 (discriminator 2)
                        const bool set = ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0;
    aa10:	5d000008 	stcpl	0, cr0, [r0, #-32]	; 0xffffffe0
    aa14:	14000008 	strne	r0, [r0], #-8
    aa18:	00000978 	andeq	r0, r0, r8, ror r9
    aa1c:	00074416 	andeq	r4, r7, r6, lsl r4
    aa20:	a11b0000 	tstge	fp, r0
    aa24:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    aa28:	0c340f17 	ldceq	15, cr0, [r4], #-92	; 0xffffffa4
    aa2c:	097e0000 	ldmdbeq	lr!, {}^	; <UNPREDICTABLE>
    aa30:	76010000 	strvc	r0, [r1], -r0
    aa34:	81000008 	tsthi	r0, r8
    aa38:	14000008 	strne	r0, [r0], #-8
    aa3c:	00000978 	andeq	r0, r0, r8, ror r9
    aa40:	00006f16 	andeq	r6, r0, r6, lsl pc
    aa44:	a11b0000 	tstge	fp, r0
    aa48:	0800000b 	stmdaeq	r0, {r0, r1, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:381 (discriminator 2)
                        Set_Pixel(x + pkt->x1, (pkt->h - y) + pkt->y1, set);
    aa4c:	0bf40f18 	bleq	ffd0e6b4 <_bss_end+0xffcfc9c4>
    aa50:	097e0000 	ldmdbeq	lr!, {}^	; <UNPREDICTABLE>
    aa54:	9a010000 	bls	4aa5c <_bss_end+0x38d6c>
    aa58:	a5000008 	strge	r0, [r0, #-8]
    aa5c:	14000008 	strne	r0, [r0], #-8
    aa60:	00000978 	andeq	r0, r0, r8, ror r9
    aa64:	0004df16 	andeq	sp, r4, r6, lsl pc
    aa68:	b4210000 	strtlt	r0, [r1], #-0
    aa6c:	0800000a 	stmdaeq	r0, {r1, r3}
    aa70:	0a84111b 	beq	fe10eee4 <_bss_end+0xfe0fd1f4>
    aa74:	08b90000 	ldmeq	r9!, {}	; <UNPREDICTABLE>
    aa78:	08bf0000 	ldmeq	pc!, {}	; <UNPREDICTABLE>
    aa7c:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    aa80:	00000009 	andeq	r0, r0, r9
    aa84:	000aa721 	andeq	sl, sl, r1, lsr #14
    aa88:	111c0800 	tstne	ip, r0, lsl #16
    aa8c:	00000c45 	andeq	r0, r0, r5, asr #24
    aa90:	000008d3 	ldrdeq	r0, [r0], -r3
    aa94:	000008d9 	ldrdeq	r0, [r0], -r9
    aa98:	00097814 	andeq	r7, r9, r4, lsl r8
    aa9c:	5f210000 	svcpl	0x00210000
    aaa0:	0800000a 	stmdaeq	r0, {r1, r3}
    aaa4:	0b2d111d 	bleq	b4ef20 <_bss_end+0xb3d230>
    aaa8:	08ed0000 	stmiaeq	sp!, {}^	; <UNPREDICTABLE>
    aaac:	08f30000 	ldmeq	r3!, {}^	; <UNPREDICTABLE>
    aab0:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    aab4:	00000009 	andeq	r0, r0, r9
    aab8:	0013e121 	andseq	lr, r3, r1, lsr #2
    aabc:	0a1f0800 	beq	7ccac4 <_bss_end+0x7badd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:370 (discriminator 2)
                    for (uint32_t y = 0; y < pkt->h; y++)
    aac0:	00000c1e 	andeq	r0, r0, lr, lsl ip
    aac4:	00000907 	andeq	r0, r0, r7, lsl #18
    aac8:	0000090d 	andeq	r0, r0, sp, lsl #18
    aacc:	00097814 	andeq	r7, r9, r4, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:368 (discriminator 2)
                for (uint32_t x = 0; x < pkt->w; x++)
    aad0:	a2210000 	eorge	r0, r1, #0
    aad4:	0800000a 	stmdaeq	r0, {r1, r3}
    aad8:	0bbf0a21 	bleq	fefcd364 <_bss_end+0xfefbb674>
    aadc:	09210000 	stmdbeq	r1!, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:282
        return;
    aae0:	09360000 	ldmdbeq	r6!, {}	; <UNPREDICTABLE>
    aae4:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:302
                return;
    aae8:	16000009 	strne	r0, [r0], -r9
    aaec:	0000006f 	andeq	r0, r0, pc, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:316
                return;
    aaf0:	00098416 	andeq	r8, r9, r6, lsl r4
    aaf4:	006f1600 	rsbeq	r1, pc, r0, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:325
            break;
    aaf8:	0d000000 	stceq	0, cr0, [r0, #-0]
    aafc:	00000b4f 	andeq	r0, r0, pc, asr #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:333
                return;
    ab00:	90232b08 	eorls	r2, r3, r8, lsl #22
    ab04:	00000009 	andeq	r0, r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:386
            break;
    ab08:	000c160d 	andeq	r1, ip, sp, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
}
    ab0c:	122c0800 	eorne	r0, ip, #0, 16
    ab10:	0000006f 	andeq	r0, r0, pc, rrx
    ab14:	0bd60d04 	bleq	ff58df2c <_bss_end+0xff57c23c>
    ab18:	2d080000 	stccs	0, cr0, [r8, #-0]
    ab1c:	00006f12 	andeq	r6, r0, r2, lsl pc
    ab20:	df0d0800 	svcle	0x000d0800
    ab24:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    ab28:	07690f2e 	strbeq	r0, [r9, -lr, lsr #30]!
    ab2c:	0d0c0000 	stceq	0, cr0, [ip, #-0]
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
    ab30:	00000a51 	andeq	r0, r0, r1, asr sl
    ab34:	44122f08 	ldrmi	r2, [r2], #-3848	; 0xfffff0f8
    ab38:	14000007 	strne	r0, [r0], #-7
    ab3c:	37041000 	strcc	r1, [r4, -r0]
    ab40:	23000007 	movwcs	r0, #7
    ab44:	00073704 	andeq	r3, r7, r4, lsl #14
    ab48:	25041000 	strcs	r1, [r4, #-0]
    ab4c:	10000000 	andne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389 (discriminator 1)
    ab50:	00005204 	andeq	r5, r0, r4, lsl #4
    ab54:	098a0300 	stmibeq	sl, {r8, r9}
    ab58:	68200000 	stmdavs	r0!, {}	; <UNPREDICTABLE>
    ab5c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:7
CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);
    ab60:	07371132 			; <UNDEFINED> instruction: 0x07371132
    ab64:	be0b0000 	cdplt	0, 0, cr0, cr11, cr0, {0}
    ab68:	10000013 	andne	r0, r0, r3, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
}
    ab6c:	e3080802 	movw	r0, #34818	; 0x8802
    ab70:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    ab74:	00000d08 	andeq	r0, r0, r8, lsl #26
    ab78:	e3200a02 			; <UNDEFINED> instruction: 0xe3200a02
    ab7c:	00000009 	andeq	r0, r0, r9
    ab80:	000e050d 	andeq	r0, lr, sp, lsl #10
_GLOBAL__sub_I_sDisplay_SSD1306():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:389
    ab84:	200b0200 	andcs	r0, fp, r0, lsl #4
    ab88:	000009e3 	andeq	r0, r0, r3, ror #19
    ab8c:	0e520d04 	cdpeq	13, 5, cr0, cr2, cr4, {0}
    ab90:	0c020000 	stceq	0, cr0, [r2], {-0}
    ab94:	00005e0e 	andeq	r5, r0, lr, lsl #28
    ab98:	a60d0800 	strge	r0, [sp], -r0, lsl #16
    ab9c:	0200000e 	andeq	r0, r0, #14
_ZdlPvj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:62
{
    aba0:	04df0a0d 	ldrbeq	r0, [pc], #2573	; aba8 <_ZdlPvj+0x8>
    aba4:	000c0000 	andeq	r0, ip, r0
    aba8:	09a10410 	stmibeq	r1!, {r4, sl}
    abac:	0a180000 	beq	60abb4 <_bss_end+0x5f8ec4>
    abb0:	0400000e 	streq	r0, [r0], #-14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:63
    sKernelMem.Free(p);
    abb4:	cd071002 	stcgt	0, cr1, [r7, #-8]
    abb8:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    abbc:	00001344 	andeq	r1, r0, r4, asr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:64
}
    abc0:	e3201302 			; <UNDEFINED> instruction: 0xe3201302
    abc4:	00000009 	andeq	r0, r0, r9
    abc8:	00138528 	andseq	r8, r3, r8, lsr #10
    abcc:	20150200 	andscs	r0, r5, r0, lsl #4
_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    abd0:	00000d0d 	andeq	r0, r0, sp, lsl #26
    abd4:	000009e3 	andeq	r0, r0, r3, ror #19
    abd8:	00000a1b 	andeq	r0, r0, fp, lsl sl
    abdc:	00000a21 	andeq	r0, r0, r1, lsr #20
    abe0:	000acd14 	andeq	ip, sl, r4, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    abe4:	0a1b0000 	beq	6cabec <_bss_end+0x6b8efc>
    abe8:	0200000e 	andeq	r0, r0, #14
    abec:	13260518 			; <UNDEFINED> instruction: 0x13260518
    abf0:	0acd0000 	beq	ff34abf8 <_bss_end+0xff338f08>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    abf4:	3a010000 	bcc	4abfc <_bss_end+0x38f0c>
    abf8:	4000000a 	andmi	r0, r0, sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    abfc:	1400000a 	strne	r0, [r0], #-10
    ac00:	00000acd 	andeq	r0, r0, sp, asr #21
    ac04:	0ee51b00 	vfmaeq.f64	d17, d5, d0
    ac08:	1a020000 	bne	8ac10 <_bss_end+0x78f20>
    ac0c:	0011ba0b 	andseq	fp, r1, fp, lsl #20
    ac10:	000ad800 	andeq	sp, sl, r0, lsl #16
    ac14:	0a590100 	beq	164b01c <_bss_end+0x163932c>
    ac18:	0a640000 	beq	190ac20 <_bss_end+0x18f8f30>
    ac1c:	cd140000 	ldcgt	0, cr0, [r4, #-0]
    ac20:	1600000a 	strne	r0, [r0], -sl
    ac24:	0000005e 	andeq	r0, r0, lr, asr r0
    ac28:	13ac1c00 			; <UNDEFINED> instruction: 0x13ac1c00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac2c:	1b020000 	blne	8ac34 <_bss_end+0x78f44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ac30:	0010d30a 	andseq	sp, r0, sl, lsl #6
    ac34:	0a790100 	beq	1e4b03c <_bss_end+0x1e3934c>
    ac38:	0a840000 	beq	fe10ac40 <_bss_end+0xfe0f8f50>
    ac3c:	cd140000 	ldcgt	0, cr0, [r4, #-0]
_ZN16CI2C_TransactionlsIiEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    ac40:	1600000a 	strne	r0, [r0], -sl
    ac44:	00000ad8 	ldrdeq	r0, [r0], -r8
    ac48:	39a91b00 	stmibcc	r9!, {r8, r9, fp, ip}
    ac4c:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    ac50:	003ac008 	eorseq	ip, sl, r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    ac54:	00056c00 	andeq	r6, r5, r0, lsl #24
    ac58:	0aa40100 	beq	fe90b060 <_bss_end+0xfe8f9370>
    ac5c:	0aaa0000 	beq	fea8ac64 <_bss_end+0xfea78f74>
    ac60:	54290000 	strtpl	r0, [r9], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    ac64:	0000f600 	andeq	pc, r0, r0, lsl #12
    ac68:	0acd1400 	beq	ff34fc70 <_bss_end+0xff33df80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ac6c:	1d000000 	stcne	0, cr0, [r0, #-0]
    ac70:	00003a98 	muleq	r0, r8, sl
    ac74:	d7081e02 	strle	r1, [r8, -r2, lsl #28]
    ac78:	66000039 			; <UNDEFINED> instruction: 0x66000039
    ac7c:	01000005 	tsteq	r0, r5
    ac80:	00000ac6 	andeq	r0, r0, r6, asr #21
    ac84:	31005429 	tstcc	r0, r9, lsr #8
    ac88:	14000005 	strne	r0, [r0], #-5
    ac8c:	00000acd 	andeq	r0, r0, sp, asr #21
    ac90:	04100000 	ldreq	r0, [r0], #-0
    ac94:	000009e9 	andeq	r0, r0, r9, ror #19
    ac98:	000acd03 	andeq	ip, sl, r3, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac9c:	20042a00 	andcs	r2, r4, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    aca0:	000037fa 	strdeq	r3, [r0], -sl
    aca4:	e91d2402 	ldmdb	sp, {r1, sl, sp}
    aca8:	2b000009 	blcs	acd4 <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x24>
    acac:	006c6168 	rsbeq	r6, ip, r8, ror #2
_ZN16CI2C_TransactionlsIhEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    acb0:	a00b0509 	andge	r0, fp, r9, lsl #10
    acb4:	2c00000b 	stccs	0, cr0, [r0], {11}
    acb8:	00000487 	andeq	r0, r0, r7, lsl #9
    acbc:	761c0709 	ldrvc	r0, [ip], -r9, lsl #14
    acc0:	80000000 	andhi	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    acc4:	2c0ee6b2 	stccs	6, cr14, [lr], {178}	; 0xb2
    acc8:	000005cc 	andeq	r0, r0, ip, asr #11
    accc:	f11d0a09 			; <UNDEFINED> instruction: 0xf11d0a09
    acd0:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    acd4:	2c200000 	stccs	0, cr0, [r0], #-0
    acd8:	00000452 	andeq	r0, r0, r2, asr r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    acdc:	f11d0d09 			; <UNDEFINED> instruction: 0xf11d0d09
    ace0:	00000000 	andeq	r0, r0, r0
    ace4:	2d202000 	stccs	0, cr2, [r0, #-0]
    ace8:	0000058a 	andeq	r0, r0, sl, lsl #11
    acec:	6a181009 	bvs	60ed18 <_bss_end+0x5fd028>
    acf0:	36000000 	strcc	r0, [r0], -r0
    acf4:	0003732c 	andeq	r7, r3, ip, lsr #6
    acf8:	1d420900 	vstrne.16	s1, [r2, #-0]	; <UNPREDICTABLE>
    acfc:	000000f1 	strdeq	r0, [r0], -r1
    ad00:	20215000 	eorcs	r5, r1, r0
    ad04:	00034a2c 	andeq	r4, r3, ip, lsr #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ad08:	1d710900 			; <UNDEFINED> instruction: 0x1d710900
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ad0c:	000000f1 	strdeq	r0, [r0], -r1
    ad10:	2000b200 	andcs	fp, r0, r0, lsl #4
    ad14:	0002b62c 	andeq	fp, r2, ip, lsr #12
    ad18:	1da40900 			; <UNDEFINED> instruction: 0x1da40900
_ZN16CSegment_DisplayC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:124
CSegment_Display::CSegment_Display()
    ad1c:	000000f1 	strdeq	r0, [r0], -r1
    ad20:	2000b400 	andcs	fp, r0, r0, lsl #8
    ad24:	0003642c 	andeq	r6, r3, ip, lsr #8
    ad28:	1db30900 			; <UNDEFINED> instruction: 0x1db30900
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:126
, mOutput('\0')
    ad2c:	000000f1 	strdeq	r0, [r0], -r1
    ad30:	20104000 	andscs	r4, r0, r0
    ad34:	0003312c 	andeq	r3, r3, ip, lsr #2
    ad38:	1dbe0900 			; <UNDEFINED> instruction: 0x1dbe0900
    ad3c:	000000f1 	strdeq	r0, [r0], -r1
    ad40:	20205000 	eorcs	r5, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:129
}
    ad44:	0003ef2c 	andeq	lr, r3, ip, lsr #30
    ad48:	1dbf0900 			; <UNDEFINED> instruction: 0x1dbf0900
    ad4c:	000000f1 	strdeq	r0, [r0], -r1
    ad50:	20804000 	addcs	r4, r0, r0
    ad54:	00045c2c 	andeq	r5, r4, ip, lsr #24
_ZN16CSegment_Display4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:132
{
    ad58:	1dc00900 	vstrne.16	s1, [r0]	; <UNPREDICTABLE>
    ad5c:	000000f1 	strdeq	r0, [r0], -r1
    ad60:	20805000 	addcs	r5, r0, r0
    ad64:	0af22e00 	beq	ffc9656c <_bss_end+0xffc8487c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:133
    if (mOpened)
    ad68:	022e0000 	eoreq	r0, lr, #0
    ad6c:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    ad70:	00000b12 	andeq	r0, r0, r2, lsl fp
    ad74:	000b222e 	andeq	r2, fp, lr, lsr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:134
        return false;
    ad78:	0b2f2e00 	bleq	bd6580 <_bss_end+0xbc4890>
    ad7c:	3f2e0000 	svccc	0x002e0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:136
    if (!sShift_Register.Open())
    ad80:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    ad84:	00000b4f 	andeq	r0, r0, pc, asr #22
    ad88:	000b5f2e 	andeq	r5, fp, lr, lsr #30
    ad8c:	0b6f2e00 	bleq	1bd6594 <_bss_end+0x1bc48a4>
    ad90:	7f2e0000 	svcvc	0x002e0000
    ad94:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    ad98:	00000b8f 	andeq	r0, r0, pc, lsl #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:137
        return false;
    ad9c:	6d656d2b 	stclvs	13, cr6, [r5, #-172]!	; 0xffffff54
    ada0:	0b060a00 	bleq	18d5a8 <_bss_end+0x17b8b8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:139
    mOpened = true;
    ada4:	00000c30 	andeq	r0, r0, r0, lsr ip
    ada8:	0037aa2c 	eorseq	sl, r7, ip, lsr #20
    adac:	180a0a00 	stmdane	sl, {r9, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:141
    return true;
    adb0:	0000006a 	andeq	r0, r0, sl, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:142
}
    adb4:	00020000 	andeq	r0, r2, r0
    adb8:	0037b42c 	eorseq	fp, r7, ip, lsr #8
    adbc:	180e0a00 	stmdane	lr, {r9, fp}
    adc0:	0000006a 	andeq	r0, r0, sl, rrx
_ZN16CSegment_Display5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:145
{
    adc4:	20000000 	andcs	r0, r0, r0
    adc8:	0037942f 	eorseq	r9, r7, pc, lsr #8
    adcc:	18110a00 	ldmdane	r1, {r9, fp}
    add0:	0000006a 	andeq	r0, r0, sl, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:146
    if (!mOpened)
    add4:	832c4000 			; <UNDEFINED> instruction: 0x832c4000
    add8:	0a000037 	beq	aebc <_ZN16CSegment_Display5WriteEc+0x80>
    addc:	006a1814 	rsbeq	r1, sl, r4, lsl r8
    ade0:	00000000 	andeq	r0, r0, r0
    ade4:	792f1ffe 	stmdbvc	pc!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}	; <UNPREDICTABLE>
    ade8:	0a000037 	beq	aecc <_ZN16CSegment_Display5WriteEc+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:149
    sShift_Register.Close();
    adec:	006a1817 	rsbeq	r1, sl, r7, lsl r8
    adf0:	7ff80000 	svcvc	0x00f80000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:151
    mOpened = false;
    adf4:	0be32e00 	bleq	ff8d65fc <_bss_end+0xff8c490c>
    adf8:	f32e0000 	vhadd.u32	d0, d14, d0
    adfc:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    ae00:	00000c03 	andeq	r0, r0, r3, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:147
        return;
    ae04:	000c112e 	andeq	r1, ip, lr, lsr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:152
}
    ae08:	0c212e00 	stceq	14, cr2, [r1], #-0
    ae0c:	f2300000 	vhadd.s<illegal width 64>	d0, d0, d0
    ae10:	ff000038 			; <UNDEFINED> instruction: 0xff000038
_ZNK16CSegment_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:155
{
    ae14:	07090b0f 	streq	r0, [r9, -pc, lsl #22]
    ae18:	00000ce3 	andeq	r0, r0, r3, ror #25
    ae1c:	0037de0d 	eorseq	sp, r7, sp, lsl #28
    ae20:	0d0c0b00 	vstreq	d0, [ip, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:156
    return mOpened;
    ae24:	00000ce3 	andeq	r0, r0, r3, ror #25
    ae28:	37d92100 	ldrbcc	r2, [r9, r0, lsl #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:157
}
    ae2c:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
    ae30:	00384a0a 	eorseq	r4, r8, sl, lsl #20
    ae34:	000c7800 	andeq	r7, ip, r0, lsl #16
    ae38:	000c8800 	andeq	r8, ip, r0, lsl #16
_ZN16CSegment_Display5WriteEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:160
{
    ae3c:	0cf41400 	cfldrdeq	mvd1, [r4]
    ae40:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    ae44:	16000000 	strne	r0, [r0], -r0
    ae48:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    ae4c:	38f21b00 	ldmcc	r2!, {r8, r9, fp, ip}^
    ae50:	110b0000 	mrsne	r0, (UNDEF: 11)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:161
    if (!mOpened)
    ae54:	00386505 	eorseq	r6, r8, r5, lsl #10
    ae58:	000cf400 	andeq	pc, ip, r0, lsl #8
    ae5c:	0ca10100 	stfeqs	f0, [r1]
    ae60:	0ca70000 	stceq	0, cr0, [r7]
    ae64:	f4140000 			; <UNDEFINED> instruction: 0xf4140000
    ae68:	0000000c 	andeq	r0, r0, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:164
    uint8_t idx = static_cast<uint8_t>(c);
    ae6c:	0037c41b 	eorseq	ip, r7, fp, lsl r4
    ae70:	0e140b00 	vnmlseq.f64	d0, d4, d0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167
    if (idx < 32 || idx >= 128)
    ae74:	0000380b 	andeq	r3, r0, fp, lsl #16
    ae78:	0000005e 	andeq	r0, r0, lr, asr r0
    ae7c:	000cc001 	andeq	ip, ip, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167 (discriminator 1)
    ae80:	000cc600 	andeq	ip, ip, r0, lsl #12
    ae84:	0cf41400 	cfldrdeq	mvd1, [r4]
    ae88:	22000000 	andcs	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:171
    sShift_Register.Shift_In(static_cast<uint8_t>(~(mCharacter_Map[idx - 32])));
    ae8c:	000037cf 	andeq	r3, r0, pc, asr #15
    ae90:	d30a160b 	movwle	r1, #42507	; 0xa60b
    ae94:	01000038 	tsteq	r0, r8, lsr r0
    ae98:	00000cd7 	ldrdeq	r0, [r0], -r7
    ae9c:	000cf414 	andeq	pc, ip, r4, lsl r4	; <UNPREDICTABLE>
    aea0:	005e1600 	subseq	r1, lr, r0, lsl #12
    aea4:	00000000 	andeq	r0, r0, r0
    aea8:	00003f0e 	andeq	r3, r0, lr, lsl #30
    aeac:	000cf400 	andeq	pc, ip, r0, lsl #8
    aeb0:	006f3100 	rsbeq	r3, pc, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:162
        return;
    aeb4:	0ffe0000 	svceq	0x00fe0000
    aeb8:	49041000 	stmdbmi	r4, {ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:168
        return;
    aebc:	2000000c 	andcs	r0, r0, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:172
}
    aec0:	00003918 	andeq	r3, r0, r8, lsl r9
    aec4:	4916190b 	ldmdbmi	r6, {r0, r1, r3, r8, fp, ip}
    aec8:	3200000c 	andcc	r0, r0, #12
    aecc:	0000072b 	andeq	r0, r0, fp, lsr #14
_ZNK16CSegment_Display4ReadEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:175
{
    aed0:	05121101 	ldreq	r1, [r2, #-257]	; 0xfffffeff
    aed4:	011cd403 	tsteq	ip, r3, lsl #8
    aed8:	00383300 	eorseq	r3, r8, r0, lsl #6
    aedc:	0d1f0000 	ldceq	0, cr0, [pc, #-0]	; aee4 <_ZNK16CSegment_Display4ReadEv+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:176
    if (!mOpened)
    aee0:	00340000 	eorseq	r0, r4, r0
    aee4:	0d250410 	cfstrseq	mvf0, [r5, #-64]!	; 0xffffffc0
    aee8:	04350000 	ldrteq	r0, [r5], #-0
    aeec:	00002030 	andeq	r2, r0, r0, lsr r0
    aef0:	00000d14 	andeq	r0, r0, r4, lsl sp
    aef4:	003a1236 	eorseq	r1, sl, r6, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:177
        return '\0';
    aef8:	00eab000 	rsceq	fp, sl, r0
    aefc:	00001c00 	andeq	r1, r0, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:179
    return mOutput;
    af00:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    af04:	00000241 	andeq	r0, r0, r1, asr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af08:	0000ea64 	andeq	lr, r0, r4, ror #20
    af0c:	0000004c 	andeq	r0, r0, ip, asr #32
    af10:	0d729c01 	ldcleq	12, cr9, [r2, #-4]!
    af14:	3b380000 	blcc	e0af1c <_bss_end+0xdf922c>
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af18:	01000003 	tsteq	r0, r3
    af1c:	38010114 	stmdacc	r1, {r2, r4, r8}
    af20:	02000000 	andeq	r0, r0, #0
    af24:	34387491 	ldrtcc	r7, [r8], #-1169	; 0xfffffb6f
    af28:	01000007 	tsteq	r0, r7
    af2c:	38010114 	stmdacc	r1, {r2, r4, r8}
    af30:	02000000 	andeq	r0, r0, #0
    af34:	39007091 	stmdbcc	r0, {r0, r4, r7, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180 (discriminator 1)
    af38:	00000a84 	andeq	r0, r0, r4, lsl #21
    af3c:	00000d90 	muleq	r0, r0, sp
    af40:	0000eaf8 	strdeq	lr, [r0], -r8
    af44:	0000002c 	andeq	r0, r0, ip, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    af48:	0d9d9c01 	ldceq	12, cr9, [sp, #4]
    af4c:	54290000 	strtpl	r0, [r9], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af50:	0000f600 	andeq	pc, r0, r0, lsl #12
    af54:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
    af58:	0ad30000 	beq	ff4caf60 <_bss_end+0xff4b9270>
    af5c:	91020000 	mrsls	r0, (UNDEF: 2)
    af60:	aa390074 	bge	e4b138 <_bss_end+0xe39448>
_GLOBAL__sub_I_sSegment_Display():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    af64:	bb00000a 	bllt	af94 <_ZN15CShift_RegisterC1Ejjj+0x14>
    af68:	cc00000d 	stcgt	0, cr0, [r0], {13}
    af6c:	2c0000ea 	stccs	0, cr0, [r0], {234}	; 0xea
    af70:	01000000 	mrseq	r0, (UNDEF: 0)
    af74:	000dc89c 	muleq	sp, ip, r8
    af78:	00542900 	subseq	r2, r4, r0, lsl #18
    af7c:	00000531 	andeq	r0, r0, r1, lsr r5
_ZN15CShift_RegisterC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:7
CShift_Register::CShift_Register(uint32_t latchPin, uint32_t dataPin, uint32_t clockPin)
    af80:	00032c3a 	andeq	r2, r3, sl, lsr ip
    af84:	000ad300 	andeq	sp, sl, r0, lsl #6
    af88:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    af8c:	06d93b00 	ldrbeq	r3, [r9], r0, lsl #22
    af90:	d6010000 	strle	r0, [r1], -r0
    af94:	000de206 	andeq	lr, sp, r6, lsl #4
    af98:	00e6a800 	rsceq	sl, r6, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:10
, mClock_Pin(clockPin)
    af9c:	0003bc00 	andeq	fp, r3, r0, lsl #24
    afa0:	4a9c0100 	bmi	fe70b3a8 <_bss_end+0xfe6f96b8>
    afa4:	3a00000e 	bcc	afe4 <_ZN15CShift_Register4OpenEv+0x10>
    afa8:	0000032c 	andeq	r0, r0, ip, lsr #6
    afac:	00000715 	andeq	r0, r0, r5, lsl r7
    afb0:	3c6c9102 	stfccp	f1, [ip], #-8
    afb4:	00003af5 	strdeq	r3, [r0], -r5
    afb8:	a419d701 	ldrge	sp, [r9], #-1793	; 0xfffff8ff
    afbc:	02000002 	andeq	r0, r0, #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:13
}
    afc0:	723d6891 	eorsvc	r6, sp, #9502720	; 0x910000
    afc4:	d7010030 	smladxle	r1, r0, r0, r0
    afc8:	00005e2b 	andeq	r5, r0, fp, lsr #28
    afcc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    afd0:	0031723d 	eorseq	r7, r1, sp, lsr r2
_ZN15CShift_Register4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:16
{
    afd4:	5e38d701 	cdppl	7, 3, cr13, cr8, cr1, {0}
    afd8:	02000000 	andeq	r0, r0, #0
    afdc:	723d6091 	eorsvc	r6, sp, #145	; 0x91
    afe0:	d7010032 	smladxle	r1, r2, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:17
    if (mOpened)
    afe4:	00005e45 	andeq	r5, r0, r5, asr #28
    afe8:	00910200 	addseq	r0, r1, r0, lsl #4
    afec:	003a2d3c 	eorseq	r2, sl, ip, lsr sp
    aff0:	56d70100 	ldrbpl	r0, [r7], r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:18
        return false;
    aff4:	00000725 	andeq	r0, r0, r5, lsr #14
    aff8:	3e049102 	mvfccs	f1, f2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:22
    if (!sGPIO.Reserve_Pin(mLatch_Pin, true, true))
    affc:	000002e0 	andeq	r0, r0, r0, ror #5
    b000:	0100663f 	tsteq	r0, pc, lsr r6
    b004:	016214e2 	cmneq	r2, r2, ror #9
    b008:	91020000 	mrsls	r0, (UNDEF: 2)
    b00c:	40000074 	andmi	r0, r0, r4, ror r0
    b010:	000006a5 	andeq	r0, r0, r5, lsr #13
    b014:	6406c701 	strvs	ip, [r6], #-1793	; 0xfffff8ff
    b018:	4400000e 	strmi	r0, [r0], #-14
    b01c:	640000e6 	strvs	r0, [r0], #-230	; 0xffffff1a
    b020:	01000000 	mrseq	r0, (UNDEF: 0)
    b024:	000eb99c 	muleq	lr, ip, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:23
        return false;
    b028:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
    b02c:	07150000 	ldreq	r0, [r5, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:25
    if (!sGPIO.Reserve_Pin(mData_Pin, true, true))
    b030:	91020000 	mrsls	r0, (UNDEF: 2)
    b034:	3af53c74 	bcc	ffd5a20c <_bss_end+0xffd4851c>
    b038:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    b03c:	00028b16 	andeq	r8, r2, r6, lsl fp
    b040:	70910200 	addsvc	r0, r1, r0, lsl #4
    b044:	0030723d 	eorseq	r7, r0, sp, lsr r2
    b048:	5e28c801 	cdppl	8, 2, cr12, cr8, cr1, {0}
    b04c:	02000000 	andeq	r0, r0, #0
    b050:	723d6c91 	eorsvc	r6, sp, #37120	; 0x9100
    b054:	c8010031 	stmdagt	r1, {r0, r4, r5}
    b058:	00005e35 	andeq	r5, r0, r5, lsr lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:27
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b05c:	68910200 	ldmvs	r1, {r9}
    b060:	0032723d 	eorseq	r7, r2, sp, lsr r2
    b064:	5e42c801 	cdppl	8, 4, cr12, cr2, cr1, {0}
    b068:	02000000 	andeq	r0, r0, #0
    b06c:	2d3c0091 	ldccs	0, cr0, [ip, #-580]!	; 0xfffffdbc
    b070:	0100003a 	tsteq	r0, sl, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:28
        return false;
    b074:	072553c8 	streq	r5, [r5, -r8, asr #7]!
    b078:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:31
    if (!sGPIO.Reserve_Pin(mClock_Pin, true, true))
    b07c:	813b0004 	teqhi	fp, r4
    b080:	01000006 	tsteq	r0, r6
    b084:	0ed306ba 	mrceq	6, 6, r0, cr3, cr10, {5}
    b088:	e5b00000 	ldr	r0, [r0, #0]!
    b08c:	00940000 	addseq	r0, r4, r0
    b090:	9c010000 	stcls	0, cr0, [r1], {-0}
    b094:	00000efe 	strdeq	r0, [r0], -lr
    b098:	00032c3a 	andeq	r2, r3, sl, lsr ip
    b09c:	00071500 	andeq	r1, r7, r0, lsl #10
    b0a0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b0a4:	0001603c 	andeq	r6, r1, ip, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:33
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b0a8:	34ba0100 	ldrtcc	r0, [sl], #256	; 0x100
    b0ac:	0000005e 	andeq	r0, r0, lr, asr r0
    b0b0:	41689102 	cmnmi	r8, r2, lsl #2
    b0b4:	00003a90 	muleq	r0, r0, sl
    b0b8:	6c13bc01 	ldcvs	12, cr11, [r3], {1}
    b0bc:	02000005 	andeq	r0, r0, #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:34
        sGPIO.Free_Pin(mData_Pin, true, true);
    b0c0:	3b007491 	blcc	2830c <_bss_end+0x1661c>
    b0c4:	0000065d 	andeq	r0, r0, sp, asr r6
    b0c8:	180aa301 	stmdane	sl, {r0, r8, r9, sp, pc}
    b0cc:	0400000f 	streq	r0, [r0], #-15
    b0d0:	ac0000e5 	stcge	0, cr0, [r0], {229}	; 0xe5
    b0d4:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:35
        return false;
    b0d8:	000f5a9c 	muleq	pc, ip, sl	; <UNPREDICTABLE>
    b0dc:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:39
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Output);
    b0e0:	07150000 	ldreq	r0, [r5, -r0]
    b0e4:	91020000 	mrsls	r0, (UNDEF: 2)
    b0e8:	3ab23c6c 	bcc	fec9a2a0 <_bss_end+0xfec885b0>
    b0ec:	a3010000 	movwge	r0, #4096	; 0x1000
    b0f0:	00016237 	andeq	r6, r1, r7, lsr r2
    b0f4:	68910200 	ldmvs	r1, {r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:40
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Output);
    b0f8:	003a9041 	eorseq	r9, sl, r1, asr #32
    b0fc:	13a70100 			; <UNDEFINED> instruction: 0x13a70100
    b100:	0000056c 	andeq	r0, r0, ip, ror #10
    b104:	42709102 	rsbsmi	r9, r0, #-2147483648	; 0x80000000
    b108:	0000e538 	andeq	lr, r0, r8, lsr r5
    b10c:	00000068 	andeq	r0, r0, r8, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:41
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Output);
    b110:	0100693f 	tsteq	r0, pc, lsr r9
    b114:	005e13ac 	subseq	r1, lr, ip, lsr #7
    b118:	91020000 	mrsls	r0, (UNDEF: 2)
    b11c:	3b000074 	blcc	b2f4 <_ZN15CShift_Register8Shift_InEb+0xac>
    b120:	000005a6 	andeq	r0, r0, r6, lsr #11
    b124:	74068a01 	strvc	r8, [r6], #-2561	; 0xfffff5ff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:43
    mOpened = true;
    b128:	0000000f 	andeq	r0, r0, pc
    b12c:	040000e4 	streq	r0, [r0], #-228	; 0xffffff1c
    b130:	01000001 	tsteq	r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:45
    return true;
    b134:	000fae9c 	muleq	pc, ip, lr	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:46
}
    b138:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
    b13c:	07150000 	ldreq	r0, [r5, -r0]
    b140:	91020000 	mrsls	r0, (UNDEF: 2)
    b144:	3abb3c6c 	bcc	feeda2fc <_bss_end+0xfeec860c>
_ZN15CShift_Register5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:49
{
    b148:	8a010000 	bhi	4b150 <_bss_end+0x39460>
    b14c:	00056636 	andeq	r6, r5, r6, lsr r6
    b150:	68910200 	ldmvs	r1, {r9}
    b154:	646c6f3f 	strbtvs	r6, [ip], #-3903	; 0xfffff0c1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:50
    if (!mOpened)
    b158:	13940100 	orrsne	r0, r4, #0, 2
    b15c:	00000fae 	andeq	r0, r0, lr, lsr #31
    b160:	41749102 	cmnmi	r4, r2, lsl #2
    b164:	0000399b 	muleq	r0, fp, r9
    b168:	df0a9501 	svcle	0x000a9501
    b16c:	02000004 	andeq	r0, r0, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:54
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Input);
    b170:	10007391 	mulne	r0, r1, r3
    b174:	0000b804 	andeq	fp, r0, r4, lsl #16
    b178:	06233b00 	strteq	r3, [r3], -r0, lsl #22
    b17c:	5d010000 	stcpl	0, cr0, [r1, #-0]
    b180:	000fce06 	andeq	ip, pc, r6, lsl #28
    b184:	00e29800 	rsceq	r9, r2, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:55
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Input);
    b188:	00016800 	andeq	r6, r1, r0, lsl #16
    b18c:	ea9c0100 	b	fe70b594 <_bss_end+0xfe6f98a4>
    b190:	3a00000f 	bcc	b1d4 <_ZN15CShift_Register5CloseEv+0x8c>
    b194:	0000032c 	andeq	r0, r0, ip, lsr #6
    b198:	00000715 	andeq	r0, r0, r5, lsl r7
    b19c:	416c9102 	cmnmi	ip, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:56
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Input);
    b1a0:	00000e05 	andeq	r0, r0, r5, lsl #28
    b1a4:	66196d01 	ldrvs	r6, [r9], -r1, lsl #26
    b1a8:	02000005 	andeq	r0, r0, #5
    b1ac:	3b007491 	blcc	283f8 <_bss_end+0x16708>
    b1b0:	000005ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    b1b4:	040a3801 	streq	r3, [sl], #-2049	; 0xfffff7ff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:59
    sGPIO.Free_Pin(mLatch_Pin, true, true);
    b1b8:	98000010 	stmdals	r0, {r4}
    b1bc:	000000e0 	andeq	r0, r0, r0, ror #1
    b1c0:	01000002 	tsteq	r0, r2
    b1c4:	0010559c 	mulseq	r0, ip, r5
    b1c8:	032c3a00 			; <UNDEFINED> instruction: 0x032c3a00
    b1cc:	07150000 	ldreq	r0, [r5, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:60
    sGPIO.Free_Pin(mData_Pin, true, true);
    b1d0:	91020000 	mrsls	r0, (UNDEF: 2)
    b1d4:	39933c64 	ldmibcc	r3, {r2, r5, r6, sl, fp, ip, sp}
    b1d8:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    b1dc:	0000ea39 	andeq	lr, r0, r9, lsr sl
    b1e0:	60910200 	addsvs	r0, r1, r0, lsl #4
    b1e4:	003ab741 	eorseq	fp, sl, r1, asr #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:61
    sGPIO.Free_Pin(mClock_Pin, true, true);
    b1e8:	193a0100 	ldmdbne	sl!, {r8}
    b1ec:	00000566 	andeq	r0, r0, r6, ror #10
    b1f0:	41709102 	cmnmi	r0, r2, lsl #2
    b1f4:	00003581 	andeq	r3, r0, r1, lsl #11
    b1f8:	6c0b4801 	stcvs	8, cr4, [fp], {1}
    b1fc:	02000005 	andeq	r0, r0, #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:63
    mOpened = false;
    b200:	a8426c91 	stmdage	r2, {r0, r4, r7, sl, fp, sp, lr}^
    b204:	400000e1 	andmi	r0, r0, r1, ror #1
    b208:	3f000000 	svccc	0x00000000
    b20c:	54010069 	strpl	r0, [r1], #-105	; 0xffffff97
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:51
        return;
    b210:	00005e13 	andeq	r5, r0, r3, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:64
}
    b214:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b218:	e43b0000 	ldrt	r0, [fp], #-0
    b21c:	01000005 	tsteq	r0, r5
_ZNK15CShift_Register9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:67
{
    b220:	106f0620 	rsbne	r0, pc, r0, lsr #12
    b224:	df840000 	svcle	0x00840000
    b228:	01140000 	tsteq	r4, r0
    b22c:	9c010000 	stcls	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:68
    return mOpened;
    b230:	000010b1 	strheq	r1, [r0], -r1	; <UNPREDICTABLE>
    b234:	00032c3a 	andeq	r2, r3, sl, lsr ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:69
}
    b238:	00071500 	andeq	r1, r7, r0, lsl #10
    b23c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    b240:	003ab741 	eorseq	fp, sl, r1, asr #14
    b244:	19220100 	stmdbne	r2!, {r8}
_ZN15CShift_Register8Shift_InEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:72
{
    b248:	00000566 	andeq	r0, r0, r6, ror #10
    b24c:	41709102 	cmnmi	r0, r2, lsl #2
    b250:	00003581 	andeq	r3, r0, r1, lsl #11
    b254:	6c0b2a01 			; <UNDEFINED> instruction: 0x6c0b2a01
    b258:	02000005 	andeq	r0, r0, #5
    b25c:	38426c91 	stmdacc	r2, {r0, r4, r7, sl, fp, sp, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:73
    if (!mOpened)
    b260:	400000e0 	andmi	r0, r0, r0, ror #1
    b264:	3f000000 	svccc	0x00000000
    b268:	32010069 	andcc	r0, r1, #105	; 0x69
    b26c:	00005e13 	andeq	r5, r0, r3, lsl lr
    b270:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b274:	3e400000 	cdpcc	0, 4, cr0, cr0, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:79
    sGPIO.Set_Output(mLatch_Pin, false);
    b278:	01000006 	tsteq	r0, r6
    b27c:	10cb0f1b 	sbcne	r0, fp, fp, lsl pc
    b280:	df400000 	svcle	0x00400000
    b284:	00440000 	subeq	r0, r4, r0
    b288:	9c010000 	stcls	0, cr0, [r1], {-0}
    b28c:	000010d8 	ldrdeq	r1, [r0], -r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:82
    sGPIO.Set_Output(mData_Pin, bit);
    b290:	00032c3a 	andeq	r2, r3, sl, lsr ip
    b294:	00072000 	andeq	r2, r7, r0
    b298:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b29c:	05c54300 	strbeq	r4, [r5, #768]	; 0x300
    b2a0:	13010000 	movwne	r0, #4096	; 0x1000
    b2a4:	0010e901 	andseq	lr, r0, r1, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:84
    sGPIO.Set_Output(mClock_Pin, true);
    b2a8:	10f30000 	rscsne	r0, r3, r0
    b2ac:	2c440000 	marcs	acc0, r0, r4
    b2b0:	15000003 	strne	r0, [r0, #-3]
    b2b4:	00000007 	andeq	r0, r0, r7
    b2b8:	0010d845 	andseq	sp, r0, r5, asr #16
    b2bc:	0039bd00 	eorseq	fp, r9, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87
    for (i = 0; i < 0x10; i++)
    b2c0:	00110a00 	andseq	r0, r1, r0, lsl #20
    b2c4:	00def800 	sbcseq	pc, lr, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 3)
    b2c8:	00004800 	andeq	r4, r0, r0, lsl #16
    b2cc:	469c0100 	ldrmi	r0, [ip], r0, lsl #2
    b2d0:	000010e9 	andeq	r1, r0, r9, ror #1
    b2d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b2d8:	00002200 	andeq	r2, r0, r0, lsl #4
    b2dc:	b2000200 	andlt	r0, r0, #0, 4
    b2e0:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 2)
    b2e4:	003e0501 	eorseq	r0, lr, r1, lsl #10
    b2e8:	00eb2400 	rsceq	r2, fp, r0, lsl #8
    b2ec:	00eb8000 	rsceq	r8, fp, r0
    b2f0:	003afd00 	eorseq	pc, sl, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:91
    sGPIO.Set_Output(mClock_Pin, false);
    b2f4:	0000c500 	andeq	ip, r0, r0, lsl #10
    b2f8:	003b4e00 	eorseq	r4, fp, r0, lsl #28
    b2fc:	1e800100 	rmfnes	f0, f0, f0
    b300:	02000000 	andeq	r0, r0, #0
    b304:	002ec600 	eoreq	ip, lr, r0, lsl #12
    b308:	99010400 	stmdbls	r1, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94
    for (i = 0; i < 0x10; i++)
    b30c:	1800003e 	stmdane	r0, {r1, r2, r3, r4, r5}
    b310:	5a000003 	bpl	b324 <_ZN15CShift_Register8Shift_InEb+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 3)
    b314:	c500003b 	strgt	r0, [r0, #-59]	; 0xffffffc5
    b318:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    b31c:	0100003b 	tsteq	r0, fp, lsr r0
    b320:	00014b80 	andeq	r4, r1, r0, lsl #23
    b324:	d8000400 	stmdale	r0, {sl}
    b328:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
    b32c:	00001401 	andeq	r1, r0, r1, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 2)
    b330:	3bff0400 	blcc	fffcc338 <_bss_end+0xfffba648>
    b334:	00c50000 	sbceq	r0, r5, r0
    b338:	ebf00000 	bl	ffc0b340 <_bss_end+0xffbf9650>
    b33c:	01180000 	tsteq	r8, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:98
    sGPIO.Set_Output(mLatch_Pin, true);
    b340:	3f600000 	svccc	0x00600000
    b344:	a2020000 	andge	r0, r2, #0
    b348:	0100003b 	tsteq	r0, fp, lsr r0
    b34c:	00310702 	eorseq	r0, r1, r2, lsl #14
    b350:	04030000 	streq	r0, [r3], #-0
    b354:	00000037 	andeq	r0, r0, r7, lsr r0
    b358:	3bf60204 	blcc	ffd8bb70 <_bss_end+0xffd79e80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:74
        return;
    b35c:	03010000 	movweq	r0, #4096	; 0x1000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:99
}
    b360:	00003107 	andeq	r3, r0, r7, lsl #2
    b364:	3bab0500 	blcc	feacc76c <_bss_end+0xfeabaa7c>
    b368:	06010000 	streq	r0, [r1], -r0
_ZN15CShift_Register8Shift_InEh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:102
{
    b36c:	00005010 	andeq	r5, r0, r0, lsl r0
    b370:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    b374:	00746e69 	rsbseq	r6, r4, r9, ror #28
    b378:	003bdf05 	eorseq	sp, fp, r5, lsl #30
    b37c:	10080100 	andne	r0, r8, r0, lsl #2
    b380:	00000050 	andeq	r0, r0, r0, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:103
    if (!mOpened)
    b384:	00002507 	andeq	r2, r0, r7, lsl #10
    b388:	00007600 	andeq	r7, r0, r0, lsl #12
    b38c:	00760800 	rsbseq	r0, r6, r0, lsl #16
    b390:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
    b394:	0900ffff 	stmdbeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    b398:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:109
    sGPIO.Set_Output(mLatch_Pin, false);
    b39c:	b6050000 	strlt	r0, [r5], -r0
    b3a0:	0100003b 	tsteq	r0, fp, lsr r0
    b3a4:	0063150b 	rsbeq	r1, r3, fp, lsl #10
    b3a8:	4b050000 	blmi	14b3b0 <_bss_end+0x1396c0>
    b3ac:	0100003c 	tsteq	r0, ip, lsr r0
    b3b0:	0063150d 	rsbeq	r1, r3, sp, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112
    for (int j = 7; j >= 0; j--)
    b3b4:	38070000 	stmdacc	r7, {}	; <UNPREDICTABLE>
    b3b8:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 1)
    b3bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b3c0:	00000076 	andeq	r0, r0, r6, ror r0
    b3c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:114
        sGPIO.Set_Output(mData_Pin, ((byte >> j) & 0x1));
    b3c8:	3be80500 	blcc	ffa0c7d0 <_bss_end+0xff9faae0>
    b3cc:	10010000 	andne	r0, r1, r0
    b3d0:	00009515 	andeq	r9, r0, r5, lsl r5
    b3d4:	3bc40500 	blcc	ff10c7dc <_bss_end+0xff0faaec>
    b3d8:	12010000 	andne	r0, r1, #0
    b3dc:	00009515 	andeq	r9, r0, r5, lsl r5
    b3e0:	3bd10a00 	blcc	ff44dbe8 <_bss_end+0xff43bef8>
    b3e4:	2b010000 	blcs	4b3ec <_bss_end+0x396fc>
    b3e8:	00005010 	andeq	r5, r0, r0, lsl r0
    b3ec:	00ecb000 	rsceq	fp, ip, r0
    b3f0:	00005800 	andeq	r5, r0, r0, lsl #16
    b3f4:	ea9c0100 	b	fe70b7fc <_bss_end+0xfe6f9b0c>
    b3f8:	0b000000 	bleq	b400 <_ZN15CShift_Register8Shift_InEh+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:115
        sGPIO.Set_Output(mClock_Pin, true);
    b3fc:	00003c70 	andeq	r3, r0, r0, ror ip
    b400:	ea0f2d01 	b	3d680c <_bss_end+0x3c4b1c>
    b404:	02000000 	andeq	r0, r0, #0
    b408:	03007491 	movweq	r7, #1169	; 0x491
    b40c:	00003804 	andeq	r3, r0, r4, lsl #16
    b410:	3c630a00 			; <UNDEFINED> instruction: 0x3c630a00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117
        for (i = 0; i < 0x10; i++)
    b414:	1f010000 	svcne	0x00010000
    b418:	00005010 	andeq	r5, r0, r0, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 3)
    b41c:	00ec5800 	rsceq	r5, ip, r0, lsl #16
    b420:	00005800 	andeq	r5, r0, r0, lsl #16
    b424:	1a9c0100 	bne	fe70b82c <_bss_end+0xfe6f9b3c>
    b428:	0b000001 	bleq	b434 <_ZN15CShift_Register8Shift_InEh+0xc8>
    b42c:	00003c70 	andeq	r3, r0, r0, ror ip
    b430:	1a0f2101 	bne	3d383c <_bss_end+0x3c1b4c>
    b434:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 2)
    b438:	03007491 	movweq	r7, #1169	; 0x491
    b43c:	00002504 	andeq	r2, r0, r4, lsl #10
    b440:	3c580c00 	mrrccc	12, 0, r0, r8, cr0
    b444:	14010000 	strne	r0, [r1], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:120
        sGPIO.Set_Output(mClock_Pin, false);
    b448:	00005010 	andeq	r5, r0, r0, lsl r0
    b44c:	00ebf000 	rsceq	pc, fp, r0
    b450:	00006800 	andeq	r6, r0, r0, lsl #16
    b454:	489c0100 	ldmmi	ip, {r8}
    b458:	0d000001 	stceq	0, cr0, [r0, #-4]
    b45c:	16010069 	strne	r0, [r1], -r9, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122
        for (i = 0; i < 0x10; i++)
    b460:	0001480a 	andeq	r4, r1, sl, lsl #16
    b464:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 3)
    b468:	50040300 	andpl	r0, r4, r0, lsl #6
    b46c:	00000000 	andeq	r0, r0, r0
    b470:	00000674 	andeq	r0, r0, r4, ror r6
    b474:	2f9e0004 	svccs	0x009e0004
    b478:	01040000 	mrseq	r0, (UNDEF: 4)
    b47c:	00000014 	andeq	r0, r0, r4, lsl r0
    b480:	003cba04 	eorseq	fp, ip, r4, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 2)
    b484:	0000c500 	andeq	ip, r0, r0, lsl #10
    b488:	00ed0800 	rsceq	r0, sp, r0, lsl #16
    b48c:	00055400 	andeq	r5, r5, r0, lsl #8
    b490:	00404700 	subeq	r4, r0, r0, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 2)
    for (int j = 7; j >= 0; j--)
    b494:	08010200 	stmdaeq	r1, {r9}
    b498:	00000573 	andeq	r0, r0, r3, ror r5
    b49c:	00002503 	andeq	r2, r0, r3, lsl #10
    b4a0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:127
    sGPIO.Set_Output(mLatch_Pin, true);
    b4a4:	00000599 	muleq	r0, r9, r5
    b4a8:	69050404 	stmdbvs	r5, {r2, sl}
    b4ac:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    b4b0:	00000038 	andeq	r0, r0, r8, lsr r0
    b4b4:	6a080102 	bvs	20b8c4 <_bss_end+0x1f9bd4>
    b4b8:	05000005 	streq	r0, [r0, #-5]
    b4bc:	00000044 	andeq	r0, r0, r4, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:104
        return;
    b4c0:	00079806 	andeq	r9, r7, r6, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b4c4:	07080200 	streq	r0, [r8, -r0, lsl #4]
    b4c8:	0000005c 	andeq	r0, r0, ip, asr r0
    b4cc:	dc070202 	sfmle	f0, 4, [r7], {2}
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b4d0:	06000003 	streq	r0, [r0], -r3
    b4d4:	000005e4 	andeq	r0, r0, r4, ror #11
    b4d8:	74070902 	strvc	r0, [r7], #-2306	; 0xfffff6fe
    b4dc:	03000000 	movweq	r0, #0
    b4e0:	00000063 	andeq	r0, r0, r3, rrx
    b4e4:	91070402 	tstls	r7, r2, lsl #8
    b4e8:	07000045 	streq	r0, [r0, -r5, asr #32]
    b4ec:	00003d2e 	andeq	r3, r0, lr, lsr #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128 (discriminator 1)
    b4f0:	07060308 	streq	r0, [r6, -r8, lsl #6]
    b4f4:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
    b4f8:	003d8108 	eorseq	r8, sp, r8, lsl #2
    b4fc:	120a0300 	andne	r0, sl, #0, 6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:5
CShift_Register sShift_Register(2, 3, 4);
    b500:	00000063 	andeq	r0, r0, r3, rrx
    b504:	07650800 	strbeq	r0, [r5, -r0, lsl #16]!
    b508:	0c030000 	stceq	0, cr0, [r3], {-0}
    b50c:	0001c40e 	andeq	ip, r1, lr, lsl #8
    b510:	2e090400 	cfcpyscs	mvf0, mvf9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b514:	0300003d 	movweq	r0, #61	; 0x3d
    b518:	3e740910 			; <UNDEFINED> instruction: 0x3e740910
    b51c:	01cb0000 	biceq	r0, fp, r0
    b520:	bb010000 	bllt	4b528 <_bss_end+0x39838>
    b524:	c6000000 	strgt	r0, [r0], -r0
_GLOBAL__sub_I_sShift_Register():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b528:	0a000000 	beq	b530 <_GLOBAL__sub_I_sShift_Register+0x8>
    b52c:	000001cb 	andeq	r0, r0, fp, asr #3
    b530:	0001d10b 	andeq	sp, r1, fp, lsl #2
    b534:	2d090000 	stccs	0, cr0, [r9, #-0]
    b538:	0300003d 	movweq	r0, #61	; 0x3d
    b53c:	3e461512 	mcrcc	5, 2, r1, cr6, cr2, {0}
    b540:	01dc0000 	bicseq	r0, ip, r0
_ZN6CTimerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:26
CTimer::CTimer(unsigned long timer_reg_base)
    b544:	df010000 	svcle	0x00010000
    b548:	ea000000 	b	b550 <_ZN6CTimerC1Em+0xc>
    b54c:	0a000000 	beq	b554 <_ZN6CTimerC1Em+0x10>
    b550:	000001cb 	andeq	r0, r0, fp, asr #3
    b554:	0000380a 	andeq	r3, r0, sl, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:27
: mTimer_Regs(reinterpret_cast<unsigned int*>(timer_reg_base))
    b558:	3f090000 	svccc	0x00090000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:28
, mCallback(nullptr)
    b55c:	03000007 	movweq	r0, #7
    b560:	3d570e15 	ldclcc	14, cr0, [r7, #-84]	; 0xffffffac
    b564:	01c40000 	biceq	r0, r4, r0
    b568:	03010000 	movweq	r0, #4096	; 0x1000
    b56c:	09000001 	stmdbeq	r0, {r0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:31
}
    b570:	0a000001 	beq	b57c <_ZN6CTimerC1Em+0x38>
    b574:	000001de 	ldrdeq	r0, [r0], -lr
    b578:	0f4a0c00 	svceq	0x004a0c00
    b57c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    b580:	003e1b0e 	eorseq	r1, lr, lr, lsl #22
_ZN6CTimer4RegsEN3hal9Timer_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:34
{
    b584:	011e0100 	tsteq	lr, r0, lsl #2
    b588:	01240000 			; <UNDEFINED> instruction: 0x01240000
    b58c:	cb0a0000 	blgt	28b594 <_bss_end+0x2798a4>
    b590:	00000001 	andeq	r0, r0, r1
    b594:	0018a20c 	andseq	sl, r8, ip, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:35
    return mTimer_Regs[static_cast<unsigned int>(reg)];
    b598:	0e1b0300 	cdpeq	3, 1, cr0, cr11, cr0, {0}
    b59c:	00003d3c 	andeq	r3, r0, ip, lsr sp
    b5a0:	00013901 	andeq	r3, r1, r1, lsl #18
    b5a4:	00014400 	andeq	r4, r1, r0, lsl #8
    b5a8:	01cb0a00 	biceq	r0, fp, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:36
}
    b5ac:	c40b0000 	strgt	r0, [fp], #-0
    b5b0:	00000001 	andeq	r0, r0, r1
    b5b4:	000fc20c 	andeq	ip, pc, ip, lsl #4
    b5b8:	0e1d0300 	cdpeq	3, 1, cr0, cr13, cr0, {0}
_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:39
{
    b5bc:	00003c76 	andeq	r3, r0, r6, ror ip
    b5c0:	00015901 	andeq	r5, r1, r1, lsl #18
    b5c4:	00016e00 	andeq	r6, r1, r0, lsl #28
    b5c8:	01cb0a00 	biceq	r0, fp, r0, lsl #20
    b5cc:	500b0000 	andpl	r0, fp, r0
    b5d0:	0b000000 	bleq	b5d8 <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler+0x1c>
    b5d4:	00000050 	andeq	r0, r0, r0, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:40
    Regs(hal::Timer_Reg::Load) = delay;
    b5d8:	0001c40b 	andeq	ip, r1, fp, lsl #8
    b5dc:	6b0c0000 	blvs	30b5e4 <_bss_end+0x2f98f4>
    b5e0:	0300003e 	movweq	r0, #62	; 0x3e
    b5e4:	3d0d0e1f 	stccc	14, cr0, [sp, #-124]	; 0xffffff84
    b5e8:	83010000 	movwhi	r0, #4096	; 0x1000
    b5ec:	98000001 	stmdals	r0, {r0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:43
    reg.counter_32b = 1;
    b5f0:	0a000001 	beq	b5fc <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler+0x40>
    b5f4:	000001cb 	andeq	r0, r0, fp, asr #3
    b5f8:	0000500b 	andeq	r5, r0, fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:44
    reg.interrupt_enabled = 1;
    b5fc:	00500b00 	subseq	r0, r0, r0, lsl #22
    b600:	250b0000 	strcs	r0, [fp, #-0]
    b604:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:45
    reg.timer_enabled = 1;
    b608:	003e3b0d 	eorseq	r3, lr, sp, lsl #22
    b60c:	0e210300 	cdpeq	3, 2, cr0, cr1, cr0, {0}
    b610:	00003de8 	andeq	r3, r0, r8, ror #27
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:46
    reg.prescaler = static_cast<uint8_t>(prescaler);
    b614:	0001a901 	andeq	sl, r1, r1, lsl #18
    b618:	01cb0a00 	biceq	r0, fp, r0, lsl #20
    b61c:	500b0000 	andpl	r0, fp, r0
    b620:	0b000000 	bleq	b628 <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler+0x6c>
    b624:	00000050 	andeq	r0, r0, r0, asr r0
    b628:	0001d10b 	andeq	sp, r1, fp, lsl #2
    b62c:	03000000 	movweq	r0, #0
    b630:	0000007b 	andeq	r0, r0, fp, ror r0
    b634:	48020102 	stmdami	r2, {r1, r8}
    b638:	0e000045 	cdpeq	0, 0, cr0, cr0, cr5, {2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:48
    Regs(hal::Timer_Reg::Control) = *reinterpret_cast<unsigned int*>(&reg);
    b63c:	00007b04 	andeq	r7, r0, r4, lsl #22
    b640:	2c040e00 	stccs	14, cr0, [r4], {-0}
    b644:	03000000 	movweq	r0, #0
    b648:	000001d1 	ldrdeq	r0, [r0], -r1
    b64c:	040e040f 	streq	r0, [lr], #-1039	; 0xfffffbf1
    b650:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
    b654:	001c4410 	andseq	r4, ip, r0, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:50
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b658:	1a060400 	bne	18c660 <_bss_end+0x17a970>
    b65c:	0000006f 	andeq	r0, r0, pc, rrx
    b660:	05600305 	strbeq	r0, [r0, #-773]!	; 0xfffffcfb
    b664:	75100001 	ldrvc	r0, [r0, #-1]
    b668:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    b66c:	006f1a08 	rsbeq	r1, pc, r8, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:52
    mCallback = callback;
    b670:	03050000 	movweq	r0, #20480	; 0x5000
    b674:	00010564 	andeq	r0, r1, r4, ror #10
    b678:	001d9310 	andseq	r9, sp, r0, lsl r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:53
}
    b67c:	1a0a0400 	bne	28c684 <_bss_end+0x27a994>
    b680:	0000006f 	andeq	r0, r0, pc, rrx
    b684:	05680305 	strbeq	r0, [r8, #-773]!	; 0xfffffcfb
_ZN6CTimer7DisableEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:56
{
    b688:	79100001 	ldmdbvc	r0, {r0}
    b68c:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    b690:	006f1a0c 	rsbeq	r1, pc, ip, lsl #20
    b694:	03050000 	movweq	r0, #20480	; 0x5000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:57
    volatile TTimer_Ctl_Flags& reg = reinterpret_cast<volatile TTimer_Ctl_Flags&>(Regs(hal::Timer_Reg::Control));
    b698:	0001056c 	andeq	r0, r1, ip, ror #10
    b69c:	00243211 	eoreq	r3, r4, r1, lsl r2
    b6a0:	38040500 	stmdacc	r4, {r8, sl}
    b6a4:	04000000 	streq	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:59
    reg.interrupt_enabled = 0;
    b6a8:	02510c0e 	subseq	r0, r1, #3584	; 0xe00
    b6ac:	37120000 	ldrcc	r0, [r2, -r0]
    b6b0:	0000001d 	andeq	r0, r0, sp, lsl r0
    b6b4:	001e3d12 	andseq	r3, lr, r2, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:60
    reg.timer_enabled = 0;
    b6b8:	db120100 	blle	48bac0 <_bss_end+0x479dd0>
    b6bc:	0200001c 	andeq	r0, r0, #28
    b6c0:	00251300 	eoreq	r1, r5, r0, lsl #6
    b6c4:	02610000 	rsbeq	r0, r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:61
}
    b6c8:	74140000 	ldrvc	r0, [r4], #-0
    b6cc:	0f000000 	svceq	0x00000000
    b6d0:	01d11300 	bicseq	r1, r1, r0, lsl #6
_ZN6CTimer12IRQ_CallbackEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:64
{
    b6d4:	02710000 	rsbseq	r0, r1, #0
    b6d8:	74140000 	ldrvc	r0, [r4], #-0
    b6dc:	04000000 	streq	r0, [r0], #-0
    b6e0:	3c9c1500 	cfldr32cc	mvfx1, [ip], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:65
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b6e4:	07010000 	streq	r0, [r1, -r0]
    b6e8:	0002610d 	andeq	r6, r2, sp, lsl #2
    b6ec:	88030500 	stmdahi	r3, {r8, sl}
    b6f0:	0700010b 	streq	r0, [r0, -fp, lsl #2]
    b6f4:	00000b98 	muleq	r0, r8, fp
    b6f8:	07030518 	smladeq	r3, r8, r5, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:67
    if (mCallback)
    b6fc:	000004c4 	andeq	r0, r0, r4, asr #9
    b700:	000b1616 	andeq	r1, fp, r6, lsl r6
    b704:	74040700 	strvc	r0, [r4], #-1792	; 0xfffff900
    b708:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:68
        mCallback();
    b70c:	b0011006 	andlt	r1, r1, r6
    b710:	17000002 	strne	r0, [r0, -r2]
    b714:	00584548 	subseq	r4, r8, r8, asr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:69
}
    b718:	45441710 	strbmi	r1, [r4, #-1808]	; 0xfffff8f0
    b71c:	000a0043 	andeq	r0, sl, r3, asr #32
    b720:	00029003 	andeq	r9, r2, r3
_ZN6CTimer20Is_Timer_IRQ_PendingEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:72
{
    b724:	0b231800 	bleq	8d172c <_bss_end+0x8bfa3c>
    b728:	05080000 	streq	r0, [r8, #-0]
    b72c:	02d90c24 	sbcseq	r0, r9, #36, 24	; 0x2400
    b730:	79190000 	ldmdbvc	r9, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:73
    return Regs(hal::Timer_Reg::IRQ_Masked);
    b734:	16260500 	strtne	r0, [r6], -r0, lsl #10
    b738:	00000074 	andeq	r0, r0, r4, ror r0
    b73c:	00781900 	rsbseq	r1, r8, r0, lsl #18
    b740:	74162705 	ldrvc	r2, [r6], #-1797	; 0xfffff8fb
    b744:	04000000 	streq	r0, [r0], #-0
    b748:	0c751a00 			; <UNDEFINED> instruction: 0x0c751a00
    b74c:	0c050000 	stceq	0, cr0, [r5], {-0}
    b750:	0002b01b 	andeq	fp, r2, fp, lsl r0
    b754:	1b0a0100 	blne	28bb5c <_bss_end+0x279e6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b758:	00000be8 	andeq	r0, r0, r8, ror #23
    b75c:	d7280d05 	strle	r0, [r8, -r5, lsl #26]!
    b760:	01000001 	tsteq	r0, r1
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b764:	000b981c 	andeq	r9, fp, ip, lsl r8
    b768:	0e100500 	cfmul32eq	mvfx0, mvfx0, mvfx0
    b76c:	00000c62 	andeq	r0, r0, r2, ror #24
    b770:	000004c4 	andeq	r0, r0, r4, asr #9
    b774:	00030d01 	andeq	r0, r3, r1, lsl #26
    b778:	00032200 	andeq	r2, r3, r0, lsl #4
    b77c:	04c40a00 	strbeq	r0, [r4], #2560	; 0xa00
    b780:	740b0000 	strvc	r0, [fp], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74 (discriminator 1)
    b784:	0b000000 	bleq	b78c <_Z41__static_initialization_and_destruction_0ii+0x28>
    b788:	00000074 	andeq	r0, r0, r4, ror r0
    b78c:	0000740b 	andeq	r7, r0, fp, lsl #8
    b790:	a20c0000 	andge	r0, ip, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:4
CTimer sTimer(hal::Timer_Base);
    b794:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    b798:	0b830a12 	bleq	fe0cdfe8 <_bss_end+0xfe0bc2f8>
    b79c:	37010000 	strcc	r0, [r1, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b7a0:	3d000003 	stccc	0, cr0, [r0, #-12]
    b7a4:	0a000003 	beq	b7b8 <_GLOBAL__sub_I_sTimer>
    b7a8:	000004c4 	andeq	r0, r0, r4, asr #9
    b7ac:	0ba10900 	bleq	fe84dbb4 <_bss_end+0xfe83bec4>
    b7b0:	14050000 	strne	r0, [r5], #-0
    b7b4:	000c050f 	andeq	r0, ip, pc, lsl #10
_GLOBAL__sub_I_sTimer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b7b8:	0004ca00 	andeq	ip, r4, r0, lsl #20
    b7bc:	03560100 	cmpeq	r6, #0, 2
    b7c0:	03610000 	cmneq	r1, #0
    b7c4:	c40a0000 	strgt	r0, [sl], #-0
    b7c8:	0b000004 	bleq	b7e0 <_ZN5CTRNGC1Ej+0xc>
    b7cc:	00000025 	andeq	r0, r0, r5, lsr #32
    b7d0:	0ba10900 	bleq	fe84dbd8 <_bss_end+0xfe83bee8>
_ZN5CTRNGC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:8
CTRNG::CTRNG(uint32_t trng_reg_base)
    b7d4:	15050000 	strne	r0, [r5, #-0]
    b7d8:	000bac0f 	andeq	sl, fp, pc, lsl #24
    b7dc:	0004ca00 	andeq	ip, r4, r0, lsl #20
    b7e0:	037a0100 	cmneq	sl, #0, 2
    b7e4:	03850000 	orreq	r0, r5, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:10
, mOpened(0)
    b7e8:	c40a0000 	strgt	r0, [sl], #-0
    b7ec:	0b000004 	bleq	b804 <_ZN5CTRNGC1Ej+0x30>
    b7f0:	000001d1 	ldrdeq	r0, [r0], -r1
    b7f4:	0ba10900 	bleq	fe84dbfc <_bss_end+0xfe83bf0c>
    b7f8:	16050000 	strne	r0, [r5], -r0
    b7fc:	000c890f 	andeq	r8, ip, pc, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:13
}
    b800:	0004ca00 	andeq	ip, r4, r0, lsl #20
    b804:	039e0100 	orrseq	r0, lr, #0, 2
    b808:	03a90000 			; <UNDEFINED> instruction: 0x03a90000
    b80c:	c40a0000 	strgt	r0, [sl], #-0
    b810:	0b000004 	bleq	b828 <_ZN5CTRNG4OpenEb+0x14>
_ZN5CTRNG4OpenEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:16
{
    b814:	00000290 	muleq	r0, r0, r2
    b818:	0ba10900 	bleq	fe84dc20 <_bss_end+0xfe83bf30>
    b81c:	17050000 	strne	r0, [r5, -r0]
    b820:	000c340f 	andeq	r3, ip, pc, lsl #8
    b824:	0004ca00 	andeq	ip, r4, r0, lsl #20
    b828:	03c20100 	biceq	r0, r2, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19
    if (mOpened && exclusive)
    b82c:	03cd0000 	biceq	r0, sp, #0
    b830:	c40a0000 	strgt	r0, [sl], #-0
    b834:	0b000004 	bleq	b84c <_ZN5CTRNG4OpenEb+0x38>
    b838:	00000074 	andeq	r0, r0, r4, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19 (discriminator 1)
    b83c:	0ba10900 	bleq	fe84dc44 <_bss_end+0xfe83bf54>
    b840:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
    b844:	000bf40f 	andeq	pc, fp, pc, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:20
        return false;
    b848:	0004ca00 	andeq	ip, r4, r0, lsl #20
    b84c:	03e60100 	mvneq	r0, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:22
    mOpened++;
    b850:	03f10000 	mvnseq	r0, #0
    b854:	c40a0000 	strgt	r0, [sl], #-0
    b858:	0b000004 	bleq	b870 <_ZN5CTRNG4OpenEb+0x5c>
    b85c:	000001c4 	andeq	r0, r0, r4, asr #3
    b860:	0ab41d00 	beq	fed12c68 <_bss_end+0xfed00f78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:24
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] = TRNG_Warmup_Count;
    b864:	1b050000 	blne	14b86c <_bss_end+0x139b7c>
    b868:	000a8411 	andeq	r8, sl, r1, lsl r4
    b86c:	00040500 	andeq	r0, r4, r0, lsl #10
    b870:	00040b00 	andeq	r0, r4, r0, lsl #22
    b874:	04c40a00 	strbeq	r0, [r4], #2560	; 0xa00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:25
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Int_Mask)] |=
    b878:	1d000000 	stcne	0, cr0, [r0, #-0]
    b87c:	00000aa7 	andeq	r0, r0, r7, lsr #21
    b880:	45111c05 	ldrmi	r1, [r1, #-3077]	; 0xfffff3fb
    b884:	1f00000c 	svcne	0x0000000c
    b888:	25000004 	strcs	r0, [r0, #-4]
    b88c:	0a000004 	beq	b8a4 <_ZN5CTRNG4OpenEb+0x90>
    b890:	000004c4 	andeq	r0, r0, r4, asr #9
    b894:	0a5f1d00 	beq	17d2c9c <_bss_end+0x17c0fac>
    b898:	1d050000 	stcne	0, cr0, [r5, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:27
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] |= 1; // zapneme TRNG
    b89c:	000b2d11 	andeq	r2, fp, r1, lsl sp
    b8a0:	00043900 	andeq	r3, r4, r0, lsl #18
    b8a4:	00043f00 	andeq	r3, r4, r0, lsl #30
    b8a8:	04c40a00 	strbeq	r0, [r4], #2560	; 0xa00
    b8ac:	1d000000 	stcne	0, cr0, [r0, #-0]
    b8b0:	000013e1 	andeq	r1, r0, r1, ror #7
    b8b4:	1e0a1f05 	cdpne	15, 0, cr1, cr10, cr5, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:30
    while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    b8b8:	5300000c 	movwpl	r0, #12
    b8bc:	59000004 	stmdbpl	r0, {r2}
    b8c0:	0a000004 	beq	b8d8 <_ZN5CTRNG4OpenEb+0xc4>
    b8c4:	000004c4 	andeq	r0, r0, r4, asr #9
    b8c8:	0aa21d00 	beq	fe892cd0 <_bss_end+0xfe880fe0>
    b8cc:	21050000 	mrscs	r0, (UNDEF: 5)
    b8d0:	000bbf0a 	andeq	fp, fp, sl, lsl #30
    b8d4:	00046d00 	andeq	r6, r4, r0, lsl #26
    b8d8:	00048200 	andeq	r8, r4, r0, lsl #4
    b8dc:	04c40a00 	strbeq	r0, [r4], #2560	; 0xa00
    b8e0:	740b0000 	strvc	r0, [fp], #-0
    b8e4:	0b000000 	bleq	b8ec <_ZN5CTRNG4OpenEb+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:33
    return true;
    b8e8:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:34
}
    b8ec:	0000740b 	andeq	r7, r0, fp, lsl #8
    b8f0:	4f080000 	svcmi	0x00080000
    b8f4:	0500000b 	streq	r0, [r0, #-11]
    b8f8:	04dc232b 	ldrbeq	r2, [ip], #811	; 0x32b
_ZN5CTRNG5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:37
{
    b8fc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b900:	00000c16 	andeq	r0, r0, r6, lsl ip
    b904:	74122c05 	ldrvc	r2, [r2], #-3077	; 0xfffff3fb
    b908:	04000000 	streq	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:38
    if (!mOpened)
    b90c:	000bd608 	andeq	sp, fp, r8, lsl #12
    b910:	122d0500 	eorne	r0, sp, #0, 10
    b914:	00000074 	andeq	r0, r0, r4, ror r0
    b918:	0bdf0808 	bleq	ff7cd940 <_bss_end+0xff7bbc50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:41
    mOpened--;
    b91c:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    b920:	0002b50f 	andeq	fp, r2, pc, lsl #10
    b924:	51080c00 	tstpl	r8, r0, lsl #24
    b928:	0500000a 	streq	r0, [r0, #-10]
    b92c:	0290122f 	addseq	r1, r0, #-268435454	; 0xf0000002
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:43
    if (mOpened == 0)
    b930:	00140000 	andseq	r0, r4, r0
    b934:	0283040e 	addeq	r0, r3, #234881024	; 0xe000000
    b938:	041e0000 	ldreq	r0, [lr], #-0
    b93c:	00000283 	andeq	r0, r0, r3, lsl #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:44
        mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] = 0;
    b940:	0025040e 	eoreq	r0, r5, lr, lsl #8
    b944:	040e0000 	streq	r0, [lr], #-0
    b948:	0000004b 	andeq	r0, r0, fp, asr #32
    b94c:	0004d603 	andeq	sp, r4, r3, lsl #12
    b950:	0b681f00 	bleq	1a13558 <_bss_end+0x1a01868>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:39
        return;
    b954:	32050000 	andcc	r0, r5, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:45
}
    b958:	00028311 	andeq	r8, r2, r1, lsl r3
    b95c:	3d772000 	ldclcc	0, cr2, [r7, #-0]
    b960:	a5010000 	strge	r0, [r1, #-0]
_ZNK5CTRNG9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:48
{
    b964:	003d8906 	eorseq	r8, sp, r6, lsl #18
    b968:	00f20400 	rscseq	r0, r2, r0, lsl #8
    b96c:	00005800 	andeq	r5, r0, r0, lsl #16
    b970:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:49
    return (mOpened > 0);
    b974:	21000005 	tstcs	r0, r5
    b978:	00003da5 	andeq	r3, r0, r5, lsr #27
    b97c:	7b13a701 	blvc	4f5588 <_bss_end+0x4e3898>
    b980:	02000000 	andeq	r0, r0, #0
    b984:	20007091 	mulcs	r0, r1, r0
    b988:	00003dde 	ldrdeq	r3, [r0], -lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:50
}
    b98c:	0d068401 	cfstrseq	mvf8, [r6, #-4]
    b990:	1800003e 	stmdane	r0, {r1, r2, r3, r4, r5}
    b994:	ec0000f1 	stc	0, cr0, [r0], {241}	; 0xf1
    b998:	01000000 	mrseq	r0, (UNDEF: 0)
_ZN5CTRNG17Get_Random_NumberEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:53
{
    b99c:	00055b9c 	muleq	r5, ip, fp
    b9a0:	00692200 	rsbeq	r2, r9, r0, lsl #4
    b9a4:	3f128601 	svccc	0x00128601
    b9a8:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:54
    if (mOpened == 0)
    b9ac:	66227091 			; <UNDEFINED> instruction: 0x66227091
    b9b0:	0e880100 	rmfeqe	f0, f0, f0
    b9b4:	00000063 	andeq	r0, r0, r3, rrx
    b9b8:	21749102 	cmncs	r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:55
        return 4; // https://xkcd.com/221/
    b9bc:	00003daa 	andeq	r3, r0, sl, lsr #27
    b9c0:	5b0a8f01 	blpl	2af5cc <_bss_end+0x29d8dc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:61
    return mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Data)];
    b9c4:	02000005 	andeq	r0, r0, #5
    b9c8:	13006c91 	movwne	r6, #3217	; 0xc91
    b9cc:	00000025 	andeq	r0, r0, r5, lsr #32
    b9d0:	0000056b 	andeq	r0, r0, fp, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b9d4:	00007414 	andeq	r7, r0, r4, lsl r4
    b9d8:	20000100 	andcs	r0, r0, r0, lsl #2
    b9dc:	00003e8d 	andeq	r3, r0, sp, lsl #29
    b9e0:	97066a01 	strls	r6, [r6, -r1, lsl #20]
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b9e4:	2800003d 	stmdacs	r0, {r0, r2, r3, r4, r5}
    b9e8:	f00000f0 			; <UNDEFINED> instruction: 0xf00000f0
    b9ec:	01000000 	mrseq	r0, (UNDEF: 0)
    b9f0:	0005a09c 	muleq	r5, ip, r0
    b9f4:	00692200 	rsbeq	r2, r9, r0, lsl #4
    b9f8:	3f126c01 	svccc	0x00126c01
    b9fc:	02000000 	andeq	r0, r0, #0
    ba00:	66227091 			; <UNDEFINED> instruction: 0x66227091
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62 (discriminator 1)
    ba04:	0e6e0100 	poweqe	f0, f6, f0
    ba08:	00000063 	andeq	r0, r0, r3, rrx
    ba0c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    ba10:	003dd420 	eorseq	sp, sp, r0, lsr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:3
CTRNG sTRNG(hal::TRNG_Base);
    ba14:	06500100 	ldrbeq	r0, [r0], -r0, lsl #2
    ba18:	00003cac 	andeq	r3, r0, ip, lsr #25
    ba1c:	0000ef38 	andeq	lr, r0, r8, lsr pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    ba20:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ba24:	05d59c01 	ldrbeq	r9, [r5, #3073]	; 0xc01
    ba28:	69220000 	stmdbvs	r2!, {}	; <UNPREDICTABLE>
    ba2c:	12520100 	subsne	r0, r2, #0, 2
    ba30:	0000003f 	andeq	r0, r0, pc, lsr r0
    ba34:	22709102 	rsbscs	r9, r0, #-2147483648	; 0x80000000
_GLOBAL__sub_I_sTRNG():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    ba38:	54010066 	strpl	r0, [r1], #-102	; 0xffffff9a
    ba3c:	0000630e 	andeq	r6, r0, lr, lsl #6
    ba40:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    ba44:	3dca2000 	stclcc	0, cr2, [sl]
    ba48:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    ba4c:	003e5d06 	eorseq	r5, lr, r6, lsl #26
    ba50:	00edf800 	rsceq	pc, sp, r0, lsl #16
_ZN11CFilesystemC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:10
CFilesystem::CFilesystem()
    ba54:	00014000 	andeq	r4, r1, r0
    ba58:	469c0100 	ldrmi	r0, [ip], r0, lsl #2
    ba5c:	22000006 	andcs	r0, r0, #6
    ba60:	30010069 	andcc	r0, r1, r9, rrx
    ba64:	00003f12 	andeq	r3, r0, r2, lsl pc
    ba68:	68910200 	ldmvs	r1, {r9}
    ba6c:	67736d22 	ldrbvs	r6, [r3, -r2, lsr #26]!
    ba70:	11320100 	teqne	r2, r0, lsl #2
    ba74:	000001d1 	ldrdeq	r0, [r0], -r1
    ba78:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
    ba7c:	34010066 	strcc	r0, [r1], #-102	; 0xffffff9a
    ba80:	0000630e 	andeq	r6, r0, lr, lsl #6
    ba84:	70910200 	addsvc	r0, r1, r0, lsl #4
    ba88:	003c9721 	eorseq	r9, ip, r1, lsr #14
    ba8c:	0e350100 	rsfeqs	f0, f5, f0
    ba90:	00000063 	andeq	r0, r0, r3, rrx
    ba94:	216c9102 	cmncs	ip, r2, lsl #2
    ba98:	00003e35 	andeq	r3, r0, r5, lsr lr
    ba9c:	630e3c01 	movwvs	r3, #60417	; 0xec01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:14
    mRoot.parent = nullptr;
    baa0:	02000000 	andeq	r0, r0, #0
    baa4:	a5216491 	strge	r6, [r1, #-1169]!	; 0xfffffb6f
    baa8:	0100003c 	tsteq	r0, ip, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:15
    mRoot.next = nullptr;
    baac:	02510a3d 	subseq	r0, r1, #249856	; 0x3d000
    bab0:	91020000 	mrsls	r0, (UNDEF: 2)
    bab4:	c0230054 	eorgt	r0, r3, r4, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:16
    mRoot.children = &mRoot_Dev;
    bab8:	0100003d 	tsteq	r0, sp, lsr r0
    babc:	3db20614 	ldccc	6, cr0, [r2, #80]!	; 0x50
    bac0:	ed080000 	stc	0, cr0, [r8, #-0]
    bac4:	00f00000 	rscseq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:17
    mRoot.isDirectory = true;
    bac8:	9c010000 	stcls	0, cr0, [r1], {-0}
    bacc:	01006922 	tsteq	r0, r2, lsr #18
    bad0:	003f1216 	eorseq	r1, pc, r6, lsl r2	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:18
    mRoot.driver_idx = NoFilesystemDriver;
    bad4:	91020000 	mrsls	r0, (UNDEF: 2)
    bad8:	00662270 	rsbeq	r2, r6, r0, ror r2
    badc:	630e1801 	movwvs	r1, #59393	; 0xe801
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:19
    mRoot.name[0] = '\0';
    bae0:	02000000 	andeq	r0, r0, #0
    bae4:	00007491 	muleq	r0, r1, r4
    bae8:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:21
    mRoot_Dev.parent = &mRoot;
    baec:	31e60004 	mvncc	r0, r4
    baf0:	01040000 	mrseq	r0, (UNDEF: 4)
    baf4:	00000014 	andeq	r0, r0, r4, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:22
    mRoot_Dev.children = nullptr;
    baf8:	003f2804 	eorseq	r2, pc, r4, lsl #16
    bafc:	0000c500 	andeq	ip, r0, r0, lsl #10
    bb00:	00f25c00 	rscseq	r5, r2, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:23
    mRoot_Dev.next = &mRoot_Sys;
    bb04:	00018c00 	andeq	r8, r1, r0, lsl #24
    bb08:	00439000 	subeq	r9, r3, r0
    bb0c:	08010200 	stmdaeq	r1, {r9}
    bb10:	00000573 	andeq	r0, r0, r3, ror r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:24
    mRoot_Dev.isDirectory = true;
    bb14:	00002503 	andeq	r2, r0, r3, lsl #10
    bb18:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    bb1c:	00000599 	muleq	r0, r9, r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:25
    mRoot_Dev.driver_idx = NoFilesystemDriver;
    bb20:	69050404 	stmdbvs	r5, {r2, sl}
    bb24:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    bb28:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:26
    strncpy(mRoot_Dev.name, "DEV", 4);
    bb2c:	02020000 	andeq	r0, r2, #0
    bb30:	0003dc07 	andeq	sp, r3, r7, lsl #24
    bb34:	05e40500 	strbeq	r0, [r4, #1280]!	; 0x500
    bb38:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    bb3c:	00005e07 	andeq	r5, r0, r7, lsl #28
    bb40:	004d0300 	subeq	r0, sp, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:28
    mRoot_Sys.parent = &mRoot;
    bb44:	04020000 	streq	r0, [r2], #-0
    bb48:	00459107 	subeq	r9, r5, r7, lsl #2
    bb4c:	21610600 	cmncs	r1, r0, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:29
    mRoot_Sys.children = nullptr;
    bb50:	04050000 	streq	r0, [r5], #-0
    bb54:	00000038 	andeq	r0, r0, r8, lsr r0
    bb58:	840c4303 	strhi	r4, [ip], #-771	; 0xfffffcfd
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:30
    mRoot_Sys.next = &mRoot_Mnt;
    bb5c:	07000000 	streq	r0, [r0, -r0]
    bb60:	00002290 	muleq	r0, r0, r2
    bb64:	20250700 	eorcs	r0, r5, r0, lsl #14
    bb68:	00010000 	andeq	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:31
    mRoot_Sys.isDirectory = true;
    bb6c:	001c4408 	andseq	r4, ip, r8, lsl #8
    bb70:	1a060200 	bne	18c378 <_bss_end+0x17a688>
    bb74:	00000059 	andeq	r0, r0, r9, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:32
    mRoot_Sys.driver_idx = NoFilesystemDriver;
    bb78:	07480305 	strbeq	r0, [r8, -r5, lsl #6]
    bb7c:	75080001 	strvc	r0, [r8, #-1]
    bb80:	0200001c 	andeq	r0, r0, #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:33
    strncpy(mRoot_Sys.name, "SYS", 4);
    bb84:	00591a08 	subseq	r1, r9, r8, lsl #20
    bb88:	03050000 	movweq	r0, #20480	; 0x5000
    bb8c:	0001074c 	andeq	r0, r1, ip, asr #14
    bb90:	001d9308 	andseq	r9, sp, r8, lsl #6
    bb94:	1a0a0200 	bne	28c39c <_bss_end+0x27a6ac>
    bb98:	00000059 	andeq	r0, r0, r9, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:35
    mRoot_Mnt.parent = &mRoot;
    bb9c:	07500305 	ldrbeq	r0, [r0, -r5, lsl #6]
    bba0:	79080001 	stmdbvc	r8, {r0}
    bba4:	0200001b 	andeq	r0, r0, #27
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:36
    mRoot_Mnt.children = nullptr;
    bba8:	00591a0c 	subseq	r1, r9, ip, lsl #20
    bbac:	03050000 	movweq	r0, #20480	; 0x5000
    bbb0:	00010754 	andeq	r0, r1, r4, asr r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:37
    mRoot_Mnt.next = nullptr;
    bbb4:	00243206 	eoreq	r3, r4, r6, lsl #4
    bbb8:	38040500 	stmdacc	r4, {r8, sl}
    bbbc:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:38
    mRoot_Mnt.isDirectory = true;
    bbc0:	00f10c0e 	rscseq	r0, r1, lr, lsl #24
    bbc4:	37070000 	strcc	r0, [r7, -r0]
    bbc8:	0000001d 	andeq	r0, r0, sp, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:39
    mRoot_Mnt.driver_idx = NoFilesystemDriver;
    bbcc:	001e3d07 	andseq	r3, lr, r7, lsl #26
    bbd0:	db070100 	blle	1cbfd8 <_bss_end+0x1ba2e8>
    bbd4:	0200001c 	andeq	r0, r0, #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:40
    strncpy(mRoot_Mnt.name, "MNT", 4);
    bbd8:	02010200 	andeq	r0, r1, #0, 4
    bbdc:	00004548 	andeq	r4, r0, r8, asr #10
    bbe0:	002c0409 	eoreq	r0, ip, r9, lsl #8
    bbe4:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    bbe8:	0100003f 	tsteq	r0, pc, lsr r0
    bbec:	3eb00a39 			; <UNDEFINED> instruction: 0x3eb00a39
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:41
}
    bbf0:	004d0000 	subeq	r0, sp, r0
    bbf4:	f3980000 	vaddl.u16	q0, d8, d0
    bbf8:	00500000 	subseq	r0, r0, r0
    bbfc:	9c010000 	stcls	0, cr0, [r1], {-0}
    bc00:	00000159 	andeq	r0, r0, r9, asr r1
    bc04:	003ab20b 	eorseq	fp, sl, fp, lsl #4
    bc08:	19390100 	ldmdbne	r9!, {r8}
_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:44
{
    bc0c:	0000004d 	andeq	r0, r0, sp, asr #32
    bc10:	0b6c9102 	bleq	1b30020 <_bss_end+0x1b1e330>
    bc14:	00003f7b 	andeq	r3, r0, fp, ror pc
    bc18:	65303901 	ldrvs	r3, [r0, #-2305]!	; 0xfffff6ff
    bc1c:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:45
    TFS_Tree_Node* child = children;
    bc20:	f80b6891 			; <UNDEFINED> instruction: 0xf80b6891
    bc24:	0100003e 	tsteq	r0, lr, lsr r0
    bc28:	01594139 	cmpeq	r9, r9, lsr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bc2c:	91020000 	mrsls	r0, (UNDEF: 2)
    bc30:	3f0e0c64 	svccc	0x000e0c64
    bc34:	3b010000 	blcc	4bc3c <_bss_end+0x39f4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:49
        if (strncmp(child->name, name, MaxFilenameLength) == 0)
    bc38:	00004d0e 	andeq	r4, r0, lr, lsl #26
    bc3c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    bc40:	0e040d00 	cdpeq	13, 0, cr0, cr4, cr0, {0}
    bc44:	00003f8b 	andeq	r3, r0, fp, lsl #31
    bc48:	fe063301 	cdp2	3, 0, cr3, cr6, cr1, {0}
    bc4c:	6c00003e 	stcvs	0, cr0, [r0], {62}	; 0x3e
    bc50:	2c0000f3 	stccs	0, cr0, [r0], {243}	; 0xf3
    bc54:	01000000 	mrseq	r0, (UNDEF: 0)
    bc58:	0001859c 	muleq	r1, ip, r5
    bc5c:	3ab20b00 	bcc	fec8e864 <_bss_end+0xfec7cb74>
    bc60:	33010000 	movwcc	r0, #4096	; 0x1000
    bc64:	00004d15 	andeq	r4, r0, r5, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:50
            return child;
    bc68:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    bc6c:	04380a00 	ldrteq	r0, [r8], #-2560	; 0xfffff600
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:52
        child = child->next;
    bc70:	26010000 	strcs	r0, [r1], -r0
    bc74:	003eea0a 	eorseq	lr, lr, sl, lsl #20
    bc78:	00004d00 	andeq	r4, r0, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bc7c:	00f31c00 	rscseq	r1, r3, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:55
    return nullptr;
    bc80:	00005000 	andeq	r5, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:56
}
    bc84:	e09c0100 	adds	r0, ip, r0, lsl #2
    bc88:	0b000001 	bleq	bc94 <_ZN11CFilesystem10InitializeEv+0x4>
    bc8c:	00003ab2 			; <UNDEFINED> instruction: 0x00003ab2
_ZN11CFilesystem10InitializeEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:59
{
    bc90:	4d192601 	ldcmi	6, cr2, [r9, #-4]
    bc94:	02000000 	andeq	r0, r0, #0
    bc98:	ba0b6c91 	blt	2e6ee4 <_bss_end+0x2d51f4>
    bc9c:	0100000c 	tsteq	r0, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:60
    sMonitor << "Initializing the FS\n";
    bca0:	00f82b26 	rscseq	r2, r8, r6, lsr #22
    bca4:	91020000 	mrsls	r0, (UNDEF: 2)
    bca8:	0e520b68 	vnmlaeq.f64	d16, d2, d24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67
    for (i = 0; i < gFS_Drivers_Count; i++)
    bcac:	26010000 	strcs	r0, [r1], -r0
    bcb0:	00004d3c 	andeq	r4, r0, ip, lsr sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 1)
    bcb4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    bcb8:	003f850c 	eorseq	r8, pc, ip, lsl #10
    bcbc:	0e280100 	sufeqe	f0, f0, f0
    bcc0:	0000004d 	andeq	r0, r0, sp, asr #32
    bcc4:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:69
        const TFS_Driver* ptr = &gFS_Drivers[i];
    bcc8:	0007150a 	andeq	r1, r7, sl, lsl #10
    bccc:	0a190100 	beq	64c0d4 <_bss_end+0x63a3e4>
    bcd0:	00003f16 	andeq	r3, r0, r6, lsl pc
    bcd4:	0000004d 	andeq	r0, r0, sp, asr #32
    bcd8:	0000f2cc 	andeq	pc, r0, ip, asr #5
    bcdc:	00000050 	andeq	r0, r0, r0, asr r0
    bce0:	023b9c01 	eorseq	r9, fp, #256	; 0x100
    bce4:	b20b0000 	andlt	r0, fp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:71
        mpPtr = ptr->mountPoint;
    bce8:	0100003a 	tsteq	r0, sl, lsr r0
    bcec:	004d1819 	subeq	r1, sp, r9, lsl r8
    bcf0:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:73
        sMonitor << "mount point = " << mpPtr << "\n";
    bcf4:	0cba0b6c 	vldmiaeq	sl!, {d0-<overflow reg d53>}
    bcf8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    bcfc:	0002412a 	andeq	r4, r2, sl, lsr #2
    bd00:	68910200 	ldmvs	r1, {r9}
    bd04:	000e520b 	andeq	r5, lr, fp, lsl #4
    bd08:	3b190100 	blcc	64c110 <_bss_end+0x63a420>
    bd0c:	0000004d 	andeq	r0, r0, sp, asr #32
    bd10:	0c649102 	stfeqp	f1, [r4], #-8
    bd14:	00003f22 	andeq	r3, r0, r2, lsr #30
    bd18:	4d0e1b01 	vstrmi	d1, [lr, #-4]
    bd1c:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:75
        TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bd20:	09007491 	stmdbeq	r0, {r0, r4, r7, sl, ip, sp, lr}
    bd24:	00002504 	andeq	r2, r0, r4, lsl #10
    bd28:	023b0300 	eorseq	r0, fp, #0, 6
    bd2c:	970a0000 	strls	r0, [sl, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    bd30:	0100003e 	tsteq	r0, lr, lsr r0
    bd34:	3ece0a0d 	vdivcc.f32	s1, s28, s26
    bd38:	004d0000 	subeq	r0, sp, r0
    bd3c:	f2880000 	vaddl.s8	q0, d8, d0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bd40:	00440000 	subeq	r0, r4, r0
    bd44:	9c010000 	stcls	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 1)
    bd48:	00000292 	muleq	r0, r2, r2
    bd4c:	003ea70b 	eorseq	sl, lr, fp, lsl #14
    bd50:	1b0d0100 	blne	34c158 <_bss_end+0x33a468>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 2)
    bd54:	000000f8 	strdeq	r0, [r0], -r8
    bd58:	0b6c9102 	bleq	1b30168 <_bss_end+0x1b1e478>
    bd5c:	0000036e 	andeq	r0, r0, lr, ror #6
    bd60:	cc350d01 	ldcgt	13, cr0, [r5], #-4
    bd64:	02000000 	andeq	r0, r0, #0
    bd68:	b20c6891 	andlt	r6, ip, #9502720	; 0x910000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81
                if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bd6c:	0100003a 	tsteq	r0, sl, lsr r0
    bd70:	004d0e0f 	subeq	r0, sp, pc, lsl #28
    bd74:	91020000 	mrsls	r0, (UNDEF: 2)
    bd78:	740f0074 	strvc	r0, [pc], #-116	; bd80 <_ZN11CFilesystem10InitializeEv+0xf0>
    bd7c:	0100003f 	tsteq	r0, pc, lsr r0
    bd80:	3e9c0a03 	vfnmscc.f32	s0, s24, s6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81 (discriminator 1)
    bd84:	004d0000 	subeq	r0, sp, r0
    bd88:	f25c0000 	vhadd.s16	d16, d12, d0
    bd8c:	002c0000 	eoreq	r0, ip, r0
    bd90:	9c010000 	stcls	0, cr0, [r1], {-0}
    bd94:	64697010 	strbtvs	r7, [r9], #-16
    bd98:	0e050100 	adfeqs	f0, f5, f0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:84 (discriminator 3)
                tmpName[j] = mpPtr[j];
    bd9c:	0000004d 	andeq	r0, r0, sp, asr #32
    bda0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    bda4:	00032e00 	andeq	r2, r3, r0, lsl #28
    bda8:	f2000400 	vshl.s8	d0, d0, d0
    bdac:	04000032 	streq	r0, [r0], #-50	; 0xffffffce
    bdb0:	00001401 	andeq	r1, r0, r1, lsl #8
    bdb4:	3f9c0400 	svccc	0x009c0400
    bdb8:	00c50000 	sbceq	r0, r5, r0
    bdbc:	f3e80000 	vaddl.u32	q8, d8, d0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 3)
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bdc0:	04b80000 	ldrteq	r0, [r8], #0
    bdc4:	455f0000 	ldrbmi	r0, [pc, #-0]	; bdcc <_ZN11CFilesystem10InitializeEv+0x13c>
    bdc8:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    bdcc:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:87
            tmpName[j] = '\0';
    bdd0:	00000be8 	andeq	r0, r0, r8, ror #23
    bdd4:	61100501 	tstvs	r0, r1, lsl #10
    bdd8:	11000000 	mrsne	r0, (UNDEF: 0)
    bddc:	33323130 	teqcc	r2, #48, 2
    bde0:	37363534 			; <UNDEFINED> instruction: 0x37363534
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:89
            mpPtr += j;
    bde4:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
    bde8:	46454443 	strbmi	r4, [r5], -r3, asr #8
    bdec:	01040000 	mrseq	r0, (UNDEF: 4)
    bdf0:	00250103 	eoreq	r0, r5, r3, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:90
            if (mpPtr[0] != '\0')
    bdf4:	74050000 	strvc	r0, [r5], #-0
    bdf8:	61000000 	mrsvs	r0, (UNDEF: 0)
    bdfc:	06000000 	streq	r0, [r0], -r0
    be00:	00000066 	andeq	r0, r0, r6, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:92
                mpPtr += 1;
    be04:	51070010 	tstpl	r7, r0, lsl r0
    be08:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    be0c:	45910704 	ldrmi	r0, [r1, #1796]	; 0x704
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:95
            sMonitor << "finding child = " << tmpName << '\n';
    be10:	01080000 	mrseq	r0, (UNDEF: 8)
    be14:	00057308 	andeq	r7, r5, r8, lsl #6
    be18:	006d0700 	rsbeq	r0, sp, r0, lsl #14
    be1c:	2a090000 	bcs	24be24 <_bss_end+0x23a134>
    be20:	0a000000 	beq	be28 <_ZN11CFilesystem10InitializeEv+0x198>
    be24:	00004018 	andeq	r4, r0, r8, lsl r0
    be28:	08066401 	stmdaeq	r6, {r0, sl, sp, lr}
    be2c:	20000040 	andcs	r0, r0, r0, asr #32
    be30:	800000f8 	strdhi	r0, [r0], -r8
    be34:	01000000 	mrseq	r0, (UNDEF: 0)
    be38:	0000fb9c 	muleq	r0, ip, fp
    be3c:	72730b00 	rsbsvc	r0, r3, #0, 22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:97
            tmpNode = node->Find_Child(tmpName);
    be40:	64010063 	strvs	r0, [r1], #-99	; 0xffffff9d
    be44:	0000fb19 	andeq	pc, r0, r9, lsl fp	; <UNPREDICTABLE>
    be48:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    be4c:	7473640b 	ldrbtvc	r6, [r3], #-1035	; 0xfffffbf5
    be50:	24640100 	strbtcs	r0, [r4], #-256	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:99
            if (tmpNode)
    be54:	00000102 	andeq	r0, r0, r2, lsl #2
    be58:	0b609102 	bleq	1830268 <_bss_end+0x181e578>
    be5c:	006d756e 	rsbeq	r7, sp, lr, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:101
                node = tmpNode;
    be60:	042d6401 	strteq	r6, [sp], #-1025	; 0xfffffbff
    be64:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:102
                sMonitor << "child " << tmpName << " was found\n";
    be68:	720c5c91 	andvc	r5, ip, #37120	; 0x9100
    be6c:	01000040 	tsteq	r0, r0, asr #32
    be70:	010b1166 	tsteq	fp, r6, ror #2
    be74:	91020000 	mrsls	r0, (UNDEF: 2)
    be78:	40010c70 	andmi	r0, r1, r0, ror ip
    be7c:	67010000 	strvs	r0, [r1, -r0]
    be80:	0001110b 	andeq	r1, r1, fp, lsl #2
    be84:	6c910200 	lfmvs	f0, 4, [r1], {0}
    be88:	00f8480d 	rscseq	r4, r8, sp, lsl #16
    be8c:	00004800 	andeq	r4, r0, r0, lsl #16
    be90:	00690e00 	rsbeq	r0, r9, r0, lsl #28
    be94:	040e6901 	streq	r6, [lr], #-2305	; 0xfffff6ff
    be98:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:107
                tmpNode = sKernelMem.Alloc<TFS_Tree_Node>();
    be9c:	00007491 	muleq	r0, r1, r4
    bea0:	0101040f 	tsteq	r1, pc, lsl #8
    bea4:	11100000 	tstne	r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:108
                strncpy(tmpNode->name, tmpName, MaxFilenameLength);
    bea8:	05041204 	streq	r1, [r4, #-516]	; 0xfffffdfc
    beac:	00746e69 	rsbseq	r6, r4, r9, ror #28
    beb0:	0074040f 	rsbseq	r0, r4, pc, lsl #8
    beb4:	040f0000 	streq	r0, [pc], #-0	; bebc <_ZN11CFilesystem10InitializeEv+0x22c>
    beb8:	0000006d 	andeq	r0, r0, sp, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:109
                tmpNode->parent = node;
    bebc:	003f960a 	eorseq	r9, pc, sl, lsl #12
    bec0:	065c0100 	ldrbeq	r0, [ip], -r0, lsl #2
    bec4:	00003fea 	andeq	r3, r0, sl, ror #31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:110
                tmpNode->children = nullptr;
    bec8:	0000f7b8 			; <UNDEFINED> instruction: 0x0000f7b8
    becc:	00000068 	andeq	r0, r0, r8, rrx
    bed0:	01769c01 	cmneq	r6, r1, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:111
                tmpNode->driver_idx = NoFilesystemDriver; // zatim - mozna se neco dole zmeni
    bed4:	6b130000 	blvs	4cbedc <_bss_end+0x4ba1ec>
    bed8:	01000040 	tsteq	r0, r0, asr #32
    bedc:	0102125c 	tsteq	r2, ip, asr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:112
                tmpNode->isDirectory = true;
    bee0:	91020000 	mrsls	r0, (UNDEF: 2)
    bee4:	1299136c 	addsne	r1, r9, #108, 6	; 0xb0000001
    bee8:	5c010000 	stcpl	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:113
                tmpNode->next = node->children;
    beec:	0001041e 	andeq	r0, r1, lr, lsl r4
    bef0:	68910200 	ldmvs	r1, {r9}
    bef4:	6d656d0e 	stclvs	13, cr6, [r5, #-56]!	; 0xffffffc8
    bef8:	0b5e0100 	bleq	178c300 <_bss_end+0x177a610>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:114
                node->children = tmpNode;
    befc:	00000111 	andeq	r0, r0, r1, lsl r1
    bf00:	0d709102 	ldfeqp	f1, [r0, #-8]!
    bf04:	0000f7d4 	ldrdeq	pc, [r0], -r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:116
                node = tmpNode;
    bf08:	0000003c 	andeq	r0, r0, ip, lsr r0
    bf0c:	0100690e 	tsteq	r0, lr, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:118
                sMonitor << "child was not found\n";
    bf10:	01040e60 	tsteq	r4, r0, ror #28
    bf14:	91020000 	mrsls	r0, (UNDEF: 2)
    bf18:	14000074 	strne	r0, [r0], #-116	; 0xffffff8c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:119
                sMonitor << "creating: " << node->name << "\n";
    bf1c:	0000401f 	andeq	r4, r0, pc, lsl r0
    bf20:	38055201 	stmdacc	r5, {r0, r9, ip, lr}
    bf24:	04000040 	streq	r0, [r0], #-64	; 0xffffffc0
    bf28:	64000001 	strvs	r0, [r0], #-1
    bf2c:	540000f7 	strpl	r0, [r0], #-247	; 0xffffff09
    bf30:	01000000 	mrseq	r0, (UNDEF: 0)
    bf34:	0001af9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
    bf38:	00730b00 	rsbseq	r0, r3, r0, lsl #22
    bf3c:	0b185201 	bleq	620748 <_bss_end+0x60ea58>
    bf40:	02000001 	andeq	r0, r0, #1
    bf44:	690e6c91 	stmdbvs	lr, {r0, r4, r7, sl, fp, sp, lr}
    bf48:	09540100 	ldmdbeq	r4, {r8}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    bf4c:	00000104 	andeq	r0, r0, r4, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:126
        if (node->driver_idx != NoFilesystemDriver)
    bf50:	00749102 	rsbseq	r9, r4, r2, lsl #2
    bf54:	00405b14 	subeq	r5, r0, r4, lsl fp
    bf58:	05420100 	strbeq	r0, [r2, #-256]	; 0xffffff00
    bf5c:	00004026 	andeq	r4, r0, r6, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:129 (discriminator 2)
        node->driver_idx = i; // timto predavame veskere manipulace driveru
    bf60:	00000104 	andeq	r0, r0, r4, lsl #2
    bf64:	0000f6b8 			; <UNDEFINED> instruction: 0x0000f6b8
    bf68:	000000ac 	andeq	r0, r0, ip, lsr #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:132 (discriminator 2)
        ptr->driver->On_Register();
    bf6c:	02159c01 	andseq	r9, r5, #256	; 0x100
    bf70:	730b0000 	movwvc	r0, #45056	; 0xb000
    bf74:	42010031 	andmi	r0, r1, #49	; 0x31
    bf78:	00010b19 	andeq	r0, r1, r9, lsl fp
    bf7c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    bf80:	0032730b 	eorseq	r7, r2, fp, lsl #6
    bf84:	0b294201 	bleq	a5c790 <_bss_end+0xa4aaa0>
    bf88:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 2)
    for (i = 0; i < gFS_Drivers_Count; i++)
    bf8c:	6e0b6891 	mcrvs	8, 0, r6, cr11, cr1, {4}
    bf90:	01006d75 	tsteq	r0, r5, ror sp
    bf94:	01043142 	tsteq	r4, r2, asr #2
    bf98:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:135
    sMonitor << "Finished FS initialization\n\n";
    bf9c:	31750e64 	cmncc	r5, r4, ror #28
    bfa0:	13440100 	movtne	r0, #16640	; 0x4100
    bfa4:	00000215 	andeq	r0, r0, r5, lsl r2
    bfa8:	0e779102 	expeqs	f1, f2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:127
            return;
    bfac:	01003275 	tsteq	r0, r5, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:136
}
    bfb0:	02151744 	andseq	r1, r5, #68, 14	; 0x1100000
    bfb4:	91020000 	mrsls	r0, (UNDEF: 2)
    bfb8:	01080076 	tsteq	r8, r6, ror r0
    bfbc:	00056a08 	andeq	r6, r5, r8, lsl #20
    bfc0:	40631400 	rsbmi	r1, r3, r0, lsl #8
    bfc4:	36010000 	strcc	r0, [r1], -r0
    bfc8:	00404a07 	subeq	r4, r0, r7, lsl #20
    bfcc:	00011100 	andeq	r1, r1, r0, lsl #2
    bfd0:	00f5f800 	rscseq	pc, r5, r0, lsl #16
    bfd4:	0000c000 	andeq	ip, r0, r0
    bfd8:	759c0100 	ldrvc	r0, [ip, #256]	; 0x100
    bfdc:	13000002 	movwne	r0, #2
    bfe0:	00003f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    bfe4:	11153601 	tstne	r5, r1, lsl #12
    bfe8:	02000001 	andeq	r0, r0, #1
_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:139
{
    bfec:	730b6c91 	movwvc	r6, #48273	; 0xbc91
    bff0:	01006372 	tsteq	r0, r2, ror r3
    bff4:	010b2736 	tsteq	fp, r6, lsr r7
    bff8:	91020000 	mrsls	r0, (UNDEF: 2)
    bffc:	756e0b68 	strbvc	r0, [lr, #-2920]!	; 0xfffff498
    c000:	3601006d 	strcc	r0, [r1], -sp, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:142
    sMonitor << "opening file: " << path << "\n";
    c004:	00010430 	andeq	r0, r1, r0, lsr r4
    c008:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    c00c:	0100690e 	tsteq	r0, lr, lsl #18
    c010:	01040938 	tsteq	r4, r8, lsr r9
    c014:	91020000 	mrsls	r0, (UNDEF: 2)
    c018:	45140074 	ldrmi	r0, [r4, #-116]	; 0xffffff8c
    c01c:	01000040 	tsteq	r0, r0, asr #32
    c020:	3ff60524 	svccc	0x00f60524
    c024:	01040000 	mrseq	r0, (UNDEF: 4)
    c028:	f55c0000 			; <UNDEFINED> instruction: 0xf55c0000
    c02c:	009c0000 	addseq	r0, ip, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:146
    mpPtr = path;
    c030:	9c010000 	stcls	0, cr0, [r1], {-0}
    c034:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:148
    TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    c038:	000cb213 	andeq	fp, ip, r3, lsl r2
    c03c:	16240100 	strtne	r0, [r4], -r0, lsl #2
    c040:	0000010b 	andeq	r0, r0, fp, lsl #2
    c044:	0c6c9102 	stfeqp	f1, [ip], #-8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    c048:	00000cab 	andeq	r0, r0, fp, lsr #25
    c04c:	04092601 	streq	r2, [r9], #-1537	; 0xfffff9ff
    c050:	02000001 	andeq	r0, r0, #1
    c054:	15007491 	strne	r7, [r0, #-1169]	; 0xfffffb6f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c058:	00000aa2 	andeq	r0, r0, r2, lsr #21
    c05c:	79060801 	stmdbvc	r6, {r0, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 1)
    c060:	e8000040 	stmda	r0, {r6}
    c064:	740000f3 	strvc	r0, [r0], #-243	; 0xffffff0d
    c068:	01000001 	tsteq	r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 2)
    c06c:	0cb2139c 	ldceq	3, cr1, [r2], #624	; 0x270
    c070:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    c074:	00006618 	andeq	r6, r0, r8, lsl r6
    c078:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    c07c:	000cab13 	andeq	sl, ip, r3, lsl fp
    c080:	25080100 	strcs	r0, [r8, #-256]	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154
            if (mpPtr[j] == ':' || mpPtr[j] == '/')
    c084:	00000111 	andeq	r0, r0, r1, lsl r1
    c088:	13609102 	cmnne	r0, #-2147483648	; 0x80000000
    c08c:	00001afe 	strdeq	r1, [r0], -lr
    c090:	663a0801 	ldrtvs	r0, [sl], -r1, lsl #16
    c094:	02000000 	andeq	r0, r0, #0
    c098:	690e5c91 	stmdbvs	lr, {r0, r4, r7, sl, fp, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154 (discriminator 1)
    c09c:	090a0100 	stmdbeq	sl, {r8}
    c0a0:	00000104 	andeq	r0, r0, r4, lsl #2
    c0a4:	0d749102 	ldfeqp	f1, [r4, #-8]!
    c0a8:	0000f4b4 			; <UNDEFINED> instruction: 0x0000f4b4
    c0ac:	00000098 	muleq	r0, r8, r0
    c0b0:	01006a0e 	tsteq	r0, lr, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:157 (discriminator 3)
            tmpName[j] = mpPtr[j];
    c0b4:	01040e1c 	tsteq	r4, ip, lsl lr
    c0b8:	91020000 	mrsls	r0, (UNDEF: 2)
    c0bc:	f4dc0d70 			; <UNDEFINED> instruction: 0xf4dc0d70
    c0c0:	00600000 	rsbeq	r0, r0, r0
    c0c4:	630e0000 	movwvs	r0, #57344	; 0xe000
    c0c8:	0e1e0100 	mufeqe	f0, f6, f0
    c0cc:	0000006d 	andeq	r0, r0, sp, rrx
    c0d0:	006f9102 	rsbeq	r9, pc, r2, lsl #2
    c0d4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 3)
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c0d8:	04000009 	streq	r0, [r0], #-9
    c0dc:	00341900 	eorseq	r1, r4, r0, lsl #18
    c0e0:	14010400 	strne	r0, [r1], #-1024	; 0xfffffc00
    c0e4:	04000000 	streq	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:160
        tmpName[j] = '\0';
    c0e8:	000040b5 	strheq	r4, [r0], -r5
    c0ec:	000000c5 	andeq	r0, r0, r5, asr #1
    c0f0:	0000f8a0 	andeq	pc, r0, r0, lsr #17
    c0f4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    c0f8:	000047ea 	andeq	r4, r0, sl, ror #15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:162
        mpPtr += j;
    c0fc:	73080102 	movwvc	r0, #33026	; 0x8102
    c100:	03000005 	movweq	r0, #5
    c104:	00000025 	andeq	r0, r0, r5, lsr #32
    c108:	99050202 	stmdbls	r5, {r1, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:163
        if (mpPtr[0] != '\0')
    c10c:	04000005 	streq	r0, [r0], #-5
    c110:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c114:	38030074 	stmdacc	r3, {r2, r4, r5, r6}
    c118:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:165
            mpPtr += 1;
    c11c:	00000982 	andeq	r0, r0, r2, lsl #19
    c120:	55070702 	strpl	r0, [r7, #-1794]	; 0xfffff8fe
    c124:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:168
        tmpNode = node->Find_Child(tmpName);
    c128:	00000044 	andeq	r0, r0, r4, asr #32
    c12c:	6a080102 	bvs	20c53c <_bss_end+0x1fa84c>
    c130:	05000005 	streq	r0, [r0, #-5]
    c134:	00000798 	muleq	r0, r8, r7
    c138:	6d070802 	stcvs	8, cr0, [r7, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:169
        if (tmpNode)
    c13c:	03000000 	movweq	r0, #0
    c140:	0000005c 	andeq	r0, r0, ip, asr r0
    c144:	dc070202 	sfmle	f0, 4, [r7], {2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:170
            node = tmpNode;
    c148:	05000003 	streq	r0, [r0, #-3]
    c14c:	000005e4 	andeq	r0, r0, r4, ror #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:172
        if (tmpNode->driver_idx != NoFilesystemDriver)
    c150:	85070902 	strhi	r0, [r7, #-2306]	; 0xfffff6fe
    c154:	03000000 	movweq	r0, #0
    c158:	00000074 	andeq	r0, r0, r4, ror r0
    c15c:	91070402 	tstls	r7, r2, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:174
            return gFS_Drivers[tmpNode->driver_idx].driver->Open_File(mpPtr, mode);
    c160:	03000045 	movweq	r0, #69	; 0x45
    c164:	00000085 	andeq	r0, r0, r5, lsl #1
    c168:	003d2e06 	eorseq	r2, sp, r6, lsl #28
    c16c:	06030800 	streq	r0, [r3], -r0, lsl #16
    c170:	0001d507 	andeq	sp, r1, r7, lsl #10
    c174:	3d810700 	stccc	7, cr0, [r1]
    c178:	0a030000 	beq	cc180 <_bss_end+0xba490>
    c17c:	00007412 	andeq	r7, r0, r2, lsl r4
    c180:	65070000 	strvs	r0, [r7, #-0]
    c184:	03000007 	movweq	r0, #7
    c188:	01da0e0c 	bicseq	r0, sl, ip, lsl #28
    c18c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    c190:	00003d2e 	andeq	r3, r0, lr, lsr #26
    c194:	74091003 	strvc	r1, [r9], #-3
    c198:	e600003e 			; <UNDEFINED> instruction: 0xe600003e
    c19c:	01000001 	tsteq	r0, r1
    c1a0:	000000d1 	ldrdeq	r0, [r0], -r1
    c1a4:	000000dc 	ldrdeq	r0, [r0], -ip
    c1a8:	0001e609 	andeq	lr, r1, r9, lsl #12
    c1ac:	01f10a00 	mvnseq	r0, r0, lsl #20
    c1b0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    c1b4:	00003d2d 	andeq	r3, r0, sp, lsr #26
    c1b8:	46151203 	ldrmi	r1, [r5], -r3, lsl #4
    c1bc:	f700003e 			; <UNDEFINED> instruction: 0xf700003e
    c1c0:	01000001 	tsteq	r0, r1
    c1c4:	000000f5 	strdeq	r0, [r0], -r5
    c1c8:	00000100 	andeq	r0, r0, r0, lsl #2
    c1cc:	0001e609 	andeq	lr, r1, r9, lsl #12
    c1d0:	00380900 	eorseq	r0, r8, r0, lsl #18
    c1d4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:176
        else if (!tmpNode->isDirectory)
    c1d8:	0000073f 	andeq	r0, r0, pc, lsr r7
    c1dc:	570e1503 	strpl	r1, [lr, -r3, lsl #10]
    c1e0:	da00003d 	ble	c2dc <_ZN11CFilesystem13TFS_Tree_NodeC1Ev+0x2c>
    c1e4:	01000001 	tsteq	r0, r1
    c1e8:	00000119 	andeq	r0, r0, r9, lsl r1
    c1ec:	0000011f 	andeq	r0, r0, pc, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    c1f0:	0001f909 	andeq	pc, r1, r9, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:177
            break;
    c1f4:	4a0b0000 	bmi	2cc1fc <_bss_end+0x2ba50c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:180
    sMonitor << "failed to open: " << path << "\n";
    c1f8:	0300000f 	movweq	r0, #15
    c1fc:	3e1b0e18 	mrccc	14, 0, r0, cr11, cr8, {0}
    c200:	34010000 	strcc	r0, [r1], #-0
    c204:	3a000001 	bcc	c210 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x224>
    c208:	09000001 	stmdbeq	r0, {r0}
    c20c:	000001e6 	andeq	r0, r0, r6, ror #3
    c210:	18a20b00 	stmiane	r2!, {r8, r9, fp}
    c214:	1b030000 	blne	cc21c <_bss_end+0xba52c>
    c218:	003d3c0e 	eorseq	r3, sp, lr, lsl #24
    c21c:	014f0100 	mrseq	r0, (UNDEF: 95)
    c220:	015a0000 	cmpeq	sl, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:183
    return nullptr;
    c224:	e6090000 	str	r0, [r9], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
}
    c228:	0a000001 	beq	c234 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x248>
    c22c:	000001da 	ldrdeq	r0, [r0], -sl
    c230:	0fc20b00 	svceq	0x00c20b00
    c234:	1d030000 	stcne	0, cr0, [r3, #-0]
    c238:	003c760e 	eorseq	r7, ip, lr, lsl #12
    c23c:	016f0100 	cmneq	pc, r0, lsl #2
    c240:	01840000 	orreq	r0, r4, r0
    c244:	e6090000 	str	r0, [r9], -r0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c248:	0a000001 	beq	c254 <_Z41__static_initialization_and_destruction_0ii+0xc>
    c24c:	0000005c 	andeq	r0, r0, ip, asr r0
    c250:	00005c0a 	andeq	r5, r0, sl, lsl #24
    c254:	01da0a00 	bicseq	r0, sl, r0, lsl #20
    c258:	0b000000 	bleq	c260 <_Z41__static_initialization_and_destruction_0ii+0x18>
    c25c:	00003e6b 	andeq	r3, r0, fp, ror #28
    c260:	0d0e1f03 	stceq	15, cr1, [lr, #-12]
    c264:	0100003d 	tsteq	r0, sp, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
    c268:	00000199 	muleq	r0, r9, r1
    c26c:	000001ae 	andeq	r0, r0, lr, lsr #3
    c270:	0001e609 	andeq	lr, r1, r9, lsl #12
    c274:	005c0a00 	subseq	r0, ip, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:8
CFilesystem sFilesystem;
    c278:	5c0a0000 	stcpl	0, cr0, [sl], {-0}
    c27c:	0a000000 	beq	c284 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
}
    c280:	00000025 	andeq	r0, r0, r5, lsr #32
    c284:	3e3b0c00 	cdpcc	12, 3, cr0, cr11, cr0, {0}
    c288:	21030000 	mrscs	r0, (UNDEF: 3)
    c28c:	003de80e 	eorseq	lr, sp, lr, lsl #16
    c290:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
_GLOBAL__sub_I_sFilesystem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c294:	e6090000 	str	r0, [r9], -r0
    c298:	0a000001 	beq	c2a4 <_GLOBAL__sub_I_sFilesystem+0x10>
    c29c:	0000005c 	andeq	r0, r0, ip, asr r0
    c2a0:	00005c0a 	andeq	r5, r0, sl, lsl #24
    c2a4:	01f10a00 	mvnseq	r0, r0, lsl #20
    c2a8:	00000000 	andeq	r0, r0, r0
    c2ac:	00009103 	andeq	r9, r0, r3, lsl #2
_ZN11CFilesystem13TFS_Tree_NodeC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:80
    struct TFS_Tree_Node
    c2b0:	02010200 	andeq	r0, r1, #0, 4
    c2b4:	00004548 	andeq	r4, r0, r8, asr #10
    c2b8:	0001da03 	andeq	sp, r1, r3, lsl #20
    c2bc:	91040d00 	tstls	r4, r0, lsl #26
    c2c0:	03000000 	movweq	r0, #0
    c2c4:	000001e6 	andeq	r0, r0, r6, ror #3
    c2c8:	002c040d 	eoreq	r0, ip, sp, lsl #8
    c2cc:	040e0000 	streq	r0, [lr], #-0
    c2d0:	01d5040d 	bicseq	r0, r5, sp, lsl #8
    c2d4:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    c2d8:	0f000001 	svceq	0x00000001
    c2dc:	00001c44 	andeq	r1, r0, r4, asr #24
    c2e0:	801a0604 	andshi	r0, sl, r4, lsl #12
    c2e4:	05000000 	streq	r0, [r0, #-0]
    c2e8:	01076c03 	tsteq	r7, r3, lsl #24
_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    c2ec:	1c750f00 	ldclne	15, cr0, [r5], #-0
    c2f0:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    c2f4:	0000801a 	andeq	r8, r0, sl, lsl r0
    c2f8:	70030500 	andvc	r0, r3, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    c2fc:	0f000107 	svceq	0x00000107
    c300:	00001d93 	muleq	r0, r3, sp
    c304:	801a0a04 	andshi	r0, sl, r4, lsl #20
    c308:	05000000 	streq	r0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    c30c:	01077403 	tsteq	r7, r3, lsl #8
    c310:	1b790f00 	blne	1e4ff18 <_bss_end+0x1e3e228>
    c314:	0c040000 	stceq	0, cr0, [r4], {-0}
_ZN5IFile4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:43
    virtual uint32_t Read(char* buffer, uint32_t num)
    c318:	0000801a 	andeq	r8, r0, sl, lsl r0
    c31c:	78030500 	stmdavc	r3, {r8, sl}
    c320:	10000107 	andne	r0, r0, r7, lsl #2
    c324:	00001309 	andeq	r1, r0, r9, lsl #6
    c328:	00440107 	subeq	r0, r4, r7, lsl #2
    c32c:	06050000 	streq	r0, [r5], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:45
        return 0;
    c330:	00027d0c 	andeq	r7, r2, ip, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:46
    };
    c334:	6f4e1100 	svcvs	0x004e1100
    c338:	12000070 	andne	r0, r0, #112	; 0x70
    c33c:	00000f4a 	andeq	r0, r0, sl, asr #30
    c340:	18a21201 	stmiane	r2!, {r0, r9, ip}
_ZN5IFile5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:49
    virtual uint32_t Write(const char* buffer, uint32_t num)
    c344:	12020000 	andne	r0, r2, #0
    c348:	00001163 	andeq	r1, r0, r3, ror #2
    c34c:	103c1203 	eorsne	r1, ip, r3, lsl #4
    c350:	00040000 	andeq	r0, r4, r0
    c354:	00109513 	andseq	r9, r0, r3, lsl r5
    c358:	22050500 	andcs	r0, r5, #0, 10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:51
        return 0;
    c35c:	0002ae08 	andeq	sl, r2, r8, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:52
    };
    c360:	00781400 	rsbseq	r1, r8, r0, lsl #8
    c364:	5c0e2405 	cfstrspl	mvf2, [lr], {5}
    c368:	00000000 	andeq	r0, r0, r0
    c36c:	05007914 	streq	r7, [r0, #-2324]	; 0xfffff6ec
_ZN5IFile5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:54
    virtual bool Close()
    c370:	005c0e25 	subseq	r0, ip, r5, lsr #28
    c374:	14020000 	strne	r0, [r2], #-0
    c378:	00746573 	rsbseq	r6, r4, r3, ror r5
    c37c:	440d2605 	strmi	r2, [sp], #-1541	; 0xfffff9fb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:56
        return true;
    c380:	04000000 	streq	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:57
    };
    c384:	0e1f1300 	cdpeq	3, 1, cr1, cr15, cr0, {0}
    c388:	05010000 	streq	r0, [r1, #-0]
    c38c:	02c9082a 	sbceq	r0, r9, #2752512	; 0x2a0000
    c390:	63140000 	tstvs	r4, #0
_ZN5IFile5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr)
    c394:	0500646d 	streq	r6, [r0, #-1133]	; 0xfffffb93
    c398:	024c162c 	subeq	r1, ip, #44, 12	; 0x2c00000
    c39c:	00000000 	andeq	r0, r0, r0
    c3a0:	00408513 	subeq	r8, r0, r3, lsl r5
    c3a4:	30050100 	andcc	r0, r5, r0, lsl #2
    c3a8:	0002e408 	andeq	lr, r2, r8, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:61
        return false;
    c3ac:	137e0700 	cmnne	lr, #0, 14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:62
    };
    c3b0:	32050000 	andcc	r0, r5, #0
    c3b4:	0002ae1c 	andeq	sl, r2, ip, lsl lr
    c3b8:	13000000 	movwne	r0, #0
    c3bc:	00001117 	andeq	r1, r0, r7, lsl r1
_Znwj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:42
{
    c3c0:	08360502 	ldmdaeq	r6!, {r1, r8, sl}
    c3c4:	0000030c 	andeq	r0, r0, ip, lsl #6
    c3c8:	00137e07 	andseq	r7, r3, r7, lsl #28
    c3cc:	1c380500 	cfldr32ne	mvfx0, [r8], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:43
    return sKernelMem.Alloc(size);
    c3d0:	000002ae 	andeq	r0, r0, lr, lsr #5
    c3d4:	12f20700 	rscsne	r0, r2, #0, 14
    c3d8:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    c3dc:	0000440d 	andeq	r4, r0, sp, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:44
}
    c3e0:	13000100 	movwne	r0, #256	; 0x100
    c3e4:	00001192 	muleq	r0, r2, r1
    c3e8:	083d0508 	ldmdaeq	sp!, {r3, r8, sl}
    c3ec:	00000341 	andeq	r0, r0, r1, asr #6
_ZN5IFileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:36
class IFile
    c3f0:	00137e07 	andseq	r7, r3, r7, lsl #28
    c3f4:	1c3f0500 	cfldr32ne	mvfx0, [pc], #-0	; c3fc <_ZN5IFileC1Ev+0xc>
    c3f8:	000002ae 	andeq	r0, r0, lr, lsr #5
    c3fc:	2cd50700 	ldclcs	7, cr0, [r5], {0}
    c400:	40050000 	andmi	r0, r5, r0
    c404:	00005c0e 	andeq	r5, r0, lr, lsl #24
    c408:	6f070100 	svcvs	0x00070100
    c40c:	0500000e 	streq	r0, [r0, #-14]
    c410:	027d1942 	rsbseq	r1, sp, #1081344	; 0x108000
    c414:	00030000 	andeq	r0, r3, r0
    c418:	000ecd13 	andeq	ip, lr, r3, lsl sp
    c41c:	46050b00 	strmi	r0, [r5], -r0, lsl #22
    c420:	0003a408 	andeq	sl, r3, r8, lsl #8
_ZN5IFileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    virtual ~IFile() = default;
    c424:	137e0700 	cmnne	lr, #0, 14
    c428:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
    c42c:	0002ae1c 	andeq	sl, r2, ip, lsl lr
    c430:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    c434:	49050031 	stmdbmi	r5, {r0, r4, r5}
    c438:	00005c0e 	andeq	r5, r0, lr, lsl #24
    c43c:	79140100 	ldmdbvc	r4, {r8}
    c440:	49050031 	stmdbmi	r5, {r0, r4, r5}
    c444:	00005c12 	andeq	r5, r0, r2, lsl ip
    c448:	77140300 	ldrvc	r0, [r4, -r0, lsl #6]
    c44c:	0e4a0500 	cdpeq	5, 4, cr0, cr10, cr0, {0}
    c450:	0000005c 	andeq	r0, r0, ip, asr r0
    c454:	00681405 	rsbeq	r1, r8, r5, lsl #8
_ZN5IFileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    c458:	5c114a05 			; <UNDEFINED> instruction: 0x5c114a05
    c45c:	07000000 	streq	r0, [r0, -r0]
    c460:	000ea007 	andeq	sl, lr, r7
    c464:	0d4b0500 	cfstr64eq	mvdx0, [fp, #-0]
    c468:	00000044 	andeq	r0, r0, r4, asr #32
    c46c:	0e6f0709 	cdpeq	7, 6, cr0, cr15, cr9, {0}
    c470:	4d050000 	stcmi	0, cr0, [r5, #-0]
    c474:	0000440d 	andeq	r4, r0, sp, lsl #8
    c478:	15000a00 	strne	r0, [r0, #-2560]	; 0xfffff600
    c47c:	006c6168 	rsbeq	r6, ip, r8, ror #2
    c480:	5e0b0506 	cfsh32pl	mvfx0, mvfx11, #6
    c484:	16000004 	strne	r0, [r0], -r4
    c488:	00000487 	andeq	r0, r0, r7, lsl #9
_ZN10CGPIO_FileC2Eibb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:21
    CGPIO_File(int pinNo, bool read, bool write)
    c48c:	8c1c0706 	ldchi	7, cr0, [ip], {6}
    c490:	80000000 	andhi	r0, r0, r0
    c494:	160ee6b2 			; <UNDEFINED> instruction: 0x160ee6b2
    c498:	000005cc 	andeq	r0, r0, ip, asr #11
    c49c:	6a1d0a06 	bvs	74ecbc <_bss_end+0x73cfcc>
    c4a0:	00000004 	andeq	r0, r0, r4
    c4a4:	16200000 	strtne	r0, [r0], -r0
    c4a8:	00000452 	andeq	r0, r0, r2, asr r4
    c4ac:	6a1d0d06 	bvs	74f8cc <_bss_end+0x73dbdc>
    c4b0:	00000004 	andeq	r0, r0, r4
    c4b4:	17202000 	strne	r2, [r0, -r0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:24
    , mWrite(write)
    c4b8:	0000058a 	andeq	r0, r0, sl, lsl #11
    c4bc:	80181006 	andshi	r1, r8, r6
    c4c0:	36000000 	strcc	r0, [r0], -r0
    c4c4:	00037316 	andeq	r7, r3, r6, lsl r3
    c4c8:	1d420600 	stclne	6, cr0, [r2, #-0]
    c4cc:	0000046a 	andeq	r0, r0, sl, ror #8
    c4d0:	20215000 	eorcs	r5, r1, r0
    c4d4:	00034a16 	andeq	r4, r3, r6, lsl sl
    c4d8:	1d710600 	ldclne	6, cr0, [r1, #-0]
    c4dc:	0000046a 	andeq	r0, r0, sl, ror #8
    c4e0:	2000b200 	andcs	fp, r0, r0, lsl #4
    c4e4:	0002b616 	andeq	fp, r2, r6, lsl r6
    c4e8:	1da40600 	stcne	6, cr0, [r4]
    c4ec:	0000046a 	andeq	r0, r0, sl, ror #8
    c4f0:	2000b400 	andcs	fp, r0, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:27
    }
    c4f4:	00036416 	andeq	r6, r3, r6, lsl r4
    c4f8:	1db30600 	ldcne	6, cr0, [r3]
    c4fc:	0000046a 	andeq	r0, r0, sl, ror #8
    c500:	20104000 	andscs	r4, r0, r0
    c504:	00033116 	andeq	r3, r3, r6, lsl r1
_ZN10CGPIO_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c508:	1dbe0600 	ldcne	6, cr0, [lr]
    c50c:	0000046a 	andeq	r0, r0, sl, ror #8
    c510:	20205000 	eorcs	r5, r0, r0
    c514:	0003ef16 	andeq	lr, r3, r6, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c518:	1dbf0600 	ldcne	6, cr0, [pc]	; c520 <_ZN10CGPIO_FileD1Ev+0x18>
    c51c:	0000046a 	andeq	r0, r0, sl, ror #8
    c520:	20804000 	addcs	r4, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:32
        Close();
    c524:	00045c16 	andeq	r5, r4, r6, lsl ip
    c528:	1dc00600 	stclne	6, cr0, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c52c:	0000046a 	andeq	r0, r0, sl, ror #8
    c530:	20805000 	addcs	r5, r0, r0
    c534:	03b01800 	movseq	r1, #0, 16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c538:	04020000 	streq	r0, [r2], #-0
    c53c:	00458c07 	subeq	r8, r5, r7, lsl #24
    c540:	04630300 	strbteq	r0, [r3], #-768	; 0xfffffd00
    c544:	c0180000 	andsgt	r0, r8, r0
    c548:	18000003 	stmdane	r0, {r0, r1}
_ZN10CGPIO_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c54c:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c550:	0003e018 	andeq	lr, r3, r8, lsl r0
    c554:	03ed1800 	mvneq	r1, #0, 16
    c558:	fd180000 	ldc2	0, cr0, [r8, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c55c:	18000003 	stmdane	r0, {r0, r1}
    c560:	0000040d 	andeq	r0, r0, sp, lsl #8
    c564:	00041d18 	andeq	r1, r4, r8, lsl sp
    c568:	042d1800 	strteq	r1, [sp], #-2048	; 0xfffff800
    c56c:	3d180000 	ldccc	0, cr0, [r8, #-0]
    c570:	18000004 	stmdane	r0, {r2}
    c574:	0000044d 	andeq	r0, r0, sp, asr #8
    c578:	00411619 	subeq	r1, r1, r9, lsl r6
    c57c:	0b040700 	bleq	10e184 <_bss_end+0xfc494>
_ZN10CGPIO_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:35
    virtual uint32_t Read(char* buffer, uint32_t num) override
    c580:	0000073d 	andeq	r0, r0, sp, lsr r7
    c584:	00410b17 	subeq	r0, r1, r7, lsl fp
    c588:	18070700 	stmdane	r7, {r8, r9, sl}
    c58c:	00000068 	andeq	r0, r0, r8, rrx
    c590:	41421706 	cmpmi	r2, r6, lsl #14
    c594:	09070000 	stmdbeq	r7, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37
        if (num > 0 && buffer != nullptr)
    c598:	00006818 	andeq	r6, r0, r8, lsl r8
    c59c:	4e170800 	cdpmi	8, 1, cr0, cr7, cr0, {0}
    c5a0:	07000041 	streq	r0, [r0, -r1, asr #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37 (discriminator 1)
    c5a4:	0068180c 	rsbeq	r1, r8, ip, lsl #16
    c5a8:	17200000 	strne	r0, [r0, -r0]!
    c5ac:	00004139 	andeq	r4, r0, r9, lsr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40
            buffer[0] = sGPIO.Get_Input(mPinNo) ? '1' : '0';
    c5b0:	68180e07 	ldmdavs	r8, {r0, r1, r2, r9, sl, fp}
    c5b4:	80000000 	andhi	r0, r0, r0
    c5b8:	00410017 	subeq	r0, r1, r7, lsl r0
    c5bc:	14110700 	ldrne	r0, [r1], #-1792	; 0xfffff900
    c5c0:	000001e1 	andeq	r0, r0, r1, ror #3
    c5c4:	40a31a01 	adcmi	r1, r3, r1, lsl #20
    c5c8:	14070000 	strne	r0, [r7], #-0
    c5cc:	00076713 	andeq	r6, r7, r3, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 1)
    c5d0:	00024000 	andeq	r4, r2, r0
	...
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 4)
    c5dc:	0000002f 	andeq	r0, r0, pc, lsr #32
    c5e0:	07000700 	streq	r0, [r0, -r0, lsl #14]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:41 (discriminator 4)
            return 1;
    c5e4:	7f140000 	svcvc	0x00140000
    c5e8:	00147f14 	andseq	r7, r4, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:44
        return 0;
    c5ec:	2a7f2a24 	bcs	1fd6e84 <_bss_end+0x1fc5194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:45
    }
    c5f0:	13230012 			; <UNDEFINED> instruction: 0x13230012
    c5f4:	00626408 	rsbeq	r6, r2, r8, lsl #8
    c5f8:	22554936 	subscs	r4, r5, #884736	; 0xd8000
    c5fc:	05000050 	streq	r0, [r0, #-80]	; 0xffffffb0
_ZN10CGPIO_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:47
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c600:	00000003 	andeq	r0, r0, r3
    c604:	41221c00 			; <UNDEFINED> instruction: 0x41221c00
    c608:	41000000 	mrsmi	r0, (UNDEF: 0)
    c60c:	00001c22 	andeq	r1, r0, r2, lsr #24
    c610:	083e0814 	ldmdaeq	lr!, {r2, r4, fp}
    c614:	08080014 	stmdaeq	r8, {r2, r4}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49
        if (num > 0 && buffer != nullptr)
    c618:	0008083e 	andeq	r0, r8, lr, lsr r8
    c61c:	60a00000 	adcvs	r0, r0, r0
    c620:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49 (discriminator 1)
    c624:	00080808 	andeq	r0, r8, r8, lsl #16
    c628:	00606000 	rsbeq	r6, r0, r0
    c62c:	10200000 	eorne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:52
            sGPIO.Set_Output(mPinNo, (buffer[0] != '0'));
    c630:	00020408 	andeq	r0, r2, r8, lsl #8
    c634:	4549513e 	strbmi	r5, [r9, #-318]	; 0xfffffec2
    c638:	4200003e 	andmi	r0, r0, #62	; 0x3e
    c63c:	0000407f 	andeq	r4, r0, pc, ror r0
    c640:	49516142 	ldmdbmi	r1, {r1, r6, r8, sp, lr}^
    c644:	41210046 			; <UNDEFINED> instruction: 0x41210046
    c648:	00314b45 	eorseq	r4, r1, r5, asr #22
    c64c:	7f121418 	svcvc	0x00121418
    c650:	45270010 	strmi	r0, [r7, #-16]!
    c654:	00394545 	eorseq	r4, r9, r5, asr #10
    c658:	49494a3c 	stmdbmi	r9, {r2, r3, r4, r5, r9, fp, lr}^
    c65c:	71010030 	tstvc	r1, r0, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:53
            return 1;
    c660:	00030509 	andeq	r0, r3, r9, lsl #10
    c664:	49494936 	stmdbmi	r9, {r1, r2, r4, r5, r8, fp, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:56
        return 0;
    c668:	49060036 	stmdbmi	r6, {r1, r2, r4, r5}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:57
    }
    c66c:	001e2949 	andseq	r2, lr, r9, asr #18
    c670:	00363600 	eorseq	r3, r6, r0, lsl #12
    c674:	56000000 	strpl	r0, [r0], -r0
    c678:	00000036 	andeq	r0, r0, r6, lsr r0
_ZN10CGPIO_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:59
    virtual bool Close() override
    c67c:	41221408 			; <UNDEFINED> instruction: 0x41221408
    c680:	14140000 	ldrne	r0, [r4], #-0
    c684:	00141414 	andseq	r1, r4, r4, lsl r4
    c688:	14224100 	strtne	r4, [r2], #-256	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61
        if (!mRead && !mWrite)
    c68c:	01020008 	tsteq	r2, r8
    c690:	00060951 	andeq	r0, r6, r1, asr r9
    c694:	51594932 	cmppl	r9, r2, lsr r9
    c698:	127c003e 	rsbsne	r0, ip, #62	; 0x3e
    c69c:	007c1211 	rsbseq	r1, ip, r1, lsl r2
    c6a0:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61 (discriminator 1)
    c6a4:	413e0036 	teqmi	lr, r6, lsr r0
    c6a8:	00224141 	eoreq	r4, r2, r1, asr #2
    c6ac:	2241417f 	subcs	r4, r1, #-1073741793	; 0xc000001f
    c6b0:	497f001c 	ldmdbmi	pc!, {r2, r3, r4}^	; <UNPREDICTABLE>
    c6b4:	00414949 	subeq	r4, r1, r9, asr #18
    c6b8:	0909097f 	stmdbeq	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:62
            return false;
    c6bc:	413e0001 	teqmi	lr, r1
    c6c0:	007a4949 	rsbseq	r4, sl, r9, asr #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:65
        sGPIO.Free_Pin(mPinNo, mRead, mWrite);
    c6c4:	0808087f 	stmdaeq	r8, {r0, r1, r2, r3, r4, r5, r6, fp}
    c6c8:	4100007f 	tstmi	r0, pc, ror r0
    c6cc:	0000417f 	andeq	r4, r0, pc, ror r1
    c6d0:	3f414020 	svccc	0x00414020
    c6d4:	087f0001 	ldmdaeq	pc!, {r0}^	; <UNPREDICTABLE>
    c6d8:	00412214 	subeq	r2, r1, r4, lsl r2
    c6dc:	4040407f 	submi	r4, r0, pc, ror r0
    c6e0:	027f0040 	rsbseq	r0, pc, #64	; 0x40
    c6e4:	007f020c 	rsbseq	r0, pc, ip, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:66
        mRead = mWrite = false;
    c6e8:	1008047f 	andne	r0, r8, pc, ror r4
    c6ec:	413e007f 	teqmi	lr, pc, ror r0
    c6f0:	003e4141 	eorseq	r4, lr, r1, asr #2
    c6f4:	0909097f 	stmdbeq	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp}
    c6f8:	413e0006 	teqmi	lr, r6
    c6fc:	005e2151 	subseq	r2, lr, r1, asr r1
    c700:	2919097f 	ldmdbcs	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:68
        return true;
    c704:	49460046 	stmdbmi	r6, {r1, r2, r6}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:69
    }
    c708:	00314949 	eorseq	r4, r1, r9, asr #18
    c70c:	017f0101 	cmneq	pc, r1, lsl #2
    c710:	403f0001 	eorsmi	r0, pc, r1
    c714:	003f4040 	eorseq	r4, pc, r0, asr #32
_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:71
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c718:	2040201f 	subcs	r2, r0, pc, lsl r0
    c71c:	403f001f 	eorsmi	r0, pc, pc, lsl r0	; <UNPREDICTABLE>
    c720:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
    c724:	14081463 	strne	r1, [r8], #-1123	; 0xfffffb9d
    c728:	08070063 	stmdaeq	r7, {r0, r1, r5, r6}
    c72c:	00070870 	andeq	r0, r7, r0, ror r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:74
        return false;
    c730:	45495161 	strbmi	r5, [r9, #-353]	; 0xfffffe9f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:75
    }
    c734:	7f000043 	svcvc	0x00000043
    c738:	00004141 	andeq	r4, r0, r1, asr #2
    c73c:	2a552a55 	bcs	1557098 <_bss_end+0x15453a8>
    c740:	41000055 	qaddmi	r0, r5, r0
_ZN15CGPIO_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:82
    virtual void On_Register() override
    c744:	00007f41 	andeq	r7, r0, r1, asr #30
    c748:	02010204 	andeq	r0, r1, #4, 4	; 0x40000000
    c74c:	40400004 	submi	r0, r0, r4
    c750:	00404040 	subeq	r4, r0, r0, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:85
    }
    c754:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
    c758:	54200000 	strtpl	r0, [r0], #-0
    c75c:	00785454 	rsbseq	r5, r8, r4, asr r4
    c760:	4444487f 	strbmi	r4, [r4], #-2175	; 0xfffff781
_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:87
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    c764:	44380038 	ldrtmi	r0, [r8], #-56	; 0xffffffc8
    c768:	00204444 	eoreq	r4, r0, r4, asr #8
    c76c:	48444438 	stmdami	r4, {r3, r4, r5, sl, lr}^
    c770:	5438007f 	ldrtpl	r0, [r8], #-127	; 0xffffff81
    c774:	00185454 	andseq	r5, r8, r4, asr r4
    c778:	01097e08 	tsteq	r9, r8, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89
        if (mode != NFile_Open_Mode::Read_Only && mode != NFile_Open_Mode::Write_Only)
    c77c:	a4180002 	ldrge	r0, [r8], #-2
    c780:	007ca4a4 	rsbseq	sl, ip, r4, lsr #9
    c784:	0404087f 	streq	r0, [r4], #-2175	; 0xfffff781
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89 (discriminator 1)
    c788:	44000078 	strmi	r0, [r0], #-120	; 0xffffff88
    c78c:	0000407d 	andeq	r4, r0, sp, ror r0
    c790:	7d848040 	stcvc	0, cr8, [r4, #256]	; 0x100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:90
            return nullptr;
    c794:	107f0000 	rsbsne	r0, pc, r0
    c798:	00004428 	andeq	r4, r0, r8, lsr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:94
        int gpionum = atoi(path);
    c79c:	407f4100 	rsbsmi	r4, pc, r0, lsl #2
    c7a0:	047c0000 	ldrbteq	r0, [ip], #-0
    c7a4:	00780418 	rsbseq	r0, r8, r8, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95
        if (gpionum < 0 || gpionum >= hal::GPIO_Pin_Count)
    c7a8:	0404087c 	streq	r0, [r4], #-2172	; 0xfffff784
    c7ac:	44380078 	ldrtmi	r0, [r8], #-120	; 0xffffff88
    c7b0:	00384444 	eorseq	r4, r8, r4, asr #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95 (discriminator 1)
    c7b4:	242424fc 	strtcs	r2, [r4], #-1276	; 0xfffffb04
    c7b8:	24180018 	ldrcs	r0, [r8], #-24	; 0xffffffe8
    c7bc:	00fc1824 	rscseq	r1, ip, r4, lsr #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:96
            return nullptr;
    c7c0:	0404087c 	streq	r0, [r4], #-2172	; 0xfffff784
    c7c4:	54480008 	strbpl	r0, [r8], #-8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:98
        if (mode == NFile_Open_Mode::Read_Only)
    c7c8:	00205454 	eoreq	r5, r0, r4, asr r4
    c7cc:	40443f04 	submi	r3, r4, r4, lsl #30
    c7d0:	403c0020 	eorsmi	r0, ip, r0, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:100
            if (!sGPIO.Reserve_Pin(gpionum, true, false))
    c7d4:	007c2040 	rsbseq	r2, ip, r0, asr #32
    c7d8:	2040201c 	subcs	r2, r0, ip, lsl r0
    c7dc:	403c001c 	eorsmi	r0, ip, ip, lsl r0
    c7e0:	003c4030 	eorseq	r4, ip, r0, lsr r0
    c7e4:	28102844 	ldmdacs	r0, {r2, r6, fp, sp}
    c7e8:	a01c0044 	andsge	r0, ip, r4, asr #32
    c7ec:	007ca0a0 	rsbseq	sl, ip, r0, lsr #1
    c7f0:	4c546444 	cfldrdmi	mvd6, [r4], {68}	; 0x44
    c7f4:	08000044 	stmdaeq	r0, {r2, r6}
    c7f8:	00000077 	andeq	r0, r0, r7, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:101
                return nullptr;
    c7fc:	007f0000 	rsbseq	r0, pc, r0
    c800:	77000000 	strvc	r0, [r0, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:103
            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Input);
    c804:	00000008 	andeq	r0, r0, r8
    c808:	08100810 	ldmdaeq	r0, {r4, fp}
	...
    c814:	0004ad18 	andeq	sl, r4, r8, lsl sp
    c818:	04ba1800 	ldrteq	r1, [sl], #2048	; 0x800
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:107
            if (!sGPIO.Reserve_Pin(gpionum, false, true))
    c81c:	c7180000 	ldrgt	r0, [r8, -r0]
    c820:	18000004 	stmdane	r0, {r2}
    c824:	000004d4 	ldrdeq	r0, [r0], -r4
    c828:	0004e118 	andeq	lr, r4, r8, lsl r1
    c82c:	00501b00 	subseq	r1, r0, r0, lsl #22
    c830:	07670000 	strbeq	r0, [r7, -r0]!
    c834:	851c0000 	ldrhi	r0, [ip, #-0]
    c838:	3f000000 	svccc	0x00000000
    c83c:	56030002 	strpl	r0, [r3], -r2
    c840:	18000007 	stmdane	r0, {r0, r1, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:108
                return nullptr;
    c844:	000004ee 	andeq	r0, r0, lr, ror #9
    c848:	0001ae1d 	andeq	sl, r1, sp, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:110
            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Output);
    c84c:	06650100 	strbteq	r0, [r5], -r0, lsl #2
    c850:	0000078b 	andeq	r0, r0, fp, lsl #15
    c854:	0000fca4 	andeq	pc, r0, r4, lsr #25
    c858:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    c85c:	07de9c01 	ldrbeq	r9, [lr, r1, lsl #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:114
        new CGPIO_File(gpionum, mode == NFile_Open_Mode::Read_Only, mode == NFile_Open_Mode::Write_Only);
    c860:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
    c864:	ec000003 	stc	0, cr0, [r0], {3}
    c868:	02000001 	andeq	r0, r0, #1
    c86c:	781f6c91 	ldmdavc	pc, {r0, r4, r7, sl, fp, sp, lr}	; <UNPREDICTABLE>
    c870:	29650100 	stmdbcs	r5!, {r8}^
    c874:	0000005c 	andeq	r0, r0, ip, asr r0
    c878:	1f6a9102 	svcne	0x006a9102
    c87c:	65010079 	strvs	r0, [r1, #-121]	; 0xffffff87
    c880:	00005c35 	andeq	r5, r0, r5, lsr ip
    c884:	68910200 	ldmvs	r1, {r9}
    c888:	7274731f 	rsbsvc	r7, r4, #2080374784	; 0x7c000000
    c88c:	44650100 	strbtmi	r0, [r5], #-256	; 0xffffff00
    c890:	000001f1 	strdeq	r0, [r0], -r1
    c894:	20649102 	rsbcs	r9, r4, r2, lsl #2
    c898:	01006978 	tsteq	r0, r8, ror r9
    c89c:	005c0e6a 	subseq	r0, ip, sl, ror #28
    c8a0:	91020000 	mrsls	r0, (UNDEF: 2)
    c8a4:	74702076 	ldrbtvc	r2, [r0], #-118	; 0xffffff8a
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:116
        return f;
    c8a8:	6b010072 	blvs	4ca78 <_bss_end+0x3ad88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:117
    }
    c8ac:	0001f111 	andeq	pc, r1, r1, lsl r1	; <UNPREDICTABLE>
    c8b0:	70910200 	addsvc	r0, r1, r0, lsl #4
    c8b4:	011f1d00 	tsteq	pc, r0, lsl #26
    c8b8:	5a010000 	bpl	4c8c0 <_bss_end+0x3abd0>
_ZN13CMonitor_FileC2Ei():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:15
    CMonitor_File(int channel)
    c8bc:	0007f806 	andeq	pc, r7, r6, lsl #16
    c8c0:	00fc4c00 	rscseq	r4, ip, r0, lsl #24
    c8c4:	00005800 	andeq	r5, r0, r0, lsl #16
    c8c8:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    c8cc:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:16
    : mChannel(channel)
    c8d0:	0000032c 	andeq	r0, r0, ip, lsr #6
    c8d4:	000001ec 	andeq	r0, r0, ip, ror #3
    c8d8:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    c8dc:	00746b70 	rsbseq	r6, r4, r0, ror fp
    c8e0:	c9235f01 	stmdbgt	r3!, {r0, r8, r9, sl, fp, ip, lr}
    c8e4:	02000002 	andeq	r0, r0, #2
    c8e8:	1d007491 	cfstrsne	mvf7, [r0, #-580]	; 0xfffffdbc
    c8ec:	00000184 	andeq	r0, r0, r4, lsl #3
    c8f0:	2e063b01 	vmlacs.f64	d3, d6, d1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:18
    }
    c8f4:	e4000008 	str	r0, [r0], #-8
    c8f8:	680000fa 	stmdavs	r0, {r1, r3, r4, r5, r6, r7}
    c8fc:	01000001 	tsteq	r0, r1
    c900:	0008809c 	muleq	r8, ip, r0
    c904:	032c1e00 			; <UNDEFINED> instruction: 0x032c1e00
_ZN13CMonitor_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c908:	01ec0000 	mvneq	r0, r0
    c90c:	91020000 	mrsls	r0, (UNDEF: 2)
    c910:	00781f5c 	rsbseq	r1, r8, ip, asr pc
    c914:	5c273b01 			; <UNDEFINED> instruction: 0x5c273b01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c918:	02000000 	andeq	r0, r0, #0
    c91c:	791f5a91 	ldmdbvc	pc, {r0, r4, r7, r9, fp, ip, lr}	; <UNPREDICTABLE>
    c920:	333b0100 	teqcc	fp, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:22
        Close();
    c924:	0000005c 	andeq	r0, r0, ip, asr r0
    c928:	1f589102 	svcne	0x00589102
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c92c:	3b010063 	blcc	4cac0 <_bss_end+0x3add0>
    c930:	0000253b 	andeq	r2, r0, fp, lsr r5
    c934:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c938:	66756220 	ldrbtvs	r6, [r5], -r0, lsr #4
    c93c:	0a440100 	beq	110cd44 <_bss_end+0x10fb054>
    c940:	00000880 	andeq	r0, r0, r0, lsl #17
    c944:	20609102 	rsbcs	r9, r0, r2, lsl #2
    c948:	00727470 	rsbseq	r7, r2, r0, ror r4
_ZN13CMonitor_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c94c:	901e4601 	andsls	r4, lr, r1, lsl #12
    c950:	02000008 	andeq	r0, r0, #8
    c954:	1b007491 	blne	29ba0 <_bss_end+0x17eb0>
    c958:	00000025 	andeq	r0, r0, r5, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c95c:	00000890 	muleq	r0, r0, r8
    c960:	00008521 	andeq	r8, r0, r1, lsr #10
    c964:	0d001000 	stceq	0, cr1, [r0, #-0]
    c968:	00034104 	andeq	r4, r3, r4, lsl #2
    c96c:	015a1d00 	cmpeq	sl, r0, lsl #26
    c970:	2c010000 	stccs	0, cr0, [r1], {-0}
    c974:	0008b006 	andeq	fp, r8, r6
    c978:	00f9f800 	rscseq	pc, r9, r0, lsl #16
    c97c:	0000ec00 	andeq	lr, r0, r0, lsl #24
_ZN13CMonitor_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:25
    virtual uint32_t Read(char* buffer, uint32_t num) override
    c980:	f59c0100 			; <UNDEFINED> instruction: 0xf59c0100
    c984:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    c988:	0000032c 	andeq	r0, r0, ip, lsr #6
    c98c:	000001ec 	andeq	r0, r0, ip, ror #3
    c990:	1f6c9102 	svcne	0x006c9102
    c994:	2c010078 	stccs	0, cr0, [r1], {120}	; 0x78
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:27
        return 0;
    c998:	00005c28 	andeq	r5, r0, r8, lsr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:28
    }
    c99c:	6a910200 	bvs	fe44d1a4 <_bss_end+0xfe43b4b4>
    c9a0:	0100791f 	tsteq	r0, pc, lsl r9
    c9a4:	005c342c 	subseq	r3, ip, ip, lsr #8
    c9a8:	91020000 	mrsls	r0, (UNDEF: 2)
_ZN13CMonitor_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:30
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c9ac:	65731f68 	ldrbvs	r1, [r3, #-3944]!	; 0xfffff098
    c9b0:	2c010074 	stccs	0, cr0, [r1], {116}	; 0x74
    c9b4:	0001da3c 	andeq	sp, r1, ip, lsr sl
    c9b8:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
    c9bc:	746b7020 	strbtvc	r7, [fp], #-32	; 0xffffffe0
    c9c0:	26320100 	ldrtcs	r0, [r2], -r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32
        if (num > 0 && buffer != nullptr)
    c9c4:	0000030c 	andeq	r0, r0, ip, lsl #6
    c9c8:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c9cc:	00013a1d 	andeq	r3, r1, sp, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32 (discriminator 1)
    c9d0:	06210100 	strteq	r0, [r1], -r0, lsl #2
    c9d4:	0000090f 	andeq	r0, r0, pc, lsl #18
    c9d8:	0000f97c 	andeq	pc, r0, ip, ror r9	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:34
            if (mChannel == 0)
    c9dc:	0000007c 	andeq	r0, r0, ip, ror r0
    c9e0:	093a9c01 	ldmdbeq	sl!, {r0, sl, fp, ip, pc}
    c9e4:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
    c9e8:	ec000003 	stc	0, cr0, [r0], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:36
                sMonitor << buffer;
    c9ec:	02000001 	andeq	r0, r0, #1
    c9f0:	f2226c91 	vfms.f32	d6, d18, d1
    c9f4:	01000012 	tsteq	r0, r2, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:37
                return num;
    c9f8:	01da2021 	bicseq	r2, sl, r1, lsr #32
    c9fc:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:41
        return 0;
    ca00:	6b70206b 	blvs	1c14bb4 <_bss_end+0x1c02ec4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:42
    }
    ca04:	26010074 			; <UNDEFINED> instruction: 0x26010074
    ca08:	0002e41b 	andeq	lr, r2, fp, lsl r4
    ca0c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    ca10:	01002300 	mrseq	r2, LR_irq
_ZN13CMonitor_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:44
    virtual bool Close() override
    ca14:	1c010000 	stcne	0, cr0, [r1], {-0}
    ca18:	00095406 	andeq	r5, r9, r6, lsl #8
    ca1c:	00f95400 	rscseq	r5, r9, r0, lsl #8
    ca20:	00002800 	andeq	r2, r0, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:46
        if (mChannel < 0)
    ca24:	619c0100 	orrsvs	r0, ip, r0, lsl #2
    ca28:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    ca2c:	0000032c 	andeq	r0, r0, ip, lsr #6
    ca30:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:47
            return false;
    ca34:	00749102 	rsbseq	r9, r4, r2, lsl #2
    ca38:	0000dc24 	andeq	sp, r0, r4, lsr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:53
        mChannel = -1;
    ca3c:	f7010100 			; <UNDEFINED> instruction: 0xf7010100
    ca40:	75000001 	strvc	r0, [r0, #-1]
    ca44:	00000009 	andeq	r0, r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:55
        return true;
    ca48:	00000988 	andeq	r0, r0, r8, lsl #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:56
    }
    ca4c:	00032c25 	andeq	r2, r3, r5, lsr #24
    ca50:	0001ec00 	andeq	lr, r1, r0, lsl #24
    ca54:	2e562500 	cdpcs	5, 5, cr2, cr6, cr0, {0}
    ca58:	003f0000 	eorseq	r0, pc, r0
_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:58
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    ca5c:	26000000 	strcs	r0, [r0], -r0
    ca60:	00000961 	andeq	r0, r0, r1, ror #18
    ca64:	00004159 	andeq	r4, r0, r9, asr r1
    ca68:	000009a3 	andeq	r0, r0, r3, lsr #19
    ca6c:	0000f908 	andeq	pc, r0, r8, lsl #18
    ca70:	0000004c 	andeq	r0, r0, ip, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:60
        if (mChannel == 0)
    ca74:	09ac9c01 	stmibeq	ip!, {r0, sl, fp, ip, pc}
    ca78:	75270000 	strvc	r0, [r7, #-0]!
    ca7c:	02000009 	andeq	r0, r0, #9
    ca80:	28007491 	stmdacs	r0, {r0, r4, r7, sl, ip, sp, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:62
            return true;
    ca84:	000000b8 	strheq	r0, [r0], -r8
    ca88:	bd010b01 	vstrlt	d0, [r1, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:65
        return false;
    ca8c:	00000009 	andeq	r0, r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:66
    }
    ca90:	000009d3 	ldrdeq	r0, [r0], -r3
    ca94:	00032c25 	andeq	r2, r3, r5, lsr #24
    ca98:	0001ec00 	andeq	lr, r1, r0, lsl #24
    ca9c:	1e142900 	vnmlsne.f16	s4, s8, s0	; <UNPREDICTABLE>
_ZN18CMonitor_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:72
    virtual void On_Register() override
    caa0:	0b010000 	bleq	4caa8 <_bss_end+0x3adb8>
    caa4:	0001f12a 	andeq	pc, r1, sl, lsr #2
    caa8:	ac2a0000 	stcge	0, cr0, [sl], #-0
    caac:	20000009 	andcs	r0, r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:74
    }
    cab0:	ea000041 	b	cbbc <_ZN21CSegment_Display_FileD0Ev+0x8>
    cab4:	a0000009 	andge	r0, r0, r9
    cab8:	680000f8 	stmdavs	r0, {r3, r4, r5, r6, r7}
    cabc:	01000000 	mrseq	r0, (UNDEF: 0)
_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:76
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cac0:	09bd279c 	ldmibeq	sp!, {r2, r3, r4, r7, r8, r9, sl, sp}
    cac4:	91020000 	mrsls	r0, (UNDEF: 2)
    cac8:	09c62774 	stmibeq	r6, {r2, r4, r5, r6, r8, r9, sl, sp}^
    cacc:	91020000 	mrsls	r0, (UNDEF: 2)
    cad0:	99000070 	stmdbls	r0, {r4, r5, r6}
    cad4:	04000003 	streq	r0, [r0], #-3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:78
        int channel = atoi(path);
    cad8:	0036a800 	eorseq	sl, r6, r0, lsl #16
    cadc:	91010400 	tstls	r1, r0, lsl #8
    cae0:	04000043 	streq	r0, [r0], #-67	; 0xffffffbd
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:79
        if (channel != 0)
    cae4:	000045b7 			; <UNDEFINED> instruction: 0x000045b7
    cae8:	000042de 	ldrdeq	r4, [r0], -lr
    caec:	00000338 	andeq	r0, r0, r8, lsr r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:80
            return nullptr;
    caf0:	00000000 	andeq	r0, r0, r0
    caf4:	00004b23 	andeq	r4, r0, r3, lsr #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:82
        CMonitor_File* f = new CMonitor_File(channel);
    caf8:	64747302 	ldrbtvs	r7, [r4], #-770	; 0xfffffcfe
    cafc:	92000500 	andls	r0, r0, #0, 10
    cb00:	03000002 	movweq	r0, #2
    cb04:	000041b1 			; <UNDEFINED> instruction: 0x000041b1
    cb08:	41011e03 	tstmi	r1, r3, lsl #28
    cb0c:	011e0304 	tsteq	lr, r4, lsl #6
    cb10:	00003041 	andeq	r3, r0, r1, asr #32
    cb14:	45a70500 	strmi	r0, [r7, #1280]!	; 0x500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:84
        return f;
    cb18:	35020000 	strcc	r0, [r2, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:85
    }
    cb1c:	00023d0d 	andeq	r3, r2, sp, lsl #26
    cb20:	45a90600 	strmi	r0, [r9, #1536]!	; 0x600
    cb24:	02040000 	andeq	r0, r4, #0
_ZN21CSegment_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:16
    CSegment_Display_File()
    cb28:	022f0b50 	eoreq	r0, pc, #80, 22	; 0x14000
    cb2c:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    cb30:	02000046 	andeq	r0, r0, #70	; 0x46
    cb34:	02d30d52 	sbcseq	r0, r3, #5248	; 0x1480
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:17
    : mOpened(true)
    cb38:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    cb3c:	000045a9 	andeq	r4, r0, r9, lsr #11
    cb40:	a1105402 	tstge	r0, r2, lsl #8
    cb44:	d5000042 	strle	r0, [r0, #-66]	; 0xffffffbe
    cb48:	80000002 	andhi	r0, r0, r2
    cb4c:	8b000000 	blhi	cb54 <_ZN21CSegment_Display_FileC1Ev+0x2c>
    cb50:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    cb54:	000002d5 	ldrdeq	r0, [r0], -r5
    cb58:	0002d30a 	andeq	sp, r2, sl, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:20
    }
    cb5c:	810b0000 	mrshi	r0, (UNDEF: 11)
    cb60:	02000043 	andeq	r0, r0, #67	; 0x43
    cb64:	44b60c56 	ldrtmi	r0, [r6], #3158	; 0xc56
    cb68:	009f0000 	addseq	r0, pc, r0
    cb6c:	00a50000 	adceq	r0, r5, r0
_ZN21CSegment_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cb70:	d5090000 	strle	r0, [r9, #-0]
    cb74:	00000002 	andeq	r0, r0, r2
    cb78:	00419e0b 	subeq	r9, r1, fp, lsl #28
    cb7c:	0c570200 	lfmeq	f0, 2, [r7], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cb80:	000041ea 	andeq	r4, r0, sl, ror #3
    cb84:	000000b9 	strheq	r0, [r0], -r9
    cb88:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:24
        Close();
    cb8c:	0002d509 	andeq	sp, r2, r9, lsl #10
    cb90:	e30c0000 	movw	r0, #49152	; 0xc000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cb94:	02000046 	andeq	r0, r0, #70	; 0x46
    cb98:	45570d59 	ldrbmi	r0, [r7, #-3417]	; 0xfffff2a7
    cb9c:	02d30000 	sbcseq	r0, r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cba0:	00d70000 	sbcseq	r0, r7, r0
    cba4:	00dd0000 	sbcseq	r0, sp, r0
    cba8:	db090000 	blle	24cbb0 <_bss_end+0x23aec0>
    cbac:	00000002 	andeq	r0, r0, r2
    cbb0:	0045a90d 	subeq	sl, r5, sp, lsl #18
_ZN21CSegment_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cbb4:	07610200 	strbeq	r0, [r1, -r0, lsl #4]!
    cbb8:	000041c0 	andeq	r4, r0, r0, asr #3
    cbbc:	000002d5 	ldrdeq	r0, [r0], -r5
    cbc0:	0000f601 	andeq	pc, r0, r1, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cbc4:	0000fc00 	andeq	pc, r0, r0, lsl #24
    cbc8:	02d50900 	sbcseq	r0, r5, #0, 18
    cbcc:	0d000000 	stceq	0, cr0, [r0, #-0]
    cbd0:	000045a9 	andeq	r4, r0, r9, lsr #11
    cbd4:	70076302 	andvc	r6, r7, r2, lsl #6
    cbd8:	d5000041 	strle	r0, [r0, #-65]	; 0xffffffbf
    cbdc:	01000002 	tsteq	r0, r2
    cbe0:	00000115 	andeq	r0, r0, r5, lsl r1
    cbe4:	00000120 	andeq	r0, r0, r0, lsr #2
_ZN21CSegment_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:27
    virtual uint32_t Read(char* buffer, uint32_t num) override
    cbe8:	0002d509 	andeq	sp, r2, r9, lsl #10
    cbec:	02e10a00 	rsceq	r0, r1, #0, 20
    cbf0:	0d000000 	stceq	0, cr0, [r0, #-0]
    cbf4:	000045a9 	andeq	r4, r0, r9, lsr #11
    cbf8:	fd076602 	stc2	6, cr6, [r7, #-8]
    cbfc:	d5000045 	strle	r0, [r0, #-69]	; 0xffffffbb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:30
        if (num > 0)
    cc00:	01000002 	tsteq	r0, r2
    cc04:	00000139 	andeq	r0, r0, r9, lsr r1
    cc08:	00000144 	andeq	r0, r0, r4, asr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:32
            buffer[0] = sSegment_Display.Read();
    cc0c:	0002d509 	andeq	sp, r2, r9, lsl #10
    cc10:	025b0a00 	subseq	r0, fp, #0, 20
    cc14:	0d000000 	stceq	0, cr0, [r0, #-0]
    cc18:	000045a9 	andeq	r4, r0, r9, lsr #11
    cc1c:	12076a02 	andne	r6, r7, #8192	; 0x2000
    cc20:	d5000045 	strle	r0, [r0, #-69]	; 0xffffffbb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:33
            return 1;
    cc24:	01000002 	tsteq	r0, r2
    cc28:	0000015d 	andeq	r0, r0, sp, asr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:36
        return 0;
    cc2c:	00000168 	andeq	r0, r0, r8, ror #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:37
    }
    cc30:	0002d509 	andeq	sp, r2, r9, lsl #10
    cc34:	02e70a00 	rsceq	r0, r7, #0, 20
    cc38:	0d000000 	stceq	0, cr0, [r0, #-0]
    cc3c:	00004377 	andeq	r4, r0, r7, ror r3
_ZN21CSegment_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:39
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    cc40:	1e077702 	cdpne	7, 0, cr7, cr7, cr2, {0}
    cc44:	ed000042 	stc	0, cr0, [r0, #-264]	; 0xfffffef8
    cc48:	01000002 	tsteq	r0, r2
    cc4c:	00000181 	andeq	r0, r0, r1, lsl #3
    cc50:	0000018c 	andeq	r0, r0, ip, lsl #3
    cc54:	0002d509 	andeq	sp, r2, r9, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42
        for (uint32_t i = 0; i < num; i++)
    cc58:	02e10a00 	rsceq	r0, r1, #0, 20
    cc5c:	0d000000 	stceq	0, cr0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 3)
    cc60:	00004377 	andeq	r4, r0, r7, ror r3
    cc64:	67077b02 	strvs	r7, [r7, -r2, lsl #22]
    cc68:	ed000046 	stc	0, cr0, [r0, #-280]	; 0xfffffee8
    cc6c:	01000002 	tsteq	r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:43 (discriminator 2)
            sSegment_Display.Write(buffer[i]);
    cc70:	000001a5 	andeq	r0, r0, r5, lsr #3
    cc74:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    cc78:	0002d509 	andeq	sp, r2, r9, lsl #10
    cc7c:	02e70a00 	rsceq	r0, r7, #0, 20
    cc80:	0d000000 	stceq	0, cr0, [r0, #-0]
    cc84:	0000444b 	andeq	r4, r0, fp, asr #8
    cc88:	e8078202 	stmda	r7, {r1, r9, pc}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cc8c:	d3000044 	movwle	r0, #68	; 0x44
    cc90:	01000002 	tsteq	r0, r2
    cc94:	000001c9 	andeq	r0, r0, r9, asr #3
    cc98:	000001d4 	ldrdeq	r0, [r0], -r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:45
        return num;
    cc9c:	0002d509 	andeq	sp, r2, r9, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:46
    }
    cca0:	02b20900 	adcseq	r0, r2, #0, 18
    cca4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    cca8:	000045ef 	andeq	r4, r0, pc, ror #11
    ccac:	47078502 	strmi	r8, [r7, -r2, lsl #10]
_ZN21CSegment_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:48
    virtual bool Close() override
    ccb0:	01000043 	tsteq	r0, r3, asr #32
    ccb4:	000001e9 	andeq	r0, r0, r9, ror #3
    ccb8:	000001f4 	strdeq	r0, [r0], -r4
    ccbc:	0002d509 	andeq	sp, r2, r9, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:50
        if (!mOpened)
    ccc0:	02ed0a00 	rsceq	r0, sp, #0, 20
    ccc4:	0f000000 	svceq	0x00000000
    ccc8:	0000453f 	andeq	r4, r0, pc, lsr r5
    cccc:	76109102 	ldrvc	r9, [r0], -r2, lsl #2
    ccd0:	f3000044 	vhadd.u8	q0, q0, q2
    ccd4:	01000002 	tsteq	r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:51
            return false;
    ccd8:	0000020d 	andeq	r0, r0, sp, lsl #4
    ccdc:	00000213 	andeq	r0, r0, r3, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:53
        sSegment_Display.Close();
    cce0:	0002db09 	andeq	sp, r2, r9, lsl #22
    cce4:	3c100000 	ldccc	0, cr0, [r0], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:54
        mOpened = false;
    cce8:	02000046 	andeq	r0, r0, #70	; 0x46
    ccec:	46a4079a 	ssatmi	r0, #5, sl, lsl #15
    ccf0:	02fa0000 	rscseq	r0, sl, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:56
        return true;
    ccf4:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:57
    }
    ccf8:	09000002 	stmdbeq	r0, {r1}
    ccfc:	000002db 	ldrdeq	r0, [r0], -fp
    cd00:	4e110000 	cdpmi	0, 1, cr0, cr1, cr0, {0}
    cd04:	12000000 	andne	r0, r0, #0
_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cd08:	45104a02 	ldrmi	r4, [r0, #-2562]	; 0xfffff5fe
    cd0c:	00000002 	andeq	r0, r0, r2
    cd10:	1a3a0212 	bne	e8d560 <_bss_end+0xe7b870>
    cd14:	0000004e 	andeq	r0, r0, lr, asr #32
    cd18:	0042cc13 	subeq	ip, r2, r3, lsl ip
    cd1c:	08460200 	stmdaeq	r6, {r9}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:61
        return false;
    cd20:	00004265 	andeq	r4, r0, r5, ror #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:62
    }
    cd24:	0000025b 	andeq	r0, r0, fp, asr r2
    cd28:	00004e0a 	andeq	r4, r0, sl, lsl #28
    cd2c:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    cd30:	03000044 	movweq	r0, #68	; 0x44
_ZN26CSegment_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:68
    virtual void On_Register() override
    cd34:	ce1d010c 	mufgte	f0, f5, #4.0
    cd38:	15000002 	strne	r0, [r0, #-2]
    cd3c:	00004651 	andeq	r4, r0, r1, asr r6
    cd40:	00026811 	andeq	r6, r2, r1, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:71
    }
    cd44:	41b91400 			; <UNDEFINED> instruction: 0x41b91400
    cd48:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    cd4c:	02b91a01 	adcseq	r1, r9, #4096	; 0x1000
    cd50:	a2160000 	andsge	r0, r6, #0
_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:73
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cd54:	04000044 	streq	r0, [r0], #-68	; 0xffffffbc
    cd58:	160d0a68 	strne	r0, [sp], -r8, ror #20
    cd5c:	0000424c 	andeq	r4, r0, ip, asr #4
    cd60:	0d0abc04 	stceq	12, cr11, [sl, #-16]
    cd64:	454d1700 	strbmi	r1, [sp, #-1792]	; 0xfffff900
    cd68:	20030000 	andcs	r0, r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:77
        if (!sSegment_Display.Open())
    cd6c:	02b20b01 	adcseq	r0, r2, #1024	; 0x400
    cd70:	b1030000 	mrslt	r0, (UNDEF: 3)
    cd74:	03000041 	movweq	r0, #65	; 0x41
    cd78:	04410122 	strbeq	r0, [r1], #-290	; 0xfffffede
    cd7c:	41012203 	tstmi	r1, r3, lsl #4
    cd80:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    cd84:	05041800 	streq	r1, [r4, #-2048]	; 0xfffff800
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:78
            return nullptr;
    cd88:	00746e69 	rsbseq	r6, r4, r9, ror #28
    cd8c:	91070419 	tstls	r7, r9, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:80
        CSegment_Display_File* f = new CSegment_Display_File();
    cd90:	19000045 	stmdbne	r0, {r0, r2, r6}
    cd94:	01c50508 	biceq	r0, r5, r8, lsl #10
    cd98:	08190000 	ldmdaeq	r9, {}	; <UNPREDICTABLE>
    cd9c:	00465b04 	subeq	r5, r6, r4, lsl #22
    cda0:	445a1a00 	ldrbmi	r1, [sl], #-2560	; 0xfffff600
    cda4:	041b0000 	ldreq	r0, [fp], #-0
    cda8:	004e041c 	subeq	r0, lr, ip, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:82
        return f;
    cdac:	041c0000 	ldreq	r0, [ip], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:83
    }
    cdb0:	0000022f 	andeq	r0, r0, pc, lsr #4
    cdb4:	022f041d 	eoreq	r0, pc, #486539264	; 0x1d000000
    cdb8:	041e0000 	ldreq	r0, [lr], #-0
    cdbc:	0000004e 	andeq	r0, r0, lr, asr #32
_ZN20CShift_Register_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:16
    CShift_Register_File()
    cdc0:	004e041d 	subeq	r0, lr, sp, lsl r4
    cdc4:	01190000 	tsteq	r9, r0
    cdc8:	00454802 	subeq	r4, r5, r2, lsl #16
    cdcc:	6d041c00 	stcvs	12, cr1, [r4, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:17
    : mOpened(true)
    cdd0:	19000002 	stmdbne	r0, {r1}
    cdd4:	056a0801 	strbeq	r0, [sl, #-2049]!	; 0xfffff7ff
    cdd8:	02190000 	andseq	r0, r9, #0
    cddc:	0003dc07 	andeq	sp, r3, r7, lsl #24
    cde0:	07041900 	streq	r1, [r4, -r0, lsl #18]
    cde4:	0000458c 	andeq	r4, r0, ip, lsl #11
    cde8:	87070819 	smladhi	r7, r9, r8, r0
    cdec:	19000045 	stmdbne	r0, {r0, r2, r6}
    cdf0:	056c0601 	strbeq	r0, [ip, #-1537]!	; 0xfffff9ff
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:20
    }
    cdf4:	02190000 	andseq	r0, r9, #0
    cdf8:	00059905 	andeq	r9, r5, r5, lsl #18
    cdfc:	05041900 	streq	r1, [r4, #-2304]	; 0xfffff700
    ce00:	000001ca 	andeq	r0, r0, sl, asr #3
    ce04:	a9070419 	stmdbge	r7, {r0, r3, r4, sl}
_ZN20CShift_Register_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    ce08:	19000041 	stmdbne	r0, {r0, r6}
    ce0c:	459e1002 	ldrmi	r1, [lr, #2]
    ce10:	04190000 	ldreq	r0, [r9], #-0
    ce14:	0045f410 	subeq	pc, r5, r0, lsl r4	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    ce18:	46941f00 	ldrmi	r1, [r4], r0, lsl #30
    ce1c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    ce20:	00438b01 	subeq	r8, r3, r1, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:24
        Close();
    ce24:	0002d300 	andeq	sp, r2, r0, lsl #6
    ce28:	00fd5400 	rscseq	r5, sp, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    ce2c:	00000400 	andeq	r0, r0, r0, lsl #8
    ce30:	899c0100 	ldmibhi	ip, {r8}
    ce34:	20000003 	andcs	r0, r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    ce38:	01007a73 	tsteq	r0, r3, ror sl
    ce3c:	02721d1e 	rsbseq	r1, r2, #1920	; 0x780
    ce40:	00040000 	andeq	r0, r4, r0
    ce44:	00000000 	andeq	r0, r0, r0
    ce48:	58210000 	stmdapl	r1!, {}	; <UNPREDICTABLE>
_ZN20CShift_Register_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    ce4c:	900000fd 	strdls	r0, [r0], -sp
    ce50:	22000003 	andcs	r0, r0, #3
    ce54:	f3035001 	vhadd.u8	d5, d3, d1
    ce58:	00005001 	andeq	r5, r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    ce5c:	73080119 	movwvc	r0, #33049	; 0x8119
    ce60:	23000005 	movwcs	r0, #5
    ce64:	000025a9 	andeq	r2, r0, r9, lsr #11
    ce68:	00002943 	andeq	r2, r0, r3, asr #18
    ce6c:	001a7e06 	andseq	r7, sl, r6, lsl #28
    ce70:	00000022 	andeq	r0, r0, r2, lsr #32
    ce74:	38da0002 	ldmcc	sl, {r1}^
    ce78:	01040000 	mrseq	r0, (UNDEF: 4)
    ce7c:	00004d25 	andeq	r4, r0, r5, lsr #26
_ZN20CShift_Register_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:27
    virtual uint32_t Read(char* buffer, uint32_t num) override
    ce80:	0000fd58 	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
    ce84:	0000ff64 	andeq	pc, r0, r4, ror #30
    ce88:	000046ea 	andeq	r4, r0, sl, ror #13
    ce8c:	0000471a 	andeq	r4, r0, sl, lsl r7
    ce90:	00004782 	andeq	r4, r0, r2, lsl #15
    ce94:	00228001 	eoreq	r8, r2, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:31
        return 0;
    ce98:	00020000 	andeq	r0, r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:32
    }
    ce9c:	000038ee 	andeq	r3, r0, lr, ror #17
    cea0:	4da20104 	stfmis	f0, [r2, #16]!
    cea4:	ff640000 			; <UNDEFINED> instruction: 0xff640000
    cea8:	ff680000 			; <UNDEFINED> instruction: 0xff680000
_ZN20CShift_Register_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:34
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    ceac:	46ea0000 	strbtmi	r0, [sl], r0
    ceb0:	471a0000 	ldrmi	r0, [sl, -r0]
    ceb4:	47820000 	strmi	r0, [r2, r0]
    ceb8:	80010000 	andhi	r0, r1, r0
    cebc:	0000032a 	andeq	r0, r0, sl, lsr #6
    cec0:	39020004 	stmdbcc	r2, {r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38
        for (uint32_t i = 0; i < num; i++)
    cec4:	01040000 	mrseq	r0, (UNDEF: 4)
    cec8:	000048ae 	andeq	r4, r0, lr, lsr #17
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 3)
    cecc:	004a5b0c 	subeq	r5, sl, ip, lsl #22
    ced0:	00471a00 	subeq	r1, r7, r0, lsl #20
    ced4:	004e0200 	subeq	r0, lr, r0, lsl #4
    ced8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:39 (discriminator 2)
            sShift_Register.Shift_In(static_cast<uint8_t>(buffer[i]));
    cedc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    cee0:	91070403 	tstls	r7, r3, lsl #8
    cee4:	03000045 	movweq	r0, #69	; 0x45
    cee8:	01c50508 	biceq	r0, r5, r8, lsl #10
    ceec:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    cef0:	00465b04 	subeq	r5, r6, r4, lsl #22
    cef4:	08010300 	stmdaeq	r1, {r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cef8:	0000056a 	andeq	r0, r0, sl, ror #10
    cefc:	6c060103 	stfvss	f0, [r6], {3}
    cf00:	04000005 	streq	r0, [r0], #-5
    cf04:	00004c10 	andeq	r4, r0, r0, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:41
        return num;
    cf08:	00390107 	eorseq	r0, r9, r7, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:42
    }
    cf0c:	17010000 	strne	r0, [r1, -r0]
    cf10:	0001d406 	andeq	sp, r1, r6, lsl #8
    cf14:	47bd0500 	ldrmi	r0, [sp, r0, lsl #10]!
    cf18:	05000000 	streq	r0, [r0, #-0]
_ZN20CShift_Register_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:44
    virtual bool Close() override
    cf1c:	00004cbf 			; <UNDEFINED> instruction: 0x00004cbf
    cf20:	49900501 	ldmibmi	r0, {r0, r8, sl}
    cf24:	05020000 	streq	r0, [r2, #-0]
    cf28:	00004a4e 	andeq	r4, r0, lr, asr #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:46
        if (!mOpened)
    cf2c:	4c290503 	cfstr32mi	mvfx0, [r9], #-12
    cf30:	05040000 	streq	r0, [r4, #-0]
    cf34:	00004ccf 	andeq	r4, r0, pc, asr #25
    cf38:	4c3f0505 	cfldr32mi	mvfx0, [pc], #-20	; cf2c <_ZN20CShift_Register_File5CloseEv+0x10>
    cf3c:	05060000 	streq	r0, [r6, #-0]
    cf40:	00004a8b 	andeq	r4, r0, fp, lsl #21
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:47
            return false;
    cf44:	4bba0507 	blmi	fee8e368 <_bss_end+0xfee7c678>
    cf48:	05080000 	streq	r0, [r8, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:49
        sShift_Register.Close();
    cf4c:	00004bc8 	andeq	r4, r0, r8, asr #23
    cf50:	4bd60509 	blmi	ff58e37c <_bss_end+0xff57c68c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:50
        mOpened = false;
    cf54:	050a0000 	streq	r0, [sl, #-0]
    cf58:	00004add 	ldrdeq	r4, [r0], -sp
    cf5c:	4acd050b 	bmi	ff34e390 <_bss_end+0xff33c6a0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:52
        return true;
    cf60:	050c0000 	streq	r0, [ip, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:53
    }
    cf64:	000047d9 	ldrdeq	r4, [r0], -r9
    cf68:	47f2050d 	ldrbmi	r0, [r2, sp, lsl #10]!
    cf6c:	050e0000 	streq	r0, [lr, #-0]
    cf70:	00004abe 			; <UNDEFINED> instruction: 0x00004abe
_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:55
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cf74:	4c82050f 	cfstr32mi	mvfx0, [r2], {15}
    cf78:	05100000 	ldreq	r0, [r0, #-0]
    cf7c:	00004bff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    cf80:	4c730511 	cfldr64mi	mvdx0, [r3], #-68	; 0xffffffbc
    cf84:	05120000 	ldreq	r0, [r2, #-0]
    cf88:	0000489f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:57
        return false;
    cf8c:	481c0513 	ldmdami	ip, {r0, r1, r4, r8, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:58
    }
    cf90:	05140000 	ldreq	r0, [r4, #-0]
    cf94:	000047e6 	andeq	r4, r0, r6, ror #15
    cf98:	4b5c0515 	blmi	170e3f4 <_bss_end+0x16fc704>
    cf9c:	05160000 	ldreq	r0, [r6, #-0]
_ZN25CShift_Register_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:64
    virtual void On_Register() override
    cfa0:	00004853 	andeq	r4, r0, r3, asr r8
    cfa4:	478e0517 	usada8mi	lr, r7, r5, r0
    cfa8:	05180000 	ldreq	r0, [r8, #-0]
    cfac:	00004c65 	andeq	r4, r0, r5, ror #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:67
    }
    cfb0:	4a9a0519 	bmi	fe68e41c <_bss_end+0xfe67c72c>
    cfb4:	051a0000 	ldreq	r0, [sl, #-0]
    cfb8:	00004b74 	andeq	r4, r0, r4, ror fp
    cfbc:	4827051b 	stmdami	r7!, {r0, r1, r3, r4, r8, sl}
_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:69
    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cfc0:	051c0000 	ldreq	r0, [ip, #-0]
    cfc4:	00004a33 	andeq	r4, r0, r3, lsr sl
    cfc8:	4982051d 	stmibmi	r2, {r0, r2, r3, r4, r8, sl}
    cfcc:	051e0000 	ldreq	r0, [lr, #-0]
    cfd0:	00004bf1 	strdeq	r4, [r0], -r1
    cfd4:	4c4d051f 	cfstr64mi	mvdx0, [sp], {31}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:73
        if (!sShift_Register.Open())
    cfd8:	05200000 	streq	r0, [r0, #-0]!
    cfdc:	00004c8e 	andeq	r4, r0, lr, lsl #25
    cfe0:	4c9c0521 	cfldr32mi	mvfx0, [ip], {33}	; 0x21
    cfe4:	05220000 	streq	r0, [r2, #-0]!
    cfe8:	00004ab1 			; <UNDEFINED> instruction: 0x00004ab1
    cfec:	49f70523 	ldmibmi	r7!, {r0, r1, r5, r8, sl}^
    cff0:	05240000 	streq	r0, [r4, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:74
            return nullptr;
    cff4:	00004836 	andeq	r4, r0, r6, lsr r8
    cff8:	4a7e0525 	bmi	1f8e494 <_bss_end+0x1f7c7a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:76
        CShift_Register_File* f = new CShift_Register_File();
    cffc:	05260000 	streq	r0, [r6, #-0]!
    d000:	0000499c 	muleq	r0, ip, r9
    d004:	4c1c0527 	cfldr32mi	mvfx0, [ip], {39}	; 0x27
    d008:	05280000 	streq	r0, [r8, #-0]!
    d00c:	000049ac 	andeq	r4, r0, ip, lsr #19
    d010:	49bb0529 	ldmibmi	fp!, {r0, r3, r5, r8, sl}
    d014:	052a0000 	streq	r0, [sl, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:78
        return f;
    d018:	000049ca 	andeq	r4, r0, sl, asr #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:79
    }
    d01c:	49d9052b 	ldmibmi	r9, {r0, r1, r3, r5, r8, sl}^
    d020:	052c0000 	streq	r0, [ip, #-0]!
    d024:	00004967 	andeq	r4, r0, r7, ror #18
    d028:	49e8052d 	stmibmi	r8!, {r0, r2, r3, r5, r8, sl}^
_ZN10CTRNG_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:16
    CTRNG_File()
    d02c:	052e0000 	streq	r0, [lr, #-0]!
    d030:	00004bab 	andeq	r4, r0, fp, lsr #23
    d034:	4a06052f 	bmi	18e4f8 <_bss_end+0x17c808>
    d038:	05300000 	ldreq	r0, [r0, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:17
    {
    d03c:	00004a15 	andeq	r4, r0, r5, lsl sl
    d040:	47c70531 			; <UNDEFINED> instruction: 0x47c70531
    d044:	05320000 	ldreq	r0, [r2, #-0]!
    d048:	00004afc 	strdeq	r4, [r0], -ip
    d04c:	4b0c0533 	blmi	30e520 <_bss_end+0x2fc830>
    d050:	05340000 	ldreq	r0, [r4, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:19
    }
    d054:	00004b1c 	andeq	r4, r0, ip, lsl fp
    d058:	49550535 	ldmdbmi	r5, {r0, r2, r4, r5, r8, sl}^
    d05c:	05360000 	ldreq	r0, [r6, #-0]!
    d060:	00004b2c 	andeq	r4, r0, ip, lsr #22
    d064:	4b3c0537 	blmi	f0e548 <_bss_end+0xefc858>
_ZN10CTRNG_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21
    ~CTRNG_File()
    d068:	05380000 	ldreq	r0, [r8, #-0]!
    d06c:	00004b4c 	andeq	r4, r0, ip, asr #22
    d070:	48460539 	stmdami	r6, {r0, r3, r4, r5, r8, sl}^
    d074:	053a0000 	ldreq	r0, [sl, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    d078:	000047ff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    d07c:	4a24053b 	bmi	90e570 <_bss_end+0x8fc880>
    d080:	053c0000 	ldreq	r0, [ip, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:23
        Close();
    d084:	0000479e 	muleq	r0, lr, r7
    d088:	4b67053d 	blmi	19ce584 <_bss_end+0x19bc894>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    d08c:	003e0000 	eorseq	r0, lr, r0
    d090:	00488606 	subeq	r8, r8, r6, lsl #12
    d094:	6b010200 	blvs	4d89c <_bss_end+0x3bbac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    d098:	01ff0802 	mvnseq	r0, r2, lsl #16
    d09c:	49070000 	stmdbmi	r7, {}	; <UNPREDICTABLE>
    d0a0:	0100004a 	tsteq	r0, sl, asr #32
    d0a4:	47140270 			; <UNDEFINED> instruction: 0x47140270
    d0a8:	00000000 	andeq	r0, r0, r0
_ZN10CTRNG_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21
    ~CTRNG_File()
    d0ac:	00496207 	subeq	r6, r9, r7, lsl #4
    d0b0:	02710100 	rsbseq	r0, r1, #0, 2
    d0b4:	00004714 	andeq	r4, r0, r4, lsl r7
    d0b8:	08000100 	stmdaeq	r0, {r8}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    d0bc:	000001d4 	ldrdeq	r0, [r0], -r4
    d0c0:	0001ff09 	andeq	pc, r1, r9, lsl #30
    d0c4:	00021400 	andeq	r1, r2, r0, lsl #8
    d0c8:	00240a00 	eoreq	r0, r4, r0, lsl #20
    d0cc:	00110000 	andseq	r0, r1, r0
    d0d0:	00020408 	andeq	r0, r2, r8, lsl #8
    d0d4:	4aea0b00 	bmi	ffa8fcdc <_bss_end+0xffa7dfec>
    d0d8:	74010000 	strvc	r0, [r1], #-0
    d0dc:	02142602 	andseq	r2, r4, #2097152	; 0x200000
_ZN10CTRNG_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:26
    virtual uint32_t Read(char* buffer, uint32_t num) override
    d0e0:	3a240000 	bcc	90d0e8 <_bss_end+0x8fb3f8>
    d0e4:	0f3d0a3d 	svceq	0x003d0a3d
    d0e8:	323d243d 	eorscc	r2, sp, #1023410176	; 0x3d000000
    d0ec:	053d023d 	ldreq	r0, [sp, #-573]!	; 0xfffffdc3
    d0f0:	0d3d133d 	ldceq	3, cr1, [sp, #-244]!	; 0xffffff0c
    d0f4:	233d0c3d 	teqcs	sp, #15616	; 0x3d00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:28
        const uint32_t wcount = num / 4;
    d0f8:	263d113d 			; <UNDEFINED> instruction: 0x263d113d
    d0fc:	173d013d 			; <UNDEFINED> instruction: 0x173d013d
    d100:	093d083d 	ldmdbeq	sp!, {r0, r2, r3, r4, r5, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:29
        uint32_t* wbuf = reinterpret_cast<uint32_t*>(buffer);
    d104:	0300003d 	movweq	r0, #61	; 0x3d
    d108:	03dc0702 	bicseq	r0, ip, #524288	; 0x80000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30
        for (int i = 0; i < wcount; i++)
    d10c:	01030000 	mrseq	r0, (UNDEF: 3)
    d110:	00057308 	andeq	r7, r5, r8, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 3)
    d114:	040d0c00 	streq	r0, [sp], #-3072	; 0xfffff400
    d118:	00000259 	andeq	r0, r0, r9, asr r2
    d11c:	004caa0e 	subeq	sl, ip, lr, lsl #20
    d120:	39010700 	stmdbcc	r1, {r8, r9, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:31 (discriminator 2)
            wbuf[i] = sTRNG.Get_Random_Number();
    d124:	02000000 	andeq	r0, r0, #0
    d128:	9e0604f7 	mcrls	4, 0, r0, cr6, cr7, {7}
    d12c:	05000002 	streq	r0, [r0, #-2]
    d130:	00004860 	andeq	r4, r0, r0, ror #16
    d134:	486b0500 	stmdami	fp!, {r8, sl}^
    d138:	05010000 	streq	r0, [r1, #-0]
    d13c:	0000487d 	andeq	r4, r0, sp, ror r8
    d140:	48970502 	ldmmi	r7, {r1, r8, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 2)
        for (int i = 0; i < wcount; i++)
    d144:	05030000 	streq	r0, [r3, #-0]
    d148:	00004be4 	andeq	r4, r0, r4, ror #23
    d14c:	49760504 	ldmdbmi	r6!, {r2, r8, sl}^
    d150:	05050000 	streq	r0, [r5, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:33
        if (wcount * 4 != num)
    d154:	00004b9d 	muleq	r0, sp, fp
    d158:	02030006 	andeq	r0, r3, #6
    d15c:	00059905 	andeq	r9, r5, r5, lsl #18
    d160:	07080300 	streq	r0, [r8, -r0, lsl #6]
    d164:	00004587 	andeq	r4, r0, r7, lsl #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37
            for (int i = wcount * 4; i < num; i++)
    d168:	b7040403 	strlt	r0, [r4, -r3, lsl #8]
    d16c:	03000047 	movweq	r0, #71	; 0x47
    d170:	47af0308 	strmi	r0, [pc, r8, lsl #6]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 3)
    d174:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    d178:	00466004 	subeq	r6, r6, r4
    d17c:	03100300 	tsteq	r0, #0, 6
    d180:	00004b8e 	andeq	r4, r0, lr, lsl #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:38 (discriminator 2)
                buffer[i] = static_cast<uint8_t>(sTRNG.Get_Random_Number());
    d184:	004b850f 	subeq	r8, fp, pc, lsl #10
    d188:	102a0300 	eorne	r0, sl, r0, lsl #6
    d18c:	0000025a 	andeq	r0, r0, sl, asr r2
    d190:	0002c809 	andeq	ip, r2, r9, lsl #16
    d194:	0002df00 	andeq	sp, r2, r0, lsl #30
    d198:	11001000 	mrsne	r1, (UNDEF: 0)
    d19c:	00003bb6 			; <UNDEFINED> instruction: 0x00003bb6
    d1a0:	d4112f03 	ldrle	r2, [r1], #-3843	; 0xfffff0fd
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 2)
            for (int i = wcount * 4; i < num; i++)
    d1a4:	11000002 	tstne	r0, r2
    d1a8:	00003be8 	andeq	r3, r0, r8, ror #23
    d1ac:	d4113003 	ldrle	r3, [r1], #-3
    d1b0:	09000002 	stmdbeq	r0, {r1}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:41
        return 0;
    d1b4:	000002c8 	andeq	r0, r0, r8, asr #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:42
    }
    d1b8:	00000307 	andeq	r0, r0, r7, lsl #6
    d1bc:	0000240a 	andeq	r2, r0, sl, lsl #8
    d1c0:	12000100 	andne	r0, r0, #0, 2
    d1c4:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
_ZN10CTRNG_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:44
    virtual uint32_t Write(const char* buffer, uint32_t num) override
    d1c8:	0a093304 	beq	259de0 <_bss_end+0x2480f0>
    d1cc:	000002f7 	strdeq	r0, [r0], -r7
    d1d0:	0b3c0305 	bleq	f0ddec <_bss_end+0xefc0fc>
    d1d4:	eb120001 	bl	48d1e0 <_bss_end+0x47b4f0>
    d1d8:	04000002 	streq	r0, [r0], #-2
    d1dc:	f70a0934 			; <UNDEFINED> instruction: 0xf70a0934
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:48
        return 0;
    d1e0:	05000002 	streq	r0, [r0, #-2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:49
    }
    d1e4:	010b7003 	tsteq	fp, r3
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	110e1b0e 	tstne	lr, lr, lsl #22
       c:	10061201 	andne	r1, r6, r1, lsl #4
      10:	02000017 	andeq	r0, r0, #23
      14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
      18:	0b3a0e03 	bleq	e8382c <_bss_end+0xe71b3c>
      1c:	0b390b3b 	bleq	e42d10 <_bss_end+0xe31020>
      20:	06120111 			; <UNDEFINED> instruction: 0x06120111
      24:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      28:	03000019 	movweq	r0, #25
      2c:	0e030139 	mcreq	1, 0, r0, cr3, cr9, {1}
      30:	0b3b0b3a 	bleq	ec2d20 <_bss_end+0xeb1030>
      34:	00001301 	andeq	r1, r0, r1, lsl #6
      38:	3f012e04 	svccc	0x00012e04
      3c:	3a0e0319 	bcc	380ca8 <_bss_end+0x36efb8>
      40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      44:	01193c0b 	tsteq	r9, fp, lsl #24
      48:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
      4c:	13490005 	movtne	r0, #36869	; 0x9005
      50:	16060000 	strne	r0, [r6], -r0
      54:	3a0e0300 	bcc	380c5c <_bss_end+0x36ef6c>
      58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      5c:	0013490b 	andseq	r4, r3, fp, lsl #18
      60:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
      64:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
      68:	0b3b0b3a 	bleq	ec2d58 <_bss_end+0xeb1068>
      6c:	13490b39 	movtne	r0, #39737	; 0x9b39
      70:	0000193c 	andeq	r1, r0, ip, lsr r9
      74:	0b000f08 	bleq	3c9c <CPSR_IRQ_INHIBIT+0x3c1c>
      78:	0013490b 	andseq	r4, r3, fp, lsl #18
      7c:	00240900 	eoreq	r0, r4, r0, lsl #18
      80:	0b3e0b0b 	bleq	f82cb4 <_bss_end+0xf70fc4>
      84:	00000e03 	andeq	r0, r0, r3, lsl #28
      88:	47012e0a 	strmi	r2, [r1, -sl, lsl #28]
      8c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      90:	97184006 	ldrls	r4, [r8, -r6]
      94:	13011942 	movwne	r1, #6466	; 0x1942
      98:	050b0000 	streq	r0, [fp, #-0]
      9c:	02134900 	andseq	r4, r3, #0, 18
      a0:	0c000018 	stceq	0, cr0, [r0], {24}
      a4:	08030005 	stmdaeq	r3, {r0, r2}
      a8:	0b3b0b3a 	bleq	ec2d98 <_bss_end+0xeb10a8>
      ac:	13490b39 	movtne	r0, #39737	; 0x9b39
      b0:	00001802 	andeq	r1, r0, r2, lsl #16
      b4:	0b00240d 	bleq	90f0 <_ZN16CI2C_Transaction11Set_AddressEt+0x18>
      b8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      bc:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
      c0:	1347012e 	movtne	r0, #28974	; 0x712e
      c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
      c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      cc:	00000019 	andeq	r0, r0, r9, lsl r0
      d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
      d4:	030b130e 	movweq	r1, #45838	; 0xb30e
      d8:	110e1b0e 	tstne	lr, lr, lsl #22
      dc:	10061201 	andne	r1, r6, r1, lsl #4
      e0:	02000017 	andeq	r0, r0, #23
      e4:	0b0b0024 	bleq	2c017c <_bss_end+0x2ae48c>
      e8:	0e030b3e 	vmoveq.16	d3[0], r0
      ec:	24030000 	strcs	r0, [r3], #-0
      f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      f4:	0008030b 	andeq	r0, r8, fp, lsl #6
      f8:	00160400 	andseq	r0, r6, r0, lsl #8
      fc:	0b3a0e03 	bleq	e83910 <_bss_end+0xe71c20>
     100:	0b390b3b 	bleq	e42df4 <_bss_end+0xe31104>
     104:	00001349 	andeq	r1, r0, r9, asr #6
     108:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     10c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     110:	13490035 	movtne	r0, #36917	; 0x9035
     114:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
     118:	3a080301 	bcc	200d24 <_bss_end+0x1ef034>
     11c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     120:	0013010b 	andseq	r0, r3, fp, lsl #2
     124:	00340800 	eorseq	r0, r4, r0, lsl #16
     128:	0b3a0e03 	bleq	e8393c <_bss_end+0xe71c4c>
     12c:	0b390b3b 	bleq	e42e20 <_bss_end+0xe31130>
     130:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     134:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
     138:	34090000 	strcc	r0, [r9], #-0
     13c:	3a0e0300 	bcc	380d44 <_bss_end+0x36f054>
     140:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     144:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     148:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
     14c:	0a000019 	beq	1b8 <CPSR_IRQ_INHIBIT+0x138>
     150:	0e030104 	adfeqs	f0, f3, f4
     154:	0b3e196d 	bleq	f86710 <_bss_end+0xf74a20>
     158:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     15c:	0b3b0b3a 	bleq	ec2e4c <_bss_end+0xeb115c>
     160:	13010b39 	movwne	r0, #6969	; 0x1b39
     164:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     168:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     16c:	0c00000b 	stceq	0, cr0, [r0], {11}
     170:	13470034 	movtne	r0, #28724	; 0x7034
     174:	020d0000 	andeq	r0, sp, #0
     178:	0b0e0301 	bleq	380d84 <_bss_end+0x36f094>
     17c:	3b0b3a0b 	blcc	2ce9b0 <_bss_end+0x2bccc0>
     180:	010b390b 	tsteq	fp, fp, lsl #18
     184:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     188:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     18c:	0b3b0b3a 	bleq	ec2e7c <_bss_end+0xeb118c>
     190:	13490b39 	movtne	r0, #39737	; 0x9b39
     194:	00000b38 	andeq	r0, r0, r8, lsr fp
     198:	3f012e0f 	svccc	0x00012e0f
     19c:	3a0e0319 	bcc	380e08 <_bss_end+0x36f118>
     1a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1a4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     1a8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     1ac:	01136419 	tsteq	r3, r9, lsl r4
     1b0:	10000013 	andne	r0, r0, r3, lsl r0
     1b4:	13490005 	movtne	r0, #36869	; 0x9005
     1b8:	00001934 	andeq	r1, r0, r4, lsr r9
     1bc:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     1c0:	12000013 	andne	r0, r0, #19
     1c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     1c8:	0b3a0e03 	bleq	e839dc <_bss_end+0xe71cec>
     1cc:	0b390b3b 	bleq	e42ec0 <_bss_end+0xe311d0>
     1d0:	0b320e6e 	bleq	c83b90 <_bss_end+0xc71ea0>
     1d4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     1d8:	00001301 	andeq	r1, r0, r1, lsl #6
     1dc:	3f012e13 	svccc	0x00012e13
     1e0:	3a0e0319 	bcc	380e4c <_bss_end+0x36f15c>
     1e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1e8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     1ec:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     1f0:	00136419 	andseq	r6, r3, r9, lsl r4
     1f4:	000f1400 	andeq	r1, pc, r0, lsl #8
     1f8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     1fc:	01150000 	tsteq	r5, r0
     200:	01134901 	tsteq	r3, r1, lsl #18
     204:	16000013 			; <UNDEFINED> instruction: 0x16000013
     208:	13490021 	movtne	r0, #36897	; 0x9021
     20c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     210:	0b001017 	bleq	4274 <CPSR_IRQ_INHIBIT+0x41f4>
     214:	0013490b 	andseq	r4, r3, fp, lsl #18
     218:	00341800 	eorseq	r1, r4, r0, lsl #16
     21c:	0b3a0e03 	bleq	e83a30 <_bss_end+0xe71d40>
     220:	0b390b3b 	bleq	e42f14 <_bss_end+0xe31224>
     224:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     228:	0000193c 	andeq	r1, r0, ip, lsr r9
     22c:	47003419 	smladmi	r0, r9, r4, r3
     230:	3b0b3a13 	blcc	2cea84 <_bss_end+0x2bcd94>
     234:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     238:	1a000018 	bne	2a0 <CPSR_IRQ_INHIBIT+0x220>
     23c:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     240:	01111934 	tsteq	r1, r4, lsr r9
     244:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     248:	00194296 	mulseq	r9, r6, r2
     24c:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     250:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     254:	06120111 			; <UNDEFINED> instruction: 0x06120111
     258:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     25c:	00130119 	andseq	r0, r3, r9, lsl r1
     260:	00051c00 	andeq	r1, r5, r0, lsl #24
     264:	0b3a0e03 	bleq	e83a78 <_bss_end+0xe71d88>
     268:	0b390b3b 	bleq	e42f5c <_bss_end+0xe3126c>
     26c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     270:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     274:	3a134701 	bcc	4d1e80 <_bss_end+0x4c0190>
     278:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     27c:	1113640b 	tstne	r3, fp, lsl #8
     280:	40061201 	andmi	r1, r6, r1, lsl #4
     284:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     288:	00001301 	andeq	r1, r0, r1, lsl #6
     28c:	0300051e 	movweq	r0, #1310	; 0x51e
     290:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     294:	00180219 	andseq	r0, r8, r9, lsl r2
     298:	00051f00 	andeq	r1, r5, r0, lsl #30
     29c:	0b3a0803 	bleq	e822b0 <_bss_end+0xe705c0>
     2a0:	0b390b3b 	bleq	e42f94 <_bss_end+0xe312a4>
     2a4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     2a8:	34200000 	strtcc	r0, [r0], #-0
     2ac:	3a0e0300 	bcc	380eb4 <_bss_end+0x36f1c4>
     2b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     2b8:	21000018 	tstcs	r0, r8, lsl r0
     2bc:	1347012e 	movtne	r0, #28974	; 0x712e
     2c0:	0b3b0b3a 	bleq	ec2fb0 <_bss_end+0xeb12c0>
     2c4:	13640b39 	cmnne	r4, #58368	; 0xe400
     2c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     2cc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     2d0:	00130119 	andseq	r0, r3, r9, lsl r1
     2d4:	00342200 	eorseq	r2, r4, r0, lsl #4
     2d8:	0b3a0803 	bleq	e822ec <_bss_end+0xe705fc>
     2dc:	0b390b3b 	bleq	e42fd0 <_bss_end+0xe312e0>
     2e0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     2e4:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     2e8:	3a134701 	bcc	4d1ef4 <_bss_end+0x4c0204>
     2ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2f0:	2013640b 	andscs	r6, r3, fp, lsl #8
     2f4:	0013010b 	andseq	r0, r3, fp, lsl #2
     2f8:	00052400 	andeq	r2, r5, r0, lsl #8
     2fc:	13490e03 	movtne	r0, #40451	; 0x9e03
     300:	00001934 	andeq	r1, r0, r4, lsr r9
     304:	03000525 	movweq	r0, #1317	; 0x525
     308:	3b0b3a0e 	blcc	2ceb48 <_bss_end+0x2bce58>
     30c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     310:	26000013 			; <UNDEFINED> instruction: 0x26000013
     314:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     318:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     31c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     320:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     324:	27000019 	smladcs	r0, r9, r0, r0
     328:	13310005 	teqne	r1, #5
     32c:	00001802 	andeq	r1, r0, r2, lsl #16
     330:	01110100 	tsteq	r1, r0, lsl #2
     334:	0b130e25 	bleq	4c3bd0 <_bss_end+0x4b1ee0>
     338:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     33c:	01111755 	tsteq	r1, r5, asr r7
     340:	00001710 	andeq	r1, r0, r0, lsl r7
     344:	0b002402 	bleq	9354 <_ZN8CMonitor6ScrollEv+0xe0>
     348:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     34c:	0300000e 	movweq	r0, #14
     350:	13490026 	movtne	r0, #36902	; 0x9026
     354:	24040000 	strcs	r0, [r4], #-0
     358:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     35c:	0008030b 	andeq	r0, r8, fp, lsl #6
     360:	00350500 	eorseq	r0, r5, r0, lsl #10
     364:	00001349 	andeq	r1, r0, r9, asr #6
     368:	03001606 	movweq	r1, #1542	; 0x606
     36c:	3b0b3a0e 	blcc	2cebac <_bss_end+0x2bcebc>
     370:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     374:	07000013 	smladeq	r0, r3, r0, r0
     378:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
     37c:	0b3b0b3a 	bleq	ec306c <_bss_end+0xeb137c>
     380:	13010b39 	movwne	r0, #6969	; 0x1b39
     384:	34080000 	strcc	r0, [r8], #-0
     388:	3a0e0300 	bcc	380f90 <_bss_end+0x36f2a0>
     38c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     390:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     394:	6c061c19 	stcvs	12, cr1, [r6], {25}
     398:	09000019 	stmdbeq	r0, {r0, r3, r4}
     39c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3a0:	0b3b0b3a 	bleq	ec3090 <_bss_end+0xeb13a0>
     3a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     3a8:	0b1c193c 	bleq	7068a0 <_bss_end+0x6f4bb0>
     3ac:	0000196c 	andeq	r1, r0, ip, ror #18
     3b0:	0301040a 	movweq	r0, #5130	; 0x140a
     3b4:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     3b8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     3bc:	3b0b3a13 	blcc	2cec10 <_bss_end+0x2bcf20>
     3c0:	000b390b 	andeq	r3, fp, fp, lsl #18
     3c4:	00280b00 	eoreq	r0, r8, r0, lsl #22
     3c8:	0b1c0e03 	bleq	703bdc <_bss_end+0x6f1eec>
     3cc:	340c0000 	strcc	r0, [ip], #-0
     3d0:	00134700 	andseq	r4, r3, r0, lsl #14
     3d4:	00340d00 	eorseq	r0, r4, r0, lsl #26
     3d8:	0b3a0e03 	bleq	e83bec <_bss_end+0xe71efc>
     3dc:	0b390b3b 	bleq	e430d0 <_bss_end+0xe313e0>
     3e0:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
     3e4:	00001802 	andeq	r1, r0, r2, lsl #16
     3e8:	0301020e 	movweq	r0, #4622	; 0x120e
     3ec:	3a0b0b0e 	bcc	2c302c <_bss_end+0x2b133c>
     3f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3f4:	0013010b 	andseq	r0, r3, fp, lsl #2
     3f8:	000d0f00 	andeq	r0, sp, r0, lsl #30
     3fc:	0b3a0e03 	bleq	e83c10 <_bss_end+0xe71f20>
     400:	0b390b3b 	bleq	e430f4 <_bss_end+0xe31404>
     404:	0b381349 	bleq	e05130 <_bss_end+0xdf3440>
     408:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     40c:	03193f01 	tsteq	r9, #1, 30
     410:	3b0b3a0e 	blcc	2cec50 <_bss_end+0x2bcf60>
     414:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     418:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     41c:	8b193c0b 	blhi	64f450 <_bss_end+0x63d760>
     420:	13640b01 	cmnne	r4, #1024	; 0x400
     424:	00001301 	andeq	r1, r0, r1, lsl #6
     428:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     42c:	00193413 	andseq	r3, r9, r3, lsl r4
     430:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     434:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     438:	0b3b0b3a 	bleq	ec3128 <_bss_end+0xeb1438>
     43c:	0e6e0b39 	vmoveq.8	d14[5], r0
     440:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     444:	00001364 	andeq	r1, r0, r4, ror #6
     448:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
     44c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     450:	13490101 	movtne	r0, #37121	; 0x9101
     454:	00001301 	andeq	r1, r0, r1, lsl #6
     458:	49002115 	stmdbmi	r0, {r0, r2, r4, r8, sp}
     45c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     460:	000f1600 	andeq	r1, pc, r0, lsl #12
     464:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     468:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     46c:	03193f01 	tsteq	r9, #1, 30
     470:	3b0b3a08 	blcc	2cec98 <_bss_end+0x2bcfa8>
     474:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     478:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     47c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     480:	00130113 	andseq	r0, r3, r3, lsl r1
     484:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     488:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     48c:	0b3b0b3a 	bleq	ec317c <_bss_end+0xeb148c>
     490:	0e6e0b39 	vmoveq.8	d14[5], r0
     494:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     498:	13011364 	movwne	r1, #4964	; 0x1364
     49c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     4a0:	03193f01 	tsteq	r9, #1, 30
     4a4:	3b0b3a0e 	blcc	2cece4 <_bss_end+0x2bcff4>
     4a8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     4ac:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     4b0:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     4b4:	00130113 	andseq	r0, r3, r3, lsl r1
     4b8:	00101a00 	andseq	r1, r0, r0, lsl #20
     4bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     4c0:	341b0000 	ldrcc	r0, [fp], #-0
     4c4:	3a0e0300 	bcc	3810cc <_bss_end+0x36f3dc>
     4c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4cc:	3f13490b 	svccc	0x0013490b
     4d0:	00193c19 	andseq	r3, r9, r9, lsl ip
     4d4:	01041c00 	tsteq	r4, r0, lsl #24
     4d8:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     4dc:	0b0b0b3e 	bleq	2c31dc <_bss_end+0x2b14ec>
     4e0:	0b3a1349 	bleq	e8520c <_bss_end+0xe7351c>
     4e4:	0b390b3b 	bleq	e431d8 <_bss_end+0xe314e8>
     4e8:	00001301 	andeq	r1, r0, r1, lsl #6
     4ec:	3f012e1d 	svccc	0x00012e1d
     4f0:	3a0e0319 	bcc	38115c <_bss_end+0x36f46c>
     4f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4f8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     4fc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     500:	00136419 	andseq	r6, r3, r9, lsl r4
     504:	00341e00 	eorseq	r1, r4, r0, lsl #28
     508:	0b3a1347 	bleq	e8522c <_bss_end+0xe7353c>
     50c:	0b390b3b 	bleq	e43200 <_bss_end+0xe31510>
     510:	00001802 	andeq	r1, r0, r2, lsl #16
     514:	03002e1f 	movweq	r2, #3615	; 0xe1f
     518:	1119340e 	tstne	r9, lr, lsl #8
     51c:	40061201 	andmi	r1, r6, r1, lsl #4
     520:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     524:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     528:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
     52c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     530:	96184006 	ldrls	r4, [r8], -r6
     534:	13011942 	movwne	r1, #6466	; 0x1942
     538:	05210000 	streq	r0, [r1, #-0]!
     53c:	3a0e0300 	bcc	381144 <_bss_end+0x36f454>
     540:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     544:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     548:	22000018 	andcs	r0, r0, #24
     54c:	1347012e 	movtne	r0, #28974	; 0x712e
     550:	0b3b0b3a 	bleq	ec3240 <_bss_end+0xeb1550>
     554:	13640b39 	cmnne	r4, #58368	; 0xe400
     558:	06120111 			; <UNDEFINED> instruction: 0x06120111
     55c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     560:	00130119 	andseq	r0, r3, r9, lsl r1
     564:	00052300 	andeq	r2, r5, r0, lsl #6
     568:	13490e03 	movtne	r0, #40451	; 0x9e03
     56c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
     570:	0b240000 	bleq	900578 <_bss_end+0x8ee888>
     574:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     578:	25000006 	strcs	r0, [r0, #-6]
     57c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     580:	0b3b0b3a 	bleq	ec3270 <_bss_end+0xeb1580>
     584:	13490b39 	movtne	r0, #39737	; 0x9b39
     588:	00001802 	andeq	r1, r0, r2, lsl #16
     58c:	03000526 	movweq	r0, #1318	; 0x526
     590:	3b0b3a08 	blcc	2cedb8 <_bss_end+0x2bd0c8>
     594:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     598:	00180213 	andseq	r0, r8, r3, lsl r2
     59c:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
     5a0:	0b3a1347 	bleq	e852c4 <_bss_end+0xe735d4>
     5a4:	0b390b3b 	bleq	e43298 <_bss_end+0xe315a8>
     5a8:	01111364 	tsteq	r1, r4, ror #6
     5ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     5b0:	01194297 			; <UNDEFINED> instruction: 0x01194297
     5b4:	28000013 	stmdacs	r0, {r0, r1, r4}
     5b8:	1347012e 	movtne	r0, #28974	; 0x712e
     5bc:	0b3b0b3a 	bleq	ec32ac <_bss_end+0xeb15bc>
     5c0:	13640b39 	cmnne	r4, #58368	; 0xe400
     5c4:	13010b20 	movwne	r0, #6944	; 0x1b20
     5c8:	05290000 	streq	r0, [r9, #-0]!
     5cc:	490e0300 	stmdbmi	lr, {r8, r9}
     5d0:	00193413 	andseq	r3, r9, r3, lsl r4
     5d4:	00052a00 	andeq	r2, r5, r0, lsl #20
     5d8:	0b3a0e03 	bleq	e83dec <_bss_end+0xe720fc>
     5dc:	0b390b3b 	bleq	e432d0 <_bss_end+0xe315e0>
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	31012e2b 	tstcc	r1, fp, lsr #28
     5e8:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     5ec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     5f0:	96184006 	ldrls	r4, [r8], -r6
     5f4:	13011942 	movwne	r1, #6466	; 0x1942
     5f8:	052c0000 	streq	r0, [ip, #-0]!
     5fc:	02133100 	andseq	r3, r3, #0, 2
     600:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
     604:	1347012e 	movtne	r0, #28974	; 0x712e
     608:	0b201364 	bleq	8053a0 <_bss_end+0x7f36b0>
     60c:	00001301 	andeq	r1, r0, r1, lsl #6
     610:	31012e2e 	tstcc	r1, lr, lsr #28
     614:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     618:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     61c:	97184006 	ldrls	r4, [r8, -r6]
     620:	13011942 	movwne	r1, #6466	; 0x1942
     624:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     628:	64134701 	ldrvs	r4, [r3], #-1793	; 0xfffff8ff
     62c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     630:	97184006 	ldrls	r4, [r8, -r6]
     634:	00001942 	andeq	r1, r0, r2, asr #18
     638:	01110100 	tsteq	r1, r0, lsl #2
     63c:	0b130e25 	bleq	4c3ed8 <_bss_end+0x4b21e8>
     640:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     644:	01111755 	tsteq	r1, r5, asr r7
     648:	00001710 	andeq	r1, r0, r0, lsl r7
     64c:	03010202 	movweq	r0, #4610	; 0x1202
     650:	3a0b0b0e 	bcc	2c3290 <_bss_end+0x2b15a0>
     654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     658:	0013010b 	andseq	r0, r3, fp, lsl #2
     65c:	01040300 	mrseq	r0, LR_abt
     660:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     664:	0b0b0b3e 	bleq	2c3364 <_bss_end+0x2b1674>
     668:	0b3a1349 	bleq	e85394 <_bss_end+0xe736a4>
     66c:	0b390b3b 	bleq	e43360 <_bss_end+0xe31670>
     670:	13010b32 	movwne	r0, #6962	; 0x1b32
     674:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     678:	1c080300 	stcne	3, cr0, [r8], {-0}
     67c:	0500000b 	streq	r0, [r0, #-11]
     680:	13490026 	movtne	r0, #36902	; 0x9026
     684:	13060000 	movwne	r0, #24576	; 0x6000
     688:	0b0e0301 	bleq	381294 <_bss_end+0x36f5a4>
     68c:	3b0b3a0b 	blcc	2ceec0 <_bss_end+0x2bd1d0>
     690:	010b390b 	tsteq	fp, fp, lsl #18
     694:	07000013 	smladeq	r0, r3, r0, r0
     698:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     69c:	0b3b0b3a 	bleq	ec338c <_bss_end+0xeb169c>
     6a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6a4:	00000b38 	andeq	r0, r0, r8, lsr fp
     6a8:	03000d08 	movweq	r0, #3336	; 0xd08
     6ac:	3b0b3a0e 	blcc	2ceeec <_bss_end+0x2bd1fc>
     6b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6b4:	32193f13 	andscc	r3, r9, #19, 30	; 0x4c
     6b8:	1c193c0b 	ldcne	12, cr3, [r9], {11}
     6bc:	00196c0b 	andseq	r6, r9, fp, lsl #24
     6c0:	000d0900 	andeq	r0, sp, r0, lsl #18
     6c4:	0b3a0e03 	bleq	e83ed8 <_bss_end+0xe721e8>
     6c8:	0b390b3b 	bleq	e433bc <_bss_end+0xe316cc>
     6cc:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     6d0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     6d4:	0000196c 	andeq	r1, r0, ip, ror #18
     6d8:	3f012e0a 	svccc	0x00012e0a
     6dc:	3a0e0319 	bcc	381348 <_bss_end+0x36f658>
     6e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6e4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     6e8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     6ec:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
     6f0:	00130113 	andseq	r0, r3, r3, lsl r1
     6f4:	00050b00 	andeq	r0, r5, r0, lsl #22
     6f8:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     6fc:	050c0000 	streq	r0, [ip, #-0]
     700:	00134900 	andseq	r4, r3, r0, lsl #18
     704:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     708:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     70c:	0b3b0b3a 	bleq	ec33fc <_bss_end+0xeb170c>
     710:	0e6e0b39 	vmoveq.8	d14[5], r0
     714:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     718:	13011364 	movwne	r1, #4964	; 0x1364
     71c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     720:	03193f01 	tsteq	r9, #1, 30
     724:	3b0b3a0e 	blcc	2cef64 <_bss_end+0x2bd274>
     728:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     72c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     730:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     734:	00130113 	andseq	r0, r3, r3, lsl r1
     738:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
     73c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     740:	0b3b0b3a 	bleq	ec3430 <_bss_end+0xeb1740>
     744:	0e6e0b39 	vmoveq.8	d14[5], r0
     748:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     74c:	00001301 	andeq	r1, r0, r1, lsl #6
     750:	03000d10 	movweq	r0, #3344	; 0xd10
     754:	3b0b3a0e 	blcc	2cef94 <_bss_end+0x2bd2a4>
     758:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     75c:	000b3813 	andeq	r3, fp, r3, lsl r8
     760:	00241100 	eoreq	r1, r4, r0, lsl #2
     764:	0b3e0b0b 	bleq	f83398 <_bss_end+0xf716a8>
     768:	00000e03 	andeq	r0, r0, r3, lsl #28
     76c:	0b000f12 	bleq	43bc <CPSR_IRQ_INHIBIT+0x433c>
     770:	0013490b 	andseq	r4, r3, fp, lsl #18
     774:	00101300 	andseq	r1, r0, r0, lsl #6
     778:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     77c:	35140000 	ldrcc	r0, [r4, #-0]
     780:	00134900 	andseq	r4, r3, r0, lsl #18
     784:	00341500 	eorseq	r1, r4, r0, lsl #10
     788:	0b3a0e03 	bleq	e83f9c <_bss_end+0xe722ac>
     78c:	0b390b3b 	bleq	e43480 <_bss_end+0xe31790>
     790:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     794:	0000193c 	andeq	r1, r0, ip, lsr r9
     798:	47003416 	smladmi	r0, r6, r4, r3
     79c:	3b0b3a13 	blcc	2ceff0 <_bss_end+0x2bd300>
     7a0:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     7a4:	17000018 	smladne	r0, r8, r0, r0
     7a8:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     7ac:	01111934 	tsteq	r1, r4, lsr r9
     7b0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7b4:	00194296 	mulseq	r9, r6, r2
     7b8:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     7bc:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     7c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     7c4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     7c8:	00130119 	andseq	r0, r3, r9, lsl r1
     7cc:	00051900 	andeq	r1, r5, r0, lsl #18
     7d0:	0b3a0e03 	bleq	e83fe4 <_bss_end+0xe722f4>
     7d4:	0b390b3b 	bleq	e434c8 <_bss_end+0xe317d8>
     7d8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     7dc:	241a0000 	ldrcs	r0, [sl], #-0
     7e0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7e4:	0008030b 	andeq	r0, r8, fp, lsl #6
     7e8:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     7ec:	0b3a1347 	bleq	e85510 <_bss_end+0xe73820>
     7f0:	0b390b3b 	bleq	e434e4 <_bss_end+0xe317f4>
     7f4:	01111364 	tsteq	r1, r4, ror #6
     7f8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7fc:	01194296 			; <UNDEFINED> instruction: 0x01194296
     800:	1c000013 	stcne	0, cr0, [r0], {19}
     804:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     808:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     80c:	00001802 	andeq	r1, r0, r2, lsl #16
     810:	0300341d 	movweq	r3, #1053	; 0x41d
     814:	3b0b3a08 	blcc	2cf03c <_bss_end+0x2bd34c>
     818:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     81c:	00180213 	andseq	r0, r8, r3, lsl r2
     820:	010b1e00 	tsteq	fp, r0, lsl #28
     824:	06120111 			; <UNDEFINED> instruction: 0x06120111
     828:	051f0000 	ldreq	r0, [pc, #-0]	; 830 <CPSR_IRQ_INHIBIT+0x7b0>
     82c:	3a080300 	bcc	201434 <_bss_end+0x1ef744>
     830:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     834:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     838:	20000018 	andcs	r0, r0, r8, lsl r0
     83c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     840:	0b3b0b3a 	bleq	ec3530 <_bss_end+0xeb1840>
     844:	13490b39 	movtne	r0, #39737	; 0x9b39
     848:	1802196c 	stmdane	r2, {r2, r3, r5, r6, r8, fp, ip}
     84c:	34210000 	strtcc	r0, [r1], #-0
     850:	3a0e0300 	bcc	381458 <_bss_end+0x36f768>
     854:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     858:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     85c:	22000018 	andcs	r0, r0, #24
     860:	13490101 	movtne	r0, #37121	; 0x9101
     864:	00001301 	andeq	r1, r0, r1, lsl #6
     868:	49002123 	stmdbmi	r0, {r0, r1, r5, r8, sp}
     86c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     870:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     874:	0b3a1347 	bleq	e85598 <_bss_end+0xe738a8>
     878:	0b390b3b 	bleq	e4356c <_bss_end+0xe3187c>
     87c:	01111364 	tsteq	r1, r4, ror #6
     880:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     884:	01194297 			; <UNDEFINED> instruction: 0x01194297
     888:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     88c:	0111010b 	tsteq	r1, fp, lsl #2
     890:	13010612 	movwne	r0, #5650	; 0x1612
     894:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
     898:	3a134701 	bcc	4d24a4 <_bss_end+0x4c07b4>
     89c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8a0:	2013640b 	andscs	r6, r3, fp, lsl #8
     8a4:	0013010b 	andseq	r0, r3, fp, lsl #2
     8a8:	00052700 	andeq	r2, r5, r0, lsl #14
     8ac:	13490e03 	movtne	r0, #40451	; 0x9e03
     8b0:	00001934 	andeq	r1, r0, r4, lsr r9
     8b4:	03000528 	movweq	r0, #1320	; 0x528
     8b8:	3b0b3a0e 	blcc	2cf0f8 <_bss_end+0x2bd408>
     8bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8c0:	29000013 	stmdbcs	r0, {r0, r1, r4}
     8c4:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     8c8:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     8cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     8d0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     8d4:	2a000019 	bcs	940 <CPSR_IRQ_INHIBIT+0x8c0>
     8d8:	13310005 	teqne	r1, #5
     8dc:	00001802 	andeq	r1, r0, r2, lsl #16
     8e0:	01110100 	tsteq	r1, r0, lsl #2
     8e4:	0b130e25 	bleq	4c4180 <_bss_end+0x4b2490>
     8e8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     8ec:	01111755 	tsteq	r1, r5, asr r7
     8f0:	00001710 	andeq	r1, r0, r0, lsl r7
     8f4:	0b002402 	bleq	9904 <_ZN16CDisplay_SSD13064OpenEii+0x18>
     8f8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     8fc:	0300000e 	movweq	r0, #14
     900:	13490026 	movtne	r0, #36902	; 0x9026
     904:	24040000 	strcs	r0, [r4], #-0
     908:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     90c:	0008030b 	andeq	r0, r8, fp, lsl #6
     910:	00160500 	andseq	r0, r6, r0, lsl #10
     914:	0b3a0e03 	bleq	e84128 <_bss_end+0xe72438>
     918:	0b390b3b 	bleq	e4360c <_bss_end+0xe3191c>
     91c:	00001349 	andeq	r1, r0, r9, asr #6
     920:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     924:	07000013 	smladeq	r0, r3, r0, r0
     928:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
     92c:	0b3b0b3a 	bleq	ec361c <_bss_end+0xeb192c>
     930:	13010b39 	movwne	r0, #6969	; 0x1b39
     934:	34080000 	strcc	r0, [r8], #-0
     938:	3a0e0300 	bcc	381540 <_bss_end+0x36f850>
     93c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     940:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     944:	6c061c19 	stcvs	12, cr1, [r6], {25}
     948:	09000019 	stmdbeq	r0, {r0, r3, r4}
     94c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     950:	0b3b0b3a 	bleq	ec3640 <_bss_end+0xeb1950>
     954:	13490b39 	movtne	r0, #39737	; 0x9b39
     958:	0b1c193c 	bleq	706e50 <_bss_end+0x6f5160>
     95c:	0000196c 	andeq	r1, r0, ip, ror #18
     960:	0301040a 	movweq	r0, #5130	; 0x140a
     964:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     968:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     96c:	3b0b3a13 	blcc	2cf1c0 <_bss_end+0x2bd4d0>
     970:	000b390b 	andeq	r3, fp, fp, lsl #18
     974:	00280b00 	eoreq	r0, r8, r0, lsl #22
     978:	0b1c0e03 	bleq	70418c <_bss_end+0x6f249c>
     97c:	340c0000 	strcc	r0, [ip], #-0
     980:	00134700 	andseq	r4, r3, r0, lsl #14
     984:	00340d00 	eorseq	r0, r4, r0, lsl #26
     988:	0b3a0e03 	bleq	e8419c <_bss_end+0xe724ac>
     98c:	0b390b3b 	bleq	e43680 <_bss_end+0xe31990>
     990:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
     994:	00001802 	andeq	r1, r0, r2, lsl #16
     998:	0301020e 	movweq	r0, #4622	; 0x120e
     99c:	3a0b0b0e 	bcc	2c35dc <_bss_end+0x2b18ec>
     9a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9a4:	0013010b 	andseq	r0, r3, fp, lsl #2
     9a8:	000d0f00 	andeq	r0, sp, r0, lsl #30
     9ac:	0b3a0e03 	bleq	e841c0 <_bss_end+0xe724d0>
     9b0:	0b390b3b 	bleq	e436a4 <_bss_end+0xe319b4>
     9b4:	0b381349 	bleq	e056e0 <_bss_end+0xdf39f0>
     9b8:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     9bc:	03193f01 	tsteq	r9, #1, 30
     9c0:	3b0b3a0e 	blcc	2cf200 <_bss_end+0x2bd510>
     9c4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     9c8:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     9cc:	8b193c0b 	blhi	64fa00 <_bss_end+0x63dd10>
     9d0:	13640b01 	cmnne	r4, #1024	; 0x400
     9d4:	00001301 	andeq	r1, r0, r1, lsl #6
     9d8:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     9dc:	00193413 	andseq	r3, r9, r3, lsl r4
     9e0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     9e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     9e8:	0b3b0b3a 	bleq	ec36d8 <_bss_end+0xeb19e8>
     9ec:	0e6e0b39 	vmoveq.8	d14[5], r0
     9f0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     9f4:	13011364 	movwne	r1, #4964	; 0x1364
     9f8:	05130000 	ldreq	r0, [r3, #-0]
     9fc:	00134900 	andseq	r4, r3, r0, lsl #18
     a00:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     a04:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a08:	0b3b0b3a 	bleq	ec36f8 <_bss_end+0xeb1a08>
     a0c:	0e6e0b39 	vmoveq.8	d14[5], r0
     a10:	0b321349 	bleq	c8573c <_bss_end+0xc73a4c>
     a14:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a18:	00001301 	andeq	r1, r0, r1, lsl #6
     a1c:	03002f15 	movweq	r2, #3861	; 0xf15
     a20:	00134908 	andseq	r4, r3, r8, lsl #18
     a24:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
     a28:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a2c:	0b3b0b3a 	bleq	ec371c <_bss_end+0xeb1a2c>
     a30:	0e6e0b39 	vmoveq.8	d14[5], r0
     a34:	0b321349 	bleq	c85760 <_bss_end+0xc73a70>
     a38:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a3c:	01170000 	tsteq	r7, r0
     a40:	01134901 	tsteq	r3, r1, lsl #18
     a44:	18000013 	stmdane	r0, {r0, r1, r4}
     a48:	13490021 	movtne	r0, #36897	; 0x9021
     a4c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     a50:	0b000f19 	bleq	46bc <CPSR_IRQ_INHIBIT+0x463c>
     a54:	0013490b 	andseq	r4, r3, fp, lsl #18
     a58:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     a5c:	0803193f 	stmdaeq	r3, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     a60:	0b3b0b3a 	bleq	ec3750 <_bss_end+0xeb1a60>
     a64:	0e6e0b39 	vmoveq.8	d14[5], r0
     a68:	0b321349 	bleq	c85794 <_bss_end+0xc73aa4>
     a6c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a70:	00001301 	andeq	r1, r0, r1, lsl #6
     a74:	3f012e1b 	svccc	0x00012e1b
     a78:	3a0e0319 	bcc	3816e4 <_bss_end+0x36f9f4>
     a7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a80:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
     a84:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     a88:	1c000013 	stcne	0, cr0, [r0], {19}
     a8c:	0b0b0010 	bleq	2c0ad4 <_bss_end+0x2aede4>
     a90:	00001349 	andeq	r1, r0, r9, asr #6
     a94:	0300341d 	movweq	r3, #1053	; 0x41d
     a98:	3b0b3a0e 	blcc	2cf2d8 <_bss_end+0x2bd5e8>
     a9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     aa0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     aa4:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
     aa8:	0e030104 	adfeqs	f0, f3, f4
     aac:	0b3e196d 	bleq	f87068 <_bss_end+0xf75378>
     ab0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ab4:	0b3b0b3a 	bleq	ec37a4 <_bss_end+0xeb1ab4>
     ab8:	13010b39 	movwne	r0, #6969	; 0x1b39
     abc:	281f0000 	ldmdacs	pc, {}	; <UNPREDICTABLE>
     ac0:	1c080300 	stcne	3, cr0, [r8], {-0}
     ac4:	2000000b 	andcs	r0, r0, fp
     ac8:	0e030104 	adfeqs	f0, f3, f4
     acc:	0b3e196d 	bleq	f87088 <_bss_end+0xf75398>
     ad0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ad4:	0b3b0b3a 	bleq	ec37c4 <_bss_end+0xeb1ad4>
     ad8:	0b320b39 	bleq	c837c4 <_bss_end+0xc71ad4>
     adc:	00001301 	andeq	r1, r0, r1, lsl #6
     ae0:	03011321 	movweq	r1, #4897	; 0x1321
     ae4:	3a0b0b0e 	bcc	2c3724 <_bss_end+0x2b1a34>
     ae8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     aec:	0013010b 	andseq	r0, r3, fp, lsl #2
     af0:	000d2200 	andeq	r2, sp, r0, lsl #4
     af4:	0b3a0803 	bleq	e82b08 <_bss_end+0xe70e18>
     af8:	0b390b3b 	bleq	e437ec <_bss_end+0xe31afc>
     afc:	0b381349 	bleq	e05828 <_bss_end+0xdf3b38>
     b00:	0d230000 	stceq	0, cr0, [r3, #-0]
     b04:	3a0e0300 	bcc	38170c <_bss_end+0x36fa1c>
     b08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b0c:	3f13490b 	svccc	0x0013490b
     b10:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
     b14:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
     b18:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
     b1c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     b20:	0b3b0b3a 	bleq	ec3810 <_bss_end+0xeb1b20>
     b24:	13490b39 	movtne	r0, #39737	; 0x9b39
     b28:	0b32193f 	bleq	c8702c <_bss_end+0xc7533c>
     b2c:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
     b30:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     b34:	03193f01 	tsteq	r9, #1, 30
     b38:	3b0b3a0e 	blcc	2cf378 <_bss_end+0x2bd688>
     b3c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     b40:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     b44:	63193c0b 	tstvs	r9, #2816	; 0xb00
     b48:	01136419 	tsteq	r3, r9, lsl r4
     b4c:	26000013 			; <UNDEFINED> instruction: 0x26000013
     b50:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     b54:	0b3a0e03 	bleq	e84368 <_bss_end+0xe72678>
     b58:	0b390b3b 	bleq	e4384c <_bss_end+0xe31b5c>
     b5c:	193c0e6e 	ldmdbne	ip!, {r1, r2, r3, r5, r6, r9, sl, fp}
     b60:	13011364 	movwne	r1, #4964	; 0x1364
     b64:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     b68:	03193f01 	tsteq	r9, #1, 30
     b6c:	3b0b3a0e 	blcc	2cf3ac <_bss_end+0x2bd6bc>
     b70:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     b74:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
     b78:	01136419 	tsteq	r3, r9, lsl r4
     b7c:	28000013 	stmdacs	r0, {r0, r1, r4}
     b80:	0b0b000f 	bleq	2c0bc4 <_bss_end+0x2aeed4>
     b84:	34290000 	strtcc	r0, [r9], #-0
     b88:	3a134700 	bcc	4d2790 <_bss_end+0x4c0aa0>
     b8c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b90:	0018020b 	andseq	r0, r8, fp, lsl #4
     b94:	002e2a00 	eoreq	r2, lr, r0, lsl #20
     b98:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     b9c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ba0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     ba4:	2b000019 	blcs	c10 <CPSR_IRQ_INHIBIT+0xb90>
     ba8:	0e03012e 	adfeqsp	f0, f3, #0.5
     bac:	01111934 	tsteq	r1, r4, lsr r9
     bb0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     bb4:	01194296 			; <UNDEFINED> instruction: 0x01194296
     bb8:	2c000013 	stccs	0, cr0, [r0], {19}
     bbc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     bc0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bc4:	13490b39 	movtne	r0, #39737	; 0x9b39
     bc8:	00001802 	andeq	r1, r0, r2, lsl #16
     bcc:	47012e2d 	strmi	r2, [r1, -sp, lsr #28]
     bd0:	11136413 	tstne	r3, r3, lsl r4
     bd4:	40061201 	andmi	r1, r6, r1, lsl #4
     bd8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     bdc:	00001301 	andeq	r1, r0, r1, lsl #6
     be0:	0300052e 	movweq	r0, #1326	; 0x52e
     be4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     be8:	00180219 	andseq	r0, r8, r9, lsl r2
     bec:	00052f00 	andeq	r2, r5, r0, lsl #30
     bf0:	0b3a0803 	bleq	e82c04 <_bss_end+0xe70f14>
     bf4:	0b390b3b 	bleq	e438e8 <_bss_end+0xe31bf8>
     bf8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     bfc:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
     c00:	3a134701 	bcc	4d280c <_bss_end+0x4c0b1c>
     c04:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c08:	1113640b 	tstne	r3, fp, lsl #8
     c0c:	40061201 	andmi	r1, r6, r1, lsl #4
     c10:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     c14:	00001301 	andeq	r1, r0, r1, lsl #6
     c18:	03003431 	movweq	r3, #1073	; 0x431
     c1c:	3b0b3a08 	blcc	2cf444 <_bss_end+0x2bd754>
     c20:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     c24:	00180213 	andseq	r0, r8, r3, lsl r2
     c28:	010b3200 	mrseq	r3, R11_fiq
     c2c:	13011755 	movwne	r1, #5973	; 0x1755
     c30:	0b330000 	bleq	cc0c38 <_bss_end+0xcaef48>
     c34:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     c38:	34000006 	strcc	r0, [r0], #-6
     c3c:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
     c40:	34350000 	ldrtcc	r0, [r5], #-0
     c44:	3a0e0300 	bcc	38184c <_bss_end+0x36fb5c>
     c48:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c4c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c50:	36000018 			; <UNDEFINED> instruction: 0x36000018
     c54:	0111010b 	tsteq	r1, fp, lsl #2
     c58:	13010612 	movwne	r0, #5650	; 0x1612
     c5c:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
     c60:	3a134701 	bcc	4d286c <_bss_end+0x4c0b7c>
     c64:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c68:	1113640b 	tstne	r3, fp, lsl #8
     c6c:	40061201 	andmi	r1, r6, r1, lsl #4
     c70:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     c74:	00001301 	andeq	r1, r0, r1, lsl #6
     c78:	03003438 	movweq	r3, #1080	; 0x438
     c7c:	3b0b3a08 	blcc	2cf4a4 <_bss_end+0x2bd7b4>
     c80:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c84:	39000013 	stmdbcc	r0, {r0, r1, r4}
     c88:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     c8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c90:	13490b39 	movtne	r0, #39737	; 0x9b39
     c94:	1802196c 	stmdane	r2, {r2, r3, r5, r6, r8, fp, ip}
     c98:	343a0000 	ldrtcc	r0, [sl], #-0
     c9c:	3a080300 	bcc	2018a4 <_bss_end+0x1efbb4>
     ca0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ca4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ca8:	3b000018 	blcc	d10 <CPSR_IRQ_INHIBIT+0xc90>
     cac:	1347012e 	movtne	r0, #28974	; 0x712e
     cb0:	0b3b0b3a 	bleq	ec39a0 <_bss_end+0xeb1cb0>
     cb4:	13640b39 	cmnne	r4, #58368	; 0xe400
     cb8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     cbc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     cc0:	00130119 	andseq	r0, r3, r9, lsl r1
     cc4:	00053c00 	andeq	r3, r5, r0, lsl #24
     cc8:	0b3a0e03 	bleq	e844dc <_bss_end+0xe727ec>
     ccc:	0b390b3b 	bleq	e439c0 <_bss_end+0xe31cd0>
     cd0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     cd4:	343d0000 	ldrtcc	r0, [sp], #-0
     cd8:	3a0e0300 	bcc	3818e0 <_bss_end+0x36fbf0>
     cdc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ce0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ce4:	3e000018 	mcrcc	0, 0, r0, cr0, cr8, {0}
     ce8:	1347012e 	movtne	r0, #28974	; 0x712e
     cec:	0b3b0b3a 	bleq	ec39dc <_bss_end+0xeb1cec>
     cf0:	13640b39 	cmnne	r4, #58368	; 0xe400
     cf4:	13010b20 	movwne	r0, #6944	; 0x1b20
     cf8:	053f0000 	ldreq	r0, [pc, #-0]!	; d00 <CPSR_IRQ_INHIBIT+0xc80>
     cfc:	490e0300 	stmdbmi	lr, {r8, r9}
     d00:	00193413 	andseq	r3, r9, r3, lsl r4
     d04:	00054000 	andeq	r4, r5, r0
     d08:	0b3a0803 	bleq	e82d1c <_bss_end+0xe7102c>
     d0c:	0b390b3b 	bleq	e43a00 <_bss_end+0xe31d10>
     d10:	00001349 	andeq	r1, r0, r9, asr #6
     d14:	31012e41 	tstcc	r1, r1, asr #28
     d18:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     d1c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d20:	97184006 	ldrls	r4, [r8, -r6]
     d24:	13011942 	movwne	r1, #6466	; 0x1942
     d28:	05420000 	strbeq	r0, [r2, #-0]
     d2c:	02133100 	andseq	r3, r3, #0, 2
     d30:	43000018 	movwmi	r0, #24
     d34:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     d38:	0b3a0e03 	bleq	e8454c <_bss_end+0xe7285c>
     d3c:	0b390b3b 	bleq	e43a30 <_bss_end+0xe31d40>
     d40:	01110e6e 	tsteq	r1, lr, ror #28
     d44:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d48:	00194296 	mulseq	r9, r6, r2
     d4c:	00054400 	andeq	r4, r5, r0, lsl #8
     d50:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     d54:	01000000 	mrseq	r0, (UNDEF: 0)
     d58:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     d5c:	0e030b13 	vmoveq.32	d3[0], r0
     d60:	01110e1b 	tsteq	r1, fp, lsl lr
     d64:	17100612 			; <UNDEFINED> instruction: 0x17100612
     d68:	24020000 	strcs	r0, [r2], #-0
     d6c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     d70:	000e030b 	andeq	r0, lr, fp, lsl #6
     d74:	00240300 	eoreq	r0, r4, r0, lsl #6
     d78:	0b3e0b0b 	bleq	f839ac <_bss_end+0xf71cbc>
     d7c:	00000803 	andeq	r0, r0, r3, lsl #16
     d80:	03001604 	movweq	r1, #1540	; 0x604
     d84:	3b0b3a0e 	blcc	2cf5c4 <_bss_end+0x2bd8d4>
     d88:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d8c:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     d90:	13490026 	movtne	r0, #36902	; 0x9026
     d94:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
     d98:	3a080301 	bcc	2019a4 <_bss_end+0x1efcb4>
     d9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     da0:	0013010b 	andseq	r0, r3, fp, lsl #2
     da4:	00340700 	eorseq	r0, r4, r0, lsl #14
     da8:	0b3a0e03 	bleq	e845bc <_bss_end+0xe728cc>
     dac:	0b390b3b 	bleq	e43aa0 <_bss_end+0xe31db0>
     db0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     db4:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
     db8:	34080000 	strcc	r0, [r8], #-0
     dbc:	3a0e0300 	bcc	3819c4 <_bss_end+0x36fcd4>
     dc0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     dc4:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     dc8:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
     dcc:	09000019 	stmdbeq	r0, {r0, r3, r4}
     dd0:	13470034 	movtne	r0, #28724	; 0x7034
     dd4:	020a0000 	andeq	r0, sl, #0
     dd8:	0b0e0301 	bleq	3819e4 <_bss_end+0x36fcf4>
     ddc:	3b0b3a0b 	blcc	2cf610 <_bss_end+0x2bd920>
     de0:	010b390b 	tsteq	fp, fp, lsl #18
     de4:	0b000013 	bleq	e38 <CPSR_IRQ_INHIBIT+0xdb8>
     de8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     dec:	0b3b0b3a 	bleq	ec3adc <_bss_end+0xeb1dec>
     df0:	13490b39 	movtne	r0, #39737	; 0x9b39
     df4:	00000b38 	andeq	r0, r0, r8, lsr fp
     df8:	3f012e0c 	svccc	0x00012e0c
     dfc:	3a0e0319 	bcc	381a68 <_bss_end+0x36fd78>
     e00:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e04:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     e08:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     e0c:	01136419 	tsteq	r3, r9, lsl r4
     e10:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     e14:	13490005 	movtne	r0, #36869	; 0x9005
     e18:	00001934 	andeq	r1, r0, r4, lsr r9
     e1c:	4900050e 	stmdbmi	r0, {r1, r2, r3, r8, sl}
     e20:	0f000013 	svceq	0x00000013
     e24:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e28:	0b3a0e03 	bleq	e8463c <_bss_end+0xe7294c>
     e2c:	0b390b3b 	bleq	e43b20 <_bss_end+0xe31e30>
     e30:	0b320e6e 	bleq	c847f0 <_bss_end+0xc72b00>
     e34:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     e38:	00001301 	andeq	r1, r0, r1, lsl #6
     e3c:	3f012e10 	svccc	0x00012e10
     e40:	3a0e0319 	bcc	381aac <_bss_end+0x36fdbc>
     e44:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e48:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
     e4c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     e50:	11000013 	tstne	r0, r3, lsl r0
     e54:	0b0b000f 	bleq	2c0e98 <_bss_end+0x2af1a8>
     e58:	00001349 	andeq	r1, r0, r9, asr #6
     e5c:	03003412 	movweq	r3, #1042	; 0x412
     e60:	3b0b3a0e 	blcc	2cf6a0 <_bss_end+0x2bd9b0>
     e64:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e68:	3c193f13 	ldccc	15, cr3, [r9], {19}
     e6c:	13000019 	movwne	r0, #25
     e70:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e74:	0b3b0b3a 	bleq	ec3b64 <_bss_end+0xeb1e74>
     e78:	13490b39 	movtne	r0, #39737	; 0x9b39
     e7c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     e80:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     e84:	03193f01 	tsteq	r9, #1, 30
     e88:	3b0b3a0e 	blcc	2cf6c8 <_bss_end+0x2bd9d8>
     e8c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     e90:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     e94:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     e98:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     e9c:	13490101 	movtne	r0, #37121	; 0x9101
     ea0:	00001301 	andeq	r1, r0, r1, lsl #6
     ea4:	49002116 	stmdbmi	r0, {r1, r2, r4, r8, sp}
     ea8:	000b2f13 	andeq	r2, fp, r3, lsl pc
     eac:	00341700 	eorseq	r1, r4, r0, lsl #14
     eb0:	0b3a1347 	bleq	e85bd4 <_bss_end+0xe73ee4>
     eb4:	0b390b3b 	bleq	e43ba8 <_bss_end+0xe31eb8>
     eb8:	00001802 	andeq	r1, r0, r2, lsl #16
     ebc:	47003418 	smladmi	r0, r8, r4, r3
     ec0:	3b0b3a13 	blcc	2cf714 <_bss_end+0x2bda24>
     ec4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     ec8:	0018020e 	andseq	r0, r8, lr, lsl #4
     ecc:	002e1900 	eoreq	r1, lr, r0, lsl #18
     ed0:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     ed4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ed8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     edc:	1a000019 	bne	f48 <CPSR_IRQ_INHIBIT+0xec8>
     ee0:	0e03012e 	adfeqsp	f0, f3, #0.5
     ee4:	01111934 	tsteq	r1, r4, lsr r9
     ee8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     eec:	01194296 			; <UNDEFINED> instruction: 0x01194296
     ef0:	1b000013 	blne	f44 <CPSR_IRQ_INHIBIT+0xec4>
     ef4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ef8:	0b3b0b3a 	bleq	ec3be8 <_bss_end+0xeb1ef8>
     efc:	13490b39 	movtne	r0, #39737	; 0x9b39
     f00:	00001802 	andeq	r1, r0, r2, lsl #16
     f04:	47012e1c 	smladmi	r1, ip, lr, r2
     f08:	3b0b3a13 	blcc	2cf75c <_bss_end+0x2bda6c>
     f0c:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
     f10:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     f14:	97184006 	ldrls	r4, [r8, -r6]
     f18:	13011942 	movwne	r1, #6466	; 0x1942
     f1c:	051d0000 	ldreq	r0, [sp, #-0]
     f20:	490e0300 	stmdbmi	lr, {r8, r9}
     f24:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
     f28:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
     f2c:	1347012e 	movtne	r0, #28974	; 0x712e
     f30:	0b3b0b3a 	bleq	ec3c20 <_bss_end+0xeb1f30>
     f34:	13640b39 	cmnne	r4, #58368	; 0xe400
     f38:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f3c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     f40:	00130119 	andseq	r0, r3, r9, lsl r1
     f44:	00051f00 	andeq	r1, r5, r0, lsl #30
     f48:	0b3a0803 	bleq	e82f5c <_bss_end+0xe7126c>
     f4c:	0b390b3b 	bleq	e43c40 <_bss_end+0xe31f50>
     f50:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     f54:	34200000 	strtcc	r0, [r0], #-0
     f58:	3a080300 	bcc	201b60 <_bss_end+0x1efe70>
     f5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f60:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     f64:	21000018 	tstcs	r0, r8, lsl r0
     f68:	1347012e 	movtne	r0, #28974	; 0x712e
     f6c:	0b3b0b3a 	bleq	ec3c5c <_bss_end+0xeb1f6c>
     f70:	13640b39 	cmnne	r4, #58368	; 0xe400
     f74:	13010b20 	movwne	r0, #6944	; 0x1b20
     f78:	05220000 	streq	r0, [r2, #-0]!
     f7c:	490e0300 	stmdbmi	lr, {r8, r9}
     f80:	00193413 	andseq	r3, r9, r3, lsl r4
     f84:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     f88:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
     f8c:	01111364 	tsteq	r1, r4, ror #6
     f90:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     f94:	00194297 	mulseq	r9, r7, r2
     f98:	00052400 	andeq	r2, r5, r0, lsl #8
     f9c:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     fa0:	01000000 	mrseq	r0, (UNDEF: 0)
     fa4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     fa8:	0e030b13 	vmoveq.32	d3[0], r0
     fac:	01110e1b 	tsteq	r1, fp, lsl lr
     fb0:	17100612 			; <UNDEFINED> instruction: 0x17100612
     fb4:	24020000 	strcs	r0, [r2], #-0
     fb8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     fbc:	000e030b 	andeq	r0, lr, fp, lsl #6
     fc0:	00240300 	eoreq	r0, r4, r0, lsl #6
     fc4:	0b3e0b0b 	bleq	f83bf8 <_bss_end+0xf71f08>
     fc8:	00000803 	andeq	r0, r0, r3, lsl #16
     fcc:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     fd0:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     fd4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     fd8:	0b3b0b3a 	bleq	ec3cc8 <_bss_end+0xeb1fd8>
     fdc:	13490b39 	movtne	r0, #39737	; 0x9b39
     fe0:	26060000 	strcs	r0, [r6], -r0
     fe4:	00134900 	andseq	r4, r3, r0, lsl #18
     fe8:	01390700 	teqeq	r9, r0, lsl #14
     fec:	0b3a0803 	bleq	e83000 <_bss_end+0xe71310>
     ff0:	0b390b3b 	bleq	e43ce4 <_bss_end+0xe31ff4>
     ff4:	00001301 	andeq	r1, r0, r1, lsl #6
     ff8:	03003408 	movweq	r3, #1032	; 0x408
     ffc:	3b0b3a0e 	blcc	2cf83c <_bss_end+0x2bdb4c>
    1000:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1004:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1008:	00196c06 	andseq	r6, r9, r6, lsl #24
    100c:	00340900 	eorseq	r0, r4, r0, lsl #18
    1010:	0b3a0e03 	bleq	e84824 <_bss_end+0xe72b34>
    1014:	0b390b3b 	bleq	e43d08 <_bss_end+0xe32018>
    1018:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    101c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    1020:	340a0000 	strcc	r0, [sl], #-0
    1024:	00134700 	andseq	r4, r3, r0, lsl #14
    1028:	01040b00 	tsteq	r4, r0, lsl #22
    102c:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    1030:	0b0b0b3e 	bleq	2c3d30 <_bss_end+0x2b2040>
    1034:	0b3a1349 	bleq	e85d60 <_bss_end+0xe74070>
    1038:	0b390b3b 	bleq	e43d2c <_bss_end+0xe3203c>
    103c:	00001301 	andeq	r1, r0, r1, lsl #6
    1040:	0300280c 	movweq	r2, #2060	; 0x80c
    1044:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1048:	01020d00 	tsteq	r2, r0, lsl #26
    104c:	0b0b0e03 	bleq	2c4860 <_bss_end+0x2b2b70>
    1050:	0b3b0b3a 	bleq	ec3d40 <_bss_end+0xeb2050>
    1054:	13010b39 	movwne	r0, #6969	; 0x1b39
    1058:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    105c:	3a0e0300 	bcc	381c64 <_bss_end+0x36ff74>
    1060:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1064:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1068:	0f00000b 	svceq	0x0000000b
    106c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1070:	0b3a0e03 	bleq	e84884 <_bss_end+0xe72b94>
    1074:	0b390b3b 	bleq	e43d68 <_bss_end+0xe32078>
    1078:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    107c:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1080:	13011364 	movwne	r1, #4964	; 0x1364
    1084:	05100000 	ldreq	r0, [r0, #-0]
    1088:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    108c:	11000019 	tstne	r0, r9, lsl r0
    1090:	13490005 	movtne	r0, #36869	; 0x9005
    1094:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    1098:	03193f01 	tsteq	r9, #1, 30
    109c:	3b0b3a0e 	blcc	2cf8dc <_bss_end+0x2bdbec>
    10a0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    10a4:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    10a8:	01136419 	tsteq	r3, r9, lsl r4
    10ac:	13000013 	movwne	r0, #19
    10b0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    10b4:	0b3a0e03 	bleq	e848c8 <_bss_end+0xe72bd8>
    10b8:	0b390b3b 	bleq	e43dac <_bss_end+0xe320bc>
    10bc:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    10c0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    10c4:	00001364 	andeq	r1, r0, r4, ror #6
    10c8:	0b000f14 	bleq	4d20 <CPSR_IRQ_INHIBIT+0x4ca0>
    10cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    10d0:	01011500 	tsteq	r1, r0, lsl #10
    10d4:	13011349 	movwne	r1, #4937	; 0x1349
    10d8:	21160000 	tstcs	r6, r0
    10dc:	2f134900 	svccs	0x00134900
    10e0:	1700000b 	strne	r0, [r0, -fp]
    10e4:	0b0b0010 	bleq	2c112c <_bss_end+0x2af43c>
    10e8:	00001349 	andeq	r1, r0, r9, asr #6
    10ec:	03003418 	movweq	r3, #1048	; 0x418
    10f0:	3b0b3a0e 	blcc	2cf930 <_bss_end+0x2bdc40>
    10f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    10f8:	3c193f13 	ldccc	15, cr3, [r9], {19}
    10fc:	19000019 	stmdbne	r0, {r0, r3, r4}
    1100:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1104:	0b3a0e03 	bleq	e84918 <_bss_end+0xe72c28>
    1108:	0b390b3b 	bleq	e43dfc <_bss_end+0xe3210c>
    110c:	0b320e6e 	bleq	c84acc <_bss_end+0xc72ddc>
    1110:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1114:	341a0000 	ldrcc	r0, [sl], #-0
    1118:	3a134700 	bcc	4d2d20 <_bss_end+0x4c1030>
    111c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1120:	0018020b 	andseq	r0, r8, fp, lsl #4
    1124:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    1128:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    112c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1130:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1134:	1c000019 	stcne	0, cr0, [r0], {25}
    1138:	0e03012e 	adfeqsp	f0, f3, #0.5
    113c:	01111934 	tsteq	r1, r4, lsr r9
    1140:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1144:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1148:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    114c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1150:	0b3b0b3a 	bleq	ec3e40 <_bss_end+0xeb2150>
    1154:	13490b39 	movtne	r0, #39737	; 0x9b39
    1158:	00001802 	andeq	r1, r0, r2, lsl #16
    115c:	47012e1e 	smladmi	r1, lr, lr, r2
    1160:	3b0b3a13 	blcc	2cf9b4 <_bss_end+0x2bdcc4>
    1164:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    1168:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    116c:	96184006 	ldrls	r4, [r8], -r6
    1170:	13011942 	movwne	r1, #6466	; 0x1942
    1174:	051f0000 	ldreq	r0, [pc, #-0]	; 117c <CPSR_IRQ_INHIBIT+0x10fc>
    1178:	490e0300 	stmdbmi	lr, {r8, r9}
    117c:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    1180:	20000018 	andcs	r0, r0, r8, lsl r0
    1184:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1188:	0b3b0b3a 	bleq	ec3e78 <_bss_end+0xeb2188>
    118c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1190:	00001802 	andeq	r1, r0, r2, lsl #16
    1194:	11010b21 	tstne	r1, r1, lsr #22
    1198:	00061201 	andeq	r1, r6, r1, lsl #4
    119c:	00052200 	andeq	r2, r5, r0, lsl #4
    11a0:	0b3a0803 	bleq	e831b4 <_bss_end+0xe714c4>
    11a4:	0b390b3b 	bleq	e43e98 <_bss_end+0xe321a8>
    11a8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    11ac:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    11b0:	3a134701 	bcc	4d2dbc <_bss_end+0x4c10cc>
    11b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11b8:	1113640b 	tstne	r3, fp, lsl #8
    11bc:	40061201 	andmi	r1, r6, r1, lsl #4
    11c0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    11c4:	00001301 	andeq	r1, r0, r1, lsl #6
    11c8:	47012e24 	strmi	r2, [r1, -r4, lsr #28]
    11cc:	3b0b3a13 	blcc	2cfa20 <_bss_end+0x2bdd30>
    11d0:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    11d4:	010b2013 	tsteq	fp, r3, lsl r0
    11d8:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    11dc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    11e0:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    11e4:	05260000 	streq	r0, [r6, #-0]!
    11e8:	3a0e0300 	bcc	381df0 <_bss_end+0x370100>
    11ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11f0:	0013490b 	andseq	r4, r3, fp, lsl #18
    11f4:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    11f8:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
    11fc:	01111364 	tsteq	r1, r4, ror #6
    1200:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1204:	00194297 	mulseq	r9, r7, r2
    1208:	00052800 	andeq	r2, r5, r0, lsl #16
    120c:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    1210:	01000000 	mrseq	r0, (UNDEF: 0)
    1214:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1218:	0e030b13 	vmoveq.32	d3[0], r0
    121c:	01110e1b 	tsteq	r1, fp, lsl lr
    1220:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1224:	24020000 	strcs	r0, [r2], #-0
    1228:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    122c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1230:	00240300 	eoreq	r0, r4, r0, lsl #6
    1234:	0b3e0b0b 	bleq	f83e68 <_bss_end+0xf72178>
    1238:	00000803 	andeq	r0, r0, r3, lsl #16
    123c:	03001604 	movweq	r1, #1540	; 0x604
    1240:	3b0b3a0e 	blcc	2cfa80 <_bss_end+0x2bdd90>
    1244:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1248:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    124c:	13490026 	movtne	r0, #36902	; 0x9026
    1250:	35060000 	strcc	r0, [r6, #-0]
    1254:	00134900 	andseq	r4, r3, r0, lsl #18
    1258:	01390700 	teqeq	r9, r0, lsl #14
    125c:	0b3a0803 	bleq	e83270 <_bss_end+0xe71580>
    1260:	0b390b3b 	bleq	e43f54 <_bss_end+0xe32264>
    1264:	00001301 	andeq	r1, r0, r1, lsl #6
    1268:	03003408 	movweq	r3, #1032	; 0x408
    126c:	3b0b3a0e 	blcc	2cfaac <_bss_end+0x2bddbc>
    1270:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1274:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1278:	00196c06 	andseq	r6, r9, r6, lsl #24
    127c:	00340900 	eorseq	r0, r4, r0, lsl #18
    1280:	0b3a0e03 	bleq	e84a94 <_bss_end+0xe72da4>
    1284:	0b390b3b 	bleq	e43f78 <_bss_end+0xe32288>
    1288:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    128c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    1290:	040a0000 	streq	r0, [sl], #-0
    1294:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    1298:	0b0b3e19 	bleq	2d0b04 <_bss_end+0x2bee14>
    129c:	3a13490b 	bcc	4d36d0 <_bss_end+0x4c19e0>
    12a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12a4:	0013010b 	andseq	r0, r3, fp, lsl #2
    12a8:	00280b00 	eoreq	r0, r8, r0, lsl #22
    12ac:	0b1c0e03 	bleq	704ac0 <_bss_end+0x6f2dd0>
    12b0:	340c0000 	strcc	r0, [ip], #-0
    12b4:	00134700 	andseq	r4, r3, r0, lsl #14
    12b8:	01020d00 	tsteq	r2, r0, lsl #26
    12bc:	0b0b0e03 	bleq	2c4ad0 <_bss_end+0x2b2de0>
    12c0:	0b3b0b3a 	bleq	ec3fb0 <_bss_end+0xeb22c0>
    12c4:	13010b39 	movwne	r0, #6969	; 0x1b39
    12c8:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    12cc:	3a0e0300 	bcc	381ed4 <_bss_end+0x3701e4>
    12d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    12d8:	0f00000b 	svceq	0x0000000b
    12dc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    12e0:	0b3b0b3a 	bleq	ec3fd0 <_bss_end+0xeb22e0>
    12e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12e8:	00000b32 	andeq	r0, r0, r2, lsr fp
    12ec:	3f012e10 	svccc	0x00012e10
    12f0:	3a0e0319 	bcc	381f5c <_bss_end+0x37026c>
    12f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12f8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    12fc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1300:	01136419 	tsteq	r3, r9, lsl r4
    1304:	11000013 	tstne	r0, r3, lsl r0
    1308:	13490005 	movtne	r0, #36869	; 0x9005
    130c:	00001934 	andeq	r1, r0, r4, lsr r9
    1310:	49000512 	stmdbmi	r0, {r1, r4, r8, sl}
    1314:	13000013 	movwne	r0, #19
    1318:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    131c:	0b3a0e03 	bleq	e84b30 <_bss_end+0xe72e40>
    1320:	0b390b3b 	bleq	e44014 <_bss_end+0xe32324>
    1324:	0b320e6e 	bleq	c84ce4 <_bss_end+0xc72ff4>
    1328:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    132c:	00001301 	andeq	r1, r0, r1, lsl #6
    1330:	3f012e14 	svccc	0x00012e14
    1334:	3a0e0319 	bcc	381fa0 <_bss_end+0x3702b0>
    1338:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    133c:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1340:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1344:	00136419 	andseq	r6, r3, r9, lsl r4
    1348:	000f1500 	andeq	r1, pc, r0, lsl #10
    134c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1350:	15160000 	ldrne	r0, [r6, #-0]
    1354:	17000000 	strne	r0, [r0, -r0]
    1358:	0b0b0010 	bleq	2c13a0 <_bss_end+0x2af6b0>
    135c:	00001349 	andeq	r1, r0, r9, asr #6
    1360:	03003418 	movweq	r3, #1048	; 0x418
    1364:	3b0b3a0e 	blcc	2cfba4 <_bss_end+0x2bdeb4>
    1368:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    136c:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1370:	19000019 	stmdbne	r0, {r0, r3, r4}
    1374:	13470034 	movtne	r0, #28724	; 0x7034
    1378:	0b3b0b3a 	bleq	ec4068 <_bss_end+0xeb2378>
    137c:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    1380:	131a0000 	tstne	sl, #0
    1384:	0b0e0301 	bleq	381f90 <_bss_end+0x3702a0>
    1388:	3b0b3a0b 	blcc	2cfbbc <_bss_end+0x2bdecc>
    138c:	010b390b 	tsteq	fp, fp, lsl #18
    1390:	1b000013 	blne	13e4 <CPSR_IRQ_INHIBIT+0x1364>
    1394:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1398:	0b3b0b3a 	bleq	ec4088 <_bss_end+0xeb2398>
    139c:	13490b39 	movtne	r0, #39737	; 0x9b39
    13a0:	0b0d0b0b 	bleq	343fd4 <_bss_end+0x3322e4>
    13a4:	0b380b0c 	bleq	e03fdc <_bss_end+0xdf22ec>
    13a8:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    13ac:	3a0e0300 	bcc	381fb4 <_bss_end+0x3702c4>
    13b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13b4:	0b13490b 	bleq	4d37e8 <_bss_end+0x4c1af8>
    13b8:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
    13bc:	000b380d 	andeq	r3, fp, sp, lsl #16
    13c0:	002e1d00 	eoreq	r1, lr, r0, lsl #26
    13c4:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    13c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    13cc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    13d0:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    13d4:	0e03012e 	adfeqsp	f0, f3, #0.5
    13d8:	01111934 	tsteq	r1, r4, lsr r9
    13dc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    13e0:	01194296 			; <UNDEFINED> instruction: 0x01194296
    13e4:	1f000013 	svcne	0x00000013
    13e8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    13ec:	0b3b0b3a 	bleq	ec40dc <_bss_end+0xeb23ec>
    13f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    13f4:	00001802 	andeq	r1, r0, r2, lsl #16
    13f8:	47012e20 	strmi	r2, [r1, -r0, lsr #28]
    13fc:	3b0b3a13 	blcc	2cfc50 <_bss_end+0x2bdf60>
    1400:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    1404:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1408:	96184006 	ldrls	r4, [r8], -r6
    140c:	13011942 	movwne	r1, #6466	; 0x1942
    1410:	05210000 	streq	r0, [r1, #-0]!
    1414:	490e0300 	stmdbmi	lr, {r8, r9}
    1418:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    141c:	22000018 	andcs	r0, r0, #24
    1420:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1424:	0b3b0b3a 	bleq	ec4114 <_bss_end+0xeb2424>
    1428:	13490b39 	movtne	r0, #39737	; 0x9b39
    142c:	00001802 	andeq	r1, r0, r2, lsl #16
    1430:	47012e23 	strmi	r2, [r1, -r3, lsr #28]
    1434:	3b0b3a13 	blcc	2cfc88 <_bss_end+0x2bdf98>
    1438:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    143c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1440:	97184006 	ldrls	r4, [r8, -r6]
    1444:	13011942 	movwne	r1, #6466	; 0x1942
    1448:	05240000 	streq	r0, [r4, #-0]!
    144c:	3a080300 	bcc	202054 <_bss_end+0x1f0364>
    1450:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1454:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1458:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
    145c:	1347012e 	movtne	r0, #28974	; 0x712e
    1460:	0b3b0b3a 	bleq	ec4150 <_bss_end+0xeb2460>
    1464:	13640b39 	cmnne	r4, #58368	; 0xe400
    1468:	13010b20 	movwne	r0, #6944	; 0x1b20
    146c:	05260000 	streq	r0, [r6, #-0]!
    1470:	490e0300 	stmdbmi	lr, {r8, r9}
    1474:	00193413 	andseq	r3, r9, r3, lsl r4
    1478:	00052700 	andeq	r2, r5, r0, lsl #14
    147c:	0b3a0e03 	bleq	e84c90 <_bss_end+0xe72fa0>
    1480:	0b390b3b 	bleq	e44174 <_bss_end+0xe32484>
    1484:	00001349 	andeq	r1, r0, r9, asr #6
    1488:	31012e28 	tstcc	r1, r8, lsr #28
    148c:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    1490:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1494:	97184006 	ldrls	r4, [r8, -r6]
    1498:	00001942 	andeq	r1, r0, r2, asr #18
    149c:	31000529 	tstcc	r0, r9, lsr #10
    14a0:	00180213 	andseq	r0, r8, r3, lsl r2
    14a4:	11010000 	mrsne	r0, (UNDEF: 1)
    14a8:	130e2501 	movwne	r2, #58625	; 0xe501
    14ac:	1b0e030b 	blne	3820e0 <_bss_end+0x3703f0>
    14b0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    14b4:	00171006 	andseq	r1, r7, r6
    14b8:	00240200 	eoreq	r0, r4, r0, lsl #4
    14bc:	0b3e0b0b 	bleq	f840f0 <_bss_end+0xf72400>
    14c0:	00000e03 	andeq	r0, r0, r3, lsl #28
    14c4:	0b002403 	bleq	a4d8 <_ZN16CDisplay_SSD13064FlipEv+0x110>
    14c8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    14cc:	04000008 	streq	r0, [r0], #-8
    14d0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    14d4:	0b3b0b3a 	bleq	ec41c4 <_bss_end+0xeb24d4>
    14d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    14dc:	26050000 	strcs	r0, [r5], -r0
    14e0:	00134900 	andseq	r4, r3, r0, lsl #18
    14e4:	00350600 	eorseq	r0, r5, r0, lsl #12
    14e8:	00001349 	andeq	r1, r0, r9, asr #6
    14ec:	03013907 	movweq	r3, #6407	; 0x1907
    14f0:	3b0b3a08 	blcc	2cfd18 <_bss_end+0x2be028>
    14f4:	010b390b 	tsteq	fp, fp, lsl #18
    14f8:	08000013 	stmdaeq	r0, {r0, r1, r4}
    14fc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1500:	0b3b0b3a 	bleq	ec41f0 <_bss_end+0xeb2500>
    1504:	13490b39 	movtne	r0, #39737	; 0x9b39
    1508:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    150c:	0000196c 	andeq	r1, r0, ip, ror #18
    1510:	03003409 	movweq	r3, #1033	; 0x409
    1514:	3b0b3a0e 	blcc	2cfd54 <_bss_end+0x2be064>
    1518:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    151c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1520:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1524:	01040a00 	tsteq	r4, r0, lsl #20
    1528:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    152c:	0b0b0b3e 	bleq	2c422c <_bss_end+0x2b253c>
    1530:	0b3a1349 	bleq	e8625c <_bss_end+0xe7456c>
    1534:	0b390b3b 	bleq	e44228 <_bss_end+0xe32538>
    1538:	00001301 	andeq	r1, r0, r1, lsl #6
    153c:	0300280b 	movweq	r2, #2059	; 0x80b
    1540:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1544:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1548:	00001347 	andeq	r1, r0, r7, asr #6
    154c:	0301020d 	movweq	r0, #4621	; 0x120d
    1550:	3a0b0b0e 	bcc	2c4190 <_bss_end+0x2b24a0>
    1554:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1558:	0013010b 	andseq	r0, r3, fp, lsl #2
    155c:	000d0e00 	andeq	r0, sp, r0, lsl #28
    1560:	0b3a0e03 	bleq	e84d74 <_bss_end+0xe73084>
    1564:	0b390b3b 	bleq	e44258 <_bss_end+0xe32568>
    1568:	0b381349 	bleq	e06294 <_bss_end+0xdf45a4>
    156c:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1570:	03193f01 	tsteq	r9, #1, 30
    1574:	3b0b3a0e 	blcc	2cfdb4 <_bss_end+0x2be0c4>
    1578:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    157c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1580:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1584:	00130113 	andseq	r0, r3, r3, lsl r1
    1588:	00051000 	andeq	r1, r5, r0
    158c:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1590:	05110000 	ldreq	r0, [r1, #-0]
    1594:	00134900 	andseq	r4, r3, r0, lsl #18
    1598:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    159c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    15a0:	0b3b0b3a 	bleq	ec4290 <_bss_end+0xeb25a0>
    15a4:	0e6e0b39 	vmoveq.8	d14[5], r0
    15a8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    15ac:	13011364 	movwne	r1, #4964	; 0x1364
    15b0:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    15b4:	03193f01 	tsteq	r9, #1, 30
    15b8:	3b0b3a0e 	blcc	2cfdf8 <_bss_end+0x2be108>
    15bc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    15c0:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    15c4:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    15c8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    15cc:	0b0b000f 	bleq	2c1610 <_bss_end+0x2af920>
    15d0:	00001349 	andeq	r1, r0, r9, asr #6
    15d4:	03003415 	movweq	r3, #1045	; 0x415
    15d8:	3b0b3a0e 	blcc	2cfe18 <_bss_end+0x2be128>
    15dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    15e0:	3c193f13 	ldccc	15, cr3, [r9], {19}
    15e4:	16000019 			; <UNDEFINED> instruction: 0x16000019
    15e8:	13470034 	movtne	r0, #28724	; 0x7034
    15ec:	0b3b0b3a 	bleq	ec42dc <_bss_end+0xeb25ec>
    15f0:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    15f4:	34170000 	ldrcc	r0, [r7], #-0
    15f8:	3a0e0300 	bcc	382200 <_bss_end+0x370510>
    15fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1600:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    1604:	00180219 	andseq	r0, r8, r9, lsl r2
    1608:	002e1800 	eoreq	r1, lr, r0, lsl #16
    160c:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    1610:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1614:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1618:	19000019 	stmdbne	r0, {r0, r3, r4}
    161c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1620:	01111934 	tsteq	r1, r4, lsr r9
    1624:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1628:	01194296 			; <UNDEFINED> instruction: 0x01194296
    162c:	1a000013 	bne	1680 <CPSR_IRQ_INHIBIT+0x1600>
    1630:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1634:	0b3b0b3a 	bleq	ec4324 <_bss_end+0xeb2634>
    1638:	13490b39 	movtne	r0, #39737	; 0x9b39
    163c:	00001802 	andeq	r1, r0, r2, lsl #16
    1640:	47012e1b 	smladmi	r1, fp, lr, r2
    1644:	3b0b3a13 	blcc	2cfe98 <_bss_end+0x2be1a8>
    1648:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    164c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1650:	97184006 	ldrls	r4, [r8, -r6]
    1654:	13011942 	movwne	r1, #6466	; 0x1942
    1658:	051c0000 	ldreq	r0, [ip, #-0]
    165c:	490e0300 	stmdbmi	lr, {r8, r9}
    1660:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    1664:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    1668:	1347012e 	movtne	r0, #28974	; 0x712e
    166c:	0b3b0b3a 	bleq	ec435c <_bss_end+0xeb266c>
    1670:	13640b39 	cmnne	r4, #58368	; 0xe400
    1674:	13010b20 	movwne	r0, #6944	; 0x1b20
    1678:	051e0000 	ldreq	r0, [lr, #-0]
    167c:	490e0300 	stmdbmi	lr, {r8, r9}
    1680:	00193413 	andseq	r3, r9, r3, lsl r4
    1684:	00051f00 	andeq	r1, r5, r0, lsl #30
    1688:	0b3a0e03 	bleq	e84e9c <_bss_end+0xe731ac>
    168c:	0b390b3b 	bleq	e44380 <_bss_end+0xe32690>
    1690:	00001349 	andeq	r1, r0, r9, asr #6
    1694:	31012e20 	tstcc	r1, r0, lsr #28
    1698:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    169c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    16a0:	97184006 	ldrls	r4, [r8, -r6]
    16a4:	00001942 	andeq	r1, r0, r2, asr #18
    16a8:	31000521 	tstcc	r0, r1, lsr #10
    16ac:	00180213 	andseq	r0, r8, r3, lsl r2
    16b0:	11010000 	mrsne	r0, (UNDEF: 1)
    16b4:	130e2501 	movwne	r2, #58625	; 0xe501
    16b8:	1b0e030b 	blne	3822ec <_bss_end+0x3705fc>
    16bc:	1117550e 	tstne	r7, lr, lsl #10
    16c0:	00171001 	andseq	r1, r7, r1
    16c4:	00240200 	eoreq	r0, r4, r0, lsl #4
    16c8:	0b3e0b0b 	bleq	f842fc <_bss_end+0xf7260c>
    16cc:	00000e03 	andeq	r0, r0, r3, lsl #28
    16d0:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    16d4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    16d8:	0b0b0024 	bleq	2c1770 <_bss_end+0x2afa80>
    16dc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    16e0:	35050000 	strcc	r0, [r5, #-0]
    16e4:	00134900 	andseq	r4, r3, r0, lsl #18
    16e8:	00160600 	andseq	r0, r6, r0, lsl #12
    16ec:	0b3a0e03 	bleq	e84f00 <_bss_end+0xe73210>
    16f0:	0b390b3b 	bleq	e443e4 <_bss_end+0xe326f4>
    16f4:	00001349 	andeq	r1, r0, r9, asr #6
    16f8:	03003407 	movweq	r3, #1031	; 0x407
    16fc:	3b0b3a0e 	blcc	2cff3c <_bss_end+0x2be24c>
    1700:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1704:	02196c13 	andseq	r6, r9, #4864	; 0x1300
    1708:	08000018 	stmdaeq	r0, {r3, r4}
    170c:	0e030104 	adfeqs	f0, f3, f4
    1710:	0b3e196d 	bleq	f87ccc <_bss_end+0xf75fdc>
    1714:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1718:	0b3b0b3a 	bleq	ec4408 <_bss_end+0xeb2718>
    171c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1720:	28090000 	stmdacs	r9, {}	; <UNPREDICTABLE>
    1724:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1728:	0a00000b 	beq	175c <CPSR_IRQ_INHIBIT+0x16dc>
    172c:	0e030102 	adfeqs	f0, f3, f2
    1730:	0b3a0b0b 	bleq	e84364 <_bss_end+0xe72674>
    1734:	0b390b3b 	bleq	e44428 <_bss_end+0xe32738>
    1738:	00001301 	andeq	r1, r0, r1, lsl #6
    173c:	0301130b 	movweq	r1, #4875	; 0x130b
    1740:	3a0b0b0e 	bcc	2c4380 <_bss_end+0x2b2690>
    1744:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1748:	0013010b 	andseq	r0, r3, fp, lsl #2
    174c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1750:	0b3a0e03 	bleq	e84f64 <_bss_end+0xe73274>
    1754:	0b390b3b 	bleq	e44448 <_bss_end+0xe32758>
    1758:	0b381349 	bleq	e06484 <_bss_end+0xdf4794>
    175c:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    1760:	03193f01 	tsteq	r9, #1, 30
    1764:	3b0b3a0e 	blcc	2cffa4 <_bss_end+0x2be2b4>
    1768:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    176c:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    1770:	01136419 	tsteq	r3, r9, lsl r4
    1774:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1778:	13490005 	movtne	r0, #36869	; 0x9005
    177c:	00001934 	andeq	r1, r0, r4, lsr r9
    1780:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
    1784:	10000013 	andne	r0, r0, r3, lsl r0
    1788:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    178c:	0e6e0e03 	cdpeq	14, 6, cr0, cr14, cr3, {0}
    1790:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1794:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1798:	0d110000 	ldceq	0, cr0, [r1, #-0]
    179c:	3a0e0300 	bcc	3823a4 <_bss_end+0x3706b4>
    17a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17a4:	3f13490b 	svccc	0x0013490b
    17a8:	00193c19 	andseq	r3, r9, r9, lsl ip
    17ac:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    17b0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    17b4:	0b3b0b3a 	bleq	ec44a4 <_bss_end+0xeb27b4>
    17b8:	0e6e0b39 	vmoveq.8	d14[5], r0
    17bc:	0b321349 	bleq	c864e8 <_bss_end+0xc747f8>
    17c0:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    17c4:	00001301 	andeq	r1, r0, r1, lsl #6
    17c8:	3f012e13 	svccc	0x00012e13
    17cc:	3a0e0319 	bcc	382438 <_bss_end+0x370748>
    17d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17d4:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    17d8:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    17dc:	00130113 	andseq	r0, r3, r3, lsl r1
    17e0:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    17e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    17e8:	0b3b0b3a 	bleq	ec44d8 <_bss_end+0xeb27e8>
    17ec:	0e6e0b39 	vmoveq.8	d14[5], r0
    17f0:	0b321349 	bleq	c8651c <_bss_end+0xc7482c>
    17f4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    17f8:	01150000 	tsteq	r5, r0
    17fc:	01134901 	tsteq	r3, r1, lsl #18
    1800:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1804:	13490021 	movtne	r0, #36897	; 0x9021
    1808:	00000b2f 	andeq	r0, r0, pc, lsr #22
    180c:	0b000f17 	bleq	5470 <CPSR_IRQ_INHIBIT+0x53f0>
    1810:	0013490b 	andseq	r4, r3, fp, lsl #18
    1814:	00021800 	andeq	r1, r2, r0, lsl #16
    1818:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    181c:	21190000 	tstcs	r9, r0
    1820:	1a000000 	bne	1828 <CPSR_IRQ_INHIBIT+0x17a8>
    1824:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1828:	0b3b0b3a 	bleq	ec4518 <_bss_end+0xeb2828>
    182c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1830:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1834:	041b0000 	ldreq	r0, [fp], #-0
    1838:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    183c:	0b0b3e19 	bleq	2d10a8 <_bss_end+0x2bf3b8>
    1840:	3a13490b 	bcc	4d3c74 <_bss_end+0x4c1f84>
    1844:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1848:	010b320b 	tsteq	fp, fp, lsl #4
    184c:	1c000013 	stcne	0, cr0, [r0], {19}
    1850:	08030028 	stmdaeq	r3, {r3, r5}
    1854:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1858:	03000d1d 	movweq	r0, #3357	; 0xd1d
    185c:	3b0b3a08 	blcc	2d0084 <_bss_end+0x2be394>
    1860:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1864:	000b3813 	andeq	r3, fp, r3, lsl r8
    1868:	000d1e00 	andeq	r1, sp, r0, lsl #28
    186c:	0b3a0e03 	bleq	e85080 <_bss_end+0xe73390>
    1870:	0b390b3b 	bleq	e44564 <_bss_end+0xe32874>
    1874:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1878:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    187c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    1880:	0d1f0000 	ldceq	0, cr0, [pc, #-0]	; 1888 <CPSR_IRQ_INHIBIT+0x1808>
    1884:	3a0e0300 	bcc	38248c <_bss_end+0x37079c>
    1888:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    188c:	3f13490b 	svccc	0x0013490b
    1890:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    1894:	00196c19 	andseq	r6, r9, r9, lsl ip
    1898:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
    189c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    18a0:	0b3b0b3a 	bleq	ec4590 <_bss_end+0xeb28a0>
    18a4:	0e6e0b39 	vmoveq.8	d14[5], r0
    18a8:	0b321349 	bleq	c865d4 <_bss_end+0xc748e4>
    18ac:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    18b0:	13011364 	movwne	r1, #4964	; 0x1364
    18b4:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    18b8:	03193f01 	tsteq	r9, #1, 30
    18bc:	3b0b3a0e 	blcc	2d00fc <_bss_end+0x2be40c>
    18c0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    18c4:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    18c8:	00130113 	andseq	r0, r3, r3, lsl r1
    18cc:	00102200 	andseq	r2, r0, r0, lsl #4
    18d0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    18d4:	2f230000 	svccs	0x00230000
    18d8:	49080300 	stmdbmi	r8, {r8, r9}
    18dc:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    18e0:	0b0b000f 	bleq	2c1924 <_bss_end+0x2afc34>
    18e4:	34250000 	strtcc	r0, [r5], #-0
    18e8:	3a134700 	bcc	4d34f0 <_bss_end+0x4c1800>
    18ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18f0:	0018020b 	andseq	r0, r8, fp, lsl #4
    18f4:	002e2600 	eoreq	r2, lr, r0, lsl #12
    18f8:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    18fc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1900:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1904:	27000019 	smladcs	r0, r9, r0, r0
    1908:	0e03012e 	adfeqsp	f0, f3, #0.5
    190c:	01111934 	tsteq	r1, r4, lsr r9
    1910:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1914:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1918:	28000013 	stmdacs	r0, {r0, r1, r4}
    191c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1920:	0b3b0b3a 	bleq	ec4610 <_bss_end+0xeb2920>
    1924:	13490b39 	movtne	r0, #39737	; 0x9b39
    1928:	00001802 	andeq	r1, r0, r2, lsl #16
    192c:	47012e29 	strmi	r2, [r1, -r9, lsr #28]
    1930:	11136413 	tstne	r3, r3, lsl r4
    1934:	40061201 	andmi	r1, r6, r1, lsl #4
    1938:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    193c:	00001301 	andeq	r1, r0, r1, lsl #6
    1940:	0300052a 	movweq	r0, #1322	; 0x52a
    1944:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    1948:	00180219 	andseq	r0, r8, r9, lsl r2
    194c:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    1950:	0b3a1347 	bleq	e86674 <_bss_end+0xe74984>
    1954:	0b390b3b 	bleq	e44648 <_bss_end+0xe32958>
    1958:	01111364 	tsteq	r1, r4, ror #6
    195c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1960:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1964:	2c000013 	stccs	0, cr0, [r0], {19}
    1968:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    196c:	0b3b0b3a 	bleq	ec465c <_bss_end+0xeb296c>
    1970:	13490b39 	movtne	r0, #39737	; 0x9b39
    1974:	00001802 	andeq	r1, r0, r2, lsl #16
    1978:	0300342d 	movweq	r3, #1069	; 0x42d
    197c:	3b0b3a08 	blcc	2d01a4 <_bss_end+0x2be4b4>
    1980:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1984:	00180213 	andseq	r0, r8, r3, lsl r2
    1988:	010b2e00 	tsteq	fp, r0, lsl #28
    198c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1990:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
    1994:	3a134701 	bcc	4d35a0 <_bss_end+0x4c18b0>
    1998:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    199c:	2013640b 	andscs	r6, r3, fp, lsl #8
    19a0:	0013010b 	andseq	r0, r3, fp, lsl #2
    19a4:	00053000 	andeq	r3, r5, r0
    19a8:	13490e03 	movtne	r0, #40451	; 0x9e03
    19ac:	00001934 	andeq	r1, r0, r4, lsr r9
    19b0:	31012e31 	tstcc	r1, r1, lsr lr
    19b4:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    19b8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    19bc:	96184006 	ldrls	r4, [r8], -r6
    19c0:	13011942 	movwne	r1, #6466	; 0x1942
    19c4:	05320000 	ldreq	r0, [r2, #-0]!
    19c8:	02133100 	andseq	r3, r3, #0, 2
    19cc:	33000018 	movwcc	r0, #24
    19d0:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    19d4:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    19d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    19dc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    19e0:	00000019 	andeq	r0, r0, r9, lsl r0
    19e4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    19e8:	030b130e 	movweq	r1, #45838	; 0xb30e
    19ec:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    19f0:	10011117 	andne	r1, r1, r7, lsl r1
    19f4:	02000017 	andeq	r0, r0, #23
    19f8:	0b0b0024 	bleq	2c1a90 <_bss_end+0x2afda0>
    19fc:	0e030b3e 	vmoveq.16	d3[0], r0
    1a00:	26030000 	strcs	r0, [r3], -r0
    1a04:	00134900 	andseq	r4, r3, r0, lsl #18
    1a08:	00240400 	eoreq	r0, r4, r0, lsl #8
    1a0c:	0b3e0b0b 	bleq	f84640 <_bss_end+0xf72950>
    1a10:	00000803 	andeq	r0, r0, r3, lsl #16
    1a14:	03001605 	movweq	r1, #1541	; 0x605
    1a18:	3b0b3a0e 	blcc	2d0258 <_bss_end+0x2be568>
    1a1c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a20:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1a24:	13490035 	movtne	r0, #36917	; 0x9035
    1a28:	04070000 	streq	r0, [r7], #-0
    1a2c:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    1a30:	0b0b3e19 	bleq	2d129c <_bss_end+0x2bf5ac>
    1a34:	3a13490b 	bcc	4d3e68 <_bss_end+0x4c2178>
    1a38:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a3c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1a40:	00280800 	eoreq	r0, r8, r0, lsl #16
    1a44:	0b1c0e03 	bleq	705258 <_bss_end+0x6f3568>
    1a48:	34090000 	strcc	r0, [r9], #-0
    1a4c:	3a0e0300 	bcc	382654 <_bss_end+0x370964>
    1a50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a54:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    1a58:	00180219 	andseq	r0, r8, r9, lsl r2
    1a5c:	01020a00 	tsteq	r2, r0, lsl #20
    1a60:	0b0b0e03 	bleq	2c5274 <_bss_end+0x2b3584>
    1a64:	0b3b0b3a 	bleq	ec4754 <_bss_end+0xeb2a64>
    1a68:	13010b39 	movwne	r0, #6969	; 0x1b39
    1a6c:	130b0000 	movwne	r0, #45056	; 0xb000
    1a70:	0b0e0301 	bleq	38267c <_bss_end+0x37098c>
    1a74:	3b0b3a0b 	blcc	2d02a8 <_bss_end+0x2be5b8>
    1a78:	010b390b 	tsteq	fp, fp, lsl #18
    1a7c:	0c000013 	stceq	0, cr0, [r0], {19}
    1a80:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1a84:	0b3b0b3a 	bleq	ec4774 <_bss_end+0xeb2a84>
    1a88:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a8c:	00000b38 	andeq	r0, r0, r8, lsr fp
    1a90:	3f012e0d 	svccc	0x00012e0d
    1a94:	3a0e0319 	bcc	382700 <_bss_end+0x370a10>
    1a98:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a9c:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1aa0:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
    1aa4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1aa8:	13490005 	movtne	r0, #36869	; 0x9005
    1aac:	00001934 	andeq	r1, r0, r4, lsr r9
    1ab0:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
    1ab4:	10000013 	andne	r0, r0, r3, lsl r0
    1ab8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1abc:	0b3b0b3a 	bleq	ec47ac <_bss_end+0xeb2abc>
    1ac0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ac4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1ac8:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    1acc:	03193f01 	tsteq	r9, #1, 30
    1ad0:	3b0b3a0e 	blcc	2d0310 <_bss_end+0x2be620>
    1ad4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1ad8:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1adc:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1ae0:	00130113 	andseq	r0, r3, r3, lsl r1
    1ae4:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    1ae8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1aec:	0b3b0b3a 	bleq	ec47dc <_bss_end+0xeb2aec>
    1af0:	0e6e0b39 	vmoveq.8	d14[5], r0
    1af4:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1af8:	13011364 	movwne	r1, #4964	; 0x1364
    1afc:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1b00:	03193f01 	tsteq	r9, #1, 30
    1b04:	3b0b3a0e 	blcc	2d0344 <_bss_end+0x2be654>
    1b08:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1b0c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1b10:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1b14:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1b18:	13490101 	movtne	r0, #37121	; 0x9101
    1b1c:	00001301 	andeq	r1, r0, r1, lsl #6
    1b20:	49002115 	stmdbmi	r0, {r0, r2, r4, r8, sp}
    1b24:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1b28:	000f1600 	andeq	r1, pc, r0, lsl #12
    1b2c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1b30:	02170000 	andseq	r0, r7, #0
    1b34:	0b0e0301 	bleq	382740 <_bss_end+0x370a50>
    1b38:	3b0b3a0b 	blcc	2d036c <_bss_end+0x2be67c>
    1b3c:	1d0b390b 	vstrne.16	s6, [fp, #-22]	; 0xffffffea	; <UNPREDICTABLE>
    1b40:	00130113 	andseq	r0, r3, r3, lsl r1
    1b44:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
    1b48:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1b4c:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1b50:	0b321934 	bleq	c88028 <_bss_end+0xc76338>
    1b54:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1b58:	00001301 	andeq	r1, r0, r1, lsl #6
    1b5c:	03000d19 	movweq	r0, #3353	; 0xd19
    1b60:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
    1b64:	3219340b 	andscc	r3, r9, #184549376	; 0xb000000
    1b68:	1a00000b 	bne	1b9c <CPSR_IRQ_INHIBIT+0x1b1c>
    1b6c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1b70:	0b3a0e03 	bleq	e85384 <_bss_end+0xe73694>
    1b74:	0b390b3b 	bleq	e44868 <_bss_end+0xe32b78>
    1b78:	0b4c0e6e 	bleq	1305538 <_bss_end+0x12f3848>
    1b7c:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    1b80:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1b84:	13011364 	movwne	r1, #4964	; 0x1364
    1b88:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    1b8c:	03193f01 	tsteq	r9, #1, 30
    1b90:	3b0b3a0e 	blcc	2d03d0 <_bss_end+0x2be6e0>
    1b94:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1b98:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    1b9c:	1d184d0b 	ldcne	13, cr4, [r8, #-44]	; 0xffffffd4
    1ba0:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1ba4:	00136419 	andseq	r6, r3, r9, lsl r4
    1ba8:	00211c00 	eoreq	r1, r1, r0, lsl #24
    1bac:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    1bb0:	03193f01 	tsteq	r9, #1, 30
    1bb4:	3b0b3a0e 	blcc	2d03f4 <_bss_end+0x2be704>
    1bb8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1bbc:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    1bc0:	32131d0b 	andscc	r1, r3, #704	; 0x2c0
    1bc4:	8b193c0b 	blhi	650bf8 <_bss_end+0x63ef08>
    1bc8:	13640b01 	cmnne	r4, #1024	; 0x400
    1bcc:	00001301 	andeq	r1, r0, r1, lsl #6
    1bd0:	3f012e1e 	svccc	0x00012e1e
    1bd4:	3a0e0319 	bcc	382840 <_bss_end+0x370b50>
    1bd8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bdc:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1be0:	4d0b4c13 	stcmi	12, cr4, [fp, #-76]	; 0xffffffb4
    1be4:	32131d18 	andscc	r1, r3, #24, 26	; 0x600
    1be8:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1bec:	00130113 	andseq	r0, r3, r3, lsl r1
    1bf0:	01391f00 	teqeq	r9, r0, lsl #30
    1bf4:	0b3a0803 	bleq	e83c08 <_bss_end+0xe71f18>
    1bf8:	0b390b3b 	bleq	e448ec <_bss_end+0xe32bfc>
    1bfc:	00001301 	andeq	r1, r0, r1, lsl #6
    1c00:	03003420 	movweq	r3, #1056	; 0x420
    1c04:	3b0b3a0e 	blcc	2d0444 <_bss_end+0x2be754>
    1c08:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c0c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1c10:	00196c06 	andseq	r6, r9, r6, lsl #24
    1c14:	00342100 	eorseq	r2, r4, r0, lsl #2
    1c18:	0b3a0e03 	bleq	e8542c <_bss_end+0xe7373c>
    1c1c:	0b390b3b 	bleq	e44910 <_bss_end+0xe32c20>
    1c20:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    1c24:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    1c28:	04220000 	strteq	r0, [r2], #-0
    1c2c:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    1c30:	0b0b3e19 	bleq	2d149c <_bss_end+0x2bf7ac>
    1c34:	3a13490b 	bcc	4d4068 <_bss_end+0x4c2378>
    1c38:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c3c:	2300000b 	movwcs	r0, #11
    1c40:	13470034 	movtne	r0, #28724	; 0x7034
    1c44:	10240000 	eorne	r0, r4, r0
    1c48:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1c4c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1c50:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1c54:	0b3b0b3a 	bleq	ec4944 <_bss_end+0xeb2c54>
    1c58:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c5c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1c60:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    1c64:	03193f01 	tsteq	r9, #1, 30
    1c68:	3b0b3a0e 	blcc	2d04a8 <_bss_end+0x2be7b8>
    1c6c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1c70:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    1c74:	01136419 	tsteq	r3, r9, lsl r4
    1c78:	27000013 	smladcs	r0, r3, r0, r0
    1c7c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1c80:	0b3a0e03 	bleq	e85494 <_bss_end+0xe737a4>
    1c84:	0b390b3b 	bleq	e44978 <_bss_end+0xe32c88>
    1c88:	0b320e6e 	bleq	c85648 <_bss_end+0xc73958>
    1c8c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1c90:	0f280000 	svceq	0x00280000
    1c94:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1c98:	001c2900 	andseq	r2, ip, r0, lsl #18
    1c9c:	0b381349 	bleq	e069c8 <_bss_end+0xdf4cd8>
    1ca0:	00000b32 	andeq	r0, r0, r2, lsr fp
    1ca4:	0300342a 	movweq	r3, #1066	; 0x42a
    1ca8:	3b0b3a0e 	blcc	2d04e8 <_bss_end+0x2be7f8>
    1cac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1cb0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    1cb4:	2b000018 	blcs	1d1c <CPSR_IRQ_INHIBIT+0x1c9c>
    1cb8:	0e030104 	adfeqs	f0, f3, f4
    1cbc:	0b3e196d 	bleq	f88278 <_bss_end+0xf76588>
    1cc0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1cc4:	0b3b0b3a 	bleq	ec49b4 <_bss_end+0xeb2cc4>
    1cc8:	0b320b39 	bleq	c849b4 <_bss_end+0xc72cc4>
    1ccc:	00001301 	andeq	r1, r0, r1, lsl #6
    1cd0:	0300282c 	movweq	r2, #2092	; 0x82c
    1cd4:	000b1c08 	andeq	r1, fp, r8, lsl #24
    1cd8:	000d2d00 	andeq	r2, sp, r0, lsl #26
    1cdc:	0b3a0803 	bleq	e83cf0 <_bss_end+0xe72000>
    1ce0:	0b390b3b 	bleq	e449d4 <_bss_end+0xe32ce4>
    1ce4:	0b381349 	bleq	e06a10 <_bss_end+0xdf4d20>
    1ce8:	0d2e0000 	stceq	0, cr0, [lr, #-0]
    1cec:	3a0e0300 	bcc	3828f4 <_bss_end+0x370c04>
    1cf0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1cf4:	3f13490b 	svccc	0x0013490b
    1cf8:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    1cfc:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    1d00:	2f000019 	svccs	0x00000019
    1d04:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1d08:	0b3b0b3a 	bleq	ec49f8 <_bss_end+0xeb2d08>
    1d0c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d10:	0b32193f 	bleq	c88214 <_bss_end+0xc76524>
    1d14:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
    1d18:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    1d1c:	03193f01 	tsteq	r9, #1, 30
    1d20:	3b0b3a0e 	blcc	2d0560 <_bss_end+0x2be870>
    1d24:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1d28:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1d2c:	63193c0b 	tstvs	r9, #2816	; 0xb00
    1d30:	01136419 	tsteq	r3, r9, lsl r4
    1d34:	31000013 	tstcc	r0, r3, lsl r0
    1d38:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1d3c:	0b3a0e03 	bleq	e85550 <_bss_end+0xe73860>
    1d40:	0b390b3b 	bleq	e44a34 <_bss_end+0xe32d44>
    1d44:	193c0e6e 	ldmdbne	ip!, {r1, r2, r3, r5, r6, r9, sl, fp}
    1d48:	13011364 	movwne	r1, #4964	; 0x1364
    1d4c:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
    1d50:	03193f01 	tsteq	r9, #1, 30
    1d54:	3b0b3a0e 	blcc	2d0594 <_bss_end+0x2be8a4>
    1d58:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1d5c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1d60:	8b193c0b 	blhi	650d94 <_bss_end+0x63f0a4>
    1d64:	13640b01 	cmnne	r4, #1024	; 0x400
    1d68:	00001301 	andeq	r1, r0, r1, lsl #6
    1d6c:	3f012e33 	svccc	0x00012e33
    1d70:	3a080319 	bcc	2029dc <_bss_end+0x1f0cec>
    1d74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d78:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1d7c:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1d80:	01136419 	tsteq	r3, r9, lsl r4
    1d84:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    1d88:	13470034 	movtne	r0, #28724	; 0x7034
    1d8c:	0b3b0b3a 	bleq	ec4a7c <_bss_end+0xeb2d8c>
    1d90:	0e6e0b39 	vmoveq.8	d14[5], r0
    1d94:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1d98:	34350000 	ldrtcc	r0, [r5], #-0
    1d9c:	3a134700 	bcc	4d39a4 <_bss_end+0x4c1cb4>
    1da0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1da4:	020e6e0b 	andeq	r6, lr, #11, 28	; 0xb0
    1da8:	36000018 			; <UNDEFINED> instruction: 0x36000018
    1dac:	0b0b0042 	bleq	2c1ebc <_bss_end+0x2b01cc>
    1db0:	00001349 	andeq	r1, r0, r9, asr #6
    1db4:	3f012e37 	svccc	0x00012e37
    1db8:	3a0e0319 	bcc	382a24 <_bss_end+0x370d34>
    1dbc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1dc0:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1dc4:	1d0b4c13 	stcne	12, cr4, [fp, #-76]	; 0xffffffb4
    1dc8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1dcc:	01136419 	tsteq	r3, r9, lsl r4
    1dd0:	38000013 	stmdacc	r0, {r0, r1, r4}
    1dd4:	13490115 	movtne	r0, #37141	; 0x9115
    1dd8:	00001301 	andeq	r1, r0, r1, lsl #6
    1ddc:	00001839 	andeq	r1, r0, r9, lsr r8
    1de0:	000f3a00 	andeq	r3, pc, r0, lsl #20
    1de4:	0e030b0b 	vmlaeq.f64	d0, d3, d11
    1de8:	00001349 	andeq	r1, r0, r9, asr #6
    1dec:	47012e3b 	smladxmi	r1, fp, lr, r2
    1df0:	11136413 	tstne	r3, r3, lsl r4
    1df4:	40061201 	andmi	r1, r6, r1, lsl #4
    1df8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1dfc:	00001301 	andeq	r1, r0, r1, lsl #6
    1e00:	0300053c 	movweq	r0, #1340	; 0x53c
    1e04:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    1e08:	00180219 	andseq	r0, r8, r9, lsl r2
    1e0c:	00053d00 	andeq	r3, r5, r0, lsl #26
    1e10:	0b3a0e03 	bleq	e85624 <_bss_end+0xe73934>
    1e14:	0b390b3b 	bleq	e44b08 <_bss_end+0xe32e18>
    1e18:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1e1c:	343e0000 	ldrtcc	r0, [lr], #-0
    1e20:	3a080300 	bcc	202a28 <_bss_end+0x1f0d38>
    1e24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e28:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e2c:	3f000018 	svccc	0x00000018
    1e30:	1347012e 	movtne	r0, #28974	; 0x712e
    1e34:	01111364 	tsteq	r1, r4, ror #6
    1e38:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1e3c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1e40:	40000013 	andmi	r0, r0, r3, lsl r0
    1e44:	08030005 	stmdaeq	r3, {r0, r2}
    1e48:	0b3b0b3a 	bleq	ec4b38 <_bss_end+0xeb2e48>
    1e4c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e50:	00001802 	andeq	r1, r0, r2, lsl #16
    1e54:	47012e41 	strmi	r2, [r1, -r1, asr #28]
    1e58:	64134913 	ldrvs	r4, [r3], #-2323	; 0xfffff6ed
    1e5c:	010b2013 	tsteq	fp, r3, lsl r0
    1e60:	42000013 	andmi	r0, r0, #19
    1e64:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1e68:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1e6c:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
    1e70:	6e133101 	mufvss	f3, f3, f1
    1e74:	1113640e 	tstne	r3, lr, lsl #8
    1e78:	40061201 	andmi	r1, r6, r1, lsl #4
    1e7c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1e80:	00001301 	andeq	r1, r0, r1, lsl #6
    1e84:	31000544 	tstcc	r0, r4, asr #10
    1e88:	00180213 	andseq	r0, r8, r3, lsl r2
    1e8c:	012e4500 			; <UNDEFINED> instruction: 0x012e4500
    1e90:	13641347 	cmnne	r4, #469762049	; 0x1c000001
    1e94:	13010b20 	movwne	r0, #6944	; 0x1b20
    1e98:	34460000 	strbcc	r0, [r6], #-0
    1e9c:	3a0e0300 	bcc	382aa4 <_bss_end+0x370db4>
    1ea0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ea4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ea8:	47000018 	smladmi	r0, r8, r0, r0
    1eac:	0111010b 	tsteq	r1, fp, lsl #2
    1eb0:	13010612 	movwne	r0, #5650	; 0x1612
    1eb4:	0b480000 	bleq	1201ebc <_bss_end+0x11f01cc>
    1eb8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1ebc:	49000006 	stmdbmi	r0, {r1, r2}
    1ec0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1ec4:	0b3b0b3a 	bleq	ec4bb4 <_bss_end+0xeb2ec4>
    1ec8:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ecc:	2e4a0000 	cdpcs	0, 4, cr0, cr10, cr0, {0}
    1ed0:	6e133101 	mufvss	f3, f3, f1
    1ed4:	1113640e 	tstne	r3, lr, lsl #8
    1ed8:	40061201 	andmi	r1, r6, r1, lsl #4
    1edc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1ee0:	00001301 	andeq	r1, r0, r1, lsl #6
    1ee4:	47012e4b 	strmi	r2, [r1, -fp, asr #28]
    1ee8:	3b0b3a13 	blcc	2d073c <_bss_end+0x2bea4c>
    1eec:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    1ef0:	010b2013 	tsteq	fp, r3, lsl r0
    1ef4:	4c000013 	stcmi	0, cr0, [r0], {19}
    1ef8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1efc:	0b3a0e03 	bleq	e85710 <_bss_end+0xe73a20>
    1f00:	0b390b3b 	bleq	e44bf4 <_bss_end+0xe32f04>
    1f04:	01110e6e 	tsteq	r1, lr, ror #28
    1f08:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1f0c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1f10:	4d000013 	stcmi	0, cr0, [r0, #-76]	; 0xffffffb4
    1f14:	13490005 	movtne	r0, #36869	; 0x9005
    1f18:	00001802 	andeq	r1, r0, r2, lsl #16
    1f1c:	3f012e4e 	svccc	0x00012e4e
    1f20:	3a0e0319 	bcc	382b8c <_bss_end+0x370e9c>
    1f24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f28:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1f2c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1f30:	96184006 	ldrls	r4, [r8], -r6
    1f34:	13011942 	movwne	r1, #6466	; 0x1942
    1f38:	2e4f0000 	cdpcs	0, 4, cr0, cr15, cr0, {0}
    1f3c:	64134701 	ldrvs	r4, [r3], #-1793	; 0xfffff8ff
    1f40:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1f44:	97184006 	ldrls	r4, [r8, -r6]
    1f48:	00001942 	andeq	r1, r0, r2, asr #18
    1f4c:	01110100 	tsteq	r1, r0, lsl #2
    1f50:	0b130e25 	bleq	4c57ec <_bss_end+0x4b3afc>
    1f54:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1f58:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1f5c:	00001710 	andeq	r1, r0, r0, lsl r7
    1f60:	0b002402 	bleq	af70 <_GLOBAL__sub_I_sSegment_Display+0xc>
    1f64:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1f68:	0300000e 	movweq	r0, #14
    1f6c:	0b0b0024 	bleq	2c2004 <_bss_end+0x2b0314>
    1f70:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1f74:	16040000 	strne	r0, [r4], -r0
    1f78:	3a0e0300 	bcc	382b80 <_bss_end+0x370e90>
    1f7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f80:	0013490b 	andseq	r4, r3, fp, lsl #18
    1f84:	00260500 	eoreq	r0, r6, r0, lsl #10
    1f88:	00001349 	andeq	r1, r0, r9, asr #6
    1f8c:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1f90:	07000013 	smladeq	r0, r3, r0, r0
    1f94:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    1f98:	0b3b0b3a 	bleq	ec4c88 <_bss_end+0xeb2f98>
    1f9c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1fa0:	34080000 	strcc	r0, [r8], #-0
    1fa4:	3a0e0300 	bcc	382bac <_bss_end+0x370ebc>
    1fa8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fac:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    1fb0:	6c061c19 	stcvs	12, cr1, [r6], {25}
    1fb4:	09000019 	stmdbeq	r0, {r0, r3, r4}
    1fb8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1fbc:	0b3b0b3a 	bleq	ec4cac <_bss_end+0xeb2fbc>
    1fc0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1fc4:	0b1c193c 	bleq	7084bc <_bss_end+0x6f67cc>
    1fc8:	0000196c 	andeq	r1, r0, ip, ror #18
    1fcc:	0301040a 	movweq	r0, #5130	; 0x140a
    1fd0:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    1fd4:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1fd8:	3b0b3a13 	blcc	2d082c <_bss_end+0x2beb3c>
    1fdc:	010b390b 	tsteq	fp, fp, lsl #18
    1fe0:	0b000013 	bleq	2034 <CPSR_IRQ_INHIBIT+0x1fb4>
    1fe4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1fe8:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1fec:	0300280c 	movweq	r2, #2060	; 0x80c
    1ff0:	000b1c08 	andeq	r1, fp, r8, lsl #24
    1ff4:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1ff8:	00001347 	andeq	r1, r0, r7, asr #6
    1ffc:	0301020e 	movweq	r0, #4622	; 0x120e
    2000:	3a0b0b0e 	bcc	2c4c40 <_bss_end+0x2b2f50>
    2004:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2008:	0013010b 	andseq	r0, r3, fp, lsl #2
    200c:	000d0f00 	andeq	r0, sp, r0, lsl #30
    2010:	0b3a0e03 	bleq	e85824 <_bss_end+0xe73b34>
    2014:	0b390b3b 	bleq	e44d08 <_bss_end+0xe33018>
    2018:	0b381349 	bleq	e06d44 <_bss_end+0xdf5054>
    201c:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    2020:	03193f01 	tsteq	r9, #1, 30
    2024:	3b0b3a0e 	blcc	2d0864 <_bss_end+0x2beb74>
    2028:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    202c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    2030:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    2034:	00130113 	andseq	r0, r3, r3, lsl r1
    2038:	00051100 	andeq	r1, r5, r0, lsl #2
    203c:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    2040:	05120000 	ldreq	r0, [r2, #-0]
    2044:	00134900 	andseq	r4, r3, r0, lsl #18
    2048:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
    204c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2050:	0b3b0b3a 	bleq	ec4d40 <_bss_end+0xeb3050>
    2054:	0e6e0b39 	vmoveq.8	d14[5], r0
    2058:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    205c:	13011364 	movwne	r1, #4964	; 0x1364
    2060:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    2064:	03193f01 	tsteq	r9, #1, 30
    2068:	3b0b3a0e 	blcc	2d08a8 <_bss_end+0x2bebb8>
    206c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2070:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2074:	00136419 	andseq	r6, r3, r9, lsl r4
    2078:	000f1500 	andeq	r1, pc, r0, lsl #10
    207c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2080:	10160000 	andsne	r0, r6, r0
    2084:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2088:	17000013 	smladne	r0, r3, r0, r0
    208c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2090:	0b3b0b3a 	bleq	ec4d80 <_bss_end+0xeb3090>
    2094:	13490b39 	movtne	r0, #39737	; 0x9b39
    2098:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    209c:	16180000 	ldrne	r0, [r8], -r0
    20a0:	3a0e0300 	bcc	382ca8 <_bss_end+0x370fb8>
    20a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20a8:	3213490b 	andscc	r4, r3, #180224	; 0x2c000
    20ac:	1900000b 	stmdbne	r0, {r0, r1, r3}
    20b0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    20b4:	0b3a0e03 	bleq	e858c8 <_bss_end+0xe73bd8>
    20b8:	0b390b3b 	bleq	e44dac <_bss_end+0xe330bc>
    20bc:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    20c0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    20c4:	00001364 	andeq	r1, r0, r4, ror #6
    20c8:	0000151a 	andeq	r1, r0, sl, lsl r5
    20cc:	00341b00 	eorseq	r1, r4, r0, lsl #22
    20d0:	0b3a0e03 	bleq	e858e4 <_bss_end+0xe73bf4>
    20d4:	0b390b3b 	bleq	e44dc8 <_bss_end+0xe330d8>
    20d8:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    20dc:	00001802 	andeq	r1, r0, r2, lsl #16
    20e0:	0301131c 	movweq	r1, #4892	; 0x131c
    20e4:	3a0b0b0e 	bcc	2c4d24 <_bss_end+0x2b3034>
    20e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20ec:	0013010b 	andseq	r0, r3, fp, lsl #2
    20f0:	000d1d00 	andeq	r1, sp, r0, lsl #26
    20f4:	0b3a0803 	bleq	e84108 <_bss_end+0xe72418>
    20f8:	0b390b3b 	bleq	e44dec <_bss_end+0xe330fc>
    20fc:	0b381349 	bleq	e06e28 <_bss_end+0xdf5138>
    2100:	011e0000 	tsteq	lr, r0
    2104:	01134901 	tsteq	r3, r1, lsl #18
    2108:	1f000013 	svcne	0x00000013
    210c:	13490021 	movtne	r0, #36897	; 0x9021
    2110:	00000b2f 	andeq	r0, r0, pc, lsr #22
    2114:	03000220 	movweq	r0, #544	; 0x220
    2118:	00193c0e 	andseq	r3, r9, lr, lsl #24
    211c:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    2120:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2124:	0b3b0b3a 	bleq	ec4e14 <_bss_end+0xeb3124>
    2128:	0e6e0b39 	vmoveq.8	d14[5], r0
    212c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    2130:	00001301 	andeq	r1, r0, r1, lsl #6
    2134:	47003422 	strmi	r3, [r0, -r2, lsr #8]
    2138:	3b0b3a13 	blcc	2d098c <_bss_end+0x2bec9c>
    213c:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    2140:	23000018 	movwcs	r0, #24
    2144:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2148:	0b3b0b3a 	bleq	ec4e38 <_bss_end+0xeb3148>
    214c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2150:	00001802 	andeq	r1, r0, r2, lsl #16
    2154:	03002e24 	movweq	r2, #3620	; 0xe24
    2158:	1119340e 	tstne	r9, lr, lsl #8
    215c:	40061201 	andmi	r1, r6, r1, lsl #4
    2160:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2164:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    2168:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    216c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2170:	96184006 	ldrls	r4, [r8], -r6
    2174:	13011942 	movwne	r1, #6466	; 0x1942
    2178:	05260000 	streq	r0, [r6, #-0]!
    217c:	3a0e0300 	bcc	382d84 <_bss_end+0x371094>
    2180:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2184:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2188:	27000018 	smladcs	r0, r8, r0, r0
    218c:	1347012e 	movtne	r0, #28974	; 0x712e
    2190:	0b3b0b3a 	bleq	ec4e80 <_bss_end+0xeb3190>
    2194:	13640b39 	cmnne	r4, #58368	; 0xe400
    2198:	06120111 			; <UNDEFINED> instruction: 0x06120111
    219c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    21a0:	00130119 	andseq	r0, r3, r9, lsl r1
    21a4:	00052800 	andeq	r2, r5, r0, lsl #16
    21a8:	13490e03 	movtne	r0, #40451	; 0x9e03
    21ac:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    21b0:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    21b4:	3a134701 	bcc	4d3dc0 <_bss_end+0x4c20d0>
    21b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    21bc:	1113640b 	tstne	r3, fp, lsl #8
    21c0:	40061201 	andmi	r1, r6, r1, lsl #4
    21c4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    21c8:	00001301 	andeq	r1, r0, r1, lsl #6
    21cc:	0300052a 	movweq	r0, #1322	; 0x52a
    21d0:	3b0b3a08 	blcc	2d09f8 <_bss_end+0x2bed08>
    21d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    21d8:	00180213 	andseq	r0, r8, r3, lsl r2
    21dc:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    21e0:	0b3a1347 	bleq	e86f04 <_bss_end+0xe75214>
    21e4:	0b390b3b 	bleq	e44ed8 <_bss_end+0xe331e8>
    21e8:	0b201364 	bleq	806f80 <_bss_end+0x7f5290>
    21ec:	00001301 	andeq	r1, r0, r1, lsl #6
    21f0:	0300052c 	movweq	r0, #1324	; 0x52c
    21f4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    21f8:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    21fc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2200:	0b3b0b3a 	bleq	ec4ef0 <_bss_end+0xeb3200>
    2204:	13490b39 	movtne	r0, #39737	; 0x9b39
    2208:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    220c:	6e133101 	mufvss	f3, f3, f1
    2210:	1113640e 	tstne	r3, lr, lsl #8
    2214:	40061201 	andmi	r1, r6, r1, lsl #4
    2218:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    221c:	00001301 	andeq	r1, r0, r1, lsl #6
    2220:	3100052f 	tstcc	r0, pc, lsr #10
    2224:	00180213 	andseq	r0, r8, r3, lsl r2
    2228:	002e3000 	eoreq	r3, lr, r0
    222c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2230:	0b3b0b3a 	bleq	ec4f20 <_bss_end+0xeb3230>
    2234:	01110b39 	tsteq	r1, r9, lsr fp
    2238:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    223c:	00194297 	mulseq	r9, r7, r2
    2240:	002e3100 	eoreq	r3, lr, r0, lsl #2
    2244:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2248:	0b3b0b3a 	bleq	ec4f38 <_bss_end+0xeb3248>
    224c:	01110b39 	tsteq	r1, r9, lsr fp
    2250:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2254:	00194296 	mulseq	r9, r6, r2
    2258:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
    225c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2260:	0b3b0b3a 	bleq	ec4f50 <_bss_end+0xeb3260>
    2264:	13490b39 	movtne	r0, #39737	; 0x9b39
    2268:	06120111 			; <UNDEFINED> instruction: 0x06120111
    226c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2270:	00130119 	andseq	r0, r3, r9, lsl r1
    2274:	11010000 	mrsne	r0, (UNDEF: 1)
    2278:	130e2501 	movwne	r2, #58625	; 0xe501
    227c:	1b0e030b 	blne	382eb0 <_bss_end+0x3711c0>
    2280:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2284:	00171006 	andseq	r1, r7, r6
    2288:	00240200 	eoreq	r0, r4, r0, lsl #4
    228c:	0b3e0b0b 	bleq	f84ec0 <_bss_end+0xf731d0>
    2290:	00000e03 	andeq	r0, r0, r3, lsl #28
    2294:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    2298:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    229c:	0b0b0024 	bleq	2c2334 <_bss_end+0x2b0644>
    22a0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    22a4:	16050000 	strne	r0, [r5], -r0
    22a8:	3a0e0300 	bcc	382eb0 <_bss_end+0x3711c0>
    22ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    22b0:	0013490b 	andseq	r4, r3, fp, lsl #18
    22b4:	00350600 	eorseq	r0, r5, r0, lsl #12
    22b8:	00001349 	andeq	r1, r0, r9, asr #6
    22bc:	03013907 	movweq	r3, #6407	; 0x1907
    22c0:	3b0b3a08 	blcc	2d0ae8 <_bss_end+0x2bedf8>
    22c4:	010b390b 	tsteq	fp, fp, lsl #18
    22c8:	08000013 	stmdaeq	r0, {r0, r1, r4}
    22cc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    22d0:	0b3b0b3a 	bleq	ec4fc0 <_bss_end+0xeb32d0>
    22d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    22d8:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    22dc:	0000196c 	andeq	r1, r0, ip, ror #18
    22e0:	03003409 	movweq	r3, #1033	; 0x409
    22e4:	3b0b3a0e 	blcc	2d0b24 <_bss_end+0x2bee34>
    22e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    22ec:	1c193c13 	ldcne	12, cr3, [r9], {19}
    22f0:	00196c0b 	andseq	r6, r9, fp, lsl #24
    22f4:	01040a00 	tsteq	r4, r0, lsl #20
    22f8:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    22fc:	0b0b0b3e 	bleq	2c4ffc <_bss_end+0x2b330c>
    2300:	0b3a1349 	bleq	e8702c <_bss_end+0xe7533c>
    2304:	0b390b3b 	bleq	e44ff8 <_bss_end+0xe33308>
    2308:	00001301 	andeq	r1, r0, r1, lsl #6
    230c:	0300280b 	movweq	r2, #2059	; 0x80b
    2310:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    2314:	00280c00 	eoreq	r0, r8, r0, lsl #24
    2318:	0b1c0803 	bleq	70432c <_bss_end+0x6f263c>
    231c:	340d0000 	strcc	r0, [sp], #-0
    2320:	00134700 	andseq	r4, r3, r0, lsl #14
    2324:	000f0e00 	andeq	r0, pc, r0, lsl #28
    2328:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    232c:	020f0000 	andeq	r0, pc, #0
    2330:	0b0e0301 	bleq	382f3c <_bss_end+0x37124c>
    2334:	3b0b3a0b 	blcc	2d0b68 <_bss_end+0x2bee78>
    2338:	010b390b 	tsteq	fp, fp, lsl #18
    233c:	10000013 	andne	r0, r0, r3, lsl r0
    2340:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2344:	0b3b0b3a 	bleq	ec5034 <_bss_end+0xeb3344>
    2348:	13490b39 	movtne	r0, #39737	; 0x9b39
    234c:	00000b38 	andeq	r0, r0, r8, lsr fp
    2350:	03001611 	movweq	r1, #1553	; 0x611
    2354:	3b0b3a0e 	blcc	2d0b94 <_bss_end+0x2beea4>
    2358:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    235c:	000b3213 	andeq	r3, fp, r3, lsl r2
    2360:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    2364:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2368:	0b3b0b3a 	bleq	ec5058 <_bss_end+0xeb3368>
    236c:	0e6e0b39 	vmoveq.8	d14[5], r0
    2370:	0b321349 	bleq	c8709c <_bss_end+0xc753ac>
    2374:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    2378:	00001301 	andeq	r1, r0, r1, lsl #6
    237c:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
    2380:	00193413 	andseq	r3, r9, r3, lsl r4
    2384:	00051400 	andeq	r1, r5, r0, lsl #8
    2388:	00001349 	andeq	r1, r0, r9, asr #6
    238c:	3f012e15 	svccc	0x00012e15
    2390:	3a0e0319 	bcc	382ffc <_bss_end+0x37130c>
    2394:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2398:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    239c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    23a0:	00130113 	andseq	r0, r3, r3, lsl r1
    23a4:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    23a8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    23ac:	0b3b0b3a 	bleq	ec509c <_bss_end+0xeb33ac>
    23b0:	0e6e0b39 	vmoveq.8	d14[5], r0
    23b4:	0b321349 	bleq	c870e0 <_bss_end+0xc753f0>
    23b8:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    23bc:	15170000 	ldrne	r0, [r7, #-0]
    23c0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    23c4:	0b0b0010 	bleq	2c240c <_bss_end+0x2b071c>
    23c8:	00001349 	andeq	r1, r0, r9, asr #6
    23cc:	03003419 	movweq	r3, #1049	; 0x419
    23d0:	3b0b3a0e 	blcc	2d0c10 <_bss_end+0x2bef20>
    23d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    23d8:	3c193f13 	ldccc	15, cr3, [r9], {19}
    23dc:	1a000019 	bne	2448 <CPSR_IRQ_INHIBIT+0x23c8>
    23e0:	0e030104 	adfeqs	f0, f3, f4
    23e4:	0b3e196d 	bleq	f889a0 <_bss_end+0xf76cb0>
    23e8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    23ec:	0b3b0b3a 	bleq	ec50dc <_bss_end+0xeb33ec>
    23f0:	0b320b39 	bleq	c850dc <_bss_end+0xc733ec>
    23f4:	00001301 	andeq	r1, r0, r1, lsl #6
    23f8:	0301131b 	movweq	r1, #4891	; 0x131b
    23fc:	3a0b0b0e 	bcc	2c503c <_bss_end+0x2b334c>
    2400:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2404:	0013010b 	andseq	r0, r3, fp, lsl #2
    2408:	000d1c00 	andeq	r1, sp, r0, lsl #24
    240c:	0b3a0803 	bleq	e84420 <_bss_end+0xe72730>
    2410:	0b390b3b 	bleq	e45104 <_bss_end+0xe33414>
    2414:	0b381349 	bleq	e07140 <_bss_end+0xdf5450>
    2418:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
    241c:	3a0e0300 	bcc	383024 <_bss_end+0x371334>
    2420:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2424:	3f13490b 	svccc	0x0013490b
    2428:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    242c:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    2430:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    2434:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2438:	0b3b0b3a 	bleq	ec5128 <_bss_end+0xeb3438>
    243c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2440:	0b32193f 	bleq	c88944 <_bss_end+0xc76c54>
    2444:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
    2448:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    244c:	03193f01 	tsteq	r9, #1, 30
    2450:	3b0b3a0e 	blcc	2d0c90 <_bss_end+0x2befa0>
    2454:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2458:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    245c:	63193c0b 	tstvs	r9, #2816	; 0xb00
    2460:	01136419 	tsteq	r3, r9, lsl r4
    2464:	20000013 	andcs	r0, r0, r3, lsl r0
    2468:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    246c:	0b3a0e03 	bleq	e85c80 <_bss_end+0xe73f90>
    2470:	0b390b3b 	bleq	e45164 <_bss_end+0xe33474>
    2474:	193c0e6e 	ldmdbne	ip!, {r1, r2, r3, r5, r6, r9, sl, fp}
    2478:	13011364 	movwne	r1, #4964	; 0x1364
    247c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    2480:	03193f01 	tsteq	r9, #1, 30
    2484:	3b0b3a0e 	blcc	2d0cc4 <_bss_end+0x2befd4>
    2488:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    248c:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2490:	00136419 	andseq	r6, r3, r9, lsl r4
    2494:	00342200 	eorseq	r2, r4, r0, lsl #4
    2498:	0b3a0e03 	bleq	e85cac <_bss_end+0xe73fbc>
    249c:	0b390b3b 	bleq	e45190 <_bss_end+0xe334a0>
    24a0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    24a4:	196c051c 	stmdbne	ip!, {r2, r3, r4, r8, sl}^
    24a8:	34230000 	strtcc	r0, [r3], #-0
    24ac:	3a0e0300 	bcc	3830b4 <_bss_end+0x3713c4>
    24b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    24b4:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    24b8:	00180219 	andseq	r0, r8, r9, lsl r2
    24bc:	01012400 	tsteq	r1, r0, lsl #8
    24c0:	13011349 	movwne	r1, #4937	; 0x1349
    24c4:	21250000 			; <UNDEFINED> instruction: 0x21250000
    24c8:	2f134900 	svccs	0x00134900
    24cc:	2600000b 	strcs	r0, [r0], -fp
    24d0:	0e030002 	cdpeq	0, 0, cr0, cr3, cr2, {0}
    24d4:	0000193c 	andeq	r1, r0, ip, lsr r9
    24d8:	3f012e27 	svccc	0x00012e27
    24dc:	3a0e0319 	bcc	383148 <_bss_end+0x371458>
    24e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    24e4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    24e8:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
    24ec:	28000013 	stmdacs	r0, {r0, r1, r4}
    24f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    24f4:	0b3b0b3a 	bleq	ec51e4 <_bss_end+0xeb34f4>
    24f8:	13490b39 	movtne	r0, #39737	; 0x9b39
    24fc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2500:	21290000 			; <UNDEFINED> instruction: 0x21290000
    2504:	2a000000 	bcs	250c <CPSR_IRQ_INHIBIT+0x248c>
    2508:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    250c:	0b3a0e03 	bleq	e85d20 <_bss_end+0xe74030>
    2510:	0b390b3b 	bleq	e45204 <_bss_end+0xe33514>
    2514:	01111349 	tsteq	r1, r9, asr #6
    2518:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    251c:	00194296 	mulseq	r9, r6, r2
    2520:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    2524:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2528:	0b3b0b3a 	bleq	ec5218 <_bss_end+0xeb3528>
    252c:	01110b39 	tsteq	r1, r9, lsr fp
    2530:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2534:	00194296 	mulseq	r9, r6, r2
    2538:	11010000 	mrsne	r0, (UNDEF: 1)
    253c:	130e2501 	movwne	r2, #58625	; 0xe501
    2540:	1b0e030b 	blne	383174 <_bss_end+0x371484>
    2544:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2548:	00171006 	andseq	r1, r7, r6
    254c:	00240200 	eoreq	r0, r4, r0, lsl #4
    2550:	0b3e0b0b 	bleq	f85184 <_bss_end+0xf73494>
    2554:	00000e03 	andeq	r0, r0, r3, lsl #28
    2558:	0b002403 	bleq	b56c <_ZN6CTimerC1Em+0x28>
    255c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2560:	04000008 	streq	r0, [r0], #-8
    2564:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2568:	0b3b0b3a 	bleq	ec5258 <_bss_end+0xeb3568>
    256c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2570:	26050000 	strcs	r0, [r5], -r0
    2574:	00134900 	andseq	r4, r3, r0, lsl #18
    2578:	01130600 	tsteq	r3, r0, lsl #12
    257c:	0b0b0e03 	bleq	2c5d90 <_bss_end+0x2b40a0>
    2580:	0b3b0b3a 	bleq	ec5270 <_bss_end+0xeb3580>
    2584:	13010b39 	movwne	r0, #6969	; 0x1b39
    2588:	0d070000 	stceq	0, cr0, [r7, #-0]
    258c:	3a0e0300 	bcc	383194 <_bss_end+0x3714a4>
    2590:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2594:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2598:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    259c:	0b0b000f 	bleq	2c25e0 <_bss_end+0x2b08f0>
    25a0:	00001349 	andeq	r1, r0, r9, asr #6
    25a4:	03010209 	movweq	r0, #4617	; 0x1209
    25a8:	3a0b0b0e 	bcc	2c51e8 <_bss_end+0x2b34f8>
    25ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25b0:	0013010b 	andseq	r0, r3, fp, lsl #2
    25b4:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
    25b8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    25bc:	0b3b0b3a 	bleq	ec52ac <_bss_end+0xeb35bc>
    25c0:	0e6e0b39 	vmoveq.8	d14[5], r0
    25c4:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    25c8:	13011364 	movwne	r1, #4964	; 0x1364
    25cc:	050b0000 	streq	r0, [fp, #-0]
    25d0:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    25d4:	0c000019 	stceq	0, cr0, [r0], {25}
    25d8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    25dc:	0b3a0e03 	bleq	e85df0 <_bss_end+0xe74100>
    25e0:	0b390b3b 	bleq	e452d4 <_bss_end+0xe335e4>
    25e4:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    25e8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    25ec:	13011364 	movwne	r1, #4964	; 0x1364
    25f0:	050d0000 	streq	r0, [sp, #-0]
    25f4:	00134900 	andseq	r4, r3, r0, lsl #18
    25f8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
    25fc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2600:	0b3b0b3a 	bleq	ec52f0 <_bss_end+0xeb3600>
    2604:	0e6e0b39 	vmoveq.8	d14[5], r0
    2608:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    260c:	00001364 	andeq	r1, r0, r4, ror #6
    2610:	0b000f0f 	bleq	6254 <CPSR_IRQ_INHIBIT+0x61d4>
    2614:	1000000b 	andne	r0, r0, fp
    2618:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    261c:	0b3b0b3a 	bleq	ec530c <_bss_end+0xeb361c>
    2620:	13490b39 	movtne	r0, #39737	; 0x9b39
    2624:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2628:	39110000 	ldmdbcc	r1, {}	; <UNPREDICTABLE>
    262c:	3a080301 	bcc	203238 <_bss_end+0x1f1548>
    2630:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2634:	0013010b 	andseq	r0, r3, fp, lsl #2
    2638:	00341200 	eorseq	r1, r4, r0, lsl #4
    263c:	0b3a0e03 	bleq	e85e50 <_bss_end+0xe74160>
    2640:	0b390b3b 	bleq	e45334 <_bss_end+0xe33644>
    2644:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2648:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
    264c:	34130000 	ldrcc	r0, [r3], #-0
    2650:	3a0e0300 	bcc	383258 <_bss_end+0x371568>
    2654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2658:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    265c:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    2660:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
    2664:	13470034 	movtne	r0, #28724	; 0x7034
    2668:	34150000 	ldrcc	r0, [r5], #-0
    266c:	3a0e0300 	bcc	383274 <_bss_end+0x371584>
    2670:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2674:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    2678:	6c051c19 	stcvs	12, cr1, [r5], {25}
    267c:	16000019 			; <UNDEFINED> instruction: 0x16000019
    2680:	0e030102 	adfeqs	f0, f3, f2
    2684:	0b3a050b 	bleq	e83ab8 <_bss_end+0xe71dc8>
    2688:	0b390b3b 	bleq	e4537c <_bss_end+0xe3368c>
    268c:	00001301 	andeq	r1, r0, r1, lsl #6
    2690:	3f012e17 	svccc	0x00012e17
    2694:	3a0e0319 	bcc	383300 <_bss_end+0x371610>
    2698:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    269c:	3c0e6e0b 	stccc	14, cr6, [lr], {11}
    26a0:	01136419 	tsteq	r3, r9, lsl r4
    26a4:	18000013 	stmdane	r0, {r0, r1, r4}
    26a8:	13490101 	movtne	r0, #37121	; 0x9101
    26ac:	00001301 	andeq	r1, r0, r1, lsl #6
    26b0:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
    26b4:	00052f13 	andeq	r2, r5, r3, lsl pc
    26b8:	00341a00 	eorseq	r1, r4, r0, lsl #20
    26bc:	0b3a1347 	bleq	e873e0 <_bss_end+0xe756f0>
    26c0:	0b390b3b 	bleq	e453b4 <_bss_end+0xe336c4>
    26c4:	00001802 	andeq	r1, r0, r2, lsl #16
    26c8:	03002e1b 	movweq	r2, #3611	; 0xe1b
    26cc:	1119340e 	tstne	r9, lr, lsl #8
    26d0:	40061201 	andmi	r1, r6, r1, lsl #4
    26d4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    26d8:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    26dc:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    26e0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    26e4:	96184006 	ldrls	r4, [r8], -r6
    26e8:	13011942 	movwne	r1, #6466	; 0x1942
    26ec:	051d0000 	ldreq	r0, [sp, #-0]
    26f0:	3a0e0300 	bcc	3832f8 <_bss_end+0x371608>
    26f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    26f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    26fc:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    2700:	1347012e 	movtne	r0, #28974	; 0x712e
    2704:	0b3b0b3a 	bleq	ec53f4 <_bss_end+0xeb3704>
    2708:	13640b39 	cmnne	r4, #58368	; 0xe400
    270c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2710:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2714:	00130119 	andseq	r0, r3, r9, lsl r1
    2718:	00051f00 	andeq	r1, r5, r0, lsl #30
    271c:	13490e03 	movtne	r0, #40451	; 0x9e03
    2720:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    2724:	05200000 	streq	r0, [r0, #-0]!
    2728:	3a080300 	bcc	203330 <_bss_end+0x1f1640>
    272c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2730:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2734:	21000018 	tstcs	r0, r8, lsl r0
    2738:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    273c:	0b3b0b3a 	bleq	ec542c <_bss_end+0xeb373c>
    2740:	13490b39 	movtne	r0, #39737	; 0x9b39
    2744:	00001802 	andeq	r1, r0, r2, lsl #16
    2748:	47012e22 	strmi	r2, [r1, -r2, lsr #28]
    274c:	3b0b3a13 	blcc	2d0fa0 <_bss_end+0x2bf2b0>
    2750:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2754:	11136413 	tstne	r3, r3, lsl r4
    2758:	40061201 	andmi	r1, r6, r1, lsl #4
    275c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2760:	00001301 	andeq	r1, r0, r1, lsl #6
    2764:	47012e23 	strmi	r2, [r1, -r3, lsr #28]
    2768:	3b0b3a13 	blcc	2d0fbc <_bss_end+0x2bf2cc>
    276c:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    2770:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2774:	96184006 	ldrls	r4, [r8], -r6
    2778:	13011942 	movwne	r1, #6466	; 0x1942
    277c:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    2780:	3a134701 	bcc	4d438c <_bss_end+0x4c269c>
    2784:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2788:	2013640b 	andscs	r6, r3, fp, lsl #8
    278c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2790:	00052500 	andeq	r2, r5, r0, lsl #10
    2794:	13490e03 	movtne	r0, #40451	; 0x9e03
    2798:	00001934 	andeq	r1, r0, r4, lsr r9
    279c:	31012e26 	tstcc	r1, r6, lsr #28
    27a0:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    27a4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    27a8:	96184006 	ldrls	r4, [r8], -r6
    27ac:	00001942 	andeq	r1, r0, r2, asr #18
    27b0:	31000527 	tstcc	r0, r7, lsr #10
    27b4:	00180213 	andseq	r0, r8, r3, lsl r2
    27b8:	11010000 	mrsne	r0, (UNDEF: 1)
    27bc:	130e2501 	movwne	r2, #58625	; 0xe501
    27c0:	1b0e030b 	blne	3833f4 <_bss_end+0x371704>
    27c4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    27c8:	00171006 	andseq	r1, r7, r6
    27cc:	00240200 	eoreq	r0, r4, r0, lsl #4
    27d0:	0b3e0b0b 	bleq	f85404 <_bss_end+0xf73714>
    27d4:	00000e03 	andeq	r0, r0, r3, lsl #28
    27d8:	0b002403 	bleq	b7ec <_ZN5CTRNGC1Ej+0x18>
    27dc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    27e0:	04000008 	streq	r0, [r0], #-8
    27e4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    27e8:	0b3b0b3a 	bleq	ec54d8 <_bss_end+0xeb37e8>
    27ec:	13490b39 	movtne	r0, #39737	; 0x9b39
    27f0:	26050000 	strcs	r0, [r5], -r0
    27f4:	00134900 	andseq	r4, r3, r0, lsl #18
    27f8:	01390600 	teqeq	r9, r0, lsl #12
    27fc:	0b3a0803 	bleq	e84810 <_bss_end+0xe72b20>
    2800:	0b390b3b 	bleq	e454f4 <_bss_end+0xe33804>
    2804:	00001301 	andeq	r1, r0, r1, lsl #6
    2808:	03003407 	movweq	r3, #1031	; 0x407
    280c:	3b0b3a0e 	blcc	2d104c <_bss_end+0x2bf35c>
    2810:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2814:	1c193c13 	ldcne	12, cr3, [r9], {19}
    2818:	00196c06 	andseq	r6, r9, r6, lsl #24
    281c:	00340800 	eorseq	r0, r4, r0, lsl #16
    2820:	0b3a0e03 	bleq	e86034 <_bss_end+0xe74344>
    2824:	0b390b3b 	bleq	e45518 <_bss_end+0xe33828>
    2828:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    282c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    2830:	34090000 	strcc	r0, [r9], #-0
    2834:	00134700 	andseq	r4, r3, r0, lsl #14
    2838:	00340a00 	eorseq	r0, r4, r0, lsl #20
    283c:	0b3a0e03 	bleq	e86050 <_bss_end+0xe74360>
    2840:	0b390b3b 	bleq	e45534 <_bss_end+0xe33844>
    2844:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2848:	196c051c 	stmdbne	ip!, {r2, r3, r4, r8, sl}^
    284c:	020b0000 	andeq	r0, fp, #0
    2850:	0b0e0301 	bleq	38345c <_bss_end+0x37176c>
    2854:	3b0b3a05 	blcc	2d1070 <_bss_end+0x2bf380>
    2858:	010b390b 	tsteq	fp, fp, lsl #18
    285c:	0c000013 	stceq	0, cr0, [r0], {19}
    2860:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2864:	0b3b0b3a 	bleq	ec5554 <_bss_end+0xeb3864>
    2868:	13490b39 	movtne	r0, #39737	; 0x9b39
    286c:	00000b38 	andeq	r0, r0, r8, lsr fp
    2870:	3f012e0d 	svccc	0x00012e0d
    2874:	3a0e0319 	bcc	3834e0 <_bss_end+0x3717f0>
    2878:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    287c:	3c0e6e0b 	stccc	14, cr6, [lr], {11}
    2880:	01136419 	tsteq	r3, r9, lsl r4
    2884:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    2888:	13490005 	movtne	r0, #36869	; 0x9005
    288c:	00001934 	andeq	r1, r0, r4, lsr r9
    2890:	4900050f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sl}
    2894:	10000013 	andne	r0, r0, r3, lsl r0
    2898:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    289c:	0b3a0e03 	bleq	e860b0 <_bss_end+0xe743c0>
    28a0:	0b390b3b 	bleq	e45594 <_bss_end+0xe338a4>
    28a4:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    28a8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    28ac:	13011364 	movwne	r1, #4964	; 0x1364
    28b0:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    28b4:	03193f01 	tsteq	r9, #1, 30
    28b8:	3b0b3a0e 	blcc	2d10f8 <_bss_end+0x2bf408>
    28bc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    28c0:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    28c4:	00136419 	andseq	r6, r3, r9, lsl r4
    28c8:	01011200 	mrseq	r1, R9_usr
    28cc:	13011349 	movwne	r1, #4937	; 0x1349
    28d0:	21130000 	tstcs	r3, r0
    28d4:	2f134900 	svccs	0x00134900
    28d8:	14000005 	strne	r0, [r0], #-5
    28dc:	0b0b000f 	bleq	2c2920 <_bss_end+0x2b0c30>
    28e0:	00001349 	andeq	r1, r0, r9, asr #6
    28e4:	03003415 	movweq	r3, #1045	; 0x415
    28e8:	3b0b3a0e 	blcc	2d1128 <_bss_end+0x2bf438>
    28ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    28f0:	3c193f13 	ldccc	15, cr3, [r9], {19}
    28f4:	16000019 			; <UNDEFINED> instruction: 0x16000019
    28f8:	13470034 	movtne	r0, #28724	; 0x7034
    28fc:	0b3b0b3a 	bleq	ec55ec <_bss_end+0xeb38fc>
    2900:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    2904:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    2908:	340e0300 	strcc	r0, [lr], #-768	; 0xfffffd00
    290c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2910:	96184006 	ldrls	r4, [r8], -r6
    2914:	00001942 	andeq	r1, r0, r2, asr #18
    2918:	03012e18 	movweq	r2, #7704	; 0x1e18
    291c:	1119340e 	tstne	r9, lr, lsl #8
    2920:	40061201 	andmi	r1, r6, r1, lsl #4
    2924:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2928:	00001301 	andeq	r1, r0, r1, lsl #6
    292c:	03000519 	movweq	r0, #1305	; 0x519
    2930:	3b0b3a0e 	blcc	2d1170 <_bss_end+0x2bf480>
    2934:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2938:	00180213 	andseq	r0, r8, r3, lsl r2
    293c:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
    2940:	0b3a1347 	bleq	e87664 <_bss_end+0xe75974>
    2944:	0b390b3b 	bleq	e45638 <_bss_end+0xe33948>
    2948:	01111364 	tsteq	r1, r4, ror #6
    294c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2950:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2954:	1b000013 	blne	29a8 <CPSR_IRQ_INHIBIT+0x2928>
    2958:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    295c:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    2960:	00001802 	andeq	r1, r0, r2, lsl #16
    2964:	0300051c 	movweq	r0, #1308	; 0x51c
    2968:	3b0b3a08 	blcc	2d1190 <_bss_end+0x2bf4a0>
    296c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2970:	00180213 	andseq	r0, r8, r3, lsl r2
    2974:	00341d00 	eorseq	r1, r4, r0, lsl #26
    2978:	0b3a0803 	bleq	e8498c <_bss_end+0xe72c9c>
    297c:	0b390b3b 	bleq	e45670 <_bss_end+0xe33980>
    2980:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2984:	0b1e0000 	bleq	78298c <_bss_end+0x770c9c>
    2988:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    298c:	1f000006 	svcne	0x00000006
    2990:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2994:	0b3b0b3a 	bleq	ec5684 <_bss_end+0xeb3994>
    2998:	13490b39 	movtne	r0, #39737	; 0x9b39
    299c:	00001802 	andeq	r1, r0, r2, lsl #16
    29a0:	47012e20 	strmi	r2, [r1, -r0, lsr #28]
    29a4:	390b3a13 	stmdbcc	fp, {r0, r1, r4, r9, fp, ip, sp}
    29a8:	1113640b 	tstne	r3, fp, lsl #8
    29ac:	40061201 	andmi	r1, r6, r1, lsl #4
    29b0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    29b4:	00001301 	andeq	r1, r0, r1, lsl #6
    29b8:	47012e21 	strmi	r2, [r1, -r1, lsr #28]
    29bc:	3b0b3a13 	blcc	2d1210 <_bss_end+0x2bf520>
    29c0:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    29c4:	010b2013 	tsteq	fp, r3, lsl r0
    29c8:	22000013 	andcs	r0, r0, #19
    29cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    29d0:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    29d4:	0b230000 	bleq	8c29dc <_bss_end+0x8b0cec>
    29d8:	24000001 	strcs	r0, [r0], #-1
    29dc:	08030034 	stmdaeq	r3, {r2, r4, r5}
    29e0:	0b3b0b3a 	bleq	ec56d0 <_bss_end+0xeb39e0>
    29e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    29e8:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    29ec:	6e133101 	mufvss	f3, f3, f1
    29f0:	1113640e 	tstne	r3, lr, lsl #8
    29f4:	40061201 	andmi	r1, r6, r1, lsl #4
    29f8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    29fc:	05260000 	streq	r0, [r6, #-0]!
    2a00:	02133100 	andseq	r3, r3, #0, 2
    2a04:	27000018 	smladcs	r0, r8, r0, r0
    2a08:	1331010b 	teqne	r1, #-1073741822	; 0xc0000002
    2a0c:	00001301 	andeq	r1, r0, r1, lsl #6
    2a10:	31003428 	tstcc	r0, r8, lsr #8
    2a14:	29000013 	stmdbcs	r0, {r0, r1, r4}
    2a18:	1331010b 	teqne	r1, #-1073741822	; 0xc0000002
    2a1c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2a20:	342a0000 	strtcc	r0, [sl], #-0
    2a24:	02133100 	andseq	r3, r3, #0, 2
    2a28:	00000018 	andeq	r0, r0, r8, lsl r0
    2a2c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2a30:	030b130e 	movweq	r1, #45838	; 0xb30e
    2a34:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2a38:	10011117 	andne	r1, r1, r7, lsl r1
    2a3c:	02000017 	andeq	r0, r0, #23
    2a40:	0b0b0024 	bleq	2c2ad8 <_bss_end+0x2b0de8>
    2a44:	0e030b3e 	vmoveq.16	d3[0], r0
    2a48:	26030000 	strcs	r0, [r3], -r0
    2a4c:	00134900 	andseq	r4, r3, r0, lsl #18
    2a50:	00240400 	eoreq	r0, r4, r0, lsl #8
    2a54:	0b3e0b0b 	bleq	f85688 <_bss_end+0xf73998>
    2a58:	00000803 	andeq	r0, r0, r3, lsl #16
    2a5c:	03001605 	movweq	r1, #1541	; 0x605
    2a60:	3b0b3a0e 	blcc	2d12a0 <_bss_end+0x2bf5b0>
    2a64:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2a68:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2a6c:	13490035 	movtne	r0, #36917	; 0x9035
    2a70:	34070000 	strcc	r0, [r7], #-0
    2a74:	3a0e0300 	bcc	38367c <_bss_end+0x37198c>
    2a78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2a7c:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    2a80:	00180219 	andseq	r0, r8, r9, lsl r2
    2a84:	01040800 	tsteq	r4, r0, lsl #16
    2a88:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    2a8c:	0b0b0b3e 	bleq	2c578c <_bss_end+0x2b3a9c>
    2a90:	0b3a1349 	bleq	e877bc <_bss_end+0xe75acc>
    2a94:	0b390b3b 	bleq	e45788 <_bss_end+0xe33a98>
    2a98:	00001301 	andeq	r1, r0, r1, lsl #6
    2a9c:	03002809 	movweq	r2, #2057	; 0x809
    2aa0:	000b1c08 	andeq	r1, fp, r8, lsl #24
    2aa4:	00280a00 	eoreq	r0, r8, r0, lsl #20
    2aa8:	0b1c0e03 	bleq	7062bc <_bss_end+0x6f45cc>
    2aac:	130b0000 	movwne	r0, #45056	; 0xb000
    2ab0:	0b0e0301 	bleq	3836bc <_bss_end+0x3719cc>
    2ab4:	3b0b3a0b 	blcc	2d12e8 <_bss_end+0x2bf5f8>
    2ab8:	010b390b 	tsteq	fp, fp, lsl #18
    2abc:	0c000013 	stceq	0, cr0, [r0], {19}
    2ac0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2ac4:	0b3b0b3a 	bleq	ec57b4 <_bss_end+0xeb3ac4>
    2ac8:	13490b39 	movtne	r0, #39737	; 0x9b39
    2acc:	00000b38 	andeq	r0, r0, r8, lsr fp
    2ad0:	03000d0d 	movweq	r0, #3341	; 0xd0d
    2ad4:	3b0b3a0e 	blcc	2d1314 <_bss_end+0x2bf624>
    2ad8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2adc:	000b3813 	andeq	r3, fp, r3, lsl r8
    2ae0:	01010e00 	tsteq	r1, r0, lsl #28
    2ae4:	13011349 	movwne	r1, #4937	; 0x1349
    2ae8:	210f0000 	mrscs	r0, CPSR
    2aec:	2f134900 	svccs	0x00134900
    2af0:	1000000b 	andne	r0, r0, fp
    2af4:	0b0b000f 	bleq	2c2b38 <_bss_end+0x2b0e48>
    2af8:	00001349 	andeq	r1, r0, r9, asr #6
    2afc:	03010211 	movweq	r0, #4625	; 0x1211
    2b00:	3a0b0b0e 	bcc	2c5740 <_bss_end+0x2b3a50>
    2b04:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b08:	01131d0b 	tsteq	r3, fp, lsl #26
    2b0c:	12000013 	andne	r0, r0, #19
    2b10:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2b14:	0b381349 	bleq	e07840 <_bss_end+0xdf5b50>
    2b18:	0b321934 	bleq	c88ff0 <_bss_end+0xc77300>
    2b1c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    2b20:	03193f01 	tsteq	r9, #1, 30
    2b24:	3b0b3a0e 	blcc	2d1364 <_bss_end+0x2bf674>
    2b28:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2b2c:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    2b30:	32131d0b 	andscc	r1, r3, #704	; 0x2c0
    2b34:	8b193c0b 	blhi	651b68 <_bss_end+0x63fe78>
    2b38:	13640b01 	cmnne	r4, #1024	; 0x400
    2b3c:	00001301 	andeq	r1, r0, r1, lsl #6
    2b40:	49000514 	stmdbmi	r0, {r2, r4, r8, sl}
    2b44:	00193413 	andseq	r3, r9, r3, lsl r4
    2b48:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
    2b4c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2b50:	0b3b0b3a 	bleq	ec5840 <_bss_end+0xeb3b50>
    2b54:	0e6e0b39 	vmoveq.8	d14[5], r0
    2b58:	0b4c1349 	bleq	1307884 <_bss_end+0x12f5b94>
    2b5c:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    2b60:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2b64:	13011364 	movwne	r1, #4964	; 0x1364
    2b68:	05160000 	ldreq	r0, [r6, #-0]
    2b6c:	00134900 	andseq	r4, r3, r0, lsl #18
    2b70:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    2b74:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2b78:	0b3b0b3a 	bleq	ec5868 <_bss_end+0xeb3b78>
    2b7c:	0e6e0b39 	vmoveq.8	d14[5], r0
    2b80:	0b4c1349 	bleq	13078ac <_bss_end+0x12f5bbc>
    2b84:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    2b88:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2b8c:	00001364 	andeq	r1, r0, r4, ror #6
    2b90:	03010218 	movweq	r0, #4632	; 0x1218
    2b94:	3a0b0b0e 	bcc	2c57d4 <_bss_end+0x2b3ae4>
    2b98:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b9c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2ba0:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    2ba4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2ba8:	0b3b0b3a 	bleq	ec5898 <_bss_end+0xeb3ba8>
    2bac:	0e6e0b39 	vmoveq.8	d14[5], r0
    2bb0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2bb4:	00001364 	andeq	r1, r0, r4, ror #6
    2bb8:	03000d1a 	movweq	r0, #3354	; 0xd1a
    2bbc:	3b0b3a0e 	blcc	2d13fc <_bss_end+0x2bf70c>
    2bc0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2bc4:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2bc8:	1b000019 	blne	2c34 <CPSR_IRQ_INHIBIT+0x2bb4>
    2bcc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2bd0:	0b3a0e03 	bleq	e863e4 <_bss_end+0xe746f4>
    2bd4:	0b390b3b 	bleq	e458c8 <_bss_end+0xe33bd8>
    2bd8:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2bdc:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2be0:	13011364 	movwne	r1, #4964	; 0x1364
    2be4:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    2be8:	03193f01 	tsteq	r9, #1, 30
    2bec:	3b0b3a0e 	blcc	2d142c <_bss_end+0x2bf73c>
    2bf0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2bf4:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2bf8:	01136419 	tsteq	r3, r9, lsl r4
    2bfc:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    2c00:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2c04:	0b3a0e03 	bleq	e86418 <_bss_end+0xe74728>
    2c08:	0b390b3b 	bleq	e458fc <_bss_end+0xe33c0c>
    2c0c:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2c10:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2c14:	00001364 	andeq	r1, r0, r4, ror #6
    2c18:	0300021e 	movweq	r0, #542	; 0x21e
    2c1c:	00193c0e 	andseq	r3, r9, lr, lsl #24
    2c20:	00211f00 	eoreq	r1, r1, r0, lsl #30
    2c24:	34200000 	strtcc	r0, [r0], #-0
    2c28:	3a0e0300 	bcc	383830 <_bss_end+0x371b40>
    2c2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c30:	3f13490b 	svccc	0x0013490b
    2c34:	00193c19 	andseq	r3, r9, r9, lsl ip
    2c38:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    2c3c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2c40:	0b3b0b3a 	bleq	ec5930 <_bss_end+0xeb3c40>
    2c44:	0e6e0b39 	vmoveq.8	d14[5], r0
    2c48:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    2c4c:	00001301 	andeq	r1, r0, r1, lsl #6
    2c50:	3f012e22 	svccc	0x00012e22
    2c54:	3a0e0319 	bcc	3838c0 <_bss_end+0x371bd0>
    2c58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c5c:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    2c60:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    2c64:	23000013 	movwcs	r0, #19
    2c68:	0b0b0010 	bleq	2c2cb0 <_bss_end+0x2b0fc0>
    2c6c:	00001349 	andeq	r1, r0, r9, asr #6
    2c70:	03010424 	movweq	r0, #5156	; 0x1424
    2c74:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    2c78:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2c7c:	3b0b3a13 	blcc	2d14d0 <_bss_end+0x2bf7e0>
    2c80:	320b390b 	andcc	r3, fp, #180224	; 0x2c000
    2c84:	0013010b 	andseq	r0, r3, fp, lsl #2
    2c88:	000d2500 	andeq	r2, sp, r0, lsl #10
    2c8c:	0b3a0e03 	bleq	e864a0 <_bss_end+0xe747b0>
    2c90:	0b390b3b 	bleq	e45984 <_bss_end+0xe33c94>
    2c94:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2c98:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2c9c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    2ca0:	0d260000 	stceq	0, cr0, [r6, #-0]
    2ca4:	3a0e0300 	bcc	3838ac <_bss_end+0x371bbc>
    2ca8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2cac:	3f13490b 	svccc	0x0013490b
    2cb0:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    2cb4:	00196c19 	andseq	r6, r9, r9, lsl ip
    2cb8:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    2cbc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2cc0:	0b3b0b3a 	bleq	ec59b0 <_bss_end+0xeb3cc0>
    2cc4:	0e6e0b39 	vmoveq.8	d14[5], r0
    2cc8:	0b321349 	bleq	c879f4 <_bss_end+0xc75d04>
    2ccc:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    2cd0:	13011364 	movwne	r1, #4964	; 0x1364
    2cd4:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    2cd8:	03193f01 	tsteq	r9, #1, 30
    2cdc:	3b0b3a0e 	blcc	2d151c <_bss_end+0x2bf82c>
    2ce0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2ce4:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    2ce8:	01136419 	tsteq	r3, r9, lsl r4
    2cec:	29000013 	stmdbcs	r0, {r0, r1, r4}
    2cf0:	0803002f 	stmdaeq	r3, {r0, r1, r2, r3, r5}
    2cf4:	00001349 	andeq	r1, r0, r9, asr #6
    2cf8:	0b000f2a 	bleq	69a8 <CPSR_IRQ_INHIBIT+0x6928>
    2cfc:	2b00000b 	blcs	2d30 <CPSR_IRQ_INHIBIT+0x2cb0>
    2d00:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    2d04:	0b3b0b3a 	bleq	ec59f4 <_bss_end+0xeb3d04>
    2d08:	13010b39 	movwne	r0, #6969	; 0x1b39
    2d0c:	342c0000 	strtcc	r0, [ip], #-0
    2d10:	3a0e0300 	bcc	383918 <_bss_end+0x371c28>
    2d14:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d18:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    2d1c:	6c061c19 	stcvs	12, cr1, [r6], {25}
    2d20:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    2d24:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2d28:	0b3b0b3a 	bleq	ec5a18 <_bss_end+0xeb3d28>
    2d2c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2d30:	0b1c193c 	bleq	709228 <_bss_end+0x6f7538>
    2d34:	0000196c 	andeq	r1, r0, ip, ror #18
    2d38:	4700342e 	strmi	r3, [r0, -lr, lsr #8]
    2d3c:	2f000013 	svccs	0x00000013
    2d40:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2d44:	0b3b0b3a 	bleq	ec5a34 <_bss_end+0xeb3d44>
    2d48:	13490b39 	movtne	r0, #39737	; 0x9b39
    2d4c:	051c193c 	ldreq	r1, [ip, #-2364]	; 0xfffff6c4
    2d50:	0000196c 	andeq	r1, r0, ip, ror #18
    2d54:	03010230 	movweq	r0, #4656	; 0x1230
    2d58:	3a050b0e 	bcc	145998 <_bss_end+0x133ca8>
    2d5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d60:	0013010b 	andseq	r0, r3, fp, lsl #2
    2d64:	00213100 	eoreq	r3, r1, r0, lsl #2
    2d68:	052f1349 	streq	r1, [pc, #-841]!	; 2a27 <CPSR_IRQ_INHIBIT+0x29a7>
    2d6c:	34320000 	ldrtcc	r0, [r2], #-0
    2d70:	3a134700 	bcc	4d4978 <_bss_end+0x4c2c88>
    2d74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d78:	0018020b 	andseq	r0, r8, fp, lsl #4
    2d7c:	01153300 	tsteq	r5, r0, lsl #6
    2d80:	13011349 	movwne	r1, #4937	; 0x1349
    2d84:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
    2d88:	35000000 	strcc	r0, [r0, #-0]
    2d8c:	0b0b000f 	bleq	2c2dd0 <_bss_end+0x2b10e0>
    2d90:	13490e03 	movtne	r0, #40451	; 0x9e03
    2d94:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
    2d98:	340e0300 	strcc	r0, [lr], #-768	; 0xfffffd00
    2d9c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2da0:	96184006 	ldrls	r4, [r8], -r6
    2da4:	00001942 	andeq	r1, r0, r2, asr #18
    2da8:	03012e37 	movweq	r2, #7735	; 0x1e37
    2dac:	1119340e 	tstne	r9, lr, lsl #8
    2db0:	40061201 	andmi	r1, r6, r1, lsl #4
    2db4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2db8:	00001301 	andeq	r1, r0, r1, lsl #6
    2dbc:	03000538 	movweq	r0, #1336	; 0x538
    2dc0:	3b0b3a0e 	blcc	2d1600 <_bss_end+0x2bf910>
    2dc4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2dc8:	00180213 	andseq	r0, r8, r3, lsl r2
    2dcc:	012e3900 			; <UNDEFINED> instruction: 0x012e3900
    2dd0:	13641347 	cmnne	r4, #469762049	; 0x1c000001
    2dd4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2dd8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2ddc:	00130119 	andseq	r0, r3, r9, lsl r1
    2de0:	00053a00 	andeq	r3, r5, r0, lsl #20
    2de4:	13490e03 	movtne	r0, #40451	; 0x9e03
    2de8:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    2dec:	2e3b0000 	cdpcs	0, 3, cr0, cr11, cr0, {0}
    2df0:	3a134701 	bcc	4d49fc <_bss_end+0x4c2d0c>
    2df4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2df8:	1113640b 	tstne	r3, fp, lsl #8
    2dfc:	40061201 	andmi	r1, r6, r1, lsl #4
    2e00:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2e04:	00001301 	andeq	r1, r0, r1, lsl #6
    2e08:	0300053c 	movweq	r0, #1340	; 0x53c
    2e0c:	3b0b3a0e 	blcc	2d164c <_bss_end+0x2bf95c>
    2e10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e14:	00180213 	andseq	r0, r8, r3, lsl r2
    2e18:	00053d00 	andeq	r3, r5, r0, lsl #26
    2e1c:	0b3a0803 	bleq	e84e30 <_bss_end+0xe73140>
    2e20:	0b390b3b 	bleq	e45b14 <_bss_end+0xe33e24>
    2e24:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2e28:	0b3e0000 	bleq	f82e30 <_bss_end+0xf71140>
    2e2c:	00175501 	andseq	r5, r7, r1, lsl #10
    2e30:	00343f00 	eorseq	r3, r4, r0, lsl #30
    2e34:	0b3a0803 	bleq	e84e48 <_bss_end+0xe73158>
    2e38:	0b390b3b 	bleq	e45b2c <_bss_end+0xe33e3c>
    2e3c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2e40:	2e400000 	cdpcs	0, 4, cr0, cr0, cr0, {0}
    2e44:	3a134701 	bcc	4d4a50 <_bss_end+0x4c2d60>
    2e48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2e4c:	1113640b 	tstne	r3, fp, lsl #8
    2e50:	40061201 	andmi	r1, r6, r1, lsl #4
    2e54:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2e58:	00001301 	andeq	r1, r0, r1, lsl #6
    2e5c:	03003441 	movweq	r3, #1089	; 0x441
    2e60:	3b0b3a0e 	blcc	2d16a0 <_bss_end+0x2bf9b0>
    2e64:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e68:	00180213 	andseq	r0, r8, r3, lsl r2
    2e6c:	010b4200 	mrseq	r4, R11_fiq
    2e70:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2e74:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
    2e78:	3a134701 	bcc	4d4a84 <_bss_end+0x4c2d94>
    2e7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2e80:	2013640b 	andscs	r6, r3, fp, lsl #8
    2e84:	0013010b 	andseq	r0, r3, fp, lsl #2
    2e88:	00054400 	andeq	r4, r5, r0, lsl #8
    2e8c:	13490e03 	movtne	r0, #40451	; 0x9e03
    2e90:	00001934 	andeq	r1, r0, r4, lsr r9
    2e94:	31012e45 	tstcc	r1, r5, asr #28
    2e98:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    2e9c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2ea0:	97184006 	ldrls	r4, [r8, -r6]
    2ea4:	00001942 	andeq	r1, r0, r2, asr #18
    2ea8:	31000546 	tstcc	r0, r6, asr #10
    2eac:	00180213 	andseq	r0, r8, r3, lsl r2
    2eb0:	11010000 	mrsne	r0, (UNDEF: 1)
    2eb4:	11061000 	mrsne	r1, (UNDEF: 6)
    2eb8:	03011201 	movweq	r1, #4609	; 0x1201
    2ebc:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2ec0:	0005130e 	andeq	r1, r5, lr, lsl #6
    2ec4:	11010000 	mrsne	r0, (UNDEF: 1)
    2ec8:	55061000 	strpl	r1, [r6, #-0]
    2ecc:	1b0e0306 	blne	383aec <_bss_end+0x371dfc>
    2ed0:	130e250e 	movwne	r2, #58638	; 0xe50e
    2ed4:	00000005 	andeq	r0, r0, r5
    2ed8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2edc:	030b130e 	movweq	r1, #45838	; 0xb30e
    2ee0:	110e1b0e 	tstne	lr, lr, lsl #22
    2ee4:	10061201 	andne	r1, r6, r1, lsl #4
    2ee8:	02000017 	andeq	r0, r0, #23
    2eec:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2ef0:	0b3b0b3a 	bleq	ec5be0 <_bss_end+0xeb3ef0>
    2ef4:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ef8:	0f030000 	svceq	0x00030000
    2efc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2f00:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    2f04:	00000015 	andeq	r0, r0, r5, lsl r0
    2f08:	03003405 	movweq	r3, #1029	; 0x405
    2f0c:	3b0b3a0e 	blcc	2d174c <_bss_end+0x2bfa5c>
    2f10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2f14:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2f18:	06000019 			; <UNDEFINED> instruction: 0x06000019
    2f1c:	0b0b0024 	bleq	2c2fb4 <_bss_end+0x2b12c4>
    2f20:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2f24:	01070000 	mrseq	r0, (UNDEF: 7)
    2f28:	01134901 	tsteq	r3, r1, lsl #18
    2f2c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2f30:	13490021 	movtne	r0, #36897	; 0x9021
    2f34:	0000062f 	andeq	r0, r0, pc, lsr #12
    2f38:	0b002409 	bleq	bf64 <_ZN11CFilesystem10InitializeEv+0x2d4>
    2f3c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2f40:	0a00000e 	beq	2f80 <CPSR_IRQ_INHIBIT+0x2f00>
    2f44:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2f48:	0b3a0e03 	bleq	e8675c <_bss_end+0xe74a6c>
    2f4c:	0b390b3b 	bleq	e45c40 <_bss_end+0xe33f50>
    2f50:	01111349 	tsteq	r1, r9, asr #6
    2f54:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2f58:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2f5c:	0b000013 	bleq	2fb0 <CPSR_IRQ_INHIBIT+0x2f30>
    2f60:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2f64:	0b3b0b3a 	bleq	ec5c54 <_bss_end+0xeb3f64>
    2f68:	13490b39 	movtne	r0, #39737	; 0x9b39
    2f6c:	00001802 	andeq	r1, r0, r2, lsl #16
    2f70:	3f012e0c 	svccc	0x00012e0c
    2f74:	3a0e0319 	bcc	383be0 <_bss_end+0x371ef0>
    2f78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f7c:	1113490b 	tstne	r3, fp, lsl #18
    2f80:	40061201 	andmi	r1, r6, r1, lsl #4
    2f84:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2f88:	00001301 	andeq	r1, r0, r1, lsl #6
    2f8c:	0300340d 	movweq	r3, #1037	; 0x40d
    2f90:	3b0b3a08 	blcc	2d17b8 <_bss_end+0x2bfac8>
    2f94:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2f98:	00180213 	andseq	r0, r8, r3, lsl r2
    2f9c:	11010000 	mrsne	r0, (UNDEF: 1)
    2fa0:	130e2501 	movwne	r2, #58625	; 0xe501
    2fa4:	1b0e030b 	blne	383bd8 <_bss_end+0x371ee8>
    2fa8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2fac:	00171006 	andseq	r1, r7, r6
    2fb0:	00240200 	eoreq	r0, r4, r0, lsl #4
    2fb4:	0b3e0b0b 	bleq	f85be8 <_bss_end+0xf73ef8>
    2fb8:	00000e03 	andeq	r0, r0, r3, lsl #28
    2fbc:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    2fc0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    2fc4:	0b0b0024 	bleq	2c305c <_bss_end+0x2b136c>
    2fc8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2fcc:	35050000 	strcc	r0, [r5, #-0]
    2fd0:	00134900 	andseq	r4, r3, r0, lsl #18
    2fd4:	00160600 	andseq	r0, r6, r0, lsl #12
    2fd8:	0b3a0e03 	bleq	e867ec <_bss_end+0xe74afc>
    2fdc:	0b390b3b 	bleq	e45cd0 <_bss_end+0xe33fe0>
    2fe0:	00001349 	andeq	r1, r0, r9, asr #6
    2fe4:	03010207 	movweq	r0, #4615	; 0x1207
    2fe8:	3a0b0b0e 	bcc	2c5c28 <_bss_end+0x2b3f38>
    2fec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ff0:	0013010b 	andseq	r0, r3, fp, lsl #2
    2ff4:	000d0800 	andeq	r0, sp, r0, lsl #16
    2ff8:	0b3a0e03 	bleq	e8680c <_bss_end+0xe74b1c>
    2ffc:	0b390b3b 	bleq	e45cf0 <_bss_end+0xe34000>
    3000:	0b381349 	bleq	e07d2c <_bss_end+0xdf603c>
    3004:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    3008:	03193f01 	tsteq	r9, #1, 30
    300c:	3b0b3a0e 	blcc	2d184c <_bss_end+0x2bfb5c>
    3010:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3014:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    3018:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    301c:	00130113 	andseq	r0, r3, r3, lsl r1
    3020:	00050a00 	andeq	r0, r5, r0, lsl #20
    3024:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    3028:	050b0000 	streq	r0, [fp, #-0]
    302c:	00134900 	andseq	r4, r3, r0, lsl #18
    3030:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    3034:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3038:	0b3b0b3a 	bleq	ec5d28 <_bss_end+0xeb4038>
    303c:	0e6e0b39 	vmoveq.8	d14[5], r0
    3040:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    3044:	13011364 	movwne	r1, #4964	; 0x1364
    3048:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    304c:	03193f01 	tsteq	r9, #1, 30
    3050:	3b0b3a0e 	blcc	2d1890 <_bss_end+0x2bfba0>
    3054:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3058:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    305c:	00136419 	andseq	r6, r3, r9, lsl r4
    3060:	000f0e00 	andeq	r0, pc, r0, lsl #28
    3064:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    3068:	0f0f0000 	svceq	0x000f0000
    306c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    3070:	00341000 	eorseq	r1, r4, r0
    3074:	0b3a0e03 	bleq	e86888 <_bss_end+0xe74b98>
    3078:	0b390b3b 	bleq	e45d6c <_bss_end+0xe3407c>
    307c:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    3080:	00001802 	andeq	r1, r0, r2, lsl #16
    3084:	03010411 	movweq	r0, #5137	; 0x1411
    3088:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    308c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    3090:	3b0b3a13 	blcc	2d18e4 <_bss_end+0x2bfbf4>
    3094:	010b390b 	tsteq	fp, fp, lsl #18
    3098:	12000013 	andne	r0, r0, #19
    309c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    30a0:	00000b1c 	andeq	r0, r0, ip, lsl fp
    30a4:	49010113 	stmdbmi	r1, {r0, r1, r4, r8}
    30a8:	00130113 	andseq	r0, r3, r3, lsl r1
    30ac:	00211400 	eoreq	r1, r1, r0, lsl #8
    30b0:	0b2f1349 	bleq	bc7ddc <_bss_end+0xbb60ec>
    30b4:	34150000 	ldrcc	r0, [r5], #-0
    30b8:	3a0e0300 	bcc	383cc0 <_bss_end+0x371fd0>
    30bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    30c0:	3f13490b 	svccc	0x0013490b
    30c4:	00180219 	andseq	r0, r8, r9, lsl r2
    30c8:	01041600 	tsteq	r4, r0, lsl #12
    30cc:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    30d0:	0b0b0b3e 	bleq	2c5dd0 <_bss_end+0x2b40e0>
    30d4:	0b3a1349 	bleq	e87e00 <_bss_end+0xe76110>
    30d8:	0b390b3b 	bleq	e45dcc <_bss_end+0xe340dc>
    30dc:	13010b32 	movwne	r0, #6962	; 0x1b32
    30e0:	28170000 	ldmdacs	r7, {}	; <UNPREDICTABLE>
    30e4:	1c080300 	stcne	3, cr0, [r8], {-0}
    30e8:	1800000b 	stmdane	r0, {r0, r1, r3}
    30ec:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    30f0:	0b3a0b0b 	bleq	e85d24 <_bss_end+0xe74034>
    30f4:	0b390b3b 	bleq	e45de8 <_bss_end+0xe340f8>
    30f8:	00001301 	andeq	r1, r0, r1, lsl #6
    30fc:	03000d19 	movweq	r0, #3353	; 0xd19
    3100:	3b0b3a08 	blcc	2d1928 <_bss_end+0x2bfc38>
    3104:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3108:	000b3813 	andeq	r3, fp, r3, lsl r8
    310c:	000d1a00 	andeq	r1, sp, r0, lsl #20
    3110:	0b3a0e03 	bleq	e86924 <_bss_end+0xe74c34>
    3114:	0b390b3b 	bleq	e45e08 <_bss_end+0xe34118>
    3118:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    311c:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    3120:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    3124:	0d1b0000 	ldceq	0, cr0, [fp, #-0]
    3128:	3a0e0300 	bcc	383d30 <_bss_end+0x372040>
    312c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3130:	3f13490b 	svccc	0x0013490b
    3134:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    3138:	00196c19 	andseq	r6, r9, r9, lsl ip
    313c:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    3140:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3144:	0b3b0b3a 	bleq	ec5e34 <_bss_end+0xeb4144>
    3148:	0e6e0b39 	vmoveq.8	d14[5], r0
    314c:	0b321349 	bleq	c87e78 <_bss_end+0xc76188>
    3150:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    3154:	13011364 	movwne	r1, #4964	; 0x1364
    3158:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    315c:	03193f01 	tsteq	r9, #1, 30
    3160:	3b0b3a0e 	blcc	2d19a0 <_bss_end+0x2bfcb0>
    3164:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3168:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    316c:	00130113 	andseq	r0, r3, r3, lsl r1
    3170:	00101e00 	andseq	r1, r0, r0, lsl #28
    3174:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    3178:	341f0000 	ldrcc	r0, [pc], #-0	; 3180 <CPSR_IRQ_INHIBIT+0x3100>
    317c:	3a0e0300 	bcc	383d84 <_bss_end+0x372094>
    3180:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3184:	3f13490b 	svccc	0x0013490b
    3188:	00193c19 	andseq	r3, r9, r9, lsl ip
    318c:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
    3190:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3194:	0b3b0b3a 	bleq	ec5e84 <_bss_end+0xeb4194>
    3198:	0e6e0b39 	vmoveq.8	d14[5], r0
    319c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    31a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    31a4:	00130119 	andseq	r0, r3, r9, lsl r1
    31a8:	00342100 	eorseq	r2, r4, r0, lsl #2
    31ac:	0b3a0e03 	bleq	e869c0 <_bss_end+0xe74cd0>
    31b0:	0b390b3b 	bleq	e45ea4 <_bss_end+0xe341b4>
    31b4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    31b8:	34220000 	strtcc	r0, [r2], #-0
    31bc:	3a080300 	bcc	203dc4 <_bss_end+0x1f20d4>
    31c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    31c8:	23000018 	movwcs	r0, #24
    31cc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    31d0:	0b3a0e03 	bleq	e869e4 <_bss_end+0xe74cf4>
    31d4:	0b390b3b 	bleq	e45ec8 <_bss_end+0xe341d8>
    31d8:	01110e6e 	tsteq	r1, lr, ror #28
    31dc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    31e0:	00194296 	mulseq	r9, r6, r2
    31e4:	11010000 	mrsne	r0, (UNDEF: 1)
    31e8:	130e2501 	movwne	r2, #58625	; 0xe501
    31ec:	1b0e030b 	blne	383e20 <_bss_end+0x372130>
    31f0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    31f4:	00171006 	andseq	r1, r7, r6
    31f8:	00240200 	eoreq	r0, r4, r0, lsl #4
    31fc:	0b3e0b0b 	bleq	f85e30 <_bss_end+0xf74140>
    3200:	00000e03 	andeq	r0, r0, r3, lsl #28
    3204:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    3208:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    320c:	0b0b0024 	bleq	2c32a4 <_bss_end+0x2b15b4>
    3210:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    3214:	16050000 	strne	r0, [r5], -r0
    3218:	3a0e0300 	bcc	383e20 <_bss_end+0x372130>
    321c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3220:	0013490b 	andseq	r4, r3, fp, lsl #18
    3224:	01040600 	tsteq	r4, r0, lsl #12
    3228:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    322c:	0b0b0b3e 	bleq	2c5f2c <_bss_end+0x2b423c>
    3230:	0b3a1349 	bleq	e87f5c <_bss_end+0xe7626c>
    3234:	0b390b3b 	bleq	e45f28 <_bss_end+0xe34238>
    3238:	00001301 	andeq	r1, r0, r1, lsl #6
    323c:	03002807 	movweq	r2, #2055	; 0x807
    3240:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3244:	00340800 	eorseq	r0, r4, r0, lsl #16
    3248:	0b3a0e03 	bleq	e86a5c <_bss_end+0xe74d6c>
    324c:	0b390b3b 	bleq	e45f40 <_bss_end+0xe34250>
    3250:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    3254:	00001802 	andeq	r1, r0, r2, lsl #16
    3258:	0b000f09 	bleq	6e84 <CPSR_IRQ_INHIBIT+0x6e04>
    325c:	0013490b 	andseq	r4, r3, fp, lsl #18
    3260:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
    3264:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3268:	0b3b0b3a 	bleq	ec5f58 <_bss_end+0xeb4268>
    326c:	0e6e0b39 	vmoveq.8	d14[5], r0
    3270:	01111349 	tsteq	r1, r9, asr #6
    3274:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3278:	01194297 			; <UNDEFINED> instruction: 0x01194297
    327c:	0b000013 	bleq	32d0 <CPSR_IRQ_INHIBIT+0x3250>
    3280:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    3284:	0b3b0b3a 	bleq	ec5f74 <_bss_end+0xeb4284>
    3288:	13490b39 	movtne	r0, #39737	; 0x9b39
    328c:	00001802 	andeq	r1, r0, r2, lsl #16
    3290:	0300340c 	movweq	r3, #1036	; 0x40c
    3294:	3b0b3a0e 	blcc	2d1ad4 <_bss_end+0x2bfde4>
    3298:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    329c:	00180213 	andseq	r0, r8, r3, lsl r2
    32a0:	000f0d00 	andeq	r0, pc, r0, lsl #26
    32a4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    32a8:	3f012e0e 	svccc	0x00012e0e
    32ac:	3a0e0319 	bcc	383f18 <_bss_end+0x372228>
    32b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32b4:	110e6e0b 	tstne	lr, fp, lsl #28
    32b8:	40061201 	andmi	r1, r6, r1, lsl #4
    32bc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    32c0:	00001301 	andeq	r1, r0, r1, lsl #6
    32c4:	3f012e0f 	svccc	0x00012e0f
    32c8:	3a0e0319 	bcc	383f34 <_bss_end+0x372244>
    32cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32d0:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    32d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    32d8:	97184006 	ldrls	r4, [r8, -r6]
    32dc:	00001942 	andeq	r1, r0, r2, asr #18
    32e0:	03003410 	movweq	r3, #1040	; 0x410
    32e4:	3b0b3a08 	blcc	2d1b0c <_bss_end+0x2bfe1c>
    32e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    32ec:	00180213 	andseq	r0, r8, r3, lsl r2
    32f0:	11010000 	mrsne	r0, (UNDEF: 1)
    32f4:	130e2501 	movwne	r2, #58625	; 0xe501
    32f8:	1b0e030b 	blne	383f2c <_bss_end+0x37223c>
    32fc:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    3300:	00171006 	andseq	r1, r7, r6
    3304:	01390200 	teqeq	r9, r0, lsl #4
    3308:	00001301 	andeq	r1, r0, r1, lsl #6
    330c:	03003403 	movweq	r3, #1027	; 0x403
    3310:	3b0b3a0e 	blcc	2d1b50 <_bss_end+0x2bfe60>
    3314:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3318:	1c193c13 	ldcne	12, cr3, [r9], {19}
    331c:	0400000a 	streq	r0, [r0], #-10
    3320:	0b3a003a 	bleq	e83410 <_bss_end+0xe71720>
    3324:	0b390b3b 	bleq	e46018 <_bss_end+0xe34328>
    3328:	00001318 	andeq	r1, r0, r8, lsl r3
    332c:	49010105 	stmdbmi	r1, {r0, r2, r8}
    3330:	00130113 	andseq	r0, r3, r3, lsl r1
    3334:	00210600 	eoreq	r0, r1, r0, lsl #12
    3338:	0b2f1349 	bleq	bc8064 <_bss_end+0xbb6374>
    333c:	26070000 	strcs	r0, [r7], -r0
    3340:	00134900 	andseq	r4, r3, r0, lsl #18
    3344:	00240800 	eoreq	r0, r4, r0, lsl #16
    3348:	0b3e0b0b 	bleq	f85f7c <_bss_end+0xf7428c>
    334c:	00000e03 	andeq	r0, r0, r3, lsl #28
    3350:	47003409 	strmi	r3, [r0, -r9, lsl #8]
    3354:	0a000013 	beq	33a8 <CPSR_IRQ_INHIBIT+0x3328>
    3358:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    335c:	0b3a0e03 	bleq	e86b70 <_bss_end+0xe74e80>
    3360:	0b390b3b 	bleq	e46054 <_bss_end+0xe34364>
    3364:	01110e6e 	tsteq	r1, lr, ror #28
    3368:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    336c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3370:	0b000013 	bleq	33c4 <CPSR_IRQ_INHIBIT+0x3344>
    3374:	08030005 	stmdaeq	r3, {r0, r2}
    3378:	0b3b0b3a 	bleq	ec6068 <_bss_end+0xeb4378>
    337c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3380:	00001802 	andeq	r1, r0, r2, lsl #16
    3384:	0300340c 	movweq	r3, #1036	; 0x40c
    3388:	3b0b3a0e 	blcc	2d1bc8 <_bss_end+0x2bfed8>
    338c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3390:	00180213 	andseq	r0, r8, r3, lsl r2
    3394:	010b0d00 	tsteq	fp, r0, lsl #26
    3398:	06120111 			; <UNDEFINED> instruction: 0x06120111
    339c:	340e0000 	strcc	r0, [lr], #-0
    33a0:	3a080300 	bcc	203fa8 <_bss_end+0x1f22b8>
    33a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    33a8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    33ac:	0f000018 	svceq	0x00000018
    33b0:	0b0b000f 	bleq	2c33f4 <_bss_end+0x2b1704>
    33b4:	00001349 	andeq	r1, r0, r9, asr #6
    33b8:	00002610 	andeq	r2, r0, r0, lsl r6
    33bc:	000f1100 	andeq	r1, pc, r0, lsl #2
    33c0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    33c4:	0b002412 	bleq	c414 <_ZN5IFileC1Ev+0x24>
    33c8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    33cc:	13000008 	movwne	r0, #8
    33d0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    33d4:	0b3b0b3a 	bleq	ec60c4 <_bss_end+0xeb43d4>
    33d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    33dc:	00001802 	andeq	r1, r0, r2, lsl #16
    33e0:	3f012e14 	svccc	0x00012e14
    33e4:	3a0e0319 	bcc	384050 <_bss_end+0x372360>
    33e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    33ec:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    33f0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    33f4:	97184006 	ldrls	r4, [r8, -r6]
    33f8:	13011942 	movwne	r1, #6466	; 0x1942
    33fc:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    3400:	03193f01 	tsteq	r9, #1, 30
    3404:	3b0b3a0e 	blcc	2d1c44 <_bss_end+0x2bff54>
    3408:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    340c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    3410:	96184006 	ldrls	r4, [r8], -r6
    3414:	00001942 	andeq	r1, r0, r2, asr #18
    3418:	01110100 	tsteq	r1, r0, lsl #2
    341c:	0b130e25 	bleq	4c6cb8 <_bss_end+0x4b4fc8>
    3420:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    3424:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3428:	00001710 	andeq	r1, r0, r0, lsl r7
    342c:	0b002402 	bleq	c43c <_ZN5IFileD1Ev+0x18>
    3430:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    3434:	0300000e 	movweq	r0, #14
    3438:	13490026 	movtne	r0, #36902	; 0x9026
    343c:	24040000 	strcs	r0, [r4], #-0
    3440:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    3444:	0008030b 	andeq	r0, r8, fp, lsl #6
    3448:	00160500 	andseq	r0, r6, r0, lsl #10
    344c:	0b3a0e03 	bleq	e86c60 <_bss_end+0xe74f70>
    3450:	0b390b3b 	bleq	e46144 <_bss_end+0xe34454>
    3454:	00001349 	andeq	r1, r0, r9, asr #6
    3458:	03010206 	movweq	r0, #4614	; 0x1206
    345c:	3a0b0b0e 	bcc	2c609c <_bss_end+0x2b43ac>
    3460:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3464:	0013010b 	andseq	r0, r3, fp, lsl #2
    3468:	000d0700 	andeq	r0, sp, r0, lsl #14
    346c:	0b3a0e03 	bleq	e86c80 <_bss_end+0xe74f90>
    3470:	0b390b3b 	bleq	e46164 <_bss_end+0xe34474>
    3474:	0b381349 	bleq	e081a0 <_bss_end+0xdf64b0>
    3478:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
    347c:	03193f01 	tsteq	r9, #1, 30
    3480:	3b0b3a0e 	blcc	2d1cc0 <_bss_end+0x2bffd0>
    3484:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3488:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    348c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    3490:	00130113 	andseq	r0, r3, r3, lsl r1
    3494:	00050900 	andeq	r0, r5, r0, lsl #18
    3498:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    349c:	050a0000 	streq	r0, [sl, #-0]
    34a0:	00134900 	andseq	r4, r3, r0, lsl #18
    34a4:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
    34a8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    34ac:	0b3b0b3a 	bleq	ec619c <_bss_end+0xeb44ac>
    34b0:	0e6e0b39 	vmoveq.8	d14[5], r0
    34b4:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    34b8:	13011364 	movwne	r1, #4964	; 0x1364
    34bc:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    34c0:	03193f01 	tsteq	r9, #1, 30
    34c4:	3b0b3a0e 	blcc	2d1d04 <_bss_end+0x2c0014>
    34c8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    34cc:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    34d0:	00136419 	andseq	r6, r3, r9, lsl r4
    34d4:	000f0d00 	andeq	r0, pc, r0, lsl #26
    34d8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    34dc:	0f0e0000 	svceq	0x000e0000
    34e0:	000b0b00 	andeq	r0, fp, r0, lsl #22
    34e4:	00340f00 	eorseq	r0, r4, r0, lsl #30
    34e8:	0b3a0e03 	bleq	e86cfc <_bss_end+0xe7500c>
    34ec:	0b390b3b 	bleq	e461e0 <_bss_end+0xe344f0>
    34f0:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    34f4:	00001802 	andeq	r1, r0, r2, lsl #16
    34f8:	03010410 	movweq	r0, #5136	; 0x1410
    34fc:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    3500:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    3504:	3b0b3a13 	blcc	2d1d58 <_bss_end+0x2c0068>
    3508:	010b390b 	tsteq	fp, fp, lsl #18
    350c:	11000013 	tstne	r0, r3, lsl r0
    3510:	08030028 	stmdaeq	r3, {r3, r5}
    3514:	00000b1c 	andeq	r0, r0, ip, lsl fp
    3518:	03002812 	movweq	r2, #2066	; 0x812
    351c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3520:	01131300 	tsteq	r3, r0, lsl #6
    3524:	0b0b0e03 	bleq	2c6d38 <_bss_end+0x2b5048>
    3528:	0b3b0b3a 	bleq	ec6218 <_bss_end+0xeb4528>
    352c:	13010b39 	movwne	r0, #6969	; 0x1b39
    3530:	0d140000 	ldceq	0, cr0, [r4, #-0]
    3534:	3a080300 	bcc	20413c <_bss_end+0x1f244c>
    3538:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    353c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    3540:	1500000b 	strne	r0, [r0, #-11]
    3544:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    3548:	0b3b0b3a 	bleq	ec6238 <_bss_end+0xeb4548>
    354c:	13010b39 	movwne	r0, #6969	; 0x1b39
    3550:	34160000 	ldrcc	r0, [r6], #-0
    3554:	3a0e0300 	bcc	38415c <_bss_end+0x37246c>
    3558:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    355c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    3560:	6c061c19 	stcvs	12, cr1, [r6], {25}
    3564:	17000019 	smladne	r0, r9, r0, r0
    3568:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    356c:	0b3b0b3a 	bleq	ec625c <_bss_end+0xeb456c>
    3570:	13490b39 	movtne	r0, #39737	; 0x9b39
    3574:	0b1c193c 	bleq	709a6c <_bss_end+0x6f7d7c>
    3578:	0000196c 	andeq	r1, r0, ip, ror #18
    357c:	47003418 	smladmi	r0, r8, r4, r3
    3580:	19000013 	stmdbne	r0, {r0, r1, r4}
    3584:	0e030139 	mcreq	1, 0, r0, cr3, cr9, {1}
    3588:	0b3b0b3a 	bleq	ec6278 <_bss_end+0xeb4588>
    358c:	13010b39 	movwne	r0, #6969	; 0x1b39
    3590:	341a0000 	ldrcc	r0, [sl], #-0
    3594:	3a0e0300 	bcc	38419c <_bss_end+0x3724ac>
    3598:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    359c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    35a0:	00031c19 	andeq	r1, r3, r9, lsl ip
    35a4:	01011b00 	tsteq	r1, r0, lsl #22
    35a8:	13011349 	movwne	r1, #4937	; 0x1349
    35ac:	211c0000 	tstcs	ip, r0
    35b0:	2f134900 	svccs	0x00134900
    35b4:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    35b8:	1347012e 	movtne	r0, #28974	; 0x712e
    35bc:	0b3b0b3a 	bleq	ec62ac <_bss_end+0xeb45bc>
    35c0:	13640b39 	cmnne	r4, #58368	; 0xe400
    35c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    35c8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    35cc:	00130119 	andseq	r0, r3, r9, lsl r1
    35d0:	00051e00 	andeq	r1, r5, r0, lsl #28
    35d4:	13490e03 	movtne	r0, #40451	; 0x9e03
    35d8:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    35dc:	051f0000 	ldreq	r0, [pc, #-0]	; 35e4 <CPSR_IRQ_INHIBIT+0x3564>
    35e0:	3a080300 	bcc	2041e8 <_bss_end+0x1f24f8>
    35e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    35e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    35ec:	20000018 	andcs	r0, r0, r8, lsl r0
    35f0:	08030034 	stmdaeq	r3, {r2, r4, r5}
    35f4:	0b3b0b3a 	bleq	ec62e4 <_bss_end+0xeb45f4>
    35f8:	13490b39 	movtne	r0, #39737	; 0x9b39
    35fc:	00001802 	andeq	r1, r0, r2, lsl #16
    3600:	49002121 	stmdbmi	r0, {r0, r5, r8, sp}
    3604:	000b2f13 	andeq	r2, fp, r3, lsl pc
    3608:	00052200 	andeq	r2, r5, r0, lsl #4
    360c:	0b3a0e03 	bleq	e86e20 <_bss_end+0xe75130>
    3610:	0b390b3b 	bleq	e46304 <_bss_end+0xe34614>
    3614:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3618:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    361c:	3a134701 	bcc	4d5228 <_bss_end+0x4c3538>
    3620:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3624:	1113640b 	tstne	r3, fp, lsl #8
    3628:	40061201 	andmi	r1, r6, r1, lsl #4
    362c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    3630:	00001301 	andeq	r1, r0, r1, lsl #6
    3634:	47012e24 	strmi	r2, [r1, -r4, lsr #28]
    3638:	390b3a13 	stmdbcc	fp, {r0, r1, r4, r9, fp, ip, sp}
    363c:	6413490b 	ldrvs	r4, [r3], #-2315	; 0xfffff6f5
    3640:	010b2013 	tsteq	fp, r3, lsl r0
    3644:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    3648:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    364c:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    3650:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    3654:	6e133101 	mufvss	f3, f3, f1
    3658:	1113640e 	tstne	r3, lr, lsl #8
    365c:	40061201 	andmi	r1, r6, r1, lsl #4
    3660:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3664:	00001301 	andeq	r1, r0, r1, lsl #6
    3668:	31000527 	tstcc	r0, r7, lsr #10
    366c:	00180213 	andseq	r0, r8, r3, lsl r2
    3670:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
    3674:	0b3a1347 	bleq	e88398 <_bss_end+0xe766a8>
    3678:	0b390b3b 	bleq	e4636c <_bss_end+0xe3467c>
    367c:	0b201364 	bleq	808414 <_bss_end+0x7f6724>
    3680:	00001301 	andeq	r1, r0, r1, lsl #6
    3684:	03000529 	movweq	r0, #1321	; 0x529
    3688:	3b0b3a0e 	blcc	2d1ec8 <_bss_end+0x2c01d8>
    368c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3690:	2a000013 	bcs	36e4 <CPSR_IRQ_INHIBIT+0x3664>
    3694:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    3698:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    369c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    36a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    36a4:	00000019 	andeq	r0, r0, r9, lsl r0
    36a8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    36ac:	030b130e 	movweq	r1, #45838	; 0xb30e
    36b0:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    36b4:	10011117 	andne	r1, r1, r7, lsl r1
    36b8:	02000017 	andeq	r0, r0, #23
    36bc:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    36c0:	0b3b0b3a 	bleq	ec63b0 <_bss_end+0xeb46c0>
    36c4:	00001301 	andeq	r1, r0, r1, lsl #6
    36c8:	03003903 	movweq	r3, #2307	; 0x903
    36cc:	3b0b3a0e 	blcc	2d1f0c <_bss_end+0x2c021c>
    36d0:	890b3905 	stmdbhi	fp, {r0, r2, r8, fp, ip, sp}
    36d4:	00001901 	andeq	r1, r0, r1, lsl #18
    36d8:	3a003a04 	bcc	11ef0 <_bss_end+0x200>
    36dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    36e0:	0013180b 	andseq	r1, r3, fp, lsl #16
    36e4:	01390500 	teqeq	r9, r0, lsl #10
    36e8:	0b3a0e03 	bleq	e86efc <_bss_end+0xe7520c>
    36ec:	0b390b3b 	bleq	e463e0 <_bss_end+0xe346f0>
    36f0:	00001301 	andeq	r1, r0, r1, lsl #6
    36f4:	03010206 	movweq	r0, #4614	; 0x1206
    36f8:	3a0b0b0e 	bcc	2c6338 <_bss_end+0x2b4648>
    36fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3700:	0013010b 	andseq	r0, r3, fp, lsl #2
    3704:	000d0700 	andeq	r0, sp, r0, lsl #14
    3708:	0b3a0e03 	bleq	e86f1c <_bss_end+0xe7522c>
    370c:	0b390b3b 	bleq	e46400 <_bss_end+0xe34710>
    3710:	0b381349 	bleq	e0843c <_bss_end+0xdf674c>
    3714:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
    3718:	03193f01 	tsteq	r9, #1, 30
    371c:	3b0b3a0e 	blcc	2d1f5c <_bss_end+0x2c026c>
    3720:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3724:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    3728:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
    372c:	00130113 	andseq	r0, r3, r3, lsl r1
    3730:	00050900 	andeq	r0, r5, r0, lsl #18
    3734:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    3738:	050a0000 	streq	r0, [sl, #-0]
    373c:	00134900 	andseq	r4, r3, r0, lsl #18
    3740:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
    3744:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3748:	0b3b0b3a 	bleq	ec6438 <_bss_end+0xeb4748>
    374c:	0e6e0b39 	vmoveq.8	d14[5], r0
    3750:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    3754:	00001301 	andeq	r1, r0, r1, lsl #6
    3758:	3f012e0c 	svccc	0x00012e0c
    375c:	3a0e0319 	bcc	3843c8 <_bss_end+0x3726d8>
    3760:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3764:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    3768:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
    376c:	00130113 	andseq	r0, r3, r3, lsl r1
    3770:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    3774:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3778:	0b3b0b3a 	bleq	ec6468 <_bss_end+0xeb4778>
    377c:	0e6e0b39 	vmoveq.8	d14[5], r0
    3780:	0b321349 	bleq	c884ac <_bss_end+0xc767bc>
    3784:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    3788:	00001301 	andeq	r1, r0, r1, lsl #6
    378c:	3f012e0e 	svccc	0x00012e0e
    3790:	3a0e0319 	bcc	3843fc <_bss_end+0x37270c>
    3794:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3798:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    379c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    37a0:	00130113 	andseq	r0, r3, r3, lsl r1
    37a4:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    37a8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    37ac:	0b3b0b3a 	bleq	ec649c <_bss_end+0xeb47ac>
    37b0:	0e6e0b39 	vmoveq.8	d14[5], r0
    37b4:	0b321349 	bleq	c884e0 <_bss_end+0xc767f0>
    37b8:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    37bc:	13011364 	movwne	r1, #4964	; 0x1364
    37c0:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    37c4:	03193f01 	tsteq	r9, #1, 30
    37c8:	3b0b3a0e 	blcc	2d2008 <_bss_end+0x2c0318>
    37cc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    37d0:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    37d4:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    37d8:	11000013 	tstne	r0, r3, lsl r0
    37dc:	13490026 	movtne	r0, #36902	; 0x9026
    37e0:	08120000 	ldmdaeq	r2, {}	; <UNPREDICTABLE>
    37e4:	3b0b3a00 	blcc	2d1fec <_bss_end+0x2c02fc>
    37e8:	180b390b 	stmdane	fp, {r0, r1, r3, r8, fp, ip, sp}
    37ec:	13000013 	movwne	r0, #19
    37f0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    37f4:	0b3a0e03 	bleq	e87008 <_bss_end+0xe75318>
    37f8:	0b390b3b 	bleq	e464ec <_bss_end+0xe347fc>
    37fc:	01870e6e 	orreq	r0, r7, lr, ror #28
    3800:	01193c19 	tsteq	r9, r9, lsl ip
    3804:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    3808:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    380c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3810:	13490b39 	movtne	r0, #39737	; 0x9b39
    3814:	02150000 	andseq	r0, r5, #0
    3818:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    381c:	16000019 			; <UNDEFINED> instruction: 0x16000019
    3820:	0e030039 	mcreq	0, 0, r0, cr3, cr9, {1}
    3824:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3828:	00000b39 	andeq	r0, r0, r9, lsr fp
    382c:	03013917 	movweq	r3, #6423	; 0x1917
    3830:	3b0b3a0e 	blcc	2d2070 <_bss_end+0x2c0380>
    3834:	010b3905 	tsteq	fp, r5, lsl #18
    3838:	18000013 	stmdane	r0, {r0, r1, r4}
    383c:	0b0b0024 	bleq	2c38d4 <_bss_end+0x2b1be4>
    3840:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    3844:	24190000 	ldrcs	r0, [r9], #-0
    3848:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    384c:	000e030b 	andeq	r0, lr, fp, lsl #6
    3850:	003b1a00 	eorseq	r1, fp, r0, lsl #20
    3854:	00000e03 	andeq	r0, r0, r3, lsl #28
    3858:	0b000f1b 	bleq	74cc <CPSR_IRQ_INHIBIT+0x744c>
    385c:	1c00000b 	stcne	0, cr0, [r0], {11}
    3860:	0b0b000f 	bleq	2c38a4 <_bss_end+0x2b1bb4>
    3864:	00001349 	andeq	r1, r0, r9, asr #6
    3868:	0b00101d 	bleq	78e4 <CPSR_IRQ_INHIBIT+0x7864>
    386c:	0013490b 	andseq	r4, r3, fp, lsl #18
    3870:	00421e00 	subeq	r1, r2, r0, lsl #28
    3874:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    3878:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    387c:	03193f01 	tsteq	r9, #1, 30
    3880:	3b0b3a0e 	blcc	2d20c0 <_bss_end+0x2c03d0>
    3884:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3888:	1113490e 	tstne	r3, lr, lsl #18
    388c:	40061201 	andmi	r1, r6, r1, lsl #4
    3890:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    3894:	00001301 	andeq	r1, r0, r1, lsl #6
    3898:	03000520 	movweq	r0, #1312	; 0x520
    389c:	3b0b3a08 	blcc	2d20c4 <_bss_end+0x2c03d4>
    38a0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    38a4:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    38a8:	00001742 	andeq	r1, r0, r2, asr #14
    38ac:	01828921 	orreq	r8, r2, r1, lsr #18
    38b0:	95011101 	strls	r1, [r1, #-257]	; 0xfffffeff
    38b4:	13311942 	teqne	r1, #1081344	; 0x108000
    38b8:	8a220000 	bhi	8838c0 <_bss_end+0x871bd0>
    38bc:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    38c0:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
    38c4:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    38c8:	3c193f00 	ldccc	15, cr3, [r9], {-0}
    38cc:	030e6e19 	movweq	r6, #60953	; 0xee19
    38d0:	3b0b3a0e 	blcc	2d2110 <_bss_end+0x2c0420>
    38d4:	000b390b 	andeq	r3, fp, fp, lsl #18
    38d8:	11010000 	mrsne	r0, (UNDEF: 1)
    38dc:	11061000 	mrsne	r1, (UNDEF: 6)
    38e0:	03011201 	movweq	r1, #4609	; 0x1201
    38e4:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    38e8:	0005130e 	andeq	r1, r5, lr, lsl #6
    38ec:	11010000 	mrsne	r0, (UNDEF: 1)
    38f0:	11061000 	mrsne	r1, (UNDEF: 6)
    38f4:	03011201 	movweq	r1, #4609	; 0x1201
    38f8:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    38fc:	0005130e 	andeq	r1, r5, lr, lsl #6
    3900:	11010000 	mrsne	r0, (UNDEF: 1)
    3904:	130e2501 	movwne	r2, #58625	; 0xe501
    3908:	1b0e030b 	blne	38453c <_bss_end+0x37284c>
    390c:	0017100e 	andseq	r1, r7, lr
    3910:	00240200 	eoreq	r0, r4, r0, lsl #4
    3914:	0b3e0b0b 	bleq	f86548 <_bss_end+0xf74858>
    3918:	00000803 	andeq	r0, r0, r3, lsl #16
    391c:	0b002403 	bleq	c930 <_ZN13CMonitor_FileD1Ev+0x28>
    3920:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    3924:	0400000e 	streq	r0, [r0], #-14
    3928:	0e030104 	adfeqs	f0, f3, f4
    392c:	0b0b0b3e 	bleq	2c662c <_bss_end+0x2b493c>
    3930:	0b3a1349 	bleq	e8865c <_bss_end+0xe7696c>
    3934:	0b390b3b 	bleq	e46628 <_bss_end+0xe34938>
    3938:	00001301 	andeq	r1, r0, r1, lsl #6
    393c:	03002805 	movweq	r2, #2053	; 0x805
    3940:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3944:	01130600 	tsteq	r3, r0, lsl #12
    3948:	0b0b0e03 	bleq	2c715c <_bss_end+0x2b546c>
    394c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3950:	13010b39 	movwne	r0, #6969	; 0x1b39
    3954:	0d070000 	stceq	0, cr0, [r7, #-0]
    3958:	3a0e0300 	bcc	384560 <_bss_end+0x372870>
    395c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3960:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    3964:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    3968:	13490026 	movtne	r0, #36902	; 0x9026
    396c:	01090000 	mrseq	r0, (UNDEF: 9)
    3970:	01134901 	tsteq	r3, r1, lsl #18
    3974:	0a000013 	beq	39c8 <CPSR_IRQ_INHIBIT+0x3948>
    3978:	13490021 	movtne	r0, #36897	; 0x9021
    397c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    3980:	0300340b 	movweq	r3, #1035	; 0x40b
    3984:	3b0b3a0e 	blcc	2d21c4 <_bss_end+0x2c04d4>
    3988:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    398c:	000a1c13 	andeq	r1, sl, r3, lsl ip
    3990:	00150c00 	andseq	r0, r5, r0, lsl #24
    3994:	00001927 	andeq	r1, r0, r7, lsr #18
    3998:	0b000f0d 	bleq	75d4 <CPSR_IRQ_INHIBIT+0x7554>
    399c:	0013490b 	andseq	r4, r3, fp, lsl #18
    39a0:	01040e00 	tsteq	r4, r0, lsl #28
    39a4:	0b3e0e03 	bleq	f871b8 <_bss_end+0xf754c8>
    39a8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    39ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    39b0:	13010b39 	movwne	r0, #6969	; 0x1b39
    39b4:	160f0000 	strne	r0, [pc], -r0
    39b8:	3a0e0300 	bcc	3845c0 <_bss_end+0x3728d0>
    39bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    39c0:	0013490b 	andseq	r4, r3, fp, lsl #18
    39c4:	00211000 	eoreq	r1, r1, r0
    39c8:	34110000 	ldrcc	r0, [r1], #-0
    39cc:	3a0e0300 	bcc	3845d4 <_bss_end+0x3728e4>
    39d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    39d4:	3f13490b 	svccc	0x0013490b
    39d8:	00193c19 	andseq	r3, r9, r9, lsl ip
    39dc:	00341200 	eorseq	r1, r4, r0, lsl #4
    39e0:	0b3a1347 	bleq	e88704 <_bss_end+0xe76a14>
    39e4:	0b39053b 	bleq	e44ed8 <_bss_end+0xe331e8>
    39e8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    39ec:	Address 0x00000000000039ec is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	000080ac 	andeq	r8, r0, ip, lsr #1
  14:	000000d8 	ldrdeq	r0, [r0], -r8
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	012a0002 			; <UNDEFINED> instruction: 0x012a0002
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00008184 	andeq	r8, r0, r4, lsl #3
  34:	0000088c 	andeq	r0, r0, ip, lsl #17
	...
  40:	0000002c 	andeq	r0, r0, ip, lsr #32
  44:	0a430002 	beq	10c0054 <_bss_end+0x10ae364>
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	00008a10 	andeq	r8, r0, r0, lsl sl
  54:	000006c8 	andeq	r0, r0, r8, asr #13
  58:	000090d8 	ldrdeq	r9, [r0], -r8
  5c:	00000034 	andeq	r0, r0, r4, lsr r0
  60:	0000910c 	andeq	r9, r0, ip, lsl #2
  64:	00000048 	andeq	r0, r0, r8, asr #32
	...
  70:	00000034 	andeq	r0, r0, r4, lsr r0
  74:	14b90002 	ldrtne	r0, [r9], #2
  78:	00040000 	andeq	r0, r4, r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	00009154 	andeq	r9, r0, r4, asr r1
  84:	00000648 	andeq	r0, r0, r8, asr #12
  88:	0000979c 	muleq	r0, ip, r7
  8c:	00000038 	andeq	r0, r0, r8, lsr r0
  90:	000097d4 	ldrdeq	r9, [r0], -r4
  94:	00000088 	andeq	r0, r0, r8, lsl #1
  98:	0000985c 	andeq	r9, r0, ip, asr r8
  9c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  a8:	0000003c 	andeq	r0, r0, ip, lsr r0
  ac:	1b710002 	blne	1c400bc <_bss_end+0x1c2e3cc>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	00009888 	andeq	r9, r0, r8, lsl #17
  bc:	00001318 	andeq	r1, r0, r8, lsl r3
  c0:	0000aba0 	andeq	sl, r0, r0, lsr #23
  c4:	00000030 	andeq	r0, r0, r0, lsr r0
  c8:	0000abd0 	ldrdeq	sl, [r0], -r0
  cc:	00000070 	andeq	r0, r0, r0, ror r0
  d0:	0000ac40 	andeq	sl, r0, r0, asr #24
  d4:	00000070 	andeq	r0, r0, r0, ror r0
  d8:	0000acb0 			; <UNDEFINED> instruction: 0x0000acb0
  dc:	0000006c 	andeq	r0, r0, ip, rrx
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	2ebc0002 	cdpcs	0, 11, cr0, cr12, cr2, {0}
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	0000ad1c 	andeq	sl, r0, ip, lsl sp
  fc:	00000264 	andeq	r0, r0, r4, ror #4
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	33f70002 	mvnscc	r0, #2
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	0000af80 	andeq	sl, r0, r0, lsl #31
 11c:	000005c4 	andeq	r0, r0, r4, asr #11
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	3afd0002 	bcc	fff4013c <_bss_end+0xfff2e44c>
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	0000b544 	andeq	fp, r0, r4, asr #10
 13c:	00000290 	muleq	r0, r0, r2
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	40a80002 	adcmi	r0, r8, r2
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	0000b7d4 	ldrdeq	fp, [r0], -r4
 15c:	00000280 	andeq	r0, r0, r0, lsl #5
	...
 168:	0000002c 	andeq	r0, r0, ip, lsr #32
 16c:	44940002 	ldrmi	r0, [r4], #2
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	0000ba54 	andeq	fp, r0, r4, asr sl
 17c:	0000085c 	andeq	r0, r0, ip, asr r8
 180:	0000c2b0 			; <UNDEFINED> instruction: 0x0000c2b0
 184:	0000003c 	andeq	r0, r0, ip, lsr r0
 188:	0000c2ec 	andeq	ip, r0, ip, ror #5
 18c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 198:	0000020c 	andeq	r0, r0, ip, lsl #4
 19c:	4d460002 	stclmi	0, cr0, [r6, #-8]
 1a0:	00040000 	andeq	r0, r4, r0
 1a4:	00000000 	andeq	r0, r0, r0
 1a8:	0000c318 	andeq	ip, r0, r8, lsl r3
 1ac:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b0:	0000c344 	andeq	ip, r0, r4, asr #6
 1b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b8:	0000c370 	andeq	ip, r0, r0, ror r3
 1bc:	00000024 	andeq	r0, r0, r4, lsr #32
 1c0:	0000c394 	muleq	r0, r4, r3
 1c4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1c8:	0000c3c0 	andeq	ip, r0, r0, asr #7
 1cc:	00000030 	andeq	r0, r0, r0, lsr r0
 1d0:	0000aba0 	andeq	sl, r0, r0, lsr #23
 1d4:	00000030 	andeq	r0, r0, r0, lsr r0
 1d8:	0000c3f0 	strdeq	ip, [r0], -r0
 1dc:	00000034 	andeq	r0, r0, r4, lsr r0
 1e0:	0000c424 	andeq	ip, r0, r4, lsr #8
 1e4:	00000034 	andeq	r0, r0, r4, lsr r0
 1e8:	0000c458 	andeq	ip, r0, r8, asr r4
 1ec:	00000034 	andeq	r0, r0, r4, lsr r0
 1f0:	0000c48c 	andeq	ip, r0, ip, lsl #9
 1f4:	0000007c 	andeq	r0, r0, ip, ror r0
 1f8:	0000c508 	andeq	ip, r0, r8, lsl #10
 1fc:	00000044 	andeq	r0, r0, r4, asr #32
 200:	0000c54c 	andeq	ip, r0, ip, asr #10
 204:	00000034 	andeq	r0, r0, r4, lsr r0
 208:	0000c580 	andeq	ip, r0, r0, lsl #11
 20c:	00000080 	andeq	r0, r0, r0, lsl #1
 210:	0000c600 	andeq	ip, r0, r0, lsl #12
 214:	0000007c 	andeq	r0, r0, ip, ror r0
 218:	0000c67c 	andeq	ip, r0, ip, ror r6
 21c:	0000009c 	muleq	r0, ip, r0
 220:	0000c718 	andeq	ip, r0, r8, lsl r7
 224:	0000002c 	andeq	r0, r0, ip, lsr #32
 228:	0000c744 	andeq	ip, r0, r4, asr #14
 22c:	00000020 	andeq	r0, r0, r0, lsr #32
 230:	0000c764 	andeq	ip, r0, r4, ror #14
 234:	00000158 	andeq	r0, r0, r8, asr r1
 238:	0000c8bc 			; <UNDEFINED> instruction: 0x0000c8bc
 23c:	0000004c 	andeq	r0, r0, ip, asr #32
 240:	0000c908 	andeq	ip, r0, r8, lsl #18
 244:	00000044 	andeq	r0, r0, r4, asr #32
 248:	0000c94c 	andeq	ip, r0, ip, asr #18
 24c:	00000034 	andeq	r0, r0, r4, lsr r0
 250:	0000c980 	andeq	ip, r0, r0, lsl #19
 254:	0000002c 	andeq	r0, r0, ip, lsr #32
 258:	0000c9ac 	andeq	ip, r0, ip, lsr #19
 25c:	00000068 	andeq	r0, r0, r8, rrx
 260:	0000ca14 	andeq	ip, r0, r4, lsl sl
 264:	00000048 	andeq	r0, r0, r8, asr #32
 268:	0000ca5c 	andeq	ip, r0, ip, asr sl
 26c:	00000044 	andeq	r0, r0, r4, asr #32
 270:	0000caa0 	andeq	ip, r0, r0, lsr #21
 274:	00000020 	andeq	r0, r0, r0, lsr #32
 278:	0000cac0 	andeq	ip, r0, r0, asr #21
 27c:	00000068 	andeq	r0, r0, r8, rrx
 280:	0000cb28 	andeq	ip, r0, r8, lsr #22
 284:	00000048 	andeq	r0, r0, r8, asr #32
 288:	0000cb70 	andeq	ip, r0, r0, ror fp
 28c:	00000044 	andeq	r0, r0, r4, asr #32
 290:	0000cbb4 			; <UNDEFINED> instruction: 0x0000cbb4
 294:	00000034 	andeq	r0, r0, r4, lsr r0
 298:	0000cbe8 	andeq	ip, r0, r8, ror #23
 29c:	00000058 	andeq	r0, r0, r8, asr r0
 2a0:	0000cc40 	andeq	ip, r0, r0, asr #24
 2a4:	00000070 	andeq	r0, r0, r0, ror r0
 2a8:	0000ccb0 			; <UNDEFINED> instruction: 0x0000ccb0
 2ac:	00000058 	andeq	r0, r0, r8, asr r0
 2b0:	0000cd08 	andeq	ip, r0, r8, lsl #26
 2b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2b8:	0000cd34 	andeq	ip, r0, r4, lsr sp
 2bc:	00000020 	andeq	r0, r0, r0, lsr #32
 2c0:	0000cd54 	andeq	ip, r0, r4, asr sp
 2c4:	0000006c 	andeq	r0, r0, ip, rrx
 2c8:	0000cdc0 	andeq	ip, r0, r0, asr #27
 2cc:	00000048 	andeq	r0, r0, r8, asr #32
 2d0:	0000ce08 	andeq	ip, r0, r8, lsl #28
 2d4:	00000044 	andeq	r0, r0, r4, asr #32
 2d8:	0000ce4c 	andeq	ip, r0, ip, asr #28
 2dc:	00000034 	andeq	r0, r0, r4, lsr r0
 2e0:	0000ce80 	andeq	ip, r0, r0, lsl #29
 2e4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2e8:	0000ceac 	andeq	ip, r0, ip, lsr #29
 2ec:	00000070 	andeq	r0, r0, r0, ror r0
 2f0:	0000cf1c 	andeq	ip, r0, ip, lsl pc
 2f4:	00000058 	andeq	r0, r0, r8, asr r0
 2f8:	0000cf74 	andeq	ip, r0, r4, ror pc
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	0000cfa0 	andeq	ip, r0, r0, lsr #31
 304:	00000020 	andeq	r0, r0, r0, lsr #32
 308:	0000cfc0 	andeq	ip, r0, r0, asr #31
 30c:	0000006c 	andeq	r0, r0, ip, rrx
 310:	0000d02c 	andeq	sp, r0, ip, lsr #32
 314:	0000003c 	andeq	r0, r0, ip, lsr r0
 318:	0000d068 	andeq	sp, r0, r8, rrx
 31c:	00000044 	andeq	r0, r0, r4, asr #32
 320:	0000d0ac 	andeq	sp, r0, ip, lsr #1
 324:	00000034 	andeq	r0, r0, r4, lsr r0
 328:	0000d0e0 	andeq	sp, r0, r0, ror #1
 32c:	000000e8 	andeq	r0, r0, r8, ror #1
 330:	0000d1c8 	andeq	sp, r0, r8, asr #3
 334:	0000002c 	andeq	r0, r0, ip, lsr #32
 338:	0000d1f4 	strdeq	sp, [r0], -r4
 33c:	00000058 	andeq	r0, r0, r8, asr r0
 340:	0000d24c 	andeq	sp, r0, ip, asr #4
 344:	0000002c 	andeq	r0, r0, ip, lsr #32
 348:	0000d278 	andeq	sp, r0, r8, ror r2
 34c:	00000020 	andeq	r0, r0, r0, lsr #32
 350:	0000d298 	muleq	r0, r8, r2
 354:	00000084 	andeq	r0, r0, r4, lsl #1
 358:	0000d31c 	andeq	sp, r0, ip, lsl r3
 35c:	00000048 	andeq	r0, r0, r8, asr #32
 360:	0000d364 	andeq	sp, r0, r4, ror #6
 364:	00000044 	andeq	r0, r0, r4, asr #32
 368:	0000d3a8 	andeq	sp, r0, r8, lsr #7
 36c:	00000034 	andeq	r0, r0, r4, lsr r0
 370:	0000d3dc 	ldrdeq	sp, [r0], -ip
 374:	0000002c 	andeq	r0, r0, ip, lsr #32
 378:	0000d408 	andeq	sp, r0, r8, lsl #8
 37c:	0000003c 	andeq	r0, r0, ip, lsr r0
 380:	0000d444 	andeq	sp, r0, r4, asr #8
 384:	00000058 	andeq	r0, r0, r8, asr r0
 388:	0000d49c 	muleq	r0, ip, r4
 38c:	0000002c 	andeq	r0, r0, ip, lsr #32
 390:	0000d4c8 	andeq	sp, r0, r8, asr #9
 394:	00000020 	andeq	r0, r0, r0, lsr #32
 398:	0000d4e8 	andeq	sp, r0, r8, ror #9
 39c:	00000074 	andeq	r0, r0, r4, ror r0
	...
 3a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ac:	7fef0002 	svcvc	0x00ef0002
 3b0:	00040000 	andeq	r0, r4, r0
 3b4:	00000000 	andeq	r0, r0, r0
 3b8:	0000d55c 	andeq	sp, r0, ip, asr r5
 3bc:	000002e4 	andeq	r0, r0, r4, ror #5
	...
 3c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3cc:	8b120002 	blhi	4803dc <_bss_end+0x46e6ec>
 3d0:	00040000 	andeq	r0, r4, r0
 3d4:	00000000 	andeq	r0, r0, r0
 3d8:	0000d840 	andeq	sp, r0, r0, asr #16
 3dc:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
 3e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ec:	98920002 	ldmls	r2, {r1}
 3f0:	00040000 	andeq	r0, r4, r0
 3f4:	00000000 	andeq	r0, r0, r0
 3f8:	0000d8e8 	andeq	sp, r0, r8, ror #17
 3fc:	0000036c 	andeq	r0, r0, ip, ror #6
	...
 408:	0000001c 	andeq	r0, r0, ip, lsl r0
 40c:	9d8d0002 	stcls	0, cr0, [sp, #8]
 410:	00040000 	andeq	r0, r4, r0
 414:	00000000 	andeq	r0, r0, r0
 418:	0000dc54 	andeq	sp, r0, r4, asr ip
 41c:	000002a4 	andeq	r0, r0, r4, lsr #5
	...
 428:	0000002c 	andeq	r0, r0, ip, lsr #32
 42c:	a1c50002 	bicge	r0, r5, r2
 430:	00040000 	andeq	r0, r4, r0
 434:	00000000 	andeq	r0, r0, r0
 438:	0000def8 	strdeq	sp, [r0], -r8
 43c:	00000bd4 	ldrdeq	r0, [r0], -r4
 440:	0000eacc 	andeq	lr, r0, ip, asr #21
 444:	0000002c 	andeq	r0, r0, ip, lsr #32
 448:	0000eaf8 	strdeq	lr, [r0], -r8
 44c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	b2d90002 	sbcslt	r0, r9, #2
 460:	00040000 	andeq	r0, r4, r0
 464:	00000000 	andeq	r0, r0, r0
 468:	0000eb24 	andeq	lr, r0, r4, lsr #22
 46c:	0000005c 	andeq	r0, r0, ip, asr r0
	...
 478:	00000024 	andeq	r0, r0, r4, lsr #32
 47c:	b2ff0002 	rscslt	r0, pc, #2
 480:	00040000 	andeq	r0, r4, r0
 484:	00000000 	andeq	r0, r0, r0
 488:	00008000 	andeq	r8, r0, r0
 48c:	000000ac 	andeq	r0, r0, ip, lsr #1
 490:	0000eb80 	andeq	lr, r0, r0, lsl #23
 494:	00000070 	andeq	r0, r0, r0, ror r0
	...
 4a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4a4:	b3210002 			; <UNDEFINED> instruction: 0xb3210002
 4a8:	00040000 	andeq	r0, r4, r0
 4ac:	00000000 	andeq	r0, r0, r0
 4b0:	0000ebf0 	strdeq	lr, [r0], -r0
 4b4:	00000118 	andeq	r0, r0, r8, lsl r1
	...
 4c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4c4:	b4700002 	ldrbtlt	r0, [r0], #-2
 4c8:	00040000 	andeq	r0, r4, r0
 4cc:	00000000 	andeq	r0, r0, r0
 4d0:	0000ed08 	andeq	lr, r0, r8, lsl #26
 4d4:	00000554 	andeq	r0, r0, r4, asr r5
	...
 4e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4e4:	bae80002 	blt	ffa004f4 <_bss_end+0xff9ee804>
 4e8:	00040000 	andeq	r0, r4, r0
 4ec:	00000000 	andeq	r0, r0, r0
 4f0:	0000f25c 	andeq	pc, r0, ip, asr r2	; <UNPREDICTABLE>
 4f4:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
 500:	0000001c 	andeq	r0, r0, ip, lsl r0
 504:	bda50002 	stclt	0, cr0, [r5, #8]!
 508:	00040000 	andeq	r0, r4, r0
 50c:	00000000 	andeq	r0, r0, r0
 510:	0000f3e8 	andeq	pc, r0, r8, ror #7
 514:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
	...
 520:	0000001c 	andeq	r0, r0, ip, lsl r0
 524:	c0d70002 	sbcsgt	r0, r7, r2
 528:	00040000 	andeq	r0, r4, r0
 52c:	00000000 	andeq	r0, r0, r0
 530:	0000f8a0 	andeq	pc, r0, r0, lsr #17
 534:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
	...
 540:	0000001c 	andeq	r0, r0, ip, lsl r0
 544:	cad30002 	bgt	ff4c0554 <_bss_end+0xff4ae864>
 548:	00040000 	andeq	r0, r4, r0
 54c:	00000000 	andeq	r0, r0, r0
 550:	0000fd54 	andeq	pc, r0, r4, asr sp	; <UNPREDICTABLE>
 554:	00000004 	andeq	r0, r0, r4
	...
 560:	0000001c 	andeq	r0, r0, ip, lsl r0
 564:	ce700002 	cdpgt	0, 7, cr0, cr0, cr2, {0}
 568:	00040000 	andeq	r0, r4, r0
 56c:	00000000 	andeq	r0, r0, r0
 570:	0000fd58 	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
 574:	0000020c 	andeq	r0, r0, ip, lsl #4
	...
 580:	0000001c 	andeq	r0, r0, ip, lsl r0
 584:	ce960002 	cdpgt	0, 9, cr0, cr6, cr2, {0}
 588:	00040000 	andeq	r0, r4, r0
 58c:	00000000 	andeq	r0, r0, r0
 590:	0000ff64 	andeq	pc, r0, r4, ror #30
 594:	00000004 	andeq	r0, r0, r4
	...
 5a0:	00000014 	andeq	r0, r0, r4, lsl r0
 5a4:	cebc0002 	cdpgt	0, 11, cr0, cr12, cr2, {0}
 5a8:	00040000 	andeq	r0, r4, r0
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000000a5 	andeq	r0, r0, r5, lsr #1
       4:	006c0003 	rsbeq	r0, ip, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2f010000 	svccs	0x00010000
      1c:	2f746e6d 	svccs	0x00746e6d
      20:	73552f63 	cmpvc	r5, #396	; 0x18c
      24:	2f737265 	svccs	0x00737265
      28:	6162754b 	cmnvs	r2, fp, asr #10
      2c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
      30:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
      34:	5a2f7374 	bpl	bdce0c <_bss_end+0xbcb11c>
      38:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; fffffeac <_bss_end+0xfffee1bc>
      3c:	2f657461 	svccs	0x00657461
      40:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
      44:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
      48:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
      4c:	2f433249 	svccs	0x00433249
      50:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
      54:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
      58:	00006372 	andeq	r6, r0, r2, ror r3
      5c:	2e787863 	cdpcs	8, 7, cr7, cr8, cr3, {3}
      60:	00707063 	rsbseq	r7, r0, r3, rrx
      64:	3c000001 	stccc	0, cr0, [r0], {1}
      68:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
      6c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
      70:	0000003e 	andeq	r0, r0, lr, lsr r0
      74:	05050000 	streq	r0, [r5, #-0]
      78:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
      7c:	03000080 	movweq	r0, #128	; 0x80
      80:	1105010a 	tstne	r5, sl, lsl #2
      84:	4a100583 	bmi	401698 <_bss_end+0x3ef9a8>
      88:	85830505 	strhi	r0, [r3, #1285]	; 0x505
      8c:	05831305 	streq	r1, [r3, #773]	; 0x305
      90:	83856705 	orrhi	r6, r5, #1310720	; 0x140000
      94:	4c860105 	stfmis	f0, [r6], {5}
      98:	4c854c85 	stcmi	12, cr4, [r5], {133}	; 0x85
      9c:	00050585 	andeq	r0, r5, r5, lsl #11
      a0:	4b010402 	blmi	410b0 <_bss_end+0x2f3c0>
      a4:	01000202 	tsteq	r0, r2, lsl #4
      a8:	0003cd01 	andeq	ip, r3, r1, lsl #26
      ac:	2d000300 	stccs	3, cr0, [r0, #-0]
      b0:	02000001 	andeq	r0, r0, #1
      b4:	0d0efb01 	vstreq	d15, [lr, #-4]
      b8:	01010100 	mrseq	r0, (UNDEF: 17)
      bc:	00000001 	andeq	r0, r0, r1
      c0:	01000001 	tsteq	r0, r1
      c4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
      c8:	552f632f 	strpl	r6, [pc, #-815]!	; fffffda1 <_bss_end+0xfffee0b1>
      cc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
      d0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
      d4:	6f442f61 	svcvs	0x00442f61
      d8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
      dc:	2f73746e 	svccs	0x0073746e
      e0:	6f72655a 	svcvs	0x0072655a
      e4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
      e8:	6178652f 	cmnvs	r8, pc, lsr #10
      ec:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
      f0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
      f4:	4332492d 	teqmi	r2, #737280	; 0xb4000
      f8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
      fc:	2f6c656e 	svccs	0x006c656e
     100:	2f637273 	svccs	0x00637273
     104:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     108:	00737265 	rsbseq	r7, r3, r5, ror #4
     10c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     110:	552f632f 	strpl	r6, [pc, #-815]!	; fffffde9 <_bss_end+0xfffee0f9>
     114:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     118:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     11c:	6f442f61 	svcvs	0x00442f61
     120:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     124:	2f73746e 	svccs	0x0073746e
     128:	6f72655a 	svcvs	0x0072655a
     12c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     130:	6178652f 	cmnvs	r8, pc, lsr #10
     134:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     138:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     13c:	4332492d 	teqmi	r2, #737280	; 0xb4000
     140:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     144:	2f6c656e 	svccs	0x006c656e
     148:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     14c:	2f656475 	svccs	0x00656475
     150:	72616f62 	rsbvc	r6, r1, #392	; 0x188
     154:	70722f64 	rsbsvc	r2, r2, r4, ror #30
     158:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
     15c:	2f006c61 	svccs	0x00006c61
     160:	2f746e6d 	svccs	0x00746e6d
     164:	73552f63 	cmpvc	r5, #396	; 0x18c
     168:	2f737265 	svccs	0x00737265
     16c:	6162754b 	cmnvs	r2, fp, asr #10
     170:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     174:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     178:	5a2f7374 	bpl	bdcf50 <_bss_end+0xbcb260>
     17c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; fffffff0 <_bss_end+0xfffee300>
     180:	2f657461 	svccs	0x00657461
     184:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     188:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     18c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     190:	2f433249 	svccs	0x00433249
     194:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     198:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
     19c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1a0:	642f6564 	strtvs	r6, [pc], #-1380	; 1a8 <CPSR_IRQ_INHIBIT+0x128>
     1a4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     1a8:	00007372 	andeq	r7, r0, r2, ror r3
     1ac:	6f697067 	svcvs	0x00697067
     1b0:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
     1b4:	00000100 	andeq	r0, r0, r0, lsl #2
     1b8:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
     1bc:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     1c0:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
     1c4:	00020068 	andeq	r0, r2, r8, rrx
     1c8:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     1cc:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     1d0:	69000003 	stmdbvs	r0, {r0, r1}
     1d4:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
     1d8:	00682e66 	rsbeq	r2, r8, r6, ror #28
     1dc:	00000002 	andeq	r0, r0, r2
     1e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     1e4:	00818402 	addeq	r8, r1, r2, lsl #8
     1e8:	09051900 	stmdbeq	r5, {r8, fp, ip}
     1ec:	2e38059f 	mrccs	5, 1, r0, cr8, cr15, {4}
     1f0:	054c0b05 	strbeq	r0, [ip, #-2821]	; 0xfffff4fb
     1f4:	0b054a0a 	bleq	152a24 <_bss_end+0x140d34>
     1f8:	4a0a0567 	bmi	28179c <_bss_end+0x26faac>
     1fc:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     200:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
     204:	0f056710 	svceq	0x00056710
     208:	8209054c 	andhi	r0, r9, #76, 10	; 0x13000000
     20c:	0b031405 	bleq	c5228 <_bss_end+0xb3538>
     210:	081a054a 	ldmdaeq	sl, {r1, r3, r6, r8, sl}
     214:	660d0520 	strvs	r0, [sp], -r0, lsr #10
     218:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
     21c:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
     220:	1005d705 	andne	sp, r5, r5, lsl #14
     224:	4c0b0567 	cfstr32mi	mvfx0, [fp], {103}	; 0x67
     228:	01040200 	mrseq	r0, R12_usr
     22c:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     230:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     234:	04020009 	streq	r0, [r2], #-9
     238:	052e0604 	streq	r0, [lr, #-1540]!	; 0xfffff9fc
     23c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     240:	0d054b04 	vstreq	d4, [r5, #-16]
     244:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     248:	000c054a 	andeq	r0, ip, sl, asr #10
     24c:	4c040402 	cfstrsmi	mvf0, [r4], {2}
     250:	852f0105 	strhi	r0, [pc, #-261]!	; 153 <CPSR_IRQ_INHIBIT+0xd3>
     254:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
     258:	0b056710 	bleq	159ea0 <_bss_end+0x1481b0>
     25c:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     260:	00660601 	rsbeq	r0, r6, r1, lsl #12
     264:	4a020402 	bmi	81274 <_bss_end+0x6f584>
     268:	02000905 	andeq	r0, r0, #81920	; 0x14000
     26c:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
     270:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
     274:	054b0404 	strbeq	r0, [fp, #-1028]	; 0xfffffbfc
     278:	0402000d 	streq	r0, [r2], #-13
     27c:	0c054a04 			; <UNDEFINED> instruction: 0x0c054a04
     280:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     284:	2f01054c 	svccs	0x0001054c
     288:	d7050585 	strle	r0, [r5, -r5, lsl #11]
     28c:	05671005 	strbeq	r1, [r7, #-5]!
     290:	02004c0b 	andeq	r4, r0, #2816	; 0xb00
     294:	66060104 	strvs	r0, [r6], -r4, lsl #2
     298:	02040200 	andeq	r0, r4, #0, 4
     29c:	0009054a 	andeq	r0, r9, sl, asr #10
     2a0:	06040402 	streq	r0, [r4], -r2, lsl #8
     2a4:	0013052e 	andseq	r0, r3, lr, lsr #10
     2a8:	4b040402 	blmi	1012b8 <_bss_end+0xef5c8>
     2ac:	02000d05 	andeq	r0, r0, #320	; 0x140
     2b0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
     2b4:	0402000c 	streq	r0, [r2], #-12
     2b8:	01054c04 	tsteq	r5, r4, lsl #24
     2bc:	1d05852f 	cfstr32ne	mvfx8, [r5, #-188]	; 0xffffff44
     2c0:	ba0905bc 	blt	2419b8 <_bss_end+0x22fcc8>
     2c4:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     2c8:	17054d12 	smladne	r5, r2, sp, r4
     2cc:	4a20054c 	bmi	801804 <_bss_end+0x7efb14>
     2d0:	059f0f05 	ldreq	r0, [pc, #3845]	; 11dd <CPSR_IRQ_INHIBIT+0x115d>
     2d4:	0805660b 	stmdaeq	r5, {r0, r1, r3, r9, sl, sp, lr}
     2d8:	6711054a 	ldrvs	r0, [r1, -sl, asr #10]
     2dc:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
     2e0:	0e056805 	cdpeq	8, 0, cr6, cr5, cr5, {0}
     2e4:	6610054a 	ldrvs	r0, [r0], -sl, asr #10
     2e8:	78030905 	stmdavc	r3, {r0, r2, r8, fp}
     2ec:	03010566 	movweq	r0, #5478	; 0x1566
     2f0:	054d2e09 	strbeq	r2, [sp, #-3593]	; 0xfffff1f7
     2f4:	0905a01d 	stmdbeq	r5, {r0, r2, r3, r4, sp, pc}
     2f8:	4a0505ba 	bmi	1419e8 <_bss_end+0x12fcf8>
     2fc:	054b2005 	strbeq	r2, [fp, #-5]
     300:	32054c29 	andcc	r4, r5, #10496	; 0x2900
     304:	8234054a 	eorshi	r0, r4, #310378496	; 0x12800000
     308:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
     30c:	04020001 	streq	r0, [r2], #-1
     310:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
     314:	3505d80b 	strcc	sp, [r5, #-2059]	; 0xfffff7f5
     318:	00240566 	eoreq	r0, r4, r6, ror #10
     31c:	4a020402 	bmi	8132c <_bss_end+0x6f63c>
     320:	02000905 	andeq	r0, r0, #81920	; 0x14000
     324:	05f20204 	ldrbeq	r0, [r2, #516]!	; 0x204
     328:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     32c:	54054a03 	strpl	r4, [r5], #-2563	; 0xfffff5fd
     330:	06040200 	streq	r0, [r4], -r0, lsl #4
     334:	00380566 	eorseq	r0, r8, r6, ror #10
     338:	f2060402 	vshl.s8	d0, d2, d6
     33c:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     340:	004a0704 	subeq	r0, sl, r4, lsl #14
     344:	06080402 	streq	r0, [r8], -r2, lsl #8
     348:	0005054a 	andeq	r0, r5, sl, asr #10
     34c:	060a0402 	streq	r0, [sl], -r2, lsl #8
     350:	4d15052e 	cfldr32mi	mvfx0, [r5, #-184]	; 0xffffff48
     354:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
     358:	15054a0e 	strne	r4, [r5, #-2574]	; 0xfffff5f2
     35c:	2e100566 	cfmsc32cs	mvfx0, mvfx0, mvfx6
     360:	05480905 	strbeq	r0, [r8, #-2309]	; 0xfffff6fb
     364:	054d3101 	strbeq	r3, [sp, #-257]	; 0xfffffeff
     368:	0905a01c 	stmdbeq	r5, {r2, r3, r4, sp, pc}
     36c:	4a0505ba 	bmi	141a5c <_bss_end+0x12fd6c>
     370:	054b1005 	strbeq	r1, [fp, #-5]
     374:	16054c0d 	strne	r4, [r5], -sp, lsl #24
     378:	8218054a 	andshi	r0, r8, #310378496	; 0x12800000
     37c:	054a2005 	strbeq	r2, [sl, #-5]
     380:	01052e22 	tsteq	r5, r2, lsr #28
     384:	01040200 	mrseq	r0, R12_usr
     388:	0e056983 	vmlaeq.f16	s12, s11, s6	; <UNPREDICTABLE>
     38c:	05675b08 	strbeq	r5, [r7, #-2824]!	; 0xfffff4f8
     390:	31056805 	tstcc	r5, r5, lsl #16
     394:	01040200 	mrseq	r0, R12_usr
     398:	00330566 	eorseq	r0, r3, r6, ror #10
     39c:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
     3a0:	02003f05 	andeq	r3, r0, #5, 30
     3a4:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     3a8:	0402000e 	streq	r0, [r2], #-14
     3ac:	10052e01 	andne	r2, r5, r1, lsl #28
     3b0:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
     3b4:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     3b8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     3bc:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     3c0:	4105ba01 	tstmi	r5, r1, lsl #20
     3c4:	01040200 	mrseq	r0, R12_usr
     3c8:	000f054a 	andeq	r0, pc, sl, asr #10
     3cc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     3d0:	054b1005 	strbeq	r1, [fp, #-5]
     3d4:	2a054c05 	bcs	1533f0 <_bss_end+0x141700>
     3d8:	9e320567 	cdpls	5, 3, cr0, cr2, cr7, {3}
     3dc:	20082a05 	andcs	r2, r8, r5, lsl #20
     3e0:	05d80505 	ldrbeq	r0, [r8, #1285]	; 0x505
     3e4:	3305672b 	movwcc	r6, #22315	; 0x572b
     3e8:	082b05ba 	stmdaeq	fp!, {r1, r3, r4, r5, r7, r8, sl}
     3ec:	f40c0520 	vst3.8	{d0,d2,d4}, [ip :128], r0
     3f0:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     3f4:	59080e05 	stmdbpl	r8, {r0, r2, r9, sl, fp}
     3f8:	68050567 	stmdavs	r5, {r0, r1, r2, r5, r6, r8, sl}
     3fc:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     400:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     404:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     408:	41059e01 	tstmi	r5, r1, lsl #28
     40c:	01040200 	mrseq	r0, R12_usr
     410:	000e054a 	andeq	r0, lr, sl, asr #10
     414:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     418:	054b1005 	strbeq	r1, [fp, #-5]
     41c:	35054c05 	strcc	r4, [r5, #-3077]	; 0xfffff3fb
     420:	01040200 	mrseq	r0, R12_usr
     424:	00370566 	eorseq	r0, r7, r6, ror #10
     428:	ba010402 	blt	41438 <_bss_end+0x2f748>
     42c:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
     430:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     434:	0402000f 	streq	r0, [r2], #-15
     438:	10052e01 	andne	r2, r5, r1, lsl #28
     43c:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
     440:	05672a05 	strbeq	r2, [r7, #-2565]!	; 0xfffff5fb
     444:	2a059e34 	bcs	167d1c <_bss_end+0x15602c>
     448:	05052008 	streq	r2, [r5, #-8]
     44c:	672b05f4 			; <UNDEFINED> instruction: 0x672b05f4
     450:	05ba3505 	ldreq	r3, [sl, #1285]!	; 0x505
     454:	0520082b 	streq	r0, [r0, #-2091]!	; 0xfffff7d5
     458:	0522080c 	streq	r0, [r2, #-2060]!	; 0xfffff7f4
     45c:	9e662f01 	cdpls	15, 6, cr2, cr6, cr1, {0}
     460:	01040200 	mrseq	r0, R12_usr
     464:	23056606 	movwcs	r6, #22022	; 0x5606
     468:	7eef0306 	cdpvc	3, 14, cr0, cr15, cr6, {0}
     46c:	03010582 	movweq	r0, #5506	; 0x1582
     470:	ba660191 	blt	1980abc <_bss_end+0x196edcc>
     474:	000a024a 	andeq	r0, sl, sl, asr #4
     478:	03410101 	movteq	r0, #4353	; 0x1101
     47c:	00030000 	andeq	r0, r3, r0
     480:	00000135 	andeq	r0, r0, r5, lsr r1
     484:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     488:	0101000d 	tsteq	r1, sp
     48c:	00000101 	andeq	r0, r0, r1, lsl #2
     490:	00000100 	andeq	r0, r0, r0, lsl #2
     494:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
     498:	2f632f74 	svccs	0x00632f74
     49c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     4a0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     4a4:	442f6162 	strtmi	r6, [pc], #-354	; 4ac <CPSR_IRQ_INHIBIT+0x42c>
     4a8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     4ac:	73746e65 	cmnvc	r4, #1616	; 0x650
     4b0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     4b4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     4b8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     4bc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     4c0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     4c4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     4c8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     4cc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     4d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     4d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     4d8:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     4dc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     4e0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     4e4:	2f632f74 	svccs	0x00632f74
     4e8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     4ec:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     4f0:	442f6162 	strtmi	r6, [pc], #-354	; 4f8 <CPSR_IRQ_INHIBIT+0x478>
     4f4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     4f8:	73746e65 	cmnvc	r4, #1616	; 0x650
     4fc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     500:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     504:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     508:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     50c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     510:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     514:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     518:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     51c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     520:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     524:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     528:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     52c:	2f632f74 	svccs	0x00632f74
     530:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     534:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     538:	442f6162 	strtmi	r6, [pc], #-354	; 540 <CPSR_IRQ_INHIBIT+0x4c0>
     53c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     540:	73746e65 	cmnvc	r4, #1616	; 0x650
     544:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     548:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     54c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     550:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     554:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     558:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     55c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     560:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     564:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     568:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     56c:	616f622f 	cmnvs	pc, pc, lsr #4
     570:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
     574:	2f306970 	svccs	0x00306970
     578:	006c6168 	rsbeq	r6, ip, r8, ror #2
     57c:	63326900 	teqvs	r2, #0, 18
     580:	0100682e 	tsteq	r0, lr, lsr #16
     584:	32690000 	rsbcc	r0, r9, #0
     588:	70632e63 	rsbvc	r2, r3, r3, ror #28
     58c:	00020070 	andeq	r0, r2, r0, ror r0
     590:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     594:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     598:	00030068 	andeq	r0, r3, r8, rrx
     59c:	72657000 	rsbvc	r7, r5, #0
     5a0:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
     5a4:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
     5a8:	0300682e 	movweq	r6, #2094	; 0x82e
     5ac:	70670000 	rsbvc	r0, r7, r0
     5b0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     5b4:	00000100 	andeq	r0, r0, r0, lsl #2
     5b8:	000e0500 	andeq	r0, lr, r0, lsl #10
     5bc:	90d80205 	sbcsls	r0, r8, r5, lsl #4
     5c0:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
     5c4:	bc160501 	cfldr32lt	mvfx0, [r6], {1}
     5c8:	02670905 	rsbeq	r0, r7, #81920	; 0x14000
     5cc:	01010008 	tsteq	r1, r8
     5d0:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
     5d4:	00910c02 	addseq	r0, r1, r2, lsl #24
     5d8:	01170300 	tsteq	r7, r0, lsl #6
     5dc:	001c0282 	andseq	r0, ip, r2, lsl #5
     5e0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     5e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     5e8:	008a1002 	addeq	r1, sl, r2
     5ec:	71051800 	tstvc	r5, r0, lsl #16
     5f0:	080105d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl}
     5f4:	0c0585e7 	cfstr32eq	mvfx8, [r5], {231}	; 0xe7
     5f8:	4a16059f 	bmi	581c7c <_bss_end+0x56ff8c>
     5fc:	052e3005 	streq	r3, [lr, #-5]!
     600:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     604:	0e058334 	mcreq	3, 0, r8, cr5, cr4, {1}
     608:	4a100585 	bmi	401c24 <_bss_end+0x3eff34>
     60c:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
     610:	0105ba05 	tsteq	r5, r5, lsl #20
     614:	1b056930 	blne	15aadc <_bss_end+0x148dec>
     618:	d6090583 	strle	r0, [r9], -r3, lsl #11
     61c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     620:	1b054b10 	blne	153268 <_bss_end+0x141578>
     624:	d609054c 	strle	r0, [r9], -ip, asr #10
     628:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     62c:	10054c17 	andne	r4, r5, r7, lsl ip
     630:	4f1c05bb 	svcmi	0x001c05bb
     634:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
     638:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     63c:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
     640:	2005831e 	andcs	r8, r5, lr, lsl r3
     644:	4c1c0582 	cfldr32mi	mvfx0, [ip], {130}	; 0x82
     648:	bc1305bb 	cfldr32lt	mvfx0, [r3], {187}	; 0xbb
     64c:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
     650:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     654:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
     658:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     65c:	2805f324 	stmdacs	r5, {r2, r5, r8, r9, ip, sp, lr, pc}
     660:	2e260582 	cfsh64cs	mvdx0, mvdx6, #-62
     664:	052f2205 	streq	r2, [pc, #-517]!	; 467 <CPSR_IRQ_INHIBIT+0x3e7>
     668:	13058224 	movwne	r8, #21028	; 0x5224
     66c:	001c054c 	andseq	r0, ip, ip, asr #10
     670:	4a030402 	bmi	c1680 <_bss_end+0xaf990>
     674:	02003005 	andeq	r3, r0, #5
     678:	05830204 	streq	r0, [r3, #516]	; 0x204
     67c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     680:	30058202 	andcc	r8, r5, r2, lsl #4
     684:	02040200 	andeq	r0, r4, #0, 4
     688:	00260582 	eoreq	r0, r6, r2, lsl #11
     68c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     690:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     694:	052d0204 	streq	r0, [sp, #-516]!	; 0xfffffdfc
     698:	1f05851d 	svcne	0x0005851d
     69c:	4b1e0582 	blmi	781cac <_bss_end+0x76ffbc>
     6a0:	05822005 	streq	r2, [r2, #5]
     6a4:	01054c0f 	tsteq	r5, pc, lsl #24
     6a8:	2405a14b 	strcs	sl, [r5], #-331	; 0xfffffeb5
     6ac:	822805f3 	eorhi	r0, r8, #1019215872	; 0x3cc00000
     6b0:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
     6b4:	24052f22 	strcs	r2, [r5], #-3874	; 0xfffff0de
     6b8:	4c1d0582 	cfldr32mi	mvfx0, [sp], {130}	; 0x82
     6bc:	05821f05 	streq	r1, [r2, #3845]	; 0xf05
     6c0:	20054b1e 	andcs	r4, r5, lr, lsl fp
     6c4:	4c0f0582 	cfstr32mi	mvfx0, [pc], {130}	; 0x82
     6c8:	054c1305 	strbeq	r1, [ip, #-773]	; 0xfffffcfb
     6cc:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     6d0:	30054a03 	andcc	r4, r5, r3, lsl #20
     6d4:	02040200 	andeq	r0, r4, #0, 4
     6d8:	00180583 	andseq	r0, r8, r3, lsl #11
     6dc:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
     6e0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     6e4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     6e8:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     6ec:	05056602 	streq	r6, [r5, #-1538]	; 0xfffff9fe
     6f0:	02040200 	andeq	r0, r4, #0, 4
     6f4:	84010549 	strhi	r0, [r1], #-1353	; 0xfffffab7
     6f8:	bb1605a1 	bllt	581d84 <_bss_end+0x570094>
     6fc:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     700:	1f054b10 	svcne	0x00054b10
     704:	671a0568 	ldrvs	r0, [sl, -r8, ror #10]
     708:	05671d05 	strbeq	r1, [r7, #-3333]!	; 0xfffff2fb
     70c:	0105bc0c 	tsteq	r5, ip, lsl #24
     710:	1605694b 	strne	r6, [r5], -fp, asr #18
     714:	4a0905d7 	bmi	241e78 <_bss_end+0x230188>
     718:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     71c:	09054d1e 	stmdbeq	r5, {r1, r2, r3, r4, r8, sl, fp, lr}
     720:	66050568 	strvs	r0, [r5], -r8, ror #10
     724:	02002005 	andeq	r2, r0, #5
     728:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     72c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     730:	34054a01 	strcc	r4, [r5], #-2561	; 0xfffff5ff
     734:	4a24054d 	bmi	901c70 <_bss_end+0x8eff80>
     738:	05823405 	streq	r3, [r2, #1029]	; 0x405
     73c:	22052e26 	andcs	r2, r5, #608	; 0x260
     740:	8232052f 	eorshi	r0, r2, #197132288	; 0xbc00000
     744:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     748:	2e053017 	mcrcs	0, 0, r3, cr5, cr7, {0}
     74c:	03040200 	movweq	r0, #16896	; 0x4200
     750:	001e054a 	andseq	r0, lr, sl, asr #10
     754:	4a030402 	bmi	c1764 <_bss_end+0xafa74>
     758:	02002005 	andeq	r2, r0, #5
     75c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     760:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     764:	3d05bb02 	vstrcc	d11, [r5, #-8]
     768:	02040200 	andeq	r0, r4, #0, 4
     76c:	0024052e 	eoreq	r0, r4, lr, lsr #10
     770:	66020402 	strvs	r0, [r2], -r2, lsl #8
     774:	02003d05 	andeq	r3, r0, #320	; 0x140
     778:	05820204 	streq	r0, [r2, #516]	; 0x204
     77c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     780:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
     784:	02040200 	andeq	r0, r4, #0, 4
     788:	851d052d 	ldrhi	r0, [sp, #-1325]	; 0xfffffad3
     78c:	05821f05 	streq	r1, [r2, #3845]	; 0xf05
     790:	20054b1e 	andcs	r4, r5, lr, lsl fp
     794:	4c0f0582 	cfstr32mi	mvfx0, [pc], {130}	; 0x82
     798:	70030905 	andvc	r0, r3, r5, lsl #18
     79c:	01054f66 	tsteq	r5, r6, ror #30
     7a0:	822e0c03 	eorhi	r0, lr, #768	; 0x300
     7a4:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
     7a8:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
     7ac:	87030620 	strhi	r0, [r3, -r0, lsr #12]
     7b0:	0105827f 	tsteq	r5, pc, ror r2
     7b4:	9e00f903 	vmlals.f16	s30, s0, s6	; <UNPREDICTABLE>
     7b8:	0a024aba 	beq	932a8 <_bss_end+0x815b8>
     7bc:	dd010100 	stfles	f0, [r1, #-0]
     7c0:	03000003 	movweq	r0, #3
     7c4:	0000c300 	andeq	ip, r0, r0, lsl #6
     7c8:	fb010200 	blx	40fd2 <_bss_end+0x2f2e2>
     7cc:	01000d0e 	tsteq	r0, lr, lsl #26
     7d0:	00010101 	andeq	r0, r1, r1, lsl #2
     7d4:	00010000 	andeq	r0, r1, r0
     7d8:	6d2f0100 	stfvss	f0, [pc, #-0]	; 7e0 <CPSR_IRQ_INHIBIT+0x760>
     7dc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     7e0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     7e4:	4b2f7372 	blmi	bdd5b4 <_bss_end+0xbcb8c4>
     7e8:	2f616275 	svccs	0x00616275
     7ec:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     7f0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     7f4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     7f8:	614d6f72 	hvcvs	55026	; 0xd6f2
     7fc:	652f6574 	strvs	r6, [pc, #-1396]!	; 290 <CPSR_IRQ_INHIBIT+0x210>
     800:	706d6178 	rsbvc	r6, sp, r8, ror r1
     804:	2f73656c 	svccs	0x0073656c
     808:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     80c:	6b2f4332 	blvs	bd14dc <_bss_end+0xbbf7ec>
     810:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     814:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     818:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     81c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     820:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 65c <CPSR_IRQ_INHIBIT+0x5dc>
     824:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     828:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     82c:	4b2f7372 	blmi	bdd5fc <_bss_end+0xbcb90c>
     830:	2f616275 	svccs	0x00616275
     834:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     838:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     83c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     840:	614d6f72 	hvcvs	55026	; 0xd6f2
     844:	652f6574 	strvs	r6, [pc, #-1396]!	; 2d8 <CPSR_IRQ_INHIBIT+0x258>
     848:	706d6178 	rsbvc	r6, sp, r8, ror r1
     84c:	2f73656c 	svccs	0x0073656c
     850:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     854:	6b2f4332 	blvs	bd1524 <_bss_end+0xbbf834>
     858:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     85c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     860:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     864:	72642f65 	rsbvc	r2, r4, #404	; 0x194
     868:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     86c:	6d000073 	stcvs	0, cr0, [r0, #-460]	; 0xfffffe34
     870:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     874:	632e726f 			; <UNDEFINED> instruction: 0x632e726f
     878:	01007070 	tsteq	r0, r0, ror r0
     87c:	6f6d0000 	svcvs	0x006d0000
     880:	6f74696e 	svcvs	0x0074696e
     884:	00682e72 	rsbeq	r2, r8, r2, ror lr
     888:	00000002 	andeq	r0, r0, r2
     88c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     890:	00915402 	addseq	r5, r1, r2, lsl #8
     894:	0e051600 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx0
     898:	322605d7 	eorcc	r0, r6, #901775360	; 0x35c00000
     89c:	22020105 	andcs	r0, r2, #1073741825	; 0x40000001
     8a0:	9e090314 	mcrls	3, 0, r0, cr9, cr4, {0}
     8a4:	05831105 	streq	r1, [r3, #261]	; 0x105
     8a8:	22054c17 	andcs	r4, r5, #5888	; 0x1700
     8ac:	01040200 	mrseq	r0, R12_usr
     8b0:	0020054a 	eoreq	r0, r0, sl, asr #10
     8b4:	4a010402 	bmi	418c4 <_bss_end+0x2fbd4>
     8b8:	05681b05 	strbeq	r1, [r8, #-2821]!	; 0xfffff4fb
     8bc:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     8c0:	24054a03 	strcs	r4, [r5], #-2563	; 0xfffff5fd
     8c4:	03040200 	movweq	r0, #16896	; 0x4200
     8c8:	000d054a 	andeq	r0, sp, sl, asr #10
     8cc:	68020402 	stmdavs	r2, {r1, sl}
     8d0:	02001c05 	andeq	r1, r0, #1280	; 0x500
     8d4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     8d8:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     8dc:	25054a02 	strcs	r4, [r5, #-2562]	; 0xfffff5fe
     8e0:	02040200 	andeq	r0, r4, #0, 4
     8e4:	0028054a 	eoreq	r0, r8, sl, asr #10
     8e8:	4a020402 	bmi	818f8 <_bss_end+0x6fc08>
     8ec:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     8f0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     8f4:	04020009 	streq	r0, [r2], #-9
     8f8:	05054802 	streq	r4, [r5, #-2050]	; 0xfffff7fe
     8fc:	02040200 	andeq	r0, r4, #0, 4
     900:	89010580 	stmdbhi	r1, {r7, r8, sl}
     904:	05661203 	strbeq	r1, [r6, #-515]!	; 0xfffffdfd
     908:	22058317 	andcs	r8, r5, #1543503872	; 0x5c000000
     90c:	01040200 	mrseq	r0, R12_usr
     910:	0020054a 	eoreq	r0, r0, sl, asr #10
     914:	4a010402 	bmi	41924 <_bss_end+0x2fc34>
     918:	05681b05 	strbeq	r1, [r8, #-2821]!	; 0xfffff4fb
     91c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     920:	24054a03 	strcs	r4, [r5], #-2563	; 0xfffff5fd
     924:	03040200 	movweq	r0, #16896	; 0x4200
     928:	0032054a 	eorseq	r0, r2, sl, asr #10
     92c:	68020402 	stmdavs	r2, {r1, sl}
     930:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
     934:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     938:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
     93c:	4a054a02 	bmi	15314c <_bss_end+0x14145c>
     940:	02040200 	andeq	r0, r4, #0, 4
     944:	004d054a 	subeq	r0, sp, sl, asr #10
     948:	4a020402 	bmi	81958 <_bss_end+0x6fc68>
     94c:	02000d05 	andeq	r0, r0, #320	; 0x140
     950:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     954:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
     958:	22054a02 	andcs	r4, r5, #8192	; 0x2000
     95c:	02040200 	andeq	r0, r4, #0, 4
     960:	0020054a 	eoreq	r0, r0, sl, asr #10
     964:	4a020402 	bmi	81974 <_bss_end+0x6fc84>
     968:	02002b05 	andeq	r2, r0, #5120	; 0x1400
     96c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     970:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     974:	4d054a02 	vstrmi	s8, [r5, #-8]
     978:	02040200 	andeq	r0, r4, #0, 4
     97c:	0030052e 	eorseq	r0, r0, lr, lsr #10
     980:	4a020402 	bmi	81990 <_bss_end+0x6fca0>
     984:	02000905 	andeq	r0, r0, #81920	; 0x14000
     988:	052c0204 	streq	r0, [ip, #-516]!	; 0xfffffdfc
     98c:	04020005 	streq	r0, [r2], #-5
     990:	17058002 	strne	r8, [r5, -r2]
     994:	0022058a 	eoreq	r0, r2, sl, lsl #11
     998:	4a030402 	bmi	c19a8 <_bss_end+0xafcb8>
     99c:	02002005 	andeq	r2, r0, #5
     9a0:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
     9a4:	04020009 	streq	r0, [r2], #-9
     9a8:	15056802 	strne	r6, [r5, #-2050]	; 0xfffff7fe
     9ac:	02040200 	andeq	r0, r4, #0, 4
     9b0:	001e054a 	andseq	r0, lr, sl, asr #10
     9b4:	4a020402 	bmi	819c4 <_bss_end+0x6fcd4>
     9b8:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     9bc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     9c0:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     9c4:	2e054a02 	vmlacs.f32	s8, s10, s4
     9c8:	02040200 	andeq	r0, r4, #0, 4
     9cc:	0031052e 	eorseq	r0, r1, lr, lsr #10
     9d0:	4a020402 	bmi	819e0 <_bss_end+0x6fcf0>
     9d4:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     9d8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     9dc:	04020005 	streq	r0, [r2], #-5
     9e0:	01054802 	tsteq	r5, r2, lsl #16
     9e4:	05058a86 	streq	r8, [r5, #-2694]	; 0xfffff57a
     9e8:	680905bb 	stmdavs	r9, {r0, r1, r3, r4, r5, r7, r8, sl}
     9ec:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     9f0:	1f054a21 	svcne	0x00054a21
     9f4:	2e35054a 	cdpcs	5, 3, cr0, cr5, cr10, {2}
     9f8:	054a2a05 	strbeq	r2, [sl, #-2565]	; 0xfffff5fb
     9fc:	38052e36 	stmdacc	r5, {r1, r2, r4, r5, r9, sl, fp, sp}
     a00:	4b14052e 	blmi	501ec0 <_bss_end+0x4f01d0>
     a04:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     a08:	05678614 	strbeq	r8, [r7, #-1556]!	; 0xfffff9ec
     a0c:	12054a09 	andne	r4, r5, #36864	; 0x9000
     a10:	4c0d0569 	cfstr32mi	mvfx0, [sp], {105}	; 0x69
     a14:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     a18:	059f1705 	ldreq	r1, [pc, #1797]	; 1125 <CPSR_IRQ_INHIBIT+0x10a5>
     a1c:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     a20:	25054a03 	strcs	r4, [r5, #-2563]	; 0xfffff5fd
     a24:	03040200 	movweq	r0, #16896	; 0x4200
     a28:	00170582 	andseq	r0, r7, r2, lsl #11
     a2c:	4c020402 	cfstrsmi	mvf0, [r2], {2}
     a30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     a34:	05d40204 	ldrbeq	r0, [r4, #516]	; 0x204
     a38:	0d058716 	stceq	7, cr8, [r5, #-88]	; 0xffffffa8
     a3c:	2f01054c 	svccs	0x0001054c
     a40:	9f130569 	svcls	0x00130569
     a44:	05680d05 	strbeq	r0, [r8, #-3333]!	; 0xfffff2fb
     a48:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
     a4c:	0905a333 	stmdbeq	r5, {r0, r1, r4, r5, r8, r9, sp, pc}
     a50:	830e054a 	movwhi	r0, #58698	; 0xe54a
     a54:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
     a58:	01054c0d 	tsteq	r5, sp, lsl #24
     a5c:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
     a60:	681205bb 	ldmdavs	r2, {r0, r1, r3, r4, r5, r7, r8, sl}
     a64:	69160586 	ldmdbvs	r6, {r1, r2, r7, r8, sl}
     a68:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
     a6c:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
     a70:	1205d709 	andne	sp, r5, #2359296	; 0x240000
     a74:	6827054c 	stmdavs	r7!, {r2, r3, r6, r8, sl}
     a78:	05ba2d05 	ldreq	r2, [sl, #3333]!	; 0xd05
     a7c:	11054a10 	tstne	r5, r0, lsl sl
     a80:	4a2d052e 	bmi	b41f40 <_bss_end+0xb30250>
     a84:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
     a88:	0a052f0f 	beq	14c6cc <_bss_end+0x13a9dc>
     a8c:	610505a0 	smlatbvs	r5, r0, r5, r0
     a90:	68100536 	ldmdavs	r0, {r1, r2, r4, r5, r8, sl}
     a94:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
     a98:	13054a22 	movwne	r4, #23074	; 0x5a22
     a9c:	2f0a052e 	svccs	0x000a052e
     aa0:	05690c05 	strbeq	r0, [r9, #-3077]!	; 0xfffff3fb
     aa4:	0f052e0d 	svceq	0x00052e0d
     aa8:	4b06054a 	blmi	181fd8 <_bss_end+0x1702e8>
     aac:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
     ab0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
     ab4:	17054a03 	strne	r4, [r5, -r3, lsl #20]
     ab8:	03040200 	movweq	r0, #16896	; 0x4200
     abc:	001b059e 	mulseq	fp, lr, r5
     ac0:	68020402 	stmdavs	r2, {r1, sl}
     ac4:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
     ac8:	05820204 	streq	r0, [r2, #516]	; 0x204
     acc:	0402000e 	streq	r0, [r2], #-14
     ad0:	20054a02 	andcs	r4, r5, r2, lsl #20
     ad4:	02040200 	andeq	r0, r4, #0, 4
     ad8:	0021054b 	eoreq	r0, r1, fp, asr #10
     adc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     ae0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ae4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     ae8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     aec:	21058202 	tstcs	r5, r2, lsl #4
     af0:	02040200 	andeq	r0, r4, #0, 4
     af4:	0017054a 	andseq	r0, r7, sl, asr #10
     af8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     afc:	02001005 	andeq	r1, r0, #5
     b00:	052f0204 	streq	r0, [pc, #-516]!	; 904 <CPSR_IRQ_INHIBIT+0x884>
     b04:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     b08:	13052e02 	movwne	r2, #24066	; 0x5e02
     b0c:	02040200 	andeq	r0, r4, #0, 4
     b10:	0005054a 	andeq	r0, r5, sl, asr #10
     b14:	46020402 	strmi	r0, [r2], -r2, lsl #8
     b18:	82880105 	addhi	r0, r8, #1073741825	; 0x40000001
     b1c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
     b20:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
     b24:	e1030627 	tst	r3, r7, lsr #12
     b28:	0105827e 	tsteq	r5, lr, ror r2
     b2c:	9e019f03 	cdpls	15, 0, cr9, cr1, cr3, {0}
     b30:	0a024a9e 	beq	935b0 <_bss_end+0x818c0>
     b34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b38:	02050001 	andeq	r0, r5, #1
     b3c:	0000979c 	muleq	r0, ip, r7
     b40:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
     b44:	05678310 	strbeq	r8, [r7, #-784]!	; 0xfffffcf0
     b48:	08026701 	stmdaeq	r2, {r0, r8, r9, sl, sp, lr}
     b4c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b50:	02050001 	andeq	r0, r5, #1
     b54:	000097d4 	ldrdeq	r9, [r0], -r4
     b58:	05012103 	streq	r2, [r1, #-259]	; 0xfffffefd
     b5c:	17058312 	smladne	r5, r2, r3, r8
     b60:	4a05054a 	bmi	142090 <_bss_end+0x1303a0>
     b64:	674c1405 	strbvs	r1, [ip, -r5, lsl #8]
     b68:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     b6c:	17056912 	smladne	r5, r2, r9, r6
     b70:	4a05054a 	bmi	1420a0 <_bss_end+0x1303b0>
     b74:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
     b78:	1f054b16 	svcne	0x00054b16
     b7c:	2e14054a 	cfmac32cs	mvfx0, mvfx4, mvfx10
     b80:	024c0105 	subeq	r0, ip, #1073741825	; 0x40000001
     b84:	01010006 	tsteq	r1, r6
     b88:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     b8c:	00985c02 	addseq	r5, r8, r2, lsl #24
     b90:	00c00300 	sbceq	r0, r0, r0, lsl #6
     b94:	83130501 	tsthi	r3, #4194304	; 0x400000
     b98:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
     b9c:	01010008 	tsteq	r1, r8
     ba0:	00000806 	andeq	r0, r0, r6, lsl #16
     ba4:	02190003 	andseq	r0, r9, #3
     ba8:	01020000 	mrseq	r0, (UNDEF: 2)
     bac:	000d0efb 	strdeq	r0, [sp], -fp
     bb0:	01010101 	tsteq	r1, r1, lsl #2
     bb4:	01000000 	mrseq	r0, (UNDEF: 0)
     bb8:	2f010000 	svccs	0x00010000
     bbc:	2f746e6d 	svccs	0x00746e6d
     bc0:	73552f63 	cmpvc	r5, #396	; 0x18c
     bc4:	2f737265 	svccs	0x00737265
     bc8:	6162754b 	cmnvs	r2, fp, asr #10
     bcc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     bd0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     bd4:	5a2f7374 	bpl	bdd9ac <_bss_end+0xbcbcbc>
     bd8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; a4c <CPSR_IRQ_INHIBIT+0x9cc>
     bdc:	2f657461 	svccs	0x00657461
     be0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     be4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     be8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     bec:	2f433249 	svccs	0x00433249
     bf0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     bf4:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
     bf8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     bfc:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; a74 <CPSR_IRQ_INHIBIT+0x9f4>
     c00:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
     c04:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; a28 <CPSR_IRQ_INHIBIT+0x9a8>
     c08:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     c0c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     c10:	4b2f7372 	blmi	bdd9e0 <_bss_end+0xbcbcf0>
     c14:	2f616275 	svccs	0x00616275
     c18:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c1c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c20:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     c24:	614d6f72 	hvcvs	55026	; 0xd6f2
     c28:	652f6574 	strvs	r6, [pc, #-1396]!	; 6bc <CPSR_IRQ_INHIBIT+0x63c>
     c2c:	706d6178 	rsbvc	r6, sp, r8, ror r1
     c30:	2f73656c 	svccs	0x0073656c
     c34:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     c38:	6b2f4332 	blvs	bd1908 <_bss_end+0xbbfc18>
     c3c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     c40:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     c44:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     c48:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c4c:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; a88 <CPSR_IRQ_INHIBIT+0xa08>
     c50:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     c54:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     c58:	4b2f7372 	blmi	bdda28 <_bss_end+0xbcbd38>
     c5c:	2f616275 	svccs	0x00616275
     c60:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c64:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c68:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     c6c:	614d6f72 	hvcvs	55026	; 0xd6f2
     c70:	652f6574 	strvs	r6, [pc, #-1396]!	; 704 <CPSR_IRQ_INHIBIT+0x684>
     c74:	706d6178 	rsbvc	r6, sp, r8, ror r1
     c78:	2f73656c 	svccs	0x0073656c
     c7c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     c80:	6b2f4332 	blvs	bd1950 <_bss_end+0xbbfc60>
     c84:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     c88:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     c8c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     c90:	72642f65 	rsbvc	r2, r4, #404	; 0x194
     c94:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c98:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; ad4 <CPSR_IRQ_INHIBIT+0xa54>
     c9c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     ca0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     ca4:	4b2f7372 	blmi	bdda74 <_bss_end+0xbcbd84>
     ca8:	2f616275 	svccs	0x00616275
     cac:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     cb0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     cb4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     cb8:	614d6f72 	hvcvs	55026	; 0xd6f2
     cbc:	652f6574 	strvs	r6, [pc, #-1396]!	; 750 <CPSR_IRQ_INHIBIT+0x6d0>
     cc0:	706d6178 	rsbvc	r6, sp, r8, ror r1
     cc4:	2f73656c 	svccs	0x0073656c
     cc8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     ccc:	6b2f4332 	blvs	bd199c <_bss_end+0xbbfcac>
     cd0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     cd4:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     cd8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     cdc:	6f622f65 	svcvs	0x00622f65
     ce0:	2f647261 	svccs	0x00647261
     ce4:	30697072 	rsbcc	r7, r9, r2, ror r0
     ce8:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
     cec:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     cf0:	2f632f74 	svccs	0x00632f74
     cf4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     cf8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     cfc:	442f6162 	strtmi	r6, [pc], #-354	; d04 <CPSR_IRQ_INHIBIT+0xc84>
     d00:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     d04:	73746e65 	cmnvc	r4, #1616	; 0x650
     d08:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     d0c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     d10:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     d14:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     d18:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     d1c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     d20:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     d24:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     d28:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     d2c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     d30:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     d34:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     d38:	6972622f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, r9, sp, lr}^
     d3c:	73656764 	cmnvc	r5, #100, 14	; 0x1900000
     d40:	656b0000 	strbvs	r0, [fp, #-0]!
     d44:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     d48:	6165685f 	cmnvs	r5, pc, asr r8
     d4c:	00682e70 	rsbeq	r2, r8, r0, ror lr
     d50:	6f000001 	svcvs	0x00000001
     d54:	5f64656c 	svcpl	0x0064656c
     d58:	31647373 	smccc	18227	; 0x4733
     d5c:	2e363033 	mrccs	0, 1, r3, cr6, cr3, {1}
     d60:	00707063 	rsbseq	r7, r0, r3, rrx
     d64:	69000002 	stmdbvs	r0, {r1}
     d68:	682e6332 	stmdavs	lr!, {r1, r4, r5, r8, r9, sp, lr}
     d6c:	00000300 	andeq	r0, r0, r0, lsl #6
     d70:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
     d74:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     d78:	00000400 	andeq	r0, r0, r0, lsl #8
     d7c:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
     d80:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     d84:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
     d88:	00040068 	andeq	r0, r4, r8, rrx
     d8c:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
     d90:	73735f64 	cmnvc	r3, #100, 30	; 0x190
     d94:	30333164 	eorscc	r3, r3, r4, ror #2
     d98:	00682e36 	rsbeq	r2, r8, r6, lsr lr
     d9c:	6d000003 	stcvs	0, cr0, [r0, #-12]
     da0:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     da4:	682e726f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
     da8:	00000300 	andeq	r0, r0, r0, lsl #6
     dac:	70736964 	rsbsvc	r6, r3, r4, ror #18
     db0:	5f79616c 	svcpl	0x0079616c
     db4:	746f7270 	strbtvc	r7, [pc], #-624	; dbc <CPSR_IRQ_INHIBIT+0xd3c>
     db8:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; c04 <CPSR_IRQ_INHIBIT+0xb84>
     dbc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     dc0:	05000000 	streq	r0, [r0, #-0]
     dc4:	02050001 	andeq	r0, r5, #1
     dc8:	0000aba0 	andeq	sl, r0, r0, lsr #23
     dcc:	05013d03 	streq	r3, [r1, #-3331]	; 0xfffff2fd
     dd0:	01059f14 	tsteq	r5, r4, lsl pc
     dd4:	00080267 	andeq	r0, r8, r7, ror #4
     dd8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     ddc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     de0:	00988802 	addseq	r8, r8, r2, lsl #16
     de4:	48051a00 	stmdami	r5, {r9, fp, ip}
     de8:	0801059f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl}
     dec:	0a05a1cb 	beq	169520 <_bss_end+0x157830>
     df0:	4a1305bb 	bmi	4c24e4 <_bss_end+0x4b07f4>
     df4:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
     df8:	10054a05 	andne	r4, r5, r5, lsl #20
     dfc:	4c0d054b 	cfstr32mi	mvfx0, [sp], {75}	; 0x4b
     e00:	05691405 	strbeq	r1, [r9, #-1029]!	; 0xfffffbfb
     e04:	1f054a05 	svcne	0x00054a05
     e08:	9e15054b 	cfmac32ls	mvfx0, mvfx5, mvfx11
     e0c:	052e1005 	streq	r1, [lr, #-5]!
     e10:	0d05680c 	stceq	8, cr6, [r5, #-48]	; 0xffffffd0
     e14:	6b1b0567 	blvs	6c23b8 <_bss_end+0x6b06c8>
     e18:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     e1c:	2c054a22 			; <UNDEFINED> instruction: 0x2c054a22
     e20:	9e2f052e 	cfsh64ls	mvdx0, mvdx15, #30
     e24:	05820d05 	streq	r0, [r2, #3333]	; 0xd05
     e28:	40054e14 	andmi	r4, r5, r4, lsl lr
     e2c:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     e30:	d7d71d05 	ldrble	r1, [r7, r5, lsl #26]
     e34:	05d71005 	ldrbeq	r1, [r7, #5]
     e38:	0905d71d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, sl, ip, lr, pc}
     e3c:	4a1d05bc 	bmi	742534 <_bss_end+0x730844>
     e40:	05871405 	streq	r1, [r7, #1029]	; 0x405
     e44:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     e48:	d7170584 	ldrle	r0, [r7, -r4, lsl #11]
     e4c:	05661905 	strbeq	r1, [r6, #-2309]!	; 0xfffff6fb
     e50:	1d058409 	cfstrsne	mvf8, [r5, #-36]	; 0xffffffdc
     e54:	8714054a 	ldrhi	r0, [r4, -sl, asr #10]
     e58:	054a4005 	strbeq	r4, [sl, #-5]
     e5c:	1d05841c 	cfstrsne	mvf8, [r5, #-112]	; 0xffffff90
     e60:	d71005d7 			; <UNDEFINED> instruction: 0xd71005d7
     e64:	05d74305 	ldrbeq	r4, [r7, #773]	; 0x305
     e68:	1d054a49 	vstrne	s8, [r5, #-292]	; 0xfffffedc
     e6c:	bc09059f 	cfstr32lt	mvfx0, [r9], {159}	; 0x9f
     e70:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     e74:	40058714 	andmi	r8, r5, r4, lsl r7
     e78:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     e7c:	05d71005 	ldrbeq	r1, [r7, #5]
     e80:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     e84:	8814054a 	ldmdahi	r4, {r1, r3, r6, r8, sl}
     e88:	054a4005 	strbeq	r4, [sl, #-5]
     e8c:	1d05841c 	cfstrsne	mvf8, [r5, #-112]	; 0xffffff90
     e90:	d71005d7 			; <UNDEFINED> instruction: 0xd71005d7
     e94:	05d74605 	ldrbeq	r4, [r7, #1541]	; 0x605
     e98:	1d054a4c 	vstrne	s8, [r5, #-304]	; 0xfffffed0
     e9c:	bc09059f 	cfstr32lt	mvfx0, [r9], {159}	; 0x9f
     ea0:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     ea4:	40058714 	andmi	r8, r5, r4, lsl r7
     ea8:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     eac:	05d71d05 	ldrbeq	r1, [r7, #3333]	; 0xd05
     eb0:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     eb4:	8714054a 	ldrhi	r0, [r4, -sl, asr #10]
     eb8:	054a4005 	strbeq	r4, [sl, #-5]
     ebc:	1005841c 	andne	r8, r5, ip, lsl r4
     ec0:	bc0905d7 	cfstr32lt	mvfx0, [r9], {215}	; 0xd7
     ec4:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     ec8:	40058714 	andmi	r8, r5, r4, lsl r7
     ecc:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     ed0:	05d71d05 	ldrbeq	r1, [r7, #3333]	; 0xd05
     ed4:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     ed8:	8714054a 	ldrhi	r0, [r4, -sl, asr #10]
     edc:	054a4005 	strbeq	r4, [sl, #-5]
     ee0:	1005841c 	andne	r8, r5, ip, lsl r4
     ee4:	bc0905d7 	cfstr32lt	mvfx0, [r9], {215}	; 0xd7
     ee8:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     eec:	40058714 	andmi	r8, r5, r4, lsl r7
     ef0:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     ef4:	05d71d05 	ldrbeq	r1, [r7, #3333]	; 0xd05
     ef8:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     efc:	8714054a 	ldrhi	r0, [r4, -sl, asr #10]
     f00:	054a4005 	strbeq	r4, [sl, #-5]
     f04:	1005841c 	andne	r8, r5, ip, lsl r4
     f08:	bc0905d7 	cfstr32lt	mvfx0, [r9], {215}	; 0xd7
     f0c:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     f10:	40058714 	andmi	r8, r5, r4, lsl r7
     f14:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     f18:	05d71d05 	ldrbeq	r1, [r7, #3333]	; 0xd05
     f1c:	1d05d710 	stcne	7, cr13, [r5, #-64]	; 0xffffffc0
     f20:	d7d7d7d7 			; <UNDEFINED> instruction: 0xd7d7d7d7
     f24:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     f28:	0a054a1d 	beq	1537a4 <_bss_end+0x141ab4>
     f2c:	680c0585 	stmdavs	ip, {r0, r2, r7, r8, sl}
     f30:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     f34:	05d71005 	ldrbeq	r1, [r7, #5]
     f38:	18054a3c 	stmdane	r5, {r2, r3, r4, r5, r9, fp, lr}
     f3c:	bb260584 	bllt	982554 <_bss_end+0x970864>
     f40:	05ba2f05 	ldreq	r2, [sl, #3845]!	; 0xf05
     f44:	19056805 	stmdbne	r5, {r0, r2, fp, sp, lr}
     f48:	8301054a 	movwhi	r0, #5450	; 0x154a
     f4c:	830a0569 	movwhi	r0, #42345	; 0xa569
     f50:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     f54:	14054a05 	strne	r4, [r5], #-2565	; 0xfffff5fb
     f58:	4a40054f 	bmi	100249c <_bss_end+0xff07ac>
     f5c:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     f60:	0905d71d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, sl, ip, lr, pc}
     f64:	4a1d05bc 	bmi	74265c <_bss_end+0x73096c>
     f68:	05850505 	streq	r0, [r5, #1285]	; 0x505
     f6c:	0c054a0f 			; <UNDEFINED> instruction: 0x0c054a0f
     f70:	4a05054c 	bmi	1424a8 <_bss_end+0x1307b8>
     f74:	02000c05 	andeq	r0, r0, #1280	; 0x500
     f78:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     f7c:	0905680d 	stmdbeq	r5, {r0, r2, r3, fp, sp, lr}
     f80:	05827003 	streq	r7, [r2, #3]
     f84:	2e110301 	cdpcs	3, 1, cr0, cr1, cr1, {0}
     f88:	830c054d 	movwhi	r0, #50509	; 0xc54d
     f8c:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
     f90:	05bb0a05 	ldreq	r0, [fp, #2565]!	; 0xa05
     f94:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
     f98:	4d13054a 	cfldr32mi	mvfx0, [r3, #-296]	; 0xfffffed8
     f9c:	01040200 	mrseq	r0, R12_usr
     fa0:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     fa4:	004a0204 	subeq	r0, sl, r4, lsl #4
     fa8:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
     fac:	02001805 	andeq	r1, r0, #327680	; 0x50000
     fb0:	30060404 	andcc	r0, r6, r4, lsl #8
     fb4:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     fb8:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
     fbc:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     fc0:	0f054a04 	svceq	0x00054a04
     fc4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     fc8:	000e059e 	muleq	lr, lr, r5
     fcc:	4c040402 	cfstrsmi	mvf0, [r4], {2}
     fd0:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     fd4:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
     fd8:	04020009 	streq	r0, [r2], #-9
     fdc:	11058302 	tstne	r5, r2, lsl #6
     fe0:	02040200 	andeq	r0, r4, #0, 4
     fe4:	0012054a 	andseq	r0, r2, sl, asr #10
     fe8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     fec:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     ff0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     ff4:	04020005 	streq	r0, [r2], #-5
     ff8:	09054902 	stmdbeq	r5, {r1, r8, fp, lr}
     ffc:	66770385 	ldrbtvs	r0, [r7], -r5, lsl #7
    1000:	0a030105 	beq	c141c <_bss_end+0xaf72c>
    1004:	0a054d2e 	beq	1544c4 <_bss_end+0x1427d4>
    1008:	4a0905d7 	bmi	24276c <_bss_end+0x230a7c>
    100c:	4d4a0505 	cfstr64mi	mvdx0, [sl, #-20]	; 0xffffffec
    1010:	05670905 	strbeq	r0, [r7, #-2309]!	; 0xfffff6fb
    1014:	1f054a18 	svcne	0x00054a18
    1018:	4a27054a 	bmi	9c2548 <_bss_end+0x9b0858>
    101c:	05ba3305 	ldreq	r3, [sl, #773]!	; 0x305
    1020:	27054a2d 	strcs	r4, [r5, -sp, lsr #20]
    1024:	6609054a 	strvs	r0, [r9], -sl, asr #10
    1028:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    102c:	09054a27 	stmdbeq	r5, {r0, r1, r2, r5, r9, fp, lr}
    1030:	4a1805d8 	bmi	602798 <_bss_end+0x5f0aa8>
    1034:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    1038:	34054a27 	strcc	r4, [r5], #-2599	; 0xfffff5d9
    103c:	4a2e05ba 	bmi	b8272c <_bss_end+0xb70a3c>
    1040:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    1044:	1f059e09 	svcne	0x00059e09
    1048:	4a27054a 	bmi	9c2578 <_bss_end+0x9b0888>
    104c:	05d10905 	ldrbeq	r0, [r1, #2309]	; 0x905
    1050:	05693401 	strbeq	r3, [r9, #-1025]!	; 0xfffffbff
    1054:	0905830a 	stmdbeq	r5, {r1, r3, r8, r9, pc}
    1058:	4a05054a 	bmi	142588 <_bss_end+0x130898>
    105c:	05511405 	ldrbeq	r1, [r1, #-1029]	; 0xfffffbfb
    1060:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
    1064:	d71d0584 	ldrle	r0, [sp, -r4, lsl #11]
    1068:	d7d71005 	ldrble	r1, [r7, r5]
    106c:	05d71d05 	ldrbeq	r1, [r7, #3333]	; 0xd05
    1070:	05d7d710 	ldrbeq	sp, [r7, #1808]	; 0x710
    1074:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    1078:	8409054a 	strhi	r0, [r9], #-1354	; 0xfffffab6
    107c:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    1080:	18058613 	stmdane	r5, {r0, r1, r4, r9, sl, pc}
    1084:	4a22054c 	bmi	8825bc <_bss_end+0x8708cc>
    1088:	054a2a05 	strbeq	r2, [sl, #-2565]	; 0xfffff5fb
    108c:	0e059e0f 	cdpeq	14, 0, cr9, cr5, cr15, {0}
    1090:	0017054c 	andseq	r0, r7, ip, asr #10
    1094:	4a010402 	bmi	420a4 <_bss_end+0x303b4>
    1098:	05841405 	streq	r1, [r4, #1029]	; 0x405
    109c:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
    10a0:	bb120584 	bllt	4826b8 <_bss_end+0x4709c8>
    10a4:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    10a8:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    10ac:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    10b0:	1d056802 	stcne	8, cr6, [r5, #-8]
    10b4:	02040200 	andeq	r0, r4, #0, 4
    10b8:	0020054a 	eoreq	r0, r0, sl, asr #10
    10bc:	66020402 	strvs	r0, [r2], -r2, lsl #8
    10c0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    10c4:	00800204 	addeq	r0, r0, r4, lsl #4
    10c8:	88020402 	stmdahi	r2, {r1, sl}
    10cc:	02001d05 	andeq	r1, r0, #320	; 0x140
    10d0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    10d4:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    10d8:	82750302 	rsbshi	r0, r5, #134217728	; 0x8000000
    10dc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    10e0:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    10e4:	2e680309 	cdpcs	3, 6, cr0, cr8, cr9, {0}
    10e8:	25030105 	strcs	r0, [r3, #-261]	; 0xfffffefb
    10ec:	05054d2e 	streq	r4, [r5, #-3374]	; 0xfffff2d2
    10f0:	691605bb 	ldmdbvs	r6, {r0, r1, r3, r4, r5, r7, r8, sl}
    10f4:	05680505 	strbeq	r0, [r8, #-1285]!	; 0xfffffafb
    10f8:	05230819 	streq	r0, [r3, #-2073]!	; 0xfffff7e7
    10fc:	1905670d 	stmdbne	r5, {r0, r2, r3, r8, r9, sl, sp, lr}
    1100:	67110531 			; <UNDEFINED> instruction: 0x67110531
    1104:	054b0d05 	strbeq	r0, [fp, #-3333]	; 0xfffff2fb
    1108:	0d053219 	sfmeq	f3, 4, [r5, #-100]	; 0xffffff9c
    110c:	692a0568 	stmdbvs	sl!, {r3, r5, r6, r8, sl}
    1110:	054c1905 	strbeq	r1, [ip, #-2309]	; 0xfffff6fb
    1114:	0d054a12 	vstreq	s8, [r5, #-72]	; 0xffffffb8
    1118:	331905d8 	tstcc	r9, #216, 10	; 0x36000000
    111c:	05680d05 	strbeq	r0, [r8, #-3333]!	; 0xfffff2fb
    1120:	28056935 	stmdacs	r5, {r0, r2, r4, r5, r8, fp, sp, lr}
    1124:	681b054c 	ldmdavs	fp, {r2, r3, r6, r8, sl}
    1128:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    112c:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    1130:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1134:	2005ba03 	andcs	fp, r5, r3, lsl #20
    1138:	02040200 	andeq	r0, r4, #0, 4
    113c:	001a0567 	andseq	r0, sl, r7, ror #10
    1140:	ba020402 	blt	82150 <_bss_end+0x70460>
    1144:	02002805 	andeq	r2, r0, #327680	; 0x50000
    1148:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    114c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1150:	3105ba02 	tstcc	r5, r2, lsl #20
    1154:	02040200 	andeq	r0, r4, #0, 4
    1158:	001a052e 	andseq	r0, sl, lr, lsr #10
    115c:	4a020402 	bmi	8216c <_bss_end+0x7047c>
    1160:	02000d05 	andeq	r0, r0, #320	; 0x140
    1164:	05b90204 	ldreq	r0, [r9, #516]!	; 0x204
    1168:	0d058a19 	vstreq	s16, [r5, #-100]	; 0xffffff9c
    116c:	692c0568 	stmdbvs	ip!, {r3, r5, r6, r8, sl}
    1170:	054c1c05 	strbeq	r1, [ip, #-3077]	; 0xfffff3fb
    1174:	32056819 	andcc	r6, r5, #1638400	; 0x190000
    1178:	4a3c0582 	bmi	f02788 <_bss_end+0xef0a98>
    117c:	05f24105 	ldrbeq	r4, [r2, #261]!	; 0x105
    1180:	0d056816 	stceq	8, cr6, [r5, #-88]	; 0xffffffa8
    1184:	4c1f054a 	cfldr32mi	mvfx0, [pc], {74}	; 0x4a
    1188:	02002c05 	andeq	r2, r0, #1280	; 0x500
    118c:	05ba0104 	ldreq	r0, [sl, #260]!	; 0x104
    1190:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    1194:	3f052e01 	svccc	0x00052e01
    1198:	01040200 	mrseq	r0, R12_usr
    119c:	003805d6 	ldrsbteq	r0, [r8], -r6
    11a0:	ba010402 	blt	421b0 <_bss_end+0x304c0>
    11a4:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    11a8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    11ac:	30054c23 	andcc	r4, r5, r3, lsr #24
    11b0:	03040200 	movweq	r0, #16896	; 0x4200
    11b4:	003905ba 	ldrhteq	r0, [r9], -sl
    11b8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    11bc:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
    11c0:	05d60304 	ldrbeq	r0, [r6, #772]	; 0x304
    11c4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    11c8:	3205ba03 	andcc	fp, r5, #12288	; 0x3000
    11cc:	03040200 	movweq	r0, #16896	; 0x4200
    11d0:	0039052e 	eorseq	r0, r9, lr, lsr #10
    11d4:	4c020402 	cfstrsmi	mvf0, [r2], {2}
    11d8:	02004605 	andeq	r4, r0, #5242880	; 0x500000
    11dc:	05ba0204 	ldreq	r0, [sl, #516]!	; 0x204
    11e0:	04020044 	streq	r0, [r2], #-68	; 0xffffffbc
    11e4:	46056602 	strmi	r6, [r5], -r2, lsl #12
    11e8:	02040200 	andeq	r0, r4, #0, 4
    11ec:	005205ba 	ldrheq	r0, [r2], #-90	; 0xffffffa6
    11f0:	4a020402 	bmi	82200 <_bss_end+0x70510>
    11f4:	02004b05 	andeq	r4, r0, #5120	; 0x1400
    11f8:	05ba0204 	ldreq	r0, [sl, #516]!	; 0x204
    11fc:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    1200:	22056602 	andcs	r6, r5, #2097152	; 0x200000
    1204:	02040200 	andeq	r0, r4, #0, 4
    1208:	0034054d 	eorseq	r0, r4, sp, asr #10
    120c:	4a020402 	bmi	8221c <_bss_end+0x7052c>
    1210:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    1214:	05820204 	streq	r0, [r2, #516]	; 0x204
    1218:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    121c:	3f058202 	svccc	0x00058202
    1220:	02040200 	andeq	r0, r4, #0, 4
    1224:	0039052e 	eorseq	r0, r9, lr, lsr #10
    1228:	4a020402 	bmi	82238 <_bss_end+0x70548>
    122c:	02004d05 	andeq	r4, r0, #320	; 0x140
    1230:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1234:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    1238:	15052e02 	strne	r2, [r5, #-3586]	; 0xfffff1fe
    123c:	02040200 	andeq	r0, r4, #0, 4
    1240:	001105b5 			; <UNDEFINED> instruction: 0x001105b5
    1244:	80020402 	andhi	r0, r2, r2, lsl #8
    1248:	19031f05 	stmdbne	r3, {r0, r2, r8, r9, sl, fp, ip}
    124c:	002f0582 	eoreq	r0, pc, r2, lsl #11
    1250:	4a010402 	bmi	42260 <_bss_end+0x30570>
    1254:	02002805 	andeq	r2, r0, #327680	; 0x50000
    1258:	05d60104 	ldrbeq	r0, [r6, #260]	; 0x104
    125c:	33056823 	movwcc	r6, #22563	; 0x5823
    1260:	03040200 	movweq	r0, #16896	; 0x4200
    1264:	002c054a 	eoreq	r0, ip, sl, asr #10
    1268:	d6030402 	strle	r0, [r3], -r2, lsl #8
    126c:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1270:	05680204 	strbeq	r0, [r8, #-516]!	; 0xfffffdfc
    1274:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1278:	2805d602 	stmdacs	r5, {r1, r9, sl, ip, lr, pc}
    127c:	02040200 	andeq	r0, r4, #0, 4
    1280:	0035054a 	eorseq	r0, r5, sl, asr #10
    1284:	6c020402 	cfstrsvs	mvf0, [r2], {2}
    1288:	02003805 	andeq	r3, r0, #327680	; 0x50000
    128c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1290:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    1294:	3a058202 	bcc	161aa4 <_bss_end+0x14fdb4>
    1298:	02040200 	andeq	r0, r4, #0, 4
    129c:	004e0566 	subeq	r0, lr, r6, ror #10
    12a0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    12a4:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    12a8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    12ac:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    12b0:	22058502 	andcs	r8, r5, #8388608	; 0x800000
    12b4:	02040200 	andeq	r0, r4, #0, 4
    12b8:	003605d6 	ldrsbteq	r0, [r6], -r6
    12bc:	4a020402 	bmi	822cc <_bss_end+0x705dc>
    12c0:	02003805 	andeq	r3, r0, #327680	; 0x50000
    12c4:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    12c8:	04020044 	streq	r0, [r2], #-68	; 0xffffffbc
    12cc:	22054a02 	andcs	r4, r5, #8192	; 0x2000
    12d0:	02040200 	andeq	r0, r4, #0, 4
    12d4:	001505ba 			; <UNDEFINED> instruction: 0x001505ba
    12d8:	03020402 	movweq	r0, #9218	; 0x2402
    12dc:	11059e75 	tstne	r5, r5, ror lr
    12e0:	02040200 	andeq	r0, r4, #0, 4
    12e4:	03090580 	movweq	r0, #38272	; 0x9580
    12e8:	05827faa 	streq	r7, [r2, #4010]	; 0xfaa
    12ec:	4a140311 	bmi	501f38 <_bss_end+0x4f0248>
    12f0:	054a0e03 	strbeq	r0, [sl, #-3587]	; 0xfffff1fd
    12f4:	4a09030d 	bmi	241f30 <_bss_end+0x230240>
    12f8:	05521105 	ldrbeq	r1, [r2, #-261]	; 0xfffffefb
    12fc:	4a35030d 	bmi	d41f38 <_bss_end+0xd30248>
    1300:	08310105 	ldmdaeq	r1!, {r0, r2, r8}
    1304:	02009e20 	andeq	r9, r0, #32, 28	; 0x200
    1308:	66060104 	strvs	r0, [r6], -r4, lsl #2
    130c:	03062805 	movweq	r2, #26629	; 0x6805
    1310:	05827d82 	streq	r7, [r2, #3458]	; 0xd82
    1314:	02fe0301 	rscseq	r0, lr, #67108864	; 0x4000000
    1318:	024aba66 	subeq	fp, sl, #417792	; 0x66000
    131c:	0101000a 	tsteq	r1, sl
    1320:	1b050304 	blne	141f38 <_bss_end+0x130248>
    1324:	d0020500 	andle	r0, r2, r0, lsl #10
    1328:	030000ab 	movweq	r0, #171	; 0xab
    132c:	11050120 	tstne	r5, r0, lsr #2
    1330:	4a0d05a0 	bmi	3429b8 <_bss_end+0x330cc8>
    1334:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
    1338:	15054c20 	strne	r4, [r5, #-3104]	; 0xfffff3e0
    133c:	4a1e054a 	bmi	78286c <_bss_end+0x770b7c>
    1340:	05662005 	strbeq	r2, [r6, #-5]!
    1344:	0905a015 	stmdbeq	r5, {r0, r2, r4, sp, pc}
    1348:	0008022f 	andeq	r0, r8, pc, lsr #4
    134c:	03040101 	movweq	r0, #16641	; 0x4101
    1350:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
    1354:	00ac4002 	adceq	r4, ip, r2
    1358:	01200300 			; <UNDEFINED> instruction: 0x01200300
    135c:	05a01105 	streq	r1, [r0, #261]!	; 0x105
    1360:	19054a0d 	stmdbne	r5, {r0, r2, r3, r9, fp, lr}
    1364:	4c20054b 	cfstr32mi	mvfx0, [r0], #-300	; 0xfffffed4
    1368:	054a1505 	strbeq	r1, [sl, #-1285]	; 0xfffffafb
    136c:	20054a1e 	andcs	r4, r5, lr, lsl sl
    1370:	a0150566 	andsge	r0, r5, r6, ror #10
    1374:	022f0905 	eoreq	r0, pc, #81920	; 0x14000
    1378:	01010008 	tsteq	r1, r8
    137c:	1b050304 	blne	141f94 <_bss_end+0x1302a4>
    1380:	b0020500 	andlt	r0, r2, r0, lsl #10
    1384:	030000ac 	movweq	r0, #172	; 0xac
    1388:	11050120 	tstne	r5, r0, lsr #2
    138c:	4a0d05a0 	bmi	342a14 <_bss_end+0x330d24>
    1390:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
    1394:	1e054c15 	mcrne	12, 0, r4, cr5, cr5, {0}
    1398:	6622054a 	strtvs	r0, [r2], -sl, asr #10
    139c:	054a2005 	strbeq	r2, [sl, #-5]
    13a0:	09058415 	stmdbeq	r5, {r0, r2, r4, sl, pc}
    13a4:	0008022f 	andeq	r0, r8, pc, lsr #4
    13a8:	020b0101 	andeq	r0, fp, #1073741824	; 0x40000000
    13ac:	00030000 	andeq	r0, r3, r0
    13b0:	00000154 	andeq	r0, r0, r4, asr r1
    13b4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    13b8:	0101000d 	tsteq	r1, sp
    13bc:	00000101 	andeq	r0, r0, r1, lsl #2
    13c0:	00000100 	andeq	r0, r0, r0, lsl #2
    13c4:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    13c8:	2f632f74 	svccs	0x00632f74
    13cc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    13d0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    13d4:	442f6162 	strtmi	r6, [pc], #-354	; 13dc <CPSR_IRQ_INHIBIT+0x135c>
    13d8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    13dc:	73746e65 	cmnvc	r4, #1616	; 0x650
    13e0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    13e4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    13e8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    13ec:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    13f0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    13f4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    13f8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    13fc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1400:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1404:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1408:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    140c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1410:	2f632f74 	svccs	0x00632f74
    1414:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1418:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    141c:	442f6162 	strtmi	r6, [pc], #-354	; 1424 <CPSR_IRQ_INHIBIT+0x13a4>
    1420:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1424:	73746e65 	cmnvc	r4, #1616	; 0x650
    1428:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    142c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1430:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1434:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1438:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    143c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1440:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1444:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1448:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    144c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1450:	616f622f 	cmnvs	pc, pc, lsr #4
    1454:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    1458:	2f306970 	svccs	0x00306970
    145c:	006c6168 	rsbeq	r6, ip, r8, ror #2
    1460:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1464:	552f632f 	strpl	r6, [pc, #-815]!	; 113d <CPSR_IRQ_INHIBIT+0x10bd>
    1468:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    146c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1470:	6f442f61 	svcvs	0x00442f61
    1474:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1478:	2f73746e 	svccs	0x0073746e
    147c:	6f72655a 	svcvs	0x0072655a
    1480:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1484:	6178652f 	cmnvs	r8, pc, lsr #10
    1488:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    148c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1490:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1494:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1498:	2f6c656e 	svccs	0x006c656e
    149c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    14a0:	2f656475 	svccs	0x00656475
    14a4:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    14a8:	00737265 	rsbseq	r7, r3, r5, ror #4
    14ac:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
    14b0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    14b4:	70736964 	rsbsvc	r6, r3, r4, ror #18
    14b8:	2e79616c 	rpwcsez	f6, f1, #4.0
    14bc:	00707063 	rsbseq	r7, r0, r3, rrx
    14c0:	69000001 	stmdbvs	r0, {r0}
    14c4:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
    14c8:	00682e66 	rsbeq	r2, r8, r6, ror #28
    14cc:	70000002 	andvc	r0, r0, r2
    14d0:	70697265 	rsbvc	r7, r9, r5, ror #4
    14d4:	61726568 	cmnvs	r2, r8, ror #10
    14d8:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    14dc:	00000200 	andeq	r0, r0, r0, lsl #4
    14e0:	66696873 			; <UNDEFINED> instruction: 0x66696873
    14e4:	67657274 			; <UNDEFINED> instruction: 0x67657274
    14e8:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    14ec:	00682e72 	rsbeq	r2, r8, r2, ror lr
    14f0:	73000003 	movwvc	r0, #3
    14f4:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    14f8:	6964746e 	stmdbvs	r4!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    14fc:	616c7073 	smcvs	50947	; 0xc703
    1500:	00682e79 	rsbeq	r2, r8, r9, ror lr
    1504:	00000003 	andeq	r0, r0, r3
    1508:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    150c:	00ad1c02 	adceq	r1, sp, r2, lsl #24
    1510:	00fb0300 	rscseq	r0, fp, r0, lsl #6
    1514:	840f0501 	strhi	r0, [pc], #-1281	; 151c <CPSR_IRQ_INHIBIT+0x149c>
    1518:	a1bd0105 			; <UNDEFINED> instruction: 0xa1bd0105
    151c:	05830905 	streq	r0, [r3, #2309]	; 0x905
    1520:	10054a05 	andne	r4, r5, r5, lsl #20
    1524:	4c1e054b 	cfldr32mi	mvfx0, [lr], {75}	; 0x4b
    1528:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    152c:	10054a05 	andne	r4, r5, r5, lsl #20
    1530:	4c0d054b 	cfstr32mi	mvfx0, [sp], {75}	; 0x4b
    1534:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
    1538:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    153c:	0905830a 	stmdbeq	r5, {r1, r3, r8, r9, pc}
    1540:	4a05054a 	bmi	142a70 <_bss_end+0x130d80>
    1544:	054d1a05 	strbeq	r1, [sp, #-2565]	; 0xfffff5fb
    1548:	09054c0d 	stmdbeq	r5, {r0, r2, r3, sl, fp, lr}
    154c:	3301057e 	movwcc	r0, #5502	; 0x157e
    1550:	830c0569 	movwhi	r0, #50537	; 0xc569
    1554:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
    1558:	05bb0a05 	ldreq	r0, [fp, #2565]!	; 0xa05
    155c:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
    1560:	4d0d054a 	cfstr32mi	mvfx0, [sp, #-296]	; 0xfffffed8
    1564:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    1568:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    156c:	12056601 	andne	r6, r5, #1048576	; 0x100000
    1570:	01040200 	mrseq	r0, R12_usr
    1574:	4e44052e 	cdpmi	5, 4, cr0, cr4, cr14, {1}
    1578:	052e4805 	streq	r4, [lr, #-2053]!	; 0xfffff7fb
    157c:	1d052e4c 	stcne	14, cr2, [r5, #-304]	; 0xfffffed0
    1580:	0309054a 	movweq	r0, #38218	; 0x954a
    1584:	0550ba77 	ldrbeq	fp, [r0, #-2679]	; 0xfffff589
    1588:	05853201 	streq	r3, [r5, #513]	; 0x201
    158c:	0905830a 	stmdbeq	r5, {r1, r3, r8, r9, pc}
    1590:	4a05054a 	bmi	142ac0 <_bss_end+0x130dd0>
    1594:	054b1005 	strbeq	r1, [fp, #-5]
    1598:	01054c0c 	tsteq	r5, ip, lsl #24
    159c:	009e824b 	addseq	r8, lr, fp, asr #4
    15a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    15a4:	06120566 	ldreq	r0, [r2], -r6, ror #10
    15a8:	827ecf03 	rsbshi	ip, lr, #3, 30
    15ac:	b1030105 	tstlt	r3, r5, lsl #2
    15b0:	4a9e4a01 	bmi	fe793dbc <_bss_end+0xfe7820cc>
    15b4:	01000a02 	tsteq	r0, r2, lsl #20
    15b8:	00028c01 	andeq	r8, r2, r1, lsl #24
    15bc:	49000300 	stmdbmi	r0, {r8, r9}
    15c0:	02000001 	andeq	r0, r0, #1
    15c4:	0d0efb01 	vstreq	d15, [lr, #-4]
    15c8:	01010100 	mrseq	r0, (UNDEF: 17)
    15cc:	00000001 	andeq	r0, r0, r1
    15d0:	01000001 	tsteq	r0, r1
    15d4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    15d8:	552f632f 	strpl	r6, [pc, #-815]!	; 12b1 <CPSR_IRQ_INHIBIT+0x1231>
    15dc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    15e0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    15e4:	6f442f61 	svcvs	0x00442f61
    15e8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    15ec:	2f73746e 	svccs	0x0073746e
    15f0:	6f72655a 	svcvs	0x0072655a
    15f4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    15f8:	6178652f 	cmnvs	r8, pc, lsr #10
    15fc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1600:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1604:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1608:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    160c:	2f6c656e 	svccs	0x006c656e
    1610:	2f637273 	svccs	0x00637273
    1614:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1618:	00737265 	rsbseq	r7, r3, r5, ror #4
    161c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1620:	552f632f 	strpl	r6, [pc, #-815]!	; 12f9 <CPSR_IRQ_INHIBIT+0x1279>
    1624:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1628:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    162c:	6f442f61 	svcvs	0x00442f61
    1630:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1634:	2f73746e 	svccs	0x0073746e
    1638:	6f72655a 	svcvs	0x0072655a
    163c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1640:	6178652f 	cmnvs	r8, pc, lsr #10
    1644:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1648:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    164c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1650:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1654:	2f6c656e 	svccs	0x006c656e
    1658:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    165c:	2f656475 	svccs	0x00656475
    1660:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    1664:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    1668:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    166c:	2f006c61 	svccs	0x00006c61
    1670:	2f746e6d 	svccs	0x00746e6d
    1674:	73552f63 	cmpvc	r5, #396	; 0x18c
    1678:	2f737265 	svccs	0x00737265
    167c:	6162754b 	cmnvs	r2, fp, asr #10
    1680:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1684:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1688:	5a2f7374 	bpl	bde460 <_bss_end+0xbcc770>
    168c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1500 <CPSR_IRQ_INHIBIT+0x1480>
    1690:	2f657461 	svccs	0x00657461
    1694:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1698:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    169c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    16a0:	2f433249 	svccs	0x00433249
    16a4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    16a8:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    16ac:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    16b0:	642f6564 	strtvs	r6, [pc], #-1380	; 16b8 <CPSR_IRQ_INHIBIT+0x1638>
    16b4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    16b8:	00007372 	andeq	r7, r0, r2, ror r3
    16bc:	66696873 			; <UNDEFINED> instruction: 0x66696873
    16c0:	67657274 			; <UNDEFINED> instruction: 0x67657274
    16c4:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    16c8:	70632e72 	rsbvc	r2, r3, r2, ror lr
    16cc:	00010070 	andeq	r0, r1, r0, ror r0
    16d0:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    16d4:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    16d8:	00020068 	andeq	r0, r2, r8, rrx
    16dc:	72657000 	rsbvc	r7, r5, #0
    16e0:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    16e4:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    16e8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    16ec:	70670000 	rsbvc	r0, r7, r0
    16f0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    16f4:	00000300 	andeq	r0, r0, r0, lsl #6
    16f8:	66696873 			; <UNDEFINED> instruction: 0x66696873
    16fc:	67657274 			; <UNDEFINED> instruction: 0x67657274
    1700:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1704:	00682e72 	rsbeq	r2, r8, r2, ror lr
    1708:	00000003 	andeq	r0, r0, r3
    170c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1710:	00af8002 	adceq	r8, pc, r2
    1714:	16051800 	strne	r1, [r5], -r0, lsl #16
    1718:	080105d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl}
    171c:	0905a123 	stmdbeq	r5, {r0, r1, r5, r8, sp, pc}
    1720:	4a050583 	bmi	142d34 <_bss_end+0x131044>
    1724:	054b1005 	strbeq	r1, [fp, #-5]
    1728:	09054e1b 	stmdbeq	r5, {r0, r1, r3, r4, r9, sl, fp, lr}
    172c:	4a0505d6 	bmi	142e8c <_bss_end+0x13119c>
    1730:	054b1005 	strbeq	r1, [fp, #-5]
    1734:	09054c1b 	stmdbeq	r5, {r0, r1, r3, r4, sl, fp, lr}
    1738:	4a0505d6 	bmi	142e98 <_bss_end+0x1311a8>
    173c:	054c1705 	strbeq	r1, [ip, #-1797]	; 0xfffff8fb
    1740:	1b05bb10 	blne	170388 <_bss_end+0x15e698>
    1744:	d609054d 	strle	r0, [r9], -sp, asr #10
    1748:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    174c:	05bb4c17 	ldreq	r4, [fp, #3095]!	; 0xc17
    1750:	1c05bb10 			; <UNDEFINED> instruction: 0x1c05bb10
    1754:	05bbbb4e 	ldreq	fp, [fp, #2894]!	; 0xb4e
    1758:	0c05bc0d 	stceq	12, cr11, [r5], {13}
    175c:	2f010568 	svccs	0x00010568
    1760:	830a0585 	movwhi	r0, #42373	; 0xa585
    1764:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1768:	1c054a05 			; <UNDEFINED> instruction: 0x1c054a05
    176c:	05bbbb4e 	ldreq	fp, [fp, #2894]!	; 0xb4e
    1770:	bbbbbd13 	bllt	feef0bc4 <_bss_end+0xfeedeed4>
    1774:	05bc0d05 	ldreq	r0, [ip, #3333]!	; 0xd05
    1778:	82740309 	rsbshi	r0, r4, #603979776	; 0x24000000
    177c:	0d030105 	stfeqs	f0, [r3, #-20]	; 0xffffffec
    1780:	0c05692e 			; <UNDEFINED> instruction: 0x0c05692e
    1784:	4b010583 	blmi	42d98 <_bss_end+0x310a8>
    1788:	bb0a0585 	bllt	282da4 <_bss_end+0x2710b4>
    178c:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1790:	15054a05 	strne	r4, [r5, #-2565]	; 0xfffff5fb
    1794:	05bcbd50 	ldreq	fp, [ip, #3408]!	; 0xd50
    1798:	1305bd0c 	movwne	fp, #23820	; 0x5d0c
    179c:	03040200 	movweq	r0, #16896	; 0x4200
    17a0:	0005054a 	andeq	r0, r5, sl, asr #10
    17a4:	d6020402 	strle	r0, [r2], -r2, lsl #8
    17a8:	05861505 	streq	r1, [r6, #1285]	; 0x505
    17ac:	1305bd0c 	movwne	fp, #23820	; 0x5d0c
    17b0:	03040200 	movweq	r0, #16896	; 0x4200
    17b4:	0005054a 	andeq	r0, r5, sl, asr #10
    17b8:	d6020402 	strle	r0, [r2], -r2, lsl #8
    17bc:	05861505 	streq	r1, [r6, #1285]	; 0x505
    17c0:	d6680309 	strbtle	r0, [r8], -r9, lsl #6
    17c4:	19030105 	stmdbne	r3, {r0, r2, r8}
    17c8:	0a05692e 	beq	15bc88 <_bss_end+0x149f98>
    17cc:	4a0905bb 	bmi	242ec0 <_bss_end+0x2311d0>
    17d0:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    17d4:	0e055015 	mcreq	0, 0, r5, cr5, cr5, {0}
    17d8:	001705bd 			; <UNDEFINED> instruction: 0x001705bd
    17dc:	4a010402 	bmi	427ec <_bss_end+0x30afc>
    17e0:	05681905 	strbeq	r1, [r8, #-2309]!	; 0xfffff6fb
    17e4:	2c054a27 			; <UNDEFINED> instruction: 0x2c054a27
    17e8:	4a32052e 	bmi	c82ca8 <_bss_end+0xc70fb8>
    17ec:	d72e1905 	strle	r1, [lr, -r5, lsl #18]!
    17f0:	05bc1005 	ldreq	r1, [ip, #5]!
    17f4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    17f8:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    17fc:	02040200 	andeq	r0, r4, #0, 4
    1800:	851905d6 	ldrhi	r0, [r9, #-1494]	; 0xfffffa2a
    1804:	05bc1005 	ldreq	r1, [ip, #5]!
    1808:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    180c:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    1810:	02040200 	andeq	r0, r4, #0, 4
    1814:	000505d6 	ldrdeq	r0, [r5], -r6
    1818:	03020402 	movweq	r0, #9218	; 0x2402
    181c:	15058276 	strne	r8, [r5, #-630]	; 0xfffffd8a
    1820:	05820f03 	streq	r0, [r2, #3843]	; 0xf03
    1824:	d6690309 	strbtle	r0, [r9], -r9, lsl #6
    1828:	18030105 	stmdane	r3, {r0, r2, r8}
    182c:	009e662e 	addseq	r6, lr, lr, lsr #12
    1830:	06010402 	streq	r0, [r1], -r2, lsl #8
    1834:	06280566 	strteq	r0, [r8], -r6, ror #10
    1838:	827f8503 	rsbshi	r8, pc, #12582912	; 0xc00000
    183c:	fb030105 	blx	c1c5a <_bss_end+0xaff6a>
    1840:	4a9e9e00 	bmi	fe7a9048 <_bss_end+0xfe797358>
    1844:	01000a02 	tsteq	r0, r2, lsl #20
    1848:	0001cf01 	andeq	ip, r1, r1, lsl #30
    184c:	2f000300 	svccs	0x00000300
    1850:	02000001 	andeq	r0, r0, #1
    1854:	0d0efb01 	vstreq	d15, [lr, #-4]
    1858:	01010100 	mrseq	r0, (UNDEF: 17)
    185c:	00000001 	andeq	r0, r0, r1
    1860:	01000001 	tsteq	r0, r1
    1864:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1868:	552f632f 	strpl	r6, [pc, #-815]!	; 1541 <CPSR_IRQ_INHIBIT+0x14c1>
    186c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1870:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1874:	6f442f61 	svcvs	0x00442f61
    1878:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    187c:	2f73746e 	svccs	0x0073746e
    1880:	6f72655a 	svcvs	0x0072655a
    1884:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1888:	6178652f 	cmnvs	r8, pc, lsr #10
    188c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1890:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1894:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1898:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    189c:	2f6c656e 	svccs	0x006c656e
    18a0:	2f637273 	svccs	0x00637273
    18a4:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    18a8:	00737265 	rsbseq	r7, r3, r5, ror #4
    18ac:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    18b0:	552f632f 	strpl	r6, [pc, #-815]!	; 1589 <CPSR_IRQ_INHIBIT+0x1509>
    18b4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    18b8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    18bc:	6f442f61 	svcvs	0x00442f61
    18c0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    18c4:	2f73746e 	svccs	0x0073746e
    18c8:	6f72655a 	svcvs	0x0072655a
    18cc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    18d0:	6178652f 	cmnvs	r8, pc, lsr #10
    18d4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    18d8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    18dc:	4332492d 	teqmi	r2, #737280	; 0xb4000
    18e0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    18e4:	2f6c656e 	svccs	0x006c656e
    18e8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    18ec:	2f656475 	svccs	0x00656475
    18f0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    18f4:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    18f8:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    18fc:	2f006c61 	svccs	0x00006c61
    1900:	2f746e6d 	svccs	0x00746e6d
    1904:	73552f63 	cmpvc	r5, #396	; 0x18c
    1908:	2f737265 	svccs	0x00737265
    190c:	6162754b 	cmnvs	r2, fp, asr #10
    1910:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1914:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1918:	5a2f7374 	bpl	bde6f0 <_bss_end+0xbcca00>
    191c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1790 <CPSR_IRQ_INHIBIT+0x1710>
    1920:	2f657461 	svccs	0x00657461
    1924:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1928:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    192c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1930:	2f433249 	svccs	0x00433249
    1934:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1938:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    193c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1940:	642f6564 	strtvs	r6, [pc], #-1380	; 1948 <CPSR_IRQ_INHIBIT+0x18c8>
    1944:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1948:	00007372 	andeq	r7, r0, r2, ror r3
    194c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1950:	70632e72 	rsbvc	r2, r3, r2, ror lr
    1954:	00010070 	andeq	r0, r1, r0, ror r0
    1958:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    195c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1960:	00020068 	andeq	r0, r2, r8, rrx
    1964:	72657000 	rsbvc	r7, r5, #0
    1968:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    196c:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    1970:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1974:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    1978:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    197c:	00030068 	andeq	r0, r3, r8, rrx
    1980:	01050000 	mrseq	r0, (UNDEF: 5)
    1984:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    1988:	030000b5 	movweq	r0, #181	; 0xb5
    198c:	0f050119 	svceq	0x00050119
    1990:	2f14059f 	svccs	0x0014059f
    1994:	a1a10105 			; <UNDEFINED> instruction: 0xa1a10105
    1998:	059f0c05 	ldreq	r0, [pc, #3077]	; 25a5 <CPSR_IRQ_INHIBIT+0x2525>
    199c:	36054a18 			; <UNDEFINED> instruction: 0x36054a18
    19a0:	4b01052e 	blmi	42e60 <_bss_end+0x31170>
    19a4:	d71e0585 	ldrle	r0, [lr, -r5, lsl #11]
    19a8:	05822005 	streq	r2, [r2, #5]
    19ac:	1b054d15 	blne	154e08 <_bss_end+0x143118>
    19b0:	67170567 	ldrvs	r0, [r7, -r7, ror #10]
    19b4:	05671505 	strbeq	r1, [r7, #-1285]!	; 0xfffffafb
    19b8:	46056613 			; <UNDEFINED> instruction: 0x46056613
    19bc:	2e2105d8 	mcrcs	5, 1, r0, cr1, cr8, {6}
    19c0:	05822505 	streq	r2, [r2, #1285]	; 0x505
    19c4:	05302e23 	ldreq	r2, [r0, #-3619]!	; 0xfffff1dd
    19c8:	0f058225 	svceq	0x00058225
    19cc:	6701054c 	strvs	r0, [r1, -ip, asr #10]
    19d0:	836f0569 	cmnhi	pc, #440401920	; 0x1a400000
    19d4:	05841b05 	streq	r1, [r4, #2821]	; 0xb05
    19d8:	01058317 	tsteq	r5, r7, lsl r3
    19dc:	23056983 	movwcs	r6, #22915	; 0x5983
    19e0:	82250583 	eorhi	r0, r5, #549453824	; 0x20c00000
    19e4:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    19e8:	09054a05 	stmdbeq	r5, {r0, r2, r9, fp, lr}
    19ec:	4a12054b 	bmi	482f20 <_bss_end+0x471230>
    19f0:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    19f4:	05832b05 	streq	r2, [r3, #2821]	; 0xb05
    19f8:	2b058210 	blcs	162240 <_bss_end+0x150550>
    19fc:	8301052e 	movwhi	r0, #5422	; 0x152e
    1a00:	02009e66 	andeq	r9, r0, #1632	; 0x660
    1a04:	66060104 	strvs	r0, [r6], -r4, lsl #2
    1a08:	03061e05 	movweq	r1, #28165	; 0x6e05
    1a0c:	05827fba 	streq	r7, [r2, #4026]	; 0xfba
    1a10:	00c60301 	sbceq	r0, r6, r1, lsl #6
    1a14:	024aba66 	subeq	fp, sl, #417792	; 0x66000
    1a18:	0101000a 	tsteq	r1, sl
    1a1c:	000001ea 	andeq	r0, r0, sl, ror #3
    1a20:	012d0003 			; <UNDEFINED> instruction: 0x012d0003
    1a24:	01020000 	mrseq	r0, (UNDEF: 2)
    1a28:	000d0efb 	strdeq	r0, [sp], -fp
    1a2c:	01010101 	tsteq	r1, r1, lsl #2
    1a30:	01000000 	mrseq	r0, (UNDEF: 0)
    1a34:	2f010000 	svccs	0x00010000
    1a38:	2f746e6d 	svccs	0x00746e6d
    1a3c:	73552f63 	cmpvc	r5, #396	; 0x18c
    1a40:	2f737265 	svccs	0x00737265
    1a44:	6162754b 	cmnvs	r2, fp, asr #10
    1a48:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1a4c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1a50:	5a2f7374 	bpl	bde828 <_bss_end+0xbccb38>
    1a54:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 18c8 <CPSR_IRQ_INHIBIT+0x1848>
    1a58:	2f657461 	svccs	0x00657461
    1a5c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1a60:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1a64:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1a68:	2f433249 	svccs	0x00433249
    1a6c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1a70:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    1a74:	642f6372 	strtvs	r6, [pc], #-882	; 1a7c <CPSR_IRQ_INHIBIT+0x19fc>
    1a78:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1a7c:	2f007372 	svccs	0x00007372
    1a80:	2f746e6d 	svccs	0x00746e6d
    1a84:	73552f63 	cmpvc	r5, #396	; 0x18c
    1a88:	2f737265 	svccs	0x00737265
    1a8c:	6162754b 	cmnvs	r2, fp, asr #10
    1a90:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1a94:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1a98:	5a2f7374 	bpl	bde870 <_bss_end+0xbccb80>
    1a9c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1910 <CPSR_IRQ_INHIBIT+0x1890>
    1aa0:	2f657461 	svccs	0x00657461
    1aa4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1aa8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1aac:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1ab0:	2f433249 	svccs	0x00433249
    1ab4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1ab8:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1abc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1ac0:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    1ac4:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    1ac8:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    1acc:	61682f30 	cmnvs	r8, r0, lsr pc
    1ad0:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 1928 <CPSR_IRQ_INHIBIT+0x18a8>
    1ad4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1ad8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1adc:	4b2f7372 	blmi	bde8ac <_bss_end+0xbccbbc>
    1ae0:	2f616275 	svccs	0x00616275
    1ae4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1ae8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1aec:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1af0:	614d6f72 	hvcvs	55026	; 0xd6f2
    1af4:	652f6574 	strvs	r6, [pc, #-1396]!	; 1588 <CPSR_IRQ_INHIBIT+0x1508>
    1af8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1afc:	2f73656c 	svccs	0x0073656c
    1b00:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1b04:	6b2f4332 	blvs	bd27d4 <_bss_end+0xbc0ae4>
    1b08:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1b0c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1b10:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1b14:	72642f65 	rsbvc	r2, r4, #404	; 0x194
    1b18:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1b1c:	74000073 	strvc	r0, [r0], #-115	; 0xffffff8d
    1b20:	2e676e72 	mcrcs	14, 3, r6, cr7, cr2, {3}
    1b24:	00707063 	rsbseq	r7, r0, r3, rrx
    1b28:	70000001 	andvc	r0, r0, r1
    1b2c:	70697265 	rsbvc	r7, r9, r5, ror #4
    1b30:	61726568 	cmnvs	r2, r8, ror #10
    1b34:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    1b38:	00000200 	andeq	r0, r0, r0, lsl #4
    1b3c:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    1b40:	0300682e 	movweq	r6, #2094	; 0x82e
    1b44:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1b48:	66656474 			; <UNDEFINED> instruction: 0x66656474
    1b4c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1b50:	05000000 	streq	r0, [r0, #-0]
    1b54:	02050001 	andeq	r0, r5, #1
    1b58:	0000b7d4 	ldrdeq	fp, [r0], -r4
    1b5c:	a00c0519 	andge	r0, ip, r9, lsl r5
    1b60:	a1bd0105 			; <UNDEFINED> instruction: 0xa1bd0105
    1b64:	05bd0905 	ldreq	r0, [sp, #2309]!	; 0x905
    1b68:	11054a05 	tstne	r5, r5, lsl #20
    1b6c:	01040200 	mrseq	r0, R12_usr
    1b70:	6710054a 	ldrvs	r0, [r0, -sl, asr #10]
    1b74:	054c0505 	strbeq	r0, [ip, #-1285]	; 0xfffffafb
    1b78:	05054a0c 	streq	r4, [r5, #-2572]	; 0xfffff5f4
    1b7c:	4a3c0568 	bmi	f03124 <_bss_end+0xef1434>
    1b80:	052e3e05 	streq	r3, [lr, #-3589]!	; 0xfffff1fb
    1b84:	3e054b05 	vmlacc.f64	d4, d5, d5
    1b88:	2e40054a 	cdpcs	5, 4, cr0, cr0, cr10, {2}
    1b8c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1b90:	40054a3e 	andmi	r4, r5, lr, lsr sl
    1b94:	4c05052e 	cfstr32mi	mvfx0, [r5], {46}	; 0x2e
    1b98:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
    1b9c:	3f052e05 	svccc	0x00052e05
    1ba0:	4d0e054a 	cfstr32mi	mvfx0, [lr, #-296]	; 0xfffffed8
    1ba4:	054a4505 	strbeq	r4, [sl, #-1285]	; 0xfffffafb
    1ba8:	0c054a47 			; <UNDEFINED> instruction: 0x0c054a47
    1bac:	ba05052e 	blt	14306c <_bss_end+0x13137c>
    1bb0:	05310c05 	ldreq	r0, [r1, #-3077]!	; 0xfffff3fb
    1bb4:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    1bb8:	0505830a 	streq	r8, [r5, #-778]	; 0xfffffcf6
    1bbc:	0c054d4a 	stceq	13, cr4, [r5], {74}	; 0x4a
    1bc0:	6809054a 	stmdavs	r9, {r1, r3, r6, r8, sl}
    1bc4:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1bc8:	43054b09 	movwmi	r4, #23305	; 0x5b09
    1bcc:	6109054a 	tstvs	r9, sl, asr #10
    1bd0:	69340105 	ldmdbvs	r4!, {r0, r2, r8}
    1bd4:	05830d05 	streq	r0, [r3, #3333]	; 0xd05
    1bd8:	01054a18 	tsteq	r5, r8, lsl sl
    1bdc:	09058583 	stmdbeq	r5, {r0, r1, r7, r8, sl, pc}
    1be0:	4a050583 	bmi	1431f4 <_bss_end+0x131504>
    1be4:	054b1005 	strbeq	r1, [fp, #-5]
    1be8:	4105500c 	tstmi	r5, ip
    1bec:	4b01054a 	blmi	4311c <_bss_end+0x3142c>
    1bf0:	02009e82 	andeq	r9, r0, #2080	; 0x820
    1bf4:	66060104 	strvs	r0, [r6], -r4, lsl #2
    1bf8:	03061b05 	movweq	r1, #27397	; 0x6b05
    1bfc:	01058245 	tsteq	r5, r5, asr #4
    1c00:	ba663b03 	blt	1990814 <_bss_end+0x197eb24>
    1c04:	000a024a 	andeq	r0, sl, sl, asr #4
    1c08:	04ca0101 	strbeq	r0, [sl], #257	; 0x101
    1c0c:	00030000 	andeq	r0, r3, r0
    1c10:	000001d3 	ldrdeq	r0, [r0], -r3
    1c14:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1c18:	0101000d 	tsteq	r1, sp
    1c1c:	00000101 	andeq	r0, r0, r1, lsl #2
    1c20:	00000100 	andeq	r0, r0, r0, lsl #2
    1c24:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    1c28:	2f632f74 	svccs	0x00632f74
    1c2c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1c30:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1c34:	442f6162 	strtmi	r6, [pc], #-354	; 1c3c <CPSR_IRQ_INHIBIT+0x1bbc>
    1c38:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1c3c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1c40:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1c44:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1c48:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1c4c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1c50:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1c54:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1c58:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1c5c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1c60:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1c64:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1c68:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    1c6c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1c70:	552f632f 	strpl	r6, [pc, #-815]!	; 1949 <CPSR_IRQ_INHIBIT+0x18c9>
    1c74:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1c78:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1c7c:	6f442f61 	svcvs	0x00442f61
    1c80:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1c84:	2f73746e 	svccs	0x0073746e
    1c88:	6f72655a 	svcvs	0x0072655a
    1c8c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1c90:	6178652f 	cmnvs	r8, pc, lsr #10
    1c94:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1c98:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1c9c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1ca0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1ca4:	2f6c656e 	svccs	0x006c656e
    1ca8:	2f637273 	svccs	0x00637273
    1cac:	2f007366 	svccs	0x00007366
    1cb0:	2f746e6d 	svccs	0x00746e6d
    1cb4:	73552f63 	cmpvc	r5, #396	; 0x18c
    1cb8:	2f737265 	svccs	0x00737265
    1cbc:	6162754b 	cmnvs	r2, fp, asr #10
    1cc0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1cc4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1cc8:	5a2f7374 	bpl	bdeaa0 <_bss_end+0xbccdb0>
    1ccc:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1b40 <CPSR_IRQ_INHIBIT+0x1ac0>
    1cd0:	2f657461 	svccs	0x00657461
    1cd4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1cd8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1cdc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1ce0:	2f433249 	svccs	0x00433249
    1ce4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1ce8:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1cec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1cf0:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 1b68 <CPSR_IRQ_INHIBIT+0x1ae8>
    1cf4:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    1cf8:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 1b1c <CPSR_IRQ_INHIBIT+0x1a9c>
    1cfc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1d00:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1d04:	4b2f7372 	blmi	bdead4 <_bss_end+0xbccde4>
    1d08:	2f616275 	svccs	0x00616275
    1d0c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1d10:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1d14:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1d18:	614d6f72 	hvcvs	55026	; 0xd6f2
    1d1c:	652f6574 	strvs	r6, [pc, #-1396]!	; 17b0 <CPSR_IRQ_INHIBIT+0x1730>
    1d20:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1d24:	2f73656c 	svccs	0x0073656c
    1d28:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1d2c:	6b2f4332 	blvs	bd29fc <_bss_end+0xbc0d0c>
    1d30:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1d34:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1d38:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d3c:	72642f65 	rsbvc	r2, r4, #404	; 0x194
    1d40:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1d44:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1b80 <CPSR_IRQ_INHIBIT+0x1b00>
    1d48:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1d4c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1d50:	4b2f7372 	blmi	bdeb20 <_bss_end+0xbcce30>
    1d54:	2f616275 	svccs	0x00616275
    1d58:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1d5c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1d60:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1d64:	614d6f72 	hvcvs	55026	; 0xd6f2
    1d68:	652f6574 	strvs	r6, [pc, #-1396]!	; 17fc <CPSR_IRQ_INHIBIT+0x177c>
    1d6c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1d70:	2f73656c 	svccs	0x0073656c
    1d74:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1d78:	6b2f4332 	blvs	bd2a48 <_bss_end+0xbc0d58>
    1d7c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1d80:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1d84:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d88:	6f622f65 	svcvs	0x00622f65
    1d8c:	2f647261 	svccs	0x00647261
    1d90:	30697072 	rsbcc	r7, r9, r2, ror r0
    1d94:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    1d98:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    1d9c:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1da0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1da4:	0100682e 	tsteq	r0, lr, lsr #16
    1da8:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    1dac:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1db0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1db4:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    1db8:	00000200 	andeq	r0, r0, r0, lsl #4
    1dbc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1dc0:	685f6c65 	ldmdavs	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1dc4:	2e706165 	rpwcssz	f6, f0, f5
    1dc8:	00030068 	andeq	r0, r3, r8, rrx
    1dcc:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    1dd0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    1dd4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1dd8:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1ddc:	66656474 			; <UNDEFINED> instruction: 0x66656474
    1de0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1de4:	05000000 	streq	r0, [r0, #-0]
    1de8:	0205000c 	andeq	r0, r5, #12
    1dec:	0000c2b0 			; <UNDEFINED> instruction: 0x0000c2b0
    1df0:	0100cf03 	tsteq	r0, r3, lsl #30
    1df4:	00160282 	andseq	r0, r6, r2, lsl #5
    1df8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1dfc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1e00:	00ba5402 	adcseq	r5, sl, r2, lsl #8
    1e04:	01090300 	mrseq	r0, (UNDEF: 57)
    1e08:	05821a05 	streq	r1, [r2, #2565]	; 0xa05
    1e0c:	05cc0812 	strbeq	r0, [ip, #2066]	; 0x812
    1e10:	16056710 			; <UNDEFINED> instruction: 0x16056710
    1e14:	4a140567 	bmi	5033b8 <_bss_end+0x4f16c8>
    1e18:	054b1705 	strbeq	r1, [fp, #-1797]	; 0xfffff8fb
    1e1c:	13056716 	movwne	r6, #22294	; 0x5716
    1e20:	68180567 	ldmdavs	r8, {r0, r1, r2, r5, r6, r8, sl}
    1e24:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    1e28:	16054b18 			; <UNDEFINED> instruction: 0x16054b18
    1e2c:	4a140567 	bmi	5033d0 <_bss_end+0x4f16e0>
    1e30:	054b1b05 	strbeq	r1, [fp, #-2821]	; 0xfffff4fb
    1e34:	1705671a 	smladne	r5, sl, r7, r6
    1e38:	4a0c0567 	bmi	3033dc <_bss_end+0x2f16ec>
    1e3c:	05841805 	streq	r1, [r4, #2053]	; 0x805
    1e40:	18052e16 	stmdane	r5, {r1, r2, r4, r9, sl, fp, sp}
    1e44:	6716054b 	ldrvs	r0, [r6, -fp, asr #10]
    1e48:	054a1405 	strbeq	r1, [sl, #-1029]	; 0xfffffbfb
    1e4c:	1a054b1b 	bne	154ac0 <_bss_end+0x142dd0>
    1e50:	67170567 	ldrvs	r0, [r7, -r7, ror #10]
    1e54:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1e58:	16058418 			; <UNDEFINED> instruction: 0x16058418
    1e5c:	4b18052e 	blmi	60331c <_bss_end+0x5f162c>
    1e60:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    1e64:	1a05671b 	bne	15bad8 <_bss_end+0x149de8>
    1e68:	67170567 	ldrvs	r0, [r7, -r7, ror #10]
    1e6c:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1e70:	05d98301 	ldrbeq	r8, [r9, #769]	; 0x301
    1e74:	12059f14 	andne	r9, r5, #20, 30	; 0x50
    1e78:	681c0568 	ldmdavs	ip, {r3, r5, r6, r8, sl}
    1e7c:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    1e80:	09059e3b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r9, sl, fp, ip, pc}
    1e84:	4b140582 	blmi	503494 <_bss_end+0x4f17a4>
    1e88:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
    1e8c:	0c056105 	stfeqs	f6, [r5], {5}
    1e90:	2f010536 	svccs	0x00010536
    1e94:	83110569 	tsthi	r1, #440401920	; 0x1a400000
    1e98:	056d0c05 	strbeq	r0, [sp, #-3077]!	; 0xfffff3fb
    1e9c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    1ea0:	15054a01 	strne	r4, [r5, #-2561]	; 0xfffff5ff
    1ea4:	01040200 	mrseq	r0, R12_usr
    1ea8:	0013052e 	andseq	r0, r3, lr, lsr #10
    1eac:	4a010402 	bmi	42ebc <_bss_end+0x311cc>
    1eb0:	054c1b05 	strbeq	r1, [ip, #-2821]	; 0xfffff4fb
    1eb4:	1505f40f 	strne	pc, [r5, #-1039]	; 0xfffffbf1
    1eb8:	82290568 	eorhi	r0, r9, #104, 10	; 0x1a000000
    1ebc:	05823205 	streq	r3, [r2, #517]	; 0x205
    1ec0:	28056818 	stmdacs	r5, {r3, r4, fp, sp, lr}
    1ec4:	4c17054a 	cfldr32mi	mvfx0, [r7], {74}	; 0x4a
    1ec8:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    1ecc:	19054c14 	stmdbne	r5, {r2, r4, sl, fp, lr}
    1ed0:	01040200 	mrseq	r0, R12_usr
    1ed4:	002b054a 	eoreq	r0, fp, sl, asr #10
    1ed8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1edc:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    1ee0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1ee4:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    1ee8:	2b052e02 	blcs	14d6f8 <_bss_end+0x13ba08>
    1eec:	02040200 	andeq	r0, r4, #0, 4
    1ef0:	4c1b0566 	cfldr32mi	mvfx0, [fp], {102}	; 0x66
    1ef4:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
    1ef8:	2e056611 	mcrcs	6, 0, r6, cr5, cr1, {0}
    1efc:	01040200 	mrseq	r0, R12_usr
    1f00:	002f054a 	eoreq	r0, pc, sl, asr #10
    1f04:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1f08:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    1f0c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    1f10:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1f14:	25054d03 	strcs	r4, [r5, #-3331]	; 0xfffff2fd
    1f18:	03040200 	movweq	r0, #16896	; 0x4200
    1f1c:	001c052e 	andseq	r0, ip, lr, lsr #10
    1f20:	66030402 	strvs	r0, [r3], -r2, lsl #8
    1f24:	02000d05 	andeq	r0, r0, #320	; 0x140
    1f28:	05990304 	ldreq	r0, [r9, #772]	; 0x304
    1f2c:	16058a18 			; <UNDEFINED> instruction: 0x16058a18
    1f30:	2e1305a0 	cfcvtd32cs	mvfx0, mvd3
    1f34:	05671805 	strbeq	r1, [r7, #-2053]!	; 0xfffff7fb
    1f38:	17054a0d 	strne	r4, [r5, -sp, lsl #20]
    1f3c:	6919054c 	ldmdbvs	r9, {r2, r3, r6, r8, sl}
    1f40:	05822f05 	streq	r2, [r2, #3845]	; 0xf05
    1f44:	27059e3a 	smladxcs	r5, sl, lr, r9
    1f48:	a00d0568 	andge	r0, sp, r8, ror #10
    1f4c:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    1f50:	29054b1d 	stmdbcs	r5, {r0, r2, r3, r4, r8, r9, fp, lr}
    1f54:	9e340582 	cfadd32ls	mvfx0, mvfx4, mvfx2
    1f58:	05873a05 	streq	r3, [r7, #2565]	; 0xa05
    1f5c:	18056722 	stmdane	r5, {r1, r5, r8, r9, sl, sp, lr}
    1f60:	8321052e 			; <UNDEFINED> instruction: 0x8321052e
    1f64:	05672305 	strbeq	r2, [r7, #-773]!	; 0xfffffcfb
    1f68:	26056725 	strcs	r6, [r5], -r5, lsr #14
    1f6c:	67270567 	strvs	r0, [r7, -r7, ror #10]!
    1f70:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    1f74:	16054b20 	strne	r4, [r5], -r0, lsr #22
    1f78:	4c1d0568 	cfldr32mi	mvfx0, [sp], {104}	; 0x68
    1f7c:	82330567 	eorshi	r0, r3, #432013312	; 0x19c00000
    1f80:	059e3b05 	ldreq	r3, [lr, #2821]	; 0xb05
    1f84:	66560309 	ldrbvs	r0, [r6], -r9, lsl #6
    1f88:	31031305 	tstcc	r3, r5, lsl #6
    1f8c:	4a09052e 	bmi	24344c <_bss_end+0x23175c>
    1f90:	02001c05 	andeq	r1, r0, #1280	; 0x500
    1f94:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    1f98:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1f9c:	0e052e02 	cdpeq	14, 0, cr2, cr5, cr2, {0}
    1fa0:	02040200 	andeq	r0, r4, #0, 4
    1fa4:	0022054d 	eoreq	r0, r2, sp, asr #10
    1fa8:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    1fac:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    1fb0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1fb4:	04020005 	streq	r0, [r2], #-5
    1fb8:	7fbf0302 	svcvc	0x00bf0302
    1fbc:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    1fc0:	058200c4 	streq	r0, [r2, #196]	; 0xc4
    1fc4:	8278030d 	rsbshi	r0, r8, #872415232	; 0x34000000
    1fc8:	09030105 	stmdbeq	r3, {r0, r2, r8}
    1fcc:	05cb082e 	strbeq	r0, [fp, #2094]	; 0x82e
    1fd0:	2505bd11 	strcs	fp, [r5, #-3345]	; 0xfffff2ef
    1fd4:	822d0582 	eorhi	r0, sp, #545259520	; 0x20800000
    1fd8:	056a0b05 	strbeq	r0, [sl, #-2821]!	; 0xfffff4fb
    1fdc:	24054c14 	strcs	r4, [r5], #-3092	; 0xfffff3ec
    1fe0:	4c13054a 	cfldr32mi	mvfx0, [r3], {74}	; 0x4a
    1fe4:	054a1505 	strbeq	r1, [sl, #-1285]	; 0xfffffafb
    1fe8:	15054c10 	strne	r4, [r5, #-3088]	; 0xfffff3f0
    1fec:	01040200 	mrseq	r0, R12_usr
    1ff0:	0027054a 	eoreq	r0, r7, sl, asr #10
    1ff4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1ff8:	02003005 	andeq	r3, r0, #5
    1ffc:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    2000:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    2004:	27052e02 	strcs	r2, [r5, -r2, lsl #28]
    2008:	02040200 	andeq	r0, r4, #0, 4
    200c:	4c170566 	cfldr32mi	mvfx0, [r7], {102}	; 0x66
    2010:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    2014:	2a05660d 	bcs	15b850 <_bss_end+0x149b60>
    2018:	01040200 	mrseq	r0, R12_usr
    201c:	002b054a 	eoreq	r0, fp, sl, asr #10
    2020:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2024:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    2028:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    202c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2030:	21054d03 	tstcs	r5, r3, lsl #26
    2034:	03040200 	movweq	r0, #16896	; 0x4200
    2038:	0018052e 	andseq	r0, r8, lr, lsr #10
    203c:	66030402 	strvs	r0, [r3], -r2, lsl #8
    2040:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2044:	05990304 	ldreq	r0, [r9, #772]	; 0x304
    2048:	12058a14 	andne	r8, r5, #20, 20	; 0x14000
    204c:	2e0f05a0 	cfsh32cs	mvfx0, mvfx15, #-48
    2050:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    2054:	13054a09 	movwne	r4, #23049	; 0x5a09
    2058:	6923054c 	stmdbvs	r3!, {r2, r3, r6, r8, sl}
    205c:	059f0905 	ldreq	r0, [pc, #2309]	; 2969 <CPSR_IRQ_INHIBIT+0x28e9>
    2060:	16056712 			; <UNDEFINED> instruction: 0x16056712
    2064:	4a09054c 	bmi	24359c <_bss_end+0x2318ac>
    2068:	054c2905 	strbeq	r2, [ip, #-2309]	; 0xfffff6fb
    206c:	29054a35 	stmdbcs	r5, {r0, r2, r4, r5, r9, fp, lr}
    2070:	823505f2 	eorshi	r0, r5, #1015021568	; 0x3c800000
    2074:	05f25205 	ldrbeq	r5, [r2, #517]!	; 0x205
    2078:	52056646 	andpl	r6, r5, #73400320	; 0x4600000
    207c:	301c0582 	andscc	r0, ip, r2, lsl #11
    2080:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
    2084:	05054a0e 	streq	r4, [r5, #-2574]	; 0xfffff5f2
    2088:	054a6603 	strbeq	r6, [sl, #-1539]	; 0xfffff9fd
    208c:	2e1b030d 	cdpcs	3, 1, cr0, cr11, cr13, {0}
    2090:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    2094:	2f058227 	svccs	0x00058227
    2098:	690c0582 	stmdbvs	ip, {r1, r7, r8, sl}
    209c:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    20a0:	f22f0104 	vrhadd.s32	d0, d15, d4
    20a4:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    20a8:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    20ac:	d003060d 	andle	r0, r3, sp, lsl #12
    20b0:	0105827e 	tsteq	r5, lr, ror r2
    20b4:	4a01b003 	bmi	6e0c8 <_bss_end+0x5c3d8>
    20b8:	0a024a9e 	beq	94b38 <_bss_end+0x82e48>
    20bc:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    20c0:	00080503 	andeq	r0, r8, r3, lsl #10
    20c4:	c2ec0205 	rscgt	r0, ip, #1342177280	; 0x50000000
    20c8:	1d030000 	stcne	0, cr0, [r3, #-0]
    20cc:	842a0501 	strthi	r0, [sl], #-1281	; 0xfffffaff
    20d0:	02830505 	addeq	r0, r3, #20971520	; 0x1400000
    20d4:	01010006 	tsteq	r1, r6
    20d8:	00000b8e 	andeq	r0, r0, lr, lsl #23
    20dc:	03520003 	cmpeq	r2, #3
    20e0:	01020000 	mrseq	r0, (UNDEF: 2)
    20e4:	000d0efb 	strdeq	r0, [sp], -fp
    20e8:	01010101 	tsteq	r1, r1, lsl #2
    20ec:	01000000 	mrseq	r0, (UNDEF: 0)
    20f0:	2f010000 	svccs	0x00010000
    20f4:	2f746e6d 	svccs	0x00746e6d
    20f8:	73552f63 	cmpvc	r5, #396	; 0x18c
    20fc:	2f737265 	svccs	0x00737265
    2100:	6162754b 	cmnvs	r2, fp, asr #10
    2104:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2108:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    210c:	5a2f7374 	bpl	bdeee4 <_bss_end+0xbcd1f4>
    2110:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1f84 <CPSR_IRQ_INHIBIT+0x1f04>
    2114:	2f657461 	svccs	0x00657461
    2118:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    211c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    2120:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2124:	2f433249 	svccs	0x00433249
    2128:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    212c:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2130:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2134:	662f6564 	strtvs	r6, [pc], -r4, ror #10
    2138:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1f74 <CPSR_IRQ_INHIBIT+0x1ef4>
    213c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2140:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2144:	4b2f7372 	blmi	bdef14 <_bss_end+0xbcd224>
    2148:	2f616275 	svccs	0x00616275
    214c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2150:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2154:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2158:	614d6f72 	hvcvs	55026	; 0xd6f2
    215c:	652f6574 	strvs	r6, [pc, #-1396]!	; 1bf0 <CPSR_IRQ_INHIBIT+0x1b70>
    2160:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2164:	2f73656c 	svccs	0x0073656c
    2168:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    216c:	6b2f4332 	blvs	bd2e3c <_bss_end+0xbc114c>
    2170:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2174:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2178:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    217c:	656d2f65 	strbvs	r2, [sp, #-3941]!	; 0xfffff09b
    2180:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2184:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2188:	2f632f74 	svccs	0x00632f74
    218c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2190:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2194:	442f6162 	strtmi	r6, [pc], #-354	; 219c <CPSR_IRQ_INHIBIT+0x211c>
    2198:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    219c:	73746e65 	cmnvc	r4, #1616	; 0x650
    21a0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    21a4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    21a8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    21ac:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    21b0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    21b4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    21b8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    21bc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    21c0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    21c4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    21c8:	2f73662f 	svccs	0x0073662f
    21cc:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    21d0:	00737265 	rsbseq	r7, r3, r5, ror #4
    21d4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    21d8:	552f632f 	strpl	r6, [pc, #-815]!	; 1eb1 <CPSR_IRQ_INHIBIT+0x1e31>
    21dc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    21e0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    21e4:	6f442f61 	svcvs	0x00442f61
    21e8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    21ec:	2f73746e 	svccs	0x0073746e
    21f0:	6f72655a 	svcvs	0x0072655a
    21f4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    21f8:	6178652f 	cmnvs	r8, pc, lsr #10
    21fc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2200:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2204:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2208:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    220c:	2f6c656e 	svccs	0x006c656e
    2210:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2214:	2f656475 	svccs	0x00656475
    2218:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    221c:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    2220:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    2224:	2f006c61 	svccs	0x00006c61
    2228:	2f746e6d 	svccs	0x00746e6d
    222c:	73552f63 	cmpvc	r5, #396	; 0x18c
    2230:	2f737265 	svccs	0x00737265
    2234:	6162754b 	cmnvs	r2, fp, asr #10
    2238:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    223c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    2240:	5a2f7374 	bpl	bdf018 <_bss_end+0xbcd328>
    2244:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 20b8 <CPSR_IRQ_INHIBIT+0x2038>
    2248:	2f657461 	svccs	0x00657461
    224c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    2250:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    2254:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2258:	2f433249 	svccs	0x00433249
    225c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2260:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2264:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2268:	702f6564 	eorvc	r6, pc, r4, ror #10
    226c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2270:	2f007373 	svccs	0x00007373
    2274:	2f746e6d 	svccs	0x00746e6d
    2278:	73552f63 	cmpvc	r5, #396	; 0x18c
    227c:	2f737265 	svccs	0x00737265
    2280:	6162754b 	cmnvs	r2, fp, asr #10
    2284:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2288:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    228c:	5a2f7374 	bpl	bdf064 <_bss_end+0xbcd374>
    2290:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 2104 <CPSR_IRQ_INHIBIT+0x2084>
    2294:	2f657461 	svccs	0x00657461
    2298:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    229c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    22a0:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    22a4:	2f433249 	svccs	0x00433249
    22a8:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    22ac:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    22b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    22b4:	642f6564 	strtvs	r6, [pc], #-1380	; 22bc <CPSR_IRQ_INHIBIT+0x223c>
    22b8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    22bc:	2f007372 	svccs	0x00007372
    22c0:	2f746e6d 	svccs	0x00746e6d
    22c4:	73552f63 	cmpvc	r5, #396	; 0x18c
    22c8:	2f737265 	svccs	0x00737265
    22cc:	6162754b 	cmnvs	r2, fp, asr #10
    22d0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    22d4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    22d8:	5a2f7374 	bpl	bdf0b0 <_bss_end+0xbcd3c0>
    22dc:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 2150 <CPSR_IRQ_INHIBIT+0x20d0>
    22e0:	2f657461 	svccs	0x00657461
    22e4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    22e8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    22ec:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    22f0:	2f433249 	svccs	0x00433249
    22f4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    22f8:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    22fc:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
    2300:	66000073 			; <UNDEFINED> instruction: 0x66000073
    2304:	73656c69 	cmnvc	r5, #26880	; 0x6900
    2308:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    230c:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    2310:	6b000001 	blvs	231c <CPSR_IRQ_INHIBIT+0x229c>
    2314:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2318:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    231c:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    2320:	00000200 	andeq	r0, r0, r0, lsl #4
    2324:	6f697067 	svcvs	0x00697067
    2328:	2e73665f 	mrccs	6, 3, r6, cr3, cr15, {2}
    232c:	00030068 	andeq	r0, r3, r8, rrx
    2330:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    2334:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2338:	2e73665f 	mrccs	6, 3, r6, cr3, cr15, {2}
    233c:	00030068 	andeq	r0, r3, r8, rrx
    2340:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
    2344:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2348:	70736964 	rsbsvc	r6, r3, r4, ror #18
    234c:	5f79616c 	svcpl	0x0079616c
    2350:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    2354:	00000300 	andeq	r0, r0, r0, lsl #6
    2358:	66696873 			; <UNDEFINED> instruction: 0x66696873
    235c:	67657274 			; <UNDEFINED> instruction: 0x67657274
    2360:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2364:	73665f72 	cmnvc	r6, #456	; 0x1c8
    2368:	0300682e 	movweq	r6, #2094	; 0x82e
    236c:	72740000 	rsbsvc	r0, r4, #0
    2370:	665f676e 	ldrbvs	r6, [pc], -lr, ror #14
    2374:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2378:	6f000003 	svcvs	0x00000003
    237c:	5f64656c 	svcpl	0x0064656c
    2380:	31647373 	smccc	18227	; 0x4733
    2384:	5f363033 	svcpl	0x00363033
    2388:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    238c:	00000300 	andeq	r0, r0, r0, lsl #6
    2390:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    2394:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    2398:	00000400 	andeq	r0, r0, r0, lsl #8
    239c:	2e697773 	mcrcs	7, 3, r7, cr9, cr3, {3}
    23a0:	00050068 	andeq	r0, r5, r8, rrx
    23a4:	72657000 	rsbvc	r7, r5, #0
    23a8:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    23ac:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    23b0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    23b4:	70670000 	rsbvc	r0, r7, r0
    23b8:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    23bc:	00000600 	andeq	r0, r0, r0, lsl #12
    23c0:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    23c4:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    23c8:	00060068 	andeq	r0, r6, r8, rrx
    23cc:	69687300 	stmdbvs	r8!, {r8, r9, ip, sp, lr}^
    23d0:	65727466 	ldrbvs	r7, [r2, #-1126]!	; 0xfffffb9a
    23d4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    23d8:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    23dc:	00000600 	andeq	r0, r0, r0, lsl #12
    23e0:	6d676573 	cfstr64vs	mvdx6, [r7, #-460]!	; 0xfffffe34
    23e4:	64746e65 	ldrbtvs	r6, [r4], #-3685	; 0xfffff19b
    23e8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    23ec:	682e7961 	stmdavs	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    23f0:	00000600 	andeq	r0, r0, r0, lsl #12
    23f4:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    23f8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    23fc:	32690000 	rsbcc	r0, r9, #0
    2400:	00682e63 	rsbeq	r2, r8, r3, ror #28
    2404:	6f000006 	svcvs	0x00000006
    2408:	5f64656c 	svcpl	0x0064656c
    240c:	31647373 	smccc	18227	; 0x4733
    2410:	2e363033 	mrccs	0, 1, r3, cr6, cr3, {1}
    2414:	00060068 	andeq	r0, r6, r8, rrx
    2418:	6c696600 	stclvs	6, cr6, [r9], #-0
    241c:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2420:	5f6d6574 	svcpl	0x006d6574
    2424:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2428:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    242c:	00707063 	rsbseq	r7, r0, r3, rrx
    2430:	00000007 	andeq	r0, r0, r7
    2434:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2438:	00c31802 	sbceq	r1, r3, r2, lsl #16
    243c:	012a0300 			; <UNDEFINED> instruction: 0x012a0300
    2440:	05bc1005 	ldreq	r1, [ip, #5]!
    2444:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2448:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    244c:	02050016 	andeq	r0, r5, #22
    2450:	0000c344 	andeq	ip, r0, r4, asr #6
    2454:	05013003 	streq	r3, [r1, #-3]
    2458:	0505bc10 	streq	fp, [r5, #-3088]	; 0xfffff3f0
    245c:	0008022f 	andeq	r0, r8, pc, lsr #4
    2460:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
    2464:	70020500 	andvc	r0, r2, r0, lsl #10
    2468:	030000c3 	movweq	r0, #195	; 0xc3
    246c:	10050135 	andne	r0, r5, r5, lsr r1
    2470:	2f050584 	svccs	0x00050584
    2474:	01000802 	tsteq	r0, r2, lsl #16
    2478:	00120501 	andseq	r0, r2, r1, lsl #10
    247c:	c3940205 	orrsgt	r0, r4, #1342177280	; 0x50000000
    2480:	3a030000 	bcc	c2488 <_bss_end+0xb0798>
    2484:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    2488:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    248c:	01010008 	tsteq	r1, r8
    2490:	01050204 	tsteq	r5, r4, lsl #4
    2494:	c0020500 	andgt	r0, r2, r0, lsl #10
    2498:	030000c3 	movweq	r0, #195	; 0xc3
    249c:	1c050129 	stfnes	f0, [r5], {41}	; 0x29
    24a0:	83010583 	movwhi	r0, #5507	; 0x1583
    24a4:	01000802 	tsteq	r0, r2, lsl #16
    24a8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    24ac:	02050001 	andeq	r0, r5, #1
    24b0:	0000aba0 	andeq	sl, r0, r0, lsr #23
    24b4:	05013d03 	streq	r3, [r1, #-3331]	; 0xfffff2fd
    24b8:	01059f14 	tsteq	r5, r4, lsl pc
    24bc:	00080267 	andeq	r0, r8, r7, ror #4
    24c0:	07050101 	streq	r0, [r5, -r1, lsl #2]
    24c4:	f0020500 			; <UNDEFINED> instruction: 0xf0020500
    24c8:	030000c3 	movweq	r0, #195	; 0xc3
    24cc:	02820123 	addeq	r0, r2, #-1073741816	; 0xc0000008
    24d0:	01010012 	tsteq	r1, r2, lsl r0
    24d4:	05000d05 	streq	r0, [r0, #-3333]	; 0xfffff2fb
    24d8:	00c42402 	sbceq	r2, r4, r2, lsl #8
    24dc:	01260300 			; <UNDEFINED> instruction: 0x01260300
    24e0:	00120282 	andseq	r0, r2, r2, lsl #5
    24e4:	0d050101 	stfeqs	f0, [r5, #-4]
    24e8:	58020500 	stmdapl	r2, {r8, sl}
    24ec:	030000c4 	movweq	r0, #196	; 0xc4
    24f0:	02820126 	addeq	r0, r2, #-2147483639	; 0x80000009
    24f4:	01010012 	tsteq	r1, r2, lsl r0
    24f8:	05050304 	streq	r0, [r5, #-772]	; 0xfffffcfc
    24fc:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
    2500:	030000c4 	movweq	r0, #196	; 0xc4
    2504:	13050114 	movwne	r0, #20756	; 0x5114
    2508:	05055b08 	streq	r5, [r5, #-2824]	; 0xfffff4f8
    250c:	0a02cb08 	beq	b5134 <_bss_end+0xa3444>
    2510:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2514:	00050503 	andeq	r0, r5, r3, lsl #10
    2518:	c5080205 	strgt	r0, [r8, #-517]	; 0xfffffdfb
    251c:	1c030000 	stcne	0, cr0, [r3], {-0}
    2520:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    2524:	48050568 	stmdami	r5, {r3, r5, r6, r8, sl}
    2528:	000a0269 	andeq	r0, sl, r9, ror #4
    252c:	03040101 	movweq	r0, #16641	; 0x4101
    2530:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2534:	00c54c02 	sbceq	r4, r5, r2, lsl #24
    2538:	011c0300 	tsteq	ip, r0, lsl #6
    253c:	00120286 	andseq	r0, r2, r6, lsl #5
    2540:	03040101 	movweq	r0, #16641	; 0x4101
    2544:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2548:	00c58002 	sbceq	r8, r5, r2
    254c:	01220300 			; <UNDEFINED> instruction: 0x01220300
    2550:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
    2554:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    2558:	29056601 	stmdbcs	r5, {r0, r9, sl, sp, lr}
    255c:	4a280569 	bmi	a03b08 <_bss_end+0x9f1e18>
    2560:	00823105 	addeq	r3, r2, r5, lsl #2
    2564:	06010402 	streq	r0, [r1], -r2, lsl #8
    2568:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    256c:	17054a02 	strne	r4, [r5, -r2, lsl #20]
    2570:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2574:	14052e06 	strne	r2, [r5], #-3590	; 0xfffff1fa
    2578:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    257c:	4d10054b 	cfldr32mi	mvfx0, [r0, #-300]	; 0xfffffed4
    2580:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2584:	01010008 	tsteq	r1, r8
    2588:	16050304 	strne	r0, [r5], -r4, lsl #6
    258c:	00020500 	andeq	r0, r2, r0, lsl #10
    2590:	030000c6 	movweq	r0, #198	; 0xc6
    2594:	0905012e 	stmdbeq	r5, {r1, r2, r3, r5, r8}
    2598:	001505bc 			; <UNDEFINED> instruction: 0x001505bc
    259c:	66010402 	strvs	r0, [r1], -r2, lsl #8
    25a0:	05691e05 	strbeq	r1, [r9, #-3589]!	; 0xfffff1fb
    25a4:	2f054a1d 	svccs	0x00054a1d
    25a8:	4a1d052e 	bmi	743a68 <_bss_end+0x731d78>
    25ac:	05d71405 	ldrbeq	r1, [r7, #1029]	; 0x405
    25b0:	05054d10 	streq	r4, [r5, #-3344]	; 0xfffff2f0
    25b4:	0008022f 	andeq	r0, r8, pc, lsr #4
    25b8:	03040101 	movweq	r0, #16641	; 0x4101
    25bc:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    25c0:	00c67c02 	sbceq	r7, r6, r2, lsl #24
    25c4:	013a0300 	teqeq	sl, r0, lsl #6
    25c8:	05840e05 	streq	r0, [r4, #3589]	; 0xe05
    25cc:	09054a0d 	stmdbeq	r5, {r0, r2, r3, r9, fp, lr}
    25d0:	0018054a 	andseq	r0, r8, sl, asr #10
    25d4:	4a010402 	bmi	435e4 <_bss_end+0x318f4>
    25d8:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    25dc:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    25e0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    25e4:	054b4a01 	strbeq	r4, [fp, #-2561]	; 0xfffff5ff
    25e8:	17054d18 	smladne	r5, r8, sp, r4
    25ec:	d718054a 	ldrle	r0, [r8, -sl, asr #10]
    25f0:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    25f4:	10054a0f 	andne	r4, r5, pc, lsl #20
    25f8:	2f05054c 	svccs	0x0005054c
    25fc:	01000802 	tsteq	r0, r2, lsl #16
    2600:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    2604:	02050012 	andeq	r0, r5, #18
    2608:	0000c718 	andeq	ip, r0, r8, lsl r7
    260c:	0100c603 	tsteq	r0, r3, lsl #12
    2610:	05bd1005 	ldreq	r1, [sp, #5]!
    2614:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2618:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    261c:	00120503 	andseq	r0, r2, r3, lsl #10
    2620:	c7440205 	strbgt	r0, [r4, -r5, lsl #4]
    2624:	d1030000 	mrsle	r0, (UNDEF: 3)
    2628:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    262c:	00080285 	andeq	r0, r8, r5, lsl #5
    2630:	03040101 	movweq	r0, #16641	; 0x4101
    2634:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
    2638:	00c76402 	sbceq	r6, r7, r2, lsl #8
    263c:	00d60300 	sbcseq	r0, r6, r0, lsl #6
    2640:	bc090501 	cfstr32lt	mvfx0, [r9], {1}
    2644:	02003005 	andeq	r3, r0, #5
    2648:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    264c:	1b056714 	blne	15c2a4 <_bss_end+0x14a5b4>
    2650:	6709054e 	strvs	r0, [r9, -lr, asr #10]
    2654:	02001c05 	andeq	r1, r0, #1280	; 0x500
    2658:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    265c:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    2660:	14052e01 	strne	r2, [r5], #-3585	; 0xfffff1ff
    2664:	4c09054b 	cfstr32mi	mvfx0, [r9], {75}	; 0x4b
    2668:	05682305 	strbeq	r2, [r8, #-773]!	; 0xfffffcfb
    266c:	0d05ba11 	vstreq	s22, [r5, #-68]	; 0xffffffbc
    2670:	4b18054a 	blmi	603ba0 <_bss_end+0x5f1eb0>
    2674:	054c2405 	strbeq	r2, [ip, #-1029]	; 0xfffffbfb
    2678:	1105be23 	tstne	r5, r3, lsr #28
    267c:	4a0d05ba 	bmi	343d6c <_bss_end+0x33207c>
    2680:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    2684:	68054c24 	stmdavs	r5, {r2, r5, sl, fp, lr}
    2688:	021005a2 	andseq	r0, r0, #679477248	; 0x28800000
    268c:	05051424 	streq	r1, [r5, #-1060]	; 0xfffffbdc
    2690:	0008022f 	andeq	r0, r8, pc, lsr #4
    2694:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    2698:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    269c:	00c8bc02 	sbceq	fp, r8, r2, lsl #24
    26a0:	010e0300 	mrseq	r0, ELR_hyp
    26a4:	059f1705 	ldreq	r1, [pc, #1797]	; 2db1 <CPSR_IRQ_INHIBIT+0x2d31>
    26a8:	02220805 	eoreq	r0, r2, #327680	; 0x50000
    26ac:	0101000a 	tsteq	r1, sl
    26b0:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
    26b4:	08020500 	stmdaeq	r2, {r8, sl}
    26b8:	030000c9 	movweq	r0, #201	; 0xc9
    26bc:	05830113 	streq	r0, [r3, #275]	; 0x113
    26c0:	0505670e 	streq	r6, [r5, #-1806]	; 0xfffff8f2
    26c4:	0a026849 	beq	9c7f0 <_bss_end+0x8ab00>
    26c8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    26cc:	00050504 	andeq	r0, r5, r4, lsl #10
    26d0:	c94c0205 	stmdbgt	ip, {r0, r2, r9}^
    26d4:	13030000 	movwne	r0, #12288	; 0x3000
    26d8:	12028501 	andne	r8, r2, #4194304	; 0x400000
    26dc:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    26e0:	00160504 	andseq	r0, r6, r4, lsl #10
    26e4:	c9800205 	stmibgt	r0, {r0, r2, r9}
    26e8:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    26ec:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    26f0:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    26f4:	01010008 	tsteq	r1, r8
    26f8:	16050404 	strne	r0, [r5], -r4, lsl #8
    26fc:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
    2700:	030000c9 	movweq	r0, #201	; 0xc9
    2704:	0905011d 	stmdbeq	r5, {r0, r2, r3, r4, r8}
    2708:	001505bc 			; <UNDEFINED> instruction: 0x001505bc
    270c:	66010402 	strvs	r0, [r1], -r2, lsl #8
    2710:	05681105 	strbeq	r1, [r8, #-261]!	; 0xfffffefb
    2714:	1d054a0d 	vstrne	s8, [r5, #-52]	; 0xffffffcc
    2718:	6718054c 	ldrvs	r0, [r8, -ip, asr #10]
    271c:	054e1005 	strbeq	r1, [lr, #-5]
    2720:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2724:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2728:	00120504 	andseq	r0, r2, r4, lsl #10
    272c:	ca140205 	bgt	502f48 <_bss_end+0x4f1258>
    2730:	2b030000 	blcs	c2738 <_bss_end+0xb0a48>
    2734:	840d0501 	strhi	r0, [sp], #-1281	; 0xfffffaff
    2738:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    273c:	12054b14 	andne	r4, r5, #20, 22	; 0x5000
    2740:	68100550 	ldmdavs	r0, {r4, r6, r8, sl}
    2744:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2748:	01010008 	tsteq	r1, r8
    274c:	12050404 	andne	r0, r5, #4, 8	; 0x4000000
    2750:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    2754:	030000ca 	movweq	r0, #202	; 0xca
    2758:	0d050139 	stfeqs	f0, [r5, #-228]	; 0xffffff1c
    275c:	4a0905bc 	bmi	243e54 <_bss_end+0x232164>
    2760:	054c1405 	strbeq	r1, [ip, #-1029]	; 0xfffffbfb
    2764:	05054d10 	streq	r4, [r5, #-3344]	; 0xfffff2f0
    2768:	0008022f 	andeq	r0, r8, pc, lsr #4
    276c:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    2770:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2774:	00caa002 	sbceq	sl, sl, r2
    2778:	00c70300 	sbceq	r0, r7, r0, lsl #6
    277c:	84050501 	strhi	r0, [r5], #-1281	; 0xfffffaff
    2780:	01000802 	tsteq	r0, r2, lsl #16
    2784:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    2788:	02050014 	andeq	r0, r5, #20
    278c:	0000cac0 	andeq	ip, r0, r0, asr #21
    2790:	0100cb03 	tsteq	r0, r3, lsl #22
    2794:	05bc1b05 	ldreq	r1, [ip, #2821]!	; 0xb05
    2798:	14056709 	strne	r6, [r5], #-1801	; 0xfffff8f7
    279c:	4c350567 	cfldr32mi	mvfx0, [r5], #-412	; 0xfffffe64
    27a0:	05f41005 	ldrbeq	r1, [r4, #5]!
    27a4:	06022f05 	streq	r2, [r2], -r5, lsl #30
    27a8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    27ac:	00050505 	andeq	r0, r5, r5, lsl #10
    27b0:	cb280205 	blgt	a02fcc <_bss_end+0x9f12dc>
    27b4:	0f030000 	svceq	0x00030000
    27b8:	83130501 	tsthi	r3, #4194304	; 0x400000
    27bc:	23080505 	movwcs	r0, #34053	; 0x8505
    27c0:	01000a02 	tsteq	r0, r2, lsl #20
    27c4:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    27c8:	02050005 	andeq	r0, r5, #5
    27cc:	0000cb70 	andeq	ip, r0, r0, ror fp
    27d0:	83011503 	movwhi	r1, #5379	; 0x1503
    27d4:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    27d8:	02684905 	rsbeq	r4, r8, #81920	; 0x14000
    27dc:	0101000a 	tsteq	r1, sl
    27e0:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
    27e4:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
    27e8:	030000cb 	movweq	r0, #203	; 0xcb
    27ec:	02850115 	addeq	r0, r5, #1073741829	; 0x40000005
    27f0:	01010012 	tsteq	r1, r2, lsl r0
    27f4:	16050504 	strne	r0, [r5], -r4, lsl #10
    27f8:	e8020500 	stmda	r2, {r8, sl}
    27fc:	030000cb 	movweq	r0, #203	; 0xcb
    2800:	0905011a 	stmdbeq	r5, {r1, r3, r4, r8}
    2804:	682e05bd 	stmdavs	lr!, {r0, r2, r3, r4, r5, r7, r8, sl}
    2808:	05821705 	streq	r1, [r2, #1797]	; 0x705
    280c:	10054b14 	andne	r4, r5, r4, lsl fp
    2810:	2f05054d 	svccs	0x0005054d
    2814:	01000802 	tsteq	r0, r2, lsl #16
    2818:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    281c:	02050016 	andeq	r0, r5, #22
    2820:	0000cc40 	andeq	ip, r0, r0, asr #24
    2824:	05012603 	streq	r2, [r1, #-1539]	; 0xfffff9fd
    2828:	2005bd17 	andcs	fp, r5, r7, lsl sp
    282c:	03040200 	movweq	r0, #16896	; 0x4200
    2830:	002c054a 	eoreq	r0, ip, sl, asr #10
    2834:	83020402 	movwhi	r0, #9218	; 0x2402
    2838:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    283c:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    2840:	04020009 	streq	r0, [r2], #-9
    2844:	10058102 	andne	r8, r5, r2, lsl #2
    2848:	2f050585 	svccs	0x00050585
    284c:	01000802 	tsteq	r0, r2, lsl #16
    2850:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    2854:	02050012 	andeq	r0, r5, #18
    2858:	0000ccb0 			; <UNDEFINED> instruction: 0x0000ccb0
    285c:	05012f03 	streq	r2, [r1, #-3843]	; 0xfffff0fd
    2860:	0d05840e 	cfstrseq	mvf8, [r5, #-56]	; 0xffffffc8
    2864:	4a09054a 	bmi	243d94 <_bss_end+0x2320a4>
    2868:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    286c:	11054c1f 	tstne	r5, pc, lsl ip
    2870:	6810054b 	ldmdavs	r0, {r0, r1, r3, r6, r8, sl}
    2874:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2878:	01010008 	tsteq	r1, r8
    287c:	12050504 	andne	r0, r5, #4, 10	; 0x1000000
    2880:	08020500 	stmdaeq	r2, {r8, sl}
    2884:	030000cd 	movweq	r0, #205	; 0xcd
    2888:	1005013a 	andne	r0, r5, sl, lsr r1
    288c:	2f0505bc 	svccs	0x000505bc
    2890:	01000802 	tsteq	r0, r2, lsl #16
    2894:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    2898:	02050012 	andeq	r0, r5, #18
    289c:	0000cd34 	andeq	ip, r0, r4, lsr sp
    28a0:	0100c303 	tsteq	r0, r3, lsl #6
    28a4:	02850505 	addeq	r0, r5, #20971520	; 0x1400000
    28a8:	01010008 	tsteq	r1, r8
    28ac:	14050504 	strne	r0, [r5], #-1284	; 0xfffffafc
    28b0:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    28b4:	030000cd 	movweq	r0, #205	; 0xcd
    28b8:	050100c8 	streq	r0, [r1, #-200]	; 0xffffff38
    28bc:	0d05be23 	stceq	14, cr11, [r5, #-140]	; 0xffffff74
    28c0:	4a090566 	bmi	243e60 <_bss_end+0x232170>
    28c4:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    28c8:	10054c3e 	andne	r4, r5, lr, lsr ip
    28cc:	2f0505d8 	svccs	0x000505d8
    28d0:	01000802 	tsteq	r0, r2, lsl #16
    28d4:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    28d8:	02050005 	andeq	r0, r5, #5
    28dc:	0000cdc0 	andeq	ip, r0, r0, asr #27
    28e0:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    28e4:	05058313 	streq	r8, [r5, #-787]	; 0xfffffced
    28e8:	0a022308 	beq	8b510 <_bss_end+0x79820>
    28ec:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    28f0:	00050506 	andeq	r0, r5, r6, lsl #10
    28f4:	ce080205 	cdpgt	2, 0, cr0, cr8, cr5, {0}
    28f8:	15030000 	strne	r0, [r3, #-0]
    28fc:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    2900:	49050567 	stmdbmi	r5, {r0, r1, r2, r5, r6, r8, sl}
    2904:	000a0268 	andeq	r0, sl, r8, ror #4
    2908:	06040101 	streq	r0, [r4], -r1, lsl #2
    290c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2910:	00ce4c02 	sbceq	r4, lr, r2, lsl #24
    2914:	01150300 	tsteq	r5, r0, lsl #6
    2918:	00120285 	andseq	r0, r2, r5, lsl #5
    291c:	06040101 	streq	r0, [r4], -r1, lsl #2
    2920:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2924:	00ce8002 	sbceq	r8, lr, r2
    2928:	011a0300 	tsteq	sl, r0, lsl #6
    292c:	05be1005 	ldreq	r1, [lr, #5]!
    2930:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2934:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2938:	00160506 	andseq	r0, r6, r6, lsl #10
    293c:	ceac0205 	cdpgt	2, 10, cr0, cr12, cr5, {0}
    2940:	21030000 	mrscs	r0, (UNDEF: 3)
    2944:	be170501 	cfmul32lt	mvfx0, mvfx7, mvfx1
    2948:	02002005 	andeq	r2, r0, #5
    294c:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    2950:	04020043 	streq	r0, [r2], #-67	; 0xffffffbd
    2954:	25058302 	strcs	r8, [r5, #-770]	; 0xfffffcfe
    2958:	02040200 	andeq	r0, r4, #0, 4
    295c:	00090566 	andeq	r0, r9, r6, ror #10
    2960:	81020402 	tsthi	r2, r2, lsl #8
    2964:	05851005 	streq	r1, [r5, #5]
    2968:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    296c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2970:	00120506 	andseq	r0, r2, r6, lsl #10
    2974:	cf1c0205 	svcgt	0x001c0205
    2978:	2b030000 	blcs	c2980 <_bss_end+0xb0c90>
    297c:	840e0501 	strhi	r0, [lr], #-1281	; 0xfffffaff
    2980:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    2984:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2988:	4c1e054b 	cfldr32mi	mvfx0, [lr], {75}	; 0x4b
    298c:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    2990:	05056810 	streq	r6, [r5, #-2064]	; 0xfffff7f0
    2994:	0008022f 	andeq	r0, r8, pc, lsr #4
    2998:	06040101 	streq	r0, [r4], -r1, lsl #2
    299c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    29a0:	00cf7402 	sbceq	r7, pc, r2, lsl #8
    29a4:	01360300 	teqeq	r6, r0, lsl #6
    29a8:	05bc1005 	ldreq	r1, [ip, #5]!
    29ac:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    29b0:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    29b4:	00120506 	andseq	r0, r2, r6, lsl #10
    29b8:	cfa00205 	svcgt	0x00a00205
    29bc:	3f030000 	svccc	0x00030000
    29c0:	85050501 	strhi	r0, [r5, #-1281]	; 0xfffffaff
    29c4:	01000802 	tsteq	r0, r2, lsl #16
    29c8:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    29cc:	02050014 	andeq	r0, r5, #20
    29d0:	0000cfc0 	andeq	ip, r0, r0, asr #31
    29d4:	0100c403 	tsteq	r0, r3, lsl #8
    29d8:	05be2205 	ldreq	r2, [lr, #517]!	; 0x205
    29dc:	0905660d 	stmdbeq	r5, {r0, r2, r3, r9, sl, sp, lr}
    29e0:	4b14054a 	blmi	503f10 <_bss_end+0x4f2220>
    29e4:	054c3c05 	strbeq	r3, [ip, #-3077]	; 0xfffff3fb
    29e8:	0505d810 	streq	sp, [r5, #-2064]	; 0xfffff7f0
    29ec:	0008022f 	andeq	r0, r8, pc, lsr #4
    29f0:	07040101 	streq	r0, [r4, -r1, lsl #2]
    29f4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    29f8:	00d02c02 	sbcseq	r2, r0, r2, lsl #24
    29fc:	010f0300 	mrseq	r0, SP_hyp
    2a00:	0a02bc83 	beq	b1c14 <_bss_end+0x9ff24>
    2a04:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2a08:	00050507 	andeq	r0, r5, r7, lsl #10
    2a0c:	d0680205 	rsble	r0, r8, r5, lsl #4
    2a10:	14030000 	strne	r0, [r3], #-0
    2a14:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    2a18:	49050567 	stmdbmi	r5, {r0, r1, r2, r5, r6, r8, sl}
    2a1c:	000a0268 	andeq	r0, sl, r8, ror #4
    2a20:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2a24:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2a28:	00d0ac02 	sbcseq	sl, r0, r2, lsl #24
    2a2c:	01140300 	tsteq	r4, r0, lsl #6
    2a30:	00120285 	andseq	r0, r2, r5, lsl #5
    2a34:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2a38:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2a3c:	00d0e002 	sbcseq	lr, r0, r2
    2a40:	01190300 	tsteq	r9, r0, lsl #6
    2a44:	05bc1805 	ldreq	r1, [ip, #2053]!	; 0x805
    2a48:	12056713 	andne	r6, r5, #4980736	; 0x4c0000
    2a4c:	0019054b 	andseq	r0, r9, fp, asr #10
    2a50:	4a030402 	bmi	c3a60 <_bss_end+0xb1d70>
    2a54:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    2a58:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    2a5c:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    2a60:	13056702 	movwne	r6, #22274	; 0x5702
    2a64:	02040200 	andeq	r0, r4, #0, 4
    2a68:	002e052e 	eoreq	r0, lr, lr, lsr #10
    2a6c:	66020402 	strvs	r0, [r2], -r2, lsl #8
    2a70:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    2a74:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    2a78:	04020009 	streq	r0, [r2], #-9
    2a7c:	14052d02 	strne	r2, [r5], #-3330	; 0xfffff2fe
    2a80:	4a090585 	bmi	24409c <_bss_end+0x2323ac>
    2a84:	056a2105 	strbeq	r2, [sl, #-261]!	; 0xfffffefb
    2a88:	26054a16 			; <UNDEFINED> instruction: 0x26054a16
    2a8c:	03040200 	movweq	r0, #16896	; 0x4200
    2a90:	0028052e 	eoreq	r0, r8, lr, lsr #10
    2a94:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    2a98:	02004905 	andeq	r4, r0, #81920	; 0x14000
    2a9c:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    2aa0:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    2aa4:	19056602 	stmdbne	r5, {r1, r9, sl, sp, lr}
    2aa8:	02040200 	andeq	r0, r4, #0, 4
    2aac:	001d052e 	andseq	r0, sp, lr, lsr #10
    2ab0:	4a020402 	bmi	83ac0 <_bss_end+0x71dd0>
    2ab4:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    2ab8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2abc:	0402000d 	streq	r0, [r2], #-13
    2ac0:	10052d02 	andne	r2, r5, r2, lsl #26
    2ac4:	2f050586 	svccs	0x00050586
    2ac8:	01000802 	tsteq	r0, r2, lsl #16
    2acc:	05070401 	streq	r0, [r7, #-1025]	; 0xfffffbff
    2ad0:	02050016 	andeq	r0, r5, #22
    2ad4:	0000d1c8 	andeq	sp, r0, r8, asr #3
    2ad8:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    2adc:	0505be10 	streq	fp, [r5, #-3600]	; 0xfffff1f0
    2ae0:	0008022f 	andeq	r0, r8, pc, lsr #4
    2ae4:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2ae8:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2aec:	00d1f402 	sbcseq	pc, r1, r2, lsl #8
    2af0:	01320300 	teqeq	r2, r0, lsl #6
    2af4:	05840e05 	streq	r0, [r4, #3589]	; 0xe05
    2af8:	09054a0d 	stmdbeq	r5, {r0, r2, r3, r9, fp, lr}
    2afc:	4b14054a 	blmi	50402c <_bss_end+0x4f233c>
    2b00:	4b11054c 	blmi	444038 <_bss_end+0x432348>
    2b04:	05681005 	strbeq	r1, [r8, #-5]!
    2b08:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2b0c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2b10:	00120507 	andseq	r0, r2, r7, lsl #10
    2b14:	d24c0205 	suble	r0, ip, #1342177280	; 0x50000000
    2b18:	3d030000 	stccc	0, cr0, [r3, #-0]
    2b1c:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    2b20:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2b24:	01010008 	tsteq	r1, r8
    2b28:	12050704 	andne	r0, r5, #4, 14	; 0x100000
    2b2c:	78020500 	stmdavc	r2, {r8, sl}
    2b30:	030000d2 	movweq	r0, #210	; 0xd2
    2b34:	050100c6 	streq	r0, [r1, #-198]	; 0xffffff3a
    2b38:	08028505 	stmdaeq	r2, {r0, r2, r8, sl, pc}
    2b3c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2b40:	00140507 	andseq	r0, r4, r7, lsl #10
    2b44:	d2980205 	addsle	r0, r8, #1342177280	; 0x50000000
    2b48:	cb030000 	blgt	c2b50 <_bss_end+0xb0e60>
    2b4c:	18050100 	stmdane	r5, {r8}
    2b50:	080d05be 	stmdaeq	sp, {r1, r2, r3, r4, r5, r7, r8, sl}
    2b54:	4a090520 	bmi	243fdc <_bss_end+0x2322ec>
    2b58:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    2b5c:	10054c28 	andne	r4, r5, r8, lsr #24
    2b60:	2f0505d8 	svccs	0x000505d8
    2b64:	01000802 	tsteq	r0, r2, lsl #16
    2b68:	05080401 	streq	r0, [r8, #-1025]	; 0xfffffbff
    2b6c:	02050009 	andeq	r0, r5, #9
    2b70:	0000d31c 	andeq	sp, r0, ip, lsl r3
    2b74:	05011003 	streq	r1, [r1, #-3]
    2b78:	0905831b 	stmdbeq	r5, {r0, r1, r3, r4, r8, r9, pc}
    2b7c:	0a022308 	beq	8b7a4 <_bss_end+0x79ab4>
    2b80:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2b84:	00090508 	andeq	r0, r9, r8, lsl #10
    2b88:	d3640205 	cmnle	r4, #1342177280	; 0x50000000
    2b8c:	16030000 	strne	r0, [r3], -r0
    2b90:	12058301 	andne	r8, r5, #67108864	; 0x4000000
    2b94:	49090567 	stmdbmi	r9, {r0, r1, r2, r5, r6, r8, sl}
    2b98:	000a0268 	andeq	r0, sl, r8, ror #4
    2b9c:	08040101 	stmdaeq	r4, {r0, r8}
    2ba0:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    2ba4:	00d3a802 	sbcseq	sl, r3, r2, lsl #16
    2ba8:	01160300 	tsteq	r6, r0, lsl #6
    2bac:	00120285 	andseq	r0, r2, r5, lsl #5
    2bb0:	08040101 	stmdaeq	r4, {r0, r8}
    2bb4:	05001a05 	streq	r1, [r0, #-2565]	; 0xfffff5fb
    2bb8:	00d3dc02 	sbcseq	sp, r3, r2, lsl #24
    2bbc:	011b0300 	tsteq	fp, r0, lsl #6
    2bc0:	05be1405 	ldreq	r1, [lr, #1029]!	; 0x405
    2bc4:	08022f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp}
    2bc8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2bcc:	001a0508 	andseq	r0, sl, r8, lsl #10
    2bd0:	d4080205 	strle	r0, [r8], #-517	; 0xfffffdfb
    2bd4:	22030000 	andcs	r0, r3, #0
    2bd8:	bc360501 	cfldr32lt	mvfx0, [r6], #-4
    2bdc:	05841405 	streq	r1, [r4, #1029]	; 0x405
    2be0:	08022f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp}
    2be4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2be8:	00160508 	andseq	r0, r6, r8, lsl #10
    2bec:	d4440205 	strble	r0, [r4], #-517	; 0xfffffdfb
    2bf0:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    2bf4:	84120501 	ldrhi	r0, [r2], #-1281	; 0xfffffaff
    2bf8:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    2bfc:	18054a0d 	stmdane	r5, {r0, r2, r3, r9, fp, lr}
    2c00:	4c23054b 	cfstr32mi	mvfx0, [r3], #-300	; 0xfffffed4
    2c04:	054b1505 	strbeq	r1, [fp, #-1285]	; 0xfffffafb
    2c08:	09056814 	stmdbeq	r5, {r2, r4, fp, sp, lr}
    2c0c:	0008022f 	andeq	r0, r8, pc, lsr #4
    2c10:	08040101 	stmdaeq	r4, {r0, r8}
    2c14:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    2c18:	00d49c02 	sbcseq	r9, r4, r2, lsl #24
    2c1c:	01340300 	teqeq	r4, r0, lsl #6
    2c20:	05bc1405 	ldreq	r1, [ip, #1029]!	; 0x405
    2c24:	08022f09 	stmdaeq	r2, {r0, r3, r8, r9, sl, fp, sp}
    2c28:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2c2c:	00100508 	andseq	r0, r0, r8, lsl #10
    2c30:	d4c80205 	strble	r0, [r8], #517	; 0x205
    2c34:	3d030000 	stccc	0, cr0, [r3, #-0]
    2c38:	85090501 	strhi	r0, [r9, #-1281]	; 0xfffffaff
    2c3c:	01000802 	tsteq	r0, r2, lsl #16
    2c40:	05080401 	streq	r0, [r8, #-1025]	; 0xfffffbff
    2c44:	02050018 	andeq	r0, r5, #24
    2c48:	0000d4e8 	andeq	sp, r0, r8, ror #9
    2c4c:	0100c203 	tsteq	r0, r3, lsl #4
    2c50:	05be2705 	ldreq	r2, [lr, #1797]!	; 0x705
    2c54:	0d059e11 	stceq	14, cr9, [r5, #-68]	; 0xffffffbc
    2c58:	4b18054a 	blmi	604188 <_bss_end+0x5f2498>
    2c5c:	054c3c05 	strbeq	r3, [ip, #-3077]	; 0xfffff3fb
    2c60:	0905d814 	stmdbeq	r5, {r2, r4, fp, ip, lr, pc}
    2c64:	0008022f 	andeq	r0, r8, pc, lsr #4
    2c68:	03290101 			; <UNDEFINED> instruction: 0x03290101
    2c6c:	00030000 	andeq	r0, r3, r0
    2c70:	00000262 	andeq	r0, r0, r2, ror #4
    2c74:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2c78:	0101000d 	tsteq	r1, sp
    2c7c:	00000101 	andeq	r0, r0, r1, lsl #2
    2c80:	00000100 	andeq	r0, r0, r0, lsl #2
    2c84:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    2c88:	2f632f74 	svccs	0x00632f74
    2c8c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2c90:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2c94:	442f6162 	strtmi	r6, [pc], #-354	; 2c9c <CPSR_IRQ_INHIBIT+0x2c1c>
    2c98:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2c9c:	73746e65 	cmnvc	r4, #1616	; 0x650
    2ca0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2ca4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2ca8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2cac:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2cb0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2cb4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2cb8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2cbc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2cc0:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2cc4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2cc8:	2f632f74 	svccs	0x00632f74
    2ccc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2cd0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2cd4:	442f6162 	strtmi	r6, [pc], #-354	; 2cdc <CPSR_IRQ_INHIBIT+0x2c5c>
    2cd8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2cdc:	73746e65 	cmnvc	r4, #1616	; 0x650
    2ce0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2ce4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2ce8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2cec:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2cf0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2cf4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2cf8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2cfc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2d00:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2d04:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2d08:	616f622f 	cmnvs	pc, pc, lsr #4
    2d0c:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    2d10:	2f306970 	svccs	0x00306970
    2d14:	006c6168 	rsbeq	r6, ip, r8, ror #2
    2d18:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2d1c:	552f632f 	strpl	r6, [pc, #-815]!	; 29f5 <CPSR_IRQ_INHIBIT+0x2975>
    2d20:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2d24:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2d28:	6f442f61 	svcvs	0x00442f61
    2d2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2d30:	2f73746e 	svccs	0x0073746e
    2d34:	6f72655a 	svcvs	0x0072655a
    2d38:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2d3c:	6178652f 	cmnvs	r8, pc, lsr #10
    2d40:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2d44:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2d48:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2d4c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2d50:	2f6c656e 	svccs	0x006c656e
    2d54:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2d58:	00656475 	rsbeq	r6, r5, r5, ror r4
    2d5c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2d60:	552f632f 	strpl	r6, [pc, #-815]!	; 2a39 <CPSR_IRQ_INHIBIT+0x29b9>
    2d64:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2d68:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2d6c:	6f442f61 	svcvs	0x00442f61
    2d70:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2d74:	2f73746e 	svccs	0x0073746e
    2d78:	6f72655a 	svcvs	0x0072655a
    2d7c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2d80:	6178652f 	cmnvs	r8, pc, lsr #10
    2d84:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2d88:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2d8c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2d90:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2d94:	2f6c656e 	svccs	0x006c656e
    2d98:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2d9c:	2f656475 	svccs	0x00656475
    2da0:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2da4:	00737265 	rsbseq	r7, r3, r5, ror #4
    2da8:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2dac:	552f632f 	strpl	r6, [pc, #-815]!	; 2a85 <CPSR_IRQ_INHIBIT+0x2a05>
    2db0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2db4:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2db8:	6f442f61 	svcvs	0x00442f61
    2dbc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2dc0:	2f73746e 	svccs	0x0073746e
    2dc4:	6f72655a 	svcvs	0x0072655a
    2dc8:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2dcc:	6178652f 	cmnvs	r8, pc, lsr #10
    2dd0:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2dd4:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2dd8:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2ddc:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2de0:	2f6c656e 	svccs	0x006c656e
    2de4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2de8:	2f656475 	svccs	0x00656475
    2dec:	636f7270 	cmnvs	pc, #112, 4
    2df0:	00737365 	rsbseq	r7, r3, r5, ror #6
    2df4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    2df8:	552f632f 	strpl	r6, [pc, #-815]!	; 2ad1 <CPSR_IRQ_INHIBIT+0x2a51>
    2dfc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2e00:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2e04:	6f442f61 	svcvs	0x00442f61
    2e08:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2e0c:	2f73746e 	svccs	0x0073746e
    2e10:	6f72655a 	svcvs	0x0072655a
    2e14:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    2e18:	6178652f 	cmnvs	r8, pc, lsr #10
    2e1c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2e20:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2e24:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2e28:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2e2c:	2f6c656e 	svccs	0x006c656e
    2e30:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2e34:	2f656475 	svccs	0x00656475
    2e38:	00007366 	andeq	r7, r0, r6, ror #6
    2e3c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    2e40:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2e44:	6f635f74 	svcvs	0x00635f74
    2e48:	6f72746e 	svcvs	0x0072746e
    2e4c:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2e50:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    2e54:	00000100 	andeq	r0, r0, r0, lsl #2
    2e58:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    2e5c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    2e60:	00000200 	andeq	r0, r0, r0, lsl #4
    2e64:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    2e68:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    2e6c:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    2e70:	00020068 	andeq	r0, r2, r8, rrx
    2e74:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    2e78:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2e7c:	635f7470 	cmpvs	pc, #112, 8	; 0x70000000
    2e80:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    2e84:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    2e88:	00682e72 	rsbeq	r2, r8, r2, ror lr
    2e8c:	74000003 	strvc	r0, [r0], #-3
    2e90:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2e94:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    2e98:	72700000 	rsbsvc	r0, r0, #0
    2e9c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2ea0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2ea4:	73000005 	movwvc	r0, #5
    2ea8:	682e6977 	stmdavs	lr!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}
    2eac:	00000500 	andeq	r0, r0, r0, lsl #10
    2eb0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    2eb4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    2eb8:	682e6d65 	stmdavs	lr!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
    2ebc:	00000600 	andeq	r0, r0, r0, lsl #12
    2ec0:	636f7270 	cmnvs	pc, #112, 4
    2ec4:	5f737365 	svcpl	0x00737365
    2ec8:	616e616d 	cmnvs	lr, sp, ror #2
    2ecc:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    2ed0:	00050068 	andeq	r0, r5, r8, rrx
    2ed4:	01050000 	mrseq	r0, (UNDEF: 5)
    2ed8:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    2edc:	030000d5 	movweq	r0, #213	; 0xd5
    2ee0:	4c050112 	stfmis	f0, [r5], {18}
    2ee4:	2e130568 	cfmsc32cs	mvfx0, mvfx3, mvfx8
    2ee8:	05300505 	ldreq	r0, [r0, #-1285]!	; 0xfffffafb
    2eec:	2b05d961 	blcs	179478 <_bss_end+0x167788>
    2ef0:	080d052e 	stmdaeq	sp, {r1, r2, r3, r5, r8, sl}
    2ef4:	30670525 	rsbcc	r0, r7, r5, lsr #10
    2ef8:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
    2efc:	3125080d 			; <UNDEFINED> instruction: 0x3125080d
    2f00:	a12f0105 			; <UNDEFINED> instruction: 0xa12f0105
    2f04:	054f2405 	strbeq	r2, [pc, #-1029]	; 2b07 <CPSR_IRQ_INHIBIT+0x2a87>
    2f08:	1c056605 	stcne	6, cr6, [r5], {5}
    2f0c:	4b01054b 	blmi	44440 <_bss_end+0x32750>
    2f10:	056a3069 	strbeq	r3, [sl, #-105]!	; 0xffffff97
    2f14:	38059f13 	stmdacc	r5, {r0, r1, r4, r8, r9, sl, fp, ip, pc}
    2f18:	4d01052e 	cfstr32mi	mvfx0, [r1, #-184]	; 0xffffff48
    2f1c:	9f0c05a1 	svcls	0x000c05a1
    2f20:	054a1c05 	strbeq	r1, [sl, #-3077]	; 0xfffff3fb
    2f24:	01052e3a 	tsteq	r5, sl, lsr lr
    2f28:	4305854b 	movwmi	r8, #21835	; 0x554b
    2f2c:	2e40059f 	mcrcs	5, 2, r0, cr0, cr15, {4}
    2f30:	054a3905 	strbeq	r3, [sl, #-2309]	; 0xfffff6fb
    2f34:	3b058240 	blcc	16383c <_bss_end+0x151b4c>
    2f38:	2f01052e 	svccs	0x0001052e
    2f3c:	9f440569 	svcls	0x00440569
    2f40:	052e4105 	streq	r4, [lr, #-261]!	; 0xfffffefb
    2f44:	41054a3a 	tstmi	r5, sl, lsr sl
    2f48:	2e3c0582 	cfadd32cs	mvfx0, mvfx12, mvfx2
    2f4c:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    2f50:	059f1805 	ldreq	r1, [pc, #2053]	; 375d <CPSR_IRQ_INHIBIT+0x36dd>
    2f54:	08054d15 	stmdaeq	r5, {r0, r2, r4, r8, sl, fp, lr}
    2f58:	4973054a 	ldmdbmi	r3!, {r1, r3, r6, r8, sl}^
    2f5c:	05830805 	streq	r0, [r3, #2053]	; 0x805
    2f60:	01052d75 	tsteq	r5, r5, ror sp
    2f64:	18056930 	stmdane	r5, {r4, r5, r8, fp, sp, lr}
    2f68:	4d15059f 	cfldr32mi	mvfx0, [r5, #-636]	; 0xfffffd84
    2f6c:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    2f70:	08054975 	stmdaeq	r5, {r0, r2, r4, r5, r6, r8, fp, lr}
    2f74:	2d770583 	cfldr64cs	mvdx0, [r7, #-524]!	; 0xfffffdf4
    2f78:	66300105 	ldrtvs	r0, [r0], -r5, lsl #2
    2f7c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    2f80:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    2f84:	a9030643 	stmdbge	r3, {r0, r1, r6, r9, sl}
    2f88:	0105827f 	tsteq	r5, pc, ror r2
    2f8c:	6600d703 	strvs	sp, [r0], -r3, lsl #14
    2f90:	0a024aba 	beq	95a80 <_bss_end+0x83d90>
    2f94:	f7010100 			; <UNDEFINED> instruction: 0xf7010100
    2f98:	03000002 	movweq	r0, #2
    2f9c:	0002b600 	andeq	fp, r2, r0, lsl #12
    2fa0:	fb010200 	blx	437aa <_bss_end+0x31aba>
    2fa4:	01000d0e 	tsteq	r0, lr, lsl #26
    2fa8:	00010101 	andeq	r0, r1, r1, lsl #2
    2fac:	00010000 	andeq	r0, r1, r0
    2fb0:	6d2f0100 	stfvss	f0, [pc, #-0]	; 2fb8 <CPSR_IRQ_INHIBIT+0x2f38>
    2fb4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2fb8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2fbc:	4b2f7372 	blmi	bdfd8c <_bss_end+0xbce09c>
    2fc0:	2f616275 	svccs	0x00616275
    2fc4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2fc8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2fcc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2fd0:	614d6f72 	hvcvs	55026	; 0xd6f2
    2fd4:	652f6574 	strvs	r6, [pc, #-1396]!	; 2a68 <CPSR_IRQ_INHIBIT+0x29e8>
    2fd8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2fdc:	2f73656c 	svccs	0x0073656c
    2fe0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2fe4:	6b2f4332 	blvs	bd3cb4 <_bss_end+0xbc1fc4>
    2fe8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2fec:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    2ff0:	6d2f0063 	stcvs	0, cr0, [pc, #-396]!	; 2e6c <CPSR_IRQ_INHIBIT+0x2dec>
    2ff4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2ff8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2ffc:	4b2f7372 	blmi	bdfdcc <_bss_end+0xbce0dc>
    3000:	2f616275 	svccs	0x00616275
    3004:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3008:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    300c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3010:	614d6f72 	hvcvs	55026	; 0xd6f2
    3014:	652f6574 	strvs	r6, [pc, #-1396]!	; 2aa8 <CPSR_IRQ_INHIBIT+0x2a28>
    3018:	706d6178 	rsbvc	r6, sp, r8, ror r1
    301c:	2f73656c 	svccs	0x0073656c
    3020:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3024:	6b2f4332 	blvs	bd3cf4 <_bss_end+0xbc2004>
    3028:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    302c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    3030:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3034:	6f622f65 	svcvs	0x00622f65
    3038:	2f647261 	svccs	0x00647261
    303c:	30697072 	rsbcc	r7, r9, r2, ror r0
    3040:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    3044:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3048:	2f632f74 	svccs	0x00632f74
    304c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3050:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3054:	442f6162 	strtmi	r6, [pc], #-354	; 305c <CPSR_IRQ_INHIBIT+0x2fdc>
    3058:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    305c:	73746e65 	cmnvc	r4, #1616	; 0x650
    3060:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3064:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3068:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    306c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3070:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3074:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3078:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    307c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3080:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3084:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3088:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    308c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    3090:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3094:	2f632f74 	svccs	0x00632f74
    3098:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    309c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    30a0:	442f6162 	strtmi	r6, [pc], #-354	; 30a8 <CPSR_IRQ_INHIBIT+0x3028>
    30a4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    30a8:	73746e65 	cmnvc	r4, #1616	; 0x650
    30ac:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    30b0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    30b4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    30b8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    30bc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    30c0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    30c4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    30c8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    30cc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    30d0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    30d4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    30d8:	2f632f74 	svccs	0x00632f74
    30dc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    30e0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    30e4:	442f6162 	strtmi	r6, [pc], #-354	; 30ec <CPSR_IRQ_INHIBIT+0x306c>
    30e8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    30ec:	73746e65 	cmnvc	r4, #1616	; 0x650
    30f0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    30f4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    30f8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    30fc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3100:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3104:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3108:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    310c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3110:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3114:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3118:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    311c:	0079726f 	rsbseq	r7, r9, pc, ror #4
    3120:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3124:	552f632f 	strpl	r6, [pc, #-815]!	; 2dfd <CPSR_IRQ_INHIBIT+0x2d7d>
    3128:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    312c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3130:	6f442f61 	svcvs	0x00442f61
    3134:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3138:	2f73746e 	svccs	0x0073746e
    313c:	6f72655a 	svcvs	0x0072655a
    3140:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3144:	6178652f 	cmnvs	r8, pc, lsr #10
    3148:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    314c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3150:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3154:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3158:	2f6c656e 	svccs	0x006c656e
    315c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3160:	2f656475 	svccs	0x00656475
    3164:	636f7270 	cmnvs	pc, #112, 4
    3168:	00737365 	rsbseq	r7, r3, r5, ror #6
    316c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3170:	552f632f 	strpl	r6, [pc, #-815]!	; 2e49 <CPSR_IRQ_INHIBIT+0x2dc9>
    3174:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3178:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    317c:	6f442f61 	svcvs	0x00442f61
    3180:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3184:	2f73746e 	svccs	0x0073746e
    3188:	6f72655a 	svcvs	0x0072655a
    318c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3190:	6178652f 	cmnvs	r8, pc, lsr #10
    3194:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3198:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    319c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    31a0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    31a4:	2f6c656e 	svccs	0x006c656e
    31a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    31ac:	2f656475 	svccs	0x00656475
    31b0:	00007366 	andeq	r7, r0, r6, ror #6
    31b4:	6e69616d 	powvsez	f6, f1, #5.0
    31b8:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    31bc:	00000100 	andeq	r0, r0, r0, lsl #2
    31c0:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    31c4:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    31c8:	00000200 	andeq	r0, r0, r0, lsl #4
    31cc:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    31d0:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    31d4:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    31d8:	00020068 	andeq	r0, r2, r8, rrx
    31dc:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    31e0:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    31e4:	00000300 	andeq	r0, r0, r0, lsl #6
    31e8:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    31ec:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    31f0:	00030068 	andeq	r0, r3, r8, rrx
    31f4:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    31f8:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    31fc:	635f7470 	cmpvs	pc, #112, 8	; 0x70000000
    3200:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    3204:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    3208:	00682e72 	rsbeq	r2, r8, r2, ror lr
    320c:	6d000004 	stcvs	0, cr0, [r0, #-16]
    3210:	616d6d65 	cmnvs	sp, r5, ror #26
    3214:	00682e70 	rsbeq	r2, r8, r0, ror lr
    3218:	70000005 	andvc	r0, r0, r5
    321c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3220:	682e7373 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
    3224:	00000600 	andeq	r0, r0, r0, lsl #12
    3228:	2e697773 	mcrcs	7, 3, r7, cr9, cr3, {3}
    322c:	00060068 	andeq	r0, r6, r8, rrx
    3230:	6c696600 	stclvs	6, cr6, [r9], #-0
    3234:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    3238:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    323c:	00070068 	andeq	r0, r7, r8, rrx
    3240:	6f727000 	svcvs	0x00727000
    3244:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3248:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    324c:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3250:	0600682e 	streq	r6, [r0], -lr, lsr #16
    3254:	05000000 	streq	r0, [r0, #-0]
    3258:	02050001 	andeq	r0, r5, #1
    325c:	0000d840 	andeq	sp, r0, r0, asr #16
    3260:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    3264:	01054b19 	tsteq	r5, r9, lsl fp
    3268:	660b034b 	strvs	r0, [fp], -fp, asr #6
    326c:	0b031305 	bleq	c7e88 <_bss_end+0xb6198>
    3270:	4d1b054a 	cfldr32mi	mvfx0, [fp, #-296]	; 0xfffffed8
    3274:	054f1f05 	strbeq	r1, [pc, #-3845]	; 2377 <CPSR_IRQ_INHIBIT+0x22f7>
    3278:	2405891c 	strcs	r8, [r5], #-2332	; 0xfffff6e4
    327c:	69120585 	ldmdbvs	r2, {r0, r2, r7, r8, sl}
    3280:	05a12305 	streq	r2, [r1, #773]!	; 0x305
    3284:	0505690f 	streq	r6, [r5, #-2319]	; 0xfffff6f1
    3288:	01040200 	mrseq	r0, R12_usr
    328c:	00120231 	andseq	r0, r2, r1, lsr r2
    3290:	028c0101 	addeq	r0, ip, #1073741824	; 0x40000000
    3294:	00030000 	andeq	r0, r3, r0
    3298:	00000150 	andeq	r0, r0, r0, asr r1
    329c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    32a0:	0101000d 	tsteq	r1, sp
    32a4:	00000101 	andeq	r0, r0, r1, lsl #2
    32a8:	00000100 	andeq	r0, r0, r0, lsl #2
    32ac:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    32b0:	2f632f74 	svccs	0x00632f74
    32b4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    32b8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    32bc:	442f6162 	strtmi	r6, [pc], #-354	; 32c4 <CPSR_IRQ_INHIBIT+0x3244>
    32c0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    32c4:	73746e65 	cmnvc	r4, #1616	; 0x650
    32c8:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    32cc:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    32d0:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    32d4:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    32d8:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    32dc:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    32e0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    32e4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    32e8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    32ec:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    32f0:	0079726f 	rsbseq	r7, r9, pc, ror #4
    32f4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    32f8:	552f632f 	strpl	r6, [pc, #-815]!	; 2fd1 <CPSR_IRQ_INHIBIT+0x2f51>
    32fc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3300:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3304:	6f442f61 	svcvs	0x00442f61
    3308:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    330c:	2f73746e 	svccs	0x0073746e
    3310:	6f72655a 	svcvs	0x0072655a
    3314:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3318:	6178652f 	cmnvs	r8, pc, lsr #10
    331c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3320:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3324:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3328:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    332c:	2f6c656e 	svccs	0x006c656e
    3330:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3334:	2f656475 	svccs	0x00656475
    3338:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    333c:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    3340:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    3344:	2f006c61 	svccs	0x00006c61
    3348:	2f746e6d 	svccs	0x00746e6d
    334c:	73552f63 	cmpvc	r5, #396	; 0x18c
    3350:	2f737265 	svccs	0x00737265
    3354:	6162754b 	cmnvs	r2, fp, asr #10
    3358:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    335c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3360:	5a2f7374 	bpl	be0138 <_bss_end+0xbce448>
    3364:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 31d8 <CPSR_IRQ_INHIBIT+0x3158>
    3368:	2f657461 	svccs	0x00657461
    336c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3370:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3374:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3378:	2f433249 	svccs	0x00433249
    337c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3380:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    3384:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3388:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 3200 <CPSR_IRQ_INHIBIT+0x3180>
    338c:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    3390:	6b000079 	blvs	357c <CPSR_IRQ_INHIBIT+0x34fc>
    3394:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3398:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    339c:	632e7061 			; <UNDEFINED> instruction: 0x632e7061
    33a0:	01007070 	tsteq	r0, r0, ror r0
    33a4:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    33a8:	66656474 			; <UNDEFINED> instruction: 0x66656474
    33ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    33b0:	656b0000 	strbvs	r0, [fp, #-0]!
    33b4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    33b8:	6165685f 	cmnvs	r5, pc, asr r8
    33bc:	00682e70 	rsbeq	r2, r8, r0, ror lr
    33c0:	70000003 	andvc	r0, r0, r3
    33c4:	70697265 	rsbvc	r7, r9, r5, ror #4
    33c8:	61726568 	cmnvs	r2, r8, ror #10
    33cc:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    33d0:	00000200 	andeq	r0, r0, r0, lsl #4
    33d4:	6d6d656d 	cfstr64vs	mvdx6, [sp, #-436]!	; 0xfffffe4c
    33d8:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    33dc:	00000300 	andeq	r0, r0, r0, lsl #6
    33e0:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    33e4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    33e8:	00000003 	andeq	r0, r0, r3
    33ec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    33f0:	00d8e802 	sbcseq	lr, r8, r2, lsl #16
    33f4:	1d051700 	stcne	7, cr1, [r5, #-0]
    33f8:	660c0586 	strvs	r0, [ip], -r6, lsl #11
    33fc:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
    3400:	05836d05 	streq	r6, [r3, #3333]	; 0xd05
    3404:	1105666f 	tstne	r5, pc, ror #12
    3408:	0567672f 	strbeq	r6, [r7, #-1839]!	; 0xfffff8d1
    340c:	0c056814 	stceq	8, cr6, [r5], {20}
    3410:	2f010568 	svccs	0x00010568
    3414:	9f2005a1 	svcls	0x002005a1
    3418:	056a1d05 	strbeq	r1, [sl, #-3333]!	; 0xfffff2fb
    341c:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    3420:	1d056601 	stcne	6, cr6, [r5, #-4]
    3424:	01040200 	mrseq	r0, R12_usr
    3428:	003b054a 	eorseq	r0, fp, sl, asr #10
    342c:	4a020402 	bmi	8443c <_bss_end+0x7274c>
    3430:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    3434:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    3438:	0505680f 	streq	r6, [r5, #-2063]	; 0xfffff7f1
    343c:	10053364 	andne	r3, r5, r4, ror #6
    3440:	0505506a 	streq	r5, [r5, #-106]	; 0xffffff96
    3444:	0027054a 	eoreq	r0, r7, sl, asr #10
    3448:	66010402 	strvs	r0, [r1], -r2, lsl #8
    344c:	02005805 	andeq	r5, r0, #327680	; 0x50000
    3450:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3454:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    3458:	18054a01 	stmdane	r5, {r0, r9, fp, lr}
    345c:	6830054c 	ldmdavs	r0!, {r2, r3, r6, r8, sl}
    3460:	056d4b05 	strbeq	r4, [sp, #-2821]!	; 0xfffff4fb
    3464:	19054920 	stmdbne	r5, {r5, r8, fp, lr}
    3468:	4a1e0569 	bmi	784a14 <_bss_end+0x772d24>
    346c:	054a2505 	strbeq	r2, [sl, #-1285]	; 0xfffffafb
    3470:	054c2e10 	strbeq	r2, [ip, #-3600]	; 0xfffff1f0
    3474:	10056719 	andne	r6, r5, r9, lsl r7
    3478:	4b13054a 	blmi	4c49a8 <_bss_end+0x4b2cb8>
    347c:	68671105 	stmdavs	r7!, {r0, r2, r8, ip}^
    3480:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    3484:	0105692c 	tsteq	r5, ip, lsr #18
    3488:	2005854b 	andcs	r8, r5, fp, asr #10
    348c:	6914059f 	ldmdbvs	r4, {r0, r1, r2, r3, r4, r7, r8, sl}
    3490:	05691005 	strbeq	r1, [r9, #-5]!
    3494:	1f054a05 	svcne	0x00054a05
    3498:	01040200 	mrseq	r0, R12_usr
    349c:	0025054a 	eoreq	r0, r5, sl, asr #10
    34a0:	4a010402 	bmi	444b0 <_bss_end+0x327c0>
    34a4:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    34a8:	4c2e0104 	stfmis	f0, [lr], #-16
    34ac:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    34b0:	15054a25 	strne	r4, [r5, #-2597]	; 0xfffff5db
    34b4:	831e052e 	tsthi	lr, #192937984	; 0xb800000
    34b8:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    34bc:	10052e15 	andne	r2, r5, r5, lsl lr
    34c0:	4a1b054b 	bmi	6c49f4 <_bss_end+0x6b2d04>
    34c4:	054e1005 	strbeq	r1, [lr, #-5]
    34c8:	1f054a05 	svcne	0x00054a05
    34cc:	01040200 	mrseq	r0, R12_usr
    34d0:	0025054a 	eoreq	r0, r5, sl, asr #10
    34d4:	4a010402 	bmi	444e4 <_bss_end+0x327f4>
    34d8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    34dc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    34e0:	1b054c10 	blne	156528 <_bss_end+0x144838>
    34e4:	2e25054a 	cfsh64cs	mvdx0, mvdx5, #42
    34e8:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    34ec:	1b052e10 	blne	14ed34 <_bss_end+0x13d044>
    34f0:	4b10054a 	blmi	404a20 <_bss_end+0x3f2d30>
    34f4:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    34f8:	10054a1b 	andne	r4, r5, fp, lsl sl
    34fc:	4a24052f 	bmi	9049c0 <_bss_end+0x8f2cd0>
    3500:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    3504:	9e823001 	cdpls	0, 8, cr3, cr2, cr1, {0}
    3508:	01040200 	mrseq	r0, R12_usr
    350c:	16056606 	strne	r6, [r5], -r6, lsl #12
    3510:	7fa50306 	svcvc	0x00a50306
    3514:	03010582 	movweq	r0, #5506	; 0x1582
    3518:	9e4a00db 	mcrls	0, 2, r0, cr10, cr11, {6}
    351c:	000a024a 	andeq	r0, sl, sl, asr #4
    3520:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
    3524:	00030000 	andeq	r0, r3, r0
    3528:	00000139 	andeq	r0, r0, r9, lsr r1
    352c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    3530:	0101000d 	tsteq	r1, sp
    3534:	00000101 	andeq	r0, r0, r1, lsl #2
    3538:	00000100 	andeq	r0, r0, r0, lsl #2
    353c:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    3540:	2f632f74 	svccs	0x00632f74
    3544:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3548:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    354c:	442f6162 	strtmi	r6, [pc], #-354	; 3554 <CPSR_IRQ_INHIBIT+0x34d4>
    3550:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3554:	73746e65 	cmnvc	r4, #1616	; 0x650
    3558:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    355c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3560:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3564:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3568:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    356c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3570:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3574:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3578:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    357c:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    3580:	0079726f 	rsbseq	r7, r9, pc, ror #4
    3584:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3588:	552f632f 	strpl	r6, [pc, #-815]!	; 3261 <CPSR_IRQ_INHIBIT+0x31e1>
    358c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3590:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3594:	6f442f61 	svcvs	0x00442f61
    3598:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    359c:	2f73746e 	svccs	0x0073746e
    35a0:	6f72655a 	svcvs	0x0072655a
    35a4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    35a8:	6178652f 	cmnvs	r8, pc, lsr #10
    35ac:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    35b0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    35b4:	4332492d 	teqmi	r2, #737280	; 0xb4000
    35b8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    35bc:	2f6c656e 	svccs	0x006c656e
    35c0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    35c4:	2f656475 	svccs	0x00656475
    35c8:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    35cc:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    35d0:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    35d4:	2f006c61 	svccs	0x00006c61
    35d8:	2f746e6d 	svccs	0x00746e6d
    35dc:	73552f63 	cmpvc	r5, #396	; 0x18c
    35e0:	2f737265 	svccs	0x00737265
    35e4:	6162754b 	cmnvs	r2, fp, asr #10
    35e8:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    35ec:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    35f0:	5a2f7374 	bpl	be03c8 <_bss_end+0xbce6d8>
    35f4:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3468 <CPSR_IRQ_INHIBIT+0x33e8>
    35f8:	2f657461 	svccs	0x00657461
    35fc:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3600:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3604:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3608:	2f433249 	svccs	0x00433249
    360c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3610:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    3614:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3618:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 3490 <CPSR_IRQ_INHIBIT+0x3410>
    361c:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    3620:	70000079 	andvc	r0, r0, r9, ror r0
    3624:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    3628:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    362c:	00000100 	andeq	r0, r0, r0, lsl #2
    3630:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    3634:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    3638:	00000200 	andeq	r0, r0, r0, lsl #4
    363c:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    3640:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    3644:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    3648:	00020068 	andeq	r0, r2, r8, rrx
    364c:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    3650:	2e70616d 	rpwcssz	f6, f0, #5.0
    3654:	00030068 	andeq	r0, r3, r8, rrx
    3658:	67617000 	strbvs	r7, [r1, -r0]!
    365c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    3660:	00000300 	andeq	r0, r0, r0, lsl #6
    3664:	00010500 	andeq	r0, r1, r0, lsl #10
    3668:	dc540205 	lfmle	f0, 2, [r4], {5}
    366c:	05160000 	ldreq	r0, [r6, #-0]
    3670:	1505850e 	strne	r8, [r5, #-1294]	; 0xfffffaf2
    3674:	03040200 	movweq	r0, #16896	; 0x4200
    3678:	0017054a 	andseq	r0, r7, sl, asr #10
    367c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    3680:	02001905 	andeq	r1, r0, #81920	; 0x14000
    3684:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    3688:	04020005 	streq	r0, [r2], #-5
    368c:	01059d02 	tsteq	r5, r2, lsl #26
    3690:	0505bd86 	streq	fp, [r5, #-3462]	; 0xfffff27a
    3694:	671f05d7 			; <UNDEFINED> instruction: 0x671f05d7
    3698:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    369c:	29056636 	stmdbcs	r5, {r1, r2, r4, r5, r9, sl, sp, lr}
    36a0:	4a24054a 	bmi	904bd0 <_bss_end+0x8f2ee0>
    36a4:	05bd0105 	ldreq	r0, [sp, #261]!	; 0x105
    36a8:	24052d1f 	strcs	r2, [r5], #-3359	; 0xfffff2e1
    36ac:	6638054a 	ldrtvs	r0, [r8], -sl, asr #10
    36b0:	054a2b05 	strbeq	r2, [sl, #-2821]	; 0xfffff4fb
    36b4:	01054a24 	tsteq	r5, r4, lsr #20
    36b8:	0c0585f3 	cfstr32eq	mvfx8, [r5], {243}	; 0xf3
    36bc:	00130589 	andseq	r0, r3, r9, lsl #11
    36c0:	4a010402 	bmi	446d0 <_bss_end+0x329e0>
    36c4:	05851b05 	streq	r1, [r5, #2821]	; 0xb05
    36c8:	14058209 	strne	r8, [r5], #-521	; 0xfffffdf7
    36cc:	001b054d 	andseq	r0, fp, sp, asr #10
    36d0:	4a010402 	bmi	446e0 <_bss_end+0x329f0>
    36d4:	05682405 	strbeq	r2, [r8, #-1029]!	; 0xfffffbfb
    36d8:	11059e32 	tstne	r5, r2, lsr lr
    36dc:	4d310566 	cfldr32mi	mvfx0, [r1, #-408]!	; 0xfffffe68
    36e0:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    36e4:	2b056719 	blcs	15d350 <_bss_end+0x14b660>
    36e8:	4a3d0583 	bmi	f44cfc <_bss_end+0xf3300c>
    36ec:	02000d05 	andeq	r0, r0, #320	; 0x140
    36f0:	79030204 	stmdbvc	r3, {r2, r9}
    36f4:	0005054a 	andeq	r0, r5, sl, asr #10
    36f8:	03020402 	movweq	r0, #9218	; 0x2402
    36fc:	0c05827a 	sfmeq	f0, 1, [r5], {122}	; 0x7a
    3700:	05821303 	streq	r1, [r2, #771]	; 0x303
    3704:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    3708:	0105a109 	tsteq	r5, r9, lsl #2
    370c:	009e66bb 			; <UNDEFINED> instruction: 0x009e66bb
    3710:	06010402 	streq	r0, [r1], -r2, lsl #8
    3714:	060f0566 	streq	r0, [pc], -r6, ror #10
    3718:	05824a03 	streq	r4, [r2, #2563]	; 0xa03
    371c:	4a360301 	bmi	d84328 <_bss_end+0xd72638>
    3720:	0a024a9e 	beq	961a0 <_bss_end+0x844b0>
    3724:	da010100 	ble	43b2c <_bss_end+0x31e3c>
    3728:	03000006 	movweq	r0, #6
    372c:	00027c00 	andeq	r7, r2, r0, lsl #24
    3730:	fb010200 	blx	43f3a <_bss_end+0x3224a>
    3734:	01000d0e 	tsteq	r0, lr, lsl #26
    3738:	00010101 	andeq	r0, r1, r1, lsl #2
    373c:	00010000 	andeq	r0, r1, r0
    3740:	6d2f0100 	stfvss	f0, [pc, #-0]	; 3748 <CPSR_IRQ_INHIBIT+0x36c8>
    3744:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3748:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    374c:	4b2f7372 	blmi	be051c <_bss_end+0xbce82c>
    3750:	2f616275 	svccs	0x00616275
    3754:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3758:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    375c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3760:	614d6f72 	hvcvs	55026	; 0xd6f2
    3764:	652f6574 	strvs	r6, [pc, #-1396]!	; 31f8 <CPSR_IRQ_INHIBIT+0x3178>
    3768:	706d6178 	rsbvc	r6, sp, r8, ror r1
    376c:	2f73656c 	svccs	0x0073656c
    3770:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3774:	6b2f4332 	blvs	bd4444 <_bss_end+0xbc2754>
    3778:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    377c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3780:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
    3784:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3788:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 35c4 <CPSR_IRQ_INHIBIT+0x3544>
    378c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3790:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3794:	4b2f7372 	blmi	be0564 <_bss_end+0xbce874>
    3798:	2f616275 	svccs	0x00616275
    379c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    37a0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    37a4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    37a8:	614d6f72 	hvcvs	55026	; 0xd6f2
    37ac:	652f6574 	strvs	r6, [pc, #-1396]!	; 3240 <CPSR_IRQ_INHIBIT+0x31c0>
    37b0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    37b4:	2f73656c 	svccs	0x0073656c
    37b8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    37bc:	6b2f4332 	blvs	bd448c <_bss_end+0xbc279c>
    37c0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    37c4:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    37c8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    37cc:	656d2f65 	strbvs	r2, [sp, #-3941]!	; 0xfffff09b
    37d0:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    37d4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    37d8:	2f632f74 	svccs	0x00632f74
    37dc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    37e0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    37e4:	442f6162 	strtmi	r6, [pc], #-354	; 37ec <CPSR_IRQ_INHIBIT+0x376c>
    37e8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    37ec:	73746e65 	cmnvc	r4, #1616	; 0x650
    37f0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    37f4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    37f8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    37fc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3800:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3804:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3808:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    380c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3810:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3814:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3818:	616f622f 	cmnvs	pc, pc, lsr #4
    381c:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    3820:	2f306970 	svccs	0x00306970
    3824:	006c6168 	rsbeq	r6, ip, r8, ror #2
    3828:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    382c:	552f632f 	strpl	r6, [pc, #-815]!	; 3505 <CPSR_IRQ_INHIBIT+0x3485>
    3830:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3834:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3838:	6f442f61 	svcvs	0x00442f61
    383c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3840:	2f73746e 	svccs	0x0073746e
    3844:	6f72655a 	svcvs	0x0072655a
    3848:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    384c:	6178652f 	cmnvs	r8, pc, lsr #10
    3850:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3854:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3858:	4332492d 	teqmi	r2, #737280	; 0xb4000
    385c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3860:	2f6c656e 	svccs	0x006c656e
    3864:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3868:	2f656475 	svccs	0x00656475
    386c:	636f7270 	cmnvs	pc, #112, 4
    3870:	00737365 	rsbseq	r7, r3, r5, ror #6
    3874:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3878:	552f632f 	strpl	r6, [pc, #-815]!	; 3551 <CPSR_IRQ_INHIBIT+0x34d1>
    387c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3880:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3884:	6f442f61 	svcvs	0x00442f61
    3888:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    388c:	2f73746e 	svccs	0x0073746e
    3890:	6f72655a 	svcvs	0x0072655a
    3894:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3898:	6178652f 	cmnvs	r8, pc, lsr #10
    389c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    38a0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    38a4:	4332492d 	teqmi	r2, #737280	; 0xb4000
    38a8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    38ac:	2f6c656e 	svccs	0x006c656e
    38b0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    38b4:	2f656475 	svccs	0x00656475
    38b8:	2f007366 	svccs	0x00007366
    38bc:	2f746e6d 	svccs	0x00746e6d
    38c0:	73552f63 	cmpvc	r5, #396	; 0x18c
    38c4:	2f737265 	svccs	0x00737265
    38c8:	6162754b 	cmnvs	r2, fp, asr #10
    38cc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    38d0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    38d4:	5a2f7374 	bpl	be06ac <_bss_end+0xbce9bc>
    38d8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 374c <CPSR_IRQ_INHIBIT+0x36cc>
    38dc:	2f657461 	svccs	0x00657461
    38e0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    38e4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    38e8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    38ec:	2f433249 	svccs	0x00433249
    38f0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    38f4:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    38f8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    38fc:	642f6564 	strtvs	r6, [pc], #-1380	; 3904 <CPSR_IRQ_INHIBIT+0x3884>
    3900:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    3904:	00007372 	andeq	r7, r0, r2, ror r3
    3908:	636f7270 	cmnvs	pc, #112, 4
    390c:	5f737365 	svcpl	0x00737365
    3910:	616e616d 	cmnvs	lr, sp, ror #2
    3914:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    3918:	00707063 	rsbseq	r7, r0, r3, rrx
    391c:	6b000001 	blvs	3928 <CPSR_IRQ_INHIBIT+0x38a8>
    3920:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3924:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    3928:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    392c:	00000200 	andeq	r0, r0, r0, lsl #4
    3930:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    3934:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    3938:	00000300 	andeq	r0, r0, r0, lsl #6
    393c:	636f7270 	cmnvs	pc, #112, 4
    3940:	2e737365 	cdpcs	3, 7, cr7, cr3, cr5, {3}
    3944:	00040068 	andeq	r0, r4, r8, rrx
    3948:	6c696600 	stclvs	6, cr6, [r9], #-0
    394c:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    3950:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    3954:	00050068 	andeq	r0, r5, r8, rrx
    3958:	69777300 	ldmdbvs	r7!, {r8, r9, ip, sp, lr}^
    395c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    3960:	72700000 	rsbsvc	r0, r0, #0
    3964:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3968:	616d5f73 	smcvs	54771	; 0xd5f3
    396c:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3970:	00682e72 	rsbeq	r2, r8, r2, ror lr
    3974:	6d000004 	stcvs	0, cr0, [r0, #-16]
    3978:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    397c:	682e726f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    3980:	00000600 	andeq	r0, r0, r0, lsl #12
    3984:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    3988:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    398c:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    3990:	00030068 	andeq	r0, r3, r8, rrx
    3994:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    3998:	2e70616d 	rpwcssz	f6, f0, #5.0
    399c:	00020068 	andeq	r0, r2, r8, rrx
    39a0:	67617000 	strbvs	r7, [r1, -r0]!
    39a4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    39a8:	00000200 	andeq	r0, r0, r0, lsl #4
    39ac:	00010500 	andeq	r0, r1, r0, lsl #10
    39b0:	def80205 	cdple	2, 15, cr0, cr8, cr5, {0}
    39b4:	12030000 	andne	r0, r3, #0
    39b8:	851d0501 	ldrhi	r0, [sp, #-1281]	; 0xfffffaff
    39bc:	23080105 	movwcs	r0, #33029	; 0x8105
    39c0:	830c05a1 	movwhi	r0, #50593	; 0xc5a1
    39c4:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    39c8:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    39cc:	1f054a01 	svcne	0x00054a01
    39d0:	01040200 	mrseq	r0, R12_usr
    39d4:	003c054a 	eorseq	r0, ip, sl, asr #10
    39d8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    39dc:	02001f05 	andeq	r1, r0, #5, 30
    39e0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    39e4:	04020001 	streq	r0, [r2], #-1
    39e8:	05852f05 	streq	r2, [r5, #3845]	; 0xf05
    39ec:	16058348 	strne	r8, [r5], -r8, asr #6
    39f0:	4a140568 	bmi	504f98 <_bss_end+0x4f32a8>
    39f4:	6705054b 	strvs	r0, [r5, -fp, asr #10]
    39f8:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    39fc:	14054c34 	strne	r4, [r5], #-3124	; 0xfffff3cc
    3a00:	4c0b0566 	cfstr32mi	mvfx0, [fp], {102}	; 0x66
    3a04:	05681305 	strbeq	r1, [r8, #-773]!	; 0xfffffcfb
    3a08:	0f054a11 	svceq	0x00054a11
    3a0c:	4a13052e 	bmi	4c4ecc <_bss_end+0x4b31dc>
    3a10:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    3a14:	05684b21 	strbeq	r4, [r8, #-2849]!	; 0xfffff4df
    3a18:	11054a19 	tstne	r5, r9, lsl sl
    3a1c:	6813054b 	ldmdavs	r3, {r0, r1, r3, r6, r8, sl}
    3a20:	02001c05 	andeq	r1, r0, #1280	; 0x500
    3a24:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    3a28:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3a2c:	05056702 	streq	r6, [r5, #-1794]	; 0xfffff8fe
    3a30:	02040200 	andeq	r0, r4, #0, 4
    3a34:	851a05d5 	ldrhi	r0, [sl, #-1493]	; 0xfffffa2b
    3a38:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    3a3c:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
    3a40:	16059f48 	strne	r9, [r5], -r8, asr #30
    3a44:	4a140568 	bmi	504fec <_bss_end+0x4f32fc>
    3a48:	6705054b 	strvs	r0, [r5, -fp, asr #10]
    3a4c:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    3a50:	09054b18 	stmdbeq	r5, {r3, r4, r8, r9, fp, lr}
    3a54:	4a050568 	bmi	144ffc <_bss_end+0x13330c>
    3a58:	054c1c05 	strbeq	r1, [ip, #-3077]	; 0xfffff3fb
    3a5c:	14056934 	strne	r6, [r5], #-2356	; 0xfffff6cc
    3a60:	4c0b0566 	cfstr32mi	mvfx0, [fp], {102}	; 0x66
    3a64:	05681305 	strbeq	r1, [r8, #-773]!	; 0xfffffcfb
    3a68:	0f054a11 	svceq	0x00054a11
    3a6c:	4a13052e 	bmi	4c4f2c <_bss_end+0x4b323c>
    3a70:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    3a74:	05684b21 	strbeq	r4, [r8, #-2849]!	; 0xfffff4df
    3a78:	11054a19 	tstne	r5, r9, lsl sl
    3a7c:	681a054b 	ldmdavs	sl, {r0, r1, r3, r6, r8, sl}
    3a80:	674f0567 	strbvs	r0, [pc, -r7, ror #10]
    3a84:	05665305 	strbeq	r5, [r6, #-773]!	; 0xfffffcfb
    3a88:	13052e1a 	movwne	r2, #24090	; 0x5e1a
    3a8c:	001c054c 	andseq	r0, ip, ip, asr #10
    3a90:	4a030402 	bmi	c4aa0 <_bss_end+0xb2db0>
    3a94:	02001f05 	andeq	r1, r0, #5, 30
    3a98:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    3a9c:	04020005 	streq	r0, [r2], #-5
    3aa0:	1105d502 	tstne	r5, r2, lsl #10
    3aa4:	82440585 	subhi	r0, r4, #557842432	; 0x21400000
    3aa8:	05ba4b05 	ldreq	r4, [sl, #2821]!	; 0xb05
    3aac:	36058311 			; <UNDEFINED> instruction: 0x36058311
    3ab0:	825d0582 	subshi	r0, sp, #545259520	; 0x20800000
    3ab4:	05ba6305 	ldreq	r6, [sl, #773]!	; 0x305
    3ab8:	01056812 	tsteq	r5, r2, lsl r8
    3abc:	055b084b 	ldrbeq	r0, [fp, #-2123]	; 0xfffff7b5
    3ac0:	05058409 	streq	r8, [r5, #-1033]	; 0xfffffbf7
    3ac4:	4d09054a 	cfstr32mi	mvfx0, [r9, #-296]	; 0xfffffed8
    3ac8:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    3acc:	30052e23 	andcc	r2, r5, r3, lsr #28
    3ad0:	4d0d052e 	cfstr32mi	mvfx0, [sp, #-184]	; 0xffffff48
    3ad4:	054a2105 	strbeq	r2, [sl, #-261]	; 0xfffffefb
    3ad8:	09052e27 	stmdbeq	r5, {r0, r1, r2, r5, r9, sl, fp, sp}
    3adc:	003c052e 	eorseq	r0, ip, lr, lsr #10
    3ae0:	4a010402 	bmi	44af0 <_bss_end+0x32e00>
    3ae4:	02005005 	andeq	r5, r0, #5
    3ae8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3aec:	04020056 	streq	r0, [r2], #-86	; 0xffffffaa
    3af0:	39052e01 	stmdbcc	r5, {r0, r9, sl, fp, sp}
    3af4:	01040200 	mrseq	r0, R12_usr
    3af8:	5120052e 			; <UNDEFINED> instruction: 0x5120052e
    3afc:	054a3305 	strbeq	r3, [sl, #-773]	; 0xfffffcfb
    3b00:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    3b04:	33054a01 	movwcc	r4, #23041	; 0x5a01
    3b08:	01040200 	mrseq	r0, R12_usr
    3b0c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    3b10:	054a0602 	strbeq	r0, [sl, #-1538]	; 0xfffff9fe
    3b14:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    3b18:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    3b1c:	04020005 	streq	r0, [r2], #-5
    3b20:	0e052f04 	cdpeq	15, 0, cr2, cr5, cr4, {0}
    3b24:	6a120567 	bvs	4850c8 <_bss_end+0x4733d8>
    3b28:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    3b2c:	40052e64 	andmi	r2, r5, r4, ror #28
    3b30:	01040200 	mrseq	r0, R12_usr
    3b34:	0046054a 	subeq	r0, r6, sl, asr #10
    3b38:	4a010402 	bmi	44b48 <_bss_end+0x32e58>
    3b3c:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    3b40:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3b44:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    3b48:	18054b02 	stmdane	r5, {r1, r8, r9, fp, lr}
    3b4c:	02040200 	andeq	r0, r4, #0, 4
    3b50:	0064054a 	rsbeq	r0, r4, sl, asr #10
    3b54:	2d020402 	cfstrscs	mvf0, [r2, #-8]
    3b58:	054d0905 	strbeq	r0, [sp, #-2309]	; 0xfffff6fb
    3b5c:	0d056812 	stceq	8, cr6, [r5, #-72]	; 0xffffffb8
    3b60:	31120567 	tstcc	r2, r7, ror #10
    3b64:	77030505 	strvc	r0, [r3, -r5, lsl #10]
    3b68:	03110566 	tsteq	r1, #427819008	; 0x19800000
    3b6c:	05052e0d 	streq	r2, [r5, #-3597]	; 0xfffff1f3
    3b70:	6933054a 	ldmdbvs	r3!, {r1, r3, r6, r8, sl}
    3b74:	054a4705 	strbeq	r4, [sl, #-1797]	; 0xfffff8fb
    3b78:	1d052e09 	stcne	14, cr2, [r5, #-36]	; 0xffffffdc
    3b7c:	2e4d054a 	cdpcs	5, 4, cr0, cr13, cr10, {2}
    3b80:	052e3105 	streq	r3, [lr, #-261]!	; 0xfffffefb
    3b84:	0e052f09 	cdpeq	15, 0, cr2, cr5, cr9, {0}
    3b88:	030d0531 	movweq	r0, #54577	; 0xd531
    3b8c:	01058260 	tsteq	r5, r0, ror #4
    3b90:	4d2e2103 	stfmis	f2, [lr, #-12]!
    3b94:	05a10905 	streq	r0, [r1, #2309]!	; 0x905
    3b98:	23054a1d 	movwcs	r4, #23069	; 0x5a1d
    3b9c:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    3ba0:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    3ba4:	29054a1d 	stmdbcs	r5, {r0, r2, r3, r4, r9, fp, lr}
    3ba8:	4d05052e 	cfstr32mi	mvfx0, [r5, #-184]	; 0xffffff48
    3bac:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    3bb0:	1a052e2d 	bne	14f46c <_bss_end+0x13d77c>
    3bb4:	4a2e054c 	bmi	b850ec <_bss_end+0xb733fc>
    3bb8:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    3bbc:	27052f21 	strcs	r2, [r5, -r1, lsr #30]
    3bc0:	2e0a054a 	cfsh32cs	mvfx0, mvfx10, #42
    3bc4:	05851805 	streq	r1, [r5, #2053]	; 0x805
    3bc8:	4305672f 	movwmi	r6, #22319	; 0x572f
    3bcc:	2e05054a 	cfsh32cs	mvfx0, mvfx5, #42
    3bd0:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    3bd4:	2d052e49 	stccs	14, cr2, [r5, #-292]	; 0xfffffedc
    3bd8:	2f05052e 	svccs	0x0005052e
    3bdc:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    3be0:	05052e25 	streq	r2, [r5, #-3621]	; 0xfffff1db
    3be4:	6725054d 	strvs	r0, [r5, -sp, asr #10]!
    3be8:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    3bec:	1f056901 	svcne	0x00056901
    3bf0:	4a17052d 	bmi	5c50ac <_bss_end+0x5b33bc>
    3bf4:	69670105 	stmdbvs	r7!, {r0, r2, r8}^
    3bf8:	05a13005 	streq	r3, [r1, #5]!
    3bfc:	10056705 	andne	r6, r5, r5, lsl #14
    3c00:	4d130567 	cfldr32mi	mvfx0, [r3, #-412]	; 0xfffffe64
    3c04:	02001c05 	andeq	r1, r0, #1280	; 0x500
    3c08:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3c0c:	09056924 	stmdbeq	r5, {r2, r5, r8, fp, sp, lr}
    3c10:	4c2605ba 	cfstr32mi	mvfx0, [r6], #-744	; 0xfffffd18
    3c14:	05d71405 	ldrbeq	r1, [r7, #1029]	; 0x405
    3c18:	04020005 	streq	r0, [r2], #-5
    3c1c:	4a7a0302 	bmi	1e8482c <_bss_end+0x1e72b3c>
    3c20:	0b030c05 	bleq	c6c3c <_bss_end+0xb4f4c>
    3c24:	2f010582 	svccs	0x00010582
    3c28:	9f300569 	svcls	0x00300569
    3c2c:	05670505 	strbeq	r0, [r7, #-1285]!	; 0xfffffafb
    3c30:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    3c34:	10056601 	andne	r6, r5, r1, lsl #12
    3c38:	4c260567 	cfstr32mi	mvfx0, [r6], #-412	; 0xfffffe64
    3c3c:	05ba0505 	ldreq	r0, [sl, #1285]!	; 0x505
    3c40:	23054b10 	movwcs	r4, #23312	; 0x5b10
    3c44:	d70c054c 	strle	r0, [ip, -ip, asr #10]
    3c48:	6a2f0105 	bvs	bc4064 <_bss_end+0xbb2374>
    3c4c:	05d80a05 	ldrbeq	r0, [r8, #2565]	; 0xa05
    3c50:	054d4a05 	strbeq	r4, [sp, #-2565]	; 0xfffff5fb
    3c54:	2d056919 	vstrcs.16	s12, [r5, #-50]	; 0xffffffce	; <UNPREDICTABLE>
    3c58:	2e33054a 	cdpcs	5, 3, cr0, cr3, cr10, {2}
    3c5c:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    3c60:	09054b0d 	stmdbeq	r5, {r0, r2, r3, r8, r9, fp, lr}
    3c64:	052e7a03 	streq	r7, [lr, #-2563]!	; 0xfffff5fd
    3c68:	056a3601 	strbeq	r3, [sl, #-1537]!	; 0xfffff9ff
    3c6c:	0505d80a 	streq	sp, [r5, #-2058]	; 0xfffff7f6
    3c70:	17054d4a 	strne	r4, [r5, -sl, asr #26]
    3c74:	28052308 	stmdacs	r5, {r3, r8, r9, sp}
    3c78:	bb0d0568 	bllt	345220 <_bss_end+0x333530>
    3c7c:	05692c05 	strbeq	r2, [r9, #-3077]!	; 0xfffff3fb
    3c80:	18058217 	stmdane	r5, {r0, r1, r2, r4, r9, pc}
    3c84:	4a0d054d 	bmi	3451c0 <_bss_end+0x3334d0>
    3c88:	054c1a05 	strbeq	r1, [ip, #-2565]	; 0xfffff5fb
    3c8c:	18058219 	stmdane	r5, {r0, r3, r4, r9, pc}
    3c90:	2e11054b 	cfmac32cs	mvfx0, mvfx1, mvfx11
    3c94:	02001805 	andeq	r1, r0, #327680	; 0x50000
    3c98:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3c9c:	0402000d 	streq	r0, [r2], #-13
    3ca0:	1705a001 	strne	sl, [r5, -r1]
    3ca4:	680d0531 	stmdavs	sp, {r0, r4, r5, r8, sl}
    3ca8:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    3cac:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    3cb0:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    3cb4:	5c054a01 			; <UNDEFINED> instruction: 0x5c054a01
    3cb8:	01040200 	mrseq	r0, R12_usr
    3cbc:	002f052e 	eoreq	r0, pc, lr, lsr #10
    3cc0:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
    3cc4:	054d1905 	strbeq	r1, [sp, #-2309]	; 0xfffff6fb
    3cc8:	42054a2d 	andmi	r4, r5, #184320	; 0x2d000
    3ccc:	9e19052e 	cfmul64ls	mvdx0, mvdx9, mvdx14
    3cd0:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3cd4:	69052e42 	stmdbvs	r5, {r1, r6, r9, sl, fp, sp}
    3cd8:	6649059e 			; <UNDEFINED> instruction: 0x6649059e
    3cdc:	05821705 	streq	r1, [r2, #1797]	; 0x705
    3ce0:	17054b0d 	strne	r4, [r5, -sp, lsl #22]
    3ce4:	680d0531 	stmdavs	sp, {r0, r4, r5, r8, sl}
    3ce8:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    3cec:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    3cf0:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    3cf4:	5c054a01 			; <UNDEFINED> instruction: 0x5c054a01
    3cf8:	01040200 	mrseq	r0, R12_usr
    3cfc:	002f052e 	eoreq	r0, pc, lr, lsr #10
    3d00:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
    3d04:	054d1905 	strbeq	r1, [sp, #-2309]	; 0xfffff6fb
    3d08:	42054a2d 	andmi	r4, r5, #184320	; 0x2d000
    3d0c:	9e19052e 	cfmul64ls	mvdx0, mvdx9, mvdx14
    3d10:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3d14:	70052e42 	andvc	r2, r5, r2, asr #28
    3d18:	664a059e 			; <UNDEFINED> instruction: 0x664a059e
    3d1c:	05821705 	streq	r1, [r2, #1797]	; 0x705
    3d20:	05314b0d 	ldreq	r4, [r1, #-2829]!	; 0xfffff4f3
    3d24:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    3d28:	47056601 	strmi	r6, [r5, -r1, lsl #12]
    3d2c:	01040200 	mrseq	r0, R12_usr
    3d30:	005c054a 	subseq	r0, ip, sl, asr #10
    3d34:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3d38:	02002f05 	andeq	r2, r0, #5, 30
    3d3c:	059e0104 	ldreq	r0, [lr, #260]	; 0x104
    3d40:	2d054d19 	stccs	13, cr4, [r5, #-100]	; 0xffffff9c
    3d44:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3d48:	059e1905 	ldreq	r1, [lr, #2309]	; 0x905
    3d4c:	42054a2d 	andmi	r4, r5, #184320	; 0x2d000
    3d50:	9e4b052e 	cdpls	5, 4, cr0, cr11, cr14, {1}
    3d54:	05664a05 	strbeq	r4, [r6, #-2565]!	; 0xfffff5fb
    3d58:	1f058217 	svcne	0x00058217
    3d5c:	680d054b 	stmdavs	sp, {r0, r1, r3, r6, r8, sl}
    3d60:	00330531 	eorseq	r0, r3, r1, lsr r5
    3d64:	66010402 	strvs	r0, [r1], -r2, lsl #8
    3d68:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    3d6c:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3d70:	0402005c 	streq	r0, [r2], #-92	; 0xffffffa4
    3d74:	2f052e01 	svccs	0x00052e01
    3d78:	01040200 	mrseq	r0, R12_usr
    3d7c:	4d19059e 	cfldr32mi	mvfx0, [r9, #-632]	; 0xfffffd88
    3d80:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3d84:	19052e42 	stmdbne	r5, {r1, r6, r9, sl, fp, sp}
    3d88:	4a2d059e 	bmi	b45408 <_bss_end+0xb33718>
    3d8c:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3d90:	4a059f66 	bmi	16bb30 <_bss_end+0x159e40>
    3d94:	9e170565 	cfmsc32ls	mvfx0, mvfx7, mvfx5
    3d98:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    3d9c:	2e4a0309 	cdpcs	3, 4, cr0, cr10, cr9, {0}
    3da0:	09031105 	stmdbeq	r3, {r0, r2, r8, ip}
    3da4:	030d054a 	movweq	r0, #54602	; 0xd54a
    3da8:	11054a0a 	tstne	r5, sl, lsl #20
    3dac:	4a090350 	bmi	244af4 <_bss_end+0x232e04>
    3db0:	4a090351 	bmi	244afc <_bss_end+0x232e0c>
    3db4:	66350105 	ldrtvs	r0, [r5], -r5, lsl #2
    3db8:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    3dbc:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    3dc0:	fd030612 	stc2	6, cr0, [r3, #-72]	; 0xffffffb8
    3dc4:	0105827d 	tsteq	r5, sp, ror r2
    3dc8:	4a028303 	bmi	a49dc <_bss_end+0x92cec>
    3dcc:	0a024a9e 	beq	9684c <_bss_end+0x84b5c>
    3dd0:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    3dd4:	00080502 	andeq	r0, r8, r2, lsl #10
    3dd8:	eacc0205 	b	ff3045f4 <_bss_end+0xff2f2904>
    3ddc:	1d030000 	stcne	0, cr0, [r3, #-0]
    3de0:	842a0501 	strthi	r0, [sl], #-1281	; 0xfffffaff
    3de4:	02830505 	addeq	r0, r3, #20971520	; 0x1400000
    3de8:	01010006 	tsteq	r1, r6
    3dec:	08050204 	stmdaeq	r5, {r2, r9}
    3df0:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    3df4:	030000ea 	movweq	r0, #234	; 0xea
    3df8:	2a05011d 	bcs	144274 <_bss_end+0x132584>
    3dfc:	83050584 	movwhi	r0, #21892	; 0x5584
    3e00:	01000602 	tsteq	r0, r2, lsl #12
    3e04:	00009001 	andeq	r9, r0, r1
    3e08:	67000300 	strvs	r0, [r0, -r0, lsl #6]
    3e0c:	02000000 	andeq	r0, r0, #0
    3e10:	0d0efb01 	vstreq	d15, [lr, #-4]
    3e14:	01010100 	mrseq	r0, (UNDEF: 17)
    3e18:	00000001 	andeq	r0, r0, r1
    3e1c:	01000001 	tsteq	r0, r1
    3e20:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3e24:	552f632f 	strpl	r6, [pc, #-815]!	; 3afd <CPSR_IRQ_INHIBIT+0x3a7d>
    3e28:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3e2c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3e30:	6f442f61 	svcvs	0x00442f61
    3e34:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3e38:	2f73746e 	svccs	0x0073746e
    3e3c:	6f72655a 	svcvs	0x0072655a
    3e40:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3e44:	6178652f 	cmnvs	r8, pc, lsr #10
    3e48:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3e4c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3e50:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3e54:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3e58:	2f6c656e 	svccs	0x006c656e
    3e5c:	2f637273 	svccs	0x00637273
    3e60:	636f7270 	cmnvs	pc, #112, 4
    3e64:	00737365 	rsbseq	r7, r3, r5, ror #6
    3e68:	69777300 	ldmdbvs	r7!, {r8, r9, ip, sp, lr}^
    3e6c:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
    3e70:	00010073 	andeq	r0, r1, r3, ror r0
    3e74:	05000000 	streq	r0, [r0, #-0]
    3e78:	00eb2402 	rsceq	r2, fp, r2, lsl #8
    3e7c:	362f1600 	strtcc	r1, [pc], -r0, lsl #12
    3e80:	2f2f2f2f 	svccs	0x002f2f2f
    3e84:	2f2f2f30 	svccs	0x002f2f30
    3e88:	2f2f2f35 	svccs	0x002f2f35
    3e8c:	2f2f302f 	svccs	0x002f302f
    3e90:	2f2f2f2f 	svccs	0x002f2f2f
    3e94:	01000202 	tsteq	r0, r2, lsl #4
    3e98:	0000c301 	andeq	ip, r0, r1, lsl #6
    3e9c:	5e000300 	cdppl	3, 0, cr0, cr0, cr0, {0}
    3ea0:	02000000 	andeq	r0, r0, #0
    3ea4:	0d0efb01 	vstreq	d15, [lr, #-4]
    3ea8:	01010100 	mrseq	r0, (UNDEF: 17)
    3eac:	00000001 	andeq	r0, r0, r1
    3eb0:	01000001 	tsteq	r0, r1
    3eb4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3eb8:	552f632f 	strpl	r6, [pc, #-815]!	; 3b91 <CPSR_IRQ_INHIBIT+0x3b11>
    3ebc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3ec0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3ec4:	6f442f61 	svcvs	0x00442f61
    3ec8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3ecc:	2f73746e 	svccs	0x0073746e
    3ed0:	6f72655a 	svcvs	0x0072655a
    3ed4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3ed8:	6178652f 	cmnvs	r8, pc, lsr #10
    3edc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3ee0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3ee4:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3ee8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3eec:	2f6c656e 	svccs	0x006c656e
    3ef0:	00637273 	rsbeq	r7, r3, r3, ror r2
    3ef4:	61747300 	cmnvs	r4, r0, lsl #6
    3ef8:	732e7472 			; <UNDEFINED> instruction: 0x732e7472
    3efc:	00000100 	andeq	r0, r0, r0, lsl #2
    3f00:	02050000 	andeq	r0, r5, #0
    3f04:	00008000 	andeq	r8, r0, r0
    3f08:	2f010d03 	svccs	0x00010d03
    3f0c:	2f2f2f2f 	svccs	0x002f2f2f
    3f10:	1f032f2f 	svcne	0x00032f2f
    3f14:	322f2008 	eorcc	r2, pc, #8
    3f18:	312f2f2f 			; <UNDEFINED> instruction: 0x312f2f2f
    3f1c:	312f2f31 			; <UNDEFINED> instruction: 0x312f2f31
    3f20:	2f312f2f 	svccs	0x00312f2f
    3f24:	2f2f312f 	svccs	0x002f312f
    3f28:	302f2f31 	eorcc	r2, pc, r1, lsr pc	; <UNPREDICTABLE>
    3f2c:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
    3f30:	01000202 	tsteq	r0, r2, lsl #4
    3f34:	02050001 	andeq	r0, r5, #1
    3f38:	0000eb80 	andeq	lr, r0, r0, lsl #23
    3f3c:	0100e503 	tsteq	r0, r3, lsl #10
    3f40:	2f2f322f 	svccs	0x002f322f
    3f44:	32312f2f 	eorscc	r2, r1, #47, 30	; 0xbc
    3f48:	2f2f2f32 	svccs	0x002f2f32
    3f4c:	332f2f2f 			; <UNDEFINED> instruction: 0x332f2f2f
    3f50:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
    3f54:	3030302f 	eorscc	r3, r0, pc, lsr #32
    3f58:	0233332f 	eorseq	r3, r3, #-1140850688	; 0xbc000000
    3f5c:	01010002 	tsteq	r1, r2
    3f60:	000000e3 	andeq	r0, r0, r3, ror #1
    3f64:	00620003 	rsbeq	r0, r2, r3
    3f68:	01020000 	mrseq	r0, (UNDEF: 2)
    3f6c:	000d0efb 	strdeq	r0, [sp], -fp
    3f70:	01010101 	tsteq	r1, r1, lsl #2
    3f74:	01000000 	mrseq	r0, (UNDEF: 0)
    3f78:	2f010000 	svccs	0x00010000
    3f7c:	2f746e6d 	svccs	0x00746e6d
    3f80:	73552f63 	cmpvc	r5, #396	; 0x18c
    3f84:	2f737265 	svccs	0x00737265
    3f88:	6162754b 	cmnvs	r2, fp, asr #10
    3f8c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3f90:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3f94:	5a2f7374 	bpl	be0d6c <_bss_end+0xbcf07c>
    3f98:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3e0c <CPSR_IRQ_INHIBIT+0x3d8c>
    3f9c:	2f657461 	svccs	0x00657461
    3fa0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3fa4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3fa8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3fac:	2f433249 	svccs	0x00433249
    3fb0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3fb4:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    3fb8:	00006372 	andeq	r6, r0, r2, ror r3
    3fbc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    3fc0:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
    3fc4:	00707063 	rsbseq	r7, r0, r3, rrx
    3fc8:	00000001 	andeq	r0, r0, r1
    3fcc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3fd0:	00ebf002 	rsceq	pc, fp, r2
    3fd4:	01140300 	tsteq	r4, r0, lsl #6
    3fd8:	056a0c05 	strbeq	r0, [sl, #-3077]!	; 0xfffff3fb
    3fdc:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    3fe0:	0c056603 	stceq	6, cr6, [r5], {3}
    3fe4:	02040200 	andeq	r0, r4, #0, 4
    3fe8:	000505bb 			; <UNDEFINED> instruction: 0x000505bb
    3fec:	65020402 	strvs	r0, [r2, #-1026]	; 0xfffffbfe
    3ff0:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    3ff4:	05bd2f01 	ldreq	r2, [sp, #3841]!	; 0xf01
    3ff8:	27056b10 	smladcs	r5, r0, fp, r6
    3ffc:	03040200 	movweq	r0, #16896	; 0x4200
    4000:	000a054a 	andeq	r0, sl, sl, asr #10
    4004:	83020402 	movwhi	r0, #9218	; 0x2402
    4008:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    400c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    4010:	04020005 	streq	r0, [r2], #-5
    4014:	0c052d02 	stceq	13, cr2, [r5], {2}
    4018:	2f010585 	svccs	0x00010585
    401c:	6a1005a1 	bvs	4056a8 <_bss_end+0x3f39b8>
    4020:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    4024:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    4028:	0402000a 	streq	r0, [r2], #-10
    402c:	11058302 	tstne	r5, r2, lsl #6
    4030:	02040200 	andeq	r0, r4, #0, 4
    4034:	0005054a 	andeq	r0, r5, sl, asr #10
    4038:	2d020402 	cfstrscs	mvf0, [r2, #-8]
    403c:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    4040:	0a022f01 	beq	8fc4c <_bss_end+0x7df5c>
    4044:	45010100 	strmi	r0, [r1, #-256]	; 0xffffff00
    4048:	03000003 	movweq	r0, #3
    404c:	0001dd00 	andeq	sp, r1, r0, lsl #26
    4050:	fb010200 	blx	4485a <_bss_end+0x32b6a>
    4054:	01000d0e 	tsteq	r0, lr, lsl #26
    4058:	00010101 	andeq	r0, r1, r1, lsl #2
    405c:	00010000 	andeq	r0, r1, r0
    4060:	6d2f0100 	stfvss	f0, [pc, #-0]	; 4068 <CPSR_IRQ_INHIBIT+0x3fe8>
    4064:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    4068:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    406c:	4b2f7372 	blmi	be0e3c <_bss_end+0xbcf14c>
    4070:	2f616275 	svccs	0x00616275
    4074:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    4078:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    407c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    4080:	614d6f72 	hvcvs	55026	; 0xd6f2
    4084:	652f6574 	strvs	r6, [pc, #-1396]!	; 3b18 <CPSR_IRQ_INHIBIT+0x3a98>
    4088:	706d6178 	rsbvc	r6, sp, r8, ror r1
    408c:	2f73656c 	svccs	0x0073656c
    4090:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    4094:	6b2f4332 	blvs	bd4d64 <_bss_end+0xbc3074>
    4098:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    409c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    40a0:	6d2f0063 	stcvs	0, cr0, [pc, #-396]!	; 3f1c <CPSR_IRQ_INHIBIT+0x3e9c>
    40a4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    40a8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    40ac:	4b2f7372 	blmi	be0e7c <_bss_end+0xbcf18c>
    40b0:	2f616275 	svccs	0x00616275
    40b4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    40b8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    40bc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    40c0:	614d6f72 	hvcvs	55026	; 0xd6f2
    40c4:	652f6574 	strvs	r6, [pc, #-1396]!	; 3b58 <CPSR_IRQ_INHIBIT+0x3ad8>
    40c8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    40cc:	2f73656c 	svccs	0x0073656c
    40d0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    40d4:	6b2f4332 	blvs	bd4da4 <_bss_end+0xbc30b4>
    40d8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    40dc:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    40e0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    40e4:	6f622f65 	svcvs	0x00622f65
    40e8:	2f647261 	svccs	0x00647261
    40ec:	30697072 	rsbcc	r7, r9, r2, ror r0
    40f0:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    40f4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    40f8:	2f632f74 	svccs	0x00632f74
    40fc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    4100:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    4104:	442f6162 	strtmi	r6, [pc], #-354	; 410c <CPSR_IRQ_INHIBIT+0x408c>
    4108:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    410c:	73746e65 	cmnvc	r4, #1616	; 0x650
    4110:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    4114:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    4118:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    411c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    4120:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    4124:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    4128:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    412c:	69747564 	ldmdbvs	r4!, {r2, r5, r6, r8, sl, ip, sp, lr}^
    4130:	692f736c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
    4134:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4138:	2f006564 	svccs	0x00006564
    413c:	2f746e6d 	svccs	0x00746e6d
    4140:	73552f63 	cmpvc	r5, #396	; 0x18c
    4144:	2f737265 	svccs	0x00737265
    4148:	6162754b 	cmnvs	r2, fp, asr #10
    414c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    4150:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    4154:	5a2f7374 	bpl	be0f2c <_bss_end+0xbcf23c>
    4158:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3fcc <CPSR_IRQ_INHIBIT+0x3f4c>
    415c:	2f657461 	svccs	0x00657461
    4160:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    4164:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    4168:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    416c:	2f433249 	svccs	0x00433249
    4170:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    4174:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    4178:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    417c:	662f6564 	strtvs	r6, [pc], -r4, ror #10
    4180:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 3fbc <CPSR_IRQ_INHIBIT+0x3f3c>
    4184:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    4188:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    418c:	4b2f7372 	blmi	be0f5c <_bss_end+0xbcf26c>
    4190:	2f616275 	svccs	0x00616275
    4194:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    4198:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    419c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    41a0:	614d6f72 	hvcvs	55026	; 0xd6f2
    41a4:	652f6574 	strvs	r6, [pc, #-1396]!	; 3c38 <CPSR_IRQ_INHIBIT+0x3bb8>
    41a8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    41ac:	2f73656c 	svccs	0x0073656c
    41b0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    41b4:	6b2f4332 	blvs	bd4e84 <_bss_end+0xbc3194>
    41b8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    41bc:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    41c0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    41c4:	2e2e2f65 	cdpcs	15, 2, cr2, cr14, cr5, {3}
    41c8:	2f2e2e2f 	svccs	0x002e2e2f
    41cc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    41d0:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    41d4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    41d8:	642f6564 	strtvs	r6, [pc], #-1380	; 41e0 <CPSR_IRQ_INHIBIT+0x4160>
    41dc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    41e0:	00007372 	andeq	r7, r0, r2, ror r3
    41e4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    41e8:	6f72705f 	svcvs	0x0072705f
    41ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    41f0:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    41f4:	01007070 	tsteq	r0, r0, ror r0
    41f8:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    41fc:	66656474 			; <UNDEFINED> instruction: 0x66656474
    4200:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4204:	6c6f0000 	stclvs	0, cr0, [pc], #-0	; 420c <CPSR_IRQ_INHIBIT+0x418c>
    4208:	682e6465 	stmdavs	lr!, {r0, r2, r5, r6, sl, sp, lr}
    420c:	00000300 	andeq	r0, r0, r0, lsl #6
    4210:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    4214:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    4218:	682e6d65 	stmdavs	lr!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
    421c:	00000400 	andeq	r0, r0, r0, lsl #8
    4220:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    4224:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    4228:	00050068 	andeq	r0, r5, r8, rrx
    422c:	01050000 	mrseq	r0, (UNDEF: 5)
    4230:	08020500 	stmdaeq	r2, {r8, sl}
    4234:	030000ed 	movweq	r0, #237	; 0xed
    4238:	16050114 			; <UNDEFINED> instruction: 0x16050114
    423c:	84100569 	ldrhi	r0, [r0], #-1385	; 0xfffffa97
    4240:	052f1105 	streq	r1, [pc, #-261]!	; 4143 <CPSR_IRQ_INHIBIT+0x40c3>
    4244:	38058233 	stmdacc	r5, {r0, r1, r4, r5, r9, pc}
    4248:	670f0582 	strvs	r0, [pc, -r2, lsl #11]
    424c:	05320e05 	ldreq	r0, [r2, #-3589]!	; 0xfffff1fb
    4250:	17058410 	smladne	r5, r0, r4, r8
    4254:	03040200 	movweq	r0, #16896	; 0x4200
    4258:	0009054a 	andeq	r0, r9, sl, asr #10
    425c:	d6020402 	strle	r0, [r2], -r2, lsl #8
    4260:	05850e05 	streq	r0, [r5, #3589]	; 0xe05
    4264:	17058410 	smladne	r5, r0, r4, r8
    4268:	03040200 	movweq	r0, #16896	; 0x4200
    426c:	0009054a 	andeq	r0, r9, sl, asr #10
    4270:	d6020402 	strle	r0, [r2], -r2, lsl #8
    4274:	44080105 	strmi	r0, [r8], #-261	; 0xfffffefb
    4278:	05691105 	strbeq	r1, [r9, #-261]!	; 0xfffffefb
    427c:	19054c16 	stmdbne	r5, {r1, r2, r4, sl, fp, lr}
    4280:	84100583 	ldrhi	r0, [r0], #-1411	; 0xfffffa7d
    4284:	052f1105 	streq	r1, [pc, #-261]!	; 4187 <CPSR_IRQ_INHIBIT+0x4107>
    4288:	3c058237 	sfmcc	f0, 1, [r5], {55}	; 0x37
    428c:	67110582 	ldrvs	r0, [r1, -r2, lsl #11]
    4290:	05823905 	streq	r3, [r2, #2309]	; 0x905
    4294:	0f058241 	svceq	0x00058241
    4298:	350d0567 	strcc	r0, [sp, #-1383]	; 0xfffffa99
    429c:	05a00e05 	streq	r0, [r0, #3589]!	; 0xe05
    42a0:	2005830d 	andcs	r8, r5, sp, lsl #6
    42a4:	820e05a0 	andhi	r0, lr, #160, 10	; 0x28000000
    42a8:	05a01005 	streq	r1, [r0, #5]!
    42ac:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    42b0:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    42b4:	02040200 	andeq	r0, r4, #0, 4
    42b8:	030105d6 	movweq	r0, #5590	; 0x15d6
    42bc:	05580809 	ldrbeq	r0, [r8, #-2057]	; 0xfffff7f7
    42c0:	10056916 	andne	r6, r5, r6, lsl r9
    42c4:	2f110584 	svccs	0x00110584
    42c8:	05823305 	streq	r3, [r2, #773]	; 0x305
    42cc:	0f058238 	svceq	0x00058238
    42d0:	320e0567 	andcc	r0, lr, #432013312	; 0x19c00000
    42d4:	05841005 	streq	r1, [r4, #5]
    42d8:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    42dc:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    42e0:	02040200 	andeq	r0, r4, #0, 4
    42e4:	850e05d6 	strhi	r0, [lr, #-1494]	; 0xfffffa2a
    42e8:	05841005 	streq	r1, [r4, #5]
    42ec:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    42f0:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    42f4:	02040200 	andeq	r0, r4, #0, 4
    42f8:	080105d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl}
    42fc:	69160544 	ldmdbvs	r6, {r2, r6, r8, sl}
    4300:	05841005 	streq	r1, [r4, #5]
    4304:	33052f11 	movwcc	r2, #24337	; 0x5f11
    4308:	82380582 	eorshi	r0, r8, #545259520	; 0x20800000
    430c:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
    4310:	1005320e 	andne	r3, r5, lr, lsl #4
    4314:	00170584 	andseq	r0, r7, r4, lsl #11
    4318:	4a030402 	bmi	c5328 <_bss_end+0xb3638>
    431c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4320:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    4324:	1005850e 	andne	r8, r5, lr, lsl #10
    4328:	00170584 	andseq	r0, r7, r4, lsl #11
    432c:	4a030402 	bmi	c533c <_bss_end+0xb364c>
    4330:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4334:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    4338:	05440801 	strbeq	r0, [r4, #-2049]	; 0xfffff7ff
    433c:	0a056916 	beq	15e79c <_bss_end+0x14caac>
    4340:	84100583 	ldrhi	r0, [r0], #-1411	; 0xfffffa7d
    4344:	052f1105 	streq	r1, [pc, #-261]!	; 4247 <CPSR_IRQ_INHIBIT+0x41c7>
    4348:	38058233 	stmdacc	r5, {r0, r1, r4, r5, r9, pc}
    434c:	670f0582 	strvs	r0, [pc, -r2, lsl #11]
    4350:	05300a05 	ldreq	r0, [r0, #-2565]!	; 0xfffff5fb
    4354:	09054e16 	stmdbeq	r5, {r1, r2, r4, r9, sl, fp, lr}
    4358:	4c18052e 	cfldr32mi	mvfx0, [r8], {46}	; 0x2e
    435c:	2e0d056a 	cfsh32cs	mvfx0, mvfx13, #58
    4360:	05690e05 	strbeq	r0, [r9, #-3589]!	; 0xfffff1fb
    4364:	1705a010 	smladne	r5, r0, r0, sl
    4368:	03040200 	movweq	r0, #16896	; 0x4200
    436c:	0009054a 	andeq	r0, r9, sl, asr #10
    4370:	d6020402 	strle	r0, [r2], -r2, lsl #8
    4374:	28080105 	stmdacs	r8, {r0, r2, r8}
    4378:	05672205 	strbeq	r2, [r7, #-517]!	; 0xfffffdfb
    437c:	1105830c 	tstne	r5, ip, lsl #6
    4380:	9f0b0583 	svcls	0x000b0583
    4384:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4388:	02680104 	rsbeq	r0, r8, #4, 2
    438c:	01010006 	tsteq	r1, r6
    4390:	000001cb 	andeq	r0, r0, fp, asr #3
    4394:	016d0003 	cmneq	sp, r3
    4398:	01020000 	mrseq	r0, (UNDEF: 2)
    439c:	000d0efb 	strdeq	r0, [sp], -fp
    43a0:	01010101 	tsteq	r1, r1, lsl #2
    43a4:	01000000 	mrseq	r0, (UNDEF: 0)
    43a8:	2f010000 	svccs	0x00010000
    43ac:	2f746e6d 	svccs	0x00746e6d
    43b0:	73552f63 	cmpvc	r5, #396	; 0x18c
    43b4:	2f737265 	svccs	0x00737265
    43b8:	6162754b 	cmnvs	r2, fp, asr #10
    43bc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    43c0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    43c4:	5a2f7374 	bpl	be119c <_bss_end+0xbcf4ac>
    43c8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 423c <CPSR_IRQ_INHIBIT+0x41bc>
    43cc:	2f657461 	svccs	0x00657461
    43d0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    43d4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    43d8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    43dc:	2f433249 	svccs	0x00433249
    43e0:	6c647473 	cfstrdvs	mvd7, [r4], #-460	; 0xfffffe34
    43e4:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
    43e8:	2f006372 	svccs	0x00006372
    43ec:	2f746e6d 	svccs	0x00746e6d
    43f0:	73552f63 	cmpvc	r5, #396	; 0x18c
    43f4:	2f737265 	svccs	0x00737265
    43f8:	6162754b 	cmnvs	r2, fp, asr #10
    43fc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    4400:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    4404:	5a2f7374 	bpl	be11dc <_bss_end+0xbcf4ec>
    4408:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 427c <CPSR_IRQ_INHIBIT+0x41fc>
    440c:	2f657461 	svccs	0x00657461
    4410:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    4414:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    4418:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    441c:	2f433249 	svccs	0x00433249
    4420:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    4424:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    4428:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    442c:	662f6564 	strtvs	r6, [pc], -r4, ror #10
    4430:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 426c <CPSR_IRQ_INHIBIT+0x41ec>
    4434:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    4438:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    443c:	4b2f7372 	blmi	be120c <_bss_end+0xbcf51c>
    4440:	2f616275 	svccs	0x00616275
    4444:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    4448:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    444c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    4450:	614d6f72 	hvcvs	55026	; 0xd6f2
    4454:	652f6574 	strvs	r6, [pc, #-1396]!	; 3ee8 <CPSR_IRQ_INHIBIT+0x3e68>
    4458:	706d6178 	rsbvc	r6, sp, r8, ror r1
    445c:	2f73656c 	svccs	0x0073656c
    4460:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    4464:	6b2f4332 	blvs	bd5134 <_bss_end+0xbc3444>
    4468:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    446c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    4470:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4474:	72702f65 	rsbsvc	r2, r0, #404	; 0x194
    4478:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    447c:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 42b8 <CPSR_IRQ_INHIBIT+0x4238>
    4480:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    4484:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    4488:	4b2f7372 	blmi	be1258 <_bss_end+0xbcf568>
    448c:	2f616275 	svccs	0x00616275
    4490:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    4494:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    4498:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    449c:	614d6f72 	hvcvs	55026	; 0xd6f2
    44a0:	652f6574 	strvs	r6, [pc, #-1396]!	; 3f34 <CPSR_IRQ_INHIBIT+0x3eb4>
    44a4:	706d6178 	rsbvc	r6, sp, r8, ror r1
    44a8:	2f73656c 	svccs	0x0073656c
    44ac:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    44b0:	6b2f4332 	blvs	bd5180 <_bss_end+0xbc3490>
    44b4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    44b8:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    44bc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    44c0:	6f622f65 	svcvs	0x00622f65
    44c4:	2f647261 	svccs	0x00647261
    44c8:	30697072 	rsbcc	r7, r9, r2, ror r0
    44cc:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    44d0:	74730000 	ldrbtvc	r0, [r3], #-0
    44d4:	6c696664 	stclvs	6, cr6, [r9], #-400	; 0xfffffe70
    44d8:	70632e65 	rsbvc	r2, r3, r5, ror #28
    44dc:	00010070 	andeq	r0, r1, r0, ror r0
    44e0:	6c696600 	stclvs	6, cr6, [r9], #-0
    44e4:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    44e8:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    44ec:	00020068 	andeq	r0, r2, r8, rrx
    44f0:	69777300 	ldmdbvs	r7!, {r8, r9, ip, sp, lr}^
    44f4:	0300682e 	movweq	r6, #2094	; 0x82e
    44f8:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    44fc:	66656474 			; <UNDEFINED> instruction: 0x66656474
    4500:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    4504:	05000000 	streq	r0, [r0, #-0]
    4508:	02050001 	andeq	r0, r5, #1
    450c:	0000f25c 	andeq	pc, r0, ip, asr r2	; <UNPREDICTABLE>
    4510:	69050515 	stmdbvs	r5, {r0, r2, r4, r8, sl}
    4514:	4c0c052f 	cfstr32mi	mvfx0, [ip], {47}	; 0x2f
    4518:	852f0105 	strhi	r0, [pc, #-261]!	; 441b <CPSR_IRQ_INHIBIT+0x439b>
    451c:	4ba10505 	blmi	fe845938 <_bss_end+0xfe833c48>
    4520:	0c052f4b 	stceq	15, cr2, [r5], {75}	; 0x4b
    4524:	2f01054c 	svccs	0x0001054c
    4528:	bd050585 	cfstr32lt	mvfx0, [r5, #-532]	; 0xfffffdec
    452c:	2f4b4b4b 	svccs	0x004b4b4b
    4530:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    4534:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    4538:	4b4bbd05 	blmi	12f3954 <_bss_end+0x12e1c64>
    453c:	0c052f4b 	stceq	15, cr2, [r5], {75}	; 0x4b
    4540:	2f01054c 	svccs	0x0001054c
    4544:	83050585 	movwhi	r0, #21893	; 0x5585
    4548:	2f01054b 	svccs	0x0001054b
    454c:	bd050585 	cfstr32lt	mvfx0, [r5, #-532]	; 0xfffffdec
    4550:	2f4b4b4b 	svccs	0x004b4b4b
    4554:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    4558:	08022f01 	stmdaeq	r2, {r0, r8, r9, sl, fp, sp}
    455c:	87010100 	strhi	r0, [r1, -r0, lsl #2]
    4560:	03000002 	movweq	r0, #2
    4564:	00006400 	andeq	r6, r0, r0, lsl #8
    4568:	fb010200 	blx	44d72 <_bss_end+0x33082>
    456c:	01000d0e 	tsteq	r0, lr, lsl #26
    4570:	00010101 	andeq	r0, r1, r1, lsl #2
    4574:	00010000 	andeq	r0, r1, r0
    4578:	6d2f0100 	stfvss	f0, [pc, #-0]	; 4580 <CPSR_IRQ_INHIBIT+0x4500>
    457c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    4580:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    4584:	4b2f7372 	blmi	be1354 <_bss_end+0xbcf664>
    4588:	2f616275 	svccs	0x00616275
    458c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    4590:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    4594:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    4598:	614d6f72 	hvcvs	55026	; 0xd6f2
    459c:	652f6574 	strvs	r6, [pc, #-1396]!	; 4030 <CPSR_IRQ_INHIBIT+0x3fb0>
    45a0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    45a4:	2f73656c 	svccs	0x0073656c
    45a8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    45ac:	732f4332 			; <UNDEFINED> instruction: 0x732f4332
    45b0:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
    45b4:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    45b8:	73000063 	movwvc	r0, #99	; 0x63
    45bc:	74736474 	ldrbtvc	r6, [r3], #-1140	; 0xfffffb8c
    45c0:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    45c4:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    45c8:	00000100 	andeq	r0, r0, r0, lsl #2
    45cc:	00010500 	andeq	r0, r1, r0, lsl #10
    45d0:	f3e80205 	vsubl.u32	q8, d8, d5
    45d4:	051a0000 	ldreq	r0, [sl, #-0]
    45d8:	1205bb09 	andne	fp, r5, #9216	; 0x2400
    45dc:	6827054c 	stmdavs	r7!, {r2, r3, r6, r8, sl}
    45e0:	05ba1005 	ldreq	r1, [sl, #5]!
    45e4:	2d052e11 	stccs	14, cr2, [r5, #-68]	; 0xffffffbc
    45e8:	4a13054a 	bmi	4c5b18 <_bss_end+0x4b3e28>
    45ec:	052f0f05 	streq	r0, [pc, #-3845]!	; 36ef <CPSR_IRQ_INHIBIT+0x366f>
    45f0:	05059f0a 	streq	r9, [r5, #-3850]	; 0xfffff0f6
    45f4:	10053562 	andne	r3, r5, r2, ror #10
    45f8:	2e110568 	cfmsc32cs	mvfx0, mvfx1, mvfx8
    45fc:	054a2205 	strbeq	r2, [sl, #-517]	; 0xfffffdfb
    4600:	0a052e13 	beq	14fe54 <_bss_end+0x13e164>
    4604:	690c052f 	stmdbvs	ip, {r0, r1, r2, r3, r5, r8, sl}
    4608:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    460c:	06054a0f 	streq	r4, [r5], -pc, lsl #20
    4610:	680e054b 	stmdavs	lr, {r0, r1, r3, r6, r8, sl}
    4614:	02001c05 	andeq	r1, r0, #1280	; 0x500
    4618:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    461c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4620:	1b059e03 	blne	16be34 <_bss_end+0x15a144>
    4624:	02040200 	andeq	r0, r4, #0, 4
    4628:	001e0568 	andseq	r0, lr, r8, ror #10
    462c:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    4630:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    4634:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    4638:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    463c:	21054b02 	tstcs	r5, r2, lsl #22
    4640:	02040200 	andeq	r0, r4, #0, 4
    4644:	0012052e 	andseq	r0, r2, lr, lsr #10
    4648:	4a020402 	bmi	85658 <_bss_end+0x73968>
    464c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4650:	05820204 	streq	r0, [r2, #516]	; 0x204
    4654:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    4658:	17054a02 	strne	r4, [r5, -r2, lsl #20]
    465c:	02040200 	andeq	r0, r4, #0, 4
    4660:	0010052e 	andseq	r0, r0, lr, lsr #10
    4664:	2f020402 	svccs	0x00020402
    4668:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    466c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4670:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4674:	05054a02 	streq	r4, [r5, #-2562]	; 0xfffff5fe
    4678:	02040200 	andeq	r0, r4, #0, 4
    467c:	88010546 	stmdahi	r1, {r1, r2, r6, r8, sl}
    4680:	83090585 	movwhi	r0, #38277	; 0x9585
    4684:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    4688:	10054a13 	andne	r4, r5, r3, lsl sl
    468c:	bb0d054c 	bllt	345bc4 <_bss_end+0x333ed4>
    4690:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    4694:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    4698:	1a054a01 	bne	156ea4 <_bss_end+0x1451b4>
    469c:	01040200 	mrseq	r0, R12_usr
    46a0:	4d13054a 	cfldr32mi	mvfx0, [r3, #-296]	; 0xfffffed8
    46a4:	054a1a05 	strbeq	r1, [sl, #-2565]	; 0xfffff5fb
    46a8:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    46ac:	03050568 	movweq	r0, #21864	; 0x5568
    46b0:	0c056678 	stceq	6, cr6, [r5], {120}	; 0x78
    46b4:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    46b8:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    46bc:	1905bd0c 	stmdbne	r5, {r2, r3, r8, sl, fp, ip, sp, pc}
    46c0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    46c4:	0020054a 	eoreq	r0, r0, sl, asr #10
    46c8:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    46cc:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    46d0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    46d4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    46d8:	17056602 	strne	r6, [r5, -r2, lsl #12]
    46dc:	03040200 	movweq	r0, #16896	; 0x4200
    46e0:	0018054b 	andseq	r0, r8, fp, asr #10
    46e4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    46e8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    46ec:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    46f0:	0402000f 	streq	r0, [r2], #-15
    46f4:	18052e03 	stmdane	r5, {r0, r1, r9, sl, fp, sp}
    46f8:	03040200 	movweq	r0, #16896	; 0x4200
    46fc:	0011054a 	andseq	r0, r1, sl, asr #10
    4700:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4704:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4708:	052d0304 	streq	r0, [sp, #-772]!	; 0xfffffcfc
    470c:	0402000e 	streq	r0, [r2], #-14
    4710:	02008402 	andeq	r8, r0, #33554432	; 0x2000000
    4714:	05830104 	streq	r0, [r3, #260]	; 0x104
    4718:	0402000f 	streq	r0, [r2], #-15
    471c:	11052e01 	tstne	r5, r1, lsl #28
    4720:	01040200 	mrseq	r0, R12_usr
    4724:	0005054a 	andeq	r0, r5, sl, asr #10
    4728:	49010402 	stmdbmi	r1, {r1, sl}
    472c:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    4730:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    4734:	1205bc0f 	andne	fp, r5, #3840	; 0xf00
    4738:	bc200566 	cfstr32lt	mvfx0, [r0], #-408	; 0xfffffe68
    473c:	05660c05 	strbeq	r0, [r6, #-3077]!	; 0xfffff3fb
    4740:	0c054b20 			; <UNDEFINED> instruction: 0x0c054b20
    4744:	4b090566 	blmi	245ce4 <_bss_end+0x233ff4>
    4748:	05831405 	streq	r1, [r3, #1029]	; 0x405
    474c:	09052e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, sp}
    4750:	67140567 	ldrvs	r0, [r4, -r7, ror #10]
    4754:	054d0c05 	strbeq	r0, [sp, #-3077]	; 0xfffff3fb
    4758:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    475c:	0e058309 	cdpeq	3, 0, cr8, cr5, cr9, {0}
    4760:	2e0f054c 	cfsh32cs	mvfx0, mvfx15, #44
    4764:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    4768:	05054b0a 	streq	r4, [r5, #-2826]	; 0xfffff4f6
    476c:	310c0565 	tstcc	ip, r5, ror #10
    4770:	852f0105 	strhi	r0, [pc, #-261]!	; 4673 <CPSR_IRQ_INHIBIT+0x45f3>
    4774:	059f0b05 	ldreq	r0, [pc, #2821]	; 5281 <CPSR_IRQ_INHIBIT+0x5201>
    4778:	17054c0e 	strne	r4, [r5, -lr, lsl #24]
    477c:	03040200 	movweq	r0, #16896	; 0x4200
    4780:	000d054a 	andeq	r0, sp, sl, asr #10
    4784:	83020402 	movwhi	r0, #9218	; 0x2402
    4788:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    478c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4790:	04020010 	streq	r0, [r2], #-16
    4794:	05054a02 	streq	r4, [r5, #-2562]	; 0xfffff5fe
    4798:	02040200 	andeq	r0, r4, #0, 4
    479c:	84010549 	strhi	r0, [r1], #-1353	; 0xfffffab7
    47a0:	bb110585 	bllt	445dbc <_bss_end+0x4340cc>
    47a4:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    47a8:	17054c0e 	strne	r4, [r5, -lr, lsl #24]
    47ac:	03040200 	movweq	r0, #16896	; 0x4200
    47b0:	001c054a 	andseq	r0, ip, sl, asr #10
    47b4:	83020402 	movwhi	r0, #9218	; 0x2402
    47b8:	02001d05 	andeq	r1, r0, #320	; 0x140
    47bc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    47c0:	04020010 	streq	r0, [r2], #-16
    47c4:	11054a02 	tstne	r5, r2, lsl #20
    47c8:	02040200 	andeq	r0, r4, #0, 4
    47cc:	001d052e 	andseq	r0, sp, lr, lsr #10
    47d0:	4a020402 	bmi	857e0 <_bss_end+0x73af0>
    47d4:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    47d8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    47dc:	04020005 	streq	r0, [r2], #-5
    47e0:	01052d02 	tsteq	r5, r2, lsl #26
    47e4:	00080284 	andeq	r0, r8, r4, lsl #5
    47e8:	03350101 	teqeq	r5, #1073741824	; 0x40000000
    47ec:	00030000 	andeq	r0, r3, r0
    47f0:	000001f1 	strdeq	r0, [r0], -r1
    47f4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    47f8:	0101000d 	tsteq	r1, sp
    47fc:	00000101 	andeq	r0, r0, r1, lsl #2
    4800:	00000100 	andeq	r0, r0, r0, lsl #2
    4804:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    4808:	2f632f74 	svccs	0x00632f74
    480c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    4810:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    4814:	442f6162 	strtmi	r6, [pc], #-354	; 481c <CPSR_IRQ_INHIBIT+0x479c>
    4818:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    481c:	73746e65 	cmnvc	r4, #1616	; 0x650
    4820:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    4824:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    4828:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    482c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    4830:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    4834:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    4838:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    483c:	69747564 	ldmdbvs	r4!, {r2, r5, r6, r8, sl, ip, sp, lr}^
    4840:	732f736c 			; <UNDEFINED> instruction: 0x732f736c
    4844:	2f006372 	svccs	0x00006372
    4848:	2f746e6d 	svccs	0x00746e6d
    484c:	73552f63 	cmpvc	r5, #396	; 0x18c
    4850:	2f737265 	svccs	0x00737265
    4854:	6162754b 	cmnvs	r2, fp, asr #10
    4858:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    485c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    4860:	5a2f7374 	bpl	be1638 <_bss_end+0xbcf948>
    4864:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 46d8 <CPSR_IRQ_INHIBIT+0x4658>
    4868:	2f657461 	svccs	0x00657461
    486c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    4870:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    4874:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    4878:	2f433249 	svccs	0x00433249
    487c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    4880:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    4884:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4888:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    488c:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    4890:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    4894:	61682f30 	cmnvs	r8, r0, lsr pc
    4898:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 46f0 <CPSR_IRQ_INHIBIT+0x4670>
    489c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    48a0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    48a4:	4b2f7372 	blmi	be1674 <_bss_end+0xbcf984>
    48a8:	2f616275 	svccs	0x00616275
    48ac:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    48b0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    48b4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    48b8:	614d6f72 	hvcvs	55026	; 0xd6f2
    48bc:	652f6574 	strvs	r6, [pc, #-1396]!	; 4350 <CPSR_IRQ_INHIBIT+0x42d0>
    48c0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    48c4:	2f73656c 	svccs	0x0073656c
    48c8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    48cc:	732f4332 			; <UNDEFINED> instruction: 0x732f4332
    48d0:	74756474 	ldrbtvc	r6, [r5], #-1140	; 0xfffffb8c
    48d4:	2f736c69 	svccs	0x00736c69
    48d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    48dc:	00656475 	rsbeq	r6, r5, r5, ror r4
    48e0:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    48e4:	552f632f 	strpl	r6, [pc, #-815]!	; 45bd <CPSR_IRQ_INHIBIT+0x453d>
    48e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    48ec:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    48f0:	6f442f61 	svcvs	0x00442f61
    48f4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    48f8:	2f73746e 	svccs	0x0073746e
    48fc:	6f72655a 	svcvs	0x0072655a
    4900:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    4904:	6178652f 	cmnvs	r8, pc, lsr #10
    4908:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    490c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    4910:	4332492d 	teqmi	r2, #737280	; 0xb4000
    4914:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4918:	2f6c656e 	svccs	0x006c656e
    491c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4920:	2f656475 	svccs	0x00656475
    4924:	2f007366 	svccs	0x00007366
    4928:	2f746e6d 	svccs	0x00746e6d
    492c:	73552f63 	cmpvc	r5, #396	; 0x18c
    4930:	2f737265 	svccs	0x00737265
    4934:	6162754b 	cmnvs	r2, fp, asr #10
    4938:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    493c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    4940:	5a2f7374 	bpl	be1718 <_bss_end+0xbcfa28>
    4944:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 47b8 <CPSR_IRQ_INHIBIT+0x4738>
    4948:	2f657461 	svccs	0x00657461
    494c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    4950:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    4954:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    4958:	2f433249 	svccs	0x00433249
    495c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    4960:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    4964:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4968:	642f6564 	strtvs	r6, [pc], #-1380	; 4970 <CPSR_IRQ_INHIBIT+0x48f0>
    496c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    4970:	622f7372 	eorvs	r7, pc, #-939524095	; 0xc8000001
    4974:	67646972 			; <UNDEFINED> instruction: 0x67646972
    4978:	00007365 	andeq	r7, r0, r5, ror #6
    497c:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
    4980:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    4984:	00000100 	andeq	r0, r0, r0, lsl #2
    4988:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    498c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    4990:	00000200 	andeq	r0, r0, r0, lsl #4
    4994:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
    4998:	0300682e 	movweq	r6, #2094	; 0x82e
    499c:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    49a0:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    49a4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    49a8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    49ac:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
    49b0:	616c7073 	smcvs	50947	; 0xc703
    49b4:	72705f79 	rsbsvc	r5, r0, #484	; 0x1e4
    49b8:	636f746f 	cmnvs	pc, #1862270976	; 0x6f000000
    49bc:	682e6c6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}
    49c0:	00000500 	andeq	r0, r0, r0, lsl #10
    49c4:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
    49c8:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
    49cc:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
    49d0:	00020068 	andeq	r0, r2, r8, rrx
    49d4:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
    49d8:	6f665f64 	svcvs	0x00665f64
    49dc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    49e0:	00000100 	andeq	r0, r0, r0, lsl #2
    49e4:	00010500 	andeq	r0, r1, r0, lsl #10
    49e8:	f8a00205 			; <UNDEFINED> instruction: 0xf8a00205
    49ec:	0a030000 	beq	c49f4 <_bss_end+0xb2d04>
    49f0:	9f140501 	svcls	0x00140501
    49f4:	05824805 	streq	r4, [r2, #2053]	; 0x805
    49f8:	1805a110 	stmdane	r5, {r4, r8, sp, pc}
    49fc:	820d054a 	andhi	r0, sp, #310378496	; 0x12800000
    4a00:	844b0105 	strbhi	r0, [fp], #-261	; 0xfffffefb
    4a04:	05850905 	streq	r0, [r5, #2309]	; 0x905
    4a08:	11054a05 	tstne	r5, r5, lsl #20
    4a0c:	670e054c 	strvs	r0, [lr, -ip, asr #10]
    4a10:	85840105 	strhi	r0, [r4, #261]	; 0x105
    4a14:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    4a18:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
    4a1c:	0905bb0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp, pc}
    4a20:	4a05054a 	bmi	145f50 <_bss_end+0x134260>
    4a24:	054e1105 	strbeq	r1, [lr, #-261]	; 0xfffffefb
    4a28:	02004b0f 	andeq	r4, r0, #15360	; 0x3c00
    4a2c:	66060104 	strvs	r0, [r6], -r4, lsl #2
    4a30:	02040200 	andeq	r0, r4, #0, 4
    4a34:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4a38:	07052e04 	streq	r2, [r5, -r4, lsl #28]
    4a3c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a40:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    4a44:	340105d1 	strcc	r0, [r1], #-1489	; 0xfffffa2f
    4a48:	080a054d 	stmdaeq	sl, {r0, r2, r3, r6, r8, sl}
    4a4c:	4a090591 	bmi	246098 <_bss_end+0x2343a8>
    4a50:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    4a54:	0f054f14 	svceq	0x00054f14
    4a58:	9f11054b 	svcls	0x0011054b
    4a5c:	f31305f3 	vqrshl.u16	q0, <illegal reg q9.5>, <illegal reg q9.5>
    4a60:	01040200 	mrseq	r0, R12_usr
    4a64:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    4a68:	004a0204 	subeq	r0, sl, r4, lsl #4
    4a6c:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    4a70:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4a74:	2f060404 	svccs	0x00060404
    4a78:	77030905 	strvc	r0, [r3, -r5, lsl #18]
    4a7c:	030105d6 	movweq	r0, #5590	; 0x15d6
    4a80:	054d2e0a 	strbeq	r2, [sp, #-3594]	; 0xfffff1f6
    4a84:	0591080a 	ldreq	r0, [r1, #2058]	; 0x80a
    4a88:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
    4a8c:	28054e4a 	stmdacs	r5, {r1, r3, r6, r9, sl, fp, lr}
    4a90:	01040200 	mrseq	r0, R12_usr
    4a94:	00230566 	eoreq	r0, r3, r6, ror #10
    4a98:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4a9c:	054f1e05 	strbeq	r1, [pc, #-3589]	; 3c9f <CPSR_IRQ_INHIBIT+0x3c1f>
    4aa0:	0c054b15 			; <UNDEFINED> instruction: 0x0c054b15
    4aa4:	0d05bb67 	vstreq	d11, [r5, #-412]	; 0xfffffe64
    4aa8:	052108bb 	streq	r0, [r1, #-2235]!	; 0xfffff745
    4aac:	05210810 	streq	r0, [r1, #-2064]!	; 0xfffff7f0
    4ab0:	51056844 	tstpl	r5, r4, asr #16
    4ab4:	2e40052e 	cdpcs	5, 4, cr0, cr0, cr14, {1}
    4ab8:	059e0c05 	ldreq	r0, [lr, #3077]	; 0xc05
    4abc:	0b054a6c 	bleq	157474 <_bss_end+0x145784>
    4ac0:	030a054a 	movweq	r0, #42314	; 0xa54a
    4ac4:	09056609 	stmdbeq	r5, {r0, r3, r9, sl, sp, lr}
    4ac8:	4ed66703 	cdpmi	7, 13, cr6, cr6, cr3, {0}
    4acc:	16030105 	strne	r0, [r3], -r5, lsl #2
    4ad0:	0a05692e 	beq	15ef90 <_bss_end+0x14d2a0>
    4ad4:	4a090583 	bmi	2460e8 <_bss_end+0x2343f8>
    4ad8:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    4adc:	0a054e14 	beq	158334 <_bss_end+0x146644>
    4ae0:	d109054c 	tstle	r9, ip, asr #10
    4ae4:	4d340105 	ldfmis	f0, [r4, #-20]!	; 0xffffffec
    4ae8:	21080a05 	tstcs	r8, r5, lsl #20
    4aec:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    4af0:	0e054a05 	vmlaeq.f32	s8, s10, s10
    4af4:	4b11054d 	blmi	446030 <_bss_end+0x434340>
    4af8:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    4afc:	20054a19 	andcs	r4, r5, r9, lsl sl
    4b00:	01040200 	mrseq	r0, R12_usr
    4b04:	0019054a 	andseq	r0, r9, sl, asr #10
    4b08:	66010402 	strvs	r0, [r1], -r2, lsl #8
    4b0c:	054c1105 	strbeq	r1, [ip, #-261]	; 0xfffffefb
    4b10:	0567bb0c 	strbeq	fp, [r7, #-2828]!	; 0xfffff4f4
    4b14:	09056205 	stmdbeq	r5, {r0, r2, r9, sp, lr}
    4b18:	03010529 	movweq	r0, #5417	; 0x1529
    4b1c:	04022e0b 	streq	r2, [r2], #-3595	; 0xfffff1f5
    4b20:	fe010100 	cdp2	1, 0, cr0, cr1, cr0, {0}
    4b24:	03000001 	movweq	r0, #1
    4b28:	0001e100 	andeq	lr, r1, r0, lsl #2
    4b2c:	fb010200 	blx	45336 <_bss_end+0x33646>
    4b30:	01000d0e 	tsteq	r0, lr, lsl #26
    4b34:	00010101 	andeq	r0, r1, r1, lsl #2
    4b38:	00010000 	andeq	r0, r1, r0
    4b3c:	2e2e0100 	sufcse	f0, f6, f0
    4b40:	2f2e2e2f 	svccs	0x002e2e2f
    4b44:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4b48:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4b4c:	2f2e2e2f 	svccs	0x002e2e2f
    4b50:	2f637273 	svccs	0x00637273
    4b54:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4b58:	2b636474 	blcs	18ddd30 <_bss_end+0x18cc040>
    4b5c:	33762d2b 	cmncc	r6, #2752	; 0xac0
    4b60:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4b64:	63707573 	cmnvs	r0, #482344960	; 0x1cc00000
    4b68:	2f002b2b 	svccs	0x00002b2b
    4b6c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4b70:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    4b74:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4b78:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    4b7c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4b80:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    4b84:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4b88:	44672d69 	strbtmi	r2, [r7], #-3433	; 0xfffff297
    4b8c:	43374569 	teqmi	r7, #440401920	; 0x1a400000
    4b90:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4b94:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    4b98:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    4b9c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4ba0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4ba4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4ba8:	2f37312d 	svccs	0x0037312d
    4bac:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4bb0:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    4bb4:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    4bb8:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    4bbc:	2f647261 	svccs	0x00647261
    4bc0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4bc4:	2b636474 	blcs	18ddd9c <_bss_end+0x18cc0ac>
    4bc8:	6e692f2b 	cdpvs	15, 6, cr2, cr9, cr11, {1}
    4bcc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4bd0:	69622f65 	stmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    4bd4:	2f007374 	svccs	0x00007374
    4bd8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4bdc:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    4be0:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4be4:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    4be8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4bec:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    4bf0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4bf4:	44672d69 	strbtmi	r2, [r7], #-3433	; 0xfffff297
    4bf8:	43374569 	teqmi	r7, #440401920	; 0x1a400000
    4bfc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4c00:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    4c04:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    4c08:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4c0c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4c10:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4c14:	2f37312d 	svccs	0x0037312d
    4c18:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4c1c:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    4c20:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    4c24:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    4c28:	2f647261 	svccs	0x00647261
    4c2c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4c30:	2b636474 	blcs	18dde08 <_bss_end+0x18cc118>
    4c34:	6e692f2b 	cdpvs	15, 6, cr2, cr9, cr11, {1}
    4c38:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4c3c:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    4c40:	6f6e2d6d 	svcvs	0x006e2d6d
    4c44:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4c48:	2f696261 	svccs	0x00696261
    4c4c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    4c50:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
    4c54:	2f646c69 	svccs	0x00646c69
    4c58:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4c5c:	2b636474 	blcs	18dde34 <_bss_end+0x18cc144>
    4c60:	72612d2b 	rsbvc	r2, r1, #2752	; 0xac0
    4c64:	6f6e2d6d 	svcvs	0x006e2d6d
    4c68:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4c6c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4c70:	45694467 	strbmi	r4, [r9, #-1127]!	; 0xfffffb99
    4c74:	6c2f4337 	stcvs	3, cr4, [pc], #-220	; 4ba0 <CPSR_IRQ_INHIBIT+0x4b20>
    4c78:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4c7c:	2b2b6364 	blcs	adda14 <_bss_end+0xacbd24>
    4c80:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    4c84:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4c88:	61652d65 	cmnvs	r5, r5, ror #26
    4c8c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    4c90:	75622f37 	strbvc	r2, [r2, #-3895]!	; 0xfffff0c9
    4c94:	2f646c69 	svccs	0x00646c69
    4c98:	2f6d7261 	svccs	0x006d7261
    4c9c:	65743576 	ldrbvs	r3, [r4, #-1398]!	; 0xfffffa8a
    4ca0:	7261682f 	rsbvc	r6, r1, #3080192	; 0x2f0000
    4ca4:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    4ca8:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4cac:	2f2b2b63 	svccs	0x002b2b63
    4cb0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4cb4:	00656475 	rsbeq	r6, r5, r5, ror r4
    4cb8:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
    4cbc:	76706f5f 	uhsaxvc	r6, r0, pc	; <UNPREDICTABLE>
    4cc0:	0063632e 	rsbeq	r6, r3, lr, lsr #6
    4cc4:	65000001 	strvs	r0, [r0, #-1]
    4cc8:	70656378 	rsbvc	r6, r5, r8, ror r3
    4ccc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4cd0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4cd4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4cd8:	2b630000 	blcs	18c4ce0 <_bss_end+0x18b2ff0>
    4cdc:	6e6f632b 	cdpvs	3, 6, cr6, cr15, cr11, {1}
    4ce0:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
    4ce4:	00030068 	andeq	r0, r3, r8, rrx
    4ce8:	70797400 	rsbsvc	r7, r9, r0, lsl #8
    4cec:	72745f65 	rsbsvc	r5, r4, #404	; 0x194
    4cf0:	73746961 	cmnvc	r4, #1589248	; 0x184000
    4cf4:	00000400 	andeq	r0, r0, r0, lsl #8
    4cf8:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    4cfc:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    4d00:	00003e6e 	andeq	r3, r0, lr, ror #28
    4d04:	656e0000 	strbvs	r0, [lr, #-0]!
    4d08:	00010077 	andeq	r0, r1, r7, ror r0
    4d0c:	01050000 	mrseq	r0, (UNDEF: 5)
    4d10:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    4d14:	030000fd 	movweq	r0, #253	; 0xfd
    4d18:	0305011e 	movweq	r0, #20766	; 0x511e
    4d1c:	06180513 			; <UNDEFINED> instruction: 0x06180513
    4d20:	01002e01 	tsteq	r0, r1, lsl #28
    4d24:	00007901 	andeq	r7, r0, r1, lsl #18
    4d28:	46000300 	strmi	r0, [r0], -r0, lsl #6
    4d2c:	02000000 	andeq	r0, r0, #0
    4d30:	0d0efb01 	vstreq	d15, [lr, #-4]
    4d34:	01010100 	mrseq	r0, (UNDEF: 17)
    4d38:	00000001 	andeq	r0, r0, r1
    4d3c:	01000001 	tsteq	r0, r1
    4d40:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4d44:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4d48:	2f2e2e2f 	svccs	0x002e2e2f
    4d4c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4d50:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4d54:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    4d58:	6e6f632f 	cdpvs	3, 6, cr6, cr15, cr15, {1}
    4d5c:	2f676966 	svccs	0x00676966
    4d60:	006d7261 	rsbeq	r7, sp, r1, ror #4
    4d64:	62696c00 	rsbvs	r6, r9, #0, 24
    4d68:	6e756631 	mrcvs	6, 3, r6, cr5, cr1, {1}
    4d6c:	532e7363 			; <UNDEFINED> instruction: 0x532e7363
    4d70:	00000100 	andeq	r0, r0, r0, lsl #2
    4d74:	02050000 	andeq	r0, r5, #0
    4d78:	0000fd58 	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
    4d7c:	0108cf03 	tsteq	r8, r3, lsl #30
    4d80:	2f2f2f30 	svccs	0x002f2f30
    4d84:	02302f2f 	eorseq	r2, r0, #47, 30	; 0xbc
    4d88:	2f1401d0 	svccs	0x001401d0
    4d8c:	302f2f31 	eorcc	r2, pc, r1, lsr pc	; <UNPREDICTABLE>
    4d90:	03322f4c 	teqeq	r2, #76, 30	; 0x130
    4d94:	2f2f661f 	svccs	0x002f661f
    4d98:	2f2f2f2f 	svccs	0x002f2f2f
    4d9c:	0002022f 	andeq	r0, r2, pc, lsr #4
    4da0:	005c0101 	subseq	r0, ip, r1, lsl #2
    4da4:	00030000 	andeq	r0, r3, r0
    4da8:	00000046 	andeq	r0, r0, r6, asr #32
    4dac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    4db0:	0101000d 	tsteq	r1, sp
    4db4:	00000101 	andeq	r0, r0, r1, lsl #2
    4db8:	00000100 	andeq	r0, r0, r0, lsl #2
    4dbc:	2f2e2e01 	svccs	0x002e2e01
    4dc0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4dc4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4dc8:	2f2e2e2f 	svccs	0x002e2e2f
    4dcc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4d1c <CPSR_IRQ_INHIBIT+0x4c9c>
    4dd0:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    4dd4:	6f632f63 	svcvs	0x00632f63
    4dd8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    4ddc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4de0:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    4de4:	75663162 	strbvc	r3, [r6, #-354]!	; 0xfffffe9e
    4de8:	2e73636e 	cdpcs	3, 7, cr6, cr3, cr14, {3}
    4dec:	00010053 	andeq	r0, r1, r3, asr r0
    4df0:	05000000 	streq	r0, [r0, #-0]
    4df4:	00ff6402 	rscseq	r6, pc, r2, lsl #8
    4df8:	0bb90300 	bleq	fee45a00 <_bss_end+0xfee33d10>
    4dfc:	00020201 	andeq	r0, r2, r1, lsl #4
    4e00:	00a40101 	adceq	r0, r4, r1, lsl #2
    4e04:	00030000 	andeq	r0, r3, r0
    4e08:	0000009e 	muleq	r0, lr, r0
    4e0c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    4e10:	0101000d 	tsteq	r1, sp
    4e14:	00000101 	andeq	r0, r0, r1, lsl #2
    4e18:	00000100 	andeq	r0, r0, r0, lsl #2
    4e1c:	2f2e2e01 	svccs	0x002e2e01
    4e20:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e24:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e28:	2f2e2e2f 	svccs	0x002e2e2f
    4e2c:	63672f2e 	cmnvs	r7, #46, 30	; 0xb8
    4e30:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    4e34:	2f2e2e2f 	svccs	0x002e2e2f
    4e38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e3c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e40:	2f2e2e2f 	svccs	0x002e2e2f
    4e44:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    4e48:	2e2f6363 	cdpcs	3, 2, cr6, cr15, cr3, {3}
    4e4c:	63672f2e 	cmnvs	r7, #46, 30	; 0xb8
    4e50:	6f632f63 	svcvs	0x00632f63
    4e54:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    4e58:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4e5c:	2f2e2e00 	svccs	0x002e2e00
    4e60:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e64:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e68:	2f2e2e2f 	svccs	0x002e2e2f
    4e6c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4dbc <CPSR_IRQ_INHIBIT+0x4d3c>
    4e70:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    4e74:	61000063 	tstvs	r0, r3, rrx
    4e78:	692d6d72 	pushvs	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
    4e7c:	682e6173 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, sp, lr}
    4e80:	00000100 	andeq	r0, r0, r0, lsl #2
    4e84:	2e6d7261 	cdpcs	2, 6, cr7, cr13, cr1, {3}
    4e88:	00020068 	andeq	r0, r2, r8, rrx
    4e8c:	6c626700 	stclvs	7, cr6, [r2], #-0
    4e90:	6f74632d 	svcvs	0x0074632d
    4e94:	682e7372 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    4e98:	00000300 	andeq	r0, r0, r0, lsl #6
    4e9c:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    4ea0:	2e326363 	cdpcs	3, 3, cr6, cr2, cr3, {3}
    4ea4:	00030063 	andeq	r0, r3, r3, rrx
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
       4:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
       8:	5f647261 	svcpl	0x00647261
       c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
      10:	00657361 	rsbeq	r7, r5, r1, ror #6
      14:	20554e47 	subscs	r4, r5, r7, asr #28
      18:	312b2b43 			; <UNDEFINED> instruction: 0x312b2b43
      1c:	30312034 	eorscc	r2, r1, r4, lsr r0
      20:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      24:	32303220 	eorscc	r3, r0, #32, 4
      28:	32363031 	eorscc	r3, r6, #49	; 0x31
      2c:	72282031 	eorvc	r2, r8, #49	; 0x31
      30:	61656c65 	cmnvs	r5, r5, ror #24
      34:	20296573 	eorcs	r6, r9, r3, ror r5
      38:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
      3c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
      40:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      44:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
      48:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      4c:	763d7570 			; <UNDEFINED> instruction: 0x763d7570
      50:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
      54:	6f6c666d 	svcvs	0x006c666d
      58:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
      5c:	683d6962 	ldmdavs	sp!, {r1, r5, r6, r8, fp, sp, lr}
      60:	20647261 	rsbcs	r7, r4, r1, ror #4
      64:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
      68:	66763d75 			; <UNDEFINED> instruction: 0x66763d75
      6c:	6d2d2070 	stcvs	0, cr2, [sp, #-448]!	; 0xfffffe40
      70:	656e7574 	strbvs	r7, [lr, #-1396]!	; 0xfffffa8c
      74:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
      78:	36373131 			; <UNDEFINED> instruction: 0x36373131
      7c:	2d667a6a 	vstmdbcs	r6!, {s15-s120}
      80:	6d2d2073 	stcvs	0, cr2, [sp, #-460]!	; 0xfffffe34
      84:	206d7261 	rsbcs	r7, sp, r1, ror #4
      88:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      8c:	613d6863 	teqvs	sp, r3, ror #16
      90:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
      94:	662b6b7a 			; <UNDEFINED> instruction: 0x662b6b7a
      98:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
      9c:	20672d20 	rsbcs	r2, r7, r0, lsr #26
      a0:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
      a4:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
      a8:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
      ac:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; ffffff1c <_bss_end+0xfffee22c>
      b0:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
      b4:	6f697470 	svcvs	0x00697470
      b8:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
      bc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; ffffff2c <_bss_end+0xfffee23c>
      c0:	69747472 	ldmdbvs	r4!, {r1, r4, r5, r6, sl, ip, sp, lr}^
      c4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
      c8:	2f632f74 	svccs	0x00632f74
      cc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
      d0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
      d4:	442f6162 	strtmi	r6, [pc], #-354	; dc <CPSR_IRQ_INHIBIT+0x5c>
      d8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
      dc:	73746e65 	cmnvc	r4, #1616	; 0x650
      e0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
      e4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
      e8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
      ec:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
      f0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
      f4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
      f8:	75622f43 	strbvc	r2, [r2, #-3907]!	; 0xfffff0bd
      fc:	00646c69 	rsbeq	r6, r4, r9, ror #24
     100:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     104:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
     108:	5f647261 	svcpl	0x00647261
     10c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     110:	6d2f0074 	stcvs	0, cr0, [pc, #-464]!	; ffffff48 <_bss_end+0xfffee258>
     114:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     118:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     11c:	4b2f7372 	blmi	bdceec <_bss_end+0xbcb1fc>
     120:	2f616275 	svccs	0x00616275
     124:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     128:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     12c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     130:	614d6f72 	hvcvs	55026	; 0xd6f2
     134:	652f6574 	strvs	r6, [pc, #-1396]!	; fffffbc8 <_bss_end+0xfffeded8>
     138:	706d6178 	rsbvc	r6, sp, r8, ror r1
     13c:	2f73656c 	svccs	0x0073656c
     140:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     144:	6b2f4332 	blvs	bd0e14 <_bss_end+0xbbf124>
     148:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     14c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     150:	78632f63 	stmdavc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
     154:	70632e78 	rsbvc	r2, r3, r8, ror lr
     158:	5f5f0070 	svcpl	0x005f0070
     15c:	5f6f7364 	svcpl	0x006f7364
     160:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     164:	5f00656c 	svcpl	0x0000656c
     168:	6178635f 	cmnvs	r8, pc, asr r3
     16c:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     170:	00746978 	rsbseq	r6, r4, r8, ror r9
     174:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     178:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
     17c:	5f647261 	svcpl	0x00647261
     180:	75716361 	ldrbvc	r6, [r1, #-865]!	; 0xfffffc9f
     184:	00657269 	rsbeq	r7, r5, r9, ror #4
     188:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     18c:	69626178 	stmdbvs	r2!, {r3, r4, r5, r6, r8, sp, lr}^
     190:	5f003176 	svcpl	0x00003176
     194:	6178635f 	cmnvs	r8, pc, asr r3
     198:	7275705f 	rsbsvc	r7, r5, #95	; 0x5f
     19c:	69765f65 	ldmdbvs	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     1a0:	61757472 	cmnvs	r5, r2, ror r4
     1a4:	5f5f006c 	svcpl	0x005f006c
     1a8:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     1ac:	6e755f69 	cdpvs	15, 7, cr5, cr5, cr9, {3}
     1b0:	646e6977 	strbtvs	r6, [lr], #-2423	; 0xfffff689
     1b4:	7070635f 	rsbsvc	r6, r0, pc, asr r3
     1b8:	3172705f 	cmncc	r2, pc, asr r0
     1bc:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     1c0:	64726175 	ldrbtvs	r6, [r2], #-373	; 0xfffffe8b
     1c4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     1c8:	6f6c2067 	svcvs	0x006c2067
     1cc:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     1d0:	5f00746e 	svcpl	0x0000746e
     1d4:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     1d8:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     1dc:	61485f4f 	cmpvs	r8, pc, asr #30
     1e0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     1e4:	52313172 	eorspl	r3, r1, #-2147483620	; 0x8000001c
     1e8:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
     1ec:	505f6576 	subspl	r6, pc, r6, ror r5	; <UNPREDICTABLE>
     1f0:	6a456e69 	bvs	115bb9c <_bss_end+0x1149eac>
     1f4:	41006262 	tstmi	r0, r2, ror #4
     1f8:	305f746c 	subscc	r7, pc, ip, ror #8
     1fc:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     200:	4100315f 	tstmi	r0, pc, asr r1
     204:	325f746c 	subscc	r7, pc, #108, 8	; 0x6c000000
     208:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     20c:	4100335f 	tstmi	r0, pc, asr r3
     210:	345f746c 	ldrbcc	r7, [pc], #-1132	; 218 <CPSR_IRQ_INHIBIT+0x198>
     214:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     218:	6700355f 	smlsdvs	r0, pc, r5, r3	; <UNPREDICTABLE>
     21c:	5f6f6970 	svcpl	0x006f6970
     220:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     224:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     228:	5a5f0072 	bpl	17c03f8 <_bss_end+0x17ae708>
     22c:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     230:	4f495047 	svcmi	0x00495047
     234:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     238:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     23c:	6a453243 	bvs	114cb50 <_bss_end+0x113ae60>
     240:	735f5f00 	cmpvc	pc, #0, 30
     244:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
     248:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     24c:	61697469 	cmnvs	r9, r9, ror #8
     250:	617a696c 	cmnvs	sl, ip, ror #18
     254:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     258:	646e615f 	strbtvs	r6, [lr], #-351	; 0xfffffea1
     25c:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
     260:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     264:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     268:	5f00305f 	svcpl	0x0000305f
     26c:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     270:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     274:	61485f4f 	cmpvs	r8, pc, asr #30
     278:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     27c:	65473972 	strbvs	r3, [r7, #-2418]	; 0xfffff68e
     280:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
     284:	45747570 	ldrbmi	r7, [r4, #-1392]!	; 0xfffffa90
     288:	6553006a 	ldrbvs	r0, [r3, #-106]	; 0xffffff96
     28c:	50475f74 	subpl	r5, r7, r4, ror pc
     290:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
     294:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     298:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     29c:	55505047 	ldrbpl	r5, [r0, #-71]	; 0xffffffb9
     2a0:	4b4c4344 	blmi	1310fb8 <_bss_end+0x12ff2c8>
     2a4:	50470030 	subpl	r0, r7, r0, lsr r0
     2a8:	43445550 	movtmi	r5, #17744	; 0x4550
     2ac:	00314b4c 	eorseq	r4, r1, ip, asr #22
     2b0:	55505047 	ldrbpl	r5, [r0, #-71]	; 0xffffffb9
     2b4:	69540044 	ldmdbvs	r4, {r2, r6}^
     2b8:	5f72656d 	svcpl	0x0072656d
     2bc:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     2c0:	69506d00 	ldmdbvs	r0, {r8, sl, fp, sp, lr}^
     2c4:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
     2c8:	76726573 			; <UNDEFINED> instruction: 0x76726573
     2cc:	6f697461 	svcvs	0x00697461
     2d0:	525f736e 	subspl	r7, pc, #-1207959551	; 0xb8000001
     2d4:	00646165 	rsbeq	r6, r4, r5, ror #2
     2d8:	5f746547 	svcpl	0x00746547
     2dc:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
     2e0:	50470074 	subpl	r0, r7, r4, ror r0
     2e4:	304e454c 	subcc	r4, lr, ip, asr #10
     2e8:	4c504700 	mrrcmi	7, 0, r4, r0, cr0
     2ec:	00314e45 	eorseq	r4, r1, r5, asr #28
     2f0:	45535047 	ldrbmi	r5, [r3, #-71]	; 0xffffffb9
     2f4:	47003054 	smlsdmi	r0, r4, r0, r3
     2f8:	54455350 	strbpl	r5, [r5], #-848	; 0xfffffcb0
     2fc:	5a5f0031 	bpl	17c03c8 <_bss_end+0x17ae6d8>
     300:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     304:	4f495047 	svcmi	0x00495047
     308:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     30c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     310:	65724638 	ldrbvs	r4, [r2, #-1592]!	; 0xfffff9c8
     314:	69505f65 	ldmdbvs	r0, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     318:	626a456e 	rsbvs	r4, sl, #461373440	; 0x1b800000
     31c:	50470062 	subpl	r0, r7, r2, rrx
     320:	3056454c 	subscc	r4, r6, ip, asr #10
     324:	4c504700 	mrrcmi	7, 0, r4, r0, cr0
     328:	00315645 	eorseq	r5, r1, r5, asr #12
     32c:	73696874 	cmnvc	r9, #116, 16	; 0x740000
     330:	43534200 	cmpmi	r3, #0, 4
     334:	61425f30 	cmpvs	r2, r0, lsr pc
     338:	5f006573 	svcpl	0x00006573
     33c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     340:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
     344:	5f657a69 	svcpl	0x00657a69
     348:	6e490070 	mcrvs	0, 2, r0, cr9, cr0, {3}
     34c:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     350:	5f747075 	svcpl	0x00747075
     354:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     358:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
     35c:	425f7265 	subsmi	r7, pc, #1342177286	; 0x50000006
     360:	00657361 	rsbeq	r7, r5, r1, ror #6
     364:	474e5254 	smlsldmi	r5, lr, r4, r2
     368:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     36c:	6f6d0065 	svcvs	0x006d0065
     370:	41006564 	tstmi	r0, r4, ror #10
     374:	425f5855 	subsmi	r5, pc, #5570560	; 0x550000
     378:	00657361 	rsbeq	r7, r5, r1, ror #6
     37c:	53465047 	movtpl	r5, #24647	; 0x6047
     380:	00304c45 	eorseq	r4, r0, r5, asr #24
     384:	53465047 	movtpl	r5, #24647	; 0x6047
     388:	00314c45 	eorseq	r4, r1, r5, asr #24
     38c:	53465047 	movtpl	r5, #24647	; 0x6047
     390:	00324c45 	eorseq	r4, r2, r5, asr #24
     394:	53465047 	movtpl	r5, #24647	; 0x6047
     398:	00334c45 	eorseq	r4, r3, r5, asr #24
     39c:	53465047 	movtpl	r5, #24647	; 0x6047
     3a0:	00344c45 	eorseq	r4, r4, r5, asr #24
     3a4:	53465047 	movtpl	r5, #24647	; 0x6047
     3a8:	00354c45 	eorseq	r4, r5, r5, asr #24
     3ac:	4b4e5a5f 	blmi	1396d30 <_bss_end+0x1385040>
     3b0:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     3b4:	5f4f4950 	svcpl	0x004f4950
     3b8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     3bc:	3172656c 	cmncc	r2, ip, ror #10
     3c0:	74654739 	strbtvc	r4, [r5], #-1849	; 0xfffff8c7
     3c4:	4650475f 			; <UNDEFINED> instruction: 0x4650475f
     3c8:	5f4c4553 	svcpl	0x004c4553
     3cc:	61636f4c 	cmnvs	r3, ip, asr #30
     3d0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     3d4:	6a526a45 	bvs	149acf0 <_bss_end+0x1489000>
     3d8:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
     3dc:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     3e0:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
     3e4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     3e8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     3ec:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
     3f0:	5f314353 	svcpl	0x00314353
     3f4:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     3f8:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     3fc:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xfffff0b1
     400:	476d0067 	strbmi	r0, [sp, -r7, rrx]!
     404:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
     408:	4c435047 	mcrrmi	0, 4, r5, r3, cr7
     40c:	47003052 	smlsdmi	r0, r2, r0, r3
     410:	524c4350 	subpl	r4, ip, #80, 6	; 0x40000001
     414:	5a5f0031 	bpl	17c04e0 <_bss_end+0x17ae7f0>
     418:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     41c:	4f495047 	svcmi	0x00495047
     420:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     424:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     428:	65533031 	ldrbvs	r3, [r3, #-49]	; 0xffffffcf
     42c:	754f5f74 	strbvc	r5, [pc, #-3956]	; fffff4c0 <_bss_end+0xfffed7d0>
     430:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
     434:	00626a45 	rsbeq	r6, r2, r5, asr #20
     438:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     43c:	65470065 	strbvs	r0, [r7, #-101]	; 0xffffff9b
     440:	50475f74 	subpl	r5, r7, r4, ror pc
     444:	4c455346 	mcrrmi	3, 4, r5, r5, cr6
     448:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     44c:	6f697461 	svcvs	0x00697461
     450:	5047006e 	subpl	r0, r7, lr, rrx
     454:	425f4f49 	subsmi	r4, pc, #292	; 0x124
     458:	00657361 	rsbeq	r7, r5, r1, ror #6
     45c:	32435342 	subcc	r5, r3, #134217729	; 0x8000001
     460:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     464:	65470065 	strbvs	r0, [r7, #-101]	; 0xffffff9b
     468:	50475f74 	subpl	r5, r7, r4, ror pc
     46c:	5f56454c 	svcpl	0x0056454c
     470:	61636f4c 	cmnvs	r3, ip, asr #30
     474:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     478:	52504700 	subspl	r4, r0, #0, 14
     47c:	00304e45 	eorseq	r4, r0, r5, asr #28
     480:	45525047 	ldrbmi	r5, [r2, #-71]	; 0xffffffb9
     484:	4400314e 	strmi	r3, [r0], #-334	; 0xfffffeb2
     488:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     48c:	435f746c 	cmpmi	pc, #108, 8	; 0x6c000000
     490:	6b636f6c 	blvs	18dc248 <_bss_end+0x18ca558>
     494:	7461525f 	strbtvc	r5, [r1], #-607	; 0xfffffda1
     498:	475f0065 	ldrbmi	r0, [pc, -r5, rrx]
     49c:	41424f4c 	cmpmi	r2, ip, asr #30
     4a0:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
     4a4:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
     4a8:	5047735f 	subpl	r7, r7, pc, asr r3
     4ac:	5f004f49 	svcpl	0x00004f49
     4b0:	314b4e5a 	cmpcc	fp, sl, asr lr
     4b4:	50474333 	subpl	r4, r7, r3, lsr r3
     4b8:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     4bc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     4c0:	38317265 	ldmdacc	r1!, {r0, r2, r5, r6, r9, ip, sp, lr}
     4c4:	5f746547 	svcpl	0x00746547
     4c8:	4c435047 	mcrrmi	0, 4, r5, r3, cr7
     4cc:	6f4c5f52 	svcvs	0x004c5f52
     4d0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     4d4:	6a456e6f 	bvs	115be98 <_bss_end+0x114a1a8>
     4d8:	30536a52 	subscc	r6, r3, r2, asr sl
     4dc:	6547005f 	strbvs	r0, [r7, #-95]	; 0xffffffa1
     4e0:	50475f74 	subpl	r5, r7, r4, ror pc
     4e4:	5f524c43 	svcpl	0x00524c43
     4e8:	61636f4c 	cmnvs	r3, ip, asr #30
     4ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     4f0:	69506d00 	ldmdbvs	r0, {r8, sl, fp, sp, lr}^
     4f4:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
     4f8:	76726573 			; <UNDEFINED> instruction: 0x76726573
     4fc:	6f697461 	svcvs	0x00697461
     500:	575f736e 	ldrbpl	r7, [pc, -lr, ror #6]
     504:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     508:	41504700 	cmpmi	r0, r0, lsl #14
     50c:	304e4552 	subcc	r4, lr, r2, asr r5
     510:	41504700 	cmpmi	r0, r0, lsl #14
     514:	314e4552 	cmpcc	lr, r2, asr r5
     518:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     51c:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xfffff0a1
     520:	00747570 	rsbseq	r7, r4, r0, ror r5
     524:	314e5a5f 	cmpcc	lr, pc, asr sl
     528:	50474333 	subpl	r4, r7, r3, lsr r3
     52c:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     530:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     534:	37317265 	ldrcc	r7, [r1, -r5, ror #4]!
     538:	5f746553 	svcpl	0x00746553
     53c:	4f495047 	svcmi	0x00495047
     540:	6e75465f 	mrcvs	6, 3, r4, cr5, cr15, {2}
     544:	6f697463 	svcvs	0x00697463
     548:	316a456e 	cmncc	sl, lr, ror #10
     54c:	50474e34 	subpl	r4, r7, r4, lsr lr
     550:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
     554:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     558:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     55c:	45485047 	strbmi	r5, [r8, #-71]	; 0xffffffb9
     560:	4700304e 	strmi	r3, [r0, -lr, asr #32]
     564:	4e454850 	mcrmi	8, 2, r4, cr5, cr0, {2}
     568:	6e750031 	mrcvs	0, 3, r0, cr5, cr1, {1}
     56c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     570:	63206465 			; <UNDEFINED> instruction: 0x63206465
     574:	00726168 	rsbseq	r6, r2, r8, ror #2
     578:	5f746547 	svcpl	0x00746547
     57c:	4f495047 	svcmi	0x00495047
     580:	6e75465f 	mrcvs	6, 3, r4, cr5, cr15, {2}
     584:	6f697463 	svcvs	0x00697463
     588:	5047006e 	subpl	r0, r7, lr, rrx
     58c:	505f4f49 	subspl	r4, pc, r9, asr #30
     590:	435f6e69 	cmpmi	pc, #1680	; 0x690
     594:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     598:	6f687300 	svcvs	0x00687300
     59c:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     5a0:	4600746e 	strmi	r7, [r0], -lr, ror #8
     5a4:	5f656572 	svcpl	0x00656572
     5a8:	006e6950 	rsbeq	r6, lr, r0, asr r9
     5ac:	6b6e6162 	blvs	1b98b3c <_bss_end+0x1b86e4c>
     5b0:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     5b4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     5b8:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     5bc:	5f4f4950 	svcpl	0x004f4950
     5c0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     5c4:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
     5c8:	006a4534 	rsbeq	r4, sl, r4, lsr r5
     5cc:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     5d0:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     5d4:	425f6c61 	subsmi	r6, pc, #24832	; 0x6100
     5d8:	00657361 	rsbeq	r7, r5, r1, ror #6
     5dc:	5f746962 	svcpl	0x00746962
     5e0:	00786469 	rsbseq	r6, r8, r9, ror #8
     5e4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     5e8:	745f3233 	ldrbvc	r3, [pc], #-563	; 5f0 <CPSR_IRQ_INHIBIT+0x570>
     5ec:	73655200 	cmnvc	r5, #0, 4
     5f0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
     5f4:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
     5f8:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
     5fc:	5a5f0063 	bpl	17c0790 <_bss_end+0x17aeaa0>
     600:	33314b4e 	teqcc	r1, #79872	; 0x13800
     604:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     608:	61485f4f 	cmpvs	r8, pc, asr #30
     60c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     610:	47383172 			; <UNDEFINED> instruction: 0x47383172
     614:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     618:	56454c50 			; <UNDEFINED> instruction: 0x56454c50
     61c:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     620:	6f697461 	svcvs	0x00697461
     624:	526a456e 	rsbpl	r4, sl, #461373440	; 0x1b800000
     628:	5f30536a 	svcpl	0x0030536a
     62c:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
     630:	5350475f 	cmppl	r0, #24903680	; 0x17c0000
     634:	4c5f5445 	cfldrdmi	mvd5, [pc], {69}	; 0x45
     638:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     63c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     640:	44455047 	strbmi	r5, [r5], #-71	; 0xffffffb9
     644:	47003053 	smlsdmi	r0, r3, r0, r3
     648:	53444550 	movtpl	r4, #17744	; 0x4550
     64c:	50470031 	subpl	r0, r7, r1, lsr r0
     650:	304e4546 	subcc	r4, lr, r6, asr #10
     654:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     658:	00314e45 	eorseq	r4, r1, r5, asr #28
     65c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     660:	552f632f 	strpl	r6, [pc, #-815]!	; 339 <CPSR_IRQ_INHIBIT+0x2b9>
     664:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     668:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     66c:	6f442f61 	svcvs	0x00442f61
     670:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     674:	2f73746e 	svccs	0x0073746e
     678:	6f72655a 	svcvs	0x0072655a
     67c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     680:	6178652f 	cmnvs	r8, pc, lsr #10
     684:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     688:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     68c:	4332492d 	teqmi	r2, #737280	; 0xb4000
     690:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     694:	2f6c656e 	svccs	0x006c656e
     698:	2f637273 	svccs	0x00637273
     69c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     6a0:	2f737265 	svccs	0x00737265
     6a4:	6f697067 	svcvs	0x00697067
     6a8:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
     6ac:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     6b0:	4333314b 	teqmi	r3, #-1073741806	; 0xc0000012
     6b4:	4f495047 	svcmi	0x00495047
     6b8:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     6bc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     6c0:	65473831 	strbvs	r3, [r7, #-2097]	; 0xfffff7cf
     6c4:	50475f74 	subpl	r5, r7, r4, ror pc
     6c8:	5f544553 	svcpl	0x00544553
     6cc:	61636f4c 	cmnvs	r3, ip, asr #30
     6d0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6d4:	6a526a45 	bvs	149aff0 <_bss_end+0x1489300>
     6d8:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
     6dc:	46415047 	strbmi	r5, [r1], -r7, asr #32
     6e0:	00304e45 	eorseq	r4, r0, r5, asr #28
     6e4:	46415047 	strbmi	r5, [r1], -r7, asr #32
     6e8:	00314e45 	eorseq	r4, r1, r5, asr #28
     6ec:	4b4e5a5f 	blmi	1397070 <_bss_end+0x1385380>
     6f0:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     6f4:	5f4f4950 	svcpl	0x004f4950
     6f8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     6fc:	3172656c 	cmncc	r2, ip, ror #10
     700:	74654737 	strbtvc	r4, [r5], #-1847	; 0xfffff8c9
     704:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     708:	75465f4f 	strbvc	r5, [r6, #-3919]	; 0xfffff0b1
     70c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     710:	6a456e6f 	bvs	115c0d4 <_bss_end+0x114a3e4>
     714:	61657200 	cmnvs	r5, r0, lsl #4
     718:	47430064 	strbmi	r0, [r3, -r4, rrx]
     71c:	5f4f4950 	svcpl	0x004f4950
     720:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     724:	0072656c 	rsbseq	r6, r2, ip, ror #10
     728:	70736e55 	rsbsvc	r6, r3, r5, asr lr
     72c:	66696365 	strbtvs	r6, [r9], -r5, ror #6
     730:	00646569 	rsbeq	r6, r4, r9, ror #10
     734:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
     738:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     73c:	49007974 	stmdbmi	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     740:	704f5f73 	subvc	r5, pc, r3, ror pc	; <UNPREDICTABLE>
     744:	64656e65 	strbtvs	r6, [r5], #-3685	; 0xfffff19b
     748:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
     74c:	65445f61 	strbvs	r5, [r4, #-3937]	; 0xfffff09f
     750:	0079616c 	rsbseq	r6, r9, ip, ror #2
     754:	43324943 	teqmi	r2, #1097728	; 0x10c000
     758:	6172545f 	cmnvs	r2, pc, asr r4
     75c:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     760:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     764:	704f6d00 	subvc	r6, pc, r0, lsl #26
     768:	64656e65 	strbtvs	r6, [r5], #-3685	; 0xfffff19b
     76c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     770:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     774:	45324343 	ldrmi	r4, [r2, #-835]!	; 0xfffffcbd
     778:	006a6a6d 	rsbeq	r6, sl, sp, ror #20
     77c:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     780:	43324943 	teqmi	r2, #1097728	; 0x10c000
     784:	67655233 			; <UNDEFINED> instruction: 0x67655233
     788:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
     78c:	42376c61 	eorsmi	r6, r7, #24832	; 0x6100
     790:	525f4353 	subspl	r4, pc, #1275068417	; 0x4c000001
     794:	00456765 	subeq	r6, r5, r5, ror #14
     798:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     79c:	745f3631 	ldrbvc	r3, [pc], #-1585	; 7a4 <CPSR_IRQ_INHIBIT+0x724>
     7a0:	43534200 	cmpmi	r3, #0, 4
     7a4:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
     7a8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     7ac:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     7b0:	57303143 	ldrpl	r3, [r0, -r3, asr #2]!
     7b4:	5f746961 	svcpl	0x00746961
     7b8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     7bc:	00764579 	rsbseq	r4, r6, r9, ror r5
     7c0:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     7c4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     7c8:	6d453443 	cfstrdvs	mvd3, [r5, #-268]	; 0xfffffef4
     7cc:	52006a6a 	andpl	r6, r0, #434176	; 0x6a000
     7d0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     7d4:	6d006576 	cfstr32vs	mvfx6, [r0, #-472]	; 0xfffffe28
     7d8:	505f6e49 	subspl	r6, pc, r9, asr #28
     7dc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     7e0:	00737365 	rsbseq	r7, r3, r5, ror #6
     7e4:	544b4c43 	strbpl	r4, [fp], #-3139	; 0xfffff3bd
     7e8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     7ec:	49433631 	stmdbmi	r3, {r0, r4, r5, r9, sl, ip, sp}^
     7f0:	545f4332 	ldrbpl	r4, [pc], #-818	; 7f8 <CPSR_IRQ_INHIBIT+0x778>
     7f4:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     7f8:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     7fc:	34436e6f 	strbcc	r6, [r3], #-3695	; 0xfffff191
     800:	43007645 	movwmi	r7, #1605	; 0x645
     804:	6b636f6c 	blvs	18dc5bc <_bss_end+0x18ca8cc>
     808:	7669445f 			; <UNDEFINED> instruction: 0x7669445f
     80c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     810:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     814:	45353143 	ldrmi	r3, [r5, #-323]!	; 0xfffffebd
     818:	545f646e 	ldrbpl	r6, [pc], #-1134	; 820 <CPSR_IRQ_INHIBIT+0x7a0>
     81c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     820:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     824:	52456e6f 	subpl	r6, r5, #1776	; 0x6f0
     828:	49433631 	stmdbmi	r3, {r0, r4, r5, r9, sl, ip, sp}^
     82c:	545f4332 	ldrbpl	r4, [pc], #-818	; 834 <CPSR_IRQ_INHIBIT+0x7b4>
     830:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     834:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     838:	00626e6f 	rsbeq	r6, r2, pc, ror #28
     83c:	5f646e45 	svcpl	0x00646e45
     840:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     844:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     848:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     84c:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
     850:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     854:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     858:	5f6e6970 	svcpl	0x006e6970
     85c:	006c6373 	rsbeq	r6, ip, r3, ror r3
     860:	6675426d 	ldrbtvs	r4, [r5], -sp, ror #4
     864:	00726566 	rsbseq	r6, r2, r6, ror #10
     868:	61746144 	cmnvs	r4, r4, asr #2
     86c:	4649465f 			; <UNDEFINED> instruction: 0x4649465f
     870:	5a5f004f 	bpl	17c09b4 <_bss_end+0x17aecc4>
     874:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
     878:	5f433249 	svcpl	0x00433249
     87c:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     880:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     884:	316e6f69 	cmncc	lr, r9, ror #30
     888:	74655331 	strbtvc	r5, [r5], #-817	; 0xfffffccf
     88c:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     890:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     894:	70007445 	andvc	r7, r0, r5, asr #8
     898:	735f6e69 	cmpvc	pc, #1680	; 0x690
     89c:	5f006164 	svcpl	0x00006164
     8a0:	43344e5a 	teqmi	r4, #1440	; 0x5a0
     8a4:	35433249 	strbcc	r3, [r3, #-585]	; 0xfffffdb7
     8a8:	736f6c43 	cmnvc	pc, #17152	; 0x4300
     8ac:	00764565 	rsbseq	r4, r6, r5, ror #10
     8b0:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     8b4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     8b8:	6e655334 	mcrvs	3, 3, r5, cr5, cr4, {1}
     8bc:	50744564 	rsbspl	r4, r4, r4, ror #10
     8c0:	006a634b 	rsbeq	r6, sl, fp, asr #6
     8c4:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     8c8:	43324943 	teqmi	r2, #1097728	; 0x10c000
     8cc:	65423731 	strbvs	r3, [r2, #-1841]	; 0xfffff8cf
     8d0:	5f6e6967 	svcpl	0x006e6967
     8d4:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     8d8:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     8dc:	456e6f69 	strbmi	r6, [lr, #-3945]!	; 0xfffff097
     8e0:	6f630074 	svcvs	0x00630074
     8e4:	74696d6d 	strbtvc	r6, [r9], #-3437	; 0xfffff293
     8e8:	43536d00 	cmpmi	r3, #0, 26
     8ec:	69505f4c 	ldmdbvs	r0, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     8f0:	416d006e 	cmnmi	sp, lr, rrx
     8f4:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
     8f8:	5f007373 	svcpl	0x00007373
     8fc:	344b4e5a 	strbcc	r4, [fp], #-3674	; 0xfffff1a6
     900:	43324943 	teqmi	r2, #1097728	; 0x10c000
     904:	5f734939 	svcpl	0x00734939
     908:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     90c:	76456465 	strbvc	r6, [r5], -r5, ror #8
     910:	67654200 	strbvs	r4, [r5, -r0, lsl #4]!
     914:	545f6e69 	ldrbpl	r6, [pc], #-3689	; 91c <CPSR_IRQ_INHIBIT+0x89c>
     918:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     91c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     920:	53006e6f 	movwpl	r6, #3695	; 0xe6f
     924:	00646e65 	rsbeq	r6, r4, r5, ror #28
     928:	314e5a5f 	cmpcc	lr, pc, asr sl
     92c:	32494336 	subcc	r4, r9, #-671088640	; 0xd8000000
     930:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     934:	61736e61 	cmnvs	r3, r1, ror #28
     938:	6f697463 	svcvs	0x00697463
     93c:	4532436e 	ldrmi	r4, [r2, #-878]!	; 0xfffffc92
     940:	4c6d0076 	stclmi	0, cr0, [sp], #-472	; 0xfffffe28
     944:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     948:	61440068 	cmpvs	r4, r8, rrx
     94c:	4c5f6174 	ldfmie	f6, [pc], {116}	; 0x74
     950:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     954:	65530068 	ldrbvs	r0, [r3, #-104]	; 0xffffff98
     958:	64415f74 	strbvs	r5, [r1], #-3956	; 0xfffff08c
     95c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
     960:	61570073 	cmpvs	r7, r3, ror r0
     964:	525f7469 	subspl	r7, pc, #1761607680	; 0x69000000
     968:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     96c:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
     970:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
     974:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
     978:	5f495f62 	svcpl	0x00495f62
     97c:	43324973 	teqmi	r2, #1884160	; 0x1cc000
     980:	69750031 	ldmdbvs	r5!, {r0, r4, r5}^
     984:	5f38746e 	svcpl	0x0038746e
     988:	32490074 	subcc	r0, r9, #116	; 0x74
     98c:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     990:	61736e61 	cmnvs	r3, r1, ror #28
     994:	6f697463 	svcvs	0x00697463
     998:	614d5f6e 	cmpvs	sp, lr, ror #30
     99c:	69535f78 	ldmdbvs	r3, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     9a0:	6d00657a 	cfstr32vs	mvfx6, [r0, #-488]	; 0xfffffe18
     9a4:	5f435342 	svcpl	0x00435342
     9a8:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     9ac:	6f6c4300 	svcvs	0x006c4300
     9b0:	6d006573 	cfstr32vs	mvfx6, [r0, #-460]	; 0xfffffe34
     9b4:	5f414453 	svcpl	0x00414453
     9b8:	006e6950 	rsbeq	r6, lr, r0, asr r9
     9bc:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     9c0:	552f632f 	strpl	r6, [pc, #-815]!	; 699 <CPSR_IRQ_INHIBIT+0x619>
     9c4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     9c8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     9cc:	6f442f61 	svcvs	0x00442f61
     9d0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     9d4:	2f73746e 	svccs	0x0073746e
     9d8:	6f72655a 	svcvs	0x0072655a
     9dc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     9e0:	6178652f 	cmnvs	r8, pc, lsr #10
     9e4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     9e8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     9ec:	4332492d 	teqmi	r2, #737280	; 0xb4000
     9f0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     9f4:	2f6c656e 	svccs	0x006c656e
     9f8:	2f637273 	svccs	0x00637273
     9fc:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     a00:	2f737265 	svccs	0x00737265
     a04:	2e633269 	cdpcs	2, 6, cr3, cr3, cr9, {3}
     a08:	00707063 	rsbseq	r7, r0, r3, rrx
     a0c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     a10:	6d007375 	stcvs	3, cr7, [r0, #-468]	; 0xfffffe2c
     a14:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     a18:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     a1c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     a20:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     a24:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     a28:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     a2c:	65523743 	ldrbvs	r3, [r2, #-1859]	; 0xfffff8bd
     a30:	76696563 	strbtvc	r6, [r9], -r3, ror #10
     a34:	50744565 	rsbspl	r4, r4, r5, ror #10
     a38:	5f006a63 	svcpl	0x00006a63
     a3c:	43344e5a 	teqmi	r4, #1440	; 0x5a0
     a40:	34433249 	strbcc	r3, [r3], #-585	; 0xfffffdb7
     a44:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
     a48:	76007645 	strvc	r7, [r0], -r5, asr #12
     a4c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     a50:	6e5f6d00 	cdpvs	13, 5, cr6, cr15, cr0, {0}
     a54:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     a58:	61625f72 	smcvs	9714	; 0x25f2
     a5c:	52006573 	andpl	r6, r0, #482344960	; 0x1cc00000
     a60:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     a64:	6d754e5f 	ldclvs	14, cr4, [r5, #-380]!	; 0xfffffe84
     a68:	5f726562 	svcpl	0x00726562
     a6c:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     a70:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     a74:	6f4d4338 	svcvs	0x004d4338
     a78:	6f74696e 	svcvs	0x0074696e
     a7c:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
     a80:	006a6a6a 	rsbeq	r6, sl, sl, ror #20
     a84:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     a88:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     a8c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     a90:	64413331 	strbvs	r3, [r1], #-817	; 0xfffffccf
     a94:	7473756a 	ldrbtvc	r7, [r3], #-1386	; 0xfffffa96
     a98:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
     a9c:	45726f73 	ldrbmi	r6, [r2, #-3955]!	; 0xfffff08d
     aa0:	74690076 	strbtvc	r0, [r9], #-118	; 0xffffff8a
     aa4:	5200616f 	andpl	r6, r0, #-1073741797	; 0xc000001b
     aa8:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     aac:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
     ab0:	00726f73 	rsbseq	r6, r2, r3, ror pc
     ab4:	756a6441 	strbvc	r6, [sl, #-1089]!	; 0xfffffbbf
     ab8:	435f7473 	cmpmi	pc, #1929379840	; 0x73000000
     abc:	6f737275 	svcvs	0x00737275
     ac0:	6d2f0072 	stcvs	0, cr0, [pc, #-456]!	; 900 <CPSR_IRQ_INHIBIT+0x880>
     ac4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     ac8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     acc:	4b2f7372 	blmi	bdd89c <_bss_end+0xbcbbac>
     ad0:	2f616275 	svccs	0x00616275
     ad4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     ad8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     adc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     ae0:	614d6f72 	hvcvs	55026	; 0xd6f2
     ae4:	652f6574 	strvs	r6, [pc, #-1396]!	; 578 <CPSR_IRQ_INHIBIT+0x4f8>
     ae8:	706d6178 	rsbvc	r6, sp, r8, ror r1
     aec:	2f73656c 	svccs	0x0073656c
     af0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     af4:	6b2f4332 	blvs	bd17c4 <_bss_end+0xbbfad4>
     af8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     afc:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     b00:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     b04:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     b08:	6f6d2f73 	svcvs	0x006d2f73
     b0c:	6f74696e 	svcvs	0x0074696e
     b10:	70632e72 	rsbvc	r2, r3, r2, ror lr
     b14:	4e4e0070 	mcrmi	0, 2, r0, cr14, cr0, {3}
     b18:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     b1c:	61425f72 	hvcvs	9714	; 0x25f2
     b20:	54006573 	strpl	r6, [r0], #-1395	; 0xfffffa8d
     b24:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
     b28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     b2c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     b30:	6f4d4338 	svcvs	0x004d4338
     b34:	6f74696e 	svcvs	0x0074696e
     b38:	52373172 	eorspl	r3, r7, #-2147483620	; 0x8000001c
     b3c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     b40:	6d754e5f 	ldclvs	14, cr4, [r5, #-380]!	; 0xfffffe84
     b44:	5f726562 	svcpl	0x00726562
     b48:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     b4c:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
     b50:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
     b54:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b58:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
     b5c:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
     b60:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
     b64:	5f495f62 	svcpl	0x00495f62
     b68:	6e6f4d73 	mcrvs	13, 3, r4, cr15, cr3, {3}
     b6c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b70:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     b74:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b78:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     b7c:	64615f65 	strbtvs	r5, [r1], #-3941	; 0xfffff09b
     b80:	5f007264 	svcpl	0x00007264
     b84:	43384e5a 	teqmi	r8, #1440	; 0x5a0
     b88:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     b8c:	35726f74 	ldrbcc	r6, [r2, #-3956]!	; 0xfffff08c
     b90:	61656c43 	cmnvs	r5, r3, asr #24
     b94:	00764572 	rsbseq	r4, r6, r2, ror r5
     b98:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     b9c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     ba0:	65706f00 	ldrbvs	r6, [r0, #-3840]!	; 0xfffff100
     ba4:	6f746172 	svcvs	0x00746172
     ba8:	003c3c72 	eorseq	r3, ip, r2, ror ip
     bac:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     bb0:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     bb4:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     bb8:	5045736c 	subpl	r7, r5, ip, ror #6
     bbc:	5f00634b 	svcpl	0x0000634b
     bc0:	43384e5a 	teqmi	r8, #1440	; 0x5a0
     bc4:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     bc8:	34726f74 	ldrbtcc	r6, [r2], #-3956	; 0xfffff08c
     bcc:	616f7469 	cmnvs	pc, r9, ror #8
     bd0:	63506a45 	cmpvs	r0, #282624	; 0x45000
     bd4:	5f6d006a 	svcpl	0x006d006a
     bd8:	67696568 	strbvs	r6, [r9, -r8, ror #10]!
     bdc:	6d007468 	cfstrsvs	mvf7, [r0, #-416]	; 0xfffffe60
     be0:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
     be4:	00726f73 	rsbseq	r6, r2, r3, ror pc
     be8:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
     bec:	766e6f43 	strbtvc	r6, [lr], -r3, asr #30
     bf0:	00727241 	rsbseq	r7, r2, r1, asr #4
     bf4:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     bf8:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     bfc:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     c00:	6245736c 	subvs	r7, r5, #108, 6	; 0xb0000001
     c04:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c08:	6f4d4338 	svcvs	0x004d4338
     c0c:	6f74696e 	svcvs	0x0074696e
     c10:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     c14:	5f6d0063 	svcpl	0x006d0063
     c18:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     c1c:	5a5f0068 	bpl	17c0dc4 <_bss_end+0x17af0d4>
     c20:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c24:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c28:	5336726f 	teqpl	r6, #-268435450	; 0xf0000006
     c2c:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; aa8 <CPSR_IRQ_INHIBIT+0xa28>
     c30:	0076456c 	rsbseq	r4, r6, ip, ror #10
     c34:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     c38:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     c3c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     c40:	6a45736c 	bvs	115d9f8 <_bss_end+0x114bd08>
     c44:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c48:	6f4d4338 	svcvs	0x004d4338
     c4c:	6f74696e 	svcvs	0x0074696e
     c50:	52323172 	eorspl	r3, r2, #-2147483620	; 0x8000001c
     c54:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     c58:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
     c5c:	45726f73 	ldrbmi	r6, [r2, #-3955]!	; 0xfffff08d
     c60:	5a5f0076 	bpl	17c0e40 <_bss_end+0x17af150>
     c64:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c68:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c6c:	3443726f 	strbcc	r7, [r3], #-623	; 0xfffffd91
     c70:	6a6a6a45 	bvs	1a9b58c <_bss_end+0x1a8989c>
     c74:	46454400 	strbmi	r4, [r5], -r0, lsl #8
     c78:	544c5541 	strbpl	r5, [ip], #-1345	; 0xfffffabf
     c7c:	4d554e5f 	ldclmi	14, cr4, [r5, #-380]	; 0xfffffe84
     c80:	5f524542 	svcpl	0x00524542
     c84:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
     c88:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c8c:	6f4d4338 	svcvs	0x004d4338
     c90:	6f74696e 	svcvs	0x0074696e
     c94:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     c98:	315f534e 	cmpcc	pc, lr, asr #6
     c9c:	754e4e32 	strbvc	r4, [lr, #-3634]	; 0xfffff1ce
     ca0:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     ca4:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     ca8:	6f004565 	svcvs	0x00004565
     cac:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
     cb0:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
     cb4:	00747570 	rsbseq	r7, r4, r0, ror r5
     cb8:	75625f73 	strbvc	r5, [r2, #-3955]!	; 0xfffff08d
     cbc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     cc0:	46554200 	ldrbmi	r4, [r5], -r0, lsl #4
     cc4:	5f524546 	svcpl	0x00524546
     cc8:	455a4953 	ldrbmi	r4, [sl, #-2387]	; 0xfffff6ad
     ccc:	65486d00 	strbvs	r6, [r8, #-3328]	; 0xfffff300
     cd0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     cd4:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
     cd8:	74535f61 	ldrbvc	r5, [r3], #-3937	; 0xfffff09f
     cdc:	00747261 	rsbseq	r7, r4, r1, ror #4
     ce0:	314e5a5f 	cmpcc	lr, pc, asr sl
     ce4:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     ce8:	616c7073 	smcvs	50947	; 0xc703
     cec:	53535f79 	cmppl	r3, #484	; 0x1e4
     cf0:	30333144 	eorscc	r3, r3, r4, asr #2
     cf4:	6c463436 	cfstrdvs	mvd3, [r6], {54}	; 0x36
     cf8:	76457069 	strbvc	r7, [r5], -r9, rrx
     cfc:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
     d00:	6f437261 	svcvs	0x00437261
     d04:	00726f6c 	rsbseq	r6, r2, ip, ror #30
     d08:	76657270 			; <UNDEFINED> instruction: 0x76657270
     d0c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     d10:	4b433032 	blmi	10ccde0 <_bss_end+0x10bb0f0>
     d14:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     d18:	65485f6c 	strbvs	r5, [r8, #-3948]	; 0xfffff094
     d1c:	4d5f7061 	ldclmi	0, cr7, [pc, #-388]	; ba0 <CPSR_IRQ_INHIBIT+0xb20>
     d20:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     d24:	35317265 	ldrcc	r7, [r1, #-613]!	; 0xfffffd9b
     d28:	6f6c6c41 	svcvs	0x006c6c41
     d2c:	654e5f63 	strbvs	r5, [lr, #-3939]	; 0xfffff09d
     d30:	505f7478 	subspl	r7, pc, r8, ror r4	; <UNPREDICTABLE>
     d34:	45656761 	strbmi	r6, [r5, #-1889]!	; 0xfffff89f
     d38:	6d2f0076 	stcvs	0, cr0, [pc, #-472]!	; b68 <CPSR_IRQ_INHIBIT+0xae8>
     d3c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     d40:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     d44:	4b2f7372 	blmi	bddb14 <_bss_end+0xbcbe24>
     d48:	2f616275 	svccs	0x00616275
     d4c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     d50:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     d54:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     d58:	614d6f72 	hvcvs	55026	; 0xd6f2
     d5c:	652f6574 	strvs	r6, [pc, #-1396]!	; 7f0 <CPSR_IRQ_INHIBIT+0x770>
     d60:	706d6178 	rsbvc	r6, sp, r8, ror r1
     d64:	2f73656c 	svccs	0x0073656c
     d68:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     d6c:	6b2f4332 	blvs	bd1a3c <_bss_end+0xbbfd4c>
     d70:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     d74:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     d78:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     d7c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     d80:	6c6f2f73 	stclvs	15, cr2, [pc], #-460	; bbc <CPSR_IRQ_INHIBIT+0xb3c>
     d84:	735f6465 	cmpvc	pc, #1694498816	; 0x65000000
     d88:	33316473 	teqcc	r1, #1929379840	; 0x73000000
     d8c:	632e3630 			; <UNDEFINED> instruction: 0x632e3630
     d90:	53007070 	movwpl	r7, #112	; 0x70
     d94:	4c5f7465 	cfldrdmi	mvd7, [pc], {101}	; 0x65
     d98:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
     d9c:	6c6f435f 	stclvs	3, cr4, [pc], #-380	; c28 <CPSR_IRQ_INHIBIT+0xba8>
     da0:	006e6d75 	rsbeq	r6, lr, r5, ror sp
     da4:	314e5a5f 	cmpcc	lr, pc, asr sl
     da8:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     dac:	616c7073 	smcvs	50947	; 0xc703
     db0:	53535f79 	cmppl	r3, #484	; 0x1e4
     db4:	30333144 	eorscc	r3, r3, r4, asr #2
     db8:	50343236 	eorspl	r3, r4, r6, lsr r2
     dbc:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
     dc0:	455f7373 	ldrbmi	r7, [pc, #-883]	; a55 <CPSR_IRQ_INHIBIT+0x9d5>
     dc4:	72657478 	rsbvc	r7, r5, #120, 8	; 0x78000000
     dc8:	5f6c616e 	svcpl	0x006c616e
     dcc:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
     dd0:	45646e61 	strbmi	r6, [r4, #-3681]!	; 0xfffff19f
     dd4:	6a634b50 	bvs	18d3b1c <_bss_end+0x18c1e2c>
     dd8:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
     ddc:	36303331 			; <UNDEFINED> instruction: 0x36303331
     de0:	646d435f 	strbtvs	r4, [sp], #-863	; 0xfffffca1
     de4:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
     de8:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
     dec:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
     df0:	5f495f62 	svcpl	0x00495f62
     df4:	73694473 	cmnvc	r9, #1929379840	; 0x73000000
     df8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     dfc:	4453535f 	ldrbmi	r5, [r3], #-863	; 0xfffffca1
     e00:	36303331 			; <UNDEFINED> instruction: 0x36303331
     e04:	78656e00 	stmdavc	r5!, {r9, sl, fp, sp, lr}^
     e08:	4b430074 	blmi	10c0fe0 <_bss_end+0x10af2f0>
     e0c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     e10:	65485f6c 	strbvs	r5, [r8, #-3948]	; 0xfffff094
     e14:	4d5f7061 	ldclmi	0, cr7, [pc, #-388]	; c98 <CPSR_IRQ_INHIBIT+0xc18>
     e18:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     e1c:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
     e20:	70736944 	rsbsvc	r6, r3, r4, asr #18
     e24:	5f79616c 	svcpl	0x0079616c
     e28:	6b636150 	blvs	18d9370 <_bss_end+0x18c7680>
     e2c:	485f7465 	ldmdami	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     e30:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
     e34:	6f480072 	svcvs	0x00480072
     e38:	6f7a6972 	svcvs	0x007a6972
     e3c:	6c61746e 	cfstrdvs	mvd7, [r1], #-440	; 0xfffffe48
     e40:	7263535f 	rsbvc	r5, r3, #2080374785	; 0x7c000001
     e44:	5f6c6c6f 	svcpl	0x006c6c6f
     e48:	5f747256 	svcpl	0x00747256
     e4c:	68676952 	stmdavs	r7!, {r1, r4, r6, r8, fp, sp, lr}^
     e50:	69730074 	ldmdbvs	r3!, {r2, r4, r5, r6}^
     e54:	6d00657a 	cfstr32vs	mvfx6, [r0, #-488]	; 0xfffffe18
     e58:	74646957 	strbtvc	r6, [r4], #-2391	; 0xfffff6a9
     e5c:	654d0068 	strbvs	r0, [sp, #-104]	; 0xffffff98
     e60:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     e64:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     e68:	6f4d5f72 	svcvs	0x004d5f72
     e6c:	66006564 	strvs	r6, [r0], -r4, ror #10
     e70:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
     e74:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     e78:	4336314b 	teqmi	r6, #-1073741806	; 0xc0000012
     e7c:	70736944 	rsbsvc	r6, r3, r4, asr #18
     e80:	5f79616c 	svcpl	0x0079616c
     e84:	31445353 	cmpcc	r4, r3, asr r3
     e88:	39363033 	ldmdbcc	r6!, {r0, r1, r4, r5, ip, sp}
     e8c:	4f5f7349 	svcmi	0x005f7349
     e90:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
     e94:	00764564 	rsbseq	r4, r6, r4, ror #10
     e98:	6c645a5f 			; <UNDEFINED> instruction: 0x6c645a5f
     e9c:	006a7650 	rsbeq	r7, sl, r0, asr r6
     ea0:	696c6676 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r9, sl, sp, lr}^
     ea4:	73690070 	cmnvc	r9, #112	; 0x70
     ea8:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
     eac:	65530065 	ldrbvs	r0, [r3, #-101]	; 0xffffff9b
     eb0:	6f435f74 	svcvs	0x00435f74
     eb4:	69505f6d 	ldmdbvs	r0, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     eb8:	4400736e 	strmi	r7, [r0], #-878	; 0xfffffc92
     ebc:	74636165 	strbtvc	r6, [r3], #-357	; 0xfffffe9b
     ec0:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
     ec4:	63535f65 	cmpvs	r3, #404	; 0x194
     ec8:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
     ecc:	69445400 	stmdbvs	r4, {sl, ip, lr}^
     ed0:	616c7073 	smcvs	50947	; 0xc703
     ed4:	69505f79 	ldmdbvs	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     ed8:	736c6578 	cmnvc	ip, #120, 10	; 0x1e000000
     edc:	5f6f545f 	svcpl	0x006f545f
     ee0:	74636552 	strbtvc	r6, [r3], #-1362	; 0xfffffaae
     ee4:	6c6c4100 	stfvse	f4, [ip], #-0
     ee8:	5300636f 	movwpl	r6, #879	; 0x36f
     eec:	445f7465 	ldrbmi	r7, [pc], #-1125	; ef4 <CPSR_IRQ_INHIBIT+0xe74>
     ef0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     ef4:	435f7961 	cmpmi	pc, #1589248	; 0x184000
     ef8:	6b636f6c 	blvs	18dccb0 <_bss_end+0x18cafc0>
     efc:	7669445f 			; <UNDEFINED> instruction: 0x7669445f
     f00:	7461525f 	strbtvc	r5, [r1], #-607	; 0xfffffda1
     f04:	53006f69 	movwpl	r6, #3945	; 0xf69
     f08:	505f7465 	subspl	r7, pc, r5, ror #8
     f0c:	68636572 	stmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     f10:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
     f14:	7265505f 	rsbvc	r5, r5, #95	; 0x5f
     f18:	00646f69 	rsbeq	r6, r4, r9, ror #30
     f1c:	5f746553 	svcpl	0x00746553
     f20:	4d4f4356 	stclmi	3, cr4, [pc, #-344]	; dd0 <CPSR_IRQ_INHIBIT+0xd50>
     f24:	7465445f 	strbtvc	r4, [r5], #-1119	; 0xfffffba1
     f28:	00746365 	rsbseq	r6, r4, r5, ror #6
     f2c:	314e5a5f 	cmpcc	lr, pc, asr sl
     f30:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
     f34:	616c7073 	smcvs	50947	; 0xc703
     f38:	53535f79 	cmppl	r3, #484	; 0x1e4
     f3c:	30333144 	eorscc	r3, r3, r4, asr #2
     f40:	704f3436 	subvc	r3, pc, r6, lsr r4	; <UNPREDICTABLE>
     f44:	69456e65 	stmdbvs	r5, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     f48:	6c460069 	mcrrvs	0, 6, r0, r6, cr9
     f4c:	43007069 	movwmi	r7, #105	; 0x69
     f50:	616d6d6f 	cmnvs	sp, pc, ror #26
     f54:	535f646e 	cmppl	pc, #1845493760	; 0x6e000000
     f58:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     f5c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     f60:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
     f64:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     f68:	535f7961 	cmppl	pc, #1589248	; 0x184000
     f6c:	33314453 	teqcc	r1, #1392508928	; 0x53000000
     f70:	32433630 	subcc	r3, r3, #48, 12	; 0x3000000
     f74:	43345245 	teqmi	r4, #1342177284	; 0x50000004
     f78:	00433249 	subeq	r3, r3, r9, asr #4
     f7c:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
     f80:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
     f84:	3c203c3c 	stccc	12, cr3, [r0], #-240	; 0xffffff10
     f88:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     f8c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     f90:	61686320 	cmnvs	r8, r0, lsr #6
     f94:	6f003e72 	svcvs	0x00003e72
     f98:	61726570 	cmnvs	r2, r0, ror r5
     f9c:	20726f74 	rsbscs	r6, r2, r4, ror pc
     fa0:	656c6564 	strbvs	r6, [ip, #-1380]!	; 0xfffffa9c
     fa4:	44006574 	strmi	r6, [r0], #-1396	; 0xfffffa8c
     fa8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     fac:	4f5f7961 	svcmi	0x005f7961
     fb0:	6553006e 	ldrbvs	r0, [r3, #-110]	; 0xffffff92
     fb4:	6f435f74 	svcvs	0x00435f74
     fb8:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
     fbc:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     fc0:	65530072 	ldrbvs	r0, [r3, #-114]	; 0xffffff8e
     fc4:	69505f74 	ldmdbvs	r0, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     fc8:	006c6578 	rsbeq	r6, ip, r8, ror r5
     fcc:	314e5a5f 	cmpcc	lr, pc, asr sl
     fd0:	32494336 	subcc	r4, r9, #-671088640	; 0xd8000000
     fd4:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     fd8:	61736e61 	cmnvs	r3, r1, ror #28
     fdc:	6f697463 	svcvs	0x00697463
     fe0:	49736c6e 	ldmdbmi	r3!, {r1, r2, r3, r5, r6, sl, fp, sp, lr}^
     fe4:	52454568 	subpl	r4, r5, #104, 10	; 0x1a000000
     fe8:	4b525f53 	blmi	1498d3c <_bss_end+0x148704c>
     fec:	5f005f54 	svcpl	0x00005f54
     ff0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
     ff4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     ff8:	6172545f 	cmnvs	r2, pc, asr r4
     ffc:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
    1000:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1004:	6949736c 	stmdbvs	r9, {r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1008:	53524545 	cmppl	r2, #289406976	; 0x11400000
    100c:	544b525f 	strbpl	r5, [fp], #-607	; 0xfffffda1
    1010:	6164005f 	qdsubvs	r0, pc, r4	; <UNPREDICTABLE>
    1014:	43006174 	movwmi	r6, #372	; 0x174
    1018:	70736944 	rsbsvc	r6, r3, r4, asr #18
    101c:	5f79616c 	svcpl	0x0079616c
    1020:	31445353 	cmpcc	r4, r3, asr r3
    1024:	00363033 	eorseq	r3, r6, r3, lsr r0
    1028:	70736944 	rsbsvc	r6, r3, r4, asr #18
    102c:	5f79616c 	svcpl	0x0079616c
    1030:	5f6c6c41 	svcpl	0x006c6c41
    1034:	6d006e4f 	stcvs	14, cr6, [r0, #-316]	; 0xfffffec4
    1038:	00433249 	subeq	r3, r3, r9, asr #4
    103c:	77617244 	strbvc	r7, [r1, -r4, asr #4]!
    1040:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    1044:	415f6c65 	cmpmi	pc, r5, ror #24
    1048:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    104c:	5f6f545f 	svcpl	0x006f545f
    1050:	74636552 	strbtvc	r6, [r3], #-1362	; 0xfffffaae
    1054:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1058:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
    105c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1060:	535f7961 	cmppl	pc, #1589248	; 0x184000
    1064:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1068:	43353630 	teqmi	r5, #48, 12	; 0x3000000
    106c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1070:	53006245 	movwpl	r6, #581	; 0x245
    1074:	565f7465 	ldrbpl	r7, [pc], -r5, ror #8
    1078:	535f7472 	cmppl	pc, #1912602624	; 0x72000000
    107c:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; ef8 <CPSR_IRQ_INHIBIT+0xe78>
    1080:	72415f6c 	subvc	r5, r1, #108, 30	; 0x1b0
    1084:	53006165 	movwpl	r6, #357	; 0x165
    1088:	505f7465 	subspl	r7, pc, r5, ror #8
    108c:	5f656761 	svcpl	0x00656761
    1090:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1094:	69445400 	stmdbvs	r4, {sl, ip, lr}^
    1098:	616c7073 	smcvs	50947	; 0xc703
    109c:	69505f79 	ldmdbvs	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    10a0:	5f6c6578 	svcpl	0x006c6578
    10a4:	63657053 	cmnvs	r5, #83	; 0x53
    10a8:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    10ac:	7070555f 	rsbsvc	r5, r0, pc, asr r5
    10b0:	435f7265 	cmpmi	pc, #1342177286	; 0x50000006
    10b4:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	; 0xfffffe44
    10b8:	7250006e 	subsvc	r0, r0, #110	; 0x6e
    10bc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    10c0:	78455f73 	stmdavc	r5, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    10c4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    10c8:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    10cc:	616d6d6f 	cmnvs	sp, pc, ror #26
    10d0:	5f00646e 	svcpl	0x0000646e
    10d4:	30324e5a 	eorscc	r4, r2, sl, asr lr
    10d8:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    10dc:	5f6c656e 	svcpl	0x006c656e
    10e0:	70616548 	rsbvc	r6, r1, r8, asr #10
    10e4:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    10e8:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    10ec:	65724634 	ldrbvs	r4, [r2, #-1588]!	; 0xfffff9cc
    10f0:	76504565 	ldrbvc	r4, [r0], -r5, ror #10
    10f4:	6d6f4300 	stclvs	3, cr4, [pc, #-0]	; 10fc <CPSR_IRQ_INHIBIT+0x107c>
    10f8:	6163535f 	cmnvs	r3, pc, asr r3
    10fc:	69445f6e 	stmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1100:	65445f72 	strbvs	r5, [r4, #-3954]	; 0xfffff08e
    1104:	706f0063 	rsbvc	r0, pc, r3, rrx
    1108:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    110c:	3c3c726f 	lfmcc	f7, 4, [ip], #-444	; 0xfffffe44
    1110:	6e693c20 	cdpvs	12, 6, cr3, cr9, cr0, {1}
    1114:	54003e74 	strpl	r3, [r0], #-3700	; 0xfffff18c
    1118:	70736944 	rsbsvc	r6, r3, r4, asr #18
    111c:	5f79616c 	svcpl	0x0079616c
    1120:	61656c43 	cmnvs	r5, r3, asr #24
    1124:	61505f72 	cmpvs	r0, r2, ror pc
    1128:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
    112c:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    1130:	6c754d5f 	ldclvs	13, cr4, [r5], #-380	; 0xfffffe84
    1134:	6c706974 			; <UNDEFINED> instruction: 0x6c706974
    1138:	525f7865 	subspl	r7, pc, #6619136	; 0x650000
    113c:	6f697461 	svcvs	0x00697461
    1140:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
    1144:	68577261 	ldmdavs	r7, {r0, r5, r6, r9, ip, sp, lr}^
    1148:	00657469 	rsbeq	r7, r5, r9, ror #8
    114c:	50776f6c 	rsbspl	r6, r7, ip, ror #30
    1150:	00747261 	rsbseq	r7, r4, r1, ror #4
    1154:	5f746553 	svcpl	0x00746553
    1158:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    115c:	694c5f74 	stmdbvs	ip, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1160:	4400656e 	strmi	r6, [r0], #-1390	; 0xfffffa92
    1164:	5f776172 	svcpl	0x00776172
    1168:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
    116c:	72415f6c 	subvc	r5, r1, #108, 30	; 0x1b0
    1170:	00796172 	rsbseq	r6, r9, r2, ror r1
    1174:	53746b50 	cmnpl	r4, #80, 22	; 0x14000
    1178:	00657a69 	rsbeq	r7, r5, r9, ror #20
    117c:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1180:	5f79616c 	svcpl	0x0079616c
    1184:	5f6c6c41 	svcpl	0x006c6c41
    1188:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    118c:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    1190:	44540065 	ldrbmi	r0, [r4], #-101	; 0xffffff9b
    1194:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1198:	445f7961 	ldrbmi	r7, [pc], #-2401	; 11a0 <CPSR_IRQ_INHIBIT+0x1120>
    119c:	5f776172 	svcpl	0x00776172
    11a0:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
    11a4:	72415f6c 	subvc	r5, r1, #108, 30	; 0x1b0
    11a8:	5f796172 	svcpl	0x00796172
    11ac:	6b636150 	blvs	18d96f4 <_bss_end+0x18c7a04>
    11b0:	6d007465 	cfstrsvs	mvf7, [r0, #-404]	; 0xfffffe6c
    11b4:	64497861 	strbvs	r7, [r9], #-2145	; 0xfffff79f
    11b8:	5a5f0078 	bpl	17c13a0 <_bss_end+0x17af6b0>
    11bc:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    11c0:	6e72654b 	cdpvs	5, 7, cr6, cr2, cr11, {2}
    11c4:	485f6c65 	ldmdami	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    11c8:	5f706165 	svcpl	0x00706165
    11cc:	616e614d 	cmnvs	lr, sp, asr #2
    11d0:	35726567 	ldrbcc	r6, [r2, #-1383]!	; 0xfffffa99
    11d4:	6f6c6c41 	svcvs	0x006c6c41
    11d8:	006a4563 	rsbeq	r4, sl, r3, ror #10
    11dc:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    11e0:	505f6567 	subspl	r6, pc, r7, ror #10
    11e4:	00706d75 	rsbseq	r6, r0, r5, ror sp
    11e8:	6d726f4e 	ldclvs	15, cr6, [r2, #-312]!	; 0xfffffec8
    11ec:	445f6c61 	ldrbmi	r6, [pc], #-3169	; 11f4 <CPSR_IRQ_INHIBIT+0x1174>
    11f0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    11f4:	5f007961 	svcpl	0x00007961
    11f8:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    11fc:	73694443 	cmnvc	r9, #1124073472	; 0x43000000
    1200:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1204:	4453535f 	ldrbmi	r5, [r3], #-863	; 0xfffffca1
    1208:	36303331 			; <UNDEFINED> instruction: 0x36303331
    120c:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    1210:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
    1214:	6f480043 	svcvs	0x00480043
    1218:	6f7a6972 	svcvs	0x007a6972
    121c:	6c61746e 	cfstrdvs	mvd7, [r1], #-440	; 0xfffffe48
    1220:	7263535f 	rsbvc	r5, r3, #2080374785	; 0x7c000001
    1224:	5f6c6c6f 	svcpl	0x006c6c6f
    1228:	68676952 	stmdavs	r7!, {r1, r4, r6, r8, fp, sp, lr}^
    122c:	65530074 	ldrbvs	r0, [r3, #-116]	; 0xffffff8c
    1230:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1234:	616c7073 	smcvs	50947	; 0xc703
    1238:	664f5f79 			; <UNDEFINED> instruction: 0x664f5f79
    123c:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    1240:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
    1244:	6f435f64 	svcvs	0x00435f64
    1248:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
    124c:	5a5f0064 	bpl	17c13e4 <_bss_end+0x17af6f4>
    1250:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    1254:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1258:	5f79616c 	svcpl	0x0079616c
    125c:	31445353 	cmpcc	r4, r3, asr r3
    1260:	39363033 	ldmdbcc	r6!, {r0, r1, r4, r5, ip, sp}
    1264:	5f746553 	svcpl	0x00746553
    1268:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
    126c:	6a6a456c 	bvs	1a92824 <_bss_end+0x1a80b34>
    1270:	6e490062 	cdpvs	0, 4, cr0, cr9, cr2, {3}
    1274:	74726576 	ldrbtvc	r6, [r2], #-1398	; 0xfffffa8a
    1278:	445f6465 	ldrbmi	r6, [pc], #-1125	; 1280 <CPSR_IRQ_INHIBIT+0x1200>
    127c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1280:	53007961 	movwpl	r7, #2401	; 0x961
    1284:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1288:	535f3630 	cmppl	pc, #48, 12	; 0x3000000
    128c:	6576616c 	ldrbvs	r6, [r6, #-364]!	; 0xfffffe94
    1290:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
    1294:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1298:	6e656c00 	cdpvs	12, 6, cr6, cr5, cr0, {0}
    129c:	00687467 	rsbeq	r7, r8, r7, ror #8
    12a0:	5f6d6f43 	svcpl	0x006d6f43
    12a4:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
    12a8:	7269445f 	rsbvc	r4, r9, #1593835520	; 0x5f000000
    12ac:	636e495f 	cmnvs	lr, #1556480	; 0x17c000
    12b0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    12b4:	49433631 	stmdbmi	r3, {r0, r4, r5, r9, sl, ip, sp}^
    12b8:	545f4332 	ldrbpl	r4, [pc], #-818	; 12c0 <CPSR_IRQ_INHIBIT+0x1240>
    12bc:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    12c0:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    12c4:	736c6e6f 	cmnvc	ip, #1776	; 0x6f0
    12c8:	53313149 	teqpl	r1, #1073741842	; 0x40000012
    12cc:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    12d0:	435f3630 	cmpmi	pc, #48, 12	; 0x3000000
    12d4:	4545646d 	strbmi	r6, [r5, #-1133]	; 0xfffffb93
    12d8:	525f5352 	subspl	r5, pc, #1207959553	; 0x48000001
    12dc:	005f544b 	subseq	r5, pc, fp, asr #8
    12e0:	5f746553 	svcpl	0x00746553
    12e4:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    12e8:	5f746e65 	svcpl	0x00746e65
    12ec:	616d6552 	cmnvs	sp, r2, asr r5
    12f0:	6c630070 	stclvs	0, cr0, [r3], #-448	; 0xfffffe40
    12f4:	53726165 	cmnpl	r2, #1073741849	; 0x40000019
    12f8:	44007465 	strmi	r7, [r0], #-1125	; 0xfffffb9b
    12fc:	5f617461 	svcpl	0x00617461
    1300:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    1304:	65756e69 	ldrbvs	r6, [r5, #-3689]!	; 0xfffff197
    1308:	69444e00 	stmdbvs	r4, {r9, sl, fp, lr}^
    130c:	616c7073 	smcvs	50947	; 0xc703
    1310:	6f435f79 	svcvs	0x00435f79
    1314:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
    1318:	69440064 	stmdbvs	r4, {r2, r5, r6}^
    131c:	616c7073 	smcvs	50947	; 0xc703
    1320:	664f5f79 			; <UNDEFINED> instruction: 0x664f5f79
    1324:	5a5f0066 	bpl	17c14c4 <_bss_end+0x17af7d4>
    1328:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    132c:	6e72654b 	cdpvs	5, 7, cr6, cr2, cr11, {2}
    1330:	485f6c65 	ldmdami	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1334:	5f706165 	svcpl	0x00706165
    1338:	616e614d 	cmnvs	lr, sp, asr #2
    133c:	43726567 	cmnmi	r2, #432013312	; 0x19c00000
    1340:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1344:	7269466d 	rsbvc	r4, r9, #114294784	; 0x6d00000
    1348:	5f007473 	svcpl	0x00007473
    134c:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    1350:	73694443 	cmnvc	r9, #1124073472	; 0x43000000
    1354:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1358:	4453535f 	ldrbmi	r5, [r3], #-863	; 0xfffffca1
    135c:	36303331 			; <UNDEFINED> instruction: 0x36303331
    1360:	65533231 	ldrbvs	r3, [r3, #-561]	; 0xfffffdcf
    1364:	435f646e 	cmpmi	pc, #1845493760	; 0x6e000000
    1368:	616d6d6f 	cmnvs	sp, pc, ror #26
    136c:	3145646e 	cmpcc	r5, lr, ror #8
    1370:	44535331 	ldrbmi	r5, [r3], #-817	; 0xfffffccf
    1374:	36303331 			; <UNDEFINED> instruction: 0x36303331
    1378:	646d435f 	strbtvs	r4, [sp], #-863	; 0xfffffca1
    137c:	65680068 	strbvs	r0, [r8, #-104]!	; 0xffffff98
    1380:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
    1384:	6c6c4100 	stfvse	f4, [ip], #-0
    1388:	4e5f636f 	cdpmi	3, 5, cr6, cr15, cr15, {3}
    138c:	5f747865 	svcpl	0x00747865
    1390:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    1394:	726f4800 	rsbvc	r4, pc, #0, 16
    1398:	6e6f7a69 	vnmulvs.f32	s15, s30, s19
    139c:	5f6c6174 	svcpl	0x006c6174
    13a0:	6f726353 	svcvs	0x00726353
    13a4:	4c5f6c6c 	mrrcmi	12, 6, r6, pc, cr12	; <UNPREDICTABLE>
    13a8:	00746665 	rsbseq	r6, r4, r5, ror #12
    13ac:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    13b0:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    13b4:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    13b8:	73617274 	cmnvc	r1, #116, 4	; 0x40000007
    13bc:	4b540074 	blmi	1501594 <_bss_end+0x14ef8a4>
    13c0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    13c4:	65485f6c 	strbvs	r5, [r8, #-3948]	; 0xfffff094
    13c8:	435f7061 	cmpmi	pc, #97	; 0x61
    13cc:	6b6e7568 	blvs	1b9e974 <_bss_end+0x1b8cc84>
    13d0:	6165485f 	cmnvs	r5, pc, asr r8
    13d4:	00726564 	rsbseq	r6, r2, r4, ror #10
    13d8:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    13dc:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    13e0:	7263535f 	rsbvc	r5, r3, #2080374785	; 0x7c000001
    13e4:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
    13e8:	69726f48 	ldmdbvs	r2!, {r3, r6, r8, r9, sl, fp, sp, lr}^
    13ec:	746e6f7a 	strbtvc	r6, [lr], #-3962	; 0xfffff086
    13f0:	535f6c61 	cmppl	pc, #24832	; 0x6100
    13f4:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; 1270 <CPSR_IRQ_INHIBIT+0x11f0>
    13f8:	72565f6c 	subsvc	r5, r6, #108, 30	; 0x1b0
    13fc:	654c5f74 	strbvs	r5, [ip, #-3956]	; 0xfffff08c
    1400:	6f007466 	svcvs	0x00007466
    1404:	61726570 	cmnvs	r2, r0, ror r5
    1408:	3c726f74 	ldclcc	15, cr6, [r2], #-464	; 0xfffffe30
    140c:	533c203c 	teqpl	ip, #60	; 0x3c
    1410:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1414:	435f3630 	cmpmi	pc, #48, 12	; 0x3000000
    1418:	003e646d 	eorseq	r6, lr, sp, ror #8
    141c:	314e5a5f 	cmpcc	lr, pc, asr sl
    1420:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    1424:	616c7073 	smcvs	50947	; 0xc703
    1428:	53535f79 	cmppl	r3, #484	; 0x1e4
    142c:	30333144 	eorscc	r3, r3, r4, asr #2
    1430:	6c433536 	cfstr64vs	mvdx3, [r3], {54}	; 0x36
    1434:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    1438:	5a5f0076 	bpl	17c1618 <_bss_end+0x17af928>
    143c:	35314b4e 	ldrcc	r4, [r1, #-2894]!	; 0xfffff4b2
    1440:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1444:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1448:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    144c:	39726574 	ldmdbcc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1450:	4f5f7349 	svcmi	0x005f7349
    1454:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    1458:	00764564 	rsbseq	r4, r6, r4, ror #10
    145c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1460:	552f632f 	strpl	r6, [pc, #-815]!	; 1139 <CPSR_IRQ_INHIBIT+0x10b9>
    1464:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1468:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    146c:	6f442f61 	svcvs	0x00442f61
    1470:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1474:	2f73746e 	svccs	0x0073746e
    1478:	6f72655a 	svcvs	0x0072655a
    147c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1480:	6178652f 	cmnvs	r8, pc, lsr #10
    1484:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1488:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    148c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1490:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1494:	2f6c656e 	svccs	0x006c656e
    1498:	2f637273 	svccs	0x00637273
    149c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    14a0:	2f737265 	svccs	0x00737265
    14a4:	6d676573 	cfstr64vs	mvdx6, [r7, #-460]!	; 0xfffffe34
    14a8:	64746e65 	ldrbtvs	r6, [r4], #-3685	; 0xfffff19b
    14ac:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    14b0:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
    14b4:	43007070 	movwmi	r7, #112	; 0x70
    14b8:	66696853 			; <UNDEFINED> instruction: 0x66696853
    14bc:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    14c0:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    14c4:	5f007265 	svcpl	0x00007265
    14c8:	314b4e5a 	cmpcc	fp, sl, asr lr
    14cc:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    14d0:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    14d4:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    14d8:	616c7073 	smcvs	50947	; 0xc703
    14dc:	65523479 	ldrbvs	r3, [r2, #-1145]	; 0xfffffb87
    14e0:	76456461 	strbvc	r6, [r5], -r1, ror #8
    14e4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    14e8:	4336314b 	teqmi	r6, #-1073741806	; 0xc0000012
    14ec:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    14f0:	5f746e65 	svcpl	0x00746e65
    14f4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    14f8:	3979616c 	ldmdbcc	r9!, {r2, r3, r5, r6, r8, sp, lr}^
    14fc:	4f5f7349 	svcmi	0x005f7349
    1500:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    1504:	00764564 	rsbseq	r4, r6, r4, ror #10
    1508:	314e5a5f 	cmpcc	lr, pc, asr sl
    150c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    1510:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    1514:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1518:	616c7073 	smcvs	50947	; 0xc703
    151c:	6c433579 	cfstr64vs	mvdx3, [r3], {121}	; 0x79
    1520:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    1524:	446d0076 	strbtmi	r0, [sp], #-118	; 0xffffff8a
    1528:	5f617461 	svcpl	0x00617461
    152c:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1530:	314e5a5f 	cmpcc	lr, pc, asr sl
    1534:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1538:	5f746669 	svcpl	0x00746669
    153c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1540:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1544:	69685338 	stmdbvs	r8!, {r3, r4, r5, r8, r9, ip, lr}^
    1548:	495f7466 	ldmdbmi	pc, {r1, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    154c:	0062456e 	rsbeq	r4, r2, lr, ror #10
    1550:	314e5a5f 	cmpcc	lr, pc, asr sl
    1554:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1558:	5f746669 	svcpl	0x00746669
    155c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1560:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1564:	6a453443 	bvs	114e678 <_bss_end+0x113c988>
    1568:	5f006a6a 	svcpl	0x00006a6a
    156c:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    1570:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1574:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1578:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    157c:	35726574 	ldrbcc	r6, [r2, #-1396]!	; 0xfffffa8c
    1580:	736f6c43 	cmnvc	pc, #17152	; 0x4300
    1584:	00764565 	rsbseq	r4, r6, r5, ror #10
    1588:	6f6c436d 	svcvs	0x006c436d
    158c:	505f6b63 	subspl	r6, pc, r3, ror #22
    1590:	5f006e69 	svcpl	0x00006e69
    1594:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    1598:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    159c:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    15a0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    15a4:	38726574 	ldmdacc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    15a8:	66696853 			; <UNDEFINED> instruction: 0x66696853
    15ac:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
    15b0:	5f006845 	svcpl	0x00006845
    15b4:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    15b8:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    15bc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    15c0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    15c4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    15c8:	76453443 	strbvc	r3, [r5], -r3, asr #8
    15cc:	754f6d00 	strbvc	r6, [pc, #-3328]	; 8d4 <CPSR_IRQ_INHIBIT+0x854>
    15d0:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
    15d4:	65534300 	ldrbvs	r4, [r3, #-768]	; 0xfffffd00
    15d8:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    15dc:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    15e0:	616c7073 	smcvs	50947	; 0xc703
    15e4:	5a5f0079 	bpl	17c17d0 <_bss_end+0x17afae0>
    15e8:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    15ec:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    15f0:	5f746e65 	svcpl	0x00746e65
    15f4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    15f8:	4379616c 	cmnmi	r9, #108, 2
    15fc:	00764532 	rsbseq	r4, r6, r2, lsr r5
    1600:	314e5a5f 	cmpcc	lr, pc, asr sl
    1604:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1608:	5f746669 	svcpl	0x00746669
    160c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1610:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1614:	65704f34 	ldrbvs	r4, [r0, #-3892]!	; 0xfffff0cc
    1618:	0076456e 	rsbseq	r4, r6, lr, ror #10
    161c:	6168436d 	cmnvs	r8, sp, ror #6
    1620:	74636172 	strbtvc	r6, [r3], #-370	; 0xfffffe8e
    1624:	4d5f7265 	lfmmi	f7, 2, [pc, #-404]	; 1498 <CPSR_IRQ_INHIBIT+0x1418>
    1628:	5f007061 	svcpl	0x00007061
    162c:	424f4c47 	submi	r4, pc, #18176	; 0x4700
    1630:	5f5f4c41 	svcpl	0x005f4c41
    1634:	5f627573 	svcpl	0x00627573
    1638:	53735f49 	cmnpl	r3, #292	; 0x124
    163c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1640:	445f746e 	ldrbmi	r7, [pc], #-1134	; 1648 <CPSR_IRQ_INHIBIT+0x15c8>
    1644:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1648:	5f007961 	svcpl	0x00007961
    164c:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    1650:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    1654:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1658:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    165c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1660:	69725735 	ldmdbvs	r2!, {r0, r2, r4, r5, r8, r9, sl, ip, lr}^
    1664:	63456574 	movtvs	r6, #21876	; 0x5574
    1668:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    166c:	53433631 	movtpl	r3, #13873	; 0x3631
    1670:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1674:	445f746e 	ldrbmi	r7, [pc], #-1134	; 167c <CPSR_IRQ_INHIBIT+0x15fc>
    1678:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    167c:	34317961 	ldrtcc	r7, [r1], #-2401	; 0xfffff69f
    1680:	6168436d 	cmnvs	r8, sp, ror #6
    1684:	74636172 	strbtvc	r6, [r3], #-370	; 0xfffffe8e
    1688:	4d5f7265 	lfmmi	f7, 2, [pc, #-404]	; 14fc <CPSR_IRQ_INHIBIT+0x147c>
    168c:	00457061 	subeq	r7, r5, r1, rrx
    1690:	74614c6d 	strbtvc	r4, [r1], #-3181	; 0xfffff393
    1694:	505f6863 	subspl	r6, pc, r3, ror #16
    1698:	53006e69 	movwpl	r6, #3689	; 0xe69
    169c:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    16a0:	006e495f 	rsbeq	r4, lr, pc, asr r9
    16a4:	314e5a5f 	cmpcc	lr, pc, asr sl
    16a8:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    16ac:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    16b0:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    16b4:	616c7073 	smcvs	50947	; 0xc703
    16b8:	704f3479 	subvc	r3, pc, r9, ror r4	; <UNPREDICTABLE>
    16bc:	76456e65 	strbvc	r6, [r5], -r5, ror #28
    16c0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    16c4:	53433531 	movtpl	r3, #13617	; 0x3531
    16c8:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    16cc:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    16d0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    16d4:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
    16d8:	006a6a6a 	rsbeq	r6, sl, sl, ror #20
    16dc:	4f4c475f 	svcmi	0x004c475f
    16e0:	5f4c4142 	svcpl	0x004c4142
    16e4:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    16e8:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    16ec:	66696853 			; <UNDEFINED> instruction: 0x66696853
    16f0:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    16f4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    16f8:	62007265 	andvs	r7, r0, #1342177286	; 0x50000006
    16fc:	00657479 	rsbeq	r7, r5, r9, ror r4
    1700:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    1704:	6e69506b 	cdpvs	0, 6, cr5, cr9, cr11, {3}
    1708:	74616c00 	strbtvc	r6, [r1], #-3072	; 0xfffff400
    170c:	69506863 	ldmdbvs	r0, {r0, r1, r5, r6, fp, sp, lr}^
    1710:	6d2f006e 	stcvs	0, cr0, [pc, #-440]!	; 1560 <CPSR_IRQ_INHIBIT+0x14e0>
    1714:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1718:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    171c:	4b2f7372 	blmi	bde4ec <_bss_end+0xbcc7fc>
    1720:	2f616275 	svccs	0x00616275
    1724:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1728:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    172c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1730:	614d6f72 	hvcvs	55026	; 0xd6f2
    1734:	652f6574 	strvs	r6, [pc, #-1396]!	; 11c8 <CPSR_IRQ_INHIBIT+0x1148>
    1738:	706d6178 	rsbvc	r6, sp, r8, ror r1
    173c:	2f73656c 	svccs	0x0073656c
    1740:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1744:	6b2f4332 	blvs	bd2414 <_bss_end+0xbc0724>
    1748:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    174c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1750:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
    1754:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1758:	68732f73 	ldmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    175c:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    1760:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1764:	2e726574 	mrccs	5, 3, r6, cr2, cr4, {3}
    1768:	00707063 	rsbseq	r7, r0, r3, rrx
    176c:	61746164 	cmnvs	r4, r4, ror #2
    1770:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1774:	6d69546d 	cfstrdvs	mvd5, [r9, #-436]!	; 0xfffffe4c
    1778:	525f7265 	subspl	r7, pc, #1342177286	; 0x50000006
    177c:	00736765 	rsbseq	r6, r3, r5, ror #14
    1780:	4f4c475f 	svcmi	0x004c475f
    1784:	5f4c4142 	svcpl	0x004c4142
    1788:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    178c:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    1790:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1794:	5a5f0072 	bpl	17c1964 <_bss_end+0x17afc74>
    1798:	5443364e 	strbpl	r3, [r3], #-1614	; 0xfffff9b2
    179c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    17a0:	73493032 	movtvc	r3, #36914	; 0x9032
    17a4:	6d69545f 	cfstrdvs	mvd5, [r9, #-380]!	; 0xfffffe84
    17a8:	495f7265 	ldmdbmi	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    17ac:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    17b0:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    17b4:	7645676e 	strbvc	r6, [r5], -lr, ror #14
    17b8:	6c616800 	stclvs	8, cr6, [r1], #-0
    17bc:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    17c0:	6265645f 	rsbvs	r6, r5, #1593835520	; 0x5f000000
    17c4:	625f6775 	subsvs	r6, pc, #30670848	; 0x1d40000
    17c8:	6b616572 	blvs	185ad98 <_bss_end+0x18490a8>
    17cc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    17d0:	69544336 	ldmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    17d4:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    17d8:	006d4532 	rsbeq	r4, sp, r2, lsr r5
    17dc:	6f6c6552 	svcvs	0x006c6552
    17e0:	49006461 	stmdbmi	r0, {r0, r5, r6, sl, sp, lr}
    17e4:	435f5152 	cmpmi	pc, #-2147483628	; 0x80000014
    17e8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    17ec:	006b6361 	rsbeq	r6, fp, r1, ror #6
    17f0:	5f515249 	svcpl	0x00515249
    17f4:	6b73614d 	blvs	1cd9d30 <_bss_end+0x1cc8040>
    17f8:	64006465 	strvs	r6, [r0], #-1125	; 0xfffffb9b
    17fc:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1800:	756e7500 	strbvc	r7, [lr, #-1280]!	; 0xfffffb00
    1804:	5f646573 	svcpl	0x00646573
    1808:	6e750030 	mrcvs	0, 3, r0, cr5, cr0, {1}
    180c:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
    1810:	7500315f 	strvc	r3, [r0, #-351]	; 0xfffffea1
    1814:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
    1818:	00325f64 	eorseq	r5, r2, r4, ror #30
    181c:	73756e75 	cmnvc	r5, #1872	; 0x750
    1820:	335f6465 	cmpcc	pc, #1694498816	; 0x65000000
    1824:	756e7500 	strbvc	r7, [lr, #-1280]!	; 0xfffffb00
    1828:	5f646573 	svcpl	0x00646573
    182c:	6f630034 	svcvs	0x00630034
    1830:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    1834:	32335f72 	eorscc	r5, r3, #456	; 0x1c8
    1838:	72500062 	subsvc	r0, r0, #98	; 0x62
    183c:	61637365 	cmnvs	r3, r5, ror #6
    1840:	5f72656c 	svcpl	0x0072656c
    1844:	00363532 	eorseq	r3, r6, r2, lsr r5
    1848:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    184c:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    1850:	45367265 	ldrmi	r7, [r6, #-613]!	; 0xfffffd9b
    1854:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1858:	46504565 	ldrbmi	r4, [r0], -r5, ror #10
    185c:	6a457676 	bvs	115f23c <_bss_end+0x114d54c>
    1860:	544e3631 	strbpl	r3, [lr], #-1585	; 0xfffff9cf
    1864:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1868:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0xffffffa1
    186c:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    1870:	66007265 	strvs	r7, [r0], -r5, ror #4
    1874:	5f656572 	svcpl	0x00656572
    1878:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
    187c:	5f676e69 	svcpl	0x00676e69
    1880:	73657270 	cmnvc	r5, #112, 4
    1884:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    1888:	72660072 	rsbvc	r0, r6, #114	; 0x72
    188c:	725f6565 	subsvc	r6, pc, #423624704	; 0x19400000
    1890:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1894:	655f676e 	ldrbvs	r6, [pc, #-1902]	; 112e <CPSR_IRQ_INHIBIT+0x10ae>
    1898:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    189c:	52490065 	subpl	r0, r9, #101	; 0x65
    18a0:	6c435f51 	mcrrvs	15, 5, r5, r3, cr1
    18a4:	00726165 	rsbseq	r6, r2, r5, ror #2
    18a8:	73657250 	cmnvc	r5, #80, 4
    18ac:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    18b0:	36315f72 	shsub16cc	r5, r1, r2
    18b4:	6c615600 	stclvs	6, cr5, [r1], #-0
    18b8:	69006575 	stmdbvs	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    18bc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    18c0:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    18c4:	616e655f 	cmnvs	lr, pc, asr r5
    18c8:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    18cc:	65725000 	ldrbvs	r5, [r2, #-0]!
    18d0:	7669445f 			; <UNDEFINED> instruction: 0x7669445f
    18d4:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
    18d8:	6d695400 	cfstrdvs	mvd5, [r9, #-0]
    18dc:	525f7265 	subspl	r7, pc, #1342177286	; 0x50000006
    18e0:	5f006765 	svcpl	0x00006765
    18e4:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    18e8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    18ec:	69443772 	stmdbvs	r4, {r1, r4, r5, r6, r8, r9, sl, ip, sp}^
    18f0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    18f4:	00764565 	rsbseq	r4, r6, r5, ror #10
    18f8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    18fc:	65725f72 	ldrbvs	r5, [r2, #-3954]!	; 0xfffff08e
    1900:	61625f67 	cmnvs	r2, r7, ror #30
    1904:	74006573 	strvc	r6, [r0], #-1395	; 0xfffffa8d
    1908:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    190c:	616e655f 	cmnvs	lr, pc, asr r5
    1910:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    1914:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1918:	2f632f74 	svccs	0x00632f74
    191c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1920:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1924:	442f6162 	strtmi	r6, [pc], #-354	; 192c <CPSR_IRQ_INHIBIT+0x18ac>
    1928:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    192c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1930:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1934:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1938:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    193c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1940:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1944:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1948:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    194c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1950:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1954:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1958:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    195c:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	; 0xffffff44
    1960:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
    1964:	54007070 	strpl	r7, [r0], #-112	; 0xffffff90
    1968:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    196c:	74435f72 	strbvc	r5, [r3], #-3954	; 0xfffff08e
    1970:	6c465f6c 	mcrrvs	15, 6, r5, r6, cr12
    1974:	00736761 	rsbseq	r6, r3, r1, ror #14
    1978:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    197c:	61436d00 	cmpvs	r3, r0, lsl #26
    1980:	61626c6c 	cmnvs	r2, ip, ror #24
    1984:	5f006b63 	svcpl	0x00006b63
    1988:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    198c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1990:	65523472 	ldrbvs	r3, [r2, #-1138]	; 0xfffffb8e
    1994:	4e457367 	cdpmi	3, 4, cr7, cr5, cr7, {3}
    1998:	6c616833 	stclvs	8, cr6, [r1], #-204	; 0xffffff34
    199c:	6d695439 	cfstrdvs	mvd5, [r9, #-228]!	; 0xffffff1c
    19a0:	525f7265 	subspl	r7, pc, #1342177286	; 0x50000006
    19a4:	00456765 	subeq	r6, r5, r5, ror #14
    19a8:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    19ac:	5f007265 	svcpl	0x00007265
    19b0:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    19b4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    19b8:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    19bc:	7246006d 	subvc	r0, r6, #109	; 0x6d
    19c0:	525f6565 	subspl	r6, pc, #423624704	; 0x19400000
    19c4:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    19c8:	5000676e 	andpl	r6, r0, lr, ror #14
    19cc:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    19d0:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    19d4:	4900315f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, ip, sp}
    19d8:	69545f73 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    19dc:	5f72656d 	svcpl	0x0072656d
    19e0:	5f515249 	svcpl	0x00515249
    19e4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    19e8:	00676e69 	rsbeq	r6, r7, r9, ror #28
    19ec:	6d695454 	cfstrdvs	mvd5, [r9, #-336]!	; 0xfffffeb0
    19f0:	435f7265 	cmpmi	pc, #1342177286	; 0x50000006
    19f4:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    19f8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    19fc:	5f515249 	svcpl	0x00515249
    1a00:	00776152 	rsbseq	r6, r7, r2, asr r1
    1a04:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    1a08:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    1a0c:	32317265 	eorscc	r7, r1, #1342177286	; 0x50000006
    1a10:	5f515249 	svcpl	0x00515249
    1a14:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1a18:	6b636162 	blvs	18d9fa8 <_bss_end+0x18c82b8>
    1a1c:	63007645 	movwvs	r7, #1605	; 0x645
    1a20:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1a24:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1a28:	6e72546d 	cdpvs	4, 7, cr5, cr2, cr13, {3}
    1a2c:	65525f67 	ldrbvs	r5, [r2, #-3943]	; 0xfffff099
    1a30:	65007367 	strvs	r7, [r0, #-871]	; 0xfffffc99
    1a34:	756c6378 	strbvc	r6, [ip, #-888]!	; 0xfffffc88
    1a38:	65766973 	ldrbvs	r6, [r6, #-2419]!	; 0xfffff68d
    1a3c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1a40:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1a44:	3731474e 	ldrcc	r4, [r1, -lr, asr #14]!
    1a48:	5f746547 	svcpl	0x00746547
    1a4c:	646e6152 	strbtvs	r6, [lr], #-338	; 0xfffffeae
    1a50:	4e5f6d6f 	cdpmi	13, 5, cr6, cr15, cr15, {3}
    1a54:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1a58:	00764572 	rsbseq	r4, r6, r2, ror r5
    1a5c:	474e5254 	smlsldmi	r5, lr, r4, r2
    1a60:	7261575f 	rsbvc	r5, r1, #24903680	; 0x17c0000
    1a64:	5f70756d 	svcpl	0x0070756d
    1a68:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1a6c:	6e490074 	mcrvs	0, 2, r0, cr9, cr4, {3}
    1a70:	614d5f74 	hvcvs	54772	; 0xd5f4
    1a74:	2f006b73 	svccs	0x00006b73
    1a78:	2f746e6d 	svccs	0x00746e6d
    1a7c:	73552f63 	cmpvc	r5, #396	; 0x18c
    1a80:	2f737265 	svccs	0x00737265
    1a84:	6162754b 	cmnvs	r2, fp, asr #10
    1a88:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1a8c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1a90:	5a2f7374 	bpl	bde868 <_bss_end+0xbccb78>
    1a94:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1908 <CPSR_IRQ_INHIBIT+0x1888>
    1a98:	2f657461 	svccs	0x00657461
    1a9c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1aa0:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1aa4:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1aa8:	2f433249 	svccs	0x00433249
    1aac:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1ab0:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    1ab4:	642f6372 	strtvs	r6, [pc], #-882	; 1abc <CPSR_IRQ_INHIBIT+0x1a3c>
    1ab8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1abc:	742f7372 	strtvc	r7, [pc], #-882	; 1ac4 <CPSR_IRQ_INHIBIT+0x1a44>
    1ac0:	2e676e72 	mcrcs	14, 3, r6, cr7, cr2, {3}
    1ac4:	00707063 	rsbseq	r7, r0, r3, rrx
    1ac8:	61746144 	cmnvs	r4, r4, asr #2
    1acc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ad0:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1ad4:	4f34474e 	svcmi	0x0034474e
    1ad8:	456e6570 	strbmi	r6, [lr, #-1392]!	; 0xfffffa90
    1adc:	5a5f0062 	bpl	17c1c6c <_bss_end+0x17aff7c>
    1ae0:	43354b4e 	teqmi	r5, #79872	; 0x13800
    1ae4:	474e5254 	smlsldmi	r5, lr, r4, r2
    1ae8:	5f734939 	svcpl	0x00734939
    1aec:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1af0:	76456465 	strbvc	r6, [r5], -r5, ror #8
    1af4:	6e727400 	cdpvs	4, 7, cr7, cr2, cr0, {0}
    1af8:	65725f67 	ldrbvs	r5, [r2, #-3943]!	; 0xfffff099
    1afc:	61625f67 	cmnvs	r2, r7, ror #30
    1b00:	47006573 	smlsdxmi	r0, r3, r5, r6
    1b04:	525f7465 	subspl	r7, pc, #1694498816	; 0x65000000
    1b08:	6f646e61 	svcvs	0x00646e61
    1b0c:	754e5f6d 	strbvc	r5, [lr, #-3949]	; 0xfffff093
    1b10:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1b14:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1b18:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1b1c:	3443474e 	strbcc	r4, [r3], #-1870	; 0xfffff8b2
    1b20:	5f006a45 	svcpl	0x00006a45
    1b24:	43354e5a 	teqmi	r5, #1440	; 0x5a0
    1b28:	474e5254 	smlsldmi	r5, lr, r4, r2
    1b2c:	6f6c4335 	svcvs	0x006c4335
    1b30:	76456573 			; <UNDEFINED> instruction: 0x76456573
    1b34:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1b38:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    1b3c:	3243474e 	subcc	r4, r3, #20447232	; 0x1380000
    1b40:	43006a45 	movwmi	r6, #2629	; 0xa45
    1b44:	474e5254 	smlsldmi	r5, lr, r4, r2
    1b48:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    1b4c:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    1b50:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    1b54:	5f495f62 	svcpl	0x00495f62
    1b58:	4e525473 	mrcmi	4, 2, r5, cr2, cr3, {3}
    1b5c:	52540047 	subspl	r0, r4, #71	; 0x47
    1b60:	525f474e 	subspl	r4, pc, #20447232	; 0x1380000
    1b64:	67006765 	strvs	r6, [r0, -r5, ror #14]
    1b68:	445f5346 	ldrbmi	r5, [pc], #-838	; 1b70 <CPSR_IRQ_INHIBIT+0x1af0>
    1b6c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1b70:	435f7372 	cmpmi	pc, #-939524095	; 0xc8000001
    1b74:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1b78:	466f4e00 	strbtmi	r4, [pc], -r0, lsl #28
    1b7c:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1b80:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1b84:	6972446d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, sl, lr}^
    1b88:	00726576 	rsbseq	r6, r2, r6, ror r5
    1b8c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1b90:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1b94:	6d007864 	stcvs	8, cr7, [r0, #-400]	; 0xfffffe70
    1b98:	746f6f52 	strbtvc	r6, [pc], #-3922	; 1ba0 <CPSR_IRQ_INHIBIT+0x1b20>
    1b9c:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
    1ba0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ba4:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1ba8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1bac:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1bb0:	4532436d 	ldrmi	r4, [r2, #-877]!	; 0xfffffc93
    1bb4:	6f6d0076 	svcvs	0x006d0076
    1bb8:	50746e75 	rsbspl	r6, r4, r5, ror lr
    1bbc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1bc0:	696e4900 	stmdbvs	lr!, {r8, fp, lr}^
    1bc4:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1bc8:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1bcc:	5f534667 	svcpl	0x00534667
    1bd0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1bd4:	00737265 	rsbseq	r7, r3, r5, ror #4
    1bd8:	4f4c475f 	svcmi	0x004c475f
    1bdc:	5f4c4142 	svcpl	0x004c4142
    1be0:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    1be4:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    1be8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1bec:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1bf0:	5f006d65 	svcpl	0x00006d65
    1bf4:	30324e5a 	eorscc	r4, r2, sl, asr lr
    1bf8:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    1bfc:	5f6c656e 	svcpl	0x006c656e
    1c00:	70616548 	rsbvc	r6, r1, r8, asr #10
    1c04:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    1c08:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    1c0c:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    1c10:	4e49636f 	cdpmi	3, 4, cr6, cr9, cr15, {3}
    1c14:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1c18:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1c1c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1c20:	5433316d 	ldrtpl	r3, [r3], #-365	; 0xfffffe93
    1c24:	545f5346 	ldrbpl	r5, [pc], #-838	; 1c2c <CPSR_IRQ_INHIBIT+0x1bac>
    1c28:	5f656572 	svcpl	0x00656572
    1c2c:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1c30:	50454545 	subpl	r4, r5, r5, asr #10
    1c34:	00765f54 	rsbseq	r5, r6, r4, asr pc
    1c38:	69447369 	stmdbvs	r4, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    1c3c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
    1c40:	0079726f 	rsbseq	r7, r9, pc, ror #4
    1c44:	4678614d 	ldrbtmi	r6, [r8], -sp, asr #2
    1c48:	69724453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, lr}^
    1c4c:	4e726576 	mrcmi	5, 3, r6, cr2, cr6, {3}
    1c50:	4c656d61 	stclmi	13, cr6, [r5], #-388	; 0xfffffe7c
    1c54:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1c58:	706d0068 	rsbvc	r0, sp, r8, rrx
    1c5c:	00727450 	rsbseq	r7, r2, r0, asr r4
    1c60:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0xfffffe90
    1c64:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
    1c68:	545f5346 	ldrbpl	r5, [pc], #-838	; 1c70 <CPSR_IRQ_INHIBIT+0x1bf0>
    1c6c:	5f656572 	svcpl	0x00656572
    1c70:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1c74:	78614d00 	stmdavc	r1!, {r8, sl, fp, lr}^
    1c78:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1c7c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    1c80:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1c84:	43006874 	movwmi	r6, #2164	; 0x874
    1c88:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1c8c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1c90:	63006d65 	movwvs	r6, #3429	; 0xd65
    1c94:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    1c98:	006e6572 	rsbeq	r6, lr, r2, ror r5
    1c9c:	4e706d74 	mrcmi	13, 3, r6, cr0, cr4, {3}
    1ca0:	0065646f 	rsbeq	r6, r5, pc, ror #8
    1ca4:	314e5a5f 	cmpcc	lr, pc, asr sl
    1ca8:	69464331 	stmdbvs	r6, {r0, r4, r5, r8, r9, lr}^
    1cac:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1cb0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1cb4:	46543331 			; <UNDEFINED> instruction: 0x46543331
    1cb8:	72545f53 	subsvc	r5, r4, #332	; 0x14c
    1cbc:	4e5f6565 	cdpmi	5, 5, cr6, cr15, cr5, {3}
    1cc0:	4365646f 	cmnmi	r5, #1862270976	; 0x6f000000
    1cc4:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1cc8:	4e706d74 	mrcmi	13, 3, r6, cr0, cr4, {3}
    1ccc:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1cd0:	5f534654 	svcpl	0x00534654
    1cd4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1cd8:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
    1cdc:	5f646165 	svcpl	0x00646165
    1ce0:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    1ce4:	5a5f0065 	bpl	17c1e80 <_bss_end+0x17b0190>
    1ce8:	4331314e 	teqmi	r1, #-2147483629	; 0x80000013
    1cec:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1cf0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1cf4:	4f346d65 	svcmi	0x00346d65
    1cf8:	456e6570 	strbmi	r6, [lr, #-1392]!	; 0xfffffa90
    1cfc:	31634b50 	cmncc	r3, r0, asr fp
    1d00:	69464e35 	stmdbvs	r6, {r0, r2, r4, r5, r9, sl, fp, lr}^
    1d04:	4f5f656c 	svcmi	0x005f656c
    1d08:	5f6e6570 	svcpl	0x006e6570
    1d0c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1d10:	6e694600 	cdpvs	6, 6, cr4, cr9, cr0, {0}
    1d14:	68435f64 	stmdavs	r3, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d18:	00646c69 	rsbeq	r6, r4, r9, ror #24
    1d1c:	6f6f526d 	svcvs	0x006f526d
    1d20:	6e4d5f74 	mcrvs	15, 2, r5, cr13, cr4, {3}
    1d24:	72640074 	rsbvc	r0, r4, #116	; 0x74
    1d28:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1d2c:	6f526d00 	svcvs	0x00526d00
    1d30:	535f746f 	cmppl	pc, #1862270976	; 0x6f000000
    1d34:	52007379 	andpl	r7, r0, #-469762047	; 0xe4000001
    1d38:	5f646165 	svcpl	0x00646165
    1d3c:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1d40:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1d44:	2f632f74 	svccs	0x00632f74
    1d48:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1d4c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1d50:	442f6162 	strtmi	r6, [pc], #-354	; 1d58 <CPSR_IRQ_INHIBIT+0x1cd8>
    1d54:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1d58:	73746e65 	cmnvc	r4, #1616	; 0x650
    1d5c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1d60:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1d64:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1d68:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1d6c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1d70:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1d74:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1d78:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1d7c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1d80:	2f73662f 	svccs	0x0073662f
    1d84:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    1d88:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1d8c:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    1d90:	4d007070 	stcmi	0, cr7, [r0, #-448]	; 0xfffffe40
    1d94:	61507861 	cmpvs	r0, r1, ror #16
    1d98:	654c6874 	strbvs	r6, [ip, #-2164]	; 0xfffff78c
    1d9c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1da0:	6f526d00 	svcvs	0x00526d00
    1da4:	6300746f 	movwvs	r7, #1135	; 0x46f
    1da8:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    1dac:	6c6c4100 	stfvse	f4, [ip], #-0
    1db0:	433c636f 	teqmi	ip, #-1140850687	; 0xbc000001
    1db4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1db8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1dbc:	3a3a6d65 	bcc	e9d358 <_bss_end+0xe8b668>
    1dc0:	5f534654 	svcpl	0x00534654
    1dc4:	65657254 	strbvs	r7, [r5, #-596]!	; 0xfffffdac
    1dc8:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 1dd0 <CPSR_IRQ_INHIBIT+0x1d50>
    1dcc:	5f003e65 	svcpl	0x00003e65
    1dd0:	31314e5a 	teqcc	r1, sl, asr lr
    1dd4:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1dd8:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1ddc:	316d6574 	smccc	54868	; 0xd654
    1de0:	53465433 	movtpl	r5, #25651	; 0x6433
    1de4:	6572545f 	ldrbvs	r5, [r2, #-1119]!	; 0xfffffba1
    1de8:	6f4e5f65 	svcvs	0x004e5f65
    1dec:	30316564 	eorscc	r6, r1, r4, ror #10
    1df0:	646e6946 	strbtvs	r6, [lr], #-2374	; 0xfffff6ba
    1df4:	6968435f 	stmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, r9, lr}^
    1df8:	5045646c 	subpl	r6, r5, ip, ror #8
    1dfc:	5f00634b 	svcpl	0x0000634b
    1e00:	31314e5a 	teqcc	r1, sl, asr lr
    1e04:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1e08:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1e0c:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
    1e10:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1e14:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
    1e18:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1e1c:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1e20:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1e24:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1e28:	5433316d 	ldrtpl	r3, [r3], #-365	; 0xfffffe93
    1e2c:	545f5346 	ldrbpl	r5, [pc], #-838	; 1e34 <CPSR_IRQ_INHIBIT+0x1db4>
    1e30:	5f656572 	svcpl	0x00656572
    1e34:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1e38:	76453243 	strbvc	r3, [r5], -r3, asr #4
    1e3c:	69725700 	ldmdbvs	r2!, {r8, r9, sl, ip, lr}^
    1e40:	4f5f6574 	svcmi	0x005f6574
    1e44:	00796c6e 	rsbseq	r6, r9, lr, ror #24
    1e48:	314e5a5f 	cmpcc	lr, pc, asr sl
    1e4c:	69464331 	stmdbvs	r6, {r0, r4, r5, r8, r9, lr}^
    1e50:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1e54:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1e58:	6e493031 	mcrvs	0, 2, r3, cr9, cr1, {1}
    1e5c:	61697469 	cmnvs	r9, r9, ror #8
    1e60:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    1e64:	5f007645 	svcpl	0x00007645
    1e68:	30324e5a 	eorscc	r4, r2, sl, asr lr
    1e6c:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1e70:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1e74:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1e78:	5f726574 	svcpl	0x00726574
    1e7c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1e80:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    1e84:	005f534b 	subseq	r5, pc, fp, asr #6
    1e88:	314e5a5f 	cmpcc	lr, pc, asr sl
    1e8c:	6f4d4333 	svcvs	0x004d4333
    1e90:	6f74696e 	svcvs	0x0074696e
    1e94:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e98:	3244656c 	subcc	r6, r4, #108, 10	; 0x1b000000
    1e9c:	5f007645 	svcpl	0x00007645
    1ea0:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    1ea4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1ea8:	76453044 	strbvc	r3, [r5], -r4, asr #32
    1eac:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1eb0:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    1eb4:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    1eb8:	70007645 	andvc	r7, r0, r5, asr #12
    1ebc:	6f4e6e69 	svcvs	0x004e6e69
    1ec0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ec4:	54433531 	strbpl	r3, [r3], #-1329	; 0xfffffacf
    1ec8:	5f474e52 	svcpl	0x00474e52
    1ecc:	445f5346 	ldrbmi	r5, [pc], #-838	; 1ed4 <CPSR_IRQ_INHIBIT+0x1e54>
    1ed0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1ed4:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    1ed8:	5a5f0076 	bpl	17c20b8 <_bss_end+0x17b03c8>
    1edc:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    1ee0:	4f495047 	svcmi	0x00495047
    1ee4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    1ee8:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    1eec:	5f534b52 	svcpl	0x00534b52
    1ef0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ef4:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1ef8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1efc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1f00:	6737316d 	ldrvs	r3, [r7, -sp, ror #2]!
    1f04:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f0c <CPSR_IRQ_INHIBIT+0x1e8c>
    1f08:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f0c:	435f7372 	cmpmi	pc, #-939524095	; 0xc8000001
    1f10:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1f14:	5a5f0045 	bpl	17c2030 <_bss_end+0x17b0340>
    1f18:	4338314e 	teqmi	r8, #-2147483629	; 0x80000013
    1f1c:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1f20:	5f726f74 	svcpl	0x00726f74
    1f24:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f2c <CPSR_IRQ_INHIBIT+0x1eac>
    1f28:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f2c:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    1f30:	5a5f0076 	bpl	17c2110 <_bss_end+0x17b0420>
    1f34:	4335324e 	teqmi	r5, #-536870908	; 0xe0000004
    1f38:	66696853 			; <UNDEFINED> instruction: 0x66696853
    1f3c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    1f40:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1f44:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    1f48:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f4c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f50:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    1f54:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    1f58:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1f5c:	00764572 	rsbseq	r4, r6, r2, ror r5
    1f60:	6f4d437e 	svcvs	0x004d437e
    1f64:	6f74696e 	svcvs	0x0074696e
    1f68:	53465f72 	movtpl	r5, #28530	; 0x6f72
    1f6c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1f70:	00726576 	rsbseq	r6, r2, r6, ror r5
    1f74:	50477366 	subpl	r7, r7, r6, ror #6
    1f78:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    1f7c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f80:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f84:	4d736600 	ldclmi	6, cr6, [r3, #-0]
    1f88:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    1f8c:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    1f90:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f94:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f98:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1f9c:	53433132 	movtpl	r3, #12594	; 0x3132
    1fa0:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1fa4:	445f746e 	ldrbmi	r7, [pc], #-1134	; 1fac <CPSR_IRQ_INHIBIT+0x1f2c>
    1fa8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1fac:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    1fb0:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    1fb4:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    1fb8:	4b504565 	blmi	1413554 <_bss_end+0x1401864>
    1fbc:	5f006a63 	svcpl	0x00006a63
    1fc0:	33324e5a 	teqcc	r2, #1440	; 0x5a0
    1fc4:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    1fc8:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    1fcc:	616c7073 	smcvs	50947	; 0xc703
    1fd0:	53465f79 	movtpl	r5, #28537	; 0x6f79
    1fd4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1fd8:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    1fdc:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1fe0:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    1fe4:	4b504565 	blmi	1413580 <_bss_end+0x1401890>
    1fe8:	4e353163 	rsfmisz	f3, f5, f3
    1fec:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1ff0:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    1ff4:	6f4d5f6e 	svcvs	0x004d5f6e
    1ff8:	5f006564 	svcpl	0x00006564
    1ffc:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2000:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2004:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2008:	5f6d6574 	svcpl	0x006d6574
    200c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2010:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2014:	5f007645 	svcpl	0x00007645
    2018:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    201c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2020:	76453444 	strbvc	r3, [r5], -r4, asr #8
    2024:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    2028:	7261505f 	rsbvc	r5, r1, #95	; 0x5f
    202c:	00736d61 	rsbseq	r6, r3, r1, ror #26
    2030:	74765f5f 	ldrbtvc	r5, [r6], #-3935	; 0xfffff0a1
    2034:	705f6c62 	subsvc	r6, pc, r2, ror #24
    2038:	745f7274 	ldrbvc	r7, [pc], #-628	; 2040 <CPSR_IRQ_INHIBIT+0x1fc0>
    203c:	00657079 	rsbeq	r7, r5, r9, ror r0
    2040:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2044:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    2048:	5f746669 	svcpl	0x00746669
    204c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2050:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2054:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2058:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    205c:	5a5f0076 	bpl	17c223c <_bss_end+0x17b054c>
    2060:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2064:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2068:	5f746e65 	svcpl	0x00746e65
    206c:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2070:	5f79616c 	svcpl	0x0079616c
    2074:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2078:	76453044 	strbvc	r3, [r5], -r4, asr #32
    207c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2080:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    2084:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    2088:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    208c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2090:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2094:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2098:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    209c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    20a0:	00764572 	rsbseq	r4, r6, r2, ror r5
    20a4:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    20a8:	65534331 	ldrbvs	r4, [r3, #-817]	; 0xfffffccf
    20ac:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    20b0:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20b4:	616c7073 	smcvs	50947	; 0xc703
    20b8:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20bc:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    20c0:	5f007645 	svcpl	0x00007645
    20c4:	30314e5a 	eorscc	r4, r1, sl, asr lr
    20c8:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    20cc:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    20d0:	3044656c 	subcc	r6, r4, ip, ror #10
    20d4:	5f007645 	svcpl	0x00007645
    20d8:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    20dc:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    20e0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    20e4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    20e8:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    20ec:	5a5f0069 	bpl	17c2298 <_bss_end+0x17b05a8>
    20f0:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    20f4:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    20f8:	5f726f74 	svcpl	0x00726f74
    20fc:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2100:	76453044 	strbvc	r3, [r5], -r4, asr #32
    2104:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2108:	54433531 	strbpl	r3, [r3], #-1329	; 0xfffffacf
    210c:	5f474e52 	svcpl	0x00474e52
    2110:	445f5346 	ldrbmi	r5, [pc], #-838	; 2118 <CPSR_IRQ_INHIBIT+0x2098>
    2114:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2118:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    211c:	5f534b52 	svcpl	0x00534b52
    2120:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2124:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    2128:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    212c:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    2130:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2134:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2138:	4f453443 	svcmi	0x00453443
    213c:	5f005f53 	svcpl	0x00005f53
    2140:	30324e5a 	eorscc	r4, r2, sl, asr lr
    2144:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    2148:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    214c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2150:	5f726574 	svcpl	0x00726574
    2154:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2158:	6f6c4335 	svcvs	0x006c4335
    215c:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2160:	4f494e00 	svcmi	0x00494e00
    2164:	5f6c7443 	svcpl	0x006c7443
    2168:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    216c:	6f697461 	svcvs	0x00697461
    2170:	5a5f006e 	bpl	17c2330 <_bss_end+0x17b0640>
    2174:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2178:	474e5254 	smlsldmi	r5, lr, r4, r2
    217c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2180:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2184:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2188:	6a634b50 	bvs	18d4ed0 <_bss_end+0x18c31e0>
    218c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2190:	47433531 	smlaldxmi	r3, r3, r1, r5	; <UNPREDICTABLE>
    2194:	5f4f4950 	svcpl	0x004f4950
    2198:	445f5346 	ldrbmi	r5, [pc], #-838	; 21a0 <CPSR_IRQ_INHIBIT+0x2120>
    219c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21a0:	45344472 	ldrmi	r4, [r4, #-1138]!	; 0xfffffb8e
    21a4:	5a5f0076 	bpl	17c2384 <_bss_end+0x17b0694>
    21a8:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    21ac:	474e5254 	smlsldmi	r5, lr, r4, r2
    21b0:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    21b4:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    21b8:	5a5f0076 	bpl	17c2398 <_bss_end+0x17b06a8>
    21bc:	4938314e 	ldmdbmi	r8!, {r1, r2, r3, r6, r8, ip, sp}
    21c0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    21c4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    21c8:	445f6d65 	ldrbmi	r6, [pc], #-3429	; 21d0 <CPSR_IRQ_INHIBIT+0x2150>
    21cc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21d0:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    21d4:	5f534b52 	svcpl	0x00534b52
    21d8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    21dc:	47433531 	smlaldxmi	r3, r3, r1, r5	; <UNPREDICTABLE>
    21e0:	5f4f4950 	svcpl	0x004f4950
    21e4:	445f5346 	ldrbmi	r5, [pc], #-838	; 21ec <CPSR_IRQ_INHIBIT+0x216c>
    21e8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21ec:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    21f0:	5f534b52 	svcpl	0x00534b52
    21f4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    21f8:	54433531 	strbpl	r3, [r3], #-1329	; 0xfffffacf
    21fc:	5f474e52 	svcpl	0x00474e52
    2200:	445f5346 	ldrbmi	r5, [pc], #-838	; 2208 <CPSR_IRQ_INHIBIT+0x2188>
    2204:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2208:	4f313172 	svcmi	0x00313172
    220c:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
    2210:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2214:	76457265 	strbvc	r7, [r5], -r5, ror #4
    2218:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    221c:	54433031 	strbpl	r3, [r3], #-49	; 0xffffffcf
    2220:	5f474e52 	svcpl	0x00474e52
    2224:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2228:	76453444 	strbvc	r3, [r5], -r4, asr #8
    222c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2230:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    2234:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    2238:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    223c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2240:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2244:	65704f39 	ldrbvs	r4, [r0, #-3897]!	; 0xfffff0c7
    2248:	69465f6e 	stmdbvs	r6, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    224c:	5045656c 	subpl	r6, r5, ip, ror #10
    2250:	3531634b 	ldrcc	r6, [r1, #-843]!	; 0xfffffcb5
    2254:	6c69464e 	stclvs	6, cr4, [r9], #-312	; 0xfffffec8
    2258:	704f5f65 	subvc	r5, pc, r5, ror #30
    225c:	4d5f6e65 	ldclmi	14, cr6, [pc, #-404]	; 20d0 <CPSR_IRQ_INHIBIT+0x2050>
    2260:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2264:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2268:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    226c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2274 <CPSR_IRQ_INHIBIT+0x21f4>
    2270:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2274:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2278:	72445f53 	subvc	r5, r4, #332	; 0x14c
    227c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2280:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2284:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2288:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    228c:	00764572 	rsbseq	r4, r6, r2, ror r5
    2290:	5f746547 	svcpl	0x00746547
    2294:	61726150 	cmnvs	r2, r0, asr r1
    2298:	5f00736d 	svcpl	0x0000736d
    229c:	30324e5a 	eorscc	r4, r2, sl, asr lr
    22a0:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    22a4:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    22a8:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    22ac:	5f726574 	svcpl	0x00726574
    22b0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    22b4:	61655234 	cmnvs	r5, r4, lsr r2
    22b8:	63504564 	cmpvs	r0, #100, 10	; 0x19000000
    22bc:	576d006a 	strbpl	r0, [sp, -sl, rrx]!
    22c0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    22c4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    22c8:	4f433831 	svcmi	0x00433831
    22cc:	5f44454c 	svcpl	0x0044454c
    22d0:	70736944 	rsbsvc	r6, r3, r4, asr #18
    22d4:	5f79616c 	svcpl	0x0079616c
    22d8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    22dc:	61655234 	cmnvs	r5, r4, lsr r2
    22e0:	63504564 	cmpvs	r0, #100, 10	; 0x19000000
    22e4:	5a5f006a 	bpl	17c2494 <_bss_end+0x17b07a4>
    22e8:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    22ec:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    22f0:	5f746e65 	svcpl	0x00746e65
    22f4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    22f8:	5f79616c 	svcpl	0x0079616c
    22fc:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2300:	6f6c4335 	svcvs	0x006c4335
    2304:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2308:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    230c:	4f433332 	svcmi	0x00433332
    2310:	5f44454c 	svcpl	0x0044454c
    2314:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2318:	5f79616c 	svcpl	0x0079616c
    231c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2324 <CPSR_IRQ_INHIBIT+0x22a4>
    2320:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2324:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    2328:	005f534f 	subseq	r5, pc, pc, asr #6
    232c:	65537366 	ldrbvs	r7, [r3, #-870]	; 0xfffffc9a
    2330:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2334:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2338:	616c7073 	smcvs	50947	; 0xc703
    233c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2340:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2344:	00726576 	rsbseq	r6, r2, r6, ror r5
    2348:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    234c:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    2350:	5f746669 	svcpl	0x00746669
    2354:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2358:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    235c:	5f53465f 	svcpl	0x0053465f
    2360:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2364:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2368:	5f007645 	svcpl	0x00007645
    236c:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2370:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    2374:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    2378:	4335656c 	teqmi	r5, #108, 10	; 0x1b000000
    237c:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    2380:	66007645 	strvs	r7, [r0], -r5, asr #12
    2384:	454c4f73 	strbmi	r4, [ip, #-3955]	; 0xfffff08d
    2388:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    238c:	616c7073 	smcvs	50947	; 0xc703
    2390:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2394:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2398:	00726576 	rsbseq	r6, r2, r6, ror r5
    239c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    23a0:	552f632f 	strpl	r6, [pc, #-815]!	; 2079 <CPSR_IRQ_INHIBIT+0x1ff9>
    23a4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    23a8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    23ac:	6f442f61 	svcvs	0x00442f61
    23b0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    23b4:	2f73746e 	svccs	0x0073746e
    23b8:	6f72655a 	svcvs	0x0072655a
    23bc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    23c0:	6178652f 	cmnvs	r8, pc, lsr #10
    23c4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    23c8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    23cc:	4332492d 	teqmi	r2, #737280	; 0xb4000
    23d0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    23d4:	2f6c656e 	svccs	0x006c656e
    23d8:	2f637273 	svccs	0x00637273
    23dc:	662f7366 	strtvs	r7, [pc], -r6, ror #6
    23e0:	73656c69 	cmnvc	r5, #26880	; 0x6900
    23e4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    23e8:	72645f6d 	rsbvc	r5, r4, #436	; 0x1b4
    23ec:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    23f0:	70632e73 	rsbvc	r2, r3, r3, ror lr
    23f4:	704f0070 	subvc	r0, pc, r0, ror r0	; <UNPREDICTABLE>
    23f8:	465f6e65 	ldrbmi	r6, [pc], -r5, ror #28
    23fc:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2400:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    2404:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2408:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    240c:	5a5f0076 	bpl	17c25ec <_bss_end+0x17b08fc>
    2410:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2414:	474e5254 	smlsldmi	r5, lr, r4, r2
    2418:	5f53465f 	svcpl	0x0053465f
    241c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2420:	4f397265 	svcmi	0x00397265
    2424:	5f6e6570 	svcpl	0x006e6570
    2428:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    242c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2430:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    2434:	5f656c69 	svcpl	0x00656c69
    2438:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    243c:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 2444 <CPSR_IRQ_INHIBIT+0x23c4>
    2440:	5a5f0065 	bpl	17c25dc <_bss_end+0x17b08ec>
    2444:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2448:	474e5254 	smlsldmi	r5, lr, r4, r2
    244c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2450:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2454:	5a5f0076 	bpl	17c2634 <_bss_end+0x17b0944>
    2458:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    245c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2460:	5f746e65 	svcpl	0x00746e65
    2464:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2468:	5f79616c 	svcpl	0x0079616c
    246c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2470:	76453243 	strbvc	r3, [r5], -r3, asr #4
    2474:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2478:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    247c:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2480:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2484:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2488:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    248c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    2490:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2494:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2498:	616c7073 	smcvs	50947	; 0xc703
    249c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    24a0:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    24a4:	44726576 	ldrbtmi	r6, [r2], #-1398	; 0xfffffa8a
    24a8:	00764534 	rsbseq	r4, r6, r4, lsr r5
    24ac:	314e5a5f 	cmpcc	lr, pc, asr sl
    24b0:	6f4d4333 	svcvs	0x004d4333
    24b4:	6f74696e 	svcvs	0x0074696e
    24b8:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    24bc:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    24c0:	534b5245 	movtpl	r5, #45637	; 0xb245
    24c4:	5a5f005f 	bpl	17c2648 <_bss_end+0x17b0958>
    24c8:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    24cc:	4f495047 	svcmi	0x00495047
    24d0:	5f53465f 	svcpl	0x0053465f
    24d4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    24d8:	31317265 	teqcc	r1, r5, ror #4
    24dc:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    24e0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    24e4:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    24e8:	4f490076 	svcmi	0x00490076
    24ec:	006c7443 	rsbeq	r7, ip, r3, asr #8
    24f0:	314e5a5f 	cmpcc	lr, pc, asr sl
    24f4:	6f4d4333 	svcvs	0x004d4333
    24f8:	6f74696e 	svcvs	0x0074696e
    24fc:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2500:	3243656c 	subcc	r6, r3, #108, 10	; 0x1b000000
    2504:	5f006945 	svcpl	0x00006945
    2508:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    250c:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    2510:	53465f4f 	movtpl	r5, #28495	; 0x6f4f
    2514:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2518:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    251c:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    2520:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2524:	4b504565 	blmi	1413ac0 <_bss_end+0x1401dd0>
    2528:	4e353163 	rsfmisz	f3, f5, f3
    252c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2530:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    2534:	6f4d5f6e 	svcvs	0x004d5f6e
    2538:	66006564 	strvs	r6, [r0], -r4, ror #10
    253c:	69685373 	stmdbvs	r8!, {r0, r1, r4, r5, r6, r8, r9, ip, lr}^
    2540:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    2544:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2548:	5f726574 	svcpl	0x00726574
    254c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2554 <CPSR_IRQ_INHIBIT+0x24d4>
    2550:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2554:	5a5f0072 	bpl	17c2724 <_bss_end+0x17b0a34>
    2558:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    255c:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    2560:	5f726f74 	svcpl	0x00726f74
    2564:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2568:	434f4935 	movtmi	r4, #63797	; 0xf935
    256c:	31456c74 	hvccc	22212	; 0x56c4
    2570:	4f494e36 	svcmi	0x00494e36
    2574:	5f6c7443 	svcpl	0x006c7443
    2578:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    257c:	6f697461 	svcvs	0x00697461
    2580:	0076506e 	rsbseq	r5, r6, lr, rrx
    2584:	6168436d 	cmnvs	r8, sp, ror #6
    2588:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    258c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2590:	4f433831 	svcmi	0x00433831
    2594:	5f44454c 	svcpl	0x0044454c
    2598:	70736944 	rsbsvc	r6, r3, r4, asr #18
    259c:	5f79616c 	svcpl	0x0079616c
    25a0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    25a4:	76453244 	strbvc	r3, [r5], -r4, asr #4
    25a8:	6e5a5f00 	cdpvs	15, 5, cr5, cr10, cr0, {0}
    25ac:	5f006a77 	svcpl	0x00006a77
    25b0:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    25b4:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    25b8:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    25bc:	616c7073 	smcvs	50947	; 0xc703
    25c0:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25c4:	4335656c 	teqmi	r5, #108, 10	; 0x1b000000
    25c8:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    25cc:	4f007645 	svcmi	0x00007645
    25d0:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
    25d4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    25d8:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    25dc:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    25e0:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    25e4:	5f00656c 	svcpl	0x0000656c
    25e8:	33324e5a 	teqcc	r2, #1440	; 0x5a0
    25ec:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    25f0:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    25f4:	616c7073 	smcvs	50947	; 0xc703
    25f8:	53465f79 	movtpl	r5, #28537	; 0x6f79
    25fc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2600:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2604:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2608:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    260c:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2610:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2614:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2618:	6a634b50 	bvs	18d5360 <_bss_end+0x18c3670>
    261c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2620:	53433532 	movtpl	r3, #13618	; 0x3532
    2624:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2628:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    262c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2630:	53465f72 	movtpl	r5, #28530	; 0x6f72
    2634:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2638:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    263c:	4b524534 	blmi	1493b14 <_bss_end+0x1481e24>
    2640:	5f005f53 	svcpl	0x00005f53
    2644:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2648:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    264c:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    2650:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2654:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2658:	4e363145 	rsfmism	f3, f6, f5
    265c:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2660:	704f5f6c 	subvc	r5, pc, ip, ror #30
    2664:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    2668:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    266c:	74630076 	strbtvc	r0, [r3], #-118	; 0xffffff8a
    2670:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
    2674:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2678:	53433132 	movtpl	r3, #12594	; 0x3132
    267c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2680:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2688 <CPSR_IRQ_INHIBIT+0x2608>
    2684:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2688:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    268c:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2690:	4b524534 	blmi	1493b68 <_bss_end+0x1481e78>
    2694:	5f005f53 	svcpl	0x00005f53
    2698:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    269c:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    26a0:	53465f4f 	movtpl	r5, #28495	; 0x6f4f
    26a4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    26a8:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    26ac:	534f4534 	movtpl	r4, #62772	; 0xf534
    26b0:	5a5f005f 	bpl	17c2834 <_bss_end+0x17b0b44>
    26b4:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    26b8:	4f495047 	svcmi	0x00495047
    26bc:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    26c0:	45344465 	ldrmi	r4, [r4, #-1125]!	; 0xfffffb9b
    26c4:	5a5f0076 	bpl	17c28a4 <_bss_end+0x17b0bb4>
    26c8:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    26cc:	66696853 			; <UNDEFINED> instruction: 0x66696853
    26d0:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    26d4:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    26d8:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    26dc:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    26e0:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    26e4:	3631456c 	ldrtcc	r4, [r1], -ip, ror #10
    26e8:	434f494e 	movtmi	r4, #63822	; 0xf94e
    26ec:	4f5f6c74 	svcmi	0x005f6c74
    26f0:	61726570 	cmnvs	r2, r0, ror r5
    26f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    26f8:	5f007650 	svcpl	0x00007650
    26fc:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2700:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2704:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2708:	616c7073 	smcvs	50947	; 0xc703
    270c:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2710:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2714:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2718:	4e363145 	rsfmism	f3, f6, f5
    271c:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2720:	704f5f6c 	subvc	r5, pc, ip, ror #30
    2724:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    2728:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    272c:	5a5f0076 	bpl	17c290c <_bss_end+0x17b0c1c>
    2730:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2734:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2738:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    273c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2740:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2744:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2748:	00764534 	rsbseq	r4, r6, r4, lsr r5
    274c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2750:	69464938 	stmdbvs	r6, {r3, r4, r5, r8, fp, lr}^
    2754:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2758:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    275c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2760:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    2764:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    2768:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    276c:	4b504565 	blmi	1413d08 <_bss_end+0x1402018>
    2770:	4e353163 	rsfmisz	f3, f5, f3
    2774:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2778:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    277c:	6f4d5f6e 	svcvs	0x004d5f6e
    2780:	5f006564 	svcpl	0x00006564
    2784:	31314e5a 	teqcc	r1, sl, asr lr
    2788:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    278c:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2790:	316d6574 	smccc	54868	; 0xd654
    2794:	53466731 	movtpl	r6, #26417	; 0x6731
    2798:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    279c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    27a0:	437e0045 	cmnmi	lr, #69	; 0x45
    27a4:	474e5254 	smlsldmi	r5, lr, r4, r2
    27a8:	5f53465f 	svcpl	0x0053465f
    27ac:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    27b0:	67007265 	strvs	r7, [r0, -r5, ror #4]
    27b4:	6e6f6970 			; <UNDEFINED> instruction: 0x6e6f6970
    27b8:	5f006d75 	svcpl	0x00006d75
    27bc:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    27c0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    27c4:	434f4935 	movtmi	r4, #63797	; 0xf935
    27c8:	31456c74 	hvccc	22212	; 0x56c4
    27cc:	4f494e36 	svcmi	0x00494e36
    27d0:	5f6c7443 	svcpl	0x006c7443
    27d4:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    27d8:	6f697461 	svcvs	0x00697461
    27dc:	0076506e 	rsbseq	r5, r6, lr, rrx
    27e0:	314e5a5f 	cmpcc	lr, pc, asr sl
    27e4:	50474335 	subpl	r4, r7, r5, lsr r3
    27e8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    27ec:	72445f53 	subvc	r5, r4, #332	; 0x14c
    27f0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    27f4:	76453443 	strbvc	r3, [r5], -r3, asr #8
    27f8:	47437e00 	strbmi	r7, [r3, -r0, lsl #28]
    27fc:	5f4f4950 	svcpl	0x004f4950
    2800:	445f5346 	ldrbmi	r5, [pc], #-838	; 2808 <CPSR_IRQ_INHIBIT+0x2788>
    2804:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2808:	5a5f0072 	bpl	17c29d8 <_bss_end+0x17b0ce8>
    280c:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2810:	474e5254 	smlsldmi	r5, lr, r4, r2
    2814:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2818:	65523465 	ldrbvs	r3, [r2, #-1125]	; 0xfffffb9b
    281c:	50456461 	subpl	r6, r5, r1, ror #8
    2820:	5f006a63 	svcpl	0x00006a63
    2824:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2828:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    282c:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2830:	5f6d6574 	svcpl	0x006d6574
    2834:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2838:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    283c:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
    2840:	4e6e6950 			; <UNDEFINED> instruction: 0x4e6e6950
    2844:	5a5f006f 	bpl	17c2a08 <_bss_end+0x17b0d18>
    2848:	4336324e 	teqmi	r6, #-536870908	; 0xe0000004
    284c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2850:	5f746e65 	svcpl	0x00746e65
    2854:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2858:	5f79616c 	svcpl	0x0079616c
    285c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2864 <CPSR_IRQ_INHIBIT+0x27e4>
    2860:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2864:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    2868:	005f534f 	subseq	r5, pc, pc, asr #6
    286c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2870:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    2874:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2878:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    287c:	00764530 	rsbseq	r4, r6, r0, lsr r5
    2880:	5047437e 	subpl	r4, r7, lr, ror r3
    2884:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2888:	00656c69 	rsbeq	r6, r5, r9, ror #24
    288c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2890:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    2894:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2898:	43656c69 	cmnmi	r5, #26880	; 0x6900
    289c:	00764534 	rsbseq	r4, r6, r4, lsr r5
    28a0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    28a4:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    28a8:	5f746669 	svcpl	0x00746669
    28ac:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    28b0:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    28b4:	5f53465f 	svcpl	0x0053465f
    28b8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    28bc:	4f397265 	svcmi	0x00397265
    28c0:	5f6e6570 	svcpl	0x006e6570
    28c4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    28c8:	634b5045 	movtvs	r5, #45125	; 0xb045
    28cc:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    28d0:	5f656c69 	svcpl	0x00656c69
    28d4:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    28d8:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 28e0 <CPSR_IRQ_INHIBIT+0x2860>
    28dc:	437e0065 	cmnmi	lr, #101	; 0x65
    28e0:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    28e4:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    28e8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    28ec:	5f53465f 	svcpl	0x0053465f
    28f0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    28f4:	5f007265 	svcpl	0x00007265
    28f8:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    28fc:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2900:	6f6c4335 	svcvs	0x006c4335
    2904:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2908:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    290c:	54433031 	strbpl	r3, [r3], #-49	; 0xffffffcf
    2910:	5f474e52 	svcpl	0x00474e52
    2914:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2918:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    291c:	005f534b 	subseq	r5, pc, fp, asr #6
    2920:	6946497e 	stmdbvs	r6, {r1, r2, r3, r4, r5, r6, r8, fp, lr}^
    2924:	5f00656c 	svcpl	0x0000656c
    2928:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    292c:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2930:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2934:	616c7073 	smcvs	50947	; 0xc703
    2938:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    293c:	3044656c 	subcc	r6, r4, ip, ror #10
    2940:	6f007645 	svcvs	0x00007645
    2944:	61726570 	cmnvs	r2, r0, ror r5
    2948:	20726f74 	rsbscs	r6, r2, r4, ror pc
    294c:	0077656e 	rsbseq	r6, r7, lr, ror #10
    2950:	314e5a5f 	cmpcc	lr, pc, asr sl
    2954:	6f4d4333 	svcvs	0x004d4333
    2958:	6f74696e 	svcvs	0x0074696e
    295c:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2960:	3444656c 	strbcc	r6, [r4], #-1388	; 0xfffffa94
    2964:	7e007645 	cfmadd32vc	mvax2, mvfx7, mvfx0, mvfx5
    2968:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    296c:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    2970:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2974:	5f726574 	svcpl	0x00726574
    2978:	445f5346 	ldrbmi	r5, [pc], #-838	; 2980 <CPSR_IRQ_INHIBIT+0x2900>
    297c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2980:	5a5f0072 	bpl	17c2b50 <_bss_end+0x17b0e60>
    2984:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2988:	474e5254 	smlsldmi	r5, lr, r4, r2
    298c:	5f53465f 	svcpl	0x0053465f
    2990:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2994:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2998:	5f007645 	svcpl	0x00007645
    299c:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    29a0:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    29a4:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    29a8:	616c7073 	smcvs	50947	; 0xc703
    29ac:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    29b0:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    29b4:	5f007645 	svcpl	0x00007645
    29b8:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    29bc:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    29c0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    29c4:	5f53465f 	svcpl	0x0053465f
    29c8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    29cc:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    29d0:	63007645 	movwvs	r7, #1605	; 0x645
    29d4:	6e6e6168 	powvsez	f6, f6, #0.0
    29d8:	5f006c65 	svcpl	0x00006c65
    29dc:	72747076 	rsbsvc	r7, r4, #118	; 0x76
    29e0:	6946492e 	stmdbvs	r6, {r1, r2, r3, r5, r8, fp, lr}^
    29e4:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    29e8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    29ec:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    29f0:	00726576 	rsbseq	r6, r2, r6, ror r5
    29f4:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    29f8:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    29fc:	5f746669 	svcpl	0x00746669
    2a00:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2a04:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2a08:	5f53465f 	svcpl	0x0053465f
    2a0c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2a10:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2a14:	5f534f45 	svcpl	0x00534f45
    2a18:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2a1c:	47433031 	smlaldxmi	r3, r3, r1, r0	; <UNPREDICTABLE>
    2a20:	5f4f4950 	svcpl	0x004f4950
    2a24:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2a28:	434f4935 	movtmi	r4, #63797	; 0xf935
    2a2c:	31456c74 	hvccc	22212	; 0x56c4
    2a30:	4f494e36 	svcmi	0x00494e36
    2a34:	5f6c7443 	svcpl	0x006c7443
    2a38:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    2a3c:	6f697461 	svcvs	0x00697461
    2a40:	0076506e 	rsbseq	r5, r6, lr, rrx
    2a44:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    2a48:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2a4c:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    2a50:	5f534b52 	svcpl	0x00534b52
    2a54:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2a58:	53433632 	movtpl	r3, #13874	; 0x3632
    2a5c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2a60:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2a68 <CPSR_IRQ_INHIBIT+0x29e8>
    2a64:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2a68:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2a6c:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2a70:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2a74:	65704f39 	ldrbvs	r4, [r0, #-3897]!	; 0xfffff0c7
    2a78:	69465f6e 	stmdbvs	r6, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a7c:	5045656c 	subpl	r6, r5, ip, ror #10
    2a80:	3531634b 	ldrcc	r6, [r1, #-843]!	; 0xfffffcb5
    2a84:	6c69464e 	stclvs	6, cr4, [r9], #-312	; 0xfffffec8
    2a88:	704f5f65 	subvc	r5, pc, r5, ror #30
    2a8c:	4d5f6e65 	ldclmi	14, cr6, [pc, #-404]	; 2900 <CPSR_IRQ_INHIBIT+0x2880>
    2a90:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2a94:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2a98:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    2a9c:	5f746669 	svcpl	0x00746669
    2aa0:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2aa4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2aa8:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2aac:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2ab0:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2ab4:	6a634b50 	bvs	18d57fc <_bss_end+0x18c3b0c>
    2ab8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2abc:	53433632 	movtpl	r3, #13874	; 0x3632
    2ac0:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2ac4:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2acc <CPSR_IRQ_INHIBIT+0x2a4c>
    2ac8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2acc:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2ad0:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2ad4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2ad8:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2adc:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2ae0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2ae4:	00764572 	rsbseq	r4, r6, r2, ror r5
    2ae8:	4c4f437e 	mcrrmi	3, 7, r4, pc, cr14
    2aec:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2af4 <CPSR_IRQ_INHIBIT+0x2a74>
    2af0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2af4:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2af8:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2afc:	6853437e 	ldmdavs	r3, {r1, r2, r3, r4, r5, r6, r8, r9, lr}^
    2b00:	5f746669 	svcpl	0x00746669
    2b04:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2b08:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2b0c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2b10:	5a5f0065 	bpl	17c2cac <_bss_end+0x17b0fbc>
    2b14:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2b18:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2b1c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    2b20:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2b24:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2b28:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2b2c:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2b30:	314e5a5f 	cmpcc	lr, pc, asr sl
    2b34:	50474330 	subpl	r4, r7, r0, lsr r3
    2b38:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2b3c:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2b40:	62694534 	rsbvs	r4, r9, #52, 10	; 0xd000000
    2b44:	5a5f0062 	bpl	17c2cd4 <_bss_end+0x17b0fe4>
    2b48:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2b4c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2b50:	5f746e65 	svcpl	0x00746e65
    2b54:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2b58:	5f79616c 	svcpl	0x0079616c
    2b5c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2b60:	76453444 	strbvc	r3, [r5], -r4, asr #8
    2b64:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2b68:	4f433831 	svcmi	0x00433831
    2b6c:	5f44454c 	svcpl	0x0044454c
    2b70:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2b74:	5f79616c 	svcpl	0x0079616c
    2b78:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2b7c:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    2b80:	005f534b 	subseq	r5, pc, fp, asr #6
    2b84:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2b88:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    2b8c:	5f746669 	svcpl	0x00746669
    2b90:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2b94:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2b98:	5f53465f 	svcpl	0x0053465f
    2b9c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2ba0:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2ba4:	5f007645 	svcpl	0x00007645
    2ba8:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    2bac:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2bb0:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2bb4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2bb8:	6c433565 	cfstr64vs	mvdx3, [r3], {101}	; 0x65
    2bbc:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    2bc0:	765f0076 			; <UNDEFINED> instruction: 0x765f0076
    2bc4:	2e727470 	mrccs	4, 3, r7, cr2, cr0, {3}
    2bc8:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2bcc:	5a5f0065 	bpl	17c2d68 <_bss_end+0x17b1078>
    2bd0:	4333324e 	teqmi	r3, #-536870908	; 0xe0000004
    2bd4:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    2bd8:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2bdc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2be0:	5f53465f 	svcpl	0x0053465f
    2be4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2be8:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2bec:	534b5245 	movtpl	r5, #45637	; 0xb245
    2bf0:	5a5f005f 	bpl	17c2d74 <_bss_end+0x17b1084>
    2bf4:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2bf8:	474e5254 	smlsldmi	r5, lr, r4, r2
    2bfc:	5f53465f 	svcpl	0x0053465f
    2c00:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2c04:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2c08:	5f534f45 	svcpl	0x00534f45
    2c0c:	65526d00 	ldrbvs	r6, [r2, #-3328]	; 0xfffff300
    2c10:	5f006461 	svcpl	0x00006461
    2c14:	31324e5a 	teqcc	r2, sl, asr lr
    2c18:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2c1c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2c20:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2c24:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2c28:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2c2c:	4f493565 	svcmi	0x00493565
    2c30:	456c7443 	strbmi	r7, [ip, #-1091]!	; 0xfffffbbd
    2c34:	494e3631 	stmdbmi	lr, {r0, r4, r5, r9, sl, ip, sp}^
    2c38:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2c3c:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    2c40:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2c44:	76506e6f 	ldrbvc	r6, [r0], -pc, ror #28
    2c48:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2c4c:	53433632 	movtpl	r3, #13874	; 0x3632
    2c50:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2c54:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2c5c <CPSR_IRQ_INHIBIT+0x2bdc>
    2c58:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2c5c:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2c60:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2c64:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2c68:	76453443 	strbvc	r3, [r5], -r3, asr #8
    2c6c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2c70:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    2c74:	3244656c 	subcc	r6, r4, #108, 10	; 0x1b000000
    2c78:	5f007645 	svcpl	0x00007645
    2c7c:	33324e5a 	teqcc	r2, #1440	; 0x5a0
    2c80:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2c84:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2c88:	616c7073 	smcvs	50947	; 0xc703
    2c8c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2c90:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2c94:	44726576 	ldrbtmi	r6, [r2], #-1398	; 0xfffffa8a
    2c98:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2c9c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2ca0:	4c4f4338 	mcrrmi	3, 3, r4, pc, cr8
    2ca4:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2cac <CPSR_IRQ_INHIBIT+0x2c2c>
    2ca8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2cac:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2cb0:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2cb4:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2cb8:	314e5a5f 	cmpcc	lr, pc, asr sl
    2cbc:	4c4f4338 	mcrrmi	3, 3, r4, pc, cr8
    2cc0:	445f4445 	ldrbmi	r4, [pc], #-1093	; 2cc8 <CPSR_IRQ_INHIBIT+0x2c48>
    2cc4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2cc8:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2ccc:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2cd0:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2cd4:	756f6377 	strbvc	r6, [pc, #-887]!	; 2965 <CPSR_IRQ_INHIBIT+0x28e5>
    2cd8:	7700746e 	strvc	r7, [r0, -lr, ror #8]
    2cdc:	00667562 	rsbeq	r7, r6, r2, ror #10
    2ce0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2ce4:	65534331 	ldrbvs	r4, [r3, #-817]	; 0xfffffccf
    2ce8:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2cec:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cf0:	616c7073 	smcvs	50947	; 0xc703
    2cf4:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2cf8:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2cfc:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2d00:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2d04:	314e5a5f 	cmpcc	lr, pc, asr sl
    2d08:	6f4d4333 	svcvs	0x004d4333
    2d0c:	6f74696e 	svcvs	0x0074696e
    2d10:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d14:	5735656c 	ldrpl	r6, [r5, -ip, ror #10]!
    2d18:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    2d1c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2d20:	5a5f006a 	bpl	17c2ed0 <_bss_end+0x17b11e0>
    2d24:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2d28:	4f495047 	svcmi	0x00495047
    2d2c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2d30:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    2d34:	00626269 	rsbeq	r6, r2, r9, ror #4
    2d38:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2d3c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    2d40:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2d44:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d48:	616c7073 	smcvs	50947	; 0xc703
    2d4c:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2d50:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2d54:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2d58:	4b524534 	blmi	1494230 <_bss_end+0x1482540>
    2d5c:	5f005f53 	svcpl	0x00005f53
    2d60:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2d64:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    2d68:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    2d6c:	616c7073 	smcvs	50947	; 0xc703
    2d70:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d74:	5735656c 	ldrpl	r6, [r5, -ip, ror #10]!
    2d78:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    2d7c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2d80:	5a5f006a 	bpl	17c2f30 <_bss_end+0x17b1240>
    2d84:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2d88:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2d8c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    2d90:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2d94:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2d98:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2d9c:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2da0:	314e5a5f 	cmpcc	lr, pc, asr sl
    2da4:	6f4d4333 	svcvs	0x004d4333
    2da8:	6f74696e 	svcvs	0x0074696e
    2dac:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2db0:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2db4:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2db8:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2dbc:	6946497e 	stmdbvs	r6, {r1, r2, r3, r4, r5, r6, r8, fp, lr}^
    2dc0:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2dc4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2dc8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2dcc:	00726576 	rsbseq	r6, r2, r6, ror r5
    2dd0:	314e5a5f 	cmpcc	lr, pc, asr sl
    2dd4:	50474330 	subpl	r4, r7, r0, lsr r3
    2dd8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2ddc:	34656c69 	strbtcc	r6, [r5], #-3177	; 0xfffff397
    2de0:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    2de4:	6a635045 	bvs	18d6f00 <_bss_end+0x18c5210>
    2de8:	53437e00 	movtpl	r7, #15872	; 0x3e00
    2dec:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2df0:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2df8 <CPSR_IRQ_INHIBIT+0x2d78>
    2df4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2df8:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2dfc:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2e00:	314e5a5f 	cmpcc	lr, pc, asr sl
    2e04:	6f4d4338 	svcvs	0x004d4338
    2e08:	6f74696e 	svcvs	0x0074696e
    2e0c:	53465f72 	movtpl	r5, #28530	; 0x6f72
    2e10:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2e14:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2e18:	4b524534 	blmi	14942f0 <_bss_end+0x1482600>
    2e1c:	5f005f53 	svcpl	0x00005f53
    2e20:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2e24:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    2e28:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2e2c:	4335656c 	teqmi	r5, #108, 10	; 0x1b000000
    2e30:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    2e34:	5f007645 	svcpl	0x00007645
    2e38:	31324e5a 	teqcc	r2, sl, asr lr
    2e3c:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2e40:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2e44:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2e48:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2e4c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2e50:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2e54:	5f5f0076 	svcpl	0x005f0076
    2e58:	635f6e69 	cmpvs	pc, #1680	; 0x690
    2e5c:	00677268 	rsbeq	r7, r7, r8, ror #4
    2e60:	314e5a5f 	cmpcc	lr, pc, asr sl
    2e64:	69464938 	stmdbvs	r6, {r3, r4, r5, r8, fp, lr}^
    2e68:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2e6c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2e70:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2e74:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2e78:	534f4534 	movtpl	r4, #62772	; 0xf534
    2e7c:	5a5f005f 	bpl	17c3000 <_bss_end+0x17b1310>
    2e80:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2e84:	4f495047 	svcmi	0x00495047
    2e88:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2e8c:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2e90:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2e94:	6a634b50 	bvs	18d5bdc <_bss_end+0x18c3eec>
    2e98:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2e9c:	53433032 	movtpl	r3, #12338	; 0x3032
    2ea0:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2ea4:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2ea8:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2eac:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2eb0:	3044656c 	subcc	r6, r4, ip, ror #10
    2eb4:	5f007645 	svcpl	0x00007645
    2eb8:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2ebc:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2ec0:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2ec4:	5f6d6574 	svcpl	0x006d6574
    2ec8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2ecc:	31317265 	teqcc	r1, r5, ror #4
    2ed0:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    2ed4:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2ed8:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    2edc:	5a5f0076 	bpl	17c30bc <_bss_end+0x17b13cc>
    2ee0:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2ee4:	4f495047 	svcmi	0x00495047
    2ee8:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2eec:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2ef0:	73660076 	cmnvc	r6, #118	; 0x76
    2ef4:	474e5254 	smlsldmi	r5, lr, r4, r2
    2ef8:	5f53465f 	svcpl	0x0053465f
    2efc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2f00:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    2f04:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2f08:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2f0c:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2f10:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2f14:	5f53465f 	svcpl	0x0053465f
    2f18:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2f1c:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    2f20:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2f24:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2f28:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2f2c:	5a5f0065 	bpl	17c30c8 <_bss_end+0x17b13d8>
    2f30:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2f34:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2f38:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2f3c:	6f435f74 	svcvs	0x00435f74
    2f40:	6f72746e 	svcvs	0x0072746e
    2f44:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2f48:	6e453031 	mcrvs	0, 2, r3, cr5, cr1, {1}
    2f4c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2f50:	5152495f 	cmppl	r2, pc, asr r9
    2f54:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    2f58:	30316c61 	eorscc	r6, r1, r1, ror #24
    2f5c:	5f515249 	svcpl	0x00515249
    2f60:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    2f64:	00456563 	subeq	r6, r5, r3, ror #10
    2f68:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2f6c:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    2f70:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2f74:	5f747075 	svcpl	0x00747075
    2f78:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    2f7c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    2f80:	37317265 	ldrcc	r7, [r1, -r5, ror #4]!
    2f84:	61736944 	cmnvs	r3, r4, asr #18
    2f88:	5f656c62 	svcpl	0x00656c62
    2f8c:	69736142 	ldmdbvs	r3!, {r1, r6, r8, sp, lr}^
    2f90:	52495f63 	subpl	r5, r9, #396	; 0x18c
    2f94:	334e4551 	movtcc	r4, #58705	; 0xe551
    2f98:	316c6168 	cmncc	ip, r8, ror #2
    2f9c:	51524936 	cmppl	r2, r6, lsr r9
    2fa0:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    2fa4:	535f6369 	cmppl	pc, #-1543503871	; 0xa4000001
    2fa8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    2fac:	5f004565 	svcpl	0x00004565
    2fb0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    2fb4:	6f725043 	svcvs	0x00725043
    2fb8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2fbc:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    2fc0:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    2fc4:	72433931 	subvc	r3, r3, #802816	; 0xc4000
    2fc8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2fcc:	69614d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    2fd0:	72505f6e 	subsvc	r5, r0, #440	; 0x1b8
    2fd4:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2fd8:	00764573 	rsbseq	r4, r6, r3, ror r5
    2fdc:	4f4c475f 	svcmi	0x004c475f
    2fe0:	5f4c4142 	svcpl	0x004c4142
    2fe4:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    2fe8:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    2fec:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2ff0:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2ff4:	6c744374 	ldclvs	3, cr4, [r4], #-464	; 0xfffffe30
    2ff8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2ffc:	49433132 	stmdbmi	r3, {r1, r4, r5, r8, ip, sp}^
    3000:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3004:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3008:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    300c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2e44 <CPSR_IRQ_INHIBIT+0x2dc4>
    3010:	3472656c 	ldrbtcc	r6, [r2], #-1388	; 0xfffffa94
    3014:	73676552 	cmnvc	r7, #343932928	; 0x14800000
    3018:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    301c:	34326c61 	ldrtcc	r6, [r2], #-3169	; 0xfffff39f
    3020:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3024:	70757272 	rsbsvc	r7, r5, r2, ror r2
    3028:	6f435f74 	svcvs	0x00435f74
    302c:	6f72746e 	svcvs	0x0072746e
    3030:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    3034:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    3038:	6e550045 	cdpvs	0, 5, cr0, cr5, cr5, {2}
    303c:	5f70616d 	svcpl	0x0070616d
    3040:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3044:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
    3048:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    304c:	55504700 	ldrbpl	r4, [r0, #-1792]	; 0xfffff900
    3050:	61485f31 	cmpvs	r8, r1, lsr pc
    3054:	4d00746c 	cfstrsmi	mvf7, [r0, #-432]	; 0xfffffe50
    3058:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
    305c:	6d00786f 	stcvs	8, cr7, [r0, #-444]	; 0xfffffe44
    3060:	636f7250 	cmnvs	pc, #80, 4
    3064:	5f737365 	svcpl	0x00737365
    3068:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    306c:	6165485f 	cmnvs	r5, pc, asr r8
    3070:	5a5f0064 	bpl	17c3208 <_bss_end+0x17b1518>
    3074:	36314b4e 	ldrtcc	r4, [r1], -lr, asr #22
    3078:	6f725043 	svcvs	0x00725043
    307c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3080:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3084:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3088:	65473931 	strbvs	r3, [r7, #-2353]	; 0xfffff6cf
    308c:	75435f74 	strbvc	r5, [r3, #-3956]	; 0xfffff08c
    3090:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    3094:	72505f74 	subsvc	r5, r0, #116, 30	; 0x1d0
    3098:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    309c:	00764573 	rsbseq	r4, r6, r3, ror r5
    30a0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    30a4:	465f656c 	ldrbmi	r6, [pc], -ip, ror #10
    30a8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    30ac:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    30b0:	57535f6d 	ldrbpl	r5, [r3, -sp, ror #30]
    30b4:	6e450049 	cdpvs	0, 4, cr0, cr5, cr9, {2}
    30b8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    30bc:	5152495f 	cmppl	r2, pc, asr r9
    30c0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    30c4:	49433132 	stmdbmi	r3, {r1, r4, r5, r8, ip, sp}^
    30c8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    30cc:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    30d0:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    30d4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2f0c <CPSR_IRQ_INHIBIT+0x2e8c>
    30d8:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
    30dc:	006d4532 	rsbeq	r4, sp, r2, lsr r5
    30e0:	314e5a5f 	cmpcc	lr, pc, asr sl
    30e4:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    30e8:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    30ec:	614d5f73 	hvcvs	54771	; 0xd5f3
    30f0:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    30f4:	43343172 	teqmi	r4, #-2147483620	; 0x8000001c
    30f8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    30fc:	72505f65 	subsvc	r5, r0, #404	; 0x194
    3100:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3104:	006d4573 	rsbeq	r4, sp, r3, ror r5
    3108:	4957534e 	ldmdbmi	r7, {r1, r2, r3, r6, r8, r9, ip, lr}^
    310c:	6f72505f 	svcvs	0x0072505f
    3110:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3114:	7265535f 	rsbvc	r5, r5, #2080374785	; 0x7c000001
    3118:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    311c:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
    3120:	5f657461 	svcpl	0x00657461
    3124:	636f7250 	cmnvs	pc, #80, 4
    3128:	00737365 	rsbseq	r7, r3, r5, ror #6
    312c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    3130:	50430065 	subpl	r0, r3, r5, rrx
    3134:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3138:	4d5f7373 	ldclmi	3, cr7, [pc, #-460]	; 2f74 <CPSR_IRQ_INHIBIT+0x2ef4>
    313c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    3140:	5f007265 	svcpl	0x00007265
    3144:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    3148:	6f725043 	svcvs	0x00725043
    314c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3150:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3154:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3158:	61483132 	cmpvs	r8, r2, lsr r1
    315c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3160:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    3164:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    3168:	5f6d6574 	svcpl	0x006d6574
    316c:	45495753 	strbmi	r5, [r9, #-1875]	; 0xfffff8ad
    3170:	534e3332 	movtpl	r3, #58162	; 0xe332
    3174:	465f4957 			; <UNDEFINED> instruction: 0x465f4957
    3178:	73656c69 	cmnvc	r5, #26880	; 0x6900
    317c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    3180:	65535f6d 	ldrbvs	r5, [r3, #-3949]	; 0xfffff093
    3184:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    3188:	6a6a6a65 	bvs	1a9db24 <_bss_end+0x1a8be34>
    318c:	54313152 	ldrtpl	r3, [r1], #-338	; 0xfffffeae
    3190:	5f495753 	svcpl	0x00495753
    3194:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    3198:	6f00746c 	svcvs	0x0000746c
    319c:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    31a0:	69665f64 	stmdbvs	r6!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    31a4:	0073656c 	rsbseq	r6, r3, ip, ror #10
    31a8:	55504354 	ldrbpl	r4, [r0, #-852]	; 0xfffffcac
    31ac:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    31b0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    31b4:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
    31b8:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    31bc:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    31c0:	685f7172 	ldmdavs	pc, {r1, r4, r5, r6, r8, ip, sp, lr}^	; <UNPREDICTABLE>
    31c4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    31c8:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    31cc:	455f5152 	ldrbmi	r5, [pc, #-338]	; 3082 <CPSR_IRQ_INHIBIT+0x3002>
    31d0:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    31d4:	00315f65 	eorseq	r5, r1, r5, ror #30
    31d8:	5f515249 	svcpl	0x00515249
    31dc:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    31e0:	325f656c 	subscc	r6, pc, #108, 10	; 0x1b000000
    31e4:	78614d00 	stmdavc	r1!, {r8, sl, fp, lr}^
    31e8:	6f72505f 	svcvs	0x0072505f
    31ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    31f0:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    31f4:	5f64656e 	svcpl	0x0064656e
    31f8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    31fc:	5a5f0073 	bpl	17c33d0 <_bss_end+0x17b16e0>
    3200:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    3204:	636f7250 	cmnvs	pc, #80, 4
    3208:	5f737365 	svcpl	0x00737365
    320c:	616e614d 	cmnvs	lr, sp, asr #2
    3210:	31726567 	cmncc	r2, r7, ror #10
    3214:	6d6e5538 	cfstr64vs	mvdx5, [lr, #-224]!	; 0xffffff20
    3218:	465f7061 	ldrbmi	r7, [pc], -r1, rrx
    321c:	5f656c69 	svcpl	0x00656c69
    3220:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    3224:	45746e65 	ldrbmi	r6, [r4, #-3685]!	; 0xfffff19b
    3228:	4155006a 	cmpmi	r5, sl, rrx
    322c:	49005452 	stmdbmi	r0, {r1, r4, r6, sl, ip, lr}
    3230:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3234:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3238:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    323c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 3074 <CPSR_IRQ_INHIBIT+0x2ff4>
    3240:	5f72656c 	svcpl	0x0072656c
    3244:	00676552 	rsbeq	r6, r7, r2, asr r5
    3248:	5f746547 	svcpl	0x00746547
    324c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    3250:	5f746e65 	svcpl	0x00746e65
    3254:	636f7250 	cmnvs	pc, #80, 4
    3258:	00737365 	rsbseq	r7, r3, r5, ror #6
    325c:	5f70614d 	svcpl	0x0070614d
    3260:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3264:	5f6f545f 	svcpl	0x006f545f
    3268:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    326c:	00746e65 	rsbseq	r6, r4, r5, ror #28
    3270:	5f786469 	svcpl	0x00786469
    3274:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    3278:	6e614800 	cdpvs	8, 6, cr4, cr1, cr0, {0}
    327c:	5f656c64 	svcpl	0x00656c64
    3280:	636f7250 	cmnvs	pc, #80, 4
    3284:	5f737365 	svcpl	0x00737365
    3288:	00495753 	subeq	r5, r9, r3, asr r7
    328c:	656c6c49 	strbvs	r6, [ip, #-3145]!	; 0xfffff3b7
    3290:	5f6c6167 	svcpl	0x006c6167
    3294:	65636341 	strbvs	r6, [r3, #-833]!	; 0xfffffcbf
    3298:	315f7373 	cmpcc	pc, r3, ror r3	; <UNPREDICTABLE>
    329c:	6c6c4900 			; <UNDEFINED> instruction: 0x6c6c4900
    32a0:	6c616765 	stclvs	7, cr6, [r1], #-404	; 0xfffffe6c
    32a4:	6363415f 	cmnvs	r3, #-1073741801	; 0xc0000017
    32a8:	5f737365 	svcpl	0x00737365
    32ac:	52490032 	subpl	r0, r9, #50	; 0x32
    32b0:	61425f51 	cmpvs	r2, r1, asr pc
    32b4:	5f636973 	svcpl	0x00636973
    32b8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    32bc:	5f006563 	svcpl	0x00006563
    32c0:	5f495753 	svcpl	0x00495753
    32c4:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    32c8:	5200746c 	andpl	r7, r0, #108, 8	; 0x6c000000
    32cc:	616e6e75 	smcvs	59109	; 0xe6e5
    32d0:	00656c62 	rsbeq	r6, r5, r2, ror #24
    32d4:	7361544e 	cmnvc	r1, #1308622848	; 0x4e000000
    32d8:	74535f6b 	ldrbvc	r5, [r3], #-3947	; 0xfffff095
    32dc:	00657461 	rsbeq	r7, r5, r1, ror #8
    32e0:	746e496d 	strbtvc	r4, [lr], #-2413	; 0xfffff693
    32e4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    32e8:	525f7470 	subspl	r7, pc, #112, 8	; 0x70000000
    32ec:	00736765 	rsbseq	r6, r3, r5, ror #14
    32f0:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    32f4:	6f635f64 	svcvs	0x00635f64
    32f8:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    32fc:	5a5f0072 	bpl	17c34cc <_bss_end+0x17b17dc>
    3300:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    3304:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3308:	70757272 	rsbsvc	r7, r5, r2, ror r2
    330c:	6f435f74 	svcvs	0x00435f74
    3310:	6f72746e 	svcvs	0x0072746e
    3314:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    3318:	69443131 	stmdbvs	r4, {r0, r4, r5, r8, ip, sp}^
    331c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    3320:	52495f65 	subpl	r5, r9, #404	; 0x194
    3324:	334e4551 	movtcc	r4, #58705	; 0xe551
    3328:	316c6168 	cmncc	ip, r8, ror #2
    332c:	51524930 	cmppl	r2, r0, lsr r9
    3330:	756f535f 	strbvc	r5, [pc, #-863]!	; 2fd9 <CPSR_IRQ_INHIBIT+0x2f59>
    3334:	45656372 	strbmi	r6, [r5, #-882]!	; 0xfffffc8e
    3338:	68637300 	stmdavs	r3!, {r8, r9, ip, sp, lr}^
    333c:	735f6465 	cmpvc	pc, #1694498816	; 0x65000000
    3340:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    3344:	72705f63 	rsbsvc	r5, r0, #396	; 0x18c
    3348:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    334c:	66007974 			; <UNDEFINED> instruction: 0x66007974
    3350:	5f747361 	svcpl	0x00747361
    3354:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    3358:	70757272 	rsbsvc	r7, r5, r2, ror r2
    335c:	61685f74 	smcvs	34292	; 0x85f4
    3360:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3364:	52490072 	subpl	r0, r9, #114	; 0x72
    3368:	61425f51 	cmpvs	r2, r1, asr pc
    336c:	5f636973 	svcpl	0x00636973
    3370:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    3374:	00676e69 	rsbeq	r6, r7, r9, ror #28
    3378:	61736944 	cmnvs	r3, r4, asr #18
    337c:	5f656c62 	svcpl	0x00656c62
    3380:	00515249 	subseq	r5, r1, r9, asr #4
    3384:	314e5a5f 	cmpcc	lr, pc, asr sl
    3388:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    338c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3390:	614d5f73 	hvcvs	54771	; 0xd5f3
    3394:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3398:	4d393172 	ldfmis	f3, [r9, #-456]!	; 0xfffffe38
    339c:	465f7061 	ldrbmi	r7, [pc], -r1, rrx
    33a0:	5f656c69 	svcpl	0x00656c69
    33a4:	435f6f54 	cmpmi	pc, #84, 30	; 0x150
    33a8:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    33ac:	5045746e 	subpl	r7, r5, lr, ror #8
    33b0:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    33b4:	7300656c 	movwvc	r6, #1388	; 0x56c
    33b8:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    33bc:	695f6563 	ldmdbvs	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    33c0:	746e6564 	strbtvc	r6, [lr], #-1380	; 0xfffffa9c
    33c4:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
    33c8:	4c6d0072 	stclmi	0, cr0, [sp], #-456	; 0xfffffe38
    33cc:	5f747361 	svcpl	0x00747361
    33d0:	00444950 	subeq	r4, r4, r0, asr r9
    33d4:	746e4943 	strbtvc	r4, [lr], #-2371	; 0xfffff6bd
    33d8:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    33dc:	435f7470 	cmpmi	pc, #112, 8	; 0x70000000
    33e0:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    33e4:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    33e8:	52490072 	subpl	r0, r9, #114	; 0x72
    33ec:	61425f51 	cmpvs	r2, r1, asr pc
    33f0:	5f636973 	svcpl	0x00636973
    33f4:	61736944 	cmnvs	r3, r4, asr #18
    33f8:	00656c62 	rsbeq	r6, r5, r2, ror #24
    33fc:	626d6f5a 	rsbvs	r6, sp, #360	; 0x168
    3400:	45006569 	strmi	r6, [r0, #-1385]	; 0xfffffa97
    3404:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    3408:	61425f65 	cmpvs	r2, r5, ror #30
    340c:	5f636973 	svcpl	0x00636973
    3410:	00515249 	subseq	r5, r1, r9, asr #4
    3414:	314e5a5f 	cmpcc	lr, pc, asr sl
    3418:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    341c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3420:	614d5f73 	hvcvs	54771	; 0xd5f3
    3424:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3428:	63533872 	cmpvs	r3, #7471104	; 0x720000
    342c:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    3430:	7645656c 	strbvc	r6, [r5], -ip, ror #10
    3434:	6f6f4400 	svcvs	0x006f4400
    3438:	6c656272 	sfmvs	f6, 2, [r5], #-456	; 0xfffffe38
    343c:	00305f6c 	eorseq	r5, r0, ip, ror #30
    3440:	726f6f44 	rsbvc	r6, pc, #68, 30	; 0x110
    3444:	6c6c6562 	cfstr64vs	mvdx6, [ip], #-392	; 0xfffffe78
    3448:	2f00315f 	svccs	0x0000315f
    344c:	2f746e6d 	svccs	0x00746e6d
    3450:	73552f63 	cmpvc	r5, #396	; 0x18c
    3454:	2f737265 	svccs	0x00737265
    3458:	6162754b 	cmnvs	r2, fp, asr #10
    345c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3460:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3464:	5a2f7374 	bpl	be023c <_bss_end+0xbce54c>
    3468:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 32dc <CPSR_IRQ_INHIBIT+0x325c>
    346c:	2f657461 	svccs	0x00657461
    3470:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3474:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3478:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    347c:	2f433249 	svccs	0x00433249
    3480:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3484:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    3488:	692f6372 	stmdbvs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
    348c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3490:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3494:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    3498:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 32d0 <CPSR_IRQ_INHIBIT+0x3250>
    349c:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
    34a0:	00707063 	rsbseq	r7, r0, r3, rrx
    34a4:	69636166 	stmdbvs	r3!, {r1, r2, r5, r6, r8, sp, lr}^
    34a8:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    34ac:	55504700 	ldrbpl	r4, [r0, #-1792]	; 0xfffff900
    34b0:	61485f30 	cmpvs	r8, r0, lsr pc
    34b4:	4e00746c 	cdpmi	4, 0, cr7, cr0, cr12, {3}
    34b8:	5f495753 	svcpl	0x00495753
    34bc:	69636146 	stmdbvs	r3!, {r1, r2, r6, r8, sp, lr}^
    34c0:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    34c4:	75436d00 	strbvc	r6, [r3, #-3328]	; 0xfffff300
    34c8:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    34cc:	61545f74 	cmpvs	r4, r4, ror pc
    34d0:	4e5f6b73 	vmovmi.s8	r6, d15[3]
    34d4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    34d8:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    34dc:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    34e0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    34e4:	5f747075 	svcpl	0x00747075
    34e8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    34ec:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    34f0:	36317265 	ldrtcc	r7, [r1], -r5, ror #4
    34f4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    34f8:	425f656c 	subsmi	r6, pc, #108, 10	; 0x1b000000
    34fc:	63697361 	cmnvs	r9, #-2080374783	; 0x84000001
    3500:	5152495f 	cmppl	r2, pc, asr r9
    3504:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    3508:	36316c61 	ldrtcc	r6, [r1], -r1, ror #24
    350c:	5f515249 	svcpl	0x00515249
    3510:	69736142 	ldmdbvs	r3!, {r1, r6, r8, sp, lr}^
    3514:	6f535f63 	svcvs	0x00535f63
    3518:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    351c:	5a5f0045 	bpl	17c3638 <_bss_end+0x17b1948>
    3520:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    3524:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3528:	70757272 	rsbsvc	r7, r5, r2, ror r2
    352c:	6f435f74 	svcvs	0x00435f74
    3530:	6f72746e 	svcvs	0x0072746e
    3534:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    3538:	6d453443 	cfstrdvs	mvd3, [r5, #-268]	; 0xfffffef4
    353c:	75706300 	ldrbvc	r6, [r0, #-768]!	; 0xfffffd00
    3540:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    3544:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    3548:	43324900 	teqmi	r2, #0, 18
    354c:	4950535f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    3550:	414c535f 	cmpmi	ip, pc, asr r3
    3554:	495f4556 	ldmdbmi	pc, {r1, r2, r4, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    3558:	0054494e 	subseq	r4, r4, lr, asr #18
    355c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    3560:	616e7265 	cmnvs	lr, r5, ror #4
    3564:	6f735f6c 	svcvs	0x00735f6c
    3568:	61777466 	cmnvs	r7, r6, ror #8
    356c:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    3570:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3574:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3578:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    357c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    3580:	73617400 	cmnvc	r1, #0, 8
    3584:	4946006b 	stmdbmi	r6, {r0, r1, r3, r5, r6}^
    3588:	6f435f51 	svcvs	0x00435f51
    358c:	6f72746e 	svcvs	0x0072746e
    3590:	5454006c 	ldrbpl	r0, [r4], #-108	; 0xffffff94
    3594:	5f6b7361 	svcpl	0x006b7361
    3598:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
    359c:	53007463 	movwpl	r7, #1123	; 0x463
    35a0:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    35a4:	00656c75 	rsbeq	r6, r5, r5, ror ip
    35a8:	314e5a5f 	cmpcc	lr, pc, asr sl
    35ac:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    35b0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    35b4:	614d5f73 	hvcvs	54771	; 0xd5f3
    35b8:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    35bc:	77533972 			; <UNDEFINED> instruction: 0x77533972
    35c0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    35c4:	456f545f 	strbmi	r5, [pc, #-1119]!	; 316d <CPSR_IRQ_INHIBIT+0x30ed>
    35c8:	43383150 	teqmi	r8, #80, 2
    35cc:	636f7250 	cmnvs	pc, #80, 4
    35d0:	5f737365 	svcpl	0x00737365
    35d4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    35d8:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 35e0 <CPSR_IRQ_INHIBIT+0x3560>
    35dc:	52490065 	subpl	r0, r9, #101	; 0x65
    35e0:	61425f51 	cmpvs	r2, r1, asr pc
    35e4:	5f636973 	svcpl	0x00636973
    35e8:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    35ec:	5f00656c 	svcpl	0x0000656c
    35f0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    35f4:	6f725043 	svcvs	0x00725043
    35f8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    35fc:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3600:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3604:	61483831 	cmpvs	r8, r1, lsr r8
    3608:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    360c:	6f72505f 	svcvs	0x0072505f
    3610:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3614:	4957535f 	ldmdbmi	r7, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    3618:	4e303245 	cdpmi	2, 3, cr3, cr0, cr5, {2}
    361c:	5f495753 	svcpl	0x00495753
    3620:	636f7250 	cmnvs	pc, #80, 4
    3624:	5f737365 	svcpl	0x00737365
    3628:	76726553 			; <UNDEFINED> instruction: 0x76726553
    362c:	6a656369 	bvs	195c3d8 <_bss_end+0x194a6e8>
    3630:	31526a6a 	cmpcc	r2, sl, ror #20
    3634:	57535431 	smmlarpl	r3, r1, r4, r5
    3638:	65525f49 	ldrbvs	r5, [r2, #-3913]	; 0xfffff0b7
    363c:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
    3640:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
    3644:	5f657461 	svcpl	0x00657461
    3648:	6e69614d 	powvsem	f6, f1, #5.0
    364c:	6f72505f 	svcvs	0x0072505f
    3650:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3654:	69775300 	ldmdbvs	r7!, {r8, r9, ip, lr}^
    3658:	5f686374 	svcpl	0x00686374
    365c:	4e006f54 	mcrmi	15, 0, r6, cr0, cr4, {2}
    3660:	5f495753 	svcpl	0x00495753
    3664:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    3668:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    366c:	535f6d65 	cmppl	pc, #6464	; 0x1940
    3670:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    3674:	49006563 	stmdbmi	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
    3678:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    367c:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    3680:	315f676e 	cmpcc	pc, lr, ror #14
    3684:	51524900 	cmppl	r2, r0, lsl #18
    3688:	756f535f 	strbvc	r5, [pc, #-863]!	; 3331 <CPSR_IRQ_INHIBIT+0x32b1>
    368c:	00656372 	rsbeq	r6, r5, r2, ror r3
    3690:	61766e49 	cmnvs	r6, r9, asr #28
    3694:	5f64696c 	svcpl	0x0064696c
    3698:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    369c:	4900656c 	stmdbmi	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    36a0:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    36a4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    36a8:	325f676e 	subscc	r6, pc, #28835840	; 0x1b80000
    36ac:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    36b0:	00305f4f 	eorseq	r5, r0, pc, asr #30
    36b4:	4f495047 	svcmi	0x00495047
    36b8:	4700315f 	smlsdmi	r0, pc, r1, r3	; <UNPREDICTABLE>
    36bc:	5f4f4950 	svcpl	0x004f4950
    36c0:	50470032 	subpl	r0, r7, r2, lsr r0
    36c4:	335f4f49 	cmpcc	pc, #292	; 0x124
    36c8:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    36cc:	4449505f 	strbmi	r5, [r9], #-95	; 0xffffffa1
    36d0:	73694400 	cmnvc	r9, #0, 8
    36d4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    36d8:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    36dc:	495f6369 	ldmdbmi	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    36e0:	5f005152 	svcpl	0x00005152
    36e4:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    36e8:	6f725043 	svcvs	0x00725043
    36ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    36f0:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    36f4:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    36f8:	76453443 	strbvc	r3, [r5], -r3, asr #8
    36fc:	756f7300 	strbvc	r7, [pc, #-768]!	; 3404 <CPSR_IRQ_INHIBIT+0x3384>
    3700:	5f656372 	svcpl	0x00656372
    3704:	00786469 	rsbseq	r6, r8, r9, ror #8
    3708:	5f515249 	svcpl	0x00515249
    370c:	61736944 	cmnvs	r3, r4, asr #18
    3710:	5f656c62 	svcpl	0x00656c62
    3714:	52490031 	subpl	r0, r9, #49	; 0x31
    3718:	69445f51 	stmdbvs	r4, {r0, r4, r6, r8, r9, sl, fp, ip, lr}^
    371c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    3720:	00325f65 	eorseq	r5, r2, r5, ror #30
    3724:	5f415750 	svcpl	0x00415750
    3728:	57500030 	smmlarpl	r0, r0, r0, r0
    372c:	00315f41 	eorseq	r5, r1, r1, asr #30
    3730:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3734:	552f632f 	strpl	r6, [pc, #-815]!	; 340d <CPSR_IRQ_INHIBIT+0x338d>
    3738:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    373c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3740:	6f442f61 	svcvs	0x00442f61
    3744:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3748:	2f73746e 	svccs	0x0073746e
    374c:	6f72655a 	svcvs	0x0072655a
    3750:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3754:	6178652f 	cmnvs	r8, pc, lsr #10
    3758:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    375c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3760:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3764:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3768:	2f6c656e 	svccs	0x006c656e
    376c:	2f637273 	svccs	0x00637273
    3770:	6e69616d 	powvsez	f6, f1, #5.0
    3774:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    3778:	67615000 	strbvs	r5, [r1, -r0]!
    377c:	756f4365 	strbvc	r4, [pc, #-869]!	; 341f <CPSR_IRQ_INHIBIT+0x339f>
    3780:	5000746e 	andpl	r7, r0, lr, ror #8
    3784:	6e696761 	cdpvs	7, 6, cr6, cr9, cr1, {3}
    3788:	6d654d67 	stclvs	13, cr4, [r5, #-412]!	; 0xfffffe64
    378c:	5379726f 	cmnpl	r9, #-268435450	; 0xf0000006
    3790:	00657a69 	rsbeq	r7, r5, r9, ror #20
    3794:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    3798:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    379c:	656b5f00 	strbvs	r5, [fp, #-3840]!	; 0xfffff100
    37a0:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    37a4:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    37a8:	6f4c006e 	svcvs	0x004c006e
    37ac:	6d654d77 	stclvs	13, cr4, [r5, #-476]!	; 0xfffffe24
    37b0:	0079726f 	rsbseq	r7, r9, pc, ror #4
    37b4:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    37b8:	6f6d654d 	svcvs	0x006d654d
    37bc:	68007972 	stmdavs	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    37c0:	00327264 	eorseq	r7, r2, r4, ror #4
    37c4:	6f6c6c41 	svcvs	0x006c6c41
    37c8:	61505f63 	cmpvs	r0, r3, ror #30
    37cc:	46006567 	strmi	r6, [r0], -r7, ror #10
    37d0:	5f656572 	svcpl	0x00656572
    37d4:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    37d8:	72614d00 	rsbvc	r4, r1, #0, 26
    37dc:	506d006b 	rsbpl	r0, sp, fp, rrx
    37e0:	5f656761 	svcpl	0x00656761
    37e4:	6d746942 			; <UNDEFINED> instruction: 0x6d746942
    37e8:	5f007061 	svcpl	0x00007061
    37ec:	424f4c47 	submi	r4, pc, #18176	; 0x4700
    37f0:	5f5f4c41 	svcpl	0x005f4c41
    37f4:	5f627573 	svcpl	0x00627573
    37f8:	4b735f49 	blmi	1cdb524 <_bss_end+0x1cc9834>
    37fc:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3800:	6d654d6c 	stclvs	13, cr4, [r5, #-432]!	; 0xfffffe50
    3804:	75686300 	strbvc	r6, [r8, #-768]!	; 0xfffffd00
    3808:	5f006b6e 	svcpl	0x00006b6e
    380c:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    3810:	67615043 	strbvs	r5, [r1, -r3, asr #32]!
    3814:	614d5f65 	cmpvs	sp, r5, ror #30
    3818:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    381c:	41303172 	teqmi	r0, r2, ror r1
    3820:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    3824:	6761505f 			; <UNDEFINED> instruction: 0x6761505f
    3828:	00764565 	rsbseq	r4, r6, r5, ror #10
    382c:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    3830:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    3834:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3838:	6165485f 	cmnvs	r5, pc, asr r8
    383c:	614d5f70 	hvcvs	54768	; 0xd5f0
    3840:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3844:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
    3848:	5a5f0076 	bpl	17c3a28 <_bss_end+0x17b1d38>
    384c:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    3850:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    3854:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3858:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    385c:	72614d34 	rsbvc	r4, r1, #52, 26	; 0xd00
    3860:	626a456b 	rsbvs	r4, sl, #448790528	; 0x1ac00000
    3864:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3868:	50433331 	subpl	r3, r3, r1, lsr r3
    386c:	5f656761 	svcpl	0x00656761
    3870:	616e614d 	cmnvs	lr, sp, asr #2
    3874:	43726567 	cmnmi	r2, #432013312	; 0x19c00000
    3878:	00764534 	rsbseq	r4, r6, r4, lsr r5
    387c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3880:	552f632f 	strpl	r6, [pc, #-815]!	; 3559 <CPSR_IRQ_INHIBIT+0x34d9>
    3884:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3888:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    388c:	6f442f61 	svcvs	0x00442f61
    3890:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3894:	2f73746e 	svccs	0x0073746e
    3898:	6f72655a 	svcvs	0x0072655a
    389c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    38a0:	6178652f 	cmnvs	r8, pc, lsr #10
    38a4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    38a8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    38ac:	4332492d 	teqmi	r2, #737280	; 0xb4000
    38b0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    38b4:	2f6c656e 	svccs	0x006c656e
    38b8:	2f637273 	svccs	0x00637273
    38bc:	6f6d656d 	svcvs	0x006d656d
    38c0:	6b2f7972 	blvs	be1e90 <_bss_end+0xbd01a0>
    38c4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    38c8:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    38cc:	632e7061 			; <UNDEFINED> instruction: 0x632e7061
    38d0:	5f007070 	svcpl	0x00007070
    38d4:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    38d8:	67615043 	strbvs	r5, [r1, -r3, asr #32]!
    38dc:	614d5f65 	cmpvs	sp, r5, ror #30
    38e0:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    38e4:	72463972 	subvc	r3, r6, #1867776	; 0x1c8000
    38e8:	505f6565 	subspl	r6, pc, r5, ror #10
    38ec:	45656761 	strbmi	r6, [r5, #-1889]!	; 0xfffff89f
    38f0:	5043006a 	subpl	r0, r3, sl, rrx
    38f4:	5f656761 	svcpl	0x00656761
    38f8:	616e614d 	cmnvs	lr, sp, asr #2
    38fc:	00726567 	rsbseq	r6, r2, r7, ror #10
    3900:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3904:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    3908:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    390c:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    3910:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    3914:	5f495f62 	svcpl	0x00495f62
    3918:	67615073 			; <UNDEFINED> instruction: 0x67615073
    391c:	614d5f65 	cmpvs	sp, r5, ror #30
    3920:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3924:	6d2f0072 	stcvs	0, cr0, [pc, #-456]!	; 3764 <CPSR_IRQ_INHIBIT+0x36e4>
    3928:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    392c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3930:	4b2f7372 	blmi	be0700 <_bss_end+0xbcea10>
    3934:	2f616275 	svccs	0x00616275
    3938:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    393c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3940:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3944:	614d6f72 	hvcvs	55026	; 0xd6f2
    3948:	652f6574 	strvs	r6, [pc, #-1396]!	; 33dc <CPSR_IRQ_INHIBIT+0x335c>
    394c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3950:	2f73656c 	svccs	0x0073656c
    3954:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3958:	6b2f4332 	blvs	bd4628 <_bss_end+0xbc2938>
    395c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3960:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3964:	656d2f63 	strbvs	r2, [sp, #-3939]!	; 0xfffff09d
    3968:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    396c:	6761702f 	strbvs	r7, [r1, -pc, lsr #32]!
    3970:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    3974:	75007070 	strvc	r7, [r0, #-112]	; 0xffffff90
    3978:	00646573 	rsbeq	r6, r4, r3, ror r5
    397c:	314e5a5f 	cmpcc	lr, pc, asr sl
    3980:	61504333 	cmpvs	r0, r3, lsr r3
    3984:	4d5f6567 	cfldr64mi	mvdx6, [pc, #-412]	; 37f0 <CPSR_IRQ_INHIBIT+0x3770>
    3988:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    398c:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    3990:	66007645 	strvs	r7, [r0], -r5, asr #12
    3994:	70636e75 	rsbvc	r6, r3, r5, ror lr
    3998:	69007274 	stmdbvs	r0, {r2, r4, r5, r6, r9, ip, sp, lr}
    399c:	69665f73 	stmdbvs	r6!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    39a0:	5f747372 	svcpl	0x00747372
    39a4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    39a8:	6c6c4100 	stfvse	f4, [ip], #-0
    39ac:	543c636f 	ldrtpl	r6, [ip], #-879	; 0xfffffc91
    39b0:	6b736154 	blvs	1cdbf08 <_bss_end+0x1cca218>
    39b4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    39b8:	3e746375 	mrccc	3, 3, r6, cr4, cr5, {3}
    39bc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    39c0:	50433631 	subpl	r3, r3, r1, lsr r6
    39c4:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    39c8:	4d5f7373 	ldclmi	3, cr7, [pc, #-460]	; 3804 <CPSR_IRQ_INHIBIT+0x3784>
    39cc:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    39d0:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    39d4:	5f007645 	svcpl	0x00007645
    39d8:	30324e5a 	eorscc	r4, r2, sl, asr lr
    39dc:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    39e0:	5f6c656e 	svcpl	0x006c656e
    39e4:	70616548 	rsbvc	r6, r1, r8, asr #10
    39e8:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    39ec:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    39f0:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    39f4:	3149636f 	cmpcc	r9, pc, ror #6
    39f8:	72504338 	subsvc	r4, r0, #56, 6	; 0xe0000000
    39fc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3a00:	694c5f73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3a04:	4e5f7473 	mrcmi	4, 2, r7, cr15, cr3, {3}
    3a08:	4565646f 	strbmi	r6, [r5, #-1135]!	; 0xfffffb91
    3a0c:	5f545045 	svcpl	0x00545045
    3a10:	475f0076 			; <UNDEFINED> instruction: 0x475f0076
    3a14:	41424f4c 	cmpmi	r2, ip, asr #30
    3a18:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
    3a1c:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    3a20:	7250735f 	subsvc	r7, r0, #2080374785	; 0x7c000001
    3a24:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3a28:	72674d73 	rsbvc	r4, r7, #7360	; 0x1cc0
    3a2c:	72617400 	rsbvc	r7, r1, #0, 8
    3a30:	00746567 	rsbseq	r6, r4, r7, ror #10
    3a34:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3a38:	552f632f 	strpl	r6, [pc, #-815]!	; 3711 <CPSR_IRQ_INHIBIT+0x3691>
    3a3c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3a40:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3a44:	6f442f61 	svcvs	0x00442f61
    3a48:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3a4c:	2f73746e 	svccs	0x0073746e
    3a50:	6f72655a 	svcvs	0x0072655a
    3a54:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3a58:	6178652f 	cmnvs	r8, pc, lsr #10
    3a5c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3a60:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3a64:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3a68:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3a6c:	2f6c656e 	svccs	0x006c656e
    3a70:	2f637273 	svccs	0x00637273
    3a74:	636f7270 	cmnvs	pc, #112, 4
    3a78:	2f737365 	svccs	0x00737365
    3a7c:	636f7270 	cmnvs	pc, #112, 4
    3a80:	5f737365 	svcpl	0x00737365
    3a84:	616e616d 	cmnvs	lr, sp, ror #2
    3a88:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    3a8c:	00707063 	rsbseq	r7, r0, r3, rrx
    3a90:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    3a94:	00746e65 	rsbseq	r6, r4, r5, ror #28
    3a98:	6f6c6c41 	svcvs	0x006c6c41
    3a9c:	50433c63 	subpl	r3, r3, r3, ror #24
    3aa0:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3aa4:	4c5f7373 	mrrcmi	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
    3aa8:	5f747369 	svcpl	0x00747369
    3aac:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    3ab0:	6966003e 	stmdbvs	r6!, {r1, r2, r3, r4, r5}^
    3ab4:	7000656c 	andvc	r6, r0, ip, ror #10
    3ab8:	6e636f72 	mcrvs	15, 3, r6, cr3, cr2, {3}
    3abc:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3ac0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    3ac4:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    3ac8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3acc:	6165485f 	cmnvs	r5, pc, asr r8
    3ad0:	614d5f70 	hvcvs	54768	; 0xd5f0
    3ad4:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3ad8:	6c413572 	cfstr64vs	mvdx3, [r1], {114}	; 0x72
    3adc:	49636f6c 	stmdbmi	r3!, {r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    3ae0:	54543231 	ldrbpl	r3, [r4], #-561	; 0xfffffdcf
    3ae4:	5f6b7361 	svcpl	0x006b7361
    3ae8:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
    3aec:	45457463 	strbmi	r7, [r5, #-1123]	; 0xfffffb9d
    3af0:	765f5450 			; <UNDEFINED> instruction: 0x765f5450
    3af4:	63767300 	cmnvs	r6, #0, 6
    3af8:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    3afc:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3b00:	2f632f74 	svccs	0x00632f74
    3b04:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3b08:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3b0c:	442f6162 	strtmi	r6, [pc], #-354	; 3b14 <CPSR_IRQ_INHIBIT+0x3a94>
    3b10:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3b14:	73746e65 	cmnvc	r4, #1616	; 0x650
    3b18:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3b1c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3b20:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3b24:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3b28:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3b2c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3b30:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3b34:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3b38:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3b3c:	6f72702f 	svcvs	0x0072702f
    3b40:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3b44:	6977732f 	ldmdbvs	r7!, {r0, r1, r2, r3, r5, r8, r9, ip, sp, lr}^
    3b48:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
    3b4c:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
    3b50:	53412055 	movtpl	r2, #4181	; 0x1055
    3b54:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
    3b58:	6d2f0038 	stcvs	0, cr0, [pc, #-224]!	; 3a80 <CPSR_IRQ_INHIBIT+0x3a00>
    3b5c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3b60:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3b64:	4b2f7372 	blmi	be0934 <_bss_end+0xbcec44>
    3b68:	2f616275 	svccs	0x00616275
    3b6c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3b70:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3b74:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3b78:	614d6f72 	hvcvs	55026	; 0xd6f2
    3b7c:	652f6574 	strvs	r6, [pc, #-1396]!	; 3610 <CPSR_IRQ_INHIBIT+0x3590>
    3b80:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3b84:	2f73656c 	svccs	0x0073656c
    3b88:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3b8c:	6b2f4332 	blvs	bd485c <_bss_end+0xbc2b6c>
    3b90:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3b94:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3b98:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    3b9c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    3ba0:	74630073 	strbtvc	r0, [r3], #-115	; 0xffffff8d
    3ba4:	705f726f 	subsvc	r7, pc, pc, ror #4
    3ba8:	5f007274 	svcpl	0x00007274
    3bac:	5f737362 	svcpl	0x00737362
    3bb0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    3bb4:	5f5f0074 	svcpl	0x005f0074
    3bb8:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
    3bbc:	53494c5f 	movtpl	r4, #40031	; 0x9c5f
    3bc0:	005f5f54 	subseq	r5, pc, r4, asr pc	; <UNPREDICTABLE>
    3bc4:	54445f5f 	strbpl	r5, [r4], #-3935	; 0xfffff0a1
    3bc8:	455f524f 	ldrbmi	r5, [pc, #-591]	; 3981 <CPSR_IRQ_INHIBIT+0x3901>
    3bcc:	5f5f444e 	svcpl	0x005f444e
    3bd0:	70635f00 	rsbvc	r5, r3, r0, lsl #30
    3bd4:	68735f70 	ldmdavs	r3!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3bd8:	6f647475 	svcvs	0x00647475
    3bdc:	5f006e77 	svcpl	0x00006e77
    3be0:	5f737362 	svcpl	0x00737362
    3be4:	00646e65 	rsbeq	r6, r4, r5, ror #28
    3be8:	54445f5f 	strbpl	r5, [r4], #-3935	; 0xfffff0a1
    3bec:	4c5f524f 	lfmmi	f5, 2, [pc], {79}	; 0x4f
    3bf0:	5f545349 	svcpl	0x00545349
    3bf4:	7464005f 	strbtvc	r0, [r4], #-95	; 0xffffffa1
    3bf8:	705f726f 	subsvc	r7, pc, pc, ror #4
    3bfc:	2f007274 	svccs	0x00007274
    3c00:	2f746e6d 	svccs	0x00746e6d
    3c04:	73552f63 	cmpvc	r5, #396	; 0x18c
    3c08:	2f737265 	svccs	0x00737265
    3c0c:	6162754b 	cmnvs	r2, fp, asr #10
    3c10:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3c14:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3c18:	5a2f7374 	bpl	be09f0 <_bss_end+0xbced00>
    3c1c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3a90 <CPSR_IRQ_INHIBIT+0x3a10>
    3c20:	2f657461 	svccs	0x00657461
    3c24:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3c28:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3c2c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3c30:	2f433249 	svccs	0x00433249
    3c34:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3c38:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    3c3c:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    3c40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3c44:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
    3c48:	5f007070 	svcpl	0x00007070
    3c4c:	4f54435f 	svcmi	0x0054435f
    3c50:	4e455f52 	mcrmi	15, 2, r5, cr5, cr2, {2}
    3c54:	005f5f44 	subseq	r5, pc, r4, asr #30
    3c58:	735f635f 	cmpvc	pc, #2080374785	; 0x7c000001
    3c5c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3c60:	5f007075 	svcpl	0x00007075
    3c64:	5f707063 	svcpl	0x00707063
    3c68:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    3c6c:	00707574 	rsbseq	r7, r0, r4, ror r5
    3c70:	74706e66 	ldrbtvc	r6, [r0], #-3686	; 0xfffff19a
    3c74:	5a5f0072 	bpl	17c3e44 <_bss_end+0x17b2154>
    3c78:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    3c7c:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    3c80:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    3c84:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    3c88:	74655339 	strbtvc	r5, [r5], #-825	; 0xfffffcc7
    3c8c:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    3c90:	74456c65 	strbvc	r6, [r5], #-3173	; 0xfffff39b
    3c94:	72006274 	andvc	r6, r0, #116, 4	; 0x40000007
    3c98:	0066646e 	rsbeq	r6, r6, lr, ror #8
    3c9c:	7373656d 	cmnvc	r3, #457179136	; 0x1b400000
    3ca0:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    3ca4:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
    3ca8:	00667562 	rsbeq	r7, r6, r2, ror #10
    3cac:	50395a5f 	eorspl	r5, r9, pc, asr sl
    3cb0:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3cb4:	335f7373 	cmpcc	pc, #-872415231	; 0xcc000001
    3cb8:	6d2f0076 	stcvs	0, cr0, [pc, #-472]!	; 3ae8 <CPSR_IRQ_INHIBIT+0x3a68>
    3cbc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3cc0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3cc4:	4b2f7372 	blmi	be0a94 <_bss_end+0xbceda4>
    3cc8:	2f616275 	svccs	0x00616275
    3ccc:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3cd0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3cd4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3cd8:	614d6f72 	hvcvs	55026	; 0xd6f2
    3cdc:	652f6574 	strvs	r6, [pc, #-1396]!	; 3770 <CPSR_IRQ_INHIBIT+0x36f0>
    3ce0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3ce4:	2f73656c 	svccs	0x0073656c
    3ce8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3cec:	6b2f4332 	blvs	bd49bc <_bss_end+0xbc2ccc>
    3cf0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3cf4:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3cf8:	65742f63 	ldrbvs	r2, [r4, #-3939]!	; 0xfffff09d
    3cfc:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    3d00:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3d04:	73657373 	cmnvc	r5, #-872415231	; 0xcc000001
    3d08:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    3d0c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3d10:	4f433331 	svcmi	0x00433331
    3d14:	5f44454c 	svcpl	0x0044454c
    3d18:	70736944 	rsbsvc	r6, r3, r4, asr #18
    3d1c:	3879616c 	ldmdacc	r9!, {r2, r3, r5, r6, r8, sp, lr}^
    3d20:	5f747550 	svcpl	0x00747550
    3d24:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    3d28:	63747445 	cmnvs	r4, #1157627904	; 0x45000000
    3d2c:	4f437e00 	svcmi	0x00437e00
    3d30:	5f44454c 	svcpl	0x0044454c
    3d34:	70736944 	rsbsvc	r6, r3, r4, asr #18
    3d38:	0079616c 	rsbseq	r6, r9, ip, ror #2
    3d3c:	314e5a5f 	cmpcc	lr, pc, asr sl
    3d40:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    3d44:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3d4c <CPSR_IRQ_INHIBIT+0x3ccc>
    3d48:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3d4c:	43357961 	teqmi	r5, #1589248	; 0x184000
    3d50:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    3d54:	5f006245 	svcpl	0x00006245
    3d58:	314b4e5a 	cmpcc	fp, sl, asr lr
    3d5c:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    3d60:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3d68 <CPSR_IRQ_INHIBIT+0x3ce8>
    3d64:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3d68:	49397961 	ldmdbmi	r9!, {r0, r5, r6, r8, fp, ip, sp, lr}
    3d6c:	704f5f73 	subvc	r5, pc, r3, ror pc	; <UNPREDICTABLE>
    3d70:	64656e65 	strbtvs	r6, [r5], #-3685	; 0xfffff19b
    3d74:	50007645 	andpl	r7, r0, r5, asr #12
    3d78:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3d7c:	365f7373 			; <UNDEFINED> instruction: 0x365f7373
    3d80:	61486d00 	cmpvs	r8, r0, lsl #26
    3d84:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3d88:	395a5f00 	ldmdbcc	sl, {r8, r9, sl, fp, ip, lr}^
    3d8c:	636f7250 	cmnvs	pc, #80, 4
    3d90:	5f737365 	svcpl	0x00737365
    3d94:	5f007636 	svcpl	0x00007636
    3d98:	7250395a 	subsvc	r3, r0, #1474560	; 0x168000
    3d9c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3da0:	76345f73 	shsub16vc	r5, r4, r3
    3da4:	73696400 	cmnvc	r9, #0, 8
    3da8:	656d0070 	strbvs	r0, [sp, #-112]!	; 0xffffff90
    3dac:	67617373 			; <UNDEFINED> instruction: 0x67617373
    3db0:	5a5f0065 	bpl	17c3f4c <_bss_end+0x17b225c>
    3db4:	6f725039 	svcvs	0x00725039
    3db8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3dbc:	0076315f 	rsbseq	r3, r6, pc, asr r1
    3dc0:	636f7250 	cmnvs	pc, #80, 4
    3dc4:	5f737365 	svcpl	0x00737365
    3dc8:	72500031 	subsvc	r0, r0, #49	; 0x31
    3dcc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3dd0:	00325f73 	eorseq	r5, r2, r3, ror pc
    3dd4:	636f7250 	cmnvs	pc, #80, 4
    3dd8:	5f737365 	svcpl	0x00737365
    3ddc:	72500033 	subsvc	r0, r0, #51	; 0x33
    3de0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3de4:	00355f73 	eorseq	r5, r5, r3, ror pc
    3de8:	314e5a5f 	cmpcc	lr, pc, asr sl
    3dec:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    3df0:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3df8 <CPSR_IRQ_INHIBIT+0x3d78>
    3df4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3df8:	30317961 	eorscc	r7, r1, r1, ror #18
    3dfc:	5f747550 	svcpl	0x00747550
    3e00:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    3e04:	7445676e 	strbvc	r6, [r5], #-1902	; 0xfffff892
    3e08:	634b5074 	movtvs	r5, #45172	; 0xb074
    3e0c:	395a5f00 	ldmdbcc	sl, {r8, r9, sl, fp, ip, lr}^
    3e10:	636f7250 	cmnvs	pc, #80, 4
    3e14:	5f737365 	svcpl	0x00737365
    3e18:	5f007635 	svcpl	0x00007635
    3e1c:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    3e20:	454c4f43 	strbmi	r4, [ip, #-3907]	; 0xfffff0bd
    3e24:	69445f44 	stmdbvs	r4, {r2, r6, r8, r9, sl, fp, ip, lr}^
    3e28:	616c7073 	smcvs	50947	; 0xc703
    3e2c:	6c463479 	cfstrdvs	mvd3, [r6], {121}	; 0x79
    3e30:	76457069 	strbvc	r7, [r5], -r9, rrx
    3e34:	62647200 	rsbvs	r7, r4, #0, 4
    3e38:	50006675 	andpl	r6, r0, r5, ror r6
    3e3c:	535f7475 	cmppl	pc, #1962934272	; 0x75000000
    3e40:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    3e44:	5a5f0067 	bpl	17c3fe8 <_bss_end+0x17b22f8>
    3e48:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    3e4c:	44454c4f 	strbmi	r4, [r5], #-3151	; 0xfffff3b1
    3e50:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    3e54:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    3e58:	76453444 	strbvc	r3, [r5], -r4, asr #8
    3e5c:	395a5f00 	ldmdbcc	sl, {r8, r9, sl, fp, ip, lr}^
    3e60:	636f7250 	cmnvs	pc, #80, 4
    3e64:	5f737365 	svcpl	0x00737365
    3e68:	50007632 	andpl	r7, r0, r2, lsr r6
    3e6c:	435f7475 	cmpmi	pc, #1962934272	; 0x75000000
    3e70:	00726168 	rsbseq	r6, r2, r8, ror #2
    3e74:	314e5a5f 	cmpcc	lr, pc, asr sl
    3e78:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    3e7c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 3e84 <CPSR_IRQ_INHIBIT+0x3e04>
    3e80:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    3e84:	34437961 	strbcc	r7, [r3], #-2401	; 0xfffff69f
    3e88:	634b5045 	movtvs	r5, #45125	; 0xb045
    3e8c:	6f725000 	svcvs	0x00725000
    3e90:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3e94:	6f00345f 	svcvs	0x0000345f
    3e98:	006e6570 	rsbeq	r6, lr, r0, ror r5
    3e9c:	67365a5f 			; <UNDEFINED> instruction: 0x67365a5f
    3ea0:	69707465 	ldmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    3ea4:	66007664 	strvs	r7, [r0], -r4, ror #12
    3ea8:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
    3eac:	00656d61 	rsbeq	r6, r5, r1, ror #26
    3eb0:	69355a5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}
    3eb4:	6c74636f 	ldclvs	3, cr6, [r4], #-444	; 0xfffffe44
    3eb8:	4e36316a 	rsfmisz	f3, f6, #2.0
    3ebc:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    3ec0:	704f5f6c 	subvc	r5, pc, ip, ror #30
    3ec4:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    3ec8:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    3ecc:	5a5f0076 	bpl	17c40ac <_bss_end+0x17b23bc>
    3ed0:	65706f34 	ldrbvs	r6, [r0, #-3892]!	; 0xfffff0cc
    3ed4:	634b506e 	movtvs	r5, #45166	; 0xb06e
    3ed8:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    3edc:	5f656c69 	svcpl	0x00656c69
    3ee0:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    3ee4:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 3eec <CPSR_IRQ_INHIBIT+0x3e6c>
    3ee8:	5a5f0065 	bpl	17c4084 <_bss_end+0x17b2394>
    3eec:	69727735 	ldmdbvs	r2!, {r0, r2, r4, r5, r8, r9, sl, ip, sp, lr}^
    3ef0:	506a6574 	rsbpl	r6, sl, r4, ror r5
    3ef4:	006a634b 	rsbeq	r6, sl, fp, asr #6
    3ef8:	61726170 	cmnvs	r2, r0, ror r1
    3efc:	5a5f006d 	bpl	17c40b8 <_bss_end+0x17b23c8>
    3f00:	6f6c6335 	svcvs	0x006c6335
    3f04:	006a6573 	rsbeq	r6, sl, r3, ror r5
    3f08:	74636f69 	strbtvc	r6, [r3], #-3945	; 0xfffff097
    3f0c:	6572006c 	ldrbvs	r0, [r2, #-108]!	; 0xffffff94
    3f10:	646f6374 	strbtvs	r6, [pc], #-884	; 3f18 <CPSR_IRQ_INHIBIT+0x3e98>
    3f14:	5a5f0065 	bpl	17c40b0 <_bss_end+0x17b23c0>
    3f18:	61657234 	cmnvs	r5, r4, lsr r2
    3f1c:	63506a64 	cmpvs	r0, #100, 20	; 0x64000
    3f20:	6472006a 	ldrbtvs	r0, [r2], #-106	; 0xffffff96
    3f24:	006d756e 	rsbeq	r7, sp, lr, ror #10
    3f28:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3f2c:	552f632f 	strpl	r6, [pc, #-815]!	; 3c05 <CPSR_IRQ_INHIBIT+0x3b85>
    3f30:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3f34:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3f38:	6f442f61 	svcvs	0x00442f61
    3f3c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3f40:	2f73746e 	svccs	0x0073746e
    3f44:	6f72655a 	svcvs	0x0072655a
    3f48:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3f4c:	6178652f 	cmnvs	r8, pc, lsr #10
    3f50:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3f54:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3f58:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3f5c:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    3f60:	2f62696c 	svccs	0x0062696c
    3f64:	2f637273 	svccs	0x00637273
    3f68:	66647473 			; <UNDEFINED> instruction: 0x66647473
    3f6c:	2e656c69 	cdpcs	12, 6, cr6, cr5, cr9, {3}
    3f70:	00707063 	rsbseq	r7, r0, r3, rrx
    3f74:	70746567 	rsbsvc	r6, r4, r7, ror #10
    3f78:	6f006469 	svcvs	0x00006469
    3f7c:	61726570 	cmnvs	r2, r0, ror r5
    3f80:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3f84:	6e727700 	cdpvs	7, 7, cr7, cr2, cr0, {0}
    3f88:	63006d75 	movwvs	r6, #3445	; 0xd75
    3f8c:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    3f90:	73656400 	cmnvc	r5, #0, 8
    3f94:	7a620074 	bvc	188416c <_bss_end+0x187247c>
    3f98:	006f7265 	rsbeq	r7, pc, r5, ror #4
    3f9c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3fa0:	552f632f 	strpl	r6, [pc, #-815]!	; 3c79 <CPSR_IRQ_INHIBIT+0x3bf9>
    3fa4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3fa8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3fac:	6f442f61 	svcvs	0x00442f61
    3fb0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3fb4:	2f73746e 	svccs	0x0073746e
    3fb8:	6f72655a 	svcvs	0x0072655a
    3fbc:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3fc0:	6178652f 	cmnvs	r8, pc, lsr #10
    3fc4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3fc8:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3fcc:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3fd0:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    3fd4:	2f62696c 	svccs	0x0062696c
    3fd8:	2f637273 	svccs	0x00637273
    3fdc:	73647473 	cmnvc	r4, #1929379840	; 0x73000000
    3fe0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    3fe4:	70632e67 	rsbvc	r2, r3, r7, ror #28
    3fe8:	5a5f0070 	bpl	17c41b0 <_bss_end+0x17b24c0>
    3fec:	657a6235 	ldrbvs	r6, [sl, #-565]!	; 0xfffffdcb
    3ff0:	76506f72 	usub16vc	r6, r0, r2
    3ff4:	5a5f0069 	bpl	17c41a0 <_bss_end+0x17b24b0>
    3ff8:	6f746134 	svcvs	0x00746134
    3ffc:	634b5069 	movtvs	r5, #45161	; 0xb069
    4000:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    4004:	00747364 	rsbseq	r7, r4, r4, ror #6
    4008:	6d365a5f 	vldmdbvs	r6!, {s10-s104}
    400c:	70636d65 	rsbvc	r6, r3, r5, ror #26
    4010:	764b5079 			; <UNDEFINED> instruction: 0x764b5079
    4014:	00697650 	rsbeq	r7, r9, r0, asr r6
    4018:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
    401c:	73007970 	movwvc	r7, #2416	; 0x970
    4020:	656c7274 	strbvs	r7, [ip, #-628]!	; 0xfffffd8c
    4024:	5a5f006e 	bpl	17c41e4 <_bss_end+0x17b24f4>
    4028:	72747337 	rsbsvc	r7, r4, #-603979776	; 0xdc000000
    402c:	706d636e 	rsbvc	r6, sp, lr, ror #6
    4030:	53634b50 	cmnpl	r3, #80, 22	; 0x14000
    4034:	00695f30 	rsbeq	r5, r9, r0, lsr pc
    4038:	73365a5f 	teqvc	r6, #389120	; 0x5f000
    403c:	656c7274 	strbvs	r7, [ip, #-628]!	; 0xfffffd8c
    4040:	634b506e 	movtvs	r5, #45166	; 0xb06e
    4044:	6f746100 	svcvs	0x00746100
    4048:	5a5f0069 	bpl	17c41f4 <_bss_end+0x17b2504>
    404c:	72747337 	rsbsvc	r7, r4, #-603979776	; 0xdc000000
    4050:	7970636e 	ldmdbvc	r0!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    4054:	4b506350 	blmi	141cd9c <_bss_end+0x140b0ac>
    4058:	73006963 	movwvc	r6, #2403	; 0x963
    405c:	636e7274 	cmnvs	lr, #116, 4	; 0x40000007
    4060:	7300706d 	movwvc	r7, #109	; 0x6d
    4064:	636e7274 	cmnvs	lr, #116, 4	; 0x40000007
    4068:	6d007970 	vstrvs.16	s14, [r0, #-224]	; 0xffffff20	; <UNPREDICTABLE>
    406c:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    4070:	656d0079 	strbvs	r0, [sp, #-121]!	; 0xffffff87
    4074:	6372736d 	cmnvs	r2, #-1275068415	; 0xb4000001
    4078:	345a5f00 	ldrbcc	r5, [sl], #-3840	; 0xfffff100
    407c:	616f7469 	cmnvs	pc, r9, ror #8
    4080:	6a63506a 	bvs	18d8230 <_bss_end+0x18c6540>
    4084:	69445400 	stmdbvs	r4, {sl, ip, lr}^
    4088:	616c7073 	smcvs	50947	; 0xc703
    408c:	6f4e5f79 	svcvs	0x004e5f79
    4090:	7261506e 	rsbvc	r5, r1, #110	; 0x6e
    4094:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    4098:	5f636972 	svcpl	0x00636972
    409c:	6b636150 	blvs	18dc5e4 <_bss_end+0x18ca8f4>
    40a0:	4f007465 	svcmi	0x00007465
    40a4:	5f44454c 	svcpl	0x0044454c
    40a8:	746e6f46 	strbtvc	r6, [lr], #-3910	; 0xfffff0ba
    40ac:	6665445f 			; <UNDEFINED> instruction: 0x6665445f
    40b0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    40b4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    40b8:	2f632f74 	svccs	0x00632f74
    40bc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    40c0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    40c4:	442f6162 	strtmi	r6, [pc], #-354	; 40cc <CPSR_IRQ_INHIBIT+0x404c>
    40c8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    40cc:	73746e65 	cmnvc	r4, #1616	; 0x650
    40d0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    40d4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    40d8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    40dc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    40e0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    40e4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    40e8:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    40ec:	69747564 	ldmdbvs	r4!, {r2, r5, r6, r8, sl, ip, sp, lr}^
    40f0:	732f736c 			; <UNDEFINED> instruction: 0x732f736c
    40f4:	6f2f6372 	svcvs	0x002f6372
    40f8:	2e64656c 	cdpcs	5, 6, cr6, cr4, cr12, {3}
    40fc:	00707063 	rsbseq	r7, r0, r3, rrx
    4100:	70696c46 	rsbvc	r6, r9, r6, asr #24
    4104:	6168435f 	cmnvs	r8, pc, asr r3
    4108:	43007372 	movwmi	r7, #882	; 0x372
    410c:	5f726168 	svcpl	0x00726168
    4110:	74646957 	strbtvc	r6, [r4], #-2391	; 0xfffff6a9
    4114:	4c4f0068 	mcrrmi	0, 6, r0, pc, cr8
    4118:	465f4445 	ldrbmi	r4, [pc], -r5, asr #8
    411c:	00746e6f 	rsbseq	r6, r4, pc, ror #28
    4120:	314e5a5f 	cmpcc	lr, pc, asr sl
    4124:	4c4f4333 	mcrrmi	3, 3, r4, pc, cr3
    4128:	445f4445 	ldrbmi	r4, [pc], #-1093	; 4130 <CPSR_IRQ_INHIBIT+0x40b0>
    412c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    4130:	32437961 	subcc	r7, r3, #1589248	; 0x184000
    4134:	634b5045 	movtvs	r5, #45125	; 0xb045
    4138:	61684300 	cmnvs	r8, r0, lsl #6
    413c:	6e455f72 	mcrvs	15, 2, r5, cr5, cr2, {3}
    4140:	68430064 	stmdavs	r3, {r2, r5, r6}^
    4144:	485f7261 	ldmdami	pc, {r0, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    4148:	68676965 	stmdavs	r7!, {r0, r2, r5, r6, r8, fp, sp, lr}^
    414c:	68430074 	stmdavs	r3, {r2, r4, r5, r6}^
    4150:	425f7261 	subsmi	r7, pc, #268435462	; 0x10000006
    4154:	6e696765 	cdpvs	7, 6, cr6, cr9, cr5, {3}
    4158:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    415c:	4f433331 	svcmi	0x00433331
    4160:	5f44454c 	svcpl	0x0044454c
    4164:	70736944 	rsbsvc	r6, r3, r4, asr #18
    4168:	4479616c 	ldrbtmi	r6, [r9], #-364	; 0xfffffe94
    416c:	00764532 	rsbseq	r4, r6, r2, lsr r5
    4170:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    4174:	5f353174 	svcpl	0x00353174
    4178:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    417c:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    4180:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4184:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    4188:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    418c:	6f697470 	svcvs	0x00697470
    4190:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4194:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    4198:	30534b52 	subscc	r4, r3, r2, asr fp
    419c:	4d5f005f 	ldclmi	0, cr0, [pc, #-380]	; 4028 <CPSR_IRQ_INHIBIT+0x3fa8>
    41a0:	6c65725f 	sfmvs	f7, 2, [r5], #-380	; 0xfffffe84
    41a4:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    41a8:	68637700 	stmdavs	r3!, {r8, r9, sl, ip, sp, lr}^
    41ac:	745f7261 	ldrbvc	r7, [pc], #-609	; 41b4 <CPSR_IRQ_INHIBIT+0x4134>
    41b0:	635f5f00 	cmpvs	pc, #0, 30
    41b4:	31317878 	teqcc	r1, r8, ror r8
    41b8:	7a697300 	bvc	1a60dc0 <_bss_end+0x1a4f0d0>
    41bc:	00745f65 	rsbseq	r5, r4, r5, ror #30
    41c0:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    41c4:	5f353174 	svcpl	0x00353174
    41c8:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    41cc:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    41d0:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    41d4:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    41d8:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    41dc:	6f697470 	svcvs	0x00697470
    41e0:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    41e4:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    41e8:	5a5f0076 	bpl	17c43c8 <_bss_end+0x17b26d8>
    41ec:	3174534e 	cmncc	r4, lr, asr #6
    41f0:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 32c3 <CPSR_IRQ_INHIBIT+0x3243>
    41f4:	70656378 	rsbvc	r6, r5, r8, ror r3
    41f8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    41fc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4200:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    4204:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4208:	5f6e6f69 	svcpl	0x006e6f69
    420c:	31727470 	cmncc	r2, r0, ror r4
    4210:	5f4d5f30 	svcpl	0x004d5f30
    4214:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    4218:	45657361 	strbmi	r7, [r5, #-865]!	; 0xfffffc9f
    421c:	5a5f0076 	bpl	17c43fc <_bss_end+0x17b270c>
    4220:	3174534e 	cmncc	r4, lr, asr #6
    4224:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 32f7 <CPSR_IRQ_INHIBIT+0x3277>
    4228:	70656378 	rsbvc	r6, r5, r8, ror r3
    422c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4230:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4234:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    4238:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    423c:	5f6e6f69 	svcpl	0x006e6f69
    4240:	61727470 	cmnvs	r2, r0, ror r4
    4244:	4b524553 	blmi	1495798 <_bss_end+0x1483aa8>
    4248:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
    424c:	77735f5f 			; <UNDEFINED> instruction: 0x77735f5f
    4250:	61707061 	cmnvs	r0, r1, rrx
    4254:	5f656c62 	svcpl	0x00656c62
    4258:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
    425c:	7465645f 	strbtvc	r6, [r5], #-1119	; 0xfffffba1
    4260:	736c6961 	cmnvc	ip, #1589248	; 0x184000
    4264:	535a5f00 	cmppl	sl, #0, 30
    4268:	72373174 	eorsvc	r3, r7, #116, 2
    426c:	72687465 	rsbvc	r7, r8, #1694498816	; 0x65000000
    4270:	655f776f 	ldrbvs	r7, [pc, #-1903]	; 3b09 <CPSR_IRQ_INHIBIT+0x3a89>
    4274:	70656378 	rsbvc	r6, r5, r8, ror r3
    4278:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    427c:	3174534e 	cmncc	r4, lr, asr #6
    4280:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 3353 <CPSR_IRQ_INHIBIT+0x32d3>
    4284:	70656378 	rsbvc	r6, r5, r8, ror r3
    4288:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    428c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4290:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    4294:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4298:	5f6e6f69 	svcpl	0x006e6f69
    429c:	45727470 	ldrbmi	r7, [r2, #-1136]!	; 0xfffffb90
    42a0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    42a4:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    42a8:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    42ac:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    42b0:	5f6e6f69 	svcpl	0x006e6f69
    42b4:	31727470 	cmncc	r2, r0, ror r4
    42b8:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    42bc:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    42c0:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    42c4:	34437274 	strbcc	r7, [r3], #-628	; 0xfffffd8c
    42c8:	00765045 	rsbseq	r5, r6, r5, asr #32
    42cc:	68746572 	ldmdavs	r4!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    42d0:	5f776f72 	svcpl	0x00776f72
    42d4:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    42d8:	6f697470 	svcvs	0x00697470
    42dc:	622f006e 	eorvs	r0, pc, #110	; 0x6e
    42e0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    42e4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    42e8:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    42ec:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    42f0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    42f4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    42f8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    42fc:	6944672d 	stmdbvs	r4, {r0, r2, r3, r5, r8, r9, sl, sp, lr}^
    4300:	2f433745 	svccs	0x00433745
    4304:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4308:	2b636474 	blcs	18dd4e0 <_bss_end+0x18cb7f0>
    430c:	72612d2b 	rsbvc	r2, r1, #2752	; 0xac0
    4310:	6f6e2d6d 	svcvs	0x006e2d6d
    4314:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4318:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    431c:	622f3731 	eorvs	r3, pc, #12845056	; 0xc40000
    4320:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4324:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4328:	7435762f 	ldrtvc	r7, [r5], #-1583	; 0xfffff9d1
    432c:	61682f65 	cmnvs	r8, r5, ror #30
    4330:	6c2f6472 	cfstrsvs	mvf6, [pc], #-456	; 4170 <CPSR_IRQ_INHIBIT+0x40f0>
    4334:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4338:	2b2b6364 	blcs	add0d0 <_bss_end+0xacb3e0>
    433c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4340:	63707573 	cmnvs	r0, #482344960	; 0x1cc00000
    4344:	5f002b2b 	svcpl	0x00002b2b
    4348:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    434c:	5f5f3531 	svcpl	0x005f3531
    4350:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4354:	6f697470 	svcvs	0x00697470
    4358:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    435c:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4360:	70656378 	rsbvc	r6, r5, r8, ror r3
    4364:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4368:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    436c:	61777334 	cmnvs	r7, r4, lsr r3
    4370:	53524570 	cmppl	r2, #112, 10	; 0x1c000000
    4374:	6f005f30 	svcvs	0x00005f30
    4378:	61726570 	cmnvs	r2, r0, ror r5
    437c:	3d726f74 	ldclcc	15, cr6, [r2, #-464]!	; 0xfffffe30
    4380:	5f4d5f00 	svcpl	0x004d5f00
    4384:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
    4388:	5f006665 	svcpl	0x00006665
    438c:	6a616e5a 	bvs	185fcfc <_bss_end+0x184e00c>
    4390:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    4394:	2b2b4320 	blcs	ad501c <_bss_end+0xac332c>
    4398:	31203431 			; <UNDEFINED> instruction: 0x31203431
    439c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    43a0:	30322031 	eorscc	r2, r2, r1, lsr r0
    43a4:	36303132 			; <UNDEFINED> instruction: 0x36303132
    43a8:	28203132 	stmdacs	r0!, {r1, r4, r5, r8, ip, sp}
    43ac:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    43b0:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    43b4:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
    43b8:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    43bc:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
    43c0:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
    43c4:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
    43c8:	206d7261 	rsbcs	r7, sp, r1, ror #4
    43cc:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
    43d0:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
    43d4:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
    43d8:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    43dc:	616d2d20 	cmnvs	sp, r0, lsr #26
    43e0:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
    43e4:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    43e8:	2b657435 	blcs	19614c4 <_bss_end+0x194f7d4>
    43ec:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
    43f0:	4f2d2067 	svcmi	0x002d2067
    43f4:	662d2032 			; <UNDEFINED> instruction: 0x662d2032
    43f8:	692d6f6e 	pushvs	{r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    43fc:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    4400:	2d746963 			; <UNDEFINED> instruction: 0x2d746963
    4404:	706d6574 	rsbvc	r6, sp, r4, ror r5
    4408:	6574616c 	ldrbvs	r6, [r4, #-364]!	; 0xfffffe94
    440c:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
    4410:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
    4414:	732d6d6f 			; <UNDEFINED> instruction: 0x732d6d6f
    4418:	3d646565 	cfstr64cc	mvdx6, [r4, #-404]!	; 0xfffffe6c
    441c:	5f77656e 	svcpl	0x0077656e
    4420:	2e76706f 	cdpcs	0, 7, cr7, cr6, cr15, {3}
    4424:	2d206f6c 	stccs	15, cr6, [r0, #-432]!	; 0xfffffe50
    4428:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
    442c:	6f697463 	svcvs	0x00697463
    4430:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
    4434:	6f697463 	svcvs	0x00697463
    4438:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
    443c:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
    4440:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
    4444:	6f697463 	svcvs	0x00697463
    4448:	7e00736e 	cdpvc	3, 0, cr7, cr0, cr14, {3}
    444c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4450:	6f697470 	svcvs	0x00697470
    4454:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4458:	65640072 	strbvs	r0, [r4, #-114]!	; 0xffffff8e
    445c:	79746c63 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, fp, sp, lr}^
    4460:	6e286570 	mcrvs	5, 1, r6, cr8, cr0, {3}
    4464:	706c6c75 	rsbvc	r6, ip, r5, ror ip
    4468:	00297274 	eoreq	r7, r9, r4, ror r2
    446c:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
    4470:	5f727470 	svcpl	0x00727470
    4474:	5a5f0074 	bpl	17c464c <_bss_end+0x17b295c>
    4478:	74534b4e 	ldrbvc	r4, [r3], #-2894	; 0xfffff4b2
    447c:	5f5f3531 	svcpl	0x005f3531
    4480:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4484:	6f697470 	svcvs	0x00697470
    4488:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    448c:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4490:	70656378 	rsbvc	r6, r5, r8, ror r3
    4494:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4498:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    449c:	45627663 	strbmi	r7, [r2, #-1635]!	; 0xfffff99d
    44a0:	5f5f0076 	svcpl	0x005f0076
    44a4:	70617773 	rsbvc	r7, r1, r3, ror r7
    44a8:	6c626170 	stfvse	f6, [r2], #-448	; 0xfffffe40
    44ac:	65645f65 	strbvs	r5, [r4, #-3941]!	; 0xfffff09b
    44b0:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
    44b4:	5a5f0073 	bpl	17c4688 <_bss_end+0x17b2998>
    44b8:	3174534e 	cmncc	r4, lr, asr #6
    44bc:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 358f <CPSR_IRQ_INHIBIT+0x350f>
    44c0:	70656378 	rsbvc	r6, r5, r8, ror r3
    44c4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    44c8:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    44cc:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    44d0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    44d4:	5f6e6f69 	svcpl	0x006e6f69
    44d8:	39727470 	ldmdbcc	r2!, {r4, r5, r6, sl, ip, sp, lr}^
    44dc:	615f4d5f 	cmpvs	pc, pc, asr sp	; <UNPREDICTABLE>
    44e0:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    44e4:	00764566 	rsbseq	r4, r6, r6, ror #10
    44e8:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    44ec:	5f353174 	svcpl	0x00353174
    44f0:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    44f4:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    44f8:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    44fc:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    4500:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4504:	6f697470 	svcvs	0x00697470
    4508:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    450c:	45344472 	ldrmi	r4, [r4, #-1138]!	; 0xfffffb8e
    4510:	5a5f0076 	bpl	17c46f0 <_bss_end+0x17b2a00>
    4514:	3174534e 	cmncc	r4, lr, asr #6
    4518:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 35eb <CPSR_IRQ_INHIBIT+0x356b>
    451c:	70656378 	rsbvc	r6, r5, r8, ror r3
    4520:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4524:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4528:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    452c:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4530:	5f6e6f69 	svcpl	0x006e6f69
    4534:	43727470 	cmnmi	r2, #112, 8	; 0x70000000
    4538:	534f4534 	movtpl	r4, #62772	; 0xf534
    453c:	6f005f30 	svcvs	0x00005f30
    4540:	61726570 	cmnvs	r2, r0, ror r5
    4544:	20726f74 	rsbscs	r6, r2, r4, ror pc
    4548:	6c6f6f62 	stclvs	15, cr6, [pc], #-392	; 43c8 <CPSR_IRQ_INHIBIT+0x4348>
    454c:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
    4550:	635f756e 	cmpvs	pc, #461373440	; 0x1b800000
    4554:	5f007878 	svcpl	0x00007878
    4558:	534b4e5a 	movtpl	r4, #48730	; 0xbe5a
    455c:	5f353174 	svcpl	0x00353174
    4560:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    4564:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    4568:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    456c:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    4570:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4574:	6f697470 	svcvs	0x00697470
    4578:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    457c:	4d5f3672 	ldclmi	6, cr3, [pc, #-456]	; 43bc <CPSR_IRQ_INHIBIT+0x433c>
    4580:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    4584:	6c007645 	stcvs	6, cr7, [r0], {69}	; 0x45
    4588:	20676e6f 	rsbcs	r6, r7, pc, ror #28
    458c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    4590:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
    4594:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
    4598:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
    459c:	68630074 	stmdavs	r3!, {r2, r4, r5, r6}^
    45a0:	36317261 	ldrtcc	r7, [r1], -r1, ror #4
    45a4:	5f00745f 	svcpl	0x0000745f
    45a8:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    45ac:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    45b0:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    45b4:	2e007274 	mcrcs	2, 0, r7, cr0, cr4, {3}
    45b8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    45bc:	2f2e2e2f 	svccs	0x002e2e2f
    45c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    45c4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    45c8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    45cc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    45d0:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    45d4:	762d2b2b 	strtvc	r2, [sp], -fp, lsr #22
    45d8:	696c2f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, sp}^
    45dc:	70757362 	rsbsvc	r7, r5, r2, ror #6
    45e0:	2f2b2b63 	svccs	0x002b2b63
    45e4:	5f77656e 	svcpl	0x0077656e
    45e8:	2e76706f 	cdpcs	0, 7, cr7, cr6, cr15, {3}
    45ec:	73006363 	movwvc	r6, #867	; 0x363
    45f0:	00706177 	rsbseq	r6, r0, r7, ror r1
    45f4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    45f8:	745f3233 	ldrbvc	r3, [pc], #-563	; 4600 <CPSR_IRQ_INHIBIT+0x4580>
    45fc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    4600:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    4604:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4608:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    460c:	5f6e6f69 	svcpl	0x006e6f69
    4610:	31727470 	cmncc	r2, r0, ror r4
    4614:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    4618:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    461c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4620:	34437274 	strbcc	r7, [r3], #-628	; 0xfffffd8c
    4624:	006e4445 	rsbeq	r4, lr, r5, asr #8
    4628:	655f4d5f 	ldrbvs	r4, [pc, #-3423]	; 38d1 <CPSR_IRQ_INHIBIT+0x3851>
    462c:	70656378 	rsbvc	r6, r5, r8, ror r3
    4630:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4634:	6a626f5f 	bvs	18a03b8 <_bss_end+0x188e6c8>
    4638:	00746365 	rsbseq	r6, r4, r5, ror #6
    463c:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4640:	78655f61 	stmdavc	r5!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4644:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4648:	5f6e6f69 	svcpl	0x006e6f69
    464c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    4650:	70797400 	rsbsvc	r7, r9, r0, lsl #8
    4654:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
    4658:	6c006f66 	stcvs	15, cr6, [r0], {102}	; 0x66
    465c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
    4660:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
    4664:	5f00656c 	svcpl	0x0000656c
    4668:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    466c:	5f5f3531 	svcpl	0x005f3531
    4670:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4674:	6f697470 	svcvs	0x00697470
    4678:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    467c:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4680:	70656378 	rsbvc	r6, r5, r8, ror r3
    4684:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4688:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    468c:	4f455361 	svcmi	0x00455361
    4690:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
    4694:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    4698:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
    469c:	77656e20 	strbvc	r6, [r5, -r0, lsr #28]!
    46a0:	005d5b20 	subseq	r5, sp, r0, lsr #22
    46a4:	4b4e5a5f 	blmi	139b028 <_bss_end+0x1389338>
    46a8:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    46ac:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    46b0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    46b4:	5f6e6f69 	svcpl	0x006e6f69
    46b8:	31727470 	cmncc	r2, r0, ror r4
    46bc:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    46c0:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    46c4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    46c8:	30327274 	eorscc	r7, r2, r4, ror r2
    46cc:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    46d0:	78655f61 	stmdavc	r5!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    46d4:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    46d8:	5f6e6f69 	svcpl	0x006e6f69
    46dc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    46e0:	5f007645 	svcpl	0x00007645
    46e4:	65675f4d 	strbvs	r5, [r7, #-3917]!	; 0xfffff0b3
    46e8:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    46ec:	2f2e2e2f 	svccs	0x002e2e2f
    46f0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    46f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    46f8:	2f2e2e2f 	svccs	0x002e2e2f
    46fc:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    4700:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
    4704:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    4708:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    470c:	696c2f6d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    4710:	75663162 	strbvc	r3, [r6, #-354]!	; 0xfffffe9e
    4714:	2e73636e 	cdpcs	3, 7, cr6, cr3, cr14, {3}
    4718:	622f0053 	eorvs	r0, pc, #83	; 0x53
    471c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4720:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    4724:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    4728:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    472c:	61652d65 	cmnvs	r5, r5, ror #26
    4730:	682d6962 	stmdavs	sp!, {r1, r5, r6, r8, fp, sp, lr}
    4734:	4b676659 	blmi	19de0a0 <_bss_end+0x19cc3b0>
    4738:	63672f34 	cmnvs	r7, #52, 30	; 0xd0
    473c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    4740:	6f6e2d6d 	svcvs	0x006e2d6d
    4744:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4748:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    474c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    4750:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    4754:	37302e31 			; <UNDEFINED> instruction: 0x37302e31
    4758:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    475c:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    4760:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4764:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4768:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    476c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4770:	7435762f 	ldrtvc	r7, [r5], #-1583	; 0xfffff9d1
    4774:	61682f65 	cmnvs	r8, r5, ror #30
    4778:	6c2f6472 	cfstrsvs	mvf6, [pc], #-456	; 45b8 <CPSR_IRQ_INHIBIT+0x4538>
    477c:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    4780:	4e470063 	cdpmi	0, 4, cr0, cr7, cr3, {3}
    4784:	53412055 	movtpl	r2, #4181	; 0x1055
    4788:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
    478c:	73690037 	cmnvc	r9, #55	; 0x37
    4790:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4794:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    4798:	65726465 	ldrbvs	r6, [r2, #-1125]!	; 0xfffffb9b
    479c:	73690073 	cmnvc	r9, #115	; 0x73
    47a0:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    47a4:	66765f74 	uhsub16vs	r5, r6, r4
    47a8:	61625f70 	smcvs	9712	; 0x25f0
    47ac:	63006573 	movwvs	r6, #1395	; 0x573
    47b0:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    47b4:	66207865 	strtvs	r7, [r0], -r5, ror #16
    47b8:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    47bc:	61736900 	cmnvs	r3, r0, lsl #18
    47c0:	626f6e5f 	rsbvs	r6, pc, #1520	; 0x5f0
    47c4:	69007469 	stmdbvs	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    47c8:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    47cc:	6d5f7469 	cfldrdvs	mvd7, [pc, #-420]	; 4630 <CPSR_IRQ_INHIBIT+0x45b0>
    47d0:	665f6576 			; <UNDEFINED> instruction: 0x665f6576
    47d4:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    47d8:	61736900 	cmnvs	r3, r0, lsl #18
    47dc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    47e0:	3170665f 	cmncc	r0, pc, asr r6
    47e4:	73690036 	cmnvc	r9, #54	; 0x36
    47e8:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    47ec:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    47f0:	73690063 	cmnvc	r9, #99	; 0x63
    47f4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    47f8:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
    47fc:	69007669 	stmdbvs	r0, {r0, r3, r5, r6, r9, sl, ip, sp, lr}
    4800:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4804:	715f7469 	cmpvc	pc, r9, ror #8
    4808:	6b726975 	blvs	1c9ede4 <_bss_end+0x1c8d0f4>
    480c:	5f6f6e5f 	svcpl	0x006f6e5f
    4810:	616c6f76 	smcvs	50934	; 0xc6f6
    4814:	656c6974 	strbvs	r6, [ip, #-2420]!	; 0xfffff68c
    4818:	0065635f 	rsbeq	r6, r5, pc, asr r3
    481c:	5f617369 	svcpl	0x00617369
    4820:	5f746962 	svcpl	0x00746962
    4824:	6900706d 	stmdbvs	r0, {r0, r2, r3, r5, r6, ip, sp, lr}
    4828:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    482c:	615f7469 	cmpvs	pc, r9, ror #8
    4830:	35766d72 	ldrbcc	r6, [r6, #-3442]!	; 0xfffff28e
    4834:	73690074 	cmnvc	r9, #116	; 0x74
    4838:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    483c:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    4840:	7435766d 	ldrtvc	r7, [r5], #-1645	; 0xfffff993
    4844:	73690065 	cmnvc	r9, #101	; 0x65
    4848:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    484c:	656e5f74 	strbvs	r5, [lr, #-3956]!	; 0xfffff08c
    4850:	69006e6f 	stmdbvs	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    4854:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4858:	625f7469 	subsvs	r7, pc, #1761607680	; 0x69000000
    485c:	00363166 	eorseq	r3, r6, r6, ror #2
    4860:	43535046 	cmpmi	r3, #70	; 0x46
    4864:	4e455f52 	mcrmi	15, 2, r5, cr5, cr2, {2}
    4868:	46004d55 			; <UNDEFINED> instruction: 0x46004d55
    486c:	52435350 	subpl	r5, r3, #80, 6	; 0x40000001
    4870:	637a6e5f 	cmnvs	sl, #1520	; 0x5f0
    4874:	5f637176 	svcpl	0x00637176
    4878:	4d554e45 	ldclmi	14, cr4, [r5, #-276]	; 0xfffffeec
    487c:	52505600 	subspl	r5, r0, #0, 12
    4880:	554e455f 	strbpl	r4, [lr, #-1375]	; 0xfffffaa1
    4884:	6266004d 	rsbvs	r0, r6, #77	; 0x4d
    4888:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    488c:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    4890:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    4894:	50006e6f 	andpl	r6, r0, pc, ror #28
    4898:	4e455f30 	mcrmi	15, 2, r5, cr5, cr0, {1}
    489c:	69004d55 	stmdbvs	r0, {r0, r2, r4, r6, r8, sl, fp, lr}
    48a0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    48a4:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    48a8:	74707972 	ldrbtvc	r7, [r0], #-2418	; 0xfffff68e
    48ac:	4e47006f 	cdpmi	0, 4, cr0, cr7, cr15, {3}
    48b0:	31432055 	qdaddcc	r2, r5, r3
    48b4:	30312037 	eorscc	r2, r1, r7, lsr r0
    48b8:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    48bc:	32303220 	eorscc	r3, r0, #32, 4
    48c0:	32363031 	eorscc	r3, r6, #49	; 0x31
    48c4:	72282031 	eorvc	r2, r8, #49	; 0x31
    48c8:	61656c65 	cmnvs	r5, r5, ror #24
    48cc:	20296573 	eorcs	r6, r9, r3, ror r5
    48d0:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
    48d4:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
    48d8:	616f6c66 	cmnvs	pc, r6, ror #24
    48dc:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    48e0:	61683d69 	cmnvs	r8, r9, ror #26
    48e4:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
    48e8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
    48ec:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
    48f0:	7435766d 	ldrtvc	r7, [r5], #-1645	; 0xfffff993
    48f4:	70662b65 	rsbvc	r2, r6, r5, ror #22
    48f8:	20672d20 	rsbcs	r2, r7, r0, lsr #26
    48fc:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    4900:	4f2d2067 	svcmi	0x002d2067
    4904:	4f2d2032 	svcmi	0x002d2032
    4908:	4f2d2032 	svcmi	0x002d2032
    490c:	662d2032 			; <UNDEFINED> instruction: 0x662d2032
    4910:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4914:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    4918:	62696c2d 	rsbvs	r6, r9, #11520	; 0x2d00
    491c:	20636367 	rsbcs	r6, r3, r7, ror #6
    4920:	6f6e662d 	svcvs	0x006e662d
    4924:	6174732d 	cmnvs	r4, sp, lsr #6
    4928:	702d6b63 	eorvc	r6, sp, r3, ror #22
    492c:	65746f72 	ldrbvs	r6, [r4, #-3954]!	; 0xfffff08e
    4930:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
    4934:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
    4938:	6e692d6f 	cdpvs	13, 6, cr2, cr9, cr15, {3}
    493c:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
    4940:	76662d20 	strbtvc	r2, [r6], -r0, lsr #26
    4944:	62697369 	rsbvs	r7, r9, #-1543503871	; 0xa4000001
    4948:	74696c69 	strbtvc	r6, [r9], #-3177	; 0xfffff397
    494c:	69683d79 	stmdbvs	r8!, {r0, r3, r4, r5, r6, r8, sl, fp, ip, sp}^
    4950:	6e656464 	cdpvs	4, 6, cr6, cr5, cr4, {3}
    4954:	61736900 	cmnvs	r3, r0, lsl #18
    4958:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    495c:	6964745f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    4960:	6f630076 	svcvs	0x00630076
    4964:	6900736e 	stmdbvs	r0, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    4968:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    496c:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    4970:	786d6d77 	stmdavc	sp!, {r0, r1, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    4974:	50460074 	subpl	r0, r6, r4, ror r0
    4978:	53545843 	cmppl	r4, #4390912	; 0x430000
    497c:	554e455f 	strbpl	r4, [lr, #-1375]	; 0xfffffaa1
    4980:	7369004d 	cmnvc	r9, #77	; 0x4d
    4984:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4988:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    498c:	0036766d 	eorseq	r7, r6, sp, ror #12
    4990:	5f617369 	svcpl	0x00617369
    4994:	5f746962 	svcpl	0x00746962
    4998:	0065766d 	rsbeq	r7, r5, sp, ror #12
    499c:	5f617369 	svcpl	0x00617369
    49a0:	5f746962 	svcpl	0x00746962
    49a4:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    49a8:	00327478 	eorseq	r7, r2, r8, ror r4
    49ac:	5f617369 	svcpl	0x00617369
    49b0:	5f746962 	svcpl	0x00746962
    49b4:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    49b8:	69003070 	stmdbvs	r0, {r4, r5, r6, ip, sp}
    49bc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    49c0:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    49c4:	70636564 	rsbvc	r6, r3, r4, ror #10
    49c8:	73690031 	cmnvc	r9, #49	; 0x31
    49cc:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    49d0:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    49d4:	32706365 	rsbscc	r6, r0, #-1811939327	; 0x94000001
    49d8:	61736900 	cmnvs	r3, r0, lsl #18
    49dc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    49e0:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    49e4:	00337063 	eorseq	r7, r3, r3, rrx
    49e8:	5f617369 	svcpl	0x00617369
    49ec:	5f746962 	svcpl	0x00746962
    49f0:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    49f4:	69003470 	stmdbvs	r0, {r4, r5, r6, sl, ip, sp}
    49f8:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    49fc:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    4a00:	62645f70 	rsbvs	r5, r4, #112, 30	; 0x1c0
    4a04:	7369006c 	cmnvc	r9, #108	; 0x6c
    4a08:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4a0c:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    4a10:	36706365 	ldrbtcc	r6, [r0], -r5, ror #6
    4a14:	61736900 	cmnvs	r3, r0, lsl #18
    4a18:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4a1c:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    4a20:	00377063 	eorseq	r7, r7, r3, rrx
    4a24:	5f617369 	svcpl	0x00617369
    4a28:	5f746962 	svcpl	0x00746962
    4a2c:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4a30:	69006b36 	stmdbvs	r0, {r1, r2, r4, r5, r8, r9, fp, sp, lr}
    4a34:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4a38:	615f7469 	cmpvs	pc, r9, ror #8
    4a3c:	38766d72 	ldmdacc	r6!, {r1, r4, r5, r6, r8, sl, fp, sp, lr}^
    4a40:	5f6d315f 	svcpl	0x006d315f
    4a44:	6e69616d 	powvsez	f6, f1, #5.0
    4a48:	746e6100 	strbtvc	r6, [lr], #-256	; 0xffffff00
    4a4c:	73690065 	cmnvc	r9, #101	; 0x65
    4a50:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4a54:	6d635f74 	stclvs	15, cr5, [r3, #-464]!	; 0xfffffe30
    4a58:	2e006573 	cfrshl64cs	mvdx0, mvdx3, r6
    4a5c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a60:	2f2e2e2f 	svccs	0x002e2e2f
    4a64:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a68:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a6c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4a70:	2f636367 	svccs	0x00636367
    4a74:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    4a78:	2e326363 	cdpcs	3, 3, cr6, cr2, cr3, {3}
    4a7c:	73690063 	cmnvc	r9, #99	; 0x63
    4a80:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4a84:	70665f74 	rsbvc	r5, r6, r4, ror pc
    4a88:	69003576 	stmdbvs	r0, {r1, r2, r4, r5, r6, r8, sl, ip, sp}
    4a8c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4a90:	785f7469 	ldmdavc	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    4a94:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    4a98:	73690065 	cmnvc	r9, #101	; 0x65
    4a9c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4aa0:	75715f74 	ldrbvc	r5, [r1, #-3956]!	; 0xfffff08c
    4aa4:	5f6b7269 	svcpl	0x006b7269
    4aa8:	5f336d63 	svcpl	0x00336d63
    4aac:	6472646c 	ldrbtvs	r6, [r2], #-1132	; 0xfffffb94
    4ab0:	61736900 	cmnvs	r3, r0, lsl #18
    4ab4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4ab8:	6d38695f 			; <UNDEFINED> instruction: 0x6d38695f
    4abc:	7369006d 	cmnvc	r9, #109	; 0x6d
    4ac0:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ac4:	70665f74 	rsbvc	r5, r6, r4, ror pc
    4ac8:	3233645f 	eorscc	r6, r3, #1593835520	; 0x5f000000
    4acc:	61736900 	cmnvs	r3, r0, lsl #18
    4ad0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4ad4:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4ad8:	6d653776 	stclvs	7, cr3, [r5, #-472]!	; 0xfffffe28
    4adc:	61736900 	cmnvs	r3, r0, lsl #18
    4ae0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4ae4:	61706c5f 	cmnvs	r0, pc, asr ip
    4ae8:	6c610065 	stclvs	0, cr0, [r1], #-404	; 0xfffffe6c
    4aec:	6d695f6c 	stclvs	15, cr5, [r9, #-432]!	; 0xfffffe50
    4af0:	65696c70 	strbvs	r6, [r9, #-3184]!	; 0xfffff390
    4af4:	62665f64 	rsbvs	r5, r6, #100, 30	; 0x190
    4af8:	00737469 	rsbseq	r7, r3, r9, ror #8
    4afc:	5f617369 	svcpl	0x00617369
    4b00:	5f746962 	svcpl	0x00746962
    4b04:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4b08:	00315f38 	eorseq	r5, r1, r8, lsr pc
    4b0c:	5f617369 	svcpl	0x00617369
    4b10:	5f746962 	svcpl	0x00746962
    4b14:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4b18:	00325f38 	eorseq	r5, r2, r8, lsr pc
    4b1c:	5f617369 	svcpl	0x00617369
    4b20:	5f746962 	svcpl	0x00746962
    4b24:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4b28:	00335f38 	eorseq	r5, r3, r8, lsr pc
    4b2c:	5f617369 	svcpl	0x00617369
    4b30:	5f746962 	svcpl	0x00746962
    4b34:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4b38:	00345f38 	eorseq	r5, r4, r8, lsr pc
    4b3c:	5f617369 	svcpl	0x00617369
    4b40:	5f746962 	svcpl	0x00746962
    4b44:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4b48:	00355f38 	eorseq	r5, r5, r8, lsr pc
    4b4c:	5f617369 	svcpl	0x00617369
    4b50:	5f746962 	svcpl	0x00746962
    4b54:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4b58:	00365f38 	eorseq	r5, r6, r8, lsr pc
    4b5c:	5f617369 	svcpl	0x00617369
    4b60:	5f746962 	svcpl	0x00746962
    4b64:	69006273 	stmdbvs	r0, {r0, r1, r4, r5, r6, r9, sp, lr}
    4b68:	6e5f6173 	mrcvs	1, 2, r6, cr15, cr3, {3}
    4b6c:	625f6d75 	subsvs	r6, pc, #7488	; 0x1d40
    4b70:	00737469 	rsbseq	r7, r3, r9, ror #8
    4b74:	5f617369 	svcpl	0x00617369
    4b78:	5f746962 	svcpl	0x00746962
    4b7c:	6c616d73 	stclvs	13, cr6, [r1], #-460	; 0xfffffe34
    4b80:	6c756d6c 	ldclvs	13, cr6, [r5], #-432	; 0xfffffe50
    4b84:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
    4b88:	74705f63 	ldrbtvc	r5, [r0], #-3939	; 0xfffff09d
    4b8c:	6f630072 	svcvs	0x00630072
    4b90:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4b94:	6f642078 	svcvs	0x00642078
    4b98:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
    4b9c:	5f424e00 	svcpl	0x00424e00
    4ba0:	535f5046 	cmppl	pc, #70	; 0x46
    4ba4:	45525359 	ldrbmi	r5, [r2, #-857]	; 0xfffffca7
    4ba8:	69005347 	stmdbvs	r0, {r0, r1, r2, r6, r8, r9, ip, lr}
    4bac:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4bb0:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    4bb4:	70636564 	rsbvc	r6, r3, r4, ror #10
    4bb8:	73690035 	cmnvc	r9, #53	; 0x35
    4bbc:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4bc0:	66765f74 	uhsub16vs	r5, r6, r4
    4bc4:	00327670 	eorseq	r7, r2, r0, ror r6
    4bc8:	5f617369 	svcpl	0x00617369
    4bcc:	5f746962 	svcpl	0x00746962
    4bd0:	76706676 			; <UNDEFINED> instruction: 0x76706676
    4bd4:	73690033 	cmnvc	r9, #51	; 0x33
    4bd8:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4bdc:	66765f74 	uhsub16vs	r5, r6, r4
    4be0:	00347670 	eorseq	r7, r4, r0, ror r6
    4be4:	58435046 	stmdapl	r3, {r1, r2, r6, ip, lr}^
    4be8:	5f534e54 	svcpl	0x00534e54
    4bec:	4d554e45 	ldclmi	14, cr4, [r5, #-276]	; 0xfffffeec
    4bf0:	61736900 	cmnvs	r3, r0, lsl #18
    4bf4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4bf8:	7568745f 	strbvc	r7, [r8, #-1119]!	; 0xfffffba1
    4bfc:	6900626d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r9, sp, lr}
    4c00:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4c04:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    4c08:	63363170 	teqvs	r6, #112, 2
    4c0c:	00766e6f 	rsbseq	r6, r6, pc, ror #28
    4c10:	5f617369 	svcpl	0x00617369
    4c14:	74616566 	strbtvc	r6, [r1], #-1382	; 0xfffffa9a
    4c18:	00657275 	rsbeq	r7, r5, r5, ror r2
    4c1c:	5f617369 	svcpl	0x00617369
    4c20:	5f746962 	svcpl	0x00746962
    4c24:	6d746f6e 	ldclvs	15, cr6, [r4, #-440]!	; 0xfffffe48
    4c28:	61736900 	cmnvs	r3, r0, lsl #18
    4c2c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4c30:	6975715f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, ip, sp, lr}^
    4c34:	615f6b72 	cmpvs	pc, r2, ror fp	; <UNPREDICTABLE>
    4c38:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
    4c3c:	69007a6b 	stmdbvs	r0, {r0, r1, r3, r5, r6, r9, fp, ip, sp, lr}
    4c40:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4c44:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    4c48:	32336372 	eorscc	r6, r3, #-939524095	; 0xc8000001
    4c4c:	61736900 	cmnvs	r3, r0, lsl #18
    4c50:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4c54:	6975715f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, ip, sp, lr}^
    4c58:	6e5f6b72 	vmovvs.s8	r6, d15[3]
    4c5c:	73615f6f 	cmnvc	r1, #444	; 0x1bc
    4c60:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
    4c64:	61736900 	cmnvs	r3, r0, lsl #18
    4c68:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4c6c:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4c70:	69003476 	stmdbvs	r0, {r1, r2, r4, r5, r6, sl, ip, sp}
    4c74:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4c78:	745f7469 	ldrbvc	r7, [pc], #-1129	; 4c80 <CPSR_IRQ_INHIBIT+0x4c00>
    4c7c:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    4c80:	73690032 	cmnvc	r9, #50	; 0x32
    4c84:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c88:	65625f74 	strbvs	r5, [r2, #-3956]!	; 0xfffff08c
    4c8c:	73690038 	cmnvc	r9, #56	; 0x38
    4c90:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c94:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    4c98:	0037766d 	eorseq	r7, r7, sp, ror #12
    4c9c:	5f617369 	svcpl	0x00617369
    4ca0:	5f746962 	svcpl	0x00746962
    4ca4:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4ca8:	66760038 			; <UNDEFINED> instruction: 0x66760038
    4cac:	79735f70 	ldmdbvc	r3!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4cb0:	67657273 			; <UNDEFINED> instruction: 0x67657273
    4cb4:	6e655f73 	mcrvs	15, 3, r5, cr5, cr3, {3}
    4cb8:	69646f63 	stmdbvs	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
    4cbc:	6900676e 	stmdbvs	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    4cc0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4cc4:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    4cc8:	66363170 			; <UNDEFINED> instruction: 0x66363170
    4ccc:	69006c6d 	stmdbvs	r0, {r0, r2, r3, r5, r6, sl, fp, sp, lr}
    4cd0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4cd4:	645f7469 	ldrbvs	r7, [pc], #-1129	; 4cdc <CPSR_IRQ_INHIBIT+0x4c5c>
    4cd8:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
    4cdc:	Address 0x0000000000004cdc is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_bss_end+0x10bf034>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	2e30313a 	mrccs	1, 1, r3, cr0, cr10, {1}
   c:	30322d33 	eorscc	r2, r2, r3, lsr sp
  10:	302e3132 	eorcc	r3, lr, r2, lsr r1
  14:	29342d37 	ldmdbcs	r4!, {r0, r1, r2, r4, r5, r8, sl, fp, sp}
  18:	2e303120 	rsfcssp	f3, f0, f0
  1c:	20312e33 	eorscs	r2, r1, r3, lsr lr
  20:	31323032 	teqcc	r2, r2, lsr r0
  24:	31323630 	teqcc	r2, r0, lsr r6
  28:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  2c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  10:	4b5a3605 	blmi	168d82c <_bss_end+0x167bb3c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <_bss_end+0x30734>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	1a011803 	bne	46038 <_bss_end+0x34348>
  28:	1e011c01 	cdpne	12, 0, cr1, cr1, cr1, {0}
  2c:	44012206 	strmi	r2, [r1], #-518	; 0xfffffdfa
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	000080ac 	andeq	r8, r0, ip, lsr #1
      1c:	00000038 	andeq	r0, r0, r8, lsr r0
      20:	8b040e42 	blhi	103930 <_bss_end+0xf1c40>
      24:	0b0d4201 	bleq	350830 <_bss_end+0x33eb40>
      28:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
      2c:	00000ecb 	andeq	r0, r0, fp, asr #29
      30:	0000001c 	andeq	r0, r0, ip, lsl r0
      34:	00000000 	andeq	r0, r0, r0
      38:	000080e4 	andeq	r8, r0, r4, ror #1
      3c:	0000002c 	andeq	r0, r0, ip, lsr #32
      40:	8b040e42 	blhi	103950 <_bss_end+0xf1c60>
      44:	0b0d4201 	bleq	350850 <_bss_end+0x33eb60>
      48:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
      4c:	00000ecb 	andeq	r0, r0, fp, asr #29
      50:	0000001c 	andeq	r0, r0, ip, lsl r0
      54:	00000000 	andeq	r0, r0, r0
      58:	00008110 	andeq	r8, r0, r0, lsl r1
      5c:	00000020 	andeq	r0, r0, r0, lsr #32
      60:	8b040e42 	blhi	103970 <_bss_end+0xf1c80>
      64:	0b0d4201 	bleq	350870 <_bss_end+0x33eb80>
      68:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
      6c:	00000ecb 	andeq	r0, r0, fp, asr #29
      70:	0000001c 	andeq	r0, r0, ip, lsl r0
      74:	00000000 	andeq	r0, r0, r0
      78:	00008130 	andeq	r8, r0, r0, lsr r1
      7c:	00000018 	andeq	r0, r0, r8, lsl r0
      80:	8b040e42 	blhi	103990 <_bss_end+0xf1ca0>
      84:	0b0d4201 	bleq	350890 <_bss_end+0x33eba0>
      88:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      8c:	00000ecb 	andeq	r0, r0, fp, asr #29
      90:	0000001c 	andeq	r0, r0, ip, lsl r0
      94:	00000000 	andeq	r0, r0, r0
      98:	00008148 	andeq	r8, r0, r8, asr #2
      9c:	00000018 	andeq	r0, r0, r8, lsl r0
      a0:	8b040e42 	blhi	1039b0 <_bss_end+0xf1cc0>
      a4:	0b0d4201 	bleq	3508b0 <_bss_end+0x33ebc0>
      a8:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      ac:	00000ecb 	andeq	r0, r0, fp, asr #29
      b0:	0000001c 	andeq	r0, r0, ip, lsl r0
      b4:	00000000 	andeq	r0, r0, r0
      b8:	00008160 	andeq	r8, r0, r0, ror #2
      bc:	00000018 	andeq	r0, r0, r8, lsl r0
      c0:	8b040e42 	blhi	1039d0 <_bss_end+0xf1ce0>
      c4:	0b0d4201 	bleq	3508d0 <_bss_end+0x33ebe0>
      c8:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      cc:	00000ecb 	andeq	r0, r0, fp, asr #29
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
      d4:	00000000 	andeq	r0, r0, r0
      d8:	00008178 	andeq	r8, r0, r8, ror r1
      dc:	0000000c 	andeq	r0, r0, ip
      e0:	8b040e42 	blhi	1039f0 <_bss_end+0xf1d00>
      e4:	0b0d4201 	bleq	3508f0 <_bss_end+0x33ec00>
      e8:	0000000c 	andeq	r0, r0, ip
      ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      f0:	7c020001 	stcvc	0, cr0, [r2], {1}
      f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      f8:	0000001c 	andeq	r0, r0, ip, lsl r0
      fc:	000000e8 	andeq	r0, r0, r8, ror #1
     100:	00008184 	andeq	r8, r0, r4, lsl #3
     104:	00000058 	andeq	r0, r0, r8, asr r0
     108:	8b080e42 	blhi	203a18 <_bss_end+0x1f1d28>
     10c:	42018e02 	andmi	r8, r1, #2, 28
     110:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     114:	00080d0c 	andeq	r0, r8, ip, lsl #26
     118:	0000001c 	andeq	r0, r0, ip, lsl r0
     11c:	000000e8 	andeq	r0, r0, r8, ror #1
     120:	000081dc 	ldrdeq	r8, [r0], -ip
     124:	00000098 	muleq	r0, r8, r0
     128:	8b040e42 	blhi	103a38 <_bss_end+0xf1d48>
     12c:	0b0d4201 	bleq	350938 <_bss_end+0x33ec48>
     130:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
     134:	000ecb42 	andeq	ip, lr, r2, asr #22
     138:	0000001c 	andeq	r0, r0, ip, lsl r0
     13c:	000000e8 	andeq	r0, r0, r8, ror #1
     140:	00008274 	andeq	r8, r0, r4, ror r2
     144:	00000074 	andeq	r0, r0, r4, ror r0
     148:	8b040e42 	blhi	103a58 <_bss_end+0xf1d68>
     14c:	0b0d4201 	bleq	350958 <_bss_end+0x33ec68>
     150:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     154:	00000ecb 	andeq	r0, r0, fp, asr #29
     158:	0000001c 	andeq	r0, r0, ip, lsl r0
     15c:	000000e8 	andeq	r0, r0, r8, ror #1
     160:	000082e8 	andeq	r8, r0, r8, ror #5
     164:	00000074 	andeq	r0, r0, r4, ror r0
     168:	8b040e42 	blhi	103a78 <_bss_end+0xf1d88>
     16c:	0b0d4201 	bleq	350978 <_bss_end+0x33ec88>
     170:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     174:	00000ecb 	andeq	r0, r0, fp, asr #29
     178:	0000001c 	andeq	r0, r0, ip, lsl r0
     17c:	000000e8 	andeq	r0, r0, r8, ror #1
     180:	0000835c 	andeq	r8, r0, ip, asr r3
     184:	00000074 	andeq	r0, r0, r4, ror r0
     188:	8b040e42 	blhi	103a98 <_bss_end+0xf1da8>
     18c:	0b0d4201 	bleq	350998 <_bss_end+0x33eca8>
     190:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     194:	00000ecb 	andeq	r0, r0, fp, asr #29
     198:	0000001c 	andeq	r0, r0, ip, lsl r0
     19c:	000000e8 	andeq	r0, r0, r8, ror #1
     1a0:	000083d0 	ldrdeq	r8, [r0], -r0
     1a4:	000000c8 	andeq	r0, r0, r8, asr #1
     1a8:	8b080e42 	blhi	203ab8 <_bss_end+0x1f1dc8>
     1ac:	42018e02 	andmi	r8, r1, #2, 28
     1b0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1b4:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
     1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1bc:	000000e8 	andeq	r0, r0, r8, ror #1
     1c0:	00008498 	muleq	r0, r8, r4
     1c4:	00000074 	andeq	r0, r0, r4, ror r0
     1c8:	8b080e42 	blhi	203ad8 <_bss_end+0x1f1de8>
     1cc:	42018e02 	andmi	r8, r1, #2, 28
     1d0:	74040b0c 	strvc	r0, [r4], #-2828	; 0xfffff4f4
     1d4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1dc:	000000e8 	andeq	r0, r0, r8, ror #1
     1e0:	0000850c 	andeq	r8, r0, ip, lsl #10
     1e4:	000000d8 	ldrdeq	r0, [r0], -r8
     1e8:	8b080e42 	blhi	203af8 <_bss_end+0x1f1e08>
     1ec:	42018e02 	andmi	r8, r1, #2, 28
     1f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1f4:	080d0c66 	stmdaeq	sp, {r1, r2, r5, r6, sl, fp}
     1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1fc:	000000e8 	andeq	r0, r0, r8, ror #1
     200:	000085e4 	andeq	r8, r0, r4, ror #11
     204:	00000084 	andeq	r0, r0, r4, lsl #1
     208:	8b080e42 	blhi	203b18 <_bss_end+0x1f1e28>
     20c:	42018e02 	andmi	r8, r1, #2, 28
     210:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     214:	00080d0c 	andeq	r0, r8, ip, lsl #26
     218:	00000024 	andeq	r0, r0, r4, lsr #32
     21c:	000000e8 	andeq	r0, r0, r8, ror #1
     220:	00008668 	andeq	r8, r0, r8, ror #12
     224:	00000198 	muleq	r0, r8, r1
     228:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     22c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     230:	8b038704 	blhi	e1e48 <_bss_end+0xd0158>
     234:	42018e02 	andmi	r8, r1, #2, 28
     238:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     23c:	180d0cc6 	stmdane	sp, {r1, r2, r6, r7, sl, fp}
     240:	00000024 	andeq	r0, r0, r4, lsr #32
     244:	000000e8 	andeq	r0, r0, r8, ror #1
     248:	00008800 	andeq	r8, r0, r0, lsl #16
     24c:	000001a0 	andeq	r0, r0, r0, lsr #3
     250:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     254:	86058506 	strhi	r8, [r5], -r6, lsl #10
     258:	8b038704 	blhi	e1e70 <_bss_end+0xd0180>
     25c:	42018e02 	andmi	r8, r1, #2, 28
     260:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     264:	180d0cca 	stmdane	sp, {r1, r3, r6, r7, sl, fp}
     268:	0000001c 	andeq	r0, r0, ip, lsl r0
     26c:	000000e8 	andeq	r0, r0, r8, ror #1
     270:	000089a0 	andeq	r8, r0, r0, lsr #19
     274:	00000054 	andeq	r0, r0, r4, asr r0
     278:	8b080e42 	blhi	203b88 <_bss_end+0x1f1e98>
     27c:	42018e02 	andmi	r8, r1, #2, 28
     280:	5e040b0c 	vmlapl.f64	d0, d4, d12
     284:	00080d0c 	andeq	r0, r8, ip, lsl #26
     288:	00000018 	andeq	r0, r0, r8, lsl r0
     28c:	000000e8 	andeq	r0, r0, r8, ror #1
     290:	000089f4 	strdeq	r8, [r0], -r4
     294:	0000001c 	andeq	r0, r0, ip, lsl r0
     298:	8b080e42 	blhi	203ba8 <_bss_end+0x1f1eb8>
     29c:	42018e02 	andmi	r8, r1, #2, 28
     2a0:	00040b0c 	andeq	r0, r4, ip, lsl #22
     2a4:	0000000c 	andeq	r0, r0, ip
     2a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2ac:	7c020001 	stcvc	0, cr0, [r2], {1}
     2b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2bc:	000090d8 	ldrdeq	r9, [r0], -r8
     2c0:	00000034 	andeq	r0, r0, r4, lsr r0
     2c4:	8b040e42 	blhi	103bd4 <_bss_end+0xf1ee4>
     2c8:	0b0d4201 	bleq	350ad4 <_bss_end+0x33ede4>
     2cc:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     2d0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2d8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2dc:	0000910c 	andeq	r9, r0, ip, lsl #2
     2e0:	00000048 	andeq	r0, r0, r8, asr #32
     2e4:	8b040e42 	blhi	103bf4 <_bss_end+0xf1f04>
     2e8:	0b0d4201 	bleq	350af4 <_bss_end+0x33ee04>
     2ec:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     2f0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2f8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2fc:	00008a10 	andeq	r8, r0, r0, lsl sl
     300:	0000006c 	andeq	r0, r0, ip, rrx
     304:	8b080e42 	blhi	203c14 <_bss_end+0x1f1f24>
     308:	42018e02 	andmi	r8, r1, #2, 28
     30c:	70040b0c 	andvc	r0, r4, ip, lsl #22
     310:	00080d0c 	andeq	r0, r8, ip, lsl #26
     314:	0000001c 	andeq	r0, r0, ip, lsl r0
     318:	000002a4 	andeq	r0, r0, r4, lsr #5
     31c:	00008a7c 	andeq	r8, r0, ip, ror sl
     320:	00000038 	andeq	r0, r0, r8, lsr r0
     324:	8b040e42 	blhi	103c34 <_bss_end+0xf1f44>
     328:	0b0d4201 	bleq	350b34 <_bss_end+0x33ee44>
     32c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     330:	00000ecb 	andeq	r0, r0, fp, asr #29
     334:	0000001c 	andeq	r0, r0, ip, lsl r0
     338:	000002a4 	andeq	r0, r0, r4, lsr #5
     33c:	00008ab4 			; <UNDEFINED> instruction: 0x00008ab4
     340:	00000054 	andeq	r0, r0, r4, asr r0
     344:	8b080e42 	blhi	203c54 <_bss_end+0x1f1f64>
     348:	42018e02 	andmi	r8, r1, #2, 28
     34c:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
     350:	00080d0c 	andeq	r0, r8, ip, lsl #26
     354:	0000001c 	andeq	r0, r0, ip, lsl r0
     358:	000002a4 	andeq	r0, r0, r4, lsr #5
     35c:	00008b08 	andeq	r8, r0, r8, lsl #22
     360:	000000e0 	andeq	r0, r0, r0, ror #1
     364:	8b080e42 	blhi	203c74 <_bss_end+0x1f1f84>
     368:	42018e02 	andmi	r8, r1, #2, 28
     36c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     370:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
     374:	0000001c 	andeq	r0, r0, ip, lsl r0
     378:	000002a4 	andeq	r0, r0, r4, lsr #5
     37c:	00008be8 	andeq	r8, r0, r8, ror #23
     380:	000000a4 	andeq	r0, r0, r4, lsr #1
     384:	8b080e42 	blhi	203c94 <_bss_end+0x1f1fa4>
     388:	42018e02 	andmi	r8, r1, #2, 28
     38c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     390:	080d0c4a 	stmdaeq	sp, {r1, r3, r6, sl, fp}
     394:	0000001c 	andeq	r0, r0, ip, lsl r0
     398:	000002a4 	andeq	r0, r0, r4, lsr #5
     39c:	00008c8c 	andeq	r8, r0, ip, lsl #25
     3a0:	00000028 	andeq	r0, r0, r8, lsr #32
     3a4:	8b040e42 	blhi	103cb4 <_bss_end+0xf1fc4>
     3a8:	0b0d4201 	bleq	350bb4 <_bss_end+0x33eec4>
     3ac:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     3b0:	00000ecb 	andeq	r0, r0, fp, asr #29
     3b4:	00000020 	andeq	r0, r0, r0, lsr #32
     3b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     3bc:	00008cb4 			; <UNDEFINED> instruction: 0x00008cb4
     3c0:	000000ec 	andeq	r0, r0, ip, ror #1
     3c4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     3c8:	8e028b03 	vmlahi.f64	d8, d2, d3
     3cc:	0b0c4201 	bleq	310bd8 <_bss_end+0x2feee8>
     3d0:	0c6c0204 	sfmeq	f0, 2, [ip], #-16
     3d4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3dc:	000002a4 	andeq	r0, r0, r4, lsr #5
     3e0:	00008da0 	andeq	r8, r0, r0, lsr #27
     3e4:	000000ec 	andeq	r0, r0, ip, ror #1
     3e8:	8b080e42 	blhi	203cf8 <_bss_end+0x1f2008>
     3ec:	42018e02 	andmi	r8, r1, #2, 28
     3f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     3f4:	080d0c6c 	stmdaeq	sp, {r2, r3, r5, r6, sl, fp}
     3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3fc:	000002a4 	andeq	r0, r0, r4, lsr #5
     400:	00008e8c 	andeq	r8, r0, ip, lsl #29
     404:	00000078 	andeq	r0, r0, r8, ror r0
     408:	8b080e42 	blhi	203d18 <_bss_end+0x1f2028>
     40c:	42018e02 	andmi	r8, r1, #2, 28
     410:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     414:	00080d0c 	andeq	r0, r8, ip, lsl #26
     418:	00000020 	andeq	r0, r0, r0, lsr #32
     41c:	000002a4 	andeq	r0, r0, r4, lsr #5
     420:	00008f04 	andeq	r8, r0, r4, lsl #30
     424:	0000015c 	andeq	r0, r0, ip, asr r1
     428:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     42c:	8e028b03 	vmlahi.f64	d8, d2, d3
     430:	0b0c4201 	bleq	310c3c <_bss_end+0x2fef4c>
     434:	0ca40204 	sfmeq	f0, 4, [r4], #16
     438:	00000c0d 	andeq	r0, r0, sp, lsl #24
     43c:	0000001c 	andeq	r0, r0, ip, lsl r0
     440:	000002a4 	andeq	r0, r0, r4, lsr #5
     444:	00009060 	andeq	r9, r0, r0, rrx
     448:	0000005c 	andeq	r0, r0, ip, asr r0
     44c:	8b080e42 	blhi	203d5c <_bss_end+0x1f206c>
     450:	42018e02 	andmi	r8, r1, #2, 28
     454:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     458:	00080d0c 	andeq	r0, r8, ip, lsl #26
     45c:	00000018 	andeq	r0, r0, r8, lsl r0
     460:	000002a4 	andeq	r0, r0, r4, lsr #5
     464:	000090bc 	strheq	r9, [r0], -ip
     468:	0000001c 	andeq	r0, r0, ip, lsl r0
     46c:	8b080e42 	blhi	203d7c <_bss_end+0x1f208c>
     470:	42018e02 	andmi	r8, r1, #2, 28
     474:	00040b0c 	andeq	r0, r4, ip, lsl #22
     478:	0000000c 	andeq	r0, r0, ip
     47c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     480:	7c020001 	stcvc	0, cr0, [r2], {1}
     484:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     488:	0000001c 	andeq	r0, r0, ip, lsl r0
     48c:	00000478 	andeq	r0, r0, r8, ror r4
     490:	00009154 	andeq	r9, r0, r4, asr r1
     494:	00000078 	andeq	r0, r0, r8, ror r0
     498:	8b040e42 	blhi	103da8 <_bss_end+0xf20b8>
     49c:	0b0d4201 	bleq	350ca8 <_bss_end+0x33efb8>
     4a0:	420d0d74 	andmi	r0, sp, #116, 26	; 0x1d00
     4a4:	00000ecb 	andeq	r0, r0, fp, asr #29
     4a8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4ac:	00000478 	andeq	r0, r0, r8, ror r4
     4b0:	0000979c 	muleq	r0, ip, r7
     4b4:	00000038 	andeq	r0, r0, r8, lsr r0
     4b8:	8b040e42 	blhi	103dc8 <_bss_end+0xf20d8>
     4bc:	0b0d4201 	bleq	350cc8 <_bss_end+0x33efd8>
     4c0:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     4c4:	00000ecb 	andeq	r0, r0, fp, asr #29
     4c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4cc:	00000478 	andeq	r0, r0, r8, ror r4
     4d0:	000091cc 	andeq	r9, r0, ip, asr #3
     4d4:	000000a8 	andeq	r0, r0, r8, lsr #1
     4d8:	8b080e42 	blhi	203de8 <_bss_end+0x1f20f8>
     4dc:	42018e02 	andmi	r8, r1, #2, 28
     4e0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     4e4:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
     4e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4ec:	00000478 	andeq	r0, r0, r8, ror r4
     4f0:	000097d4 	ldrdeq	r9, [r0], -r4
     4f4:	00000088 	andeq	r0, r0, r8, lsl #1
     4f8:	8b080e42 	blhi	203e08 <_bss_end+0x1f2118>
     4fc:	42018e02 	andmi	r8, r1, #2, 28
     500:	7e040b0c 	vmlavc.f64	d0, d4, d12
     504:	00080d0c 	andeq	r0, r8, ip, lsl #26
     508:	0000001c 	andeq	r0, r0, ip, lsl r0
     50c:	00000478 	andeq	r0, r0, r8, ror r4
     510:	00009274 	andeq	r9, r0, r4, ror r2
     514:	00000130 	andeq	r0, r0, r0, lsr r1
     518:	8b040e42 	blhi	103e28 <_bss_end+0xf2138>
     51c:	0b0d4201 	bleq	350d28 <_bss_end+0x33f038>
     520:	0d0d9002 	stceq	0, cr9, [sp, #-8]
     524:	000ecb42 	andeq	ip, lr, r2, asr #22
     528:	0000001c 	andeq	r0, r0, ip, lsl r0
     52c:	00000478 	andeq	r0, r0, r8, ror r4
     530:	0000985c 	andeq	r9, r0, ip, asr r8
     534:	0000002c 	andeq	r0, r0, ip, lsr #32
     538:	8b040e42 	blhi	103e48 <_bss_end+0xf2158>
     53c:	0b0d4201 	bleq	350d48 <_bss_end+0x33f058>
     540:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     544:	00000ecb 	andeq	r0, r0, fp, asr #29
     548:	0000001c 	andeq	r0, r0, ip, lsl r0
     54c:	00000478 	andeq	r0, r0, r8, ror r4
     550:	000093a4 	andeq	r9, r0, r4, lsr #7
     554:	000000a8 	andeq	r0, r0, r8, lsr #1
     558:	8b080e42 	blhi	203e68 <_bss_end+0x1f2178>
     55c:	42018e02 	andmi	r8, r1, #2, 28
     560:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     564:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
     568:	0000001c 	andeq	r0, r0, ip, lsl r0
     56c:	00000478 	andeq	r0, r0, r8, ror r4
     570:	0000944c 	andeq	r9, r0, ip, asr #8
     574:	00000078 	andeq	r0, r0, r8, ror r0
     578:	8b080e42 	blhi	203e88 <_bss_end+0x1f2198>
     57c:	42018e02 	andmi	r8, r1, #2, 28
     580:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     584:	00080d0c 	andeq	r0, r8, ip, lsl #26
     588:	0000001c 	andeq	r0, r0, ip, lsl r0
     58c:	00000478 	andeq	r0, r0, r8, ror r4
     590:	000094c4 	andeq	r9, r0, r4, asr #9
     594:	00000034 	andeq	r0, r0, r4, lsr r0
     598:	8b040e42 	blhi	103ea8 <_bss_end+0xf21b8>
     59c:	0b0d4201 	bleq	350da8 <_bss_end+0x33f0b8>
     5a0:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     5a4:	00000ecb 	andeq	r0, r0, fp, asr #29
     5a8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5ac:	00000478 	andeq	r0, r0, r8, ror r4
     5b0:	000094f8 	strdeq	r9, [r0], -r8
     5b4:	00000054 	andeq	r0, r0, r4, asr r0
     5b8:	8b080e42 	blhi	203ec8 <_bss_end+0x1f21d8>
     5bc:	42018e02 	andmi	r8, r1, #2, 28
     5c0:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     5c4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5cc:	00000478 	andeq	r0, r0, r8, ror r4
     5d0:	0000954c 	andeq	r9, r0, ip, asr #10
     5d4:	00000060 	andeq	r0, r0, r0, rrx
     5d8:	8b080e42 	blhi	203ee8 <_bss_end+0x1f21f8>
     5dc:	42018e02 	andmi	r8, r1, #2, 28
     5e0:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     5e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5ec:	00000478 	andeq	r0, r0, r8, ror r4
     5f0:	000095ac 	andeq	r9, r0, ip, lsr #11
     5f4:	0000017c 	andeq	r0, r0, ip, ror r1
     5f8:	8b080e42 	blhi	203f08 <_bss_end+0x1f2218>
     5fc:	42018e02 	andmi	r8, r1, #2, 28
     600:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     604:	080d0cb6 	stmdaeq	sp, {r1, r2, r4, r5, r7, sl, fp}
     608:	0000001c 	andeq	r0, r0, ip, lsl r0
     60c:	00000478 	andeq	r0, r0, r8, ror r4
     610:	00009728 	andeq	r9, r0, r8, lsr #14
     614:	00000058 	andeq	r0, r0, r8, asr r0
     618:	8b080e42 	blhi	203f28 <_bss_end+0x1f2238>
     61c:	42018e02 	andmi	r8, r1, #2, 28
     620:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     624:	00080d0c 	andeq	r0, r8, ip, lsl #26
     628:	00000018 	andeq	r0, r0, r8, lsl r0
     62c:	00000478 	andeq	r0, r0, r8, ror r4
     630:	00009780 	andeq	r9, r0, r0, lsl #15
     634:	0000001c 	andeq	r0, r0, ip, lsl r0
     638:	8b080e42 	blhi	203f48 <_bss_end+0x1f2258>
     63c:	42018e02 	andmi	r8, r1, #2, 28
     640:	00040b0c 	andeq	r0, r4, ip, lsl #22
     644:	0000000c 	andeq	r0, r0, ip
     648:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     64c:	7c020001 	stcvc	0, cr0, [r2], {1}
     650:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     654:	0000001c 	andeq	r0, r0, ip, lsl r0
     658:	00000644 	andeq	r0, r0, r4, asr #12
     65c:	0000aba0 	andeq	sl, r0, r0, lsr #23
     660:	00000030 	andeq	r0, r0, r0, lsr r0
     664:	8b080e42 	blhi	203f74 <_bss_end+0x1f2284>
     668:	42018e02 	andmi	r8, r1, #2, 28
     66c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     670:	00080d0c 	andeq	r0, r8, ip, lsl #26
     674:	0000001c 	andeq	r0, r0, ip, lsl r0
     678:	00000644 	andeq	r0, r0, r4, asr #12
     67c:	00009888 	andeq	r9, r0, r8, lsl #17
     680:	00000064 	andeq	r0, r0, r4, rrx
     684:	8b040e42 	blhi	103f94 <_bss_end+0xf22a4>
     688:	0b0d4201 	bleq	350e94 <_bss_end+0x33f1a4>
     68c:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
     690:	00000ecb 	andeq	r0, r0, fp, asr #29
     694:	00000020 	andeq	r0, r0, r0, lsr #32
     698:	00000644 	andeq	r0, r0, r4, asr #12
     69c:	000098ec 	andeq	r9, r0, ip, ror #17
     6a0:	00000734 	andeq	r0, r0, r4, lsr r7
     6a4:	8b080e42 	blhi	203fb4 <_bss_end+0x1f22c4>
     6a8:	42018e02 	andmi	r8, r1, #2, 28
     6ac:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     6b0:	0d0c0394 	stceq	3, cr0, [ip, #-592]	; 0xfffffdb0
     6b4:	00000008 	andeq	r0, r0, r8
     6b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6bc:	00000644 	andeq	r0, r0, r4, asr #12
     6c0:	0000a020 	andeq	sl, r0, r0, lsr #32
     6c4:	00000094 	muleq	r0, r4, r0
     6c8:	8b080e42 	blhi	203fd8 <_bss_end+0x1f22e8>
     6cc:	42018e02 	andmi	r8, r1, #2, 28
     6d0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     6d4:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
     6d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6dc:	00000644 	andeq	r0, r0, r4, asr #12
     6e0:	0000a0b4 	strheq	sl, [r0], -r4
     6e4:	000000d4 	ldrdeq	r0, [r0], -r4
     6e8:	8b080e42 	blhi	203ff8 <_bss_end+0x1f2308>
     6ec:	42018e02 	andmi	r8, r1, #2, 28
     6f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     6f4:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     6f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6fc:	00000644 	andeq	r0, r0, r4, asr #12
     700:	0000a188 	andeq	sl, r0, r8, lsl #3
     704:	00000028 	andeq	r0, r0, r8, lsr #32
     708:	8b040e42 	blhi	104018 <_bss_end+0xf2328>
     70c:	0b0d4201 	bleq	350f18 <_bss_end+0x33f228>
     710:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     714:	00000ecb 	andeq	r0, r0, fp, asr #29
     718:	0000001c 	andeq	r0, r0, ip, lsl r0
     71c:	00000644 	andeq	r0, r0, r4, asr #12
     720:	0000a1b0 			; <UNDEFINED> instruction: 0x0000a1b0
     724:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     728:	8b080e42 	blhi	204038 <_bss_end+0x1f2348>
     72c:	42018e02 	andmi	r8, r1, #2, 28
     730:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     734:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
     738:	0000001c 	andeq	r0, r0, ip, lsl r0
     73c:	00000644 	andeq	r0, r0, r4, asr #12
     740:	0000a280 	andeq	sl, r0, r0, lsl #5
     744:	00000148 	andeq	r0, r0, r8, asr #2
     748:	8b040e42 	blhi	104058 <_bss_end+0xf2368>
     74c:	0b0d4201 	bleq	350f58 <_bss_end+0x33f268>
     750:	0d0d9c02 	stceq	12, cr9, [sp, #-8]
     754:	000ecb42 	andeq	ip, lr, r2, asr #22
     758:	00000020 	andeq	r0, r0, r0, lsr #32
     75c:	00000644 	andeq	r0, r0, r4, asr #12
     760:	0000a3c8 	andeq	sl, r0, r8, asr #7
     764:	00000218 	andeq	r0, r0, r8, lsl r2
     768:	8b080e42 	blhi	204078 <_bss_end+0x1f2388>
     76c:	42018e02 	andmi	r8, r1, #2, 28
     770:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     774:	0d0c0106 	stfeqs	f0, [ip, #-24]	; 0xffffffe8
     778:	00000008 	andeq	r0, r0, r8
     77c:	00000020 	andeq	r0, r0, r0, lsr #32
     780:	00000644 	andeq	r0, r0, r4, asr #12
     784:	0000a5e0 	andeq	sl, r0, r0, ror #11
     788:	00000550 	andeq	r0, r0, r0, asr r5
     78c:	8b080e42 	blhi	20409c <_bss_end+0x1f23ac>
     790:	42018e02 	andmi	r8, r1, #2, 28
     794:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     798:	0d0c0294 	sfmeq	f0, 4, [ip, #-592]	; 0xfffffdb0
     79c:	00000008 	andeq	r0, r0, r8
     7a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7a4:	00000644 	andeq	r0, r0, r4, asr #12
     7a8:	0000abd0 	ldrdeq	sl, [r0], -r0
     7ac:	00000070 	andeq	r0, r0, r0, ror r0
     7b0:	8b040e42 	blhi	1040c0 <_bss_end+0xf23d0>
     7b4:	0b0d4201 	bleq	350fc0 <_bss_end+0x33f2d0>
     7b8:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
     7bc:	00000ecb 	andeq	r0, r0, fp, asr #29
     7c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7c4:	00000644 	andeq	r0, r0, r4, asr #12
     7c8:	0000ac40 	andeq	sl, r0, r0, asr #24
     7cc:	00000070 	andeq	r0, r0, r0, ror r0
     7d0:	8b040e42 	blhi	1040e0 <_bss_end+0xf23f0>
     7d4:	0b0d4201 	bleq	350fe0 <_bss_end+0x33f2f0>
     7d8:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
     7dc:	00000ecb 	andeq	r0, r0, fp, asr #29
     7e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7e4:	00000644 	andeq	r0, r0, r4, asr #12
     7e8:	0000acb0 			; <UNDEFINED> instruction: 0x0000acb0
     7ec:	0000006c 	andeq	r0, r0, ip, rrx
     7f0:	8b040e42 	blhi	104100 <_bss_end+0xf2410>
     7f4:	0b0d4201 	bleq	351000 <_bss_end+0x33f310>
     7f8:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
     7fc:	00000ecb 	andeq	r0, r0, fp, asr #29
     800:	0000001c 	andeq	r0, r0, ip, lsl r0
     804:	00000644 	andeq	r0, r0, r4, asr #12
     808:	0000ab30 	andeq	sl, r0, r0, lsr fp
     80c:	00000054 	andeq	r0, r0, r4, asr r0
     810:	8b080e42 	blhi	204120 <_bss_end+0x1f2430>
     814:	42018e02 	andmi	r8, r1, #2, 28
     818:	5e040b0c 	vmlapl.f64	d0, d4, d12
     81c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     820:	00000018 	andeq	r0, r0, r8, lsl r0
     824:	00000644 	andeq	r0, r0, r4, asr #12
     828:	0000ab84 	andeq	sl, r0, r4, lsl #23
     82c:	0000001c 	andeq	r0, r0, ip, lsl r0
     830:	8b080e42 	blhi	204140 <_bss_end+0x1f2450>
     834:	42018e02 	andmi	r8, r1, #2, 28
     838:	00040b0c 	andeq	r0, r4, ip, lsl #22
     83c:	0000000c 	andeq	r0, r0, ip
     840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     844:	7c020001 	stcvc	0, cr0, [r2], {1}
     848:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     84c:	0000001c 	andeq	r0, r0, ip, lsl r0
     850:	0000083c 	andeq	r0, r0, ip, lsr r8
     854:	0000ad1c 	andeq	sl, r0, ip, lsl sp
     858:	0000003c 	andeq	r0, r0, ip, lsr r0
     85c:	8b040e42 	blhi	10416c <_bss_end+0xf247c>
     860:	0b0d4201 	bleq	35106c <_bss_end+0x33f37c>
     864:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
     868:	00000ecb 	andeq	r0, r0, fp, asr #29
     86c:	0000001c 	andeq	r0, r0, ip, lsl r0
     870:	0000083c 	andeq	r0, r0, ip, lsr r8
     874:	0000ad58 	andeq	sl, r0, r8, asr sp
     878:	0000006c 	andeq	r0, r0, ip, rrx
     87c:	8b080e42 	blhi	20418c <_bss_end+0x1f249c>
     880:	42018e02 	andmi	r8, r1, #2, 28
     884:	6e040b0c 	vmlavs.f64	d0, d4, d12
     888:	00080d0c 	andeq	r0, r8, ip, lsl #26
     88c:	0000001c 	andeq	r0, r0, ip, lsl r0
     890:	0000083c 	andeq	r0, r0, ip, lsr r8
     894:	0000adc4 	andeq	sl, r0, r4, asr #27
     898:	00000050 	andeq	r0, r0, r0, asr r0
     89c:	8b080e42 	blhi	2041ac <_bss_end+0x1f24bc>
     8a0:	42018e02 	andmi	r8, r1, #2, 28
     8a4:	60040b0c 	andvs	r0, r4, ip, lsl #22
     8a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
     8ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     8b0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8b4:	0000ae14 	andeq	sl, r0, r4, lsl lr
     8b8:	00000028 	andeq	r0, r0, r8, lsr #32
     8bc:	8b040e42 	blhi	1041cc <_bss_end+0xf24dc>
     8c0:	0b0d4201 	bleq	3510cc <_bss_end+0x33f3dc>
     8c4:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     8c8:	00000ecb 	andeq	r0, r0, fp, asr #29
     8cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8d0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8d4:	0000ae3c 	andeq	sl, r0, ip, lsr lr
     8d8:	00000094 	muleq	r0, r4, r0
     8dc:	8b080e42 	blhi	2041ec <_bss_end+0x1f24fc>
     8e0:	42018e02 	andmi	r8, r1, #2, 28
     8e4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     8e8:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
     8ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     8f0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8f4:	0000aed0 	ldrdeq	sl, [r0], -r0
     8f8:	00000048 	andeq	r0, r0, r8, asr #32
     8fc:	8b040e42 	blhi	10420c <_bss_end+0xf251c>
     900:	0b0d4201 	bleq	35110c <_bss_end+0x33f41c>
     904:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     908:	00000ecb 	andeq	r0, r0, fp, asr #29
     90c:	0000001c 	andeq	r0, r0, ip, lsl r0
     910:	0000083c 	andeq	r0, r0, ip, lsr r8
     914:	0000af18 	andeq	sl, r0, r8, lsl pc
     918:	0000004c 	andeq	r0, r0, ip, asr #32
     91c:	8b080e42 	blhi	20422c <_bss_end+0x1f253c>
     920:	42018e02 	andmi	r8, r1, #2, 28
     924:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     928:	00080d0c 	andeq	r0, r8, ip, lsl #26
     92c:	00000018 	andeq	r0, r0, r8, lsl r0
     930:	0000083c 	andeq	r0, r0, ip, lsr r8
     934:	0000af64 	andeq	sl, r0, r4, ror #30
     938:	0000001c 	andeq	r0, r0, ip, lsl r0
     93c:	8b080e42 	blhi	20424c <_bss_end+0x1f255c>
     940:	42018e02 	andmi	r8, r1, #2, 28
     944:	00040b0c 	andeq	r0, r4, ip, lsl #22
     948:	0000000c 	andeq	r0, r0, ip
     94c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     950:	7c020001 	stcvc	0, cr0, [r2], {1}
     954:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     958:	0000001c 	andeq	r0, r0, ip, lsl r0
     95c:	00000948 	andeq	r0, r0, r8, asr #18
     960:	0000af80 	andeq	sl, r0, r0, lsl #31
     964:	00000054 	andeq	r0, r0, r4, asr r0
     968:	8b040e42 	blhi	104278 <_bss_end+0xf2588>
     96c:	0b0d4201 	bleq	351178 <_bss_end+0x33f488>
     970:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
     974:	00000ecb 	andeq	r0, r0, fp, asr #29
     978:	0000001c 	andeq	r0, r0, ip, lsl r0
     97c:	00000948 	andeq	r0, r0, r8, asr #18
     980:	0000afd4 	ldrdeq	sl, [r0], -r4
     984:	00000174 	andeq	r0, r0, r4, ror r1
     988:	8b080e42 	blhi	204298 <_bss_end+0x1f25a8>
     98c:	42018e02 	andmi	r8, r1, #2, 28
     990:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     994:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
     998:	0000001c 	andeq	r0, r0, ip, lsl r0
     99c:	00000948 	andeq	r0, r0, r8, asr #18
     9a0:	0000b148 	andeq	fp, r0, r8, asr #2
     9a4:	000000d8 	ldrdeq	r0, [r0], -r8
     9a8:	8b080e42 	blhi	2042b8 <_bss_end+0x1f25c8>
     9ac:	42018e02 	andmi	r8, r1, #2, 28
     9b0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9b4:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	00000948 	andeq	r0, r0, r8, asr #18
     9c0:	0000b220 	andeq	fp, r0, r0, lsr #4
     9c4:	00000028 	andeq	r0, r0, r8, lsr #32
     9c8:	8b040e42 	blhi	1042d8 <_bss_end+0xf25e8>
     9cc:	0b0d4201 	bleq	3511d8 <_bss_end+0x33f4e8>
     9d0:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     9d4:	00000ecb 	andeq	r0, r0, fp, asr #29
     9d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9dc:	00000948 	andeq	r0, r0, r8, asr #18
     9e0:	0000b248 	andeq	fp, r0, r8, asr #4
     9e4:	00000124 	andeq	r0, r0, r4, lsr #2
     9e8:	8b080e42 	blhi	2042f8 <_bss_end+0x1f2608>
     9ec:	42018e02 	andmi	r8, r1, #2, 28
     9f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9f4:	080d0c8a 	stmdaeq	sp, {r1, r3, r7, sl, fp}
     9f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9fc:	00000948 	andeq	r0, r0, r8, asr #18
     a00:	0000b36c 	andeq	fp, r0, ip, ror #6
     a04:	00000164 	andeq	r0, r0, r4, ror #2
     a08:	8b080e42 	blhi	204318 <_bss_end+0x1f2628>
     a0c:	42018e02 	andmi	r8, r1, #2, 28
     a10:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a14:	080d0caa 	stmdaeq	sp, {r1, r3, r5, r7, sl, fp}
     a18:	0000001c 	andeq	r0, r0, ip, lsl r0
     a1c:	00000948 	andeq	r0, r0, r8, asr #18
     a20:	0000b4d0 	ldrdeq	fp, [r0], -r0
     a24:	00000058 	andeq	r0, r0, r8, asr r0
     a28:	8b080e42 	blhi	204338 <_bss_end+0x1f2648>
     a2c:	42018e02 	andmi	r8, r1, #2, 28
     a30:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     a34:	00080d0c 	andeq	r0, r8, ip, lsl #26
     a38:	00000018 	andeq	r0, r0, r8, lsl r0
     a3c:	00000948 	andeq	r0, r0, r8, asr #18
     a40:	0000b528 	andeq	fp, r0, r8, lsr #10
     a44:	0000001c 	andeq	r0, r0, ip, lsl r0
     a48:	8b080e42 	blhi	204358 <_bss_end+0x1f2668>
     a4c:	42018e02 	andmi	r8, r1, #2, 28
     a50:	00040b0c 	andeq	r0, r4, ip, lsl #22
     a54:	0000000c 	andeq	r0, r0, ip
     a58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a5c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a60:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a64:	0000001c 	andeq	r0, r0, ip, lsl r0
     a68:	00000a54 	andeq	r0, r0, r4, asr sl
     a6c:	0000b544 	andeq	fp, r0, r4, asr #10
     a70:	00000040 	andeq	r0, r0, r0, asr #32
     a74:	8b040e42 	blhi	104384 <_bss_end+0xf2694>
     a78:	0b0d4201 	bleq	351284 <_bss_end+0x33f594>
     a7c:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     a80:	00000ecb 	andeq	r0, r0, fp, asr #29
     a84:	0000001c 	andeq	r0, r0, ip, lsl r0
     a88:	00000a54 	andeq	r0, r0, r4, asr sl
     a8c:	0000b584 	andeq	fp, r0, r4, lsl #11
     a90:	00000038 	andeq	r0, r0, r8, lsr r0
     a94:	8b040e42 	blhi	1043a4 <_bss_end+0xf26b4>
     a98:	0b0d4201 	bleq	3512a4 <_bss_end+0x33f5b4>
     a9c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     aa0:	00000ecb 	andeq	r0, r0, fp, asr #29
     aa4:	00000020 	andeq	r0, r0, r0, lsr #32
     aa8:	00000a54 	andeq	r0, r0, r4, asr sl
     aac:	0000b5bc 			; <UNDEFINED> instruction: 0x0000b5bc
     ab0:	000000cc 	andeq	r0, r0, ip, asr #1
     ab4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     ab8:	8e028b03 	vmlahi.f64	d8, d2, d3
     abc:	0b0c4201 	bleq	3112c8 <_bss_end+0x2ff5d8>
     ac0:	0c600204 	sfmeq	f0, 2, [r0], #-16
     ac4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     ac8:	0000001c 	andeq	r0, r0, ip, lsl r0
     acc:	00000a54 	andeq	r0, r0, r4, asr sl
     ad0:	0000b688 	andeq	fp, r0, r8, lsl #13
     ad4:	0000004c 	andeq	r0, r0, ip, asr #32
     ad8:	8b080e42 	blhi	2043e8 <_bss_end+0x1f26f8>
     adc:	42018e02 	andmi	r8, r1, #2, 28
     ae0:	60040b0c 	andvs	r0, r4, ip, lsl #22
     ae4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ae8:	0000001c 	andeq	r0, r0, ip, lsl r0
     aec:	00000a54 	andeq	r0, r0, r4, asr sl
     af0:	0000b6d4 	ldrdeq	fp, [r0], -r4
     af4:	00000050 	andeq	r0, r0, r0, asr r0
     af8:	8b080e42 	blhi	204408 <_bss_end+0x1f2718>
     afc:	42018e02 	andmi	r8, r1, #2, 28
     b00:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     b04:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b08:	0000001c 	andeq	r0, r0, ip, lsl r0
     b0c:	00000a54 	andeq	r0, r0, r4, asr sl
     b10:	0000b724 	andeq	fp, r0, r4, lsr #14
     b14:	00000040 	andeq	r0, r0, r0, asr #32
     b18:	8b080e42 	blhi	204428 <_bss_end+0x1f2738>
     b1c:	42018e02 	andmi	r8, r1, #2, 28
     b20:	5a040b0c 	bpl	103758 <_bss_end+0xf1a68>
     b24:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b28:	0000001c 	andeq	r0, r0, ip, lsl r0
     b2c:	00000a54 	andeq	r0, r0, r4, asr sl
     b30:	0000b764 	andeq	fp, r0, r4, ror #14
     b34:	00000054 	andeq	r0, r0, r4, asr r0
     b38:	8b080e42 	blhi	204448 <_bss_end+0x1f2758>
     b3c:	42018e02 	andmi	r8, r1, #2, 28
     b40:	5e040b0c 	vmlapl.f64	d0, d4, d12
     b44:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b48:	00000018 	andeq	r0, r0, r8, lsl r0
     b4c:	00000a54 	andeq	r0, r0, r4, asr sl
     b50:	0000b7b8 			; <UNDEFINED> instruction: 0x0000b7b8
     b54:	0000001c 	andeq	r0, r0, ip, lsl r0
     b58:	8b080e42 	blhi	204468 <_bss_end+0x1f2778>
     b5c:	42018e02 	andmi	r8, r1, #2, 28
     b60:	00040b0c 	andeq	r0, r4, ip, lsl #22
     b64:	0000000c 	andeq	r0, r0, ip
     b68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     b70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b74:	0000001c 	andeq	r0, r0, ip, lsl r0
     b78:	00000b64 	andeq	r0, r0, r4, ror #22
     b7c:	0000b7d4 	ldrdeq	fp, [r0], -r4
     b80:	00000040 	andeq	r0, r0, r0, asr #32
     b84:	8b040e42 	blhi	104494 <_bss_end+0xf27a4>
     b88:	0b0d4201 	bleq	351394 <_bss_end+0x33f6a4>
     b8c:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     b90:	00000ecb 	andeq	r0, r0, fp, asr #29
     b94:	0000001c 	andeq	r0, r0, ip, lsl r0
     b98:	00000b64 	andeq	r0, r0, r4, ror #22
     b9c:	0000b814 	andeq	fp, r0, r4, lsl r8
     ba0:	000000e8 	andeq	r0, r0, r8, ror #1
     ba4:	8b040e42 	blhi	1044b4 <_bss_end+0xf27c4>
     ba8:	0b0d4201 	bleq	3513b4 <_bss_end+0x33f6c4>
     bac:	0d0d6c02 	stceq	12, cr6, [sp, #-8]
     bb0:	000ecb42 	andeq	ip, lr, r2, asr #22
     bb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bb8:	00000b64 	andeq	r0, r0, r4, ror #22
     bbc:	0000b8fc 	strdeq	fp, [r0], -ip
     bc0:	00000068 	andeq	r0, r0, r8, rrx
     bc4:	8b040e42 	blhi	1044d4 <_bss_end+0xf27e4>
     bc8:	0b0d4201 	bleq	3513d4 <_bss_end+0x33f6e4>
     bcc:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
     bd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     bd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bd8:	00000b64 	andeq	r0, r0, r4, ror #22
     bdc:	0000b964 	andeq	fp, r0, r4, ror #18
     be0:	00000038 	andeq	r0, r0, r8, lsr r0
     be4:	8b040e42 	blhi	1044f4 <_bss_end+0xf2804>
     be8:	0b0d4201 	bleq	3513f4 <_bss_end+0x33f704>
     bec:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     bf0:	00000ecb 	andeq	r0, r0, fp, asr #29
     bf4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bf8:	00000b64 	andeq	r0, r0, r4, ror #22
     bfc:	0000b99c 	muleq	r0, ip, r9
     c00:	00000048 	andeq	r0, r0, r8, asr #32
     c04:	8b040e42 	blhi	104514 <_bss_end+0xf2824>
     c08:	0b0d4201 	bleq	351414 <_bss_end+0x33f724>
     c0c:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     c10:	00000ecb 	andeq	r0, r0, fp, asr #29
     c14:	0000001c 	andeq	r0, r0, ip, lsl r0
     c18:	00000b64 	andeq	r0, r0, r4, ror #22
     c1c:	0000b9e4 	andeq	fp, r0, r4, ror #19
     c20:	00000054 	andeq	r0, r0, r4, asr r0
     c24:	8b080e42 	blhi	204534 <_bss_end+0x1f2844>
     c28:	42018e02 	andmi	r8, r1, #2, 28
     c2c:	5e040b0c 	vmlapl.f64	d0, d4, d12
     c30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     c34:	00000018 	andeq	r0, r0, r8, lsl r0
     c38:	00000b64 	andeq	r0, r0, r4, ror #22
     c3c:	0000ba38 	andeq	fp, r0, r8, lsr sl
     c40:	0000001c 	andeq	r0, r0, ip, lsl r0
     c44:	8b080e42 	blhi	204554 <_bss_end+0x1f2864>
     c48:	42018e02 	andmi	r8, r1, #2, 28
     c4c:	00040b0c 	andeq	r0, r4, ip, lsl #22
     c50:	0000000c 	andeq	r0, r0, ip
     c54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c58:	7c020001 	stcvc	0, cr0, [r2], {1}
     c5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000c50 	andeq	r0, r0, r0, asr ip
     c68:	0000c2b0 			; <UNDEFINED> instruction: 0x0000c2b0
     c6c:	0000003c 	andeq	r0, r0, ip, lsr r0
     c70:	8b040e42 	blhi	104580 <_bss_end+0xf2890>
     c74:	0b0d4201 	bleq	351480 <_bss_end+0x33f790>
     c78:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
     c7c:	00000ecb 	andeq	r0, r0, fp, asr #29
     c80:	0000001c 	andeq	r0, r0, ip, lsl r0
     c84:	00000c50 	andeq	r0, r0, r0, asr ip
     c88:	0000ba54 	andeq	fp, r0, r4, asr sl
     c8c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     c90:	8b080e42 	blhi	2045a0 <_bss_end+0x1f28b0>
     c94:	42018e02 	andmi	r8, r1, #2, 28
     c98:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c9c:	080d0cd0 	stmdaeq	sp, {r4, r6, r7, sl, fp}
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000c50 	andeq	r0, r0, r0, asr ip
     ca8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
     cac:	00000084 	andeq	r0, r0, r4, lsl #1
     cb0:	8b080e42 	blhi	2045c0 <_bss_end+0x1f28d0>
     cb4:	42018e02 	andmi	r8, r1, #2, 28
     cb8:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     cbc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     cc0:	00000020 	andeq	r0, r0, r0, lsr #32
     cc4:	00000c50 	andeq	r0, r0, r0, asr ip
     cc8:	0000bc90 	muleq	r0, r0, ip
     ccc:	0000035c 	andeq	r0, r0, ip, asr r3
     cd0:	8b080e42 	blhi	2045e0 <_bss_end+0x1f28f0>
     cd4:	42018e02 	andmi	r8, r1, #2, 28
     cd8:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     cdc:	0d0c018e 	stfeqs	f0, [ip, #-568]	; 0xfffffdc8
     ce0:	00000008 	andeq	r0, r0, r8
     ce4:	00000020 	andeq	r0, r0, r0, lsr #32
     ce8:	00000c50 	andeq	r0, r0, r0, asr ip
     cec:	0000bfec 	andeq	fp, r0, ip, ror #31
     cf0:	0000025c 	andeq	r0, r0, ip, asr r2
     cf4:	8b080e42 	blhi	204604 <_bss_end+0x1f2914>
     cf8:	42018e02 	andmi	r8, r1, #2, 28
     cfc:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     d00:	0d0c011e 	stfeqs	f0, [ip, #-120]	; 0xffffff88
     d04:	00000008 	andeq	r0, r0, r8
     d08:	0000001c 	andeq	r0, r0, ip, lsl r0
     d0c:	00000c50 	andeq	r0, r0, r0, asr ip
     d10:	0000c2ec 	andeq	ip, r0, ip, ror #5
     d14:	0000002c 	andeq	r0, r0, ip, lsr #32
     d18:	8b080e42 	blhi	204628 <_bss_end+0x1f2938>
     d1c:	42018e02 	andmi	r8, r1, #2, 28
     d20:	50040b0c 	andpl	r0, r4, ip, lsl #22
     d24:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d28:	0000001c 	andeq	r0, r0, ip, lsl r0
     d2c:	00000c50 	andeq	r0, r0, r0, asr ip
     d30:	0000c248 	andeq	ip, r0, r8, asr #4
     d34:	0000004c 	andeq	r0, r0, ip, asr #32
     d38:	8b080e42 	blhi	204648 <_bss_end+0x1f2958>
     d3c:	42018e02 	andmi	r8, r1, #2, 28
     d40:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     d44:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d48:	00000018 	andeq	r0, r0, r8, lsl r0
     d4c:	00000c50 	andeq	r0, r0, r0, asr ip
     d50:	0000c294 	muleq	r0, r4, r2
     d54:	0000001c 	andeq	r0, r0, ip, lsl r0
     d58:	8b080e42 	blhi	204668 <_bss_end+0x1f2978>
     d5c:	42018e02 	andmi	r8, r1, #2, 28
     d60:	00040b0c 	andeq	r0, r4, ip, lsl #22
     d64:	0000000c 	andeq	r0, r0, ip
     d68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     d70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d74:	0000001c 	andeq	r0, r0, ip, lsl r0
     d78:	00000d64 	andeq	r0, r0, r4, ror #26
     d7c:	0000c318 	andeq	ip, r0, r8, lsl r3
     d80:	0000002c 	andeq	r0, r0, ip, lsr #32
     d84:	8b040e42 	blhi	104694 <_bss_end+0xf29a4>
     d88:	0b0d4201 	bleq	351594 <_bss_end+0x33f8a4>
     d8c:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     d90:	00000ecb 	andeq	r0, r0, fp, asr #29
     d94:	0000001c 	andeq	r0, r0, ip, lsl r0
     d98:	00000d64 	andeq	r0, r0, r4, ror #26
     d9c:	0000c344 	andeq	ip, r0, r4, asr #6
     da0:	0000002c 	andeq	r0, r0, ip, lsr #32
     da4:	8b040e42 	blhi	1046b4 <_bss_end+0xf29c4>
     da8:	0b0d4201 	bleq	3515b4 <_bss_end+0x33f8c4>
     dac:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     db0:	00000ecb 	andeq	r0, r0, fp, asr #29
     db4:	0000001c 	andeq	r0, r0, ip, lsl r0
     db8:	00000d64 	andeq	r0, r0, r4, ror #26
     dbc:	0000c370 	andeq	ip, r0, r0, ror r3
     dc0:	00000024 	andeq	r0, r0, r4, lsr #32
     dc4:	8b040e42 	blhi	1046d4 <_bss_end+0xf29e4>
     dc8:	0b0d4201 	bleq	3515d4 <_bss_end+0x33f8e4>
     dcc:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     dd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     dd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     dd8:	00000d64 	andeq	r0, r0, r4, ror #26
     ddc:	0000c394 	muleq	r0, r4, r3
     de0:	0000002c 	andeq	r0, r0, ip, lsr #32
     de4:	8b040e42 	blhi	1046f4 <_bss_end+0xf2a04>
     de8:	0b0d4201 	bleq	3515f4 <_bss_end+0x33f904>
     dec:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     df0:	00000ecb 	andeq	r0, r0, fp, asr #29
     df4:	0000001c 	andeq	r0, r0, ip, lsl r0
     df8:	00000d64 	andeq	r0, r0, r4, ror #26
     dfc:	0000c3c0 	andeq	ip, r0, r0, asr #7
     e00:	00000030 	andeq	r0, r0, r0, lsr r0
     e04:	8b080e42 	blhi	204714 <_bss_end+0x1f2a24>
     e08:	42018e02 	andmi	r8, r1, #2, 28
     e0c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     e10:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e14:	0000001c 	andeq	r0, r0, ip, lsl r0
     e18:	00000d64 	andeq	r0, r0, r4, ror #26
     e1c:	0000aba0 	andeq	sl, r0, r0, lsr #23
     e20:	00000030 	andeq	r0, r0, r0, lsr r0
     e24:	8b080e42 	blhi	204734 <_bss_end+0x1f2a44>
     e28:	42018e02 	andmi	r8, r1, #2, 28
     e2c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     e30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e34:	0000001c 	andeq	r0, r0, ip, lsl r0
     e38:	00000d64 	andeq	r0, r0, r4, ror #26
     e3c:	0000c3f0 	strdeq	ip, [r0], -r0
     e40:	00000034 	andeq	r0, r0, r4, lsr r0
     e44:	8b040e42 	blhi	104754 <_bss_end+0xf2a64>
     e48:	0b0d4201 	bleq	351654 <_bss_end+0x33f964>
     e4c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     e50:	00000ecb 	andeq	r0, r0, fp, asr #29
     e54:	0000001c 	andeq	r0, r0, ip, lsl r0
     e58:	00000d64 	andeq	r0, r0, r4, ror #26
     e5c:	0000c424 	andeq	ip, r0, r4, lsr #8
     e60:	00000034 	andeq	r0, r0, r4, lsr r0
     e64:	8b040e42 	blhi	104774 <_bss_end+0xf2a84>
     e68:	0b0d4201 	bleq	351674 <_bss_end+0x33f984>
     e6c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     e70:	00000ecb 	andeq	r0, r0, fp, asr #29
     e74:	0000001c 	andeq	r0, r0, ip, lsl r0
     e78:	00000d64 	andeq	r0, r0, r4, ror #26
     e7c:	0000c458 	andeq	ip, r0, r8, asr r4
     e80:	00000034 	andeq	r0, r0, r4, lsr r0
     e84:	8b080e42 	blhi	204794 <_bss_end+0x1f2aa4>
     e88:	42018e02 	andmi	r8, r1, #2, 28
     e8c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     e90:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e94:	0000001c 	andeq	r0, r0, ip, lsl r0
     e98:	00000d64 	andeq	r0, r0, r4, ror #26
     e9c:	0000c48c 	andeq	ip, r0, ip, lsl #9
     ea0:	0000007c 	andeq	r0, r0, ip, ror r0
     ea4:	8b080e42 	blhi	2047b4 <_bss_end+0x1f2ac4>
     ea8:	42018e02 	andmi	r8, r1, #2, 28
     eac:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     eb0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     eb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     eb8:	00000d64 	andeq	r0, r0, r4, ror #26
     ebc:	0000c508 	andeq	ip, r0, r8, lsl #10
     ec0:	00000044 	andeq	r0, r0, r4, asr #32
     ec4:	8b080e42 	blhi	2047d4 <_bss_end+0x1f2ae4>
     ec8:	42018e02 	andmi	r8, r1, #2, 28
     ecc:	5a040b0c 	bpl	103b04 <_bss_end+0xf1e14>
     ed0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ed4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ed8:	00000d64 	andeq	r0, r0, r4, ror #26
     edc:	0000c54c 	andeq	ip, r0, ip, asr #10
     ee0:	00000034 	andeq	r0, r0, r4, lsr r0
     ee4:	8b080e42 	blhi	2047f4 <_bss_end+0x1f2b04>
     ee8:	42018e02 	andmi	r8, r1, #2, 28
     eec:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     ef0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ef4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ef8:	00000d64 	andeq	r0, r0, r4, ror #26
     efc:	0000c580 	andeq	ip, r0, r0, lsl #11
     f00:	00000080 	andeq	r0, r0, r0, lsl #1
     f04:	8b080e42 	blhi	204814 <_bss_end+0x1f2b24>
     f08:	42018e02 	andmi	r8, r1, #2, 28
     f0c:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
     f10:	00080d0c 	andeq	r0, r8, ip, lsl #26
     f14:	0000001c 	andeq	r0, r0, ip, lsl r0
     f18:	00000d64 	andeq	r0, r0, r4, ror #26
     f1c:	0000c600 	andeq	ip, r0, r0, lsl #12
     f20:	0000007c 	andeq	r0, r0, ip, ror r0
     f24:	8b080e42 	blhi	204834 <_bss_end+0x1f2b44>
     f28:	42018e02 	andmi	r8, r1, #2, 28
     f2c:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     f30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     f34:	0000001c 	andeq	r0, r0, ip, lsl r0
     f38:	00000d64 	andeq	r0, r0, r4, ror #26
     f3c:	0000c67c 	andeq	ip, r0, ip, ror r6
     f40:	0000009c 	muleq	r0, ip, r0
     f44:	8b080e42 	blhi	204854 <_bss_end+0x1f2b64>
     f48:	42018e02 	andmi	r8, r1, #2, 28
     f4c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f50:	080d0c46 	stmdaeq	sp, {r1, r2, r6, sl, fp}
     f54:	0000001c 	andeq	r0, r0, ip, lsl r0
     f58:	00000d64 	andeq	r0, r0, r4, ror #26
     f5c:	0000c718 	andeq	ip, r0, r8, lsl r7
     f60:	0000002c 	andeq	r0, r0, ip, lsr #32
     f64:	8b040e42 	blhi	104874 <_bss_end+0xf2b84>
     f68:	0b0d4201 	bleq	351774 <_bss_end+0x33fa84>
     f6c:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     f70:	00000ecb 	andeq	r0, r0, fp, asr #29
     f74:	0000001c 	andeq	r0, r0, ip, lsl r0
     f78:	00000d64 	andeq	r0, r0, r4, ror #26
     f7c:	0000c744 	andeq	ip, r0, r4, asr #14
     f80:	00000020 	andeq	r0, r0, r0, lsr #32
     f84:	8b040e42 	blhi	104894 <_bss_end+0xf2ba4>
     f88:	0b0d4201 	bleq	351794 <_bss_end+0x33faa4>
     f8c:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
     f90:	00000ecb 	andeq	r0, r0, fp, asr #29
     f94:	00000020 	andeq	r0, r0, r0, lsr #32
     f98:	00000d64 	andeq	r0, r0, r4, ror #26
     f9c:	0000c764 	andeq	ip, r0, r4, ror #14
     fa0:	00000158 	andeq	r0, r0, r8, asr r1
     fa4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     fa8:	8e028b03 	vmlahi.f64	d8, d2, d3
     fac:	0b0c4201 	bleq	3117b8 <_bss_end+0x2ffac8>
     fb0:	0ca40204 	sfmeq	f0, 4, [r4], #16
     fb4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     fb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fbc:	00000d64 	andeq	r0, r0, r4, ror #26
     fc0:	0000c8bc 			; <UNDEFINED> instruction: 0x0000c8bc
     fc4:	0000004c 	andeq	r0, r0, ip, asr #32
     fc8:	8b080e42 	blhi	2048d8 <_bss_end+0x1f2be8>
     fcc:	42018e02 	andmi	r8, r1, #2, 28
     fd0:	5e040b0c 	vmlapl.f64	d0, d4, d12
     fd4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     fd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fdc:	00000d64 	andeq	r0, r0, r4, ror #26
     fe0:	0000c908 	andeq	ip, r0, r8, lsl #18
     fe4:	00000044 	andeq	r0, r0, r4, asr #32
     fe8:	8b080e42 	blhi	2048f8 <_bss_end+0x1f2c08>
     fec:	42018e02 	andmi	r8, r1, #2, 28
     ff0:	5a040b0c 	bpl	103c28 <_bss_end+0xf1f38>
     ff4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ff8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ffc:	00000d64 	andeq	r0, r0, r4, ror #26
    1000:	0000c94c 	andeq	ip, r0, ip, asr #18
    1004:	00000034 	andeq	r0, r0, r4, lsr r0
    1008:	8b080e42 	blhi	204918 <_bss_end+0x1f2c28>
    100c:	42018e02 	andmi	r8, r1, #2, 28
    1010:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1014:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1018:	0000001c 	andeq	r0, r0, ip, lsl r0
    101c:	00000d64 	andeq	r0, r0, r4, ror #26
    1020:	0000c980 	andeq	ip, r0, r0, lsl #19
    1024:	0000002c 	andeq	r0, r0, ip, lsr #32
    1028:	8b040e42 	blhi	104938 <_bss_end+0xf2c48>
    102c:	0b0d4201 	bleq	351838 <_bss_end+0x33fb48>
    1030:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1034:	00000ecb 	andeq	r0, r0, fp, asr #29
    1038:	0000001c 	andeq	r0, r0, ip, lsl r0
    103c:	00000d64 	andeq	r0, r0, r4, ror #26
    1040:	0000c9ac 	andeq	ip, r0, ip, lsr #19
    1044:	00000068 	andeq	r0, r0, r8, rrx
    1048:	8b080e42 	blhi	204958 <_bss_end+0x1f2c68>
    104c:	42018e02 	andmi	r8, r1, #2, 28
    1050:	6c040b0c 			; <UNDEFINED> instruction: 0x6c040b0c
    1054:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1058:	0000001c 	andeq	r0, r0, ip, lsl r0
    105c:	00000d64 	andeq	r0, r0, r4, ror #26
    1060:	0000ca14 	andeq	ip, r0, r4, lsl sl
    1064:	00000048 	andeq	r0, r0, r8, asr #32
    1068:	8b040e42 	blhi	104978 <_bss_end+0xf2c88>
    106c:	0b0d4201 	bleq	351878 <_bss_end+0x33fb88>
    1070:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    1074:	00000ecb 	andeq	r0, r0, fp, asr #29
    1078:	0000001c 	andeq	r0, r0, ip, lsl r0
    107c:	00000d64 	andeq	r0, r0, r4, ror #26
    1080:	0000ca5c 	andeq	ip, r0, ip, asr sl
    1084:	00000044 	andeq	r0, r0, r4, asr #32
    1088:	8b040e42 	blhi	104998 <_bss_end+0xf2ca8>
    108c:	0b0d4201 	bleq	351898 <_bss_end+0x33fba8>
    1090:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    1094:	00000ecb 	andeq	r0, r0, fp, asr #29
    1098:	0000001c 	andeq	r0, r0, ip, lsl r0
    109c:	00000d64 	andeq	r0, r0, r4, ror #26
    10a0:	0000caa0 	andeq	ip, r0, r0, lsr #21
    10a4:	00000020 	andeq	r0, r0, r0, lsr #32
    10a8:	8b040e42 	blhi	1049b8 <_bss_end+0xf2cc8>
    10ac:	0b0d4201 	bleq	3518b8 <_bss_end+0x33fbc8>
    10b0:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    10b4:	00000ecb 	andeq	r0, r0, fp, asr #29
    10b8:	00000020 	andeq	r0, r0, r0, lsr #32
    10bc:	00000d64 	andeq	r0, r0, r4, ror #26
    10c0:	0000cac0 	andeq	ip, r0, r0, asr #21
    10c4:	00000068 	andeq	r0, r0, r8, rrx
    10c8:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    10cc:	8e028b03 	vmlahi.f64	d8, d2, d3
    10d0:	0b0c4201 	bleq	3118dc <_bss_end+0x2ffbec>
    10d4:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    10e0:	00000d64 	andeq	r0, r0, r4, ror #26
    10e4:	0000cb28 	andeq	ip, r0, r8, lsr #22
    10e8:	00000048 	andeq	r0, r0, r8, asr #32
    10ec:	8b080e42 	blhi	2049fc <_bss_end+0x1f2d0c>
    10f0:	42018e02 	andmi	r8, r1, #2, 28
    10f4:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    10f8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    10fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1100:	00000d64 	andeq	r0, r0, r4, ror #26
    1104:	0000cb70 	andeq	ip, r0, r0, ror fp
    1108:	00000044 	andeq	r0, r0, r4, asr #32
    110c:	8b080e42 	blhi	204a1c <_bss_end+0x1f2d2c>
    1110:	42018e02 	andmi	r8, r1, #2, 28
    1114:	5a040b0c 	bpl	103d4c <_bss_end+0xf205c>
    1118:	00080d0c 	andeq	r0, r8, ip, lsl #26
    111c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1120:	00000d64 	andeq	r0, r0, r4, ror #26
    1124:	0000cbb4 			; <UNDEFINED> instruction: 0x0000cbb4
    1128:	00000034 	andeq	r0, r0, r4, lsr r0
    112c:	8b080e42 	blhi	204a3c <_bss_end+0x1f2d4c>
    1130:	42018e02 	andmi	r8, r1, #2, 28
    1134:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1138:	00080d0c 	andeq	r0, r8, ip, lsl #26
    113c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1140:	00000d64 	andeq	r0, r0, r4, ror #26
    1144:	0000cbe8 	andeq	ip, r0, r8, ror #23
    1148:	00000058 	andeq	r0, r0, r8, asr r0
    114c:	8b080e42 	blhi	204a5c <_bss_end+0x1f2d6c>
    1150:	42018e02 	andmi	r8, r1, #2, 28
    1154:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1158:	00080d0c 	andeq	r0, r8, ip, lsl #26
    115c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1160:	00000d64 	andeq	r0, r0, r4, ror #26
    1164:	0000cc40 	andeq	ip, r0, r0, asr #24
    1168:	00000070 	andeq	r0, r0, r0, ror r0
    116c:	8b080e42 	blhi	204a7c <_bss_end+0x1f2d8c>
    1170:	42018e02 	andmi	r8, r1, #2, 28
    1174:	70040b0c 	andvc	r0, r4, ip, lsl #22
    1178:	00080d0c 	andeq	r0, r8, ip, lsl #26
    117c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1180:	00000d64 	andeq	r0, r0, r4, ror #26
    1184:	0000ccb0 			; <UNDEFINED> instruction: 0x0000ccb0
    1188:	00000058 	andeq	r0, r0, r8, asr r0
    118c:	8b080e42 	blhi	204a9c <_bss_end+0x1f2dac>
    1190:	42018e02 	andmi	r8, r1, #2, 28
    1194:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1198:	00080d0c 	andeq	r0, r8, ip, lsl #26
    119c:	0000001c 	andeq	r0, r0, ip, lsl r0
    11a0:	00000d64 	andeq	r0, r0, r4, ror #26
    11a4:	0000cd08 	andeq	ip, r0, r8, lsl #26
    11a8:	0000002c 	andeq	r0, r0, ip, lsr #32
    11ac:	8b040e42 	blhi	104abc <_bss_end+0xf2dcc>
    11b0:	0b0d4201 	bleq	3519bc <_bss_end+0x33fccc>
    11b4:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    11b8:	00000ecb 	andeq	r0, r0, fp, asr #29
    11bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    11c0:	00000d64 	andeq	r0, r0, r4, ror #26
    11c4:	0000cd34 	andeq	ip, r0, r4, lsr sp
    11c8:	00000020 	andeq	r0, r0, r0, lsr #32
    11cc:	8b040e42 	blhi	104adc <_bss_end+0xf2dec>
    11d0:	0b0d4201 	bleq	3519dc <_bss_end+0x33fcec>
    11d4:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    11d8:	00000ecb 	andeq	r0, r0, fp, asr #29
    11dc:	00000020 	andeq	r0, r0, r0, lsr #32
    11e0:	00000d64 	andeq	r0, r0, r4, ror #26
    11e4:	0000cd54 	andeq	ip, r0, r4, asr sp
    11e8:	0000006c 	andeq	r0, r0, ip, rrx
    11ec:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    11f0:	8e028b03 	vmlahi.f64	d8, d2, d3
    11f4:	0b0c4201 	bleq	311a00 <_bss_end+0x2ffd10>
    11f8:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    11fc:	0000000c 	andeq	r0, r0, ip
    1200:	0000001c 	andeq	r0, r0, ip, lsl r0
    1204:	00000d64 	andeq	r0, r0, r4, ror #26
    1208:	0000cdc0 	andeq	ip, r0, r0, asr #27
    120c:	00000048 	andeq	r0, r0, r8, asr #32
    1210:	8b080e42 	blhi	204b20 <_bss_end+0x1f2e30>
    1214:	42018e02 	andmi	r8, r1, #2, 28
    1218:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    121c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1220:	0000001c 	andeq	r0, r0, ip, lsl r0
    1224:	00000d64 	andeq	r0, r0, r4, ror #26
    1228:	0000ce08 	andeq	ip, r0, r8, lsl #28
    122c:	00000044 	andeq	r0, r0, r4, asr #32
    1230:	8b080e42 	blhi	204b40 <_bss_end+0x1f2e50>
    1234:	42018e02 	andmi	r8, r1, #2, 28
    1238:	5a040b0c 	bpl	103e70 <_bss_end+0xf2180>
    123c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1240:	0000001c 	andeq	r0, r0, ip, lsl r0
    1244:	00000d64 	andeq	r0, r0, r4, ror #26
    1248:	0000ce4c 	andeq	ip, r0, ip, asr #28
    124c:	00000034 	andeq	r0, r0, r4, lsr r0
    1250:	8b080e42 	blhi	204b60 <_bss_end+0x1f2e70>
    1254:	42018e02 	andmi	r8, r1, #2, 28
    1258:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    125c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1260:	0000001c 	andeq	r0, r0, ip, lsl r0
    1264:	00000d64 	andeq	r0, r0, r4, ror #26
    1268:	0000ce80 	andeq	ip, r0, r0, lsl #29
    126c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1270:	8b040e42 	blhi	104b80 <_bss_end+0xf2e90>
    1274:	0b0d4201 	bleq	351a80 <_bss_end+0x33fd90>
    1278:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    127c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1280:	0000001c 	andeq	r0, r0, ip, lsl r0
    1284:	00000d64 	andeq	r0, r0, r4, ror #26
    1288:	0000ceac 	andeq	ip, r0, ip, lsr #29
    128c:	00000070 	andeq	r0, r0, r0, ror r0
    1290:	8b080e42 	blhi	204ba0 <_bss_end+0x1f2eb0>
    1294:	42018e02 	andmi	r8, r1, #2, 28
    1298:	70040b0c 	andvc	r0, r4, ip, lsl #22
    129c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12a4:	00000d64 	andeq	r0, r0, r4, ror #26
    12a8:	0000cf1c 	andeq	ip, r0, ip, lsl pc
    12ac:	00000058 	andeq	r0, r0, r8, asr r0
    12b0:	8b080e42 	blhi	204bc0 <_bss_end+0x1f2ed0>
    12b4:	42018e02 	andmi	r8, r1, #2, 28
    12b8:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    12bc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12c4:	00000d64 	andeq	r0, r0, r4, ror #26
    12c8:	0000cf74 	andeq	ip, r0, r4, ror pc
    12cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    12d0:	8b040e42 	blhi	104be0 <_bss_end+0xf2ef0>
    12d4:	0b0d4201 	bleq	351ae0 <_bss_end+0x33fdf0>
    12d8:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    12dc:	00000ecb 	andeq	r0, r0, fp, asr #29
    12e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12e4:	00000d64 	andeq	r0, r0, r4, ror #26
    12e8:	0000cfa0 	andeq	ip, r0, r0, lsr #31
    12ec:	00000020 	andeq	r0, r0, r0, lsr #32
    12f0:	8b040e42 	blhi	104c00 <_bss_end+0xf2f10>
    12f4:	0b0d4201 	bleq	351b00 <_bss_end+0x33fe10>
    12f8:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    12fc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1300:	00000020 	andeq	r0, r0, r0, lsr #32
    1304:	00000d64 	andeq	r0, r0, r4, ror #26
    1308:	0000cfc0 	andeq	ip, r0, r0, asr #31
    130c:	0000006c 	andeq	r0, r0, ip, rrx
    1310:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1314:	8e028b03 	vmlahi.f64	d8, d2, d3
    1318:	0b0c4201 	bleq	311b24 <_bss_end+0x2ffe34>
    131c:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    1320:	0000000c 	andeq	r0, r0, ip
    1324:	0000001c 	andeq	r0, r0, ip, lsl r0
    1328:	00000d64 	andeq	r0, r0, r4, ror #26
    132c:	0000d02c 	andeq	sp, r0, ip, lsr #32
    1330:	0000003c 	andeq	r0, r0, ip, lsr r0
    1334:	8b080e42 	blhi	204c44 <_bss_end+0x1f2f54>
    1338:	42018e02 	andmi	r8, r1, #2, 28
    133c:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1340:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1344:	0000001c 	andeq	r0, r0, ip, lsl r0
    1348:	00000d64 	andeq	r0, r0, r4, ror #26
    134c:	0000d068 	andeq	sp, r0, r8, rrx
    1350:	00000044 	andeq	r0, r0, r4, asr #32
    1354:	8b080e42 	blhi	204c64 <_bss_end+0x1f2f74>
    1358:	42018e02 	andmi	r8, r1, #2, 28
    135c:	5a040b0c 	bpl	103f94 <_bss_end+0xf22a4>
    1360:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1364:	0000001c 	andeq	r0, r0, ip, lsl r0
    1368:	00000d64 	andeq	r0, r0, r4, ror #26
    136c:	0000d0ac 	andeq	sp, r0, ip, lsr #1
    1370:	00000034 	andeq	r0, r0, r4, lsr r0
    1374:	8b080e42 	blhi	204c84 <_bss_end+0x1f2f94>
    1378:	42018e02 	andmi	r8, r1, #2, 28
    137c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1380:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1384:	00000020 	andeq	r0, r0, r0, lsr #32
    1388:	00000d64 	andeq	r0, r0, r4, ror #26
    138c:	0000d0e0 	andeq	sp, r0, r0, ror #1
    1390:	000000e8 	andeq	r0, r0, r8, ror #1
    1394:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1398:	8e028b03 	vmlahi.f64	d8, d2, d3
    139c:	0b0c4201 	bleq	311ba8 <_bss_end+0x2ffeb8>
    13a0:	0c6c0204 	sfmeq	f0, 2, [ip], #-16
    13a4:	00000c0d 	andeq	r0, r0, sp, lsl #24
    13a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ac:	00000d64 	andeq	r0, r0, r4, ror #26
    13b0:	0000d1c8 	andeq	sp, r0, r8, asr #3
    13b4:	0000002c 	andeq	r0, r0, ip, lsr #32
    13b8:	8b040e42 	blhi	104cc8 <_bss_end+0xf2fd8>
    13bc:	0b0d4201 	bleq	351bc8 <_bss_end+0x33fed8>
    13c0:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    13c4:	00000ecb 	andeq	r0, r0, fp, asr #29
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00000d64 	andeq	r0, r0, r4, ror #26
    13d0:	0000d1f4 	strdeq	sp, [r0], -r4
    13d4:	00000058 	andeq	r0, r0, r8, asr r0
    13d8:	8b080e42 	blhi	204ce8 <_bss_end+0x1f2ff8>
    13dc:	42018e02 	andmi	r8, r1, #2, 28
    13e0:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    13e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    13e8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ec:	00000d64 	andeq	r0, r0, r4, ror #26
    13f0:	0000d24c 	andeq	sp, r0, ip, asr #4
    13f4:	0000002c 	andeq	r0, r0, ip, lsr #32
    13f8:	8b040e42 	blhi	104d08 <_bss_end+0xf3018>
    13fc:	0b0d4201 	bleq	351c08 <_bss_end+0x33ff18>
    1400:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1404:	00000ecb 	andeq	r0, r0, fp, asr #29
    1408:	0000001c 	andeq	r0, r0, ip, lsl r0
    140c:	00000d64 	andeq	r0, r0, r4, ror #26
    1410:	0000d278 	andeq	sp, r0, r8, ror r2
    1414:	00000020 	andeq	r0, r0, r0, lsr #32
    1418:	8b040e42 	blhi	104d28 <_bss_end+0xf3038>
    141c:	0b0d4201 	bleq	351c28 <_bss_end+0x33ff38>
    1420:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    1424:	00000ecb 	andeq	r0, r0, fp, asr #29
    1428:	00000020 	andeq	r0, r0, r0, lsr #32
    142c:	00000d64 	andeq	r0, r0, r4, ror #26
    1430:	0000d298 	muleq	r0, r8, r2
    1434:	00000084 	andeq	r0, r0, r4, lsl #1
    1438:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    143c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1440:	0b0c4201 	bleq	311c4c <_bss_end+0x2fff5c>
    1444:	0d0c7a04 	vstreq	s14, [ip, #-16]
    1448:	0000000c 	andeq	r0, r0, ip
    144c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1450:	00000d64 	andeq	r0, r0, r4, ror #26
    1454:	0000d31c 	andeq	sp, r0, ip, lsl r3
    1458:	00000048 	andeq	r0, r0, r8, asr #32
    145c:	8b080e42 	blhi	204d6c <_bss_end+0x1f307c>
    1460:	42018e02 	andmi	r8, r1, #2, 28
    1464:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    1468:	00080d0c 	andeq	r0, r8, ip, lsl #26
    146c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1470:	00000d64 	andeq	r0, r0, r4, ror #26
    1474:	0000d364 	andeq	sp, r0, r4, ror #6
    1478:	00000044 	andeq	r0, r0, r4, asr #32
    147c:	8b080e42 	blhi	204d8c <_bss_end+0x1f309c>
    1480:	42018e02 	andmi	r8, r1, #2, 28
    1484:	5a040b0c 	bpl	1040bc <_bss_end+0xf23cc>
    1488:	00080d0c 	andeq	r0, r8, ip, lsl #26
    148c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1490:	00000d64 	andeq	r0, r0, r4, ror #26
    1494:	0000d3a8 	andeq	sp, r0, r8, lsr #7
    1498:	00000034 	andeq	r0, r0, r4, lsr r0
    149c:	8b080e42 	blhi	204dac <_bss_end+0x1f30bc>
    14a0:	42018e02 	andmi	r8, r1, #2, 28
    14a4:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    14a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    14ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    14b0:	00000d64 	andeq	r0, r0, r4, ror #26
    14b4:	0000d3dc 	ldrdeq	sp, [r0], -ip
    14b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    14bc:	8b040e42 	blhi	104dcc <_bss_end+0xf30dc>
    14c0:	0b0d4201 	bleq	351ccc <_bss_end+0x33ffdc>
    14c4:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    14c8:	00000ecb 	andeq	r0, r0, fp, asr #29
    14cc:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d0:	00000d64 	andeq	r0, r0, r4, ror #26
    14d4:	0000d408 	andeq	sp, r0, r8, lsl #8
    14d8:	0000003c 	andeq	r0, r0, ip, lsr r0
    14dc:	8b080e42 	blhi	204dec <_bss_end+0x1f30fc>
    14e0:	42018e02 	andmi	r8, r1, #2, 28
    14e4:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    14e8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    14ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    14f0:	00000d64 	andeq	r0, r0, r4, ror #26
    14f4:	0000d444 	andeq	sp, r0, r4, asr #8
    14f8:	00000058 	andeq	r0, r0, r8, asr r0
    14fc:	8b080e42 	blhi	204e0c <_bss_end+0x1f311c>
    1500:	42018e02 	andmi	r8, r1, #2, 28
    1504:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1508:	00080d0c 	andeq	r0, r8, ip, lsl #26
    150c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1510:	00000d64 	andeq	r0, r0, r4, ror #26
    1514:	0000d49c 	muleq	r0, ip, r4
    1518:	0000002c 	andeq	r0, r0, ip, lsr #32
    151c:	8b040e42 	blhi	104e2c <_bss_end+0xf313c>
    1520:	0b0d4201 	bleq	351d2c <_bss_end+0x34003c>
    1524:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1528:	00000ecb 	andeq	r0, r0, fp, asr #29
    152c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1530:	00000d64 	andeq	r0, r0, r4, ror #26
    1534:	0000d4c8 	andeq	sp, r0, r8, asr #9
    1538:	00000020 	andeq	r0, r0, r0, lsr #32
    153c:	8b040e42 	blhi	104e4c <_bss_end+0xf315c>
    1540:	0b0d4201 	bleq	351d4c <_bss_end+0x34005c>
    1544:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    1548:	00000ecb 	andeq	r0, r0, fp, asr #29
    154c:	00000020 	andeq	r0, r0, r0, lsr #32
    1550:	00000d64 	andeq	r0, r0, r4, ror #26
    1554:	0000d4e8 	andeq	sp, r0, r8, ror #9
    1558:	00000074 	andeq	r0, r0, r4, ror r0
    155c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1560:	8e028b03 	vmlahi.f64	d8, d2, d3
    1564:	0b0c4201 	bleq	311d70 <_bss_end+0x300080>
    1568:	0d0c7204 	sfmeq	f7, 4, [ip, #-16]
    156c:	0000000c 	andeq	r0, r0, ip
    1570:	0000000c 	andeq	r0, r0, ip
    1574:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1578:	7c020001 	stcvc	0, cr0, [r2], {1}
    157c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1580:	0000001c 	andeq	r0, r0, ip, lsl r0
    1584:	00001570 	andeq	r1, r0, r0, ror r5
    1588:	0000d55c 	andeq	sp, r0, ip, asr r5
    158c:	000000a0 	andeq	r0, r0, r0, lsr #1
    1590:	8b080e42 	blhi	204ea0 <_bss_end+0x1f31b0>
    1594:	42018e02 	andmi	r8, r1, #2, 28
    1598:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    159c:	080d0c46 	stmdaeq	sp, {r1, r2, r6, sl, fp}
    15a0:	00000018 	andeq	r0, r0, r8, lsl r0
    15a4:	00001570 	andeq	r1, r0, r0, ror r5
    15a8:	0000d5fc 	strdeq	sp, [r0], -ip
    15ac:	00000030 	andeq	r0, r0, r0, lsr r0
    15b0:	8b080e42 	blhi	204ec0 <_bss_end+0x1f31d0>
    15b4:	42018e02 	andmi	r8, r1, #2, 28
    15b8:	00040b0c 	andeq	r0, r4, ip, lsl #22
    15bc:	00000014 	andeq	r0, r0, r4, lsl r0
    15c0:	00001570 	andeq	r1, r0, r0, ror r5
    15c4:	0000d62c 	andeq	sp, r0, ip, lsr #12
    15c8:	00000010 	andeq	r0, r0, r0, lsl r0
    15cc:	040b0c42 	streq	r0, [fp], #-3138	; 0xfffff3be
    15d0:	000d0c44 	andeq	r0, sp, r4, asr #24
    15d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    15d8:	00001570 	andeq	r1, r0, r0, ror r5
    15dc:	0000d63c 	andeq	sp, r0, ip, lsr r6
    15e0:	00000034 	andeq	r0, r0, r4, lsr r0
    15e4:	8b040e42 	blhi	104ef4 <_bss_end+0xf3204>
    15e8:	0b0d4201 	bleq	351df4 <_bss_end+0x340104>
    15ec:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
    15f0:	00000ecb 	andeq	r0, r0, fp, asr #29
    15f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    15f8:	00001570 	andeq	r1, r0, r0, ror r5
    15fc:	0000d670 	andeq	sp, r0, r0, ror r6
    1600:	00000038 	andeq	r0, r0, r8, lsr r0
    1604:	8b040e42 	blhi	104f14 <_bss_end+0xf3224>
    1608:	0b0d4201 	bleq	351e14 <_bss_end+0x340124>
    160c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
    1610:	00000ecb 	andeq	r0, r0, fp, asr #29
    1614:	00000020 	andeq	r0, r0, r0, lsr #32
    1618:	00001570 	andeq	r1, r0, r0, ror r5
    161c:	0000d6a8 	andeq	sp, r0, r8, lsr #13
    1620:	00000044 	andeq	r0, r0, r4, asr #32
    1624:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1628:	8e028b03 	vmlahi.f64	d8, d2, d3
    162c:	0b0c4201 	bleq	311e38 <_bss_end+0x300148>
    1630:	0d0c5c04 	stceq	12, cr5, [ip, #-16]
    1634:	0000000c 	andeq	r0, r0, ip
    1638:	00000020 	andeq	r0, r0, r0, lsr #32
    163c:	00001570 	andeq	r1, r0, r0, ror r5
    1640:	0000d6ec 	andeq	sp, r0, ip, ror #13
    1644:	00000044 	andeq	r0, r0, r4, asr #32
    1648:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    164c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1650:	0b0c4201 	bleq	311e5c <_bss_end+0x30016c>
    1654:	0d0c5c04 	stceq	12, cr5, [ip, #-16]
    1658:	0000000c 	andeq	r0, r0, ip
    165c:	00000020 	andeq	r0, r0, r0, lsr #32
    1660:	00001570 	andeq	r1, r0, r0, ror r5
    1664:	0000d730 	andeq	sp, r0, r0, lsr r7
    1668:	00000050 	andeq	r0, r0, r0, asr r0
    166c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1670:	8e028b03 	vmlahi.f64	d8, d2, d3
    1674:	0b0c4201 	bleq	311e80 <_bss_end+0x300190>
    1678:	0d0c6204 	sfmeq	f6, 4, [ip, #-16]
    167c:	0000000c 	andeq	r0, r0, ip
    1680:	00000020 	andeq	r0, r0, r0, lsr #32
    1684:	00001570 	andeq	r1, r0, r0, ror r5
    1688:	0000d780 	andeq	sp, r0, r0, lsl #15
    168c:	00000050 	andeq	r0, r0, r0, asr r0
    1690:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1694:	8e028b03 	vmlahi.f64	d8, d2, d3
    1698:	0b0c4201 	bleq	311ea4 <_bss_end+0x3001b4>
    169c:	0d0c6204 	sfmeq	f6, 4, [ip, #-16]
    16a0:	0000000c 	andeq	r0, r0, ip
    16a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16a8:	00001570 	andeq	r1, r0, r0, ror r5
    16ac:	0000d7d0 	ldrdeq	sp, [r0], -r0
    16b0:	00000054 	andeq	r0, r0, r4, asr r0
    16b4:	8b080e42 	blhi	204fc4 <_bss_end+0x1f32d4>
    16b8:	42018e02 	andmi	r8, r1, #2, 28
    16bc:	5e040b0c 	vmlapl.f64	d0, d4, d12
    16c0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    16c4:	00000018 	andeq	r0, r0, r8, lsl r0
    16c8:	00001570 	andeq	r1, r0, r0, ror r5
    16cc:	0000d824 	andeq	sp, r0, r4, lsr #16
    16d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    16d4:	8b080e42 	blhi	204fe4 <_bss_end+0x1f32f4>
    16d8:	42018e02 	andmi	r8, r1, #2, 28
    16dc:	00040b0c 	andeq	r0, r4, ip, lsl #22
    16e0:	0000000c 	andeq	r0, r0, ip
    16e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16e8:	7c020001 	stcvc	0, cr0, [r2], {1}
    16ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16f0:	00000018 	andeq	r0, r0, r8, lsl r0
    16f4:	000016e0 	andeq	r1, r0, r0, ror #13
    16f8:	0000d840 	andeq	sp, r0, r0, asr #16
    16fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1700:	8b080e42 	blhi	205010 <_bss_end+0x1f3320>
    1704:	42018e02 	andmi	r8, r1, #2, 28
    1708:	00040b0c 	andeq	r0, r4, ip, lsl #22
    170c:	00000018 	andeq	r0, r0, r8, lsl r0
    1710:	000016e0 	andeq	r1, r0, r0, ror #13
    1714:	0000d85c 	andeq	sp, r0, ip, asr r8
    1718:	0000008c 	andeq	r0, r0, ip, lsl #1
    171c:	8b080e42 	blhi	20502c <_bss_end+0x1f333c>
    1720:	42018e02 	andmi	r8, r1, #2, 28
    1724:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1728:	0000000c 	andeq	r0, r0, ip
    172c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1730:	7c020001 	stcvc	0, cr0, [r2], {1}
    1734:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1738:	0000001c 	andeq	r0, r0, ip, lsl r0
    173c:	00001728 	andeq	r1, r0, r8, lsr #14
    1740:	0000d8e8 	andeq	sp, r0, r8, ror #17
    1744:	00000034 	andeq	r0, r0, r4, lsr r0
    1748:	8b080e42 	blhi	205058 <_bss_end+0x1f3368>
    174c:	42018e02 	andmi	r8, r1, #2, 28
    1750:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1754:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1758:	0000001c 	andeq	r0, r0, ip, lsl r0
    175c:	00001728 	andeq	r1, r0, r8, lsr #14
    1760:	0000d91c 	andeq	sp, r0, ip, lsl r9
    1764:	00000068 	andeq	r0, r0, r8, rrx
    1768:	8b080e42 	blhi	205078 <_bss_end+0x1f3388>
    176c:	42018e02 	andmi	r8, r1, #2, 28
    1770:	6a040b0c 	bvs	1043a8 <_bss_end+0xf26b8>
    1774:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1778:	0000001c 	andeq	r0, r0, ip, lsl r0
    177c:	00001728 	andeq	r1, r0, r8, lsr #14
    1780:	0000d984 	andeq	sp, r0, r4, lsl #19
    1784:	0000014c 	andeq	r0, r0, ip, asr #2
    1788:	8b040e42 	blhi	105098 <_bss_end+0xf33a8>
    178c:	0b0d4201 	bleq	351f98 <_bss_end+0x3402a8>
    1790:	0d0d9e02 	stceq	14, cr9, [sp, #-8]
    1794:	000ecb42 	andeq	ip, lr, r2, asr #22
    1798:	0000001c 	andeq	r0, r0, ip, lsl r0
    179c:	00001728 	andeq	r1, r0, r8, lsr #14
    17a0:	0000dad0 	ldrdeq	sp, [r0], -r0
    17a4:	0000011c 	andeq	r0, r0, ip, lsl r1
    17a8:	8b040e42 	blhi	1050b8 <_bss_end+0xf33c8>
    17ac:	0b0d4201 	bleq	351fb8 <_bss_end+0x3402c8>
    17b0:	0d0d8602 	stceq	6, cr8, [sp, #-8]
    17b4:	000ecb42 	andeq	ip, lr, r2, asr #22
    17b8:	0000001c 	andeq	r0, r0, ip, lsl r0
    17bc:	00001728 	andeq	r1, r0, r8, lsr #14
    17c0:	0000dbec 	andeq	sp, r0, ip, ror #23
    17c4:	0000004c 	andeq	r0, r0, ip, asr #32
    17c8:	8b080e42 	blhi	2050d8 <_bss_end+0x1f33e8>
    17cc:	42018e02 	andmi	r8, r1, #2, 28
    17d0:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    17d4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    17d8:	00000018 	andeq	r0, r0, r8, lsl r0
    17dc:	00001728 	andeq	r1, r0, r8, lsr #14
    17e0:	0000dc38 	andeq	sp, r0, r8, lsr ip
    17e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    17e8:	8b080e42 	blhi	2050f8 <_bss_end+0x1f3408>
    17ec:	42018e02 	andmi	r8, r1, #2, 28
    17f0:	00040b0c 	andeq	r0, r4, ip, lsl #22
    17f4:	0000000c 	andeq	r0, r0, ip
    17f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1800:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1804:	0000001c 	andeq	r0, r0, ip, lsl r0
    1808:	000017f4 	strdeq	r1, [r0], -r4
    180c:	0000dc54 	andeq	sp, r0, r4, asr ip
    1810:	00000064 	andeq	r0, r0, r4, rrx
    1814:	8b040e42 	blhi	105124 <_bss_end+0xf3434>
    1818:	0b0d4201 	bleq	352024 <_bss_end+0x340334>
    181c:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    1820:	00000ecb 	andeq	r0, r0, fp, asr #29
    1824:	0000001c 	andeq	r0, r0, ip, lsl r0
    1828:	000017f4 	strdeq	r1, [r0], -r4
    182c:	0000dcb8 			; <UNDEFINED> instruction: 0x0000dcb8
    1830:	000000bc 	strheq	r0, [r0], -ip
    1834:	8b040e42 	blhi	105144 <_bss_end+0xf3454>
    1838:	0b0d4201 	bleq	352044 <_bss_end+0x340354>
    183c:	0d0d5602 	stceq	6, cr5, [sp, #-8]
    1840:	000ecb42 	andeq	ip, lr, r2, asr #22
    1844:	0000001c 	andeq	r0, r0, ip, lsl r0
    1848:	000017f4 	strdeq	r1, [r0], -r4
    184c:	0000dd74 	andeq	sp, r0, r4, ror sp
    1850:	000000e4 	andeq	r0, r0, r4, ror #1
    1854:	8b080e42 	blhi	205164 <_bss_end+0x1f3474>
    1858:	42018e02 	andmi	r8, r1, #2, 28
    185c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1860:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
    1864:	0000001c 	andeq	r0, r0, ip, lsl r0
    1868:	000017f4 	strdeq	r1, [r0], -r4
    186c:	0000de58 	andeq	sp, r0, r8, asr lr
    1870:	00000038 	andeq	r0, r0, r8, lsr r0
    1874:	8b080e42 	blhi	205184 <_bss_end+0x1f3494>
    1878:	42018e02 	andmi	r8, r1, #2, 28
    187c:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1880:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1884:	0000001c 	andeq	r0, r0, ip, lsl r0
    1888:	000017f4 	strdeq	r1, [r0], -r4
    188c:	0000de90 	muleq	r0, r0, lr
    1890:	0000004c 	andeq	r0, r0, ip, asr #32
    1894:	8b080e42 	blhi	2051a4 <_bss_end+0x1f34b4>
    1898:	42018e02 	andmi	r8, r1, #2, 28
    189c:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    18a0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    18a4:	00000018 	andeq	r0, r0, r8, lsl r0
    18a8:	000017f4 	strdeq	r1, [r0], -r4
    18ac:	0000dedc 	ldrdeq	sp, [r0], -ip
    18b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18b4:	8b080e42 	blhi	2051c4 <_bss_end+0x1f34d4>
    18b8:	42018e02 	andmi	r8, r1, #2, 28
    18bc:	00040b0c 	andeq	r0, r4, ip, lsl #22
    18c0:	0000000c 	andeq	r0, r0, ip
    18c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    18cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18d4:	000018c0 	andeq	r1, r0, r0, asr #17
    18d8:	0000def8 	strdeq	sp, [r0], -r8
    18dc:	00000048 	andeq	r0, r0, r8, asr #32
    18e0:	8b040e42 	blhi	1051f0 <_bss_end+0xf3500>
    18e4:	0b0d4201 	bleq	3520f0 <_bss_end+0x340400>
    18e8:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    18ec:	00000ecb 	andeq	r0, r0, fp, asr #29
    18f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18f4:	000018c0 	andeq	r1, r0, r0, asr #17
    18f8:	0000df40 	andeq	sp, r0, r0, asr #30
    18fc:	00000044 	andeq	r0, r0, r4, asr #32
    1900:	8b040e42 	blhi	105210 <_bss_end+0xf3520>
    1904:	0b0d4201 	bleq	352110 <_bss_end+0x340420>
    1908:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    190c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1910:	0000001c 	andeq	r0, r0, ip, lsl r0
    1914:	000018c0 	andeq	r1, r0, r0, asr #17
    1918:	0000df84 	andeq	sp, r0, r4, lsl #31
    191c:	00000114 	andeq	r0, r0, r4, lsl r1
    1920:	8b080e42 	blhi	205230 <_bss_end+0x1f3540>
    1924:	42018e02 	andmi	r8, r1, #2, 28
    1928:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    192c:	080d0c82 	stmdaeq	sp, {r1, r7, sl, fp}
    1930:	0000001c 	andeq	r0, r0, ip, lsl r0
    1934:	000018c0 	andeq	r1, r0, r0, asr #17
    1938:	0000e098 	muleq	r0, r8, r0
    193c:	00000200 	andeq	r0, r0, r0, lsl #4
    1940:	8b080e42 	blhi	205250 <_bss_end+0x1f3560>
    1944:	42018e02 	andmi	r8, r1, #2, 28
    1948:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    194c:	080d0cea 	stmdaeq	sp, {r1, r3, r5, r6, r7, sl, fp}
    1950:	0000001c 	andeq	r0, r0, ip, lsl r0
    1954:	000018c0 	andeq	r1, r0, r0, asr #17
    1958:	0000e298 	muleq	r0, r8, r2
    195c:	00000168 	andeq	r0, r0, r8, ror #2
    1960:	8b080e42 	blhi	205270 <_bss_end+0x1f3580>
    1964:	42018e02 	andmi	r8, r1, #2, 28
    1968:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    196c:	080d0cae 	stmdaeq	sp, {r1, r2, r3, r5, r7, sl, fp}
    1970:	0000001c 	andeq	r0, r0, ip, lsl r0
    1974:	000018c0 	andeq	r1, r0, r0, asr #17
    1978:	0000e400 	andeq	lr, r0, r0, lsl #8
    197c:	00000104 	andeq	r0, r0, r4, lsl #2
    1980:	8b080e42 	blhi	205290 <_bss_end+0x1f35a0>
    1984:	42018e02 	andmi	r8, r1, #2, 28
    1988:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    198c:	080d0c7c 	stmdaeq	sp, {r2, r3, r4, r5, r6, sl, fp}
    1990:	0000001c 	andeq	r0, r0, ip, lsl r0
    1994:	000018c0 	andeq	r1, r0, r0, asr #17
    1998:	0000e504 	andeq	lr, r0, r4, lsl #10
    199c:	000000ac 	andeq	r0, r0, ip, lsr #1
    19a0:	8b080e42 	blhi	2052b0 <_bss_end+0x1f35c0>
    19a4:	42018e02 	andmi	r8, r1, #2, 28
    19a8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    19ac:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
    19b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    19b4:	000018c0 	andeq	r1, r0, r0, asr #17
    19b8:	0000e5b0 			; <UNDEFINED> instruction: 0x0000e5b0
    19bc:	00000094 	muleq	r0, r4, r0
    19c0:	8b080e42 	blhi	2052d0 <_bss_end+0x1f35e0>
    19c4:	42018e02 	andmi	r8, r1, #2, 28
    19c8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    19cc:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
    19d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    19d4:	000018c0 	andeq	r1, r0, r0, asr #17
    19d8:	0000e644 	andeq	lr, r0, r4, asr #12
    19dc:	00000064 	andeq	r0, r0, r4, rrx
    19e0:	8b040e42 	blhi	1052f0 <_bss_end+0xf3600>
    19e4:	0b0d4201 	bleq	3521f0 <_bss_end+0x340500>
    19e8:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    19ec:	00000ecb 	andeq	r0, r0, fp, asr #29
    19f0:	00000020 	andeq	r0, r0, r0, lsr #32
    19f4:	000018c0 	andeq	r1, r0, r0, asr #17
    19f8:	0000e6a8 	andeq	lr, r0, r8, lsr #13
    19fc:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    1a00:	8b080e42 	blhi	205310 <_bss_end+0x1f3620>
    1a04:	42018e02 	andmi	r8, r1, #2, 28
    1a08:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    1a0c:	0d0c01d6 	stfeqs	f0, [ip, #-856]	; 0xfffffca8
    1a10:	00000008 	andeq	r0, r0, r8
    1a14:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a18:	000018c0 	andeq	r1, r0, r0, asr #17
    1a1c:	0000eacc 	andeq	lr, r0, ip, asr #21
    1a20:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a24:	8b080e42 	blhi	205334 <_bss_end+0x1f3644>
    1a28:	42018e02 	andmi	r8, r1, #2, 28
    1a2c:	50040b0c 	andpl	r0, r4, ip, lsl #22
    1a30:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1a34:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a38:	000018c0 	andeq	r1, r0, r0, asr #17
    1a3c:	0000eaf8 	strdeq	lr, [r0], -r8
    1a40:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a44:	8b080e42 	blhi	205354 <_bss_end+0x1f3664>
    1a48:	42018e02 	andmi	r8, r1, #2, 28
    1a4c:	50040b0c 	andpl	r0, r4, ip, lsl #22
    1a50:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1a54:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a58:	000018c0 	andeq	r1, r0, r0, asr #17
    1a5c:	0000ea64 	andeq	lr, r0, r4, ror #20
    1a60:	0000004c 	andeq	r0, r0, ip, asr #32
    1a64:	8b080e42 	blhi	205374 <_bss_end+0x1f3684>
    1a68:	42018e02 	andmi	r8, r1, #2, 28
    1a6c:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    1a70:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1a74:	00000018 	andeq	r0, r0, r8, lsl r0
    1a78:	000018c0 	andeq	r1, r0, r0, asr #17
    1a7c:	0000eab0 			; <UNDEFINED> instruction: 0x0000eab0
    1a80:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a84:	8b080e42 	blhi	205394 <_bss_end+0x1f36a4>
    1a88:	42018e02 	andmi	r8, r1, #2, 28
    1a8c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a90:	0000000c 	andeq	r0, r0, ip
    1a94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a98:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a9c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1aa0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1aa4:	00001a90 	muleq	r0, r0, sl
    1aa8:	0000ebf0 	strdeq	lr, [r0], -r0
    1aac:	00000068 	andeq	r0, r0, r8, rrx
    1ab0:	8b040e42 	blhi	1053c0 <_bss_end+0xf36d0>
    1ab4:	0b0d4201 	bleq	3522c0 <_bss_end+0x3405d0>
    1ab8:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    1abc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1ac0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ac4:	00001a90 	muleq	r0, r0, sl
    1ac8:	0000ec58 	andeq	lr, r0, r8, asr ip
    1acc:	00000058 	andeq	r0, r0, r8, asr r0
    1ad0:	8b080e42 	blhi	2053e0 <_bss_end+0x1f36f0>
    1ad4:	42018e02 	andmi	r8, r1, #2, 28
    1ad8:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    1adc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1ae0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ae4:	00001a90 	muleq	r0, r0, sl
    1ae8:	0000ecb0 			; <UNDEFINED> instruction: 0x0000ecb0
    1aec:	00000058 	andeq	r0, r0, r8, asr r0
    1af0:	8b080e42 	blhi	205400 <_bss_end+0x1f3710>
    1af4:	42018e02 	andmi	r8, r1, #2, 28
    1af8:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    1afc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1b00:	0000000c 	andeq	r0, r0, ip
    1b04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b08:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b10:	00000018 	andeq	r0, r0, r8, lsl r0
    1b14:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b18:	0000ed08 	andeq	lr, r0, r8, lsl #26
    1b1c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b20:	8b080e42 	blhi	205430 <_bss_end+0x1f3740>
    1b24:	42018e02 	andmi	r8, r1, #2, 28
    1b28:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b2c:	00000018 	andeq	r0, r0, r8, lsl r0
    1b30:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b34:	0000edf8 	strdeq	lr, [r0], -r8
    1b38:	00000140 	andeq	r0, r0, r0, asr #2
    1b3c:	8b080e42 	blhi	20544c <_bss_end+0x1f375c>
    1b40:	42018e02 	andmi	r8, r1, #2, 28
    1b44:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b48:	00000018 	andeq	r0, r0, r8, lsl r0
    1b4c:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b50:	0000ef38 	andeq	lr, r0, r8, lsr pc
    1b54:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b58:	8b080e42 	blhi	205468 <_bss_end+0x1f3778>
    1b5c:	42018e02 	andmi	r8, r1, #2, 28
    1b60:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b64:	00000018 	andeq	r0, r0, r8, lsl r0
    1b68:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b6c:	0000f028 	andeq	pc, r0, r8, lsr #32
    1b70:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b74:	8b080e42 	blhi	205484 <_bss_end+0x1f3794>
    1b78:	42018e02 	andmi	r8, r1, #2, 28
    1b7c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b80:	00000018 	andeq	r0, r0, r8, lsl r0
    1b84:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b88:	0000f118 	andeq	pc, r0, r8, lsl r1	; <UNPREDICTABLE>
    1b8c:	000000ec 	andeq	r0, r0, ip, ror #1
    1b90:	8b080e42 	blhi	2054a0 <_bss_end+0x1f37b0>
    1b94:	42018e02 	andmi	r8, r1, #2, 28
    1b98:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1b9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1ba0:	00001b00 	andeq	r1, r0, r0, lsl #22
    1ba4:	0000f204 	andeq	pc, r0, r4, lsl #4
    1ba8:	00000058 	andeq	r0, r0, r8, asr r0
    1bac:	8b080e42 	blhi	2054bc <_bss_end+0x1f37cc>
    1bb0:	42018e02 	andmi	r8, r1, #2, 28
    1bb4:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1bb8:	0000000c 	andeq	r0, r0, ip
    1bbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bc0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bc4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bcc:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1bd0:	0000f25c 	andeq	pc, r0, ip, asr r2	; <UNPREDICTABLE>
    1bd4:	0000002c 	andeq	r0, r0, ip, lsr #32
    1bd8:	8b040e42 	blhi	1054e8 <_bss_end+0xf37f8>
    1bdc:	0b0d4201 	bleq	3523e8 <_bss_end+0x3406f8>
    1be0:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1be4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1be8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bec:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1bf0:	0000f288 	andeq	pc, r0, r8, lsl #5
    1bf4:	00000044 	andeq	r0, r0, r4, asr #32
    1bf8:	8b040e42 	blhi	105508 <_bss_end+0xf3818>
    1bfc:	0b0d4201 	bleq	352408 <_bss_end+0x340718>
    1c00:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    1c04:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c0c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c10:	0000f2cc 	andeq	pc, r0, ip, asr #5
    1c14:	00000050 	andeq	r0, r0, r0, asr r0
    1c18:	8b040e42 	blhi	105528 <_bss_end+0xf3838>
    1c1c:	0b0d4201 	bleq	352428 <_bss_end+0x340738>
    1c20:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1c24:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c28:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c2c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c30:	0000f31c 	andeq	pc, r0, ip, lsl r3	; <UNPREDICTABLE>
    1c34:	00000050 	andeq	r0, r0, r0, asr r0
    1c38:	8b040e42 	blhi	105548 <_bss_end+0xf3858>
    1c3c:	0b0d4201 	bleq	352448 <_bss_end+0x340758>
    1c40:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1c44:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c48:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c4c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c50:	0000f36c 	andeq	pc, r0, ip, ror #6
    1c54:	0000002c 	andeq	r0, r0, ip, lsr #32
    1c58:	8b040e42 	blhi	105568 <_bss_end+0xf3878>
    1c5c:	0b0d4201 	bleq	352468 <_bss_end+0x340778>
    1c60:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1c64:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c68:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c6c:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    1c70:	0000f398 	muleq	r0, r8, r3
    1c74:	00000050 	andeq	r0, r0, r0, asr r0
    1c78:	8b040e42 	blhi	105588 <_bss_end+0xf3898>
    1c7c:	0b0d4201 	bleq	352488 <_bss_end+0x340798>
    1c80:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1c84:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c88:	0000000c 	andeq	r0, r0, ip
    1c8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c90:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c98:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c9c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1ca0:	0000f3e8 	andeq	pc, r0, r8, ror #7
    1ca4:	00000174 	andeq	r0, r0, r4, ror r1
    1ca8:	8b080e42 	blhi	2055b8 <_bss_end+0x1f38c8>
    1cac:	42018e02 	andmi	r8, r1, #2, 28
    1cb0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1cb4:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
    1cb8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cbc:	00001c88 	andeq	r1, r0, r8, lsl #25
    1cc0:	0000f55c 	andeq	pc, r0, ip, asr r5	; <UNPREDICTABLE>
    1cc4:	0000009c 	muleq	r0, ip, r0
    1cc8:	8b040e42 	blhi	1055d8 <_bss_end+0xf38e8>
    1ccc:	0b0d4201 	bleq	3524d8 <_bss_end+0x3407e8>
    1cd0:	0d0d4602 	stceq	6, cr4, [sp, #-8]
    1cd4:	000ecb42 	andeq	ip, lr, r2, asr #22
    1cd8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cdc:	00001c88 	andeq	r1, r0, r8, lsl #25
    1ce0:	0000f5f8 	strdeq	pc, [r0], -r8
    1ce4:	000000c0 	andeq	r0, r0, r0, asr #1
    1ce8:	8b040e42 	blhi	1055f8 <_bss_end+0xf3908>
    1cec:	0b0d4201 	bleq	3524f8 <_bss_end+0x340808>
    1cf0:	0d0d5802 	stceq	8, cr5, [sp, #-8]
    1cf4:	000ecb42 	andeq	ip, lr, r2, asr #22
    1cf8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cfc:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d00:	0000f6b8 			; <UNDEFINED> instruction: 0x0000f6b8
    1d04:	000000ac 	andeq	r0, r0, ip, lsr #1
    1d08:	8b040e42 	blhi	105618 <_bss_end+0xf3928>
    1d0c:	0b0d4201 	bleq	352518 <_bss_end+0x340828>
    1d10:	0d0d4e02 	stceq	14, cr4, [sp, #-8]
    1d14:	000ecb42 	andeq	ip, lr, r2, asr #22
    1d18:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d1c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d20:	0000f764 	andeq	pc, r0, r4, ror #14
    1d24:	00000054 	andeq	r0, r0, r4, asr r0
    1d28:	8b040e42 	blhi	105638 <_bss_end+0xf3948>
    1d2c:	0b0d4201 	bleq	352538 <_bss_end+0x340848>
    1d30:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
    1d34:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d38:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d3c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d40:	0000f7b8 			; <UNDEFINED> instruction: 0x0000f7b8
    1d44:	00000068 	andeq	r0, r0, r8, rrx
    1d48:	8b040e42 	blhi	105658 <_bss_end+0xf3968>
    1d4c:	0b0d4201 	bleq	352558 <_bss_end+0x340868>
    1d50:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
    1d54:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d58:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d5c:	00001c88 	andeq	r1, r0, r8, lsl #25
    1d60:	0000f820 	andeq	pc, r0, r0, lsr #16
    1d64:	00000080 	andeq	r0, r0, r0, lsl #1
    1d68:	8b040e42 	blhi	105678 <_bss_end+0xf3988>
    1d6c:	0b0d4201 	bleq	352578 <_bss_end+0x340888>
    1d70:	420d0d78 	andmi	r0, sp, #120, 26	; 0x1e00
    1d74:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d78:	0000000c 	andeq	r0, r0, ip
    1d7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d80:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d88:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d8c:	00001d78 	andeq	r1, r0, r8, ror sp
    1d90:	0000f8a0 	andeq	pc, r0, r0, lsr #17
    1d94:	00000068 	andeq	r0, r0, r8, rrx
    1d98:	8b080e42 	blhi	2056a8 <_bss_end+0x1f39b8>
    1d9c:	42018e02 	andmi	r8, r1, #2, 28
    1da0:	6e040b0c 	vmlavs.f64	d0, d4, d12
    1da4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1da8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dac:	00001d78 	andeq	r1, r0, r8, ror sp
    1db0:	0000f908 	andeq	pc, r0, r8, lsl #18
    1db4:	0000004c 	andeq	r0, r0, ip, asr #32
    1db8:	8b080e42 	blhi	2056c8 <_bss_end+0x1f39d8>
    1dbc:	42018e02 	andmi	r8, r1, #2, 28
    1dc0:	60040b0c 	andvs	r0, r4, ip, lsl #22
    1dc4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1dc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dcc:	00001d78 	andeq	r1, r0, r8, ror sp
    1dd0:	0000f954 	andeq	pc, r0, r4, asr r9	; <UNPREDICTABLE>
    1dd4:	00000028 	andeq	r0, r0, r8, lsr #32
    1dd8:	8b040e42 	blhi	1056e8 <_bss_end+0xf39f8>
    1ddc:	0b0d4201 	bleq	3525e8 <_bss_end+0x3408f8>
    1de0:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
    1de4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1de8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dec:	00001d78 	andeq	r1, r0, r8, ror sp
    1df0:	0000f97c 	andeq	pc, r0, ip, ror r9	; <UNPREDICTABLE>
    1df4:	0000007c 	andeq	r0, r0, ip, ror r0
    1df8:	8b080e42 	blhi	205708 <_bss_end+0x1f3a18>
    1dfc:	42018e02 	andmi	r8, r1, #2, 28
    1e00:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
    1e04:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1e08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e0c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e10:	0000f9f8 	strdeq	pc, [r0], -r8
    1e14:	000000ec 	andeq	r0, r0, ip, ror #1
    1e18:	8b080e42 	blhi	205728 <_bss_end+0x1f3a38>
    1e1c:	42018e02 	andmi	r8, r1, #2, 28
    1e20:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e24:	080d0c70 	stmdaeq	sp, {r4, r5, r6, sl, fp}
    1e28:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e2c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e30:	0000fae4 	andeq	pc, r0, r4, ror #21
    1e34:	00000168 	andeq	r0, r0, r8, ror #2
    1e38:	8b080e42 	blhi	205748 <_bss_end+0x1f3a58>
    1e3c:	42018e02 	andmi	r8, r1, #2, 28
    1e40:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e44:	080d0cac 	stmdaeq	sp, {r2, r3, r5, r7, sl, fp}
    1e48:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e4c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e50:	0000fc4c 	andeq	pc, r0, ip, asr #24
    1e54:	00000058 	andeq	r0, r0, r8, asr r0
    1e58:	8b080e42 	blhi	205768 <_bss_end+0x1f3a78>
    1e5c:	42018e02 	andmi	r8, r1, #2, 28
    1e60:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
    1e64:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1e68:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e6c:	00001d78 	andeq	r1, r0, r8, ror sp
    1e70:	0000fca4 	andeq	pc, r0, r4, lsr #25
    1e74:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1e78:	8b080e42 	blhi	205788 <_bss_end+0x1f3a98>
    1e7c:	42018e02 	andmi	r8, r1, #2, 28
    1e80:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e84:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
    1e88:	0000000c 	andeq	r0, r0, ip
    1e8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1e90:	7c020001 	stcvc	0, cr0, [r2], {1}
    1e94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e98:	0000000c 	andeq	r0, r0, ip
    1e9c:	00001e88 	andeq	r1, r0, r8, lsl #29
    1ea0:	0000fd54 	andeq	pc, r0, r4, asr sp	; <UNPREDICTABLE>
    1ea4:	00000004 	andeq	r0, r0, r4
    1ea8:	0000000c 	andeq	r0, r0, ip
    1eac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1eb0:	7c010001 	stcvc	0, cr0, [r1], {1}
    1eb4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1eb8:	0000000c 	andeq	r0, r0, ip
    1ebc:	00001ea8 	andeq	r1, r0, r8, lsr #29
    1ec0:	0000fd58 	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
    1ec4:	000001ec 	andeq	r0, r0, ip, ror #3

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	00008a10 	andeq	r8, r0, r0, lsl sl
   4:	000090d8 	ldrdeq	r9, [r0], -r8
   8:	000090d8 	ldrdeq	r9, [r0], -r8
   c:	0000910c 	andeq	r9, r0, ip, lsl #2
  10:	0000910c 	andeq	r9, r0, ip, lsl #2
  14:	00009154 	andeq	r9, r0, r4, asr r1
	...
  20:	00009154 	andeq	r9, r0, r4, asr r1
  24:	0000979c 	muleq	r0, ip, r7
  28:	0000979c 	muleq	r0, ip, r7
  2c:	000097d4 	ldrdeq	r9, [r0], -r4
  30:	000097d4 	ldrdeq	r9, [r0], -r4
  34:	0000985c 	andeq	r9, r0, ip, asr r8
  38:	0000985c 	andeq	r9, r0, ip, asr r8
  3c:	00009888 	andeq	r9, r0, r8, lsl #17
	...
  48:	0000a65c 	andeq	sl, r0, ip, asr r6
  4c:	0000a6a4 	andeq	sl, r0, r4, lsr #13
  50:	0000aae8 	andeq	sl, r0, r8, ror #21
  54:	0000aaf0 	strdeq	sl, [r0], -r0
	...
  60:	0000a6a4 	andeq	sl, r0, r4, lsr #13
  64:	0000a764 	andeq	sl, r0, r4, ror #14
  68:	0000aaf0 	strdeq	sl, [r0], -r0
  6c:	0000ab00 	andeq	sl, r0, r0, lsl #22
	...
  78:	0000a764 	andeq	sl, r0, r4, ror #14
  7c:	0000aae0 	andeq	sl, r0, r0, ror #21
  80:	0000ab00 	andeq	sl, r0, r0, lsl #22
  84:	0000ab0c 	andeq	sl, r0, ip, lsl #22
	...
  90:	00009888 	andeq	r9, r0, r8, lsl #17
  94:	0000aba0 	andeq	sl, r0, r0, lsr #23
  98:	0000aba0 	andeq	sl, r0, r0, lsr #23
  9c:	0000abd0 	ldrdeq	sl, [r0], -r0
  a0:	0000abd0 	ldrdeq	sl, [r0], -r0
  a4:	0000ac40 	andeq	sl, r0, r0, asr #24
  a8:	0000ac40 	andeq	sl, r0, r0, asr #24
  ac:	0000acb0 			; <UNDEFINED> instruction: 0x0000acb0
  b0:	0000acb0 			; <UNDEFINED> instruction: 0x0000acb0
  b4:	0000ad1c 	andeq	sl, r0, ip, lsl sp
	...
  c0:	0000ba54 	andeq	fp, r0, r4, asr sl
  c4:	0000c2b0 			; <UNDEFINED> instruction: 0x0000c2b0
  c8:	0000c2b0 			; <UNDEFINED> instruction: 0x0000c2b0
  cc:	0000c2ec 	andeq	ip, r0, ip, ror #5
  d0:	0000c2ec 	andeq	ip, r0, ip, ror #5
  d4:	0000c318 	andeq	ip, r0, r8, lsl r3
	...
  e0:	0000c318 	andeq	ip, r0, r8, lsl r3
  e4:	0000c344 	andeq	ip, r0, r4, asr #6
  e8:	0000c344 	andeq	ip, r0, r4, asr #6
  ec:	0000c370 	andeq	ip, r0, r0, ror r3
  f0:	0000c370 	andeq	ip, r0, r0, ror r3
  f4:	0000c394 	muleq	r0, r4, r3
  f8:	0000c394 	muleq	r0, r4, r3
  fc:	0000c3c0 	andeq	ip, r0, r0, asr #7
 100:	0000c3c0 	andeq	ip, r0, r0, asr #7
 104:	0000c3f0 	strdeq	ip, [r0], -r0
 108:	0000aba0 	andeq	sl, r0, r0, lsr #23
 10c:	0000abd0 	ldrdeq	sl, [r0], -r0
 110:	0000c3f0 	strdeq	ip, [r0], -r0
 114:	0000c424 	andeq	ip, r0, r4, lsr #8
 118:	0000c424 	andeq	ip, r0, r4, lsr #8
 11c:	0000c458 	andeq	ip, r0, r8, asr r4
 120:	0000c458 	andeq	ip, r0, r8, asr r4
 124:	0000c48c 	andeq	ip, r0, ip, lsl #9
 128:	0000c48c 	andeq	ip, r0, ip, lsl #9
 12c:	0000c508 	andeq	ip, r0, r8, lsl #10
 130:	0000c508 	andeq	ip, r0, r8, lsl #10
 134:	0000c54c 	andeq	ip, r0, ip, asr #10
 138:	0000c54c 	andeq	ip, r0, ip, asr #10
 13c:	0000c580 	andeq	ip, r0, r0, lsl #11
 140:	0000c580 	andeq	ip, r0, r0, lsl #11
 144:	0000c600 	andeq	ip, r0, r0, lsl #12
 148:	0000c600 	andeq	ip, r0, r0, lsl #12
 14c:	0000c67c 	andeq	ip, r0, ip, ror r6
 150:	0000c67c 	andeq	ip, r0, ip, ror r6
 154:	0000c718 	andeq	ip, r0, r8, lsl r7
 158:	0000c718 	andeq	ip, r0, r8, lsl r7
 15c:	0000c744 	andeq	ip, r0, r4, asr #14
 160:	0000c744 	andeq	ip, r0, r4, asr #14
 164:	0000c764 	andeq	ip, r0, r4, ror #14
 168:	0000c764 	andeq	ip, r0, r4, ror #14
 16c:	0000c8bc 			; <UNDEFINED> instruction: 0x0000c8bc
 170:	0000c8bc 			; <UNDEFINED> instruction: 0x0000c8bc
 174:	0000c908 	andeq	ip, r0, r8, lsl #18
 178:	0000c908 	andeq	ip, r0, r8, lsl #18
 17c:	0000c94c 	andeq	ip, r0, ip, asr #18
 180:	0000c94c 	andeq	ip, r0, ip, asr #18
 184:	0000c980 	andeq	ip, r0, r0, lsl #19
 188:	0000c980 	andeq	ip, r0, r0, lsl #19
 18c:	0000c9ac 	andeq	ip, r0, ip, lsr #19
 190:	0000c9ac 	andeq	ip, r0, ip, lsr #19
 194:	0000ca14 	andeq	ip, r0, r4, lsl sl
 198:	0000ca14 	andeq	ip, r0, r4, lsl sl
 19c:	0000ca5c 	andeq	ip, r0, ip, asr sl
 1a0:	0000ca5c 	andeq	ip, r0, ip, asr sl
 1a4:	0000caa0 	andeq	ip, r0, r0, lsr #21
 1a8:	0000caa0 	andeq	ip, r0, r0, lsr #21
 1ac:	0000cac0 	andeq	ip, r0, r0, asr #21
 1b0:	0000cac0 	andeq	ip, r0, r0, asr #21
 1b4:	0000cb28 	andeq	ip, r0, r8, lsr #22
 1b8:	0000cb28 	andeq	ip, r0, r8, lsr #22
 1bc:	0000cb70 	andeq	ip, r0, r0, ror fp
 1c0:	0000cb70 	andeq	ip, r0, r0, ror fp
 1c4:	0000cbb4 			; <UNDEFINED> instruction: 0x0000cbb4
 1c8:	0000cbb4 			; <UNDEFINED> instruction: 0x0000cbb4
 1cc:	0000cbe8 	andeq	ip, r0, r8, ror #23
 1d0:	0000cbe8 	andeq	ip, r0, r8, ror #23
 1d4:	0000cc40 	andeq	ip, r0, r0, asr #24
 1d8:	0000cc40 	andeq	ip, r0, r0, asr #24
 1dc:	0000ccb0 			; <UNDEFINED> instruction: 0x0000ccb0
 1e0:	0000ccb0 			; <UNDEFINED> instruction: 0x0000ccb0
 1e4:	0000cd08 	andeq	ip, r0, r8, lsl #26
 1e8:	0000cd08 	andeq	ip, r0, r8, lsl #26
 1ec:	0000cd34 	andeq	ip, r0, r4, lsr sp
 1f0:	0000cd34 	andeq	ip, r0, r4, lsr sp
 1f4:	0000cd54 	andeq	ip, r0, r4, asr sp
 1f8:	0000cd54 	andeq	ip, r0, r4, asr sp
 1fc:	0000cdc0 	andeq	ip, r0, r0, asr #27
 200:	0000cdc0 	andeq	ip, r0, r0, asr #27
 204:	0000ce08 	andeq	ip, r0, r8, lsl #28
 208:	0000ce08 	andeq	ip, r0, r8, lsl #28
 20c:	0000ce4c 	andeq	ip, r0, ip, asr #28
 210:	0000ce4c 	andeq	ip, r0, ip, asr #28
 214:	0000ce80 	andeq	ip, r0, r0, lsl #29
 218:	0000ce80 	andeq	ip, r0, r0, lsl #29
 21c:	0000ceac 	andeq	ip, r0, ip, lsr #29
 220:	0000ceac 	andeq	ip, r0, ip, lsr #29
 224:	0000cf1c 	andeq	ip, r0, ip, lsl pc
 228:	0000cf1c 	andeq	ip, r0, ip, lsl pc
 22c:	0000cf74 	andeq	ip, r0, r4, ror pc
 230:	0000cf74 	andeq	ip, r0, r4, ror pc
 234:	0000cfa0 	andeq	ip, r0, r0, lsr #31
 238:	0000cfa0 	andeq	ip, r0, r0, lsr #31
 23c:	0000cfc0 	andeq	ip, r0, r0, asr #31
 240:	0000cfc0 	andeq	ip, r0, r0, asr #31
 244:	0000d02c 	andeq	sp, r0, ip, lsr #32
 248:	0000d02c 	andeq	sp, r0, ip, lsr #32
 24c:	0000d068 	andeq	sp, r0, r8, rrx
 250:	0000d068 	andeq	sp, r0, r8, rrx
 254:	0000d0ac 	andeq	sp, r0, ip, lsr #1
 258:	0000d0ac 	andeq	sp, r0, ip, lsr #1
 25c:	0000d0e0 	andeq	sp, r0, r0, ror #1
 260:	0000d0e0 	andeq	sp, r0, r0, ror #1
 264:	0000d1c8 	andeq	sp, r0, r8, asr #3
 268:	0000d1c8 	andeq	sp, r0, r8, asr #3
 26c:	0000d1f4 	strdeq	sp, [r0], -r4
 270:	0000d1f4 	strdeq	sp, [r0], -r4
 274:	0000d24c 	andeq	sp, r0, ip, asr #4
 278:	0000d24c 	andeq	sp, r0, ip, asr #4
 27c:	0000d278 	andeq	sp, r0, r8, ror r2
 280:	0000d278 	andeq	sp, r0, r8, ror r2
 284:	0000d298 	muleq	r0, r8, r2
 288:	0000d298 	muleq	r0, r8, r2
 28c:	0000d31c 	andeq	sp, r0, ip, lsl r3
 290:	0000d31c 	andeq	sp, r0, ip, lsl r3
 294:	0000d364 	andeq	sp, r0, r4, ror #6
 298:	0000d364 	andeq	sp, r0, r4, ror #6
 29c:	0000d3a8 	andeq	sp, r0, r8, lsr #7
 2a0:	0000d3a8 	andeq	sp, r0, r8, lsr #7
 2a4:	0000d3dc 	ldrdeq	sp, [r0], -ip
 2a8:	0000d3dc 	ldrdeq	sp, [r0], -ip
 2ac:	0000d408 	andeq	sp, r0, r8, lsl #8
 2b0:	0000d408 	andeq	sp, r0, r8, lsl #8
 2b4:	0000d444 	andeq	sp, r0, r4, asr #8
 2b8:	0000d444 	andeq	sp, r0, r4, asr #8
 2bc:	0000d49c 	muleq	r0, ip, r4
 2c0:	0000d49c 	muleq	r0, ip, r4
 2c4:	0000d4c8 	andeq	sp, r0, r8, asr #9
 2c8:	0000d4c8 	andeq	sp, r0, r8, asr #9
 2cc:	0000d4e8 	andeq	sp, r0, r8, ror #9
 2d0:	0000d4e8 	andeq	sp, r0, r8, ror #9
 2d4:	0000d55c 	andeq	sp, r0, ip, asr r5
	...
 2e0:	0000e6f8 	strdeq	lr, [r0], -r8
 2e4:	0000e78c 	andeq	lr, r0, ip, lsl #15
 2e8:	0000ea2c 	andeq	lr, r0, ip, lsr #20
 2ec:	0000ea3c 	andeq	lr, r0, ip, lsr sl
	...
 2f8:	0000def8 	strdeq	sp, [r0], -r8
 2fc:	0000eacc 	andeq	lr, r0, ip, asr #21
 300:	0000eacc 	andeq	lr, r0, ip, asr #21
 304:	0000eaf8 	strdeq	lr, [r0], -r8
 308:	0000eaf8 	strdeq	lr, [r0], -r8
 30c:	0000eb24 	andeq	lr, r0, r4, lsr #22
	...
 318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 31c:	00000000 	andeq	r0, r0, r0
 320:	00008000 	andeq	r8, r0, r0
 324:	000080ac 	andeq	r8, r0, ip, lsr #1
 328:	0000eb80 	andeq	lr, r0, r0, lsl #23
 32c:	0000ebf0 	strdeq	lr, [r0], -r0
	...
 338:	0000fd54 	andeq	pc, r0, r4, asr sp	; <UNPREDICTABLE>
 33c:	0000fd58 	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00000000 	andeq	r0, r0, r0
   4:	0000fd54 	andeq	pc, r0, r4, asr sp	; <UNPREDICTABLE>
   8:	0000fd57 	andeq	pc, r0, r7, asr sp	; <UNPREDICTABLE>
   c:	57500001 	ldrbpl	r0, [r0, -r1]
  10:	580000fd 	stmdapl	r0, {r0, r2, r3, r4, r5, r6, r7}
  14:	040000fd 	streq	r0, [r0], #-253	; 0xffffff03
  18:	5001f300 	andpl	pc, r1, r0, lsl #6
  1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
  20:	00000000 	andeq	r0, r0, r0
	...
