
./kernel:     file format elf32-littlearm


Disassembly of section .text:

00008000 <_start>:
_start():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:14
	;@	- sem skoci bootloader, prvni na co narazi je "ldr pc, _reset_ptr" -> tedy se chova jako kdyby slo o reset a skoci na zacatek provadeni
	;@	- v cele svoji krase (vsechny "ldr" instrukce) slouzi jako predloha skutecne tabulce vektoru preruseni
	;@ na dany offset procesor skoci, kdyz je vyvolano libovolne preruseni
	;@ ARM nastavuje rovnou registr PC na tuto adresu, tzn. na teto adrese musi byt kodovana 4B instrukce skoku nekam jinam
	;@ oproti tomu napr. x86 (x86_64) obsahuje v tabulce rovnou adresu a procesor nastavuje PC (CS:IP) na adresu kterou najde v tabulce
	ldr pc, _reset_ptr						;@ 0x00 - reset - vyvolano pri resetu procesoru
    8000:	e59ff018 	ldr	pc, [pc, #24]	; 8020 <_reset_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:15
	ldr pc, _undefined_instruction_ptr		;@ 0x04 - undefined instruction - vyjimka, vyvolana pri dekodovani nezname instrukce
    8004:	e59ff018 	ldr	pc, [pc, #24]	; 8024 <_undefined_instruction_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:16
	ldr pc, _software_interrupt_ptr			;@ 0x08 - software interrupt - vyvolano, kdyz procesor provede instrukci swi
    8008:	e59ff018 	ldr	pc, [pc, #24]	; 8028 <_software_interrupt_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:17
	ldr pc, _prefetch_abort_ptr				;@ 0x0C - prefetch abort - vyvolano, kdyz se procesor snazi napr. nacist instrukci z mista, odkud nacist nejde
    800c:	e59ff018 	ldr	pc, [pc, #24]	; 802c <_prefetch_abort_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:18
	ldr pc, _data_abort_ptr					;@ 0x10 - data abort - vyvolano, kdyz se procesor snazi napr. nacist data z mista, odkud nacist nejdou
    8010:	e59ff018 	ldr	pc, [pc, #24]	; 8030 <_data_abort_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:19
	ldr pc, _unused_handler_ptr				;@ 0x14 - unused - ve specifikaci ARM neni uvedeno zadne vyuziti
    8014:	e59ff018 	ldr	pc, [pc, #24]	; 8034 <_unused_handler_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:20
	ldr pc, _irq_ptr						;@ 0x18 - IRQ - hardwarove preruseni (general purpose)
    8018:	e59ff018 	ldr	pc, [pc, #24]	; 8038 <_irq_ptr>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
	ldr pc, _fast_interrupt_ptr				;@ 0x1C - fast interrupt request - prioritni IRQ pro vysokorychlostni zalezitosti
    801c:	e59ff018 	ldr	pc, [pc, #24]	; 803c <_fast_interrupt_ptr>

00008020 <_reset_ptr>:
_reset_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8020:	00008040 	andeq	r8, r0, r0, asr #32

00008024 <_undefined_instruction_ptr>:
_undefined_instruction_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8024:	0000e870 	andeq	lr, r0, r0, ror r8

00008028 <_software_interrupt_ptr>:
_software_interrupt_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8028:	0000e874 	andeq	lr, r0, r4, ror r8

0000802c <_prefetch_abort_ptr>:
_prefetch_abort_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    802c:	0000e8bc 			; <UNDEFINED> instruction: 0x0000e8bc

00008030 <_data_abort_ptr>:
_data_abort_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8030:	0000e8c0 	andeq	lr, r0, r0, asr #17

00008034 <_unused_handler_ptr>:
_unused_handler_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8034:	00008040 	andeq	r8, r0, r0, asr #32

00008038 <_irq_ptr>:
_irq_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    8038:	0000e894 	muleq	r0, r4, r8

0000803c <_fast_interrupt_ptr>:
_fast_interrupt_ptr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
    803c:	0000d350 	andeq	sp, r0, r0, asr r3

00008040 <_reset>:
_reset():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:52


;@ kernel reset vektor - tento kod se vykona pri kazdem resetu zarizeni (i prvnim spusteni)
_reset:
	;@ nacteni tabulky vektoru preruseni do pameti
	mov r0, #0x8000			;@ adresa 0x8000 (_start) do r0
    8040:	e3a00902 	mov	r0, #32768	; 0x8000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:53
    mov r1, #0x0000			;@ adresa 0x0000 (pocatek RAM) do r1 - tam budeme vkladat tabulku vektoru preruseni
    8044:	e3a01000 	mov	r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:57

	;@ Thumb instrukce - nacteni 4B slov z pameti ulozene v r0 (0x8000) do registru r2, 3, ... 9
	;@                 - ulozeni obsahu registru r2, 3, ... 9 do pameti ulozene v registru r1 (0x0000)
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8048:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:58
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:59
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:60
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:63

	;@ baze pro systemove zasobniky
	mov r4, #0x0
    8058:	e3a04000 	mov	r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:66

	;@ nejdrive supervisor mod a jeho stack
    mov r0, #(CPSR_MODE_SVR | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    805c:	e3a000d3 	mov	r0, #211	; 0xd3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:67
    msr cpsr_c, r0
    8060:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:68
	add sp, r4, #0x8000
    8064:	e284d902 	add	sp, r4, #32768	; 0x8000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:71

	;@ na moment se prepneme do IRQ rezimu, nastavime mu stack pointer
	mov r0, #(CPSR_MODE_IRQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8068:	e3a000d2 	mov	r0, #210	; 0xd2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:72
    msr cpsr_c, r0
    806c:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:73
	add sp, r4, #0x7000
    8070:	e284da07 	add	sp, r4, #28672	; 0x7000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:76

	;@ na moment se prepneme do FIQ rezimu, nastavime mu stack pointer
	mov r0, #(CPSR_MODE_FIQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8074:	e3a000d1 	mov	r0, #209	; 0xd1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:77
    msr cpsr_c, r0
    8078:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:78
	add sp, r4, #0x6000
    807c:	e284da06 	add	sp, r4, #24576	; 0x6000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:81

	;@ nakonec system mod a stack
    mov r0, #(CPSR_MODE_SYS | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8080:	e3a000df 	mov	r0, #223	; 0xdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:82
    msr cpsr_c, r0
    8084:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:83
	add sp, r4, #0x5000
    8088:	e284da05 	add	sp, r4, #20480	; 0x5000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:86

	;@ zapneme nezarovnany pristup do pameti (nemusi byt zadouci, ale pro nase potreby je to v poradku)
	mrc p15, #0, r4, c1, c0, #0
    808c:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:87
	orr r4, #0x400000
    8090:	e3844501 	orr	r4, r4, #4194304	; 0x400000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:88
	mcr p15, #0, r4, c1, c0, #0
    8094:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:90

	bl _c_startup			;@ C startup kod (inicializace prostredi)
    8098:	eb001a09 	bl	e8c4 <_c_startup>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:91
	bl _cpp_startup			;@ C++ startup kod (volani globalnich konstruktoru, ...)
    809c:	eb001a22 	bl	e92c <_cpp_startup>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:92
	bl _kernel_main			;@ skocime do hlavniho kodu jadra (v C)
    80a0:	eb001536 	bl	d580 <_kernel_main>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:93
	bl _cpp_shutdown		;@ C++ shutdown kod (volani globalnich destruktoru, ...)
    80a4:	eb001a36 	bl	e984 <_cpp_shutdown>

000080a8 <hang>:
hang():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:95
hang:
	b hang
    80a8:	eafffffe 	b	80a8 <hang>

000080ac <__cxa_guard_acquire>:
__cxa_guard_acquire():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:11
    extern "C" int __cxa_guard_acquire(__guard*);
    extern "C" void __cxa_guard_release(__guard*);
    extern "C" void __cxa_guard_abort(__guard*);

    extern "C" int __cxa_guard_acquire(__guard* g)
    {
    80ac:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    80b0:	e28db000 	add	fp, sp, #0
    80b4:	e24dd00c 	sub	sp, sp, #12
    80b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:12
        return !*(char*)(g);
    80bc:	e51b3008 	ldr	r3, [fp, #-8]
    80c0:	e5d33000 	ldrb	r3, [r3]
    80c4:	e3530000 	cmp	r3, #0
    80c8:	03a03001 	moveq	r3, #1
    80cc:	13a03000 	movne	r3, #0
    80d0:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:13
    }
    80d4:	e1a00003 	mov	r0, r3
    80d8:	e28bd000 	add	sp, fp, #0
    80dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    80e0:	e12fff1e 	bx	lr

000080e4 <__cxa_guard_release>:
__cxa_guard_release():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:16

    extern "C" void __cxa_guard_release(__guard* g)
    {
    80e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    80e8:	e28db000 	add	fp, sp, #0
    80ec:	e24dd00c 	sub	sp, sp, #12
    80f0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:17
        *(char*)g = 1;
    80f4:	e51b3008 	ldr	r3, [fp, #-8]
    80f8:	e3a02001 	mov	r2, #1
    80fc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:18
    }
    8100:	e320f000 	nop	{0}
    8104:	e28bd000 	add	sp, fp, #0
    8108:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    810c:	e12fff1e 	bx	lr

00008110 <__cxa_guard_abort>:
__cxa_guard_abort():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:21

    extern "C" void __cxa_guard_abort(__guard*)
    {
    8110:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8114:	e28db000 	add	fp, sp, #0
    8118:	e24dd00c 	sub	sp, sp, #12
    811c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:22
    }
    8120:	e320f000 	nop	{0}
    8124:	e28bd000 	add	sp, fp, #0
    8128:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    812c:	e12fff1e 	bx	lr

00008130 <__dso_handle>:
__dso_handle():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:26
}

extern "C" void __dso_handle()
{
    8130:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8134:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:28
    // ignore dtors for now
}
    8138:	e320f000 	nop	{0}
    813c:	e28bd000 	add	sp, fp, #0
    8140:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8144:	e12fff1e 	bx	lr

00008148 <__cxa_atexit>:
__cxa_atexit():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:31

extern "C" void __cxa_atexit()
{
    8148:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    814c:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:33
    // ignore dtors for now
}
    8150:	e320f000 	nop	{0}
    8154:	e28bd000 	add	sp, fp, #0
    8158:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    815c:	e12fff1e 	bx	lr

00008160 <__cxa_pure_virtual>:
__cxa_pure_virtual():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:36

extern "C" void __cxa_pure_virtual()
{
    8160:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8164:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:38
    // pure virtual method called
}
    8168:	e320f000 	nop	{0}
    816c:	e28bd000 	add	sp, fp, #0
    8170:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8174:	e12fff1e 	bx	lr

00008178 <__aeabi_unwind_cpp_pr1>:
__aeabi_unwind_cpp_pr1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:41

extern "C" void __aeabi_unwind_cpp_pr1()
{
    8178:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    817c:	e28db000 	add	fp, sp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:42 (discriminator 1)
    while (true)
    8180:	eafffffe 	b	8180 <__aeabi_unwind_cpp_pr1+0x8>

00008184 <_ZN13CGPIO_HandlerC1Ej>:
_ZN13CGPIO_HandlerC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:8

#include <stdstring.h>

CGPIO_Handler sGPIO(hal::GPIO_Base);

CGPIO_Handler::CGPIO_Handler(unsigned int gpio_base_addr)
    8184:	e92d4800 	push	{fp, lr}
    8188:	e28db004 	add	fp, sp, #4
    818c:	e24dd008 	sub	sp, sp, #8
    8190:	e50b0008 	str	r0, [fp, #-8]
    8194:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:9
: mGPIO(reinterpret_cast<unsigned int*>(gpio_base_addr))
    8198:	e51b200c 	ldr	r2, [fp, #-12]
    819c:	e51b3008 	ldr	r3, [fp, #-8]
    81a0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:11
{
    bzero(&mPin_Reservations_Read, sizeof(mPin_Reservations_Read));
    81a4:	e51b3008 	ldr	r3, [fp, #-8]
    81a8:	e2833004 	add	r3, r3, #4
    81ac:	e3a01008 	mov	r1, #8
    81b0:	e1a00003 	mov	r0, r3
    81b4:	eb001c9e 	bl	f434 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:12
    bzero(&mPin_Reservations_Write, sizeof(mPin_Reservations_Write));
    81b8:	e51b3008 	ldr	r3, [fp, #-8]
    81bc:	e283300c 	add	r3, r3, #12
    81c0:	e3a01008 	mov	r1, #8
    81c4:	e1a00003 	mov	r0, r3
    81c8:	eb001c99 	bl	f434 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:13
}
    81cc:	e51b3008 	ldr	r3, [fp, #-8]
    81d0:	e1a00003 	mov	r0, r3
    81d4:	e24bd004 	sub	sp, fp, #4
    81d8:	e8bd8800 	pop	{fp, pc}

000081dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>:
_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:16

bool CGPIO_Handler::Get_GPFSEL_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    81dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    81e0:	e28db000 	add	fp, sp, #0
    81e4:	e24dd014 	sub	sp, sp, #20
    81e8:	e50b0008 	str	r0, [fp, #-8]
    81ec:	e50b100c 	str	r1, [fp, #-12]
    81f0:	e50b2010 	str	r2, [fp, #-16]
    81f4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:17
    if (pin > hal::GPIO_Pin_Count)
    81f8:	e51b300c 	ldr	r3, [fp, #-12]
    81fc:	e3530036 	cmp	r3, #54	; 0x36
    8200:	9a000001 	bls	820c <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:18
        return false;
    8204:	e3a03000 	mov	r3, #0
    8208:	ea000014 	b	8260 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:20

    reg = pin / 10;
    820c:	e51b300c 	ldr	r3, [fp, #-12]
    8210:	e59f2058 	ldr	r2, [pc, #88]	; 8270 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x94>
    8214:	e0832392 	umull	r2, r3, r2, r3
    8218:	e1a021a3 	lsr	r2, r3, #3
    821c:	e51b3010 	ldr	r3, [fp, #-16]
    8220:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:31
            case 3: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL3); break;
            case 4: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL4); break;
            case 5: reg = static_cast<uint32_t>(hal::GPIO_Reg::GPFSEL5); break;
    }*/

    bit_idx = (pin % 10) * 3;
    8224:	e51b100c 	ldr	r1, [fp, #-12]
    8228:	e59f3040 	ldr	r3, [pc, #64]	; 8270 <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_+0x94>
    822c:	e0832193 	umull	r2, r3, r3, r1
    8230:	e1a021a3 	lsr	r2, r3, #3
    8234:	e1a03002 	mov	r3, r2
    8238:	e1a03103 	lsl	r3, r3, #2
    823c:	e0833002 	add	r3, r3, r2
    8240:	e1a03083 	lsl	r3, r3, #1
    8244:	e0412003 	sub	r2, r1, r3
    8248:	e1a03002 	mov	r3, r2
    824c:	e1a03083 	lsl	r3, r3, #1
    8250:	e0832002 	add	r2, r3, r2
    8254:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8258:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:33

    return true;
    825c:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:34
}
    8260:	e1a00003 	mov	r0, r3
    8264:	e28bd000 	add	sp, fp, #0
    8268:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    826c:	e12fff1e 	bx	lr
    8270:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd

00008274 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:37

bool CGPIO_Handler::Get_GPCLR_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    8274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8278:	e28db000 	add	fp, sp, #0
    827c:	e24dd014 	sub	sp, sp, #20
    8280:	e50b0008 	str	r0, [fp, #-8]
    8284:	e50b100c 	str	r1, [fp, #-12]
    8288:	e50b2010 	str	r2, [fp, #-16]
    828c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:38
    if (pin > hal::GPIO_Pin_Count)
    8290:	e51b300c 	ldr	r3, [fp, #-12]
    8294:	e3530036 	cmp	r3, #54	; 0x36
    8298:	9a000001 	bls	82a4 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:39
        return false;
    829c:	e3a03000 	mov	r3, #0
    82a0:	ea00000c 	b	82d8 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPCLR0 : hal::GPIO_Reg::GPCLR1);
    82a4:	e51b300c 	ldr	r3, [fp, #-12]
    82a8:	e353001f 	cmp	r3, #31
    82ac:	8a000001 	bhi	82b8 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 1)
    82b0:	e3a0200a 	mov	r2, #10
    82b4:	ea000000 	b	82bc <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 2)
    82b8:	e3a0200b 	mov	r2, #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 4)
    82bc:	e51b3010 	ldr	r3, [fp, #-16]
    82c0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:42 (discriminator 4)
    bit_idx = pin % 32;
    82c4:	e51b300c 	ldr	r3, [fp, #-12]
    82c8:	e203201f 	and	r2, r3, #31
    82cc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    82d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:44 (discriminator 4)

    return true;
    82d4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:45
}
    82d8:	e1a00003 	mov	r0, r3
    82dc:	e28bd000 	add	sp, fp, #0
    82e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    82e4:	e12fff1e 	bx	lr

000082e8 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:48

bool CGPIO_Handler::Get_GPSET_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    82e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    82ec:	e28db000 	add	fp, sp, #0
    82f0:	e24dd014 	sub	sp, sp, #20
    82f4:	e50b0008 	str	r0, [fp, #-8]
    82f8:	e50b100c 	str	r1, [fp, #-12]
    82fc:	e50b2010 	str	r2, [fp, #-16]
    8300:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:49
    if (pin > hal::GPIO_Pin_Count)
    8304:	e51b300c 	ldr	r3, [fp, #-12]
    8308:	e3530036 	cmp	r3, #54	; 0x36
    830c:	9a000001 	bls	8318 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:50
        return false;
    8310:	e3a03000 	mov	r3, #0
    8314:	ea00000c 	b	834c <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPSET0 : hal::GPIO_Reg::GPSET1);
    8318:	e51b300c 	ldr	r3, [fp, #-12]
    831c:	e353001f 	cmp	r3, #31
    8320:	8a000001 	bhi	832c <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 1)
    8324:	e3a02007 	mov	r2, #7
    8328:	ea000000 	b	8330 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 2)
    832c:	e3a02008 	mov	r2, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 4)
    8330:	e51b3010 	ldr	r3, [fp, #-16]
    8334:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:53 (discriminator 4)
    bit_idx = pin % 32;
    8338:	e51b300c 	ldr	r3, [fp, #-12]
    833c:	e203201f 	and	r2, r3, #31
    8340:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8344:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:55 (discriminator 4)

    return true;
    8348:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:56
}
    834c:	e1a00003 	mov	r0, r3
    8350:	e28bd000 	add	sp, fp, #0
    8354:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8358:	e12fff1e 	bx	lr

0000835c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_>:
_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:59

bool CGPIO_Handler::Get_GPLEV_Location(uint32_t pin, uint32_t& reg, uint32_t& bit_idx) const
{
    835c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8360:	e28db000 	add	fp, sp, #0
    8364:	e24dd014 	sub	sp, sp, #20
    8368:	e50b0008 	str	r0, [fp, #-8]
    836c:	e50b100c 	str	r1, [fp, #-12]
    8370:	e50b2010 	str	r2, [fp, #-16]
    8374:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:60
    if (pin > hal::GPIO_Pin_Count)
    8378:	e51b300c 	ldr	r3, [fp, #-12]
    837c:	e3530036 	cmp	r3, #54	; 0x36
    8380:	9a000001 	bls	838c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:61
        return false;
    8384:	e3a03000 	mov	r3, #0
    8388:	ea00000c 	b	83c0 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63

    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPLEV0 : hal::GPIO_Reg::GPLEV1);
    838c:	e51b300c 	ldr	r3, [fp, #-12]
    8390:	e353001f 	cmp	r3, #31
    8394:	8a000001 	bhi	83a0 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 1)
    8398:	e3a0200d 	mov	r2, #13
    839c:	ea000000 	b	83a4 <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 2)
    83a0:	e3a0200e 	mov	r2, #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 4)
    83a4:	e51b3010 	ldr	r3, [fp, #-16]
    83a8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:64 (discriminator 4)
    bit_idx = pin % 32;
    83ac:	e51b300c 	ldr	r3, [fp, #-12]
    83b0:	e203201f 	and	r2, r3, #31
    83b4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    83b8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:66 (discriminator 4)

    return true;
    83bc:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:67
}
    83c0:	e1a00003 	mov	r0, r3
    83c4:	e28bd000 	add	sp, fp, #0
    83c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    83cc:	e12fff1e 	bx	lr

000083d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>:
_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:70

void CGPIO_Handler::Set_GPIO_Function(uint32_t pin, NGPIO_Function func)
{
    83d0:	e92d4800 	push	{fp, lr}
    83d4:	e28db004 	add	fp, sp, #4
    83d8:	e24dd020 	sub	sp, sp, #32
    83dc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    83e0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    83e4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:72
    uint32_t reg, bit;
    if (!Get_GPFSEL_Location(pin, reg, bit))
    83e8:	e24b3014 	sub	r3, fp, #20
    83ec:	e24b2010 	sub	r2, fp, #16
    83f0:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    83f4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    83f8:	ebffff77 	bl	81dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>
    83fc:	e1a03000 	mov	r3, r0
    8400:	e2233001 	eor	r3, r3, #1
    8404:	e6ef3073 	uxtb	r3, r3
    8408:	e3530000 	cmp	r3, #0
    840c:	1a00001e 	bne	848c <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:75
        return;

    unsigned int mode = static_cast<unsigned int>(func);
    8410:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    8414:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:77

    unsigned int rd = mGPIO[reg];
    8418:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    841c:	e5932000 	ldr	r2, [r3]
    8420:	e51b3010 	ldr	r3, [fp, #-16]
    8424:	e1a03103 	lsl	r3, r3, #2
    8428:	e0823003 	add	r3, r2, r3
    842c:	e5933000 	ldr	r3, [r3]
    8430:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:78
    rd &= ~(7 << bit);
    8434:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8438:	e3a02007 	mov	r2, #7
    843c:	e1a03312 	lsl	r3, r2, r3
    8440:	e1e03003 	mvn	r3, r3
    8444:	e1a02003 	mov	r2, r3
    8448:	e51b300c 	ldr	r3, [fp, #-12]
    844c:	e0033002 	and	r3, r3, r2
    8450:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:79
    rd |= (mode << bit);
    8454:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    8458:	e51b2008 	ldr	r2, [fp, #-8]
    845c:	e1a03312 	lsl	r3, r2, r3
    8460:	e51b200c 	ldr	r2, [fp, #-12]
    8464:	e1823003 	orr	r3, r2, r3
    8468:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:81

    mGPIO[reg] = rd;
    846c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8470:	e5932000 	ldr	r2, [r3]
    8474:	e51b3010 	ldr	r3, [fp, #-16]
    8478:	e1a03103 	lsl	r3, r3, #2
    847c:	e0823003 	add	r3, r2, r3
    8480:	e51b200c 	ldr	r2, [fp, #-12]
    8484:	e5832000 	str	r2, [r3]
    8488:	ea000000 	b	8490 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:73
        return;
    848c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:82
}
    8490:	e24bd004 	sub	sp, fp, #4
    8494:	e8bd8800 	pop	{fp, pc}

00008498 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj>:
_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:85

NGPIO_Function CGPIO_Handler::Get_GPIO_Function(uint32_t pin) const
{
    8498:	e92d4800 	push	{fp, lr}
    849c:	e28db004 	add	fp, sp, #4
    84a0:	e24dd010 	sub	sp, sp, #16
    84a4:	e50b0010 	str	r0, [fp, #-16]
    84a8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:87
    uint32_t reg, bit;
    if (!Get_GPFSEL_Location(pin, reg, bit))
    84ac:	e24b300c 	sub	r3, fp, #12
    84b0:	e24b2008 	sub	r2, fp, #8
    84b4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    84b8:	e51b0010 	ldr	r0, [fp, #-16]
    84bc:	ebffff46 	bl	81dc <_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_>
    84c0:	e1a03000 	mov	r3, r0
    84c4:	e2233001 	eor	r3, r3, #1
    84c8:	e6ef3073 	uxtb	r3, r3
    84cc:	e3530000 	cmp	r3, #0
    84d0:	0a000001 	beq	84dc <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:88
        return NGPIO_Function::Unspecified;
    84d4:	e3a03008 	mov	r3, #8
    84d8:	ea000008 	b	8500 <_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:90

    return static_cast<NGPIO_Function>((mGPIO[reg] >> bit) & 7);
    84dc:	e51b3010 	ldr	r3, [fp, #-16]
    84e0:	e5932000 	ldr	r2, [r3]
    84e4:	e51b3008 	ldr	r3, [fp, #-8]
    84e8:	e1a03103 	lsl	r3, r3, #2
    84ec:	e0823003 	add	r3, r2, r3
    84f0:	e5932000 	ldr	r2, [r3]
    84f4:	e51b300c 	ldr	r3, [fp, #-12]
    84f8:	e1a03332 	lsr	r3, r2, r3
    84fc:	e2033007 	and	r3, r3, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:91 (discriminator 1)
}
    8500:	e1a00003 	mov	r0, r3
    8504:	e24bd004 	sub	sp, fp, #4
    8508:	e8bd8800 	pop	{fp, pc}

0000850c <_ZN13CGPIO_Handler10Set_OutputEjb>:
_ZN13CGPIO_Handler10Set_OutputEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:94

void CGPIO_Handler::Set_Output(uint32_t pin, bool set)
{
    850c:	e92d4800 	push	{fp, lr}
    8510:	e28db004 	add	fp, sp, #4
    8514:	e24dd018 	sub	sp, sp, #24
    8518:	e50b0010 	str	r0, [fp, #-16]
    851c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    8520:	e1a03002 	mov	r3, r2
    8524:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96
    uint32_t reg, bit;
    if (!(set && Get_GPSET_Location(pin, reg, bit)) && !(!set && Get_GPCLR_Location(pin, reg, bit)))
    8528:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    852c:	e2233001 	eor	r3, r3, #1
    8530:	e6ef3073 	uxtb	r3, r3
    8534:	e3530000 	cmp	r3, #0
    8538:	1a000009 	bne	8564 <_ZN13CGPIO_Handler10Set_OutputEjb+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 2)
    853c:	e24b300c 	sub	r3, fp, #12
    8540:	e24b2008 	sub	r2, fp, #8
    8544:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    8548:	e51b0010 	ldr	r0, [fp, #-16]
    854c:	ebffff65 	bl	82e8 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_>
    8550:	e1a03000 	mov	r3, r0
    8554:	e2233001 	eor	r3, r3, #1
    8558:	e6ef3073 	uxtb	r3, r3
    855c:	e3530000 	cmp	r3, #0
    8560:	0a00000e 	beq	85a0 <_ZN13CGPIO_Handler10Set_OutputEjb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 3)
    8564:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
    8568:	e3530000 	cmp	r3, #0
    856c:	1a000009 	bne	8598 <_ZN13CGPIO_Handler10Set_OutputEjb+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 6)
    8570:	e24b300c 	sub	r3, fp, #12
    8574:	e24b2008 	sub	r2, fp, #8
    8578:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    857c:	e51b0010 	ldr	r0, [fp, #-16]
    8580:	ebffff3b 	bl	8274 <_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_>
    8584:	e1a03000 	mov	r3, r0
    8588:	e2233001 	eor	r3, r3, #1
    858c:	e6ef3073 	uxtb	r3, r3
    8590:	e3530000 	cmp	r3, #0
    8594:	0a000001 	beq	85a0 <_ZN13CGPIO_Handler10Set_OutputEjb+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 7)
    8598:	e3a03001 	mov	r3, #1
    859c:	ea000000 	b	85a4 <_ZN13CGPIO_Handler10Set_OutputEjb+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 8)
    85a0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 10)
    85a4:	e3530000 	cmp	r3, #0
    85a8:	1a00000a 	bne	85d8 <_ZN13CGPIO_Handler10Set_OutputEjb+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:99
        return;

    mGPIO[reg] = (1 << bit);
    85ac:	e51b300c 	ldr	r3, [fp, #-12]
    85b0:	e3a02001 	mov	r2, #1
    85b4:	e1a01312 	lsl	r1, r2, r3
    85b8:	e51b3010 	ldr	r3, [fp, #-16]
    85bc:	e5932000 	ldr	r2, [r3]
    85c0:	e51b3008 	ldr	r3, [fp, #-8]
    85c4:	e1a03103 	lsl	r3, r3, #2
    85c8:	e0823003 	add	r3, r2, r3
    85cc:	e1a02001 	mov	r2, r1
    85d0:	e5832000 	str	r2, [r3]
    85d4:	ea000000 	b	85dc <_ZN13CGPIO_Handler10Set_OutputEjb+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:97
        return;
    85d8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:100
}
    85dc:	e24bd004 	sub	sp, fp, #4
    85e0:	e8bd8800 	pop	{fp, pc}

000085e4 <_ZN13CGPIO_Handler9Get_InputEj>:
_ZN13CGPIO_Handler9Get_InputEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:103

bool CGPIO_Handler::Get_Input(uint32_t pin)
{
    85e4:	e92d4800 	push	{fp, lr}
    85e8:	e28db004 	add	fp, sp, #4
    85ec:	e24dd010 	sub	sp, sp, #16
    85f0:	e50b0010 	str	r0, [fp, #-16]
    85f4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:105
    uint32_t reg, bit;
    if (!Get_GPLEV_Location(pin, reg, bit))
    85f8:	e24b300c 	sub	r3, fp, #12
    85fc:	e24b2008 	sub	r2, fp, #8
    8600:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    8604:	e51b0010 	ldr	r0, [fp, #-16]
    8608:	ebffff53 	bl	835c <_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_>
    860c:	e1a03000 	mov	r3, r0
    8610:	e2233001 	eor	r3, r3, #1
    8614:	e6ef3073 	uxtb	r3, r3
    8618:	e3530000 	cmp	r3, #0
    861c:	0a000001 	beq	8628 <_ZN13CGPIO_Handler9Get_InputEj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:106
        return false;
    8620:	e3a03000 	mov	r3, #0
    8624:	ea00000c 	b	865c <_ZN13CGPIO_Handler9Get_InputEj+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:108

    return (mGPIO[reg] >> bit) & 0x1;
    8628:	e51b3010 	ldr	r3, [fp, #-16]
    862c:	e5932000 	ldr	r2, [r3]
    8630:	e51b3008 	ldr	r3, [fp, #-8]
    8634:	e1a03103 	lsl	r3, r3, #2
    8638:	e0823003 	add	r3, r2, r3
    863c:	e5932000 	ldr	r2, [r3]
    8640:	e51b300c 	ldr	r3, [fp, #-12]
    8644:	e1a03332 	lsr	r3, r2, r3
    8648:	e2033001 	and	r3, r3, #1
    864c:	e3530000 	cmp	r3, #0
    8650:	13a03001 	movne	r3, #1
    8654:	03a03000 	moveq	r3, #0
    8658:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:109 (discriminator 1)
}
    865c:	e1a00003 	mov	r0, r3
    8660:	e24bd004 	sub	sp, fp, #4
    8664:	e8bd8800 	pop	{fp, pc}

00008668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>:
_ZN13CGPIO_Handler11Reserve_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:112

bool CGPIO_Handler::Reserve_Pin(uint32_t pin, bool read, bool write)
{
    8668:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
    866c:	e28db014 	add	fp, sp, #20
    8670:	e24dd018 	sub	sp, sp, #24
    8674:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    8678:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    867c:	e1a01002 	mov	r1, r2
    8680:	e1a02003 	mov	r2, r3
    8684:	e1a03001 	mov	r3, r1
    8688:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
    868c:	e1a03002 	mov	r3, r2
    8690:	e54b3026 	strb	r3, [fp, #-38]	; 0xffffffda
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:115
    // TODO: zamek, tady by se neco mohlo sejit

    uint32_t bank_idx = pin / 32;
    8694:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8698:	e1a032a3 	lsr	r3, r3, #5
    869c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:116
    uint32_t bit_idx = pin % 32;
    86a0:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    86a4:	e203301f 	and	r3, r3, #31
    86a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118

    if (read && (mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1)
    86ac:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    86b0:	e3530000 	cmp	r3, #0
    86b4:	0a00000b 	beq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118 (discriminator 1)
    86b8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    86bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    86c0:	e1a03103 	lsl	r3, r3, #2
    86c4:	e0823003 	add	r3, r2, r3
    86c8:	e5932004 	ldr	r2, [r3, #4]
    86cc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    86d0:	e1a03332 	lsr	r3, r2, r3
    86d4:	e2033001 	and	r3, r3, #1
    86d8:	e3530000 	cmp	r3, #0
    86dc:	0a000001 	beq	86e8 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:119
        return false;
    86e0:	e3a03000 	mov	r3, #0
    86e4:	ea000042 	b	87f4 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x18c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121

    if (write && (mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1)
    86e8:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    86ec:	e3530000 	cmp	r3, #0
    86f0:	0a00000c 	beq	8728 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121 (discriminator 1)
    86f4:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    86f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    86fc:	e2833002 	add	r3, r3, #2
    8700:	e1a03103 	lsl	r3, r3, #2
    8704:	e0823003 	add	r3, r2, r3
    8708:	e5932004 	ldr	r2, [r3, #4]
    870c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8710:	e1a03332 	lsr	r3, r2, r3
    8714:	e2033001 	and	r3, r3, #1
    8718:	e3530000 	cmp	r3, #0
    871c:	0a000001 	beq	8728 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:122
        return false;
    8720:	e3a03000 	mov	r3, #0
    8724:	ea000032 	b	87f4 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x18c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:124

    if (read)
    8728:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    872c:	e3530000 	cmp	r3, #0
    8730:	0a000014 	beq	8788 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x120>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:125
        mPin_Reservations_Read[bank_idx] |= 1ULL << bit_idx;
    8734:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8738:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    873c:	e1a03103 	lsl	r3, r3, #2
    8740:	e0823003 	add	r3, r2, r3
    8744:	e5930004 	ldr	r0, [r3, #4]
    8748:	e3a02001 	mov	r2, #1
    874c:	e3a03000 	mov	r3, #0
    8750:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    8754:	e241e020 	sub	lr, r1, #32
    8758:	e261c020 	rsb	ip, r1, #32
    875c:	e1a07113 	lsl	r7, r3, r1
    8760:	e1877e12 	orr	r7, r7, r2, lsl lr
    8764:	e1877c32 	orr	r7, r7, r2, lsr ip
    8768:	e1a06112 	lsl	r6, r2, r1
    876c:	e1a03006 	mov	r3, r6
    8770:	e1802003 	orr	r2, r0, r3
    8774:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    8778:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    877c:	e1a03103 	lsl	r3, r3, #2
    8780:	e0813003 	add	r3, r1, r3
    8784:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:127

    if (write)
    8788:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    878c:	e3530000 	cmp	r3, #0
    8790:	0a000016 	beq	87f0 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x188>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:128
        mPin_Reservations_Write[bank_idx] |= 1ULL << bit_idx;
    8794:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8798:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    879c:	e2833002 	add	r3, r3, #2
    87a0:	e1a03103 	lsl	r3, r3, #2
    87a4:	e0823003 	add	r3, r2, r3
    87a8:	e5930004 	ldr	r0, [r3, #4]
    87ac:	e3a02001 	mov	r2, #1
    87b0:	e3a03000 	mov	r3, #0
    87b4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    87b8:	e241e020 	sub	lr, r1, #32
    87bc:	e261c020 	rsb	ip, r1, #32
    87c0:	e1a05113 	lsl	r5, r3, r1
    87c4:	e1855e12 	orr	r5, r5, r2, lsl lr
    87c8:	e1855c32 	orr	r5, r5, r2, lsr ip
    87cc:	e1a04112 	lsl	r4, r2, r1
    87d0:	e1a03004 	mov	r3, r4
    87d4:	e1802003 	orr	r2, r0, r3
    87d8:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    87dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    87e0:	e2833002 	add	r3, r3, #2
    87e4:	e1a03103 	lsl	r3, r3, #2
    87e8:	e0813003 	add	r3, r1, r3
    87ec:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:130

    return true;
    87f0:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:131
}
    87f4:	e1a00003 	mov	r0, r3
    87f8:	e24bd014 	sub	sp, fp, #20
    87fc:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

00008800 <_ZN13CGPIO_Handler8Free_PinEjbb>:
_ZN13CGPIO_Handler8Free_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:134

bool CGPIO_Handler::Free_Pin(uint32_t pin, bool read, bool write)
{
    8800:	e92d48f0 	push	{r4, r5, r6, r7, fp, lr}
    8804:	e28db014 	add	fp, sp, #20
    8808:	e24dd018 	sub	sp, sp, #24
    880c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    8810:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    8814:	e1a01002 	mov	r1, r2
    8818:	e1a02003 	mov	r2, r3
    881c:	e1a03001 	mov	r3, r1
    8820:	e54b3025 	strb	r3, [fp, #-37]	; 0xffffffdb
    8824:	e1a03002 	mov	r3, r2
    8828:	e54b3026 	strb	r3, [fp, #-38]	; 0xffffffda
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:135
    uint32_t bank_idx = pin / 32;
    882c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8830:	e1a032a3 	lsr	r3, r3, #5
    8834:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:136
    uint32_t bit_idx = pin % 32;
    8838:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    883c:	e203301f 	and	r3, r3, #31
    8840:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138

    if (read && !((mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1))
    8844:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    8848:	e3530000 	cmp	r3, #0
    884c:	0a00000b 	beq	8880 <_ZN13CGPIO_Handler8Free_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138 (discriminator 1)
    8850:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8854:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8858:	e1a03103 	lsl	r3, r3, #2
    885c:	e0823003 	add	r3, r2, r3
    8860:	e5932004 	ldr	r2, [r3, #4]
    8864:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8868:	e1a03332 	lsr	r3, r2, r3
    886c:	e2033001 	and	r3, r3, #1
    8870:	e3530000 	cmp	r3, #0
    8874:	1a000001 	bne	8880 <_ZN13CGPIO_Handler8Free_PinEjbb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:139
        return false;
    8878:	e3a03000 	mov	r3, #0
    887c:	ea000044 	b	8994 <_ZN13CGPIO_Handler8Free_PinEjbb+0x194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141

    if (write && !((mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1))
    8880:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    8884:	e3530000 	cmp	r3, #0
    8888:	0a00000c 	beq	88c0 <_ZN13CGPIO_Handler8Free_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141 (discriminator 1)
    888c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8890:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8894:	e2833002 	add	r3, r3, #2
    8898:	e1a03103 	lsl	r3, r3, #2
    889c:	e0823003 	add	r3, r2, r3
    88a0:	e5932004 	ldr	r2, [r3, #4]
    88a4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    88a8:	e1a03332 	lsr	r3, r2, r3
    88ac:	e2033001 	and	r3, r3, #1
    88b0:	e3530000 	cmp	r3, #0
    88b4:	1a000001 	bne	88c0 <_ZN13CGPIO_Handler8Free_PinEjbb+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:142
        return false;
    88b8:	e3a03000 	mov	r3, #0
    88bc:	ea000034 	b	8994 <_ZN13CGPIO_Handler8Free_PinEjbb+0x194>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:144

    if (read)
    88c0:	e55b3025 	ldrb	r3, [fp, #-37]	; 0xffffffdb
    88c4:	e3530000 	cmp	r3, #0
    88c8:	0a000015 	beq	8924 <_ZN13CGPIO_Handler8Free_PinEjbb+0x124>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:145
        mPin_Reservations_Read[bank_idx] &= ~(1ULL << bit_idx);
    88cc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    88d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    88d4:	e1a03103 	lsl	r3, r3, #2
    88d8:	e0823003 	add	r3, r2, r3
    88dc:	e5930004 	ldr	r0, [r3, #4]
    88e0:	e3a02001 	mov	r2, #1
    88e4:	e3a03000 	mov	r3, #0
    88e8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    88ec:	e241e020 	sub	lr, r1, #32
    88f0:	e261c020 	rsb	ip, r1, #32
    88f4:	e1a07113 	lsl	r7, r3, r1
    88f8:	e1877e12 	orr	r7, r7, r2, lsl lr
    88fc:	e1877c32 	orr	r7, r7, r2, lsr ip
    8900:	e1a06112 	lsl	r6, r2, r1
    8904:	e1a03006 	mov	r3, r6
    8908:	e1e03003 	mvn	r3, r3
    890c:	e0002003 	and	r2, r0, r3
    8910:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    8914:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8918:	e1a03103 	lsl	r3, r3, #2
    891c:	e0813003 	add	r3, r1, r3
    8920:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:147

    if (write)
    8924:	e55b3026 	ldrb	r3, [fp, #-38]	; 0xffffffda
    8928:	e3530000 	cmp	r3, #0
    892c:	0a000017 	beq	8990 <_ZN13CGPIO_Handler8Free_PinEjbb+0x190>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:148
        mPin_Reservations_Write[bank_idx] &= ~(1ULL << bit_idx);
    8930:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8934:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8938:	e2833002 	add	r3, r3, #2
    893c:	e1a03103 	lsl	r3, r3, #2
    8940:	e0823003 	add	r3, r2, r3
    8944:	e5930004 	ldr	r0, [r3, #4]
    8948:	e3a02001 	mov	r2, #1
    894c:	e3a03000 	mov	r3, #0
    8950:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    8954:	e241e020 	sub	lr, r1, #32
    8958:	e261c020 	rsb	ip, r1, #32
    895c:	e1a05113 	lsl	r5, r3, r1
    8960:	e1855e12 	orr	r5, r5, r2, lsl lr
    8964:	e1855c32 	orr	r5, r5, r2, lsr ip
    8968:	e1a04112 	lsl	r4, r2, r1
    896c:	e1a03004 	mov	r3, r4
    8970:	e1e03003 	mvn	r3, r3
    8974:	e0002003 	and	r2, r0, r3
    8978:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    897c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    8980:	e2833002 	add	r3, r3, #2
    8984:	e1a03103 	lsl	r3, r3, #2
    8988:	e0813003 	add	r3, r1, r3
    898c:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:150

    return true;
    8990:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    8994:	e1a00003 	mov	r0, r3
    8998:	e24bd014 	sub	sp, fp, #20
    899c:	e8bd88f0 	pop	{r4, r5, r6, r7, fp, pc}

000089a0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89a0:	e92d4800 	push	{fp, lr}
    89a4:	e28db004 	add	fp, sp, #4
    89a8:	e24dd008 	sub	sp, sp, #8
    89ac:	e50b0008 	str	r0, [fp, #-8]
    89b0:	e50b100c 	str	r1, [fp, #-12]
    89b4:	e51b3008 	ldr	r3, [fp, #-8]
    89b8:	e3530001 	cmp	r3, #1
    89bc:	1a000006 	bne	89dc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151 (discriminator 1)
    89c0:	e51b300c 	ldr	r3, [fp, #-12]
    89c4:	e59f201c 	ldr	r2, [pc, #28]	; 89e8 <_Z41__static_initialization_and_destruction_0ii+0x48>
    89c8:	e1530002 	cmp	r3, r2
    89cc:	1a000002 	bne	89dc <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:6
CGPIO_Handler sGPIO(hal::GPIO_Base);
    89d0:	e59f1014 	ldr	r1, [pc, #20]	; 89ec <_Z41__static_initialization_and_destruction_0ii+0x4c>
    89d4:	e59f0014 	ldr	r0, [pc, #20]	; 89f0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    89d8:	ebfffde9 	bl	8184 <_ZN13CGPIO_HandlerC1Ej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    89dc:	e320f000 	nop	{0}
    89e0:	e24bd004 	sub	sp, fp, #4
    89e4:	e8bd8800 	pop	{fp, pc}
    89e8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    89ec:	20200000 	eorcs	r0, r0, r0
    89f0:	0000ff2c 	andeq	pc, r0, ip, lsr #30

000089f4 <_GLOBAL__sub_I_sGPIO>:
_GLOBAL__sub_I_sGPIO():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89f4:	e92d4800 	push	{fp, lr}
    89f8:	e28db004 	add	fp, sp, #4
    89fc:	e59f1008 	ldr	r1, [pc, #8]	; 8a0c <_GLOBAL__sub_I_sGPIO+0x18>
    8a00:	e3a00001 	mov	r0, #1
    8a04:	ebffffe5 	bl	89a0 <_Z41__static_initialization_and_destruction_0ii>
    8a08:	e8bd8800 	pop	{fp, pc}
    8a0c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

00008a10 <_ZN4CI2CC1Emjj>:
_ZN4CI2CC2Emjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:7
#include <drivers/monitor.h>
#include <drivers/gpio.h>

CI2C sI2C1(hal::BSC1_Base, 2, 3);

CI2C::CI2C(unsigned long base, uint32_t pin_sda, uint32_t pin_scl)
    8a10:	e92d4800 	push	{fp, lr}
    8a14:	e28db004 	add	fp, sp, #4
    8a18:	e24dd010 	sub	sp, sp, #16
    8a1c:	e50b0008 	str	r0, [fp, #-8]
    8a20:	e50b100c 	str	r1, [fp, #-12]
    8a24:	e50b2010 	str	r2, [fp, #-16]
    8a28:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:8
    : mBSC_Base(reinterpret_cast<volatile uint32_t*>(base)), mOpened(false), mSDA_Pin(pin_sda), mSCL_Pin(pin_scl)
    8a2c:	e51b200c 	ldr	r2, [fp, #-12]
    8a30:	e51b3008 	ldr	r3, [fp, #-8]
    8a34:	e5832000 	str	r2, [r3]
    8a38:	e51b3008 	ldr	r3, [fp, #-8]
    8a3c:	e3a02000 	mov	r2, #0
    8a40:	e5c32004 	strb	r2, [r3, #4]
    8a44:	e51b3008 	ldr	r3, [fp, #-8]
    8a48:	e51b2010 	ldr	r2, [fp, #-16]
    8a4c:	e5832008 	str	r2, [r3, #8]
    8a50:	e51b3008 	ldr	r3, [fp, #-8]
    8a54:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    8a58:	e583200c 	str	r2, [r3, #12]
    8a5c:	e51b3008 	ldr	r3, [fp, #-8]
    8a60:	e2833010 	add	r3, r3, #16
    8a64:	e1a00003 	mov	r0, r3
    8a68:	eb0001a7 	bl	910c <_ZN16CI2C_TransactionC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:11
{
    //
}
    8a6c:	e51b3008 	ldr	r3, [fp, #-8]
    8a70:	e1a00003 	mov	r0, r3
    8a74:	e24bd004 	sub	sp, fp, #4
    8a78:	e8bd8800 	pop	{fp, pc}

00008a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>:
_ZN4CI2C3RegEN3hal7BSC_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:14

volatile uint32_t& CI2C::Reg(hal::BSC_Reg reg)
{
    8a7c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8a80:	e28db000 	add	fp, sp, #0
    8a84:	e24dd00c 	sub	sp, sp, #12
    8a88:	e50b0008 	str	r0, [fp, #-8]
    8a8c:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:15
    return mBSC_Base[static_cast<uint32_t>(reg)];
    8a90:	e51b3008 	ldr	r3, [fp, #-8]
    8a94:	e5932000 	ldr	r2, [r3]
    8a98:	e51b300c 	ldr	r3, [fp, #-12]
    8a9c:	e1a03103 	lsl	r3, r3, #2
    8aa0:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:16
}
    8aa4:	e1a00003 	mov	r0, r3
    8aa8:	e28bd000 	add	sp, fp, #0
    8aac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8ab0:	e12fff1e 	bx	lr

00008ab4 <_ZN4CI2C10Wait_ReadyEv>:
_ZN4CI2C10Wait_ReadyEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:19

void CI2C::Wait_Ready()
{
    8ab4:	e92d4800 	push	{fp, lr}
    8ab8:	e28db004 	add	fp, sp, #4
    8abc:	e24dd010 	sub	sp, sp, #16
    8ac0:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:20
    volatile uint32_t& s = Reg(hal::BSC_Reg::Status);
    8ac4:	e3a01001 	mov	r1, #1
    8ac8:	e51b0010 	ldr	r0, [fp, #-16]
    8acc:	ebffffea 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8ad0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:23

    // pockame, dokud nebude ve status registru zapnuty ready bit
    while( !(s & (1 << 1)) )
    8ad4:	e51b3008 	ldr	r3, [fp, #-8]
    8ad8:	e5933000 	ldr	r3, [r3]
    8adc:	e2033002 	and	r3, r3, #2
    8ae0:	e3530000 	cmp	r3, #0
    8ae4:	03a03001 	moveq	r3, #1
    8ae8:	13a03000 	movne	r3, #0
    8aec:	e6ef3073 	uxtb	r3, r3
    8af0:	e3530000 	cmp	r3, #0
    8af4:	0a000000 	beq	8afc <_ZN4CI2C10Wait_ReadyEv+0x48>
    8af8:	eafffff5 	b	8ad4 <_ZN4CI2C10Wait_ReadyEv+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:25
        ;
}
    8afc:	e320f000 	nop	{0}
    8b00:	e24bd004 	sub	sp, fp, #4
    8b04:	e8bd8800 	pop	{fp, pc}

00008b08 <_ZN4CI2C4OpenEv>:
_ZN4CI2C4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:28

bool CI2C::Open()
{
    8b08:	e92d4800 	push	{fp, lr}
    8b0c:	e28db004 	add	fp, sp, #4
    8b10:	e24dd008 	sub	sp, sp, #8
    8b14:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:29
    if (!sGPIO.Reserve_Pin(mSDA_Pin, true, true))
    8b18:	e51b3008 	ldr	r3, [fp, #-8]
    8b1c:	e5931008 	ldr	r1, [r3, #8]
    8b20:	e3a03001 	mov	r3, #1
    8b24:	e3a02001 	mov	r2, #1
    8b28:	e59f00b4 	ldr	r0, [pc, #180]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b2c:	ebfffecd 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8b30:	e1a03000 	mov	r3, r0
    8b34:	e2233001 	eor	r3, r3, #1
    8b38:	e6ef3073 	uxtb	r3, r3
    8b3c:	e3530000 	cmp	r3, #0
    8b40:	0a000001 	beq	8b4c <_ZN4CI2C4OpenEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:30
        return false;
    8b44:	e3a03000 	mov	r3, #0
    8b48:	ea000022 	b	8bd8 <_ZN4CI2C4OpenEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:32

    if (!sGPIO.Reserve_Pin(mSCL_Pin, true, true))
    8b4c:	e51b3008 	ldr	r3, [fp, #-8]
    8b50:	e593100c 	ldr	r1, [r3, #12]
    8b54:	e3a03001 	mov	r3, #1
    8b58:	e3a02001 	mov	r2, #1
    8b5c:	e59f0080 	ldr	r0, [pc, #128]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b60:	ebfffec0 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8b64:	e1a03000 	mov	r3, r0
    8b68:	e2233001 	eor	r3, r3, #1
    8b6c:	e6ef3073 	uxtb	r3, r3
    8b70:	e3530000 	cmp	r3, #0
    8b74:	0a000007 	beq	8b98 <_ZN4CI2C4OpenEv+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:34
    {
        sGPIO.Free_Pin(mSDA_Pin, true, true);
    8b78:	e51b3008 	ldr	r3, [fp, #-8]
    8b7c:	e5931008 	ldr	r1, [r3, #8]
    8b80:	e3a03001 	mov	r3, #1
    8b84:	e3a02001 	mov	r2, #1
    8b88:	e59f0054 	ldr	r0, [pc, #84]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8b8c:	ebffff1b 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:35
        return false;
    8b90:	e3a03000 	mov	r3, #0
    8b94:	ea00000f 	b	8bd8 <_ZN4CI2C4OpenEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:40
    }

    // pro jine I2C kanaly se muze lisit cislo alternativni funkce pinu

    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Alt_0);
    8b98:	e51b3008 	ldr	r3, [fp, #-8]
    8b9c:	e5933008 	ldr	r3, [r3, #8]
    8ba0:	e3a02004 	mov	r2, #4
    8ba4:	e1a01003 	mov	r1, r3
    8ba8:	e59f0034 	ldr	r0, [pc, #52]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8bac:	ebfffe07 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:41
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Alt_0);
    8bb0:	e51b3008 	ldr	r3, [fp, #-8]
    8bb4:	e593300c 	ldr	r3, [r3, #12]
    8bb8:	e3a02004 	mov	r2, #4
    8bbc:	e1a01003 	mov	r1, r3
    8bc0:	e59f001c 	ldr	r0, [pc, #28]	; 8be4 <_ZN4CI2C4OpenEv+0xdc>
    8bc4:	ebfffe01 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:43

    mOpened = true;
    8bc8:	e51b3008 	ldr	r3, [fp, #-8]
    8bcc:	e3a02001 	mov	r2, #1
    8bd0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:45

    return true;
    8bd4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:46
}
    8bd8:	e1a00003 	mov	r0, r3
    8bdc:	e24bd004 	sub	sp, fp, #4
    8be0:	e8bd8800 	pop	{fp, pc}
    8be4:	0000ff2c 	andeq	pc, r0, ip, lsr #30

00008be8 <_ZN4CI2C5CloseEv>:
_ZN4CI2C5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:49

void CI2C::Close()
{
    8be8:	e92d4800 	push	{fp, lr}
    8bec:	e28db004 	add	fp, sp, #4
    8bf0:	e24dd008 	sub	sp, sp, #8
    8bf4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:50
    Reg(hal::BSC_Reg::Control) = 0;
    8bf8:	e3a01000 	mov	r1, #0
    8bfc:	e51b0008 	ldr	r0, [fp, #-8]
    8c00:	ebffff9d 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8c04:	e1a03000 	mov	r3, r0
    8c08:	e3a02000 	mov	r2, #0
    8c0c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:52

    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Input);
    8c10:	e51b3008 	ldr	r3, [fp, #-8]
    8c14:	e5933008 	ldr	r3, [r3, #8]
    8c18:	e3a02000 	mov	r2, #0
    8c1c:	e1a01003 	mov	r1, r3
    8c20:	e59f0060 	ldr	r0, [pc, #96]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c24:	ebfffde9 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:53
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Input);
    8c28:	e51b3008 	ldr	r3, [fp, #-8]
    8c2c:	e593300c 	ldr	r3, [r3, #12]
    8c30:	e3a02000 	mov	r2, #0
    8c34:	e1a01003 	mov	r1, r3
    8c38:	e59f0048 	ldr	r0, [pc, #72]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c3c:	ebfffde3 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:55

    sGPIO.Free_Pin(mSDA_Pin, true, true);
    8c40:	e51b3008 	ldr	r3, [fp, #-8]
    8c44:	e5931008 	ldr	r1, [r3, #8]
    8c48:	e3a03001 	mov	r3, #1
    8c4c:	e3a02001 	mov	r2, #1
    8c50:	e59f0030 	ldr	r0, [pc, #48]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c54:	ebfffee9 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:56
    sGPIO.Free_Pin(mSCL_Pin, true, true);
    8c58:	e51b3008 	ldr	r3, [fp, #-8]
    8c5c:	e593100c 	ldr	r1, [r3, #12]
    8c60:	e3a03001 	mov	r3, #1
    8c64:	e3a02001 	mov	r2, #1
    8c68:	e59f0018 	ldr	r0, [pc, #24]	; 8c88 <_ZN4CI2C5CloseEv+0xa0>
    8c6c:	ebfffee3 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:58

    mOpened = false;
    8c70:	e51b3008 	ldr	r3, [fp, #-8]
    8c74:	e3a02000 	mov	r2, #0
    8c78:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:59
}
    8c7c:	e320f000 	nop	{0}
    8c80:	e24bd004 	sub	sp, fp, #4
    8c84:	e8bd8800 	pop	{fp, pc}
    8c88:	0000ff2c 	andeq	pc, r0, ip, lsr #30

00008c8c <_ZNK4CI2C9Is_OpenedEv>:
_ZNK4CI2C9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:62

bool CI2C::Is_Opened() const
{
    8c8c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    8c90:	e28db000 	add	fp, sp, #0
    8c94:	e24dd00c 	sub	sp, sp, #12
    8c98:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:63
    return mOpened;
    8c9c:	e51b3008 	ldr	r3, [fp, #-8]
    8ca0:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:64
}
    8ca4:	e1a00003 	mov	r0, r3
    8ca8:	e28bd000 	add	sp, fp, #0
    8cac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    8cb0:	e12fff1e 	bx	lr

00008cb4 <_ZN4CI2C4SendEtPKcj>:
_ZN4CI2C4SendEtPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:67

void CI2C::Send(uint16_t addr, const char* buffer, uint32_t len)
{
    8cb4:	e92d4810 	push	{r4, fp, lr}
    8cb8:	e28db008 	add	fp, sp, #8
    8cbc:	e24dd01c 	sub	sp, sp, #28
    8cc0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    8cc4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    8cc8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    8ccc:	e1a03001 	mov	r3, r1
    8cd0:	e14b31ba 	strh	r3, [fp, #-26]	; 0xffffffe6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:68
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8cd4:	e3a01003 	mov	r1, #3
    8cd8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cdc:	ebffff66 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8ce0:	e1a02000 	mov	r2, r0
    8ce4:	e15b31ba 	ldrh	r3, [fp, #-26]	; 0xffffffe6
    8ce8:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:69
    Reg(hal::BSC_Reg::Data_Length) = len;
    8cec:	e3a01002 	mov	r1, #2
    8cf0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cf4:	ebffff60 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8cf8:	e1a02000 	mov	r2, r0
    8cfc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d00:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71

    for (uint32_t i = 0; i < len; i++)
    8d04:	e3a03000 	mov	r3, #0
    8d08:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 3)
    8d0c:	e51b2010 	ldr	r2, [fp, #-16]
    8d10:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    8d14:	e1520003 	cmp	r2, r3
    8d18:	2a00000d 	bcs	8d54 <_ZN4CI2C4SendEtPKcj+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:72 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = buffer[i];
    8d1c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    8d20:	e51b3010 	ldr	r3, [fp, #-16]
    8d24:	e0823003 	add	r3, r2, r3
    8d28:	e5d34000 	ldrb	r4, [r3]
    8d2c:	e3a01004 	mov	r1, #4
    8d30:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d34:	ebffff50 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d38:	e1a03000 	mov	r3, r0
    8d3c:	e1a02004 	mov	r2, r4
    8d40:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8d44:	e51b3010 	ldr	r3, [fp, #-16]
    8d48:	e2833001 	add	r3, r3, #1
    8d4c:	e50b3010 	str	r3, [fp, #-16]
    8d50:	eaffffed 	b	8d0c <_ZN4CI2C4SendEtPKcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74

    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8d54:	e3a01001 	mov	r1, #1
    8d58:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d5c:	ebffff46 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d60:	e1a03000 	mov	r3, r0
    8d64:	e59f202c 	ldr	r2, [pc, #44]	; 8d98 <_ZN4CI2C4SendEtPKcj+0xe4>
    8d68:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:75
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    8d6c:	e3a01000 	mov	r1, #0
    8d70:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d74:	ebffff40 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8d78:	e1a03000 	mov	r3, r0
    8d7c:	e59f2018 	ldr	r2, [pc, #24]	; 8d9c <_ZN4CI2C4SendEtPKcj+0xe8>
    8d80:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:77

    Wait_Ready();
    8d84:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8d88:	ebffff49 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:78
}
    8d8c:	e320f000 	nop	{0}
    8d90:	e24bd008 	sub	sp, fp, #8
    8d94:	e8bd8810 	pop	{r4, fp, pc}
    8d98:	00000302 	andeq	r0, r0, r2, lsl #6
    8d9c:	00008080 	andeq	r8, r0, r0, lsl #1

00008da0 <_ZN4CI2C7ReceiveEtPcj>:
_ZN4CI2C7ReceiveEtPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:81

void CI2C::Receive(uint16_t addr, char* buffer, uint32_t len)
{
    8da0:	e92d4800 	push	{fp, lr}
    8da4:	e28db004 	add	fp, sp, #4
    8da8:	e24dd018 	sub	sp, sp, #24
    8dac:	e50b0010 	str	r0, [fp, #-16]
    8db0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    8db4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    8db8:	e1a03001 	mov	r3, r1
    8dbc:	e14b31b2 	strh	r3, [fp, #-18]	; 0xffffffee
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:82
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8dc0:	e3a01003 	mov	r1, #3
    8dc4:	e51b0010 	ldr	r0, [fp, #-16]
    8dc8:	ebffff2b 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8dcc:	e1a02000 	mov	r2, r0
    8dd0:	e15b31b2 	ldrh	r3, [fp, #-18]	; 0xffffffee
    8dd4:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:83
    Reg(hal::BSC_Reg::Data_Length) = len;
    8dd8:	e3a01002 	mov	r1, #2
    8ddc:	e51b0010 	ldr	r0, [fp, #-16]
    8de0:	ebffff25 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8de4:	e1a02000 	mov	r2, r0
    8de8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8dec:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:85

    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8df0:	e3a01001 	mov	r1, #1
    8df4:	e51b0010 	ldr	r0, [fp, #-16]
    8df8:	ebffff1f 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8dfc:	e1a03000 	mov	r3, r0
    8e00:	e59f207c 	ldr	r2, [pc, #124]	; 8e84 <_ZN4CI2C7ReceiveEtPcj+0xe4>
    8e04:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:86
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7) | (1 << 4) | (1 << 0); // zapoceti cteni (enable bsc + clear fifo + start transfer + read)
    8e08:	e3a01000 	mov	r1, #0
    8e0c:	e51b0010 	ldr	r0, [fp, #-16]
    8e10:	ebffff19 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8e14:	e1a03000 	mov	r3, r0
    8e18:	e59f2068 	ldr	r2, [pc, #104]	; 8e88 <_ZN4CI2C7ReceiveEtPcj+0xe8>
    8e1c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:88

    Wait_Ready();
    8e20:	e51b0010 	ldr	r0, [fp, #-16]
    8e24:	ebffff22 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90

    for (uint32_t i = 0; i < len; i++)
    8e28:	e3a03000 	mov	r3, #0
    8e2c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 3)
    8e30:	e51b2008 	ldr	r2, [fp, #-8]
    8e34:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8e38:	e1520003 	cmp	r2, r3
    8e3c:	2a00000d 	bcs	8e78 <_ZN4CI2C7ReceiveEtPcj+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:91 (discriminator 2)
        buffer[i] = Reg(hal::BSC_Reg::Data_FIFO);
    8e40:	e3a01004 	mov	r1, #4
    8e44:	e51b0010 	ldr	r0, [fp, #-16]
    8e48:	ebffff0b 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8e4c:	e1a03000 	mov	r3, r0
    8e50:	e5931000 	ldr	r1, [r3]
    8e54:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    8e58:	e51b3008 	ldr	r3, [fp, #-8]
    8e5c:	e0823003 	add	r3, r2, r3
    8e60:	e6ef2071 	uxtb	r2, r1
    8e64:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8e68:	e51b3008 	ldr	r3, [fp, #-8]
    8e6c:	e2833001 	add	r3, r3, #1
    8e70:	e50b3008 	str	r3, [fp, #-8]
    8e74:	eaffffed 	b	8e30 <_ZN4CI2C7ReceiveEtPcj+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:92
}
    8e78:	e320f000 	nop	{0}
    8e7c:	e24bd004 	sub	sp, fp, #4
    8e80:	e8bd8800 	pop	{fp, pc}
    8e84:	00000302 	andeq	r0, r0, r2, lsl #6
    8e88:	00008091 	muleq	r0, r1, r0

00008e8c <_ZN4CI2C17Begin_TransactionEt>:
_ZN4CI2C17Begin_TransactionEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:95

CI2C_Transaction& CI2C::Begin_Transaction(uint16_t addr)
{
    8e8c:	e92d4800 	push	{fp, lr}
    8e90:	e28db004 	add	fp, sp, #4
    8e94:	e24dd008 	sub	sp, sp, #8
    8e98:	e50b0008 	str	r0, [fp, #-8]
    8e9c:	e1a03001 	mov	r3, r1
    8ea0:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96
    if (mTransaction.mIn_Progress)
    8ea4:	e51b3008 	ldr	r3, [fp, #-8]
    8ea8:	e5d33010 	ldrb	r3, [r3, #16]
    8eac:	e3530000 	cmp	r3, #0
    8eb0:	0a000002 	beq	8ec0 <_ZN4CI2C17Begin_TransactionEt+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:97
        return mTransaction;
    8eb4:	e51b3008 	ldr	r3, [fp, #-8]
    8eb8:	e2833010 	add	r3, r3, #16
    8ebc:	ea00000d 	b	8ef8 <_ZN4CI2C17Begin_TransactionEt+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:99

    mTransaction.mIn_Progress = true;
    8ec0:	e51b3008 	ldr	r3, [fp, #-8]
    8ec4:	e3a02001 	mov	r2, #1
    8ec8:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:100
    mTransaction.mLength = 0;
    8ecc:	e51b3008 	ldr	r3, [fp, #-8]
    8ed0:	e3a02000 	mov	r2, #0
    8ed4:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:101
    mTransaction.Set_Address(addr);
    8ed8:	e51b3008 	ldr	r3, [fp, #-8]
    8edc:	e2833010 	add	r3, r3, #16
    8ee0:	e15b20ba 	ldrh	r2, [fp, #-10]
    8ee4:	e1a01002 	mov	r1, r2
    8ee8:	e1a00003 	mov	r0, r3
    8eec:	eb000079 	bl	90d8 <_ZN16CI2C_Transaction11Set_AddressEt>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:103

    return mTransaction;
    8ef0:	e51b3008 	ldr	r3, [fp, #-8]
    8ef4:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:104
}
    8ef8:	e1a00003 	mov	r0, r3
    8efc:	e24bd004 	sub	sp, fp, #4
    8f00:	e8bd8800 	pop	{fp, pc}

00008f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>:
_ZN4CI2C15End_TransactionER16CI2C_Transactionb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:107

void CI2C::End_Transaction(CI2C_Transaction& transaction, bool commit)
{
    8f04:	e92d4810 	push	{r4, fp, lr}
    8f08:	e28db008 	add	fp, sp, #8
    8f0c:	e24dd01c 	sub	sp, sp, #28
    8f10:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    8f14:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    8f18:	e1a03002 	mov	r3, r2
    8f1c:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:108
    if (!transaction.mIn_Progress)
    8f20:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f24:	e5d33000 	ldrb	r3, [r3]
    8f28:	e2233001 	eor	r3, r3, #1
    8f2c:	e6ef3073 	uxtb	r3, r3
    8f30:	e3530000 	cmp	r3, #0
    8f34:	1a000042 	bne	9044 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:111
        return;

    transaction.mIn_Progress = false;
    8f38:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f3c:	e3a02000 	mov	r2, #0
    8f40:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113

    if (!commit || transaction.mLength == 0)
    8f44:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
    8f48:	e2233001 	eor	r3, r3, #1
    8f4c:	e6ef3073 	uxtb	r3, r3
    8f50:	e3530000 	cmp	r3, #0
    8f54:	1a00003c 	bne	904c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113 (discriminator 1)
    8f58:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f5c:	e593300c 	ldr	r3, [r3, #12]
    8f60:	e3530000 	cmp	r3, #0
    8f64:	0a000038 	beq	904c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:116
        return;

    Reg(hal::BSC_Reg::Slave_Address) = transaction.mAddress;
    8f68:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f6c:	e1d341b0 	ldrh	r4, [r3, #16]
    8f70:	e3a01003 	mov	r1, #3
    8f74:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f78:	ebfffebf 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8f7c:	e1a03000 	mov	r3, r0
    8f80:	e1a02004 	mov	r2, r4
    8f84:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:117
    Reg(hal::BSC_Reg::Data_Length) = transaction.mLength;
    8f88:	e3a01002 	mov	r1, #2
    8f8c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f90:	ebfffeb9 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8f94:	e1a02000 	mov	r2, r0
    8f98:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8f9c:	e593300c 	ldr	r3, [r3, #12]
    8fa0:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123

    // sMonitor << "Addr = " << CMonitor::NNumber_Base::HEX << static_cast<unsigned int>(transaction.mAddress) << '\n';
    // sMonitor << "Len = " << CMonitor::NNumber_Base::DEC << static_cast<unsigned int>(transaction.mLength) << '\n';
    // sMonitor << "Data:\n";

    for (volatile int i = 0; i < transaction.mLength; i++)
    8fa4:	e3a03000 	mov	r3, #0
    8fa8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123 (discriminator 3)
    8fac:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    8fb0:	e593300c 	ldr	r3, [r3, #12]
    8fb4:	e51b2010 	ldr	r2, [fp, #-16]
    8fb8:	e1530002 	cmp	r3, r2
    8fbc:	83a03001 	movhi	r3, #1
    8fc0:	93a03000 	movls	r3, #0
    8fc4:	e6ef3073 	uxtb	r3, r3
    8fc8:	e3530000 	cmp	r3, #0
    8fcc:	0a00000d 	beq	9008 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x104>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125 (discriminator 2)
    {
        Reg(hal::BSC_Reg::Data_FIFO) = transaction.mBuffer[i];
    8fd0:	e51b3010 	ldr	r3, [fp, #-16]
    8fd4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    8fd8:	e0823003 	add	r3, r2, r3
    8fdc:	e5d34001 	ldrb	r4, [r3, #1]
    8fe0:	e3a01004 	mov	r1, #4
    8fe4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fe8:	ebfffea3 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    8fec:	e1a03000 	mov	r3, r0
    8ff0:	e1a02004 	mov	r2, r4
    8ff4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123 (discriminator 2)
    for (volatile int i = 0; i < transaction.mLength; i++)
    8ff8:	e51b3010 	ldr	r3, [fp, #-16]
    8ffc:	e2833001 	add	r3, r3, #1
    9000:	e50b3010 	str	r3, [fp, #-16]
    9004:	eaffffe8 	b	8fac <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:131
        // sMonitor << CMonitor::NNumber_Base::DEC << static_cast<unsigned int>(transaction.mBuffer[i]) << ' ';
    }

    // sMonitor << '\n';

    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    9008:	e3a01001 	mov	r1, #1
    900c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9010:	ebfffe99 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    9014:	e1a03000 	mov	r3, r0
    9018:	e59f2038 	ldr	r2, [pc, #56]	; 9058 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x154>
    901c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:132
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    9020:	e3a01000 	mov	r1, #0
    9024:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9028:	ebfffe93 	bl	8a7c <_ZN4CI2C3RegEN3hal7BSC_RegE>
    902c:	e1a03000 	mov	r3, r0
    9030:	e59f2024 	ldr	r2, [pc, #36]	; 905c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x158>
    9034:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:134

    Wait_Ready();
    9038:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    903c:	ebfffe9c 	bl	8ab4 <_ZN4CI2C10Wait_ReadyEv>
    9040:	ea000002 	b	9050 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:109
        return;
    9044:	e320f000 	nop	{0}
    9048:	ea000000 	b	9050 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:114
        return;
    904c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
}
    9050:	e24bd008 	sub	sp, fp, #8
    9054:	e8bd8810 	pop	{r4, fp, pc}
    9058:	00000302 	andeq	r0, r0, r2, lsl #6
    905c:	00008080 	andeq	r8, r0, r0, lsl #1

00009060 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
    9060:	e92d4800 	push	{fp, lr}
    9064:	e28db004 	add	fp, sp, #4
    9068:	e24dd008 	sub	sp, sp, #8
    906c:	e50b0008 	str	r0, [fp, #-8]
    9070:	e50b100c 	str	r1, [fp, #-12]
    9074:	e51b3008 	ldr	r3, [fp, #-8]
    9078:	e3530001 	cmp	r3, #1
    907c:	1a000008 	bne	90a4 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135 (discriminator 1)
    9080:	e51b300c 	ldr	r3, [fp, #-12]
    9084:	e59f2024 	ldr	r2, [pc, #36]	; 90b0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    9088:	e1530002 	cmp	r3, r2
    908c:	1a000004 	bne	90a4 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:5
CI2C sI2C1(hal::BSC1_Base, 2, 3);
    9090:	e3a03003 	mov	r3, #3
    9094:	e3a02002 	mov	r2, #2
    9098:	e59f1014 	ldr	r1, [pc, #20]	; 90b4 <_Z41__static_initialization_and_destruction_0ii+0x54>
    909c:	e59f0014 	ldr	r0, [pc, #20]	; 90b8 <_Z41__static_initialization_and_destruction_0ii+0x58>
    90a0:	ebfffe5a 	bl	8a10 <_ZN4CI2CC1Emjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
}
    90a4:	e320f000 	nop	{0}
    90a8:	e24bd004 	sub	sp, fp, #4
    90ac:	e8bd8800 	pop	{fp, pc}
    90b0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    90b4:	20804000 	addcs	r4, r0, r0
    90b8:	0000ff40 	andeq	pc, r0, r0, asr #30

000090bc <_GLOBAL__sub_I_sI2C1>:
_GLOBAL__sub_I_sI2C1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
    90bc:	e92d4800 	push	{fp, lr}
    90c0:	e28db004 	add	fp, sp, #4
    90c4:	e59f1008 	ldr	r1, [pc, #8]	; 90d4 <_GLOBAL__sub_I_sI2C1+0x18>
    90c8:	e3a00001 	mov	r0, #1
    90cc:	ebffffe3 	bl	9060 <_Z41__static_initialization_and_destruction_0ii>
    90d0:	e8bd8800 	pop	{fp, pc}
    90d4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

000090d8 <_ZN16CI2C_Transaction11Set_AddressEt>:
_ZN16CI2C_Transaction11Set_AddressEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:26
        uint16_t mAddress = 0;

    public:
        CI2C_Transaction() = default;

        void Set_Address(uint16_t addr)
    90d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    90dc:	e28db000 	add	fp, sp, #0
    90e0:	e24dd00c 	sub	sp, sp, #12
    90e4:	e50b0008 	str	r0, [fp, #-8]
    90e8:	e1a03001 	mov	r3, r1
    90ec:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:28
        {
            mAddress = addr;
    90f0:	e51b3008 	ldr	r3, [fp, #-8]
    90f4:	e15b20ba 	ldrh	r2, [fp, #-10]
    90f8:	e1c321b0 	strh	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:29
        } 
    90fc:	e320f000 	nop	{0}
    9100:	e28bd000 	add	sp, fp, #0
    9104:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9108:	e12fff1e 	bx	lr

0000910c <_ZN16CI2C_TransactionC1Ev>:
_ZN16CI2C_TransactionC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:24
        CI2C_Transaction() = default;
    910c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9110:	e28db000 	add	fp, sp, #0
    9114:	e24dd00c 	sub	sp, sp, #12
    9118:	e50b0008 	str	r0, [fp, #-8]
    911c:	e51b3008 	ldr	r3, [fp, #-8]
    9120:	e3a02000 	mov	r2, #0
    9124:	e5c32000 	strb	r2, [r3]
    9128:	e51b3008 	ldr	r3, [fp, #-8]
    912c:	e3a02000 	mov	r2, #0
    9130:	e583200c 	str	r2, [r3, #12]
    9134:	e51b3008 	ldr	r3, [fp, #-8]
    9138:	e3a02000 	mov	r2, #0
    913c:	e1c321b0 	strh	r2, [r3, #16]
    9140:	e51b3008 	ldr	r3, [fp, #-8]
    9144:	e1a00003 	mov	r0, r3
    9148:	e28bd000 	add	sp, fp, #0
    914c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9150:	e12fff1e 	bx	lr

00009154 <_ZN8CMonitorC1Ejjj>:
_ZN8CMonitorC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:5
#include <drivers/monitor.h>

CMonitor sMonitor{ 0x30000000, 80, 25 };

CMonitor::CMonitor(unsigned int monitor_base_addr, unsigned int width, unsigned int height)
    9154:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9158:	e28db000 	add	fp, sp, #0
    915c:	e24dd014 	sub	sp, sp, #20
    9160:	e50b0008 	str	r0, [fp, #-8]
    9164:	e50b100c 	str	r1, [fp, #-12]
    9168:	e50b2010 	str	r2, [fp, #-16]
    916c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:6
: m_monitor{ reinterpret_cast<unsigned char*>(monitor_base_addr) }
    9170:	e51b200c 	ldr	r2, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:10
, m_width{ width }
, m_height{ height }
, m_cursor{ 0, 0 }
, m_number_base{ DEFAULT_NUMBER_BASE }
    9174:	e51b3008 	ldr	r3, [fp, #-8]
    9178:	e5832000 	str	r2, [r3]
    917c:	e51b3008 	ldr	r3, [fp, #-8]
    9180:	e51b2010 	ldr	r2, [fp, #-16]
    9184:	e5832004 	str	r2, [r3, #4]
    9188:	e51b3008 	ldr	r3, [fp, #-8]
    918c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    9190:	e5832008 	str	r2, [r3, #8]
    9194:	e51b3008 	ldr	r3, [fp, #-8]
    9198:	e3a02000 	mov	r2, #0
    919c:	e583200c 	str	r2, [r3, #12]
    91a0:	e51b3008 	ldr	r3, [fp, #-8]
    91a4:	e3a02000 	mov	r2, #0
    91a8:	e5832010 	str	r2, [r3, #16]
    91ac:	e51b3008 	ldr	r3, [fp, #-8]
    91b0:	e3a0200a 	mov	r2, #10
    91b4:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:12
{
}
    91b8:	e51b3008 	ldr	r3, [fp, #-8]
    91bc:	e1a00003 	mov	r0, r3
    91c0:	e28bd000 	add	sp, fp, #0
    91c4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    91c8:	e12fff1e 	bx	lr

000091cc <_ZN8CMonitor5ClearEv>:
_ZN8CMonitor5ClearEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:21
    m_cursor.y = 0;
    m_cursor.y = 0;
}

void CMonitor::Clear()
{
    91cc:	e92d4800 	push	{fp, lr}
    91d0:	e28db004 	add	fp, sp, #4
    91d4:	e24dd010 	sub	sp, sp, #16
    91d8:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:22
    Reset_Cursor();
    91dc:	e51b0010 	ldr	r0, [fp, #-16]
    91e0:	eb00016d 	bl	979c <_ZN8CMonitor12Reset_CursorEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24

    for (unsigned int y = 0; y < m_height; ++y)
    91e4:	e3a03000 	mov	r3, #0
    91e8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 1)
    91ec:	e51b3010 	ldr	r3, [fp, #-16]
    91f0:	e5933008 	ldr	r3, [r3, #8]
    91f4:	e51b2008 	ldr	r2, [fp, #-8]
    91f8:	e1520003 	cmp	r2, r3
    91fc:	2a000019 	bcs	9268 <_ZN8CMonitor5ClearEv+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26
    {
        for (unsigned int x = 0; x < m_width; ++x)
    9200:	e3a03000 	mov	r3, #0
    9204:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 3)
    9208:	e51b3010 	ldr	r3, [fp, #-16]
    920c:	e5933004 	ldr	r3, [r3, #4]
    9210:	e51b200c 	ldr	r2, [fp, #-12]
    9214:	e1520003 	cmp	r2, r3
    9218:	2a00000e 	bcs	9258 <_ZN8CMonitor5ClearEv+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:28 (discriminator 2)
        {
            m_monitor[(y * m_width) + x] = ' ';
    921c:	e51b3010 	ldr	r3, [fp, #-16]
    9220:	e5932000 	ldr	r2, [r3]
    9224:	e51b3010 	ldr	r3, [fp, #-16]
    9228:	e5933004 	ldr	r3, [r3, #4]
    922c:	e51b1008 	ldr	r1, [fp, #-8]
    9230:	e0010391 	mul	r1, r1, r3
    9234:	e51b300c 	ldr	r3, [fp, #-12]
    9238:	e0813003 	add	r3, r1, r3
    923c:	e0823003 	add	r3, r2, r3
    9240:	e3a02020 	mov	r2, #32
    9244:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9248:	e51b300c 	ldr	r3, [fp, #-12]
    924c:	e2833001 	add	r3, r3, #1
    9250:	e50b300c 	str	r3, [fp, #-12]
    9254:	eaffffeb 	b	9208 <_ZN8CMonitor5ClearEv+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 2)
    for (unsigned int y = 0; y < m_height; ++y)
    9258:	e51b3008 	ldr	r3, [fp, #-8]
    925c:	e2833001 	add	r3, r3, #1
    9260:	e50b3008 	str	r3, [fp, #-8]
    9264:	eaffffe0 	b	91ec <_ZN8CMonitor5ClearEv+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:31
        }
    }
}
    9268:	e320f000 	nop	{0}
    926c:	e24bd004 	sub	sp, fp, #4
    9270:	e8bd8800 	pop	{fp, pc}

00009274 <_ZN8CMonitor6ScrollEv>:
_ZN8CMonitor6ScrollEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:49
        m_cursor.y = m_height - 1;
    }
}

void CMonitor::Scroll()
{
    9274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9278:	e28db000 	add	fp, sp, #0
    927c:	e24dd01c 	sub	sp, sp, #28
    9280:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50
    for (unsigned int y = 1; y < m_height; ++y)
    9284:	e3a03001 	mov	r3, #1
    9288:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 1)
    928c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9290:	e5933008 	ldr	r3, [r3, #8]
    9294:	e51b2008 	ldr	r2, [fp, #-8]
    9298:	e1520003 	cmp	r2, r3
    929c:	2a000024 	bcs	9334 <_ZN8CMonitor6ScrollEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52
    {
        for (unsigned int x = 0; x < m_width; ++x)
    92a0:	e3a03000 	mov	r3, #0
    92a4:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 3)
    92a8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92ac:	e5933004 	ldr	r3, [r3, #4]
    92b0:	e51b200c 	ldr	r2, [fp, #-12]
    92b4:	e1520003 	cmp	r2, r3
    92b8:	2a000019 	bcs	9324 <_ZN8CMonitor6ScrollEv+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:54 (discriminator 2)
        {
            m_monitor[((y - 1) * m_width) + x] = m_monitor[(y * m_width) + x];
    92bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92c0:	e5932000 	ldr	r2, [r3]
    92c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92c8:	e5933004 	ldr	r3, [r3, #4]
    92cc:	e51b1008 	ldr	r1, [fp, #-8]
    92d0:	e0010391 	mul	r1, r1, r3
    92d4:	e51b300c 	ldr	r3, [fp, #-12]
    92d8:	e0813003 	add	r3, r1, r3
    92dc:	e0822003 	add	r2, r2, r3
    92e0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    92e4:	e5931000 	ldr	r1, [r3]
    92e8:	e51b3008 	ldr	r3, [fp, #-8]
    92ec:	e2433001 	sub	r3, r3, #1
    92f0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    92f4:	e5900004 	ldr	r0, [r0, #4]
    92f8:	e0000390 	mul	r0, r0, r3
    92fc:	e51b300c 	ldr	r3, [fp, #-12]
    9300:	e0803003 	add	r3, r0, r3
    9304:	e0813003 	add	r3, r1, r3
    9308:	e5d22000 	ldrb	r2, [r2]
    930c:	e6ef2072 	uxtb	r2, r2
    9310:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9314:	e51b300c 	ldr	r3, [fp, #-12]
    9318:	e2833001 	add	r3, r3, #1
    931c:	e50b300c 	str	r3, [fp, #-12]
    9320:	eaffffe0 	b	92a8 <_ZN8CMonitor6ScrollEv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 2)
    for (unsigned int y = 1; y < m_height; ++y)
    9324:	e51b3008 	ldr	r3, [fp, #-8]
    9328:	e2833001 	add	r3, r3, #1
    932c:	e50b3008 	str	r3, [fp, #-8]
    9330:	eaffffd5 	b	928c <_ZN8CMonitor6ScrollEv+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58
        }
    }

    for (unsigned int x = 0; x < m_width; ++x)
    9334:	e3a03000 	mov	r3, #0
    9338:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 3)
    933c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9340:	e5933004 	ldr	r3, [r3, #4]
    9344:	e51b2010 	ldr	r2, [fp, #-16]
    9348:	e1520003 	cmp	r2, r3
    934c:	2a000010 	bcs	9394 <_ZN8CMonitor6ScrollEv+0x120>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:60 (discriminator 2)
    {
        m_monitor[((m_height - 1) * m_width) + x] = ' ';
    9350:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    9354:	e5932000 	ldr	r2, [r3]
    9358:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    935c:	e5933008 	ldr	r3, [r3, #8]
    9360:	e2433001 	sub	r3, r3, #1
    9364:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    9368:	e5911004 	ldr	r1, [r1, #4]
    936c:	e0010391 	mul	r1, r1, r3
    9370:	e51b3010 	ldr	r3, [fp, #-16]
    9374:	e0813003 	add	r3, r1, r3
    9378:	e0823003 	add	r3, r2, r3
    937c:	e3a02020 	mov	r2, #32
    9380:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 2)
    for (unsigned int x = 0; x < m_width; ++x)
    9384:	e51b3010 	ldr	r3, [fp, #-16]
    9388:	e2833001 	add	r3, r3, #1
    938c:	e50b3010 	str	r3, [fp, #-16]
    9390:	eaffffe9 	b	933c <_ZN8CMonitor6ScrollEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:62
    }
}
    9394:	e320f000 	nop	{0}
    9398:	e28bd000 	add	sp, fp, #0
    939c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    93a0:	e12fff1e 	bx	lr

000093a4 <_ZN8CMonitorlsEc>:
_ZN8CMonitorlsEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:70
{
    m_number_base = DEFAULT_NUMBER_BASE;
}

CMonitor& CMonitor::operator<<(char c)
{
    93a4:	e92d4800 	push	{fp, lr}
    93a8:	e28db004 	add	fp, sp, #4
    93ac:	e24dd008 	sub	sp, sp, #8
    93b0:	e50b0008 	str	r0, [fp, #-8]
    93b4:	e1a03001 	mov	r3, r1
    93b8:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:71
    if (c != '\n')
    93bc:	e55b3009 	ldrb	r3, [fp, #-9]
    93c0:	e353000a 	cmp	r3, #10
    93c4:	0a000012 	beq	9414 <_ZN8CMonitorlsEc+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:73
    {
        m_monitor[(m_cursor.y * m_width) + m_cursor.x] = static_cast<unsigned char>(c);
    93c8:	e51b3008 	ldr	r3, [fp, #-8]
    93cc:	e5932000 	ldr	r2, [r3]
    93d0:	e51b3008 	ldr	r3, [fp, #-8]
    93d4:	e593300c 	ldr	r3, [r3, #12]
    93d8:	e51b1008 	ldr	r1, [fp, #-8]
    93dc:	e5911004 	ldr	r1, [r1, #4]
    93e0:	e0010391 	mul	r1, r1, r3
    93e4:	e51b3008 	ldr	r3, [fp, #-8]
    93e8:	e5933010 	ldr	r3, [r3, #16]
    93ec:	e0813003 	add	r3, r1, r3
    93f0:	e0823003 	add	r3, r2, r3
    93f4:	e55b2009 	ldrb	r2, [fp, #-9]
    93f8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:74
        ++m_cursor.x;
    93fc:	e51b3008 	ldr	r3, [fp, #-8]
    9400:	e5933010 	ldr	r3, [r3, #16]
    9404:	e2832001 	add	r2, r3, #1
    9408:	e51b3008 	ldr	r3, [fp, #-8]
    940c:	e5832010 	str	r2, [r3, #16]
    9410:	ea000007 	b	9434 <_ZN8CMonitorlsEc+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:78
    }
    else
    {
        m_cursor.x = 0;
    9414:	e51b3008 	ldr	r3, [fp, #-8]
    9418:	e3a02000 	mov	r2, #0
    941c:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:79
        ++m_cursor.y;
    9420:	e51b3008 	ldr	r3, [fp, #-8]
    9424:	e593300c 	ldr	r3, [r3, #12]
    9428:	e2832001 	add	r2, r3, #1
    942c:	e51b3008 	ldr	r3, [fp, #-8]
    9430:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:82
    }

    Adjust_Cursor();
    9434:	e51b0008 	ldr	r0, [fp, #-8]
    9438:	eb0000e5 	bl	97d4 <_ZN8CMonitor13Adjust_CursorEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:84

    return *this;
    943c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:85
}
    9440:	e1a00003 	mov	r0, r3
    9444:	e24bd004 	sub	sp, fp, #4
    9448:	e8bd8800 	pop	{fp, pc}

0000944c <_ZN8CMonitorlsEPKc>:
_ZN8CMonitorlsEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:88

CMonitor& CMonitor::operator<<(const char* str)
{
    944c:	e92d4800 	push	{fp, lr}
    9450:	e28db004 	add	fp, sp, #4
    9454:	e24dd010 	sub	sp, sp, #16
    9458:	e50b0010 	str	r0, [fp, #-16]
    945c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    9460:	e3a03000 	mov	r3, #0
    9464:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 3)
    9468:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    946c:	e51b3008 	ldr	r3, [fp, #-8]
    9470:	e0823003 	add	r3, r2, r3
    9474:	e5d33000 	ldrb	r3, [r3]
    9478:	e3530000 	cmp	r3, #0
    947c:	0a00000a 	beq	94ac <_ZN8CMonitorlsEPKc+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:91 (discriminator 2)
    {
        *this << str[i];
    9480:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    9484:	e51b3008 	ldr	r3, [fp, #-8]
    9488:	e0823003 	add	r3, r2, r3
    948c:	e5d33000 	ldrb	r3, [r3]
    9490:	e1a01003 	mov	r1, r3
    9494:	e51b0010 	ldr	r0, [fp, #-16]
    9498:	ebffffc1 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 2)
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    949c:	e51b3008 	ldr	r3, [fp, #-8]
    94a0:	e2833001 	add	r3, r3, #1
    94a4:	e50b3008 	str	r3, [fp, #-8]
    94a8:	eaffffee 	b	9468 <_ZN8CMonitorlsEPKc+0x1c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:94
    }

    Reset_Number_Base();
    94ac:	e51b0010 	ldr	r0, [fp, #-16]
    94b0:	eb0000e9 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:96

    return *this;
    94b4:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:97
}
    94b8:	e1a00003 	mov	r0, r3
    94bc:	e24bd004 	sub	sp, fp, #4
    94c0:	e8bd8800 	pop	{fp, pc}

000094c4 <_ZN8CMonitorlsENS_12NNumber_BaseE>:
_ZN8CMonitorlsENS_12NNumber_BaseE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:100

CMonitor& CMonitor::operator<<(CMonitor::NNumber_Base number_base)
{
    94c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    94c8:	e28db000 	add	fp, sp, #0
    94cc:	e24dd00c 	sub	sp, sp, #12
    94d0:	e50b0008 	str	r0, [fp, #-8]
    94d4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:101
    m_number_base = number_base;
    94d8:	e51b3008 	ldr	r3, [fp, #-8]
    94dc:	e51b200c 	ldr	r2, [fp, #-12]
    94e0:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:103

    return *this;
    94e4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:104
}
    94e8:	e1a00003 	mov	r0, r3
    94ec:	e28bd000 	add	sp, fp, #0
    94f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    94f4:	e12fff1e 	bx	lr

000094f8 <_ZN8CMonitorlsEj>:
_ZN8CMonitorlsEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:107

CMonitor& CMonitor::operator<<(unsigned int num)
{
    94f8:	e92d4800 	push	{fp, lr}
    94fc:	e28db004 	add	fp, sp, #4
    9500:	e24dd008 	sub	sp, sp, #8
    9504:	e50b0008 	str	r0, [fp, #-8]
    9508:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:112
    static constexpr unsigned int BUFFER_SIZE = 16;

    static char s_buffer[BUFFER_SIZE];

    itoa(num, s_buffer, static_cast<unsigned int>(m_number_base));
    950c:	e51b3008 	ldr	r3, [fp, #-8]
    9510:	e5933014 	ldr	r3, [r3, #20]
    9514:	e59f202c 	ldr	r2, [pc, #44]	; 9548 <_ZN8CMonitorlsEj+0x50>
    9518:	e51b100c 	ldr	r1, [fp, #-12]
    951c:	e51b0008 	ldr	r0, [fp, #-8]
    9520:	eb000021 	bl	95ac <_ZN8CMonitor4itoaEjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:113
    *this << s_buffer;
    9524:	e59f101c 	ldr	r1, [pc, #28]	; 9548 <_ZN8CMonitorlsEj+0x50>
    9528:	e51b0008 	ldr	r0, [fp, #-8]
    952c:	ebffffc6 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:114
    Reset_Number_Base();
    9530:	e51b0008 	ldr	r0, [fp, #-8]
    9534:	eb0000c8 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:116

    return *this;
    9538:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:117
}
    953c:	e1a00003 	mov	r0, r3
    9540:	e24bd004 	sub	sp, fp, #4
    9544:	e8bd8800 	pop	{fp, pc}
    9548:	0000ff7c 	andeq	pc, r0, ip, ror pc	; <UNPREDICTABLE>

0000954c <_ZN8CMonitorlsEb>:
_ZN8CMonitorlsEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:120

CMonitor& CMonitor::operator<<(bool value)
{
    954c:	e92d4800 	push	{fp, lr}
    9550:	e28db004 	add	fp, sp, #4
    9554:	e24dd008 	sub	sp, sp, #8
    9558:	e50b0008 	str	r0, [fp, #-8]
    955c:	e1a03001 	mov	r3, r1
    9560:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:121
    if (value)
    9564:	e55b3009 	ldrb	r3, [fp, #-9]
    9568:	e3530000 	cmp	r3, #0
    956c:	0a000003 	beq	9580 <_ZN8CMonitorlsEb+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:123
    {
        *this << "true";
    9570:	e59f102c 	ldr	r1, [pc, #44]	; 95a4 <_ZN8CMonitorlsEb+0x58>
    9574:	e51b0008 	ldr	r0, [fp, #-8]
    9578:	ebffffb3 	bl	944c <_ZN8CMonitorlsEPKc>
    957c:	ea000002 	b	958c <_ZN8CMonitorlsEb+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:127
    }
    else
    {
        *this << "false";
    9580:	e59f1020 	ldr	r1, [pc, #32]	; 95a8 <_ZN8CMonitorlsEb+0x5c>
    9584:	e51b0008 	ldr	r0, [fp, #-8]
    9588:	ebffffaf 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:130
    }

    Reset_Number_Base();
    958c:	e51b0008 	ldr	r0, [fp, #-8]
    9590:	eb0000b1 	bl	985c <_ZN8CMonitor17Reset_Number_BaseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:132

    return *this;
    9594:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:133
}
    9598:	e1a00003 	mov	r0, r3
    959c:	e24bd004 	sub	sp, fp, #4
    95a0:	e8bd8800 	pop	{fp, pc}
    95a4:	0000f790 	muleq	r0, r0, r7
    95a8:	0000f798 	muleq	r0, r8, r7

000095ac <_ZN8CMonitor4itoaEjPcj>:
_ZN8CMonitor4itoaEjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:136

void CMonitor::itoa(unsigned int input, char* output, unsigned int base)
{
    95ac:	e92d4800 	push	{fp, lr}
    95b0:	e28db004 	add	fp, sp, #4
    95b4:	e24dd020 	sub	sp, sp, #32
    95b8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    95bc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    95c0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    95c4:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:137
    int i = 0;
    95c8:	e3a03000 	mov	r3, #0
    95cc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139

    while (input > 0)
    95d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95d4:	e3530000 	cmp	r3, #0
    95d8:	0a000015 	beq	9634 <_ZN8CMonitor4itoaEjPcj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:141
    {
        output[i] = CharConvArr[input % base];
    95dc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95e0:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    95e4:	e1a00003 	mov	r0, r3
    95e8:	eb001847 	bl	f70c <__aeabi_uidivmod>
    95ec:	e1a03001 	mov	r3, r1
    95f0:	e1a02003 	mov	r2, r3
    95f4:	e59f3128 	ldr	r3, [pc, #296]	; 9724 <_ZN8CMonitor4itoaEjPcj+0x178>
    95f8:	e0822003 	add	r2, r2, r3
    95fc:	e51b3008 	ldr	r3, [fp, #-8]
    9600:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    9604:	e0813003 	add	r3, r1, r3
    9608:	e5d22000 	ldrb	r2, [r2]
    960c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:142
        input /= base;
    9610:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    9614:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    9618:	eb0017c0 	bl	f520 <__udivsi3>
    961c:	e1a03000 	mov	r3, r0
    9620:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:144

        i++;
    9624:	e51b3008 	ldr	r3, [fp, #-8]
    9628:	e2833001 	add	r3, r3, #1
    962c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    9630:	eaffffe6 	b	95d0 <_ZN8CMonitor4itoaEjPcj+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:147
    }

    if (i == 0)
    9634:	e51b3008 	ldr	r3, [fp, #-8]
    9638:	e3530000 	cmp	r3, #0
    963c:	1a000007 	bne	9660 <_ZN8CMonitor4itoaEjPcj+0xb4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:149
    {
        output[i] = CharConvArr[0];
    9640:	e51b3008 	ldr	r3, [fp, #-8]
    9644:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9648:	e0823003 	add	r3, r2, r3
    964c:	e3a02030 	mov	r2, #48	; 0x30
    9650:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:150
        i++;
    9654:	e51b3008 	ldr	r3, [fp, #-8]
    9658:	e2833001 	add	r3, r3, #1
    965c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:153
    }

    output[i] = '\0';
    9660:	e51b3008 	ldr	r3, [fp, #-8]
    9664:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9668:	e0823003 	add	r3, r2, r3
    966c:	e3a02000 	mov	r2, #0
    9670:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:154
    i--;
    9674:	e51b3008 	ldr	r3, [fp, #-8]
    9678:	e2433001 	sub	r3, r3, #1
    967c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156

    for (int j = 0; j <= (i / 2); j++)
    9680:	e3a03000 	mov	r3, #0
    9684:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 3)
    9688:	e51b3008 	ldr	r3, [fp, #-8]
    968c:	e1a02fa3 	lsr	r2, r3, #31
    9690:	e0823003 	add	r3, r2, r3
    9694:	e1a030c3 	asr	r3, r3, #1
    9698:	e1a02003 	mov	r2, r3
    969c:	e51b300c 	ldr	r3, [fp, #-12]
    96a0:	e1530002 	cmp	r3, r2
    96a4:	ca00001b 	bgt	9718 <_ZN8CMonitor4itoaEjPcj+0x16c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:158 (discriminator 2)
    {
        char c = output[i - j];
    96a8:	e51b2008 	ldr	r2, [fp, #-8]
    96ac:	e51b300c 	ldr	r3, [fp, #-12]
    96b0:	e0423003 	sub	r3, r2, r3
    96b4:	e1a02003 	mov	r2, r3
    96b8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    96bc:	e0833002 	add	r3, r3, r2
    96c0:	e5d33000 	ldrb	r3, [r3]
    96c4:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:159 (discriminator 2)
        output[i - j] = output[j];
    96c8:	e51b300c 	ldr	r3, [fp, #-12]
    96cc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    96d0:	e0822003 	add	r2, r2, r3
    96d4:	e51b1008 	ldr	r1, [fp, #-8]
    96d8:	e51b300c 	ldr	r3, [fp, #-12]
    96dc:	e0413003 	sub	r3, r1, r3
    96e0:	e1a01003 	mov	r1, r3
    96e4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    96e8:	e0833001 	add	r3, r3, r1
    96ec:	e5d22000 	ldrb	r2, [r2]
    96f0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:160 (discriminator 2)
        output[j] = c;
    96f4:	e51b300c 	ldr	r3, [fp, #-12]
    96f8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    96fc:	e0823003 	add	r3, r2, r3
    9700:	e55b200d 	ldrb	r2, [fp, #-13]
    9704:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 2)
    for (int j = 0; j <= (i / 2); j++)
    9708:	e51b300c 	ldr	r3, [fp, #-12]
    970c:	e2833001 	add	r3, r3, #1
    9710:	e50b300c 	str	r3, [fp, #-12]
    9714:	eaffffdb 	b	9688 <_ZN8CMonitor4itoaEjPcj+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    }
}
    9718:	e320f000 	nop	{0}
    971c:	e24bd004 	sub	sp, fp, #4
    9720:	e8bd8800 	pop	{fp, pc}
    9724:	0000f7a0 	andeq	pc, r0, r0, lsr #15

00009728 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9728:	e92d4800 	push	{fp, lr}
    972c:	e28db004 	add	fp, sp, #4
    9730:	e24dd008 	sub	sp, sp, #8
    9734:	e50b0008 	str	r0, [fp, #-8]
    9738:	e50b100c 	str	r1, [fp, #-12]
    973c:	e51b3008 	ldr	r3, [fp, #-8]
    9740:	e3530001 	cmp	r3, #1
    9744:	1a000008 	bne	976c <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162 (discriminator 1)
    9748:	e51b300c 	ldr	r3, [fp, #-12]
    974c:	e59f2024 	ldr	r2, [pc, #36]	; 9778 <_Z41__static_initialization_and_destruction_0ii+0x50>
    9750:	e1530002 	cmp	r3, r2
    9754:	1a000004 	bne	976c <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:3
CMonitor sMonitor{ 0x30000000, 80, 25 };
    9758:	e3a03019 	mov	r3, #25
    975c:	e3a02050 	mov	r2, #80	; 0x50
    9760:	e3a01203 	mov	r1, #805306368	; 0x30000000
    9764:	e59f0010 	ldr	r0, [pc, #16]	; 977c <_Z41__static_initialization_and_destruction_0ii+0x54>
    9768:	ebfffe79 	bl	9154 <_ZN8CMonitorC1Ejjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    976c:	e320f000 	nop	{0}
    9770:	e24bd004 	sub	sp, fp, #4
    9774:	e8bd8800 	pop	{fp, pc}
    9778:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    977c:	0000ff64 	andeq	pc, r0, r4, ror #30

00009780 <_GLOBAL__sub_I_sMonitor>:
_GLOBAL__sub_I_sMonitor():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9780:	e92d4800 	push	{fp, lr}
    9784:	e28db004 	add	fp, sp, #4
    9788:	e59f1008 	ldr	r1, [pc, #8]	; 9798 <_GLOBAL__sub_I_sMonitor+0x18>
    978c:	e3a00001 	mov	r0, #1
    9790:	ebffffe4 	bl	9728 <_Z41__static_initialization_and_destruction_0ii>
    9794:	e8bd8800 	pop	{fp, pc}
    9798:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000979c <_ZN8CMonitor12Reset_CursorEv>:
_ZN8CMonitor12Reset_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:15
{
    979c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    97a0:	e28db000 	add	fp, sp, #0
    97a4:	e24dd00c 	sub	sp, sp, #12
    97a8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:16
    m_cursor.y = 0;
    97ac:	e51b3008 	ldr	r3, [fp, #-8]
    97b0:	e3a02000 	mov	r2, #0
    97b4:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:17
    m_cursor.y = 0;
    97b8:	e51b3008 	ldr	r3, [fp, #-8]
    97bc:	e3a02000 	mov	r2, #0
    97c0:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:18
}
    97c4:	e320f000 	nop	{0}
    97c8:	e28bd000 	add	sp, fp, #0
    97cc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    97d0:	e12fff1e 	bx	lr

000097d4 <_ZN8CMonitor13Adjust_CursorEv>:
_ZN8CMonitor13Adjust_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:34
{
    97d4:	e92d4800 	push	{fp, lr}
    97d8:	e28db004 	add	fp, sp, #4
    97dc:	e24dd008 	sub	sp, sp, #8
    97e0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:35
    if (m_cursor.x >= m_width)
    97e4:	e51b3008 	ldr	r3, [fp, #-8]
    97e8:	e5932010 	ldr	r2, [r3, #16]
    97ec:	e51b3008 	ldr	r3, [fp, #-8]
    97f0:	e5933004 	ldr	r3, [r3, #4]
    97f4:	e1520003 	cmp	r2, r3
    97f8:	3a000007 	bcc	981c <_ZN8CMonitor13Adjust_CursorEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:37
        m_cursor.x = 0;
    97fc:	e51b3008 	ldr	r3, [fp, #-8]
    9800:	e3a02000 	mov	r2, #0
    9804:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:38
        ++m_cursor.y;
    9808:	e51b3008 	ldr	r3, [fp, #-8]
    980c:	e593300c 	ldr	r3, [r3, #12]
    9810:	e2832001 	add	r2, r3, #1
    9814:	e51b3008 	ldr	r3, [fp, #-8]
    9818:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:41
    if (m_cursor.y >= m_height)
    981c:	e51b3008 	ldr	r3, [fp, #-8]
    9820:	e593200c 	ldr	r2, [r3, #12]
    9824:	e51b3008 	ldr	r3, [fp, #-8]
    9828:	e5933008 	ldr	r3, [r3, #8]
    982c:	e1520003 	cmp	r2, r3
    9830:	3a000006 	bcc	9850 <_ZN8CMonitor13Adjust_CursorEv+0x7c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:43
        Scroll();
    9834:	e51b0008 	ldr	r0, [fp, #-8]
    9838:	ebfffe8d 	bl	9274 <_ZN8CMonitor6ScrollEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:44
        m_cursor.y = m_height - 1;
    983c:	e51b3008 	ldr	r3, [fp, #-8]
    9840:	e5933008 	ldr	r3, [r3, #8]
    9844:	e2432001 	sub	r2, r3, #1
    9848:	e51b3008 	ldr	r3, [fp, #-8]
    984c:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:46
}
    9850:	e320f000 	nop	{0}
    9854:	e24bd004 	sub	sp, fp, #4
    9858:	e8bd8800 	pop	{fp, pc}

0000985c <_ZN8CMonitor17Reset_Number_BaseEv>:
_ZN8CMonitor17Reset_Number_BaseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:65
{
    985c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    9860:	e28db000 	add	fp, sp, #0
    9864:	e24dd00c 	sub	sp, sp, #12
    9868:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:66
    m_number_base = DEFAULT_NUMBER_BASE;
    986c:	e51b3008 	ldr	r3, [fp, #-8]
    9870:	e3a0200a 	mov	r2, #10
    9874:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:67
}
    9878:	e320f000 	nop	{0}
    987c:	e28bd000 	add	sp, fp, #0
    9880:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    9884:	e12fff1e 	bx	lr

00009888 <_ZN16CDisplay_SSD1306C1ER4CI2C>:
_ZN16CDisplay_SSD1306C2ER4CI2C():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:9

#include <drivers/bridges/display_protocol.h>

CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);

CDisplay_SSD1306::CDisplay_SSD1306(CI2C& i2c)
    9888:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    988c:	e28db000 	add	fp, sp, #0
    9890:	e24dd00c 	sub	sp, sp, #12
    9894:	e50b0008 	str	r0, [fp, #-8]
    9898:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:10
    : mI2C(i2c), mOpened(false), mBuffer(nullptr), mWidth(0), mHeight(0)
    989c:	e51b3008 	ldr	r3, [fp, #-8]
    98a0:	e51b200c 	ldr	r2, [fp, #-12]
    98a4:	e5832000 	str	r2, [r3]
    98a8:	e51b3008 	ldr	r3, [fp, #-8]
    98ac:	e3a02000 	mov	r2, #0
    98b0:	e5c32004 	strb	r2, [r3, #4]
    98b4:	e51b3008 	ldr	r3, [fp, #-8]
    98b8:	e3a02000 	mov	r2, #0
    98bc:	e5832008 	str	r2, [r3, #8]
    98c0:	e51b3008 	ldr	r3, [fp, #-8]
    98c4:	e3a02000 	mov	r2, #0
    98c8:	e583200c 	str	r2, [r3, #12]
    98cc:	e51b3008 	ldr	r3, [fp, #-8]
    98d0:	e3a02000 	mov	r2, #0
    98d4:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:13
{

}
    98d8:	e51b3008 	ldr	r3, [fp, #-8]
    98dc:	e1a00003 	mov	r0, r3
    98e0:	e28bd000 	add	sp, fp, #0
    98e4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    98e8:	e12fff1e 	bx	lr

000098ec <_ZN16CDisplay_SSD13064OpenEii>:
_ZN16CDisplay_SSD13064OpenEii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:16

bool CDisplay_SSD1306::Open(int width, int height)
{
    98ec:	e92d4800 	push	{fp, lr}
    98f0:	e28db004 	add	fp, sp, #4
    98f4:	e24dd0d8 	sub	sp, sp, #216	; 0xd8
    98f8:	e50b00d0 	str	r0, [fp, #-208]	; 0xffffff30
    98fc:	e50b10d4 	str	r1, [fp, #-212]	; 0xffffff2c
    9900:	e50b20d8 	str	r2, [fp, #-216]	; 0xffffff28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:17
    if (!mI2C.Open())
    9904:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9908:	e5933000 	ldr	r3, [r3]
    990c:	e1a00003 	mov	r0, r3
    9910:	ebfffc7c 	bl	8b08 <_ZN4CI2C4OpenEv>
    9914:	e1a03000 	mov	r3, r0
    9918:	e2233001 	eor	r3, r3, #1
    991c:	e6ef3073 	uxtb	r3, r3
    9920:	e3530000 	cmp	r3, #0
    9924:	0a000001 	beq	9930 <_ZN16CDisplay_SSD13064OpenEii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:18
        return false;
    9928:	e3a03000 	mov	r3, #0
    992c:	ea0001b8 	b	a014 <_ZN16CDisplay_SSD13064OpenEii+0x728>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:20

    mOpened = true;
    9930:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9934:	e3a02001 	mov	r2, #1
    9938:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:23

    // zaokrouhlime nahoru na nasobek osmi (na cele stranky)
    if (height % 8 != 0)
    993c:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9940:	e2033007 	and	r3, r3, #7
    9944:	e3530000 	cmp	r3, #0
    9948:	0a000008 	beq	9970 <_ZN16CDisplay_SSD13064OpenEii+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:24
        height += 8 - (height % 8);
    994c:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9950:	e2732000 	rsbs	r2, r3, #0
    9954:	e2033007 	and	r3, r3, #7
    9958:	e2022007 	and	r2, r2, #7
    995c:	52623000 	rsbpl	r3, r2, #0
    9960:	e2633008 	rsb	r3, r3, #8
    9964:	e51b20d8 	ldr	r2, [fp, #-216]	; 0xffffff28
    9968:	e0823003 	add	r3, r2, r3
    996c:	e50b30d8 	str	r3, [fp, #-216]	; 0xffffff28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:26

    mWidth = width;
    9970:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9974:	e51b20d4 	ldr	r2, [fp, #-212]	; 0xffffff2c
    9978:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:27
    mHeight = height;
    997c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9980:	e51b20d8 	ldr	r2, [fp, #-216]	; 0xffffff28
    9984:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:32

    // alokujeme si buffer, ten je velky tak jako displej
    // dalo by se to optimalizovat, napr. primym kreslenim, bufferovanim vyrezu, apod.
    // ale to my ted nepotrebujeme, obzvlast kdyz spotrebujeme max jednotky kB a mame k dispozici >512MB RAM
    mBuffer = new uint8_t[mWidth * mHeight / 8];
    9988:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    998c:	e593300c 	ldr	r3, [r3, #12]
    9990:	e51b20d0 	ldr	r2, [fp, #-208]	; 0xffffff30
    9994:	e5922010 	ldr	r2, [r2, #16]
    9998:	e0030392 	mul	r3, r2, r3
    999c:	e2832007 	add	r2, r3, #7
    99a0:	e3530000 	cmp	r3, #0
    99a4:	b1a03002 	movlt	r3, r2
    99a8:	a1a03003 	movge	r3, r3
    99ac:	e1a031c3 	asr	r3, r3, #3
    99b0:	e1a00003 	mov	r0, r3
    99b4:	eb0016d8 	bl	f51c <_Znaj>
    99b8:	e1a03000 	mov	r3, r0
    99bc:	e1a02003 	mov	r2, r3
    99c0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    99c4:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:36

    // vypneme displej, nastavime clock ratio (z datasheetu, doporucena hodnota), nastavime multiplex ratio (vysku displeje)
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    99c8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    99cc:	e5933000 	ldr	r3, [r3]
    99d0:	e3a0103c 	mov	r1, #60	; 0x3c
    99d4:	e1a00003 	mov	r0, r3
    99d8:	ebfffd2b 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    99dc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:38

        ta << SSD1306_Cmd::Command_Start
    99e0:	e3a03000 	mov	r3, #0
    99e4:	e50b30cc 	str	r3, [fp, #-204]	; 0xffffff34
    99e8:	e24b30cc 	sub	r3, fp, #204	; 0xcc
    99ec:	e1a01003 	mov	r1, r3
    99f0:	e51b0008 	ldr	r0, [fp, #-8]
    99f4:	eb00044e 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    99f8:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:39
            << SSD1306_Cmd::Display_Off
    99fc:	e3a030ae 	mov	r3, #174	; 0xae
    9a00:	e50b30c8 	str	r3, [fp, #-200]	; 0xffffff38
    9a04:	e24b30c8 	sub	r3, fp, #200	; 0xc8
    9a08:	e1a01003 	mov	r1, r3
    9a0c:	e1a00002 	mov	r0, r2
    9a10:	eb000447 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9a14:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:40
            << SSD1306_Cmd::Set_Display_Clock_Div_Ratio
    9a18:	e3a030d5 	mov	r3, #213	; 0xd5
    9a1c:	e50b30c4 	str	r3, [fp, #-196]	; 0xffffff3c
    9a20:	e24b30c4 	sub	r3, fp, #196	; 0xc4
    9a24:	e1a01003 	mov	r1, r3
    9a28:	e1a00002 	mov	r0, r2
    9a2c:	eb000440 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9a30:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:41
            << 0x80
    9a34:	e3a03080 	mov	r3, #128	; 0x80
    9a38:	e50b30c0 	str	r3, [fp, #-192]	; 0xffffff40
    9a3c:	e24b30c0 	sub	r3, fp, #192	; 0xc0
    9a40:	e1a01003 	mov	r1, r3
    9a44:	e1a00002 	mov	r0, r2
    9a48:	eb000455 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9a4c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:42
            << SSD1306_Cmd::Set_Multiplex_Ratio;
    9a50:	e3a030a8 	mov	r3, #168	; 0xa8
    9a54:	e50b30bc 	str	r3, [fp, #-188]	; 0xffffff44
    9a58:	e24b30bc 	sub	r3, fp, #188	; 0xbc
    9a5c:	e1a01003 	mov	r1, r3
    9a60:	e1a00002 	mov	r0, r2
    9a64:	eb000432 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:44

        mI2C.End_Transaction(ta);
    9a68:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9a6c:	e5933000 	ldr	r3, [r3]
    9a70:	e3a02001 	mov	r2, #1
    9a74:	e51b1008 	ldr	r1, [fp, #-8]
    9a78:	e1a00003 	mov	r0, r3
    9a7c:	ebfffd20 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:49
    }

    // pokracovani predchoziho - multiplex ratio
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9a80:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9a84:	e5933000 	ldr	r3, [r3]
    9a88:	e3a0103c 	mov	r1, #60	; 0x3c
    9a8c:	e1a00003 	mov	r0, r3
    9a90:	ebfffcfd 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9a94:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:51

        ta << SSD1306_Cmd::Command_Start
    9a98:	e3a03000 	mov	r3, #0
    9a9c:	e50b30b8 	str	r3, [fp, #-184]	; 0xffffff48
    9aa0:	e24b30b8 	sub	r3, fp, #184	; 0xb8
    9aa4:	e1a01003 	mov	r1, r3
    9aa8:	e51b000c 	ldr	r0, [fp, #-12]
    9aac:	eb000420 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9ab0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:52
            << height - 1;
    9ab4:	e51b30d8 	ldr	r3, [fp, #-216]	; 0xffffff28
    9ab8:	e2433001 	sub	r3, r3, #1
    9abc:	e50b30b4 	str	r3, [fp, #-180]	; 0xffffff4c
    9ac0:	e24b30b4 	sub	r3, fp, #180	; 0xb4
    9ac4:	e1a01003 	mov	r1, r3
    9ac8:	e1a00002 	mov	r0, r2
    9acc:	eb000434 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:54

        mI2C.End_Transaction(ta);
    9ad0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ad4:	e5933000 	ldr	r3, [r3]
    9ad8:	e3a02001 	mov	r2, #1
    9adc:	e51b100c 	ldr	r1, [fp, #-12]
    9ae0:	e1a00003 	mov	r0, r3
    9ae4:	ebfffd06 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:59
    }

    // nastavime display offset (pametovy offset a jeho matching na realnou matici), pocatecni radek a vlastnosti vnitrniho menice (nabojova pumúa)
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ae8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9aec:	e5933000 	ldr	r3, [r3]
    9af0:	e3a0103c 	mov	r1, #60	; 0x3c
    9af4:	e1a00003 	mov	r0, r3
    9af8:	ebfffce3 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9afc:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:61

        ta << SSD1306_Cmd::Command_Start
    9b00:	e3a03000 	mov	r3, #0
    9b04:	e50b30b0 	str	r3, [fp, #-176]	; 0xffffff50
    9b08:	e24b30b0 	sub	r3, fp, #176	; 0xb0
    9b0c:	e1a01003 	mov	r1, r3
    9b10:	e51b0010 	ldr	r0, [fp, #-16]
    9b14:	eb000406 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9b18:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:62
            << SSD1306_Cmd::Set_Display_Offset
    9b1c:	e3a030d3 	mov	r3, #211	; 0xd3
    9b20:	e50b30ac 	str	r3, [fp, #-172]	; 0xffffff54
    9b24:	e24b30ac 	sub	r3, fp, #172	; 0xac
    9b28:	e1a01003 	mov	r1, r3
    9b2c:	e1a00002 	mov	r0, r2
    9b30:	eb0003ff 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9b34:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:63
            << 0x00
    9b38:	e3a03000 	mov	r3, #0
    9b3c:	e50b30a8 	str	r3, [fp, #-168]	; 0xffffff58
    9b40:	e24b30a8 	sub	r3, fp, #168	; 0xa8
    9b44:	e1a01003 	mov	r1, r3
    9b48:	e1a00002 	mov	r0, r2
    9b4c:	eb000414 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9b50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:64
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Start_Line) | 0x00) // zacatek na radce 0
    9b54:	e3a03040 	mov	r3, #64	; 0x40
    9b58:	e50b30a4 	str	r3, [fp, #-164]	; 0xffffff5c
    9b5c:	e24b30a4 	sub	r3, fp, #164	; 0xa4
    9b60:	e1a01003 	mov	r1, r3
    9b64:	e1a00002 	mov	r0, r2
    9b68:	eb00040d 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9b6c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:65
            << SSD1306_Cmd::Charge_Pump;
    9b70:	e3a0308d 	mov	r3, #141	; 0x8d
    9b74:	e50b30a0 	str	r3, [fp, #-160]	; 0xffffff60
    9b78:	e24b30a0 	sub	r3, fp, #160	; 0xa0
    9b7c:	e1a01003 	mov	r1, r3
    9b80:	e1a00002 	mov	r0, r2
    9b84:	eb0003ea 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:67

        mI2C.End_Transaction(ta);
    9b88:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9b8c:	e5933000 	ldr	r3, [r3]
    9b90:	e3a02001 	mov	r2, #1
    9b94:	e51b1010 	ldr	r1, [fp, #-16]
    9b98:	e1a00003 	mov	r0, r3
    9b9c:	ebfffcd8 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:72
    }

    // pokracovani predchoziho - nabojova pumpa, 0x14 je hodnota z datasheetu pro konkretni displej
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ba0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ba4:	e5933000 	ldr	r3, [r3]
    9ba8:	e3a0103c 	mov	r1, #60	; 0x3c
    9bac:	e1a00003 	mov	r0, r3
    9bb0:	ebfffcb5 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9bb4:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:74

        ta << SSD1306_Cmd::Command_Start
    9bb8:	e3a03000 	mov	r3, #0
    9bbc:	e50b309c 	str	r3, [fp, #-156]	; 0xffffff64
    9bc0:	e24b309c 	sub	r3, fp, #156	; 0x9c
    9bc4:	e1a01003 	mov	r1, r3
    9bc8:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    9bcc:	eb0003d8 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9bd0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:75
            << 0x14;
    9bd4:	e3a03014 	mov	r3, #20
    9bd8:	e50b3098 	str	r3, [fp, #-152]	; 0xffffff68
    9bdc:	e24b3098 	sub	r3, fp, #152	; 0x98
    9be0:	e1a01003 	mov	r1, r3
    9be4:	e1a00002 	mov	r0, r2
    9be8:	eb0003ed 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:77

        mI2C.End_Transaction(ta);
    9bec:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9bf0:	e5933000 	ldr	r3, [r3]
    9bf4:	e3a02001 	mov	r2, #1
    9bf8:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    9bfc:	e1a00003 	mov	r0, r3
    9c00:	ebfffcbf 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:83
    }

    // nastavime mod adresace (0x00 - po sloupcich a po strankach) a segment remapping (to, jak je displej "obraceny")
    // "smer" skenovani vystupu ridiciho obvodu
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9c04:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9c08:	e5933000 	ldr	r3, [r3]
    9c0c:	e3a0103c 	mov	r1, #60	; 0x3c
    9c10:	e1a00003 	mov	r0, r3
    9c14:	ebfffc9c 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9c18:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:85

        ta << SSD1306_Cmd::Command_Start
    9c1c:	e3a03000 	mov	r3, #0
    9c20:	e50b3094 	str	r3, [fp, #-148]	; 0xffffff6c
    9c24:	e24b3094 	sub	r3, fp, #148	; 0x94
    9c28:	e1a01003 	mov	r1, r3
    9c2c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    9c30:	eb0003bf 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9c34:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:86
            << SSD1306_Cmd::Memory_Addr_Mode
    9c38:	e3a03020 	mov	r3, #32
    9c3c:	e50b3090 	str	r3, [fp, #-144]	; 0xffffff70
    9c40:	e24b3090 	sub	r3, fp, #144	; 0x90
    9c44:	e1a01003 	mov	r1, r3
    9c48:	e1a00002 	mov	r0, r2
    9c4c:	eb0003b8 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9c50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:87
            << 0x00
    9c54:	e3a03000 	mov	r3, #0
    9c58:	e50b308c 	str	r3, [fp, #-140]	; 0xffffff74
    9c5c:	e24b308c 	sub	r3, fp, #140	; 0x8c
    9c60:	e1a01003 	mov	r1, r3
    9c64:	e1a00002 	mov	r0, r2
    9c68:	eb0003cd 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9c6c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:88
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Segment_Remap) | 0x01)
    9c70:	e3a030a1 	mov	r3, #161	; 0xa1
    9c74:	e50b3088 	str	r3, [fp, #-136]	; 0xffffff78
    9c78:	e24b3088 	sub	r3, fp, #136	; 0x88
    9c7c:	e1a01003 	mov	r1, r3
    9c80:	e1a00002 	mov	r0, r2
    9c84:	eb0003c6 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9c88:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:89
            << SSD1306_Cmd::Com_Scan_Dir_Dec;
    9c8c:	e3a030c8 	mov	r3, #200	; 0xc8
    9c90:	e50b3084 	str	r3, [fp, #-132]	; 0xffffff7c
    9c94:	e24b3084 	sub	r3, fp, #132	; 0x84
    9c98:	e1a01003 	mov	r1, r3
    9c9c:	e1a00002 	mov	r0, r2
    9ca0:	eb0003a3 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:91

        mI2C.End_Transaction(ta);
    9ca4:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ca8:	e5933000 	ldr	r3, [r3]
    9cac:	e3a02001 	mov	r2, #1
    9cb0:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    9cb4:	e1a00003 	mov	r0, r3
    9cb8:	ebfffc91 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:96
    }

    // mapovani na piny ridiciho obvodu
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9cbc:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9cc0:	e5933000 	ldr	r3, [r3]
    9cc4:	e3a0103c 	mov	r1, #60	; 0x3c
    9cc8:	e1a00003 	mov	r0, r3
    9ccc:	ebfffc6e 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9cd0:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:98

        ta << SSD1306_Cmd::Command_Start
    9cd4:	e3a03000 	mov	r3, #0
    9cd8:	e50b3080 	str	r3, [fp, #-128]	; 0xffffff80
    9cdc:	e24b3080 	sub	r3, fp, #128	; 0x80
    9ce0:	e1a01003 	mov	r1, r3
    9ce4:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    9ce8:	eb000391 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9cec:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:99
            << SSD1306_Cmd::Set_Com_Pins;
    9cf0:	e3a030da 	mov	r3, #218	; 0xda
    9cf4:	e50b307c 	str	r3, [fp, #-124]	; 0xffffff84
    9cf8:	e24b307c 	sub	r3, fp, #124	; 0x7c
    9cfc:	e1a01003 	mov	r1, r3
    9d00:	e1a00002 	mov	r0, r2
    9d04:	eb00038a 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:101

        mI2C.End_Transaction(ta);
    9d08:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d0c:	e5933000 	ldr	r3, [r3]
    9d10:	e3a02001 	mov	r2, #1
    9d14:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    9d18:	e1a00003 	mov	r0, r3
    9d1c:	ebfffc78 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:106
    }

    // pokracovani predchoziho - neinvertovany a sekvencni pristup
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d20:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d24:	e5933000 	ldr	r3, [r3]
    9d28:	e3a0103c 	mov	r1, #60	; 0x3c
    9d2c:	e1a00003 	mov	r0, r3
    9d30:	ebfffc55 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9d34:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:108

        ta << SSD1306_Cmd::Command_Start
    9d38:	e3a03000 	mov	r3, #0
    9d3c:	e50b3078 	str	r3, [fp, #-120]	; 0xffffff88
    9d40:	e24b3078 	sub	r3, fp, #120	; 0x78
    9d44:	e1a01003 	mov	r1, r3
    9d48:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d4c:	eb000378 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9d50:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:109
            << 0x02;
    9d54:	e3a03002 	mov	r3, #2
    9d58:	e50b3074 	str	r3, [fp, #-116]	; 0xffffff8c
    9d5c:	e24b3074 	sub	r3, fp, #116	; 0x74
    9d60:	e1a01003 	mov	r1, r3
    9d64:	e1a00002 	mov	r0, r2
    9d68:	eb00038d 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:111

        mI2C.End_Transaction(ta);
    9d6c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d70:	e5933000 	ldr	r3, [r3]
    9d74:	e3a02001 	mov	r2, #1
    9d78:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    9d7c:	e1a00003 	mov	r0, r3
    9d80:	ebfffc5f 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:116
    }

    // nastaveni kontrastu displeje
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d84:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9d88:	e5933000 	ldr	r3, [r3]
    9d8c:	e3a0103c 	mov	r1, #60	; 0x3c
    9d90:	e1a00003 	mov	r0, r3
    9d94:	ebfffc3c 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9d98:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:118

        ta << SSD1306_Cmd::Command_Start
    9d9c:	e3a03000 	mov	r3, #0
    9da0:	e50b3070 	str	r3, [fp, #-112]	; 0xffffff90
    9da4:	e24b3070 	sub	r3, fp, #112	; 0x70
    9da8:	e1a01003 	mov	r1, r3
    9dac:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
    9db0:	eb00035f 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9db4:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:119
            << SSD1306_Cmd::Set_Contrast;
    9db8:	e3a03081 	mov	r3, #129	; 0x81
    9dbc:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
    9dc0:	e24b306c 	sub	r3, fp, #108	; 0x6c
    9dc4:	e1a01003 	mov	r1, r3
    9dc8:	e1a00002 	mov	r0, r2
    9dcc:	eb000358 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:121

        mI2C.End_Transaction(ta);
    9dd0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9dd4:	e5933000 	ldr	r3, [r3]
    9dd8:	e3a02001 	mov	r2, #1
    9ddc:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
    9de0:	e1a00003 	mov	r0, r3
    9de4:	ebfffc46 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:126
    }

    // pokracovani predchoziho - kontrast nastaven na 0x8F
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9de8:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9dec:	e5933000 	ldr	r3, [r3]
    9df0:	e3a0103c 	mov	r1, #60	; 0x3c
    9df4:	e1a00003 	mov	r0, r3
    9df8:	ebfffc23 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9dfc:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:128

        ta << SSD1306_Cmd::Command_Start
    9e00:	e3a03000 	mov	r3, #0
    9e04:	e50b3068 	str	r3, [fp, #-104]	; 0xffffff98
    9e08:	e24b3068 	sub	r3, fp, #104	; 0x68
    9e0c:	e1a01003 	mov	r1, r3
    9e10:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
    9e14:	eb000346 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9e18:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:129
            << 0x8F;
    9e1c:	e3a0308f 	mov	r3, #143	; 0x8f
    9e20:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
    9e24:	e24b3064 	sub	r3, fp, #100	; 0x64
    9e28:	e1a01003 	mov	r1, r3
    9e2c:	e1a00002 	mov	r0, r2
    9e30:	eb00035b 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:131

        mI2C.End_Transaction(ta);
    9e34:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e38:	e5933000 	ldr	r3, [r3]
    9e3c:	e3a02001 	mov	r2, #1
    9e40:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
    9e44:	e1a00003 	mov	r0, r3
    9e48:	ebfffc2d 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:136
    }

    // perioda prednabiti
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9e4c:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e50:	e5933000 	ldr	r3, [r3]
    9e54:	e3a0103c 	mov	r1, #60	; 0x3c
    9e58:	e1a00003 	mov	r0, r3
    9e5c:	ebfffc0a 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9e60:	e50b002c 	str	r0, [fp, #-44]	; 0xffffffd4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:138

        ta << SSD1306_Cmd::Command_Start
    9e64:	e3a03000 	mov	r3, #0
    9e68:	e50b3060 	str	r3, [fp, #-96]	; 0xffffffa0
    9e6c:	e24b3060 	sub	r3, fp, #96	; 0x60
    9e70:	e1a01003 	mov	r1, r3
    9e74:	e51b002c 	ldr	r0, [fp, #-44]	; 0xffffffd4
    9e78:	eb00032d 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9e7c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:139
            << SSD1306_Cmd::Set_Precharge_Period;
    9e80:	e3a030d9 	mov	r3, #217	; 0xd9
    9e84:	e50b305c 	str	r3, [fp, #-92]	; 0xffffffa4
    9e88:	e24b305c 	sub	r3, fp, #92	; 0x5c
    9e8c:	e1a01003 	mov	r1, r3
    9e90:	e1a00002 	mov	r0, r2
    9e94:	eb000326 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:141

        mI2C.End_Transaction(ta);
    9e98:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9e9c:	e5933000 	ldr	r3, [r3]
    9ea0:	e3a02001 	mov	r2, #1
    9ea4:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    9ea8:	e1a00003 	mov	r0, r3
    9eac:	ebfffc14 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:146
    }

    // pokracovani predchoziho - pro externi napajeni muze byt tato hodnota kratsi
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9eb0:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9eb4:	e5933000 	ldr	r3, [r3]
    9eb8:	e3a0103c 	mov	r1, #60	; 0x3c
    9ebc:	e1a00003 	mov	r0, r3
    9ec0:	ebfffbf1 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9ec4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:148

        ta << SSD1306_Cmd::Command_Start
    9ec8:	e3a03000 	mov	r3, #0
    9ecc:	e50b3058 	str	r3, [fp, #-88]	; 0xffffffa8
    9ed0:	e24b3058 	sub	r3, fp, #88	; 0x58
    9ed4:	e1a01003 	mov	r1, r3
    9ed8:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    9edc:	eb000314 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9ee0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:149
            << 0xF1;
    9ee4:	e3a030f1 	mov	r3, #241	; 0xf1
    9ee8:	e50b3054 	str	r3, [fp, #-84]	; 0xffffffac
    9eec:	e24b3054 	sub	r3, fp, #84	; 0x54
    9ef0:	e1a01003 	mov	r1, r3
    9ef4:	e1a00002 	mov	r0, r2
    9ef8:	eb000329 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:151

        mI2C.End_Transaction(ta);
    9efc:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9f00:	e5933000 	ldr	r3, [r3]
    9f04:	e3a02001 	mov	r2, #1
    9f08:	e51b1030 	ldr	r1, [fp, #-48]	; 0xffffffd0
    9f0c:	e1a00003 	mov	r0, r3
    9f10:	ebfffbfb 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:156
    }

    // finalni aktivace displeje - uroven detekce vstupu, nahozeni panelu, neinvertovane barvy, neskrolujeme, zapneme podsviceni
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9f14:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9f18:	e5933000 	ldr	r3, [r3]
    9f1c:	e3a0103c 	mov	r1, #60	; 0x3c
    9f20:	e1a00003 	mov	r0, r3
    9f24:	ebfffbd8 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    9f28:	e50b0034 	str	r0, [fp, #-52]	; 0xffffffcc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:158

        ta << SSD1306_Cmd::Command_Start
    9f2c:	e3a03000 	mov	r3, #0
    9f30:	e50b3050 	str	r3, [fp, #-80]	; 0xffffffb0
    9f34:	e24b3050 	sub	r3, fp, #80	; 0x50
    9f38:	e1a01003 	mov	r1, r3
    9f3c:	e51b0034 	ldr	r0, [fp, #-52]	; 0xffffffcc
    9f40:	eb0002fb 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f44:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:159
            << SSD1306_Cmd::Set_VCOM_Detect
    9f48:	e3a030d8 	mov	r3, #216	; 0xd8
    9f4c:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
    9f50:	e24b304c 	sub	r3, fp, #76	; 0x4c
    9f54:	e1a01003 	mov	r1, r3
    9f58:	e1a00002 	mov	r0, r2
    9f5c:	eb0002f4 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f60:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:160
            << 0x40
    9f64:	e3a03040 	mov	r3, #64	; 0x40
    9f68:	e50b3048 	str	r3, [fp, #-72]	; 0xffffffb8
    9f6c:	e24b3048 	sub	r3, fp, #72	; 0x48
    9f70:	e1a01003 	mov	r1, r3
    9f74:	e1a00002 	mov	r0, r2
    9f78:	eb000309 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    9f7c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:161
            << SSD1306_Cmd::Display_All_On_Resume
    9f80:	e3a030a4 	mov	r3, #164	; 0xa4
    9f84:	e50b3044 	str	r3, [fp, #-68]	; 0xffffffbc
    9f88:	e24b3044 	sub	r3, fp, #68	; 0x44
    9f8c:	e1a01003 	mov	r1, r3
    9f90:	e1a00002 	mov	r0, r2
    9f94:	eb0002e6 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9f98:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:162
            << SSD1306_Cmd::Normal_Display
    9f9c:	e3a030a6 	mov	r3, #166	; 0xa6
    9fa0:	e50b3040 	str	r3, [fp, #-64]	; 0xffffffc0
    9fa4:	e24b3040 	sub	r3, fp, #64	; 0x40
    9fa8:	e1a01003 	mov	r1, r3
    9fac:	e1a00002 	mov	r0, r2
    9fb0:	eb0002df 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9fb4:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:163
            << SSD1306_Cmd::Deactivate_Scroll
    9fb8:	e3a0302e 	mov	r3, #46	; 0x2e
    9fbc:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    9fc0:	e24b303c 	sub	r3, fp, #60	; 0x3c
    9fc4:	e1a01003 	mov	r1, r3
    9fc8:	e1a00002 	mov	r0, r2
    9fcc:	eb0002d8 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    9fd0:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:164
            << SSD1306_Cmd::Display_On;
    9fd4:	e3a030af 	mov	r3, #175	; 0xaf
    9fd8:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    9fdc:	e24b3038 	sub	r3, fp, #56	; 0x38
    9fe0:	e1a01003 	mov	r1, r3
    9fe4:	e1a00002 	mov	r0, r2
    9fe8:	eb0002d1 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:166

        mI2C.End_Transaction(ta);
    9fec:	e51b30d0 	ldr	r3, [fp, #-208]	; 0xffffff30
    9ff0:	e5933000 	ldr	r3, [r3]
    9ff4:	e3a02001 	mov	r2, #1
    9ff8:	e51b1034 	ldr	r1, [fp, #-52]	; 0xffffffcc
    9ffc:	e1a00003 	mov	r0, r3
    a000:	ebfffbbf 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:169
    }

    Clear();
    a004:	e3a01000 	mov	r1, #0
    a008:	e51b00d0 	ldr	r0, [fp, #-208]	; 0xffffff30
    a00c:	eb000067 	bl	a1b0 <_ZN16CDisplay_SSD13065ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:171

    return true;
    a010:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:172
}
    a014:	e1a00003 	mov	r0, r3
    a018:	e24bd004 	sub	sp, fp, #4
    a01c:	e8bd8800 	pop	{fp, pc}

0000a020 <_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh>:
_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:175

void CDisplay_SSD1306::Send_Command(SSD1306_Cmd cmd, uint8_t lowPart)
{
    a020:	e92d4800 	push	{fp, lr}
    a024:	e28db004 	add	fp, sp, #4
    a028:	e24dd020 	sub	sp, sp, #32
    a02c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    a030:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    a034:	e1a03002 	mov	r3, r2
    a038:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:176
    auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a03c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a040:	e5933000 	ldr	r3, [r3]
    a044:	e3a0103c 	mov	r1, #60	; 0x3c
    a048:	e1a00003 	mov	r0, r3
    a04c:	ebfffb8e 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a050:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:178

    ta << SSD1306_Cmd::Command_Start
    a054:	e3a03000 	mov	r3, #0
    a058:	e50b3010 	str	r3, [fp, #-16]
    a05c:	e24b3010 	sub	r3, fp, #16
    a060:	e1a01003 	mov	r1, r3
    a064:	e51b0008 	ldr	r0, [fp, #-8]
    a068:	eb0002b1 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:179
       << (static_cast<uint8_t>(cmd) | lowPart);
    a06c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    a070:	e6ef2073 	uxtb	r2, r3
    a074:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
    a078:	e1823003 	orr	r3, r2, r3
    a07c:	e6ef3073 	uxtb	r3, r3
    a080:	e50b300c 	str	r3, [fp, #-12]
    a084:	e24b300c 	sub	r3, fp, #12
    a088:	e1a01003 	mov	r1, r3
    a08c:	eb0002c4 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:181

    mI2C.End_Transaction(ta);
    a090:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a094:	e5933000 	ldr	r3, [r3]
    a098:	e3a02001 	mov	r2, #1
    a09c:	e51b1008 	ldr	r1, [fp, #-8]
    a0a0:	e1a00003 	mov	r0, r3
    a0a4:	ebfffb96 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:182
}
    a0a8:	e320f000 	nop	{0}
    a0ac:	e24bd004 	sub	sp, fp, #4
    a0b0:	e8bd8800 	pop	{fp, pc}

0000a0b4 <_ZN16CDisplay_SSD13065CloseEv>:
_ZN16CDisplay_SSD13065CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:185

void CDisplay_SSD1306::Close()
{
    a0b4:	e92d4800 	push	{fp, lr}
    a0b8:	e28db004 	add	fp, sp, #4
    a0bc:	e24dd018 	sub	sp, sp, #24
    a0c0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:186
    if (!mOpened)
    a0c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0c8:	e5d33004 	ldrb	r3, [r3, #4]
    a0cc:	e2233001 	eor	r3, r3, #1
    a0d0:	e6ef3073 	uxtb	r3, r3
    a0d4:	e3530000 	cmp	r3, #0
    a0d8:	1a000027 	bne	a17c <_ZN16CDisplay_SSD13065CloseEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:191
        return;

    // posleme prikaz z vypnuti displeje
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a0dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0e0:	e5933000 	ldr	r3, [r3]
    a0e4:	e3a0103c 	mov	r1, #60	; 0x3c
    a0e8:	e1a00003 	mov	r0, r3
    a0ec:	ebfffb66 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a0f0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:193

        ta << SSD1306_Cmd::Command_Start
    a0f4:	e3a03000 	mov	r3, #0
    a0f8:	e50b3010 	str	r3, [fp, #-16]
    a0fc:	e24b3010 	sub	r3, fp, #16
    a100:	e1a01003 	mov	r1, r3
    a104:	e51b0008 	ldr	r0, [fp, #-8]
    a108:	eb000289 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a10c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:194
            << SSD1306_Cmd::Display_Off;
    a110:	e3a030ae 	mov	r3, #174	; 0xae
    a114:	e50b300c 	str	r3, [fp, #-12]
    a118:	e24b300c 	sub	r3, fp, #12
    a11c:	e1a01003 	mov	r1, r3
    a120:	e1a00002 	mov	r0, r2
    a124:	eb000282 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:196

        mI2C.End_Transaction(ta);
    a128:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a12c:	e5933000 	ldr	r3, [r3]
    a130:	e3a02001 	mov	r2, #1
    a134:	e51b1008 	ldr	r1, [fp, #-8]
    a138:	e1a00003 	mov	r0, r3
    a13c:	ebfffb70 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199
    }

    mI2C.Close();
    a140:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a144:	e5933000 	ldr	r3, [r3]
    a148:	e1a00003 	mov	r0, r3
    a14c:	ebfffaa5 	bl	8be8 <_ZN4CI2C5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201

    delete mBuffer;
    a150:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a154:	e5933008 	ldr	r3, [r3, #8]
    a158:	e3530000 	cmp	r3, #0
    a15c:	0a000002 	beq	a16c <_ZN16CDisplay_SSD13065CloseEv+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201 (discriminator 1)
    a160:	e3a01001 	mov	r1, #1
    a164:	e1a00003 	mov	r0, r3
    a168:	eb000265 	bl	ab04 <_ZdlPvj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203

    mOpened = false;
    a16c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a170:	e3a02000 	mov	r2, #0
    a174:	e5c32004 	strb	r2, [r3, #4]
    a178:	ea000000 	b	a180 <_ZN16CDisplay_SSD13065CloseEv+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:187
        return;
    a17c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:204
}
    a180:	e24bd004 	sub	sp, fp, #4
    a184:	e8bd8800 	pop	{fp, pc}

0000a188 <_ZNK16CDisplay_SSD13069Is_OpenedEv>:
_ZNK16CDisplay_SSD13069Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:207

bool CDisplay_SSD1306::Is_Opened() const
{
    a188:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    a18c:	e28db000 	add	fp, sp, #0
    a190:	e24dd00c 	sub	sp, sp, #12
    a194:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:208
    return mOpened;
    a198:	e51b3008 	ldr	r3, [fp, #-8]
    a19c:	e5d33004 	ldrb	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:209
}
    a1a0:	e1a00003 	mov	r0, r3
    a1a4:	e28bd000 	add	sp, fp, #0
    a1a8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    a1ac:	e12fff1e 	bx	lr

0000a1b0 <_ZN16CDisplay_SSD13065ClearEb>:
_ZN16CDisplay_SSD13065ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:212

void CDisplay_SSD1306::Clear(bool clearWhite)
{
    a1b0:	e92d4800 	push	{fp, lr}
    a1b4:	e28db004 	add	fp, sp, #4
    a1b8:	e24dd018 	sub	sp, sp, #24
    a1bc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    a1c0:	e1a03001 	mov	r3, r1
    a1c4:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:213
    if (!mOpened)
    a1c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a1cc:	e5d33004 	ldrb	r3, [r3, #4]
    a1d0:	e2233001 	eor	r3, r3, #1
    a1d4:	e6ef3073 	uxtb	r3, r3
    a1d8:	e3530000 	cmp	r3, #0
    a1dc:	1a000024 	bne	a274 <_ZN16CDisplay_SSD13065ClearEb+0xc4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216
        return;

    const uint8_t clearColor = clearWhite ? 0xFF : 0x00;
    a1e0:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
    a1e4:	e3530000 	cmp	r3, #0
    a1e8:	0a000001 	beq	a1f4 <_ZN16CDisplay_SSD13065ClearEb+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 1)
    a1ec:	e3a030ff 	mov	r3, #255	; 0xff
    a1f0:	ea000000 	b	a1f8 <_ZN16CDisplay_SSD13065ClearEb+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 2)
    a1f4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 4)
    a1f8:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:218 (discriminator 4)

    const int maxIdx = mWidth * (mHeight / 8);
    a1fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a200:	e593200c 	ldr	r2, [r3, #12]
    a204:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a208:	e5933010 	ldr	r3, [r3, #16]
    a20c:	e2831007 	add	r1, r3, #7
    a210:	e3530000 	cmp	r3, #0
    a214:	b1a03001 	movlt	r3, r1
    a218:	a1a03003 	movge	r3, r3
    a21c:	e1a031c3 	asr	r3, r3, #3
    a220:	e0030293 	mul	r3, r3, r2
    a224:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 4)

    for (int i = 0; i < maxIdx; i++)
    a228:	e3a03000 	mov	r3, #0
    a22c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 3)
    a230:	e51b2008 	ldr	r2, [fp, #-8]
    a234:	e51b3010 	ldr	r3, [fp, #-16]
    a238:	e1520003 	cmp	r2, r3
    a23c:	aa000009 	bge	a268 <_ZN16CDisplay_SSD13065ClearEb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:221 (discriminator 2)
        mBuffer[i] = clearColor;
    a240:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a244:	e5932008 	ldr	r2, [r3, #8]
    a248:	e51b3008 	ldr	r3, [fp, #-8]
    a24c:	e0823003 	add	r3, r2, r3
    a250:	e55b2009 	ldrb	r2, [fp, #-9]
    a254:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 2)
    for (int i = 0; i < maxIdx; i++)
    a258:	e51b3008 	ldr	r3, [fp, #-8]
    a25c:	e2833001 	add	r3, r3, #1
    a260:	e50b3008 	str	r3, [fp, #-8]
    a264:	eafffff1 	b	a230 <_ZN16CDisplay_SSD13065ClearEb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:223

    Flip();
    a268:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    a26c:	eb000055 	bl	a3c8 <_ZN16CDisplay_SSD13064FlipEv>
    a270:	ea000000 	b	a278 <_ZN16CDisplay_SSD13065ClearEb+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:214
        return;
    a274:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:224
}
    a278:	e24bd004 	sub	sp, fp, #4
    a27c:	e8bd8800 	pop	{fp, pc}

0000a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>:
_ZN16CDisplay_SSD13069Set_PixelEjjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:227

void CDisplay_SSD1306::Set_Pixel(uint32_t x, uint32_t y, bool set)
{
    a280:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    a284:	e28db000 	add	fp, sp, #0
    a288:	e24dd014 	sub	sp, sp, #20
    a28c:	e50b0008 	str	r0, [fp, #-8]
    a290:	e50b100c 	str	r1, [fp, #-12]
    a294:	e50b2010 	str	r2, [fp, #-16]
    a298:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:228
    if (!mOpened)
    a29c:	e51b3008 	ldr	r3, [fp, #-8]
    a2a0:	e5d33004 	ldrb	r3, [r3, #4]
    a2a4:	e2233001 	eor	r3, r3, #1
    a2a8:	e6ef3073 	uxtb	r3, r3
    a2ac:	e3530000 	cmp	r3, #0
    a2b0:	1a000040 	bne	a3b8 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:231
        return;

    if (set)
    a2b4:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    a2b8:	e3530000 	cmp	r3, #0
    a2bc:	0a00001d 	beq	a338 <_ZN16CDisplay_SSD13069Set_PixelEjjb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:232
        mBuffer[x + (y / 8) * mWidth] |= (1 << (y & 7));
    a2c0:	e51b3008 	ldr	r3, [fp, #-8]
    a2c4:	e5931008 	ldr	r1, [r3, #8]
    a2c8:	e51b3010 	ldr	r3, [fp, #-16]
    a2cc:	e1a031a3 	lsr	r3, r3, #3
    a2d0:	e51b2008 	ldr	r2, [fp, #-8]
    a2d4:	e592200c 	ldr	r2, [r2, #12]
    a2d8:	e0000392 	mul	r0, r2, r3
    a2dc:	e51b200c 	ldr	r2, [fp, #-12]
    a2e0:	e0802002 	add	r2, r0, r2
    a2e4:	e0812002 	add	r2, r1, r2
    a2e8:	e5d22000 	ldrb	r2, [r2]
    a2ec:	e6af1072 	sxtb	r1, r2
    a2f0:	e51b2010 	ldr	r2, [fp, #-16]
    a2f4:	e2022007 	and	r2, r2, #7
    a2f8:	e3a00001 	mov	r0, #1
    a2fc:	e1a02210 	lsl	r2, r0, r2
    a300:	e6af2072 	sxtb	r2, r2
    a304:	e1812002 	orr	r2, r1, r2
    a308:	e6af0072 	sxtb	r0, r2
    a30c:	e51b2008 	ldr	r2, [fp, #-8]
    a310:	e5922008 	ldr	r2, [r2, #8]
    a314:	e51b1008 	ldr	r1, [fp, #-8]
    a318:	e591100c 	ldr	r1, [r1, #12]
    a31c:	e0010391 	mul	r1, r1, r3
    a320:	e51b300c 	ldr	r3, [fp, #-12]
    a324:	e0813003 	add	r3, r1, r3
    a328:	e0823003 	add	r3, r2, r3
    a32c:	e6ef2070 	uxtb	r2, r0
    a330:	e5c32000 	strb	r2, [r3]
    a334:	ea000020 	b	a3bc <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:234
    else
        mBuffer[x + (y / 8) * mWidth] &= ~(1 << (y & 7));
    a338:	e51b3008 	ldr	r3, [fp, #-8]
    a33c:	e5931008 	ldr	r1, [r3, #8]
    a340:	e51b3010 	ldr	r3, [fp, #-16]
    a344:	e1a031a3 	lsr	r3, r3, #3
    a348:	e51b2008 	ldr	r2, [fp, #-8]
    a34c:	e592200c 	ldr	r2, [r2, #12]
    a350:	e0000392 	mul	r0, r2, r3
    a354:	e51b200c 	ldr	r2, [fp, #-12]
    a358:	e0802002 	add	r2, r0, r2
    a35c:	e0812002 	add	r2, r1, r2
    a360:	e5d22000 	ldrb	r2, [r2]
    a364:	e6af1072 	sxtb	r1, r2
    a368:	e51b2010 	ldr	r2, [fp, #-16]
    a36c:	e2022007 	and	r2, r2, #7
    a370:	e3a00001 	mov	r0, #1
    a374:	e1a02210 	lsl	r2, r0, r2
    a378:	e6af2072 	sxtb	r2, r2
    a37c:	e1e02002 	mvn	r2, r2
    a380:	e6af2072 	sxtb	r2, r2
    a384:	e0022001 	and	r2, r2, r1
    a388:	e6af0072 	sxtb	r0, r2
    a38c:	e51b2008 	ldr	r2, [fp, #-8]
    a390:	e5922008 	ldr	r2, [r2, #8]
    a394:	e51b1008 	ldr	r1, [fp, #-8]
    a398:	e591100c 	ldr	r1, [r1, #12]
    a39c:	e0010391 	mul	r1, r1, r3
    a3a0:	e51b300c 	ldr	r3, [fp, #-12]
    a3a4:	e0813003 	add	r3, r1, r3
    a3a8:	e0823003 	add	r3, r2, r3
    a3ac:	e6ef2070 	uxtb	r2, r0
    a3b0:	e5c32000 	strb	r2, [r3]
    a3b4:	ea000000 	b	a3bc <_ZN16CDisplay_SSD13069Set_PixelEjjb+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:229
        return;
    a3b8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:235
}
    a3bc:	e28bd000 	add	sp, fp, #0
    a3c0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    a3c4:	e12fff1e 	bx	lr

0000a3c8 <_ZN16CDisplay_SSD13064FlipEv>:
_ZN16CDisplay_SSD13064FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:238

void CDisplay_SSD1306::Flip()
{
    a3c8:	e92d4800 	push	{fp, lr}
    a3cc:	e28db004 	add	fp, sp, #4
    a3d0:	e24dd040 	sub	sp, sp, #64	; 0x40
    a3d4:	e50b0040 	str	r0, [fp, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:239
    if (!mOpened)
    a3d8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a3dc:	e5d33004 	ldrb	r3, [r3, #4]
    a3e0:	e2233001 	eor	r3, r3, #1
    a3e4:	e6ef3073 	uxtb	r3, r3
    a3e8:	e3530000 	cmp	r3, #0
    a3ec:	1a000078 	bne	a5d4 <_ZN16CDisplay_SSD13064FlipEv+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:246

    int i;

    // nastavime kurzor na levy horni roh
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a3f0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a3f4:	e5933000 	ldr	r3, [r3]
    a3f8:	e3a0103c 	mov	r1, #60	; 0x3c
    a3fc:	e1a00003 	mov	r0, r3
    a400:	ebfffaa1 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a404:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:248

        ta << SSD1306_Cmd::Command_Start
    a408:	e3a03000 	mov	r3, #0
    a40c:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    a410:	e24b303c 	sub	r3, fp, #60	; 0x3c
    a414:	e1a01003 	mov	r1, r3
    a418:	e51b0010 	ldr	r0, [fp, #-16]
    a41c:	eb0001c4 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a420:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:249
            << SSD1306_Cmd::Set_Page_Addr
    a424:	e3a03022 	mov	r3, #34	; 0x22
    a428:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    a42c:	e24b3038 	sub	r3, fp, #56	; 0x38
    a430:	e1a01003 	mov	r1, r3
    a434:	e1a00002 	mov	r0, r2
    a438:	eb0001bd 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a43c:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:250
            << 0x00
    a440:	e3a03000 	mov	r3, #0
    a444:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    a448:	e24b3034 	sub	r3, fp, #52	; 0x34
    a44c:	e1a01003 	mov	r1, r3
    a450:	e1a00002 	mov	r0, r2
    a454:	eb0001d2 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a458:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:251
            << 0xFF
    a45c:	e3a030ff 	mov	r3, #255	; 0xff
    a460:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
    a464:	e24b3030 	sub	r3, fp, #48	; 0x30
    a468:	e1a01003 	mov	r1, r3
    a46c:	e1a00002 	mov	r0, r2
    a470:	eb0001cb 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a474:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:252
            << SSD1306_Cmd::Set_Column_Addr
    a478:	e3a03021 	mov	r3, #33	; 0x21
    a47c:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    a480:	e24b302c 	sub	r3, fp, #44	; 0x2c
    a484:	e1a01003 	mov	r1, r3
    a488:	e1a00002 	mov	r0, r2
    a48c:	eb0001a8 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
    a490:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:253
            << 0x00
    a494:	e3a03000 	mov	r3, #0
    a498:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    a49c:	e24b3028 	sub	r3, fp, #40	; 0x28
    a4a0:	e1a01003 	mov	r1, r3
    a4a4:	e1a00002 	mov	r0, r2
    a4a8:	eb0001bd 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
    a4ac:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:254
            << mWidth - 1;
    a4b0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4b4:	e593300c 	ldr	r3, [r3, #12]
    a4b8:	e2433001 	sub	r3, r3, #1
    a4bc:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    a4c0:	e24b3024 	sub	r3, fp, #36	; 0x24
    a4c4:	e1a01003 	mov	r1, r3
    a4c8:	e1a00002 	mov	r0, r2
    a4cc:	eb0001b4 	bl	aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:256

        mI2C.End_Transaction(ta);
    a4d0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4d4:	e5933000 	ldr	r3, [r3]
    a4d8:	e3a02001 	mov	r2, #1
    a4dc:	e51b1010 	ldr	r1, [fp, #-16]
    a4e0:	e1a00003 	mov	r0, r3
    a4e4:	ebfffa86 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:260
    }

    // budeme posilat pixely po balikach 4 sloupcu (po 8 pixelech)
    constexpr int PktSize = 4;
    a4e8:	e3a03004 	mov	r3, #4
    a4ec:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:262

    const int maxIdx = mWidth * (mHeight / 8);
    a4f0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4f4:	e593200c 	ldr	r2, [r3, #12]
    a4f8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a4fc:	e5933010 	ldr	r3, [r3, #16]
    a500:	e2831007 	add	r1, r3, #7
    a504:	e3530000 	cmp	r3, #0
    a508:	b1a03001 	movlt	r3, r1
    a50c:	a1a03003 	movge	r3, r3
    a510:	e1a031c3 	asr	r3, r3, #3
    a514:	e0030293 	mul	r3, r3, r2
    a518:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266
    // sMonitor << "maxIdx = " <<  static_cast<unsigned int>(maxIdx) << '\n';
    // sMonitor << "PktSize = " << static_cast<unsigned int>(PktSize) << '\n';

    for (int i = 0; i < maxIdx; i += PktSize)
    a51c:	e3a03000 	mov	r3, #0
    a520:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266 (discriminator 1)
    a524:	e51b2008 	ldr	r2, [fp, #-8]
    a528:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a52c:	e1520003 	cmp	r2, r3
    a530:	aa000028 	bge	a5d8 <_ZN16CDisplay_SSD13064FlipEv+0x210>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:268
    {
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a534:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a538:	e5933000 	ldr	r3, [r3]
    a53c:	e3a0103c 	mov	r1, #60	; 0x3c
    a540:	e1a00003 	mov	r0, r3
    a544:	ebfffa50 	bl	8e8c <_ZN4CI2C17Begin_TransactionEt>
    a548:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:270

        ta << SSD1306_Cmd::Data_Continue;
    a54c:	e3a03040 	mov	r3, #64	; 0x40
    a550:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    a554:	e24b3020 	sub	r3, fp, #32
    a558:	e1a01003 	mov	r1, r3
    a55c:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    a560:	eb000173 	bl	ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271
        for (int j = 0; j < PktSize; j++)
    a564:	e3a03000 	mov	r3, #0
    a568:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271 (discriminator 3)
    a56c:	e51b300c 	ldr	r3, [fp, #-12]
    a570:	e3530003 	cmp	r3, #3
    a574:	ca00000c 	bgt	a5ac <_ZN16CDisplay_SSD13064FlipEv+0x1e4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:272 (discriminator 2)
            ta << mBuffer[i + j];
    a578:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a57c:	e5933008 	ldr	r3, [r3, #8]
    a580:	e51b1008 	ldr	r1, [fp, #-8]
    a584:	e51b200c 	ldr	r2, [fp, #-12]
    a588:	e0812002 	add	r2, r1, r2
    a58c:	e0833002 	add	r3, r3, r2
    a590:	e1a01003 	mov	r1, r3
    a594:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    a598:	eb00019d 	bl	ac14 <_ZN16CI2C_TransactionlsIhEERS_RKT_>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271 (discriminator 2)
        for (int j = 0; j < PktSize; j++)
    a59c:	e51b300c 	ldr	r3, [fp, #-12]
    a5a0:	e2833001 	add	r3, r3, #1
    a5a4:	e50b300c 	str	r3, [fp, #-12]
    a5a8:	eaffffef 	b	a56c <_ZN16CDisplay_SSD13064FlipEv+0x1a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:274 (discriminator 2)

        mI2C.End_Transaction(ta);
    a5ac:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
    a5b0:	e5933000 	ldr	r3, [r3]
    a5b4:	e3a02001 	mov	r2, #1
    a5b8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    a5bc:	e1a00003 	mov	r0, r3
    a5c0:	ebfffa4f 	bl	8f04 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266 (discriminator 2)
    for (int i = 0; i < maxIdx; i += PktSize)
    a5c4:	e51b3008 	ldr	r3, [fp, #-8]
    a5c8:	e2833004 	add	r3, r3, #4
    a5cc:	e50b3008 	str	r3, [fp, #-8]
    a5d0:	eaffffd3 	b	a524 <_ZN16CDisplay_SSD13064FlipEv+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:240
        return;
    a5d4:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:276
    }
}
    a5d8:	e24bd004 	sub	sp, fp, #4
    a5dc:	e8bd8800 	pop	{fp, pc}

0000a5e0 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj>:
_ZN16CDisplay_SSD130624Process_External_CommandEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:279

void CDisplay_SSD1306::Process_External_Command(const char* input, uint32_t length)
{
    a5e0:	e92d4800 	push	{fp, lr}
    a5e4:	e28db004 	add	fp, sp, #4
    a5e8:	e24dd038 	sub	sp, sp, #56	; 0x38
    a5ec:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
    a5f0:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
    a5f4:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:280
    if (length <= 0)
    a5f8:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    a5fc:	e3530000 	cmp	r3, #0
    a600:	0a000116 	beq	aa60 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x480>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:283
        return;

    NDisplay_Command cmd = static_cast<NDisplay_Command>(input[0]);
    a604:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    a608:	e5d33000 	ldrb	r3, [r3]
    a60c:	e54b300f 	strb	r3, [fp, #-15]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:285

    switch (cmd)
    a610:	e55b300f 	ldrb	r3, [fp, #-15]
    a614:	e3530004 	cmp	r3, #4
    a618:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    a61c:	ea00011a 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
    a620:	0000aa8c 	andeq	sl, r0, ip, lsl #21
    a624:	0000a634 	andeq	sl, r0, r4, lsr r6
    a628:	0000a640 	andeq	sl, r0, r0, asr #12
    a62c:	0000a67c 	andeq	sl, r0, ip, ror r6
    a630:	0000a730 	andeq	sl, r0, r0, lsr r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:291
    {
        case NDisplay_Command::Nop:
            break;

        case NDisplay_Command::Flip:
            Flip();
    a634:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    a638:	ebffff62 	bl	a3c8 <_ZN16CDisplay_SSD13064FlipEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:292
            break;
    a63c:	ea000112 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:296

        case NDisplay_Command::Clear:
        {
            if (length != sizeof(TDisplay_Clear_Packet))
    a640:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    a644:	e3530002 	cmp	r3, #2
    a648:	1a000106 	bne	aa68 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x488>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299
                return;

            const TDisplay_Clear_Packet* pkt = reinterpret_cast<const TDisplay_Clear_Packet*>(input);
    a64c:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    a650:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:301

            Clear((pkt->clearSet != 0));
    a654:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    a658:	e5d33001 	ldrb	r3, [r3, #1]
    a65c:	e3530000 	cmp	r3, #0
    a660:	13a03001 	movne	r3, #1
    a664:	03a03000 	moveq	r3, #0
    a668:	e6ef3073 	uxtb	r3, r3
    a66c:	e1a01003 	mov	r1, r3
    a670:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    a674:	ebfffecd 	bl	a1b0 <_ZN16CDisplay_SSD13065ClearEb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:303

            break;
    a678:	ea000103 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:308
        }

        case NDisplay_Command::Draw_Pixel_Array:
        {
            if (length < sizeof(TDisplay_Draw_Pixel_Array_Packet))
    a67c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    a680:	e3530007 	cmp	r3, #7
    a684:	9a0000f9 	bls	aa70 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x490>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:311
                return;

            const TDisplay_Draw_Pixel_Array_Packet* pkt = reinterpret_cast<const TDisplay_Draw_Pixel_Array_Packet*>(input);
    a688:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    a68c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:313

            const TDisplay_Pixel_Spec* ptr = &pkt->first;
    a690:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    a694:	e2833003 	add	r3, r3, #3
    a698:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315

            for (uint16_t i = 0; i < pkt->count; i++)
    a69c:	e3a03000 	mov	r3, #0
    a6a0:	e14b30b6 	strh	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315 (discriminator 3)
    a6a4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    a6a8:	e5d32001 	ldrb	r2, [r3, #1]
    a6ac:	e5d33002 	ldrb	r3, [r3, #2]
    a6b0:	e1a03403 	lsl	r3, r3, #8
    a6b4:	e1833002 	orr	r3, r3, r2
    a6b8:	e6ff3073 	uxth	r3, r3
    a6bc:	e15b20b6 	ldrh	r2, [fp, #-6]
    a6c0:	e1520003 	cmp	r2, r3
    a6c4:	2a0000eb 	bcs	aa78 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x498>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:316 (discriminator 2)
                Set_Pixel(ptr->x, ptr->y, (ptr->set != 0));
    a6c8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    a6cc:	e5d32000 	ldrb	r2, [r3]
    a6d0:	e5d33001 	ldrb	r3, [r3, #1]
    a6d4:	e1a03403 	lsl	r3, r3, #8
    a6d8:	e1833002 	orr	r3, r3, r2
    a6dc:	e6ff3073 	uxth	r3, r3
    a6e0:	e1a01003 	mov	r1, r3
    a6e4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    a6e8:	e5d32002 	ldrb	r2, [r3, #2]
    a6ec:	e5d33003 	ldrb	r3, [r3, #3]
    a6f0:	e1a03403 	lsl	r3, r3, #8
    a6f4:	e1833002 	orr	r3, r3, r2
    a6f8:	e6ff3073 	uxth	r3, r3
    a6fc:	e1a02003 	mov	r2, r3
    a700:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    a704:	e5d33004 	ldrb	r3, [r3, #4]
    a708:	e3530000 	cmp	r3, #0
    a70c:	13a03001 	movne	r3, #1
    a710:	03a03000 	moveq	r3, #0
    a714:	e6ef3073 	uxtb	r3, r3
    a718:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    a71c:	ebfffed7 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315 (discriminator 2)
            for (uint16_t i = 0; i < pkt->count; i++)
    a720:	e15b30b6 	ldrh	r3, [fp, #-6]
    a724:	e2833001 	add	r3, r3, #1
    a728:	e14b30b6 	strh	r3, [fp, #-6]
    a72c:	eaffffdc 	b	a6a4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0xc4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:323
            break;
        }

        case NDisplay_Command::Draw_Pixel_Array_To_Rect:
        {
            if (length < sizeof(TDisplay_Pixels_To_Rect))
    a730:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    a734:	e353000a 	cmp	r3, #10
    a738:	9a0000d0 	bls	aa80 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:326
                return;

            const TDisplay_Pixels_To_Rect* pkt = reinterpret_cast<const TDisplay_Pixels_To_Rect*>(input);
    a73c:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    a740:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:328

            const uint8_t* data = &pkt->first;
    a744:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a748:	e283300a 	add	r3, r3, #10
    a74c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:330

            if (pkt->vflip == 0)
    a750:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a754:	e5d33009 	ldrb	r3, [r3, #9]
    a758:	e3530000 	cmp	r3, #0
    a75c:	1a000066 	bne	a8fc <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x31c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332
            {
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a760:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a764:	e5d32001 	ldrb	r2, [r3, #1]
    a768:	e5d33002 	ldrb	r3, [r3, #2]
    a76c:	e1a03403 	lsl	r3, r3, #8
    a770:	e1833002 	orr	r3, r3, r2
    a774:	e14b30b8 	strh	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332 (discriminator 1)
    a778:	e15b20b8 	ldrh	r2, [fp, #-8]
    a77c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a780:	e5d31001 	ldrb	r1, [r3, #1]
    a784:	e5d33002 	ldrb	r3, [r3, #2]
    a788:	e1a03403 	lsl	r3, r3, #8
    a78c:	e1833001 	orr	r3, r3, r1
    a790:	e6ff3073 	uxth	r3, r3
    a794:	e1a00003 	mov	r0, r3
    a798:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a79c:	e5d31005 	ldrb	r1, [r3, #5]
    a7a0:	e5d33006 	ldrb	r3, [r3, #6]
    a7a4:	e1a03403 	lsl	r3, r3, #8
    a7a8:	e1833001 	orr	r3, r3, r1
    a7ac:	e6ff3073 	uxth	r3, r3
    a7b0:	e0803003 	add	r3, r0, r3
    a7b4:	e1520003 	cmp	r2, r3
    a7b8:	aa0000b2 	bge	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:334
                {
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a7bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a7c0:	e5d32003 	ldrb	r2, [r3, #3]
    a7c4:	e5d33004 	ldrb	r3, [r3, #4]
    a7c8:	e1a03403 	lsl	r3, r3, #8
    a7cc:	e1833002 	orr	r3, r3, r2
    a7d0:	e14b30ba 	strh	r3, [fp, #-10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:334 (discriminator 3)
    a7d4:	e15b20ba 	ldrh	r2, [fp, #-10]
    a7d8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a7dc:	e5d31003 	ldrb	r1, [r3, #3]
    a7e0:	e5d33004 	ldrb	r3, [r3, #4]
    a7e4:	e1a03403 	lsl	r3, r3, #8
    a7e8:	e1833001 	orr	r3, r3, r1
    a7ec:	e6ff3073 	uxth	r3, r3
    a7f0:	e1a00003 	mov	r0, r3
    a7f4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a7f8:	e5d31007 	ldrb	r1, [r3, #7]
    a7fc:	e5d33008 	ldrb	r3, [r3, #8]
    a800:	e1a03403 	lsl	r3, r3, #8
    a804:	e1833001 	orr	r3, r3, r1
    a808:	e6ff3073 	uxth	r3, r3
    a80c:	e0803003 	add	r3, r0, r3
    a810:	e1520003 	cmp	r2, r3
    a814:	aa000034 	bge	a8ec <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x30c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:336 (discriminator 2)
                    {
                        const uint16_t pos = ((y - pkt->y1) * pkt->w + (x - pkt->x1));
    a818:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a81c:	e5d32003 	ldrb	r2, [r3, #3]
    a820:	e5d33004 	ldrb	r3, [r3, #4]
    a824:	e1a03403 	lsl	r3, r3, #8
    a828:	e1833002 	orr	r3, r3, r2
    a82c:	e6ff3073 	uxth	r3, r3
    a830:	e15b20ba 	ldrh	r2, [fp, #-10]
    a834:	e0423003 	sub	r3, r2, r3
    a838:	e6ff2073 	uxth	r2, r3
    a83c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a840:	e5d31005 	ldrb	r1, [r3, #5]
    a844:	e5d33006 	ldrb	r3, [r3, #6]
    a848:	e1a03403 	lsl	r3, r3, #8
    a84c:	e1833001 	orr	r3, r3, r1
    a850:	e6ff3073 	uxth	r3, r3
    a854:	e1630382 	smulbb	r3, r2, r3
    a858:	e6ff2073 	uxth	r2, r3
    a85c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a860:	e5d31001 	ldrb	r1, [r3, #1]
    a864:	e5d33002 	ldrb	r3, [r3, #2]
    a868:	e1a03403 	lsl	r3, r3, #8
    a86c:	e1833001 	orr	r3, r3, r1
    a870:	e6ff3073 	uxth	r3, r3
    a874:	e15b10b8 	ldrh	r1, [fp, #-8]
    a878:	e0413003 	sub	r3, r1, r3
    a87c:	e6ff3073 	uxth	r3, r3
    a880:	e0823003 	add	r3, r2, r3
    a884:	e14b31bc 	strh	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:338 (discriminator 2)

                        Set_Pixel(x, y, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a888:	e15b10b8 	ldrh	r1, [fp, #-8]
    a88c:	e15b20ba 	ldrh	r2, [fp, #-10]
    a890:	e15b31bc 	ldrh	r3, [fp, #-28]	; 0xffffffe4
    a894:	e1a031a3 	lsr	r3, r3, #3
    a898:	e6ff3073 	uxth	r3, r3
    a89c:	e1a00003 	mov	r0, r3
    a8a0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    a8a4:	e0833000 	add	r3, r3, r0
    a8a8:	e5d33000 	ldrb	r3, [r3]
    a8ac:	e1a00003 	mov	r0, r3
    a8b0:	e15b31bc 	ldrh	r3, [fp, #-28]	; 0xffffffe4
    a8b4:	e1e03003 	mvn	r3, r3
    a8b8:	e2033007 	and	r3, r3, #7
    a8bc:	e1a03350 	asr	r3, r0, r3
    a8c0:	e2033001 	and	r3, r3, #1
    a8c4:	e3530000 	cmp	r3, #0
    a8c8:	13a03001 	movne	r3, #1
    a8cc:	03a03000 	moveq	r3, #0
    a8d0:	e6ef3073 	uxtb	r3, r3
    a8d4:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    a8d8:	ebfffe68 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:334 (discriminator 2)
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a8dc:	e15b30ba 	ldrh	r3, [fp, #-10]
    a8e0:	e2833001 	add	r3, r3, #1
    a8e4:	e14b30ba 	strh	r3, [fp, #-10]
    a8e8:	eaffffb9 	b	a7d4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x1f4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332 (discriminator 2)
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a8ec:	e15b30b8 	ldrh	r3, [fp, #-8]
    a8f0:	e2833001 	add	r3, r3, #1
    a8f4:	e14b30b8 	strh	r3, [fp, #-8]
    a8f8:	eaffff9e 	b	a778 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x198>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:344
                    }
                }
            }
            else
            {
                for (uint16_t x = 0; x < pkt->w; x++)
    a8fc:	e3a03000 	mov	r3, #0
    a900:	e14b30bc 	strh	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:344 (discriminator 1)
    a904:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a908:	e5d32005 	ldrb	r2, [r3, #5]
    a90c:	e5d33006 	ldrb	r3, [r3, #6]
    a910:	e1a03403 	lsl	r3, r3, #8
    a914:	e1833002 	orr	r3, r3, r2
    a918:	e6ff3073 	uxth	r3, r3
    a91c:	e15b20bc 	ldrh	r2, [fp, #-12]
    a920:	e1520003 	cmp	r2, r3
    a924:	2a000057 	bcs	aa88 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4a8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:346
                {
                    for (uint16_t y = 0; y < pkt->h; y++)
    a928:	e3a03000 	mov	r3, #0
    a92c:	e14b30be 	strh	r3, [fp, #-14]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:346 (discriminator 3)
    a930:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a934:	e5d32007 	ldrb	r2, [r3, #7]
    a938:	e5d33008 	ldrb	r3, [r3, #8]
    a93c:	e1a03403 	lsl	r3, r3, #8
    a940:	e1833002 	orr	r3, r3, r2
    a944:	e6ff3073 	uxth	r3, r3
    a948:	e15b20be 	ldrh	r2, [fp, #-14]
    a94c:	e1520003 	cmp	r2, r3
    a950:	2a00003e 	bcs	aa50 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x470>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:348 (discriminator 2)
                    {
                        const uint16_t pos = (x * pkt->h + y);
    a954:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a958:	e5d32007 	ldrb	r2, [r3, #7]
    a95c:	e5d33008 	ldrb	r3, [r3, #8]
    a960:	e1a03403 	lsl	r3, r3, #8
    a964:	e1833002 	orr	r3, r3, r2
    a968:	e6ff3073 	uxth	r3, r3
    a96c:	e15b20bc 	ldrh	r2, [fp, #-12]
    a970:	e1630382 	smulbb	r3, r2, r3
    a974:	e6ff2073 	uxth	r2, r3
    a978:	e15b30be 	ldrh	r3, [fp, #-14]
    a97c:	e0823003 	add	r3, r2, r3
    a980:	e14b31ba 	strh	r3, [fp, #-26]	; 0xffffffe6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:350 (discriminator 2)

                        Set_Pixel(x + pkt->x1, (pkt->h - y) + pkt->y1, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a984:	e15b20bc 	ldrh	r2, [fp, #-12]
    a988:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a98c:	e5d31001 	ldrb	r1, [r3, #1]
    a990:	e5d33002 	ldrb	r3, [r3, #2]
    a994:	e1a03403 	lsl	r3, r3, #8
    a998:	e1833001 	orr	r3, r3, r1
    a99c:	e6ff3073 	uxth	r3, r3
    a9a0:	e0823003 	add	r3, r2, r3
    a9a4:	e1a00003 	mov	r0, r3
    a9a8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a9ac:	e5d32007 	ldrb	r2, [r3, #7]
    a9b0:	e5d33008 	ldrb	r3, [r3, #8]
    a9b4:	e1a03403 	lsl	r3, r3, #8
    a9b8:	e1833002 	orr	r3, r3, r2
    a9bc:	e6ff3073 	uxth	r3, r3
    a9c0:	e1a02003 	mov	r2, r3
    a9c4:	e15b30be 	ldrh	r3, [fp, #-14]
    a9c8:	e0422003 	sub	r2, r2, r3
    a9cc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    a9d0:	e5d31003 	ldrb	r1, [r3, #3]
    a9d4:	e5d33004 	ldrb	r3, [r3, #4]
    a9d8:	e1a03403 	lsl	r3, r3, #8
    a9dc:	e1833001 	orr	r3, r3, r1
    a9e0:	e6ff3073 	uxth	r3, r3
    a9e4:	e0823003 	add	r3, r2, r3
    a9e8:	e1a01003 	mov	r1, r3
    a9ec:	e15b31ba 	ldrh	r3, [fp, #-26]	; 0xffffffe6
    a9f0:	e1a031a3 	lsr	r3, r3, #3
    a9f4:	e6ff3073 	uxth	r3, r3
    a9f8:	e1a02003 	mov	r2, r3
    a9fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    aa00:	e0833002 	add	r3, r3, r2
    aa04:	e5d33000 	ldrb	r3, [r3]
    aa08:	e1a02003 	mov	r2, r3
    aa0c:	e15b31ba 	ldrh	r3, [fp, #-26]	; 0xffffffe6
    aa10:	e1e03003 	mvn	r3, r3
    aa14:	e2033007 	and	r3, r3, #7
    aa18:	e1a03352 	asr	r3, r2, r3
    aa1c:	e2033001 	and	r3, r3, #1
    aa20:	e3530000 	cmp	r3, #0
    aa24:	13a03001 	movne	r3, #1
    aa28:	03a03000 	moveq	r3, #0
    aa2c:	e6ef3073 	uxtb	r3, r3
    aa30:	e1a02001 	mov	r2, r1
    aa34:	e1a01000 	mov	r1, r0
    aa38:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
    aa3c:	ebfffe0f 	bl	a280 <_ZN16CDisplay_SSD13069Set_PixelEjjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:346 (discriminator 2)
                    for (uint16_t y = 0; y < pkt->h; y++)
    aa40:	e15b30be 	ldrh	r3, [fp, #-14]
    aa44:	e2833001 	add	r3, r3, #1
    aa48:	e14b30be 	strh	r3, [fp, #-14]
    aa4c:	eaffffb7 	b	a930 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x350>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:344 (discriminator 2)
                for (uint16_t x = 0; x < pkt->w; x++)
    aa50:	e15b30bc 	ldrh	r3, [fp, #-12]
    aa54:	e2833001 	add	r3, r3, #1
    aa58:	e14b30bc 	strh	r3, [fp, #-12]
    aa5c:	eaffffa8 	b	a904 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x324>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:281
        return;
    aa60:	e320f000 	nop	{0}
    aa64:	ea000008 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:297
                return;
    aa68:	e320f000 	nop	{0}
    aa6c:	ea000006 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:309
                return;
    aa70:	e320f000 	nop	{0}
    aa74:	ea000004 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:318
            break;
    aa78:	e320f000 	nop	{0}
    aa7c:	ea000002 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:324
                return;
    aa80:	e320f000 	nop	{0}
    aa84:	ea000000 	b	aa8c <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x4ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:355
                    }
                }
            }

            break;
    aa88:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
        }
    }
}
    aa8c:	e24bd004 	sub	sp, fp, #4
    aa90:	e8bd8800 	pop	{fp, pc}

0000aa94 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
    aa94:	e92d4800 	push	{fp, lr}
    aa98:	e28db004 	add	fp, sp, #4
    aa9c:	e24dd008 	sub	sp, sp, #8
    aaa0:	e50b0008 	str	r0, [fp, #-8]
    aaa4:	e50b100c 	str	r1, [fp, #-12]
    aaa8:	e51b3008 	ldr	r3, [fp, #-8]
    aaac:	e3530001 	cmp	r3, #1
    aab0:	1a000006 	bne	aad0 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358 (discriminator 1)
    aab4:	e51b300c 	ldr	r3, [fp, #-12]
    aab8:	e59f201c 	ldr	r2, [pc, #28]	; aadc <_Z41__static_initialization_and_destruction_0ii+0x48>
    aabc:	e1530002 	cmp	r3, r2
    aac0:	1a000002 	bne	aad0 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:7
CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);
    aac4:	e59f1014 	ldr	r1, [pc, #20]	; aae0 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    aac8:	e59f0014 	ldr	r0, [pc, #20]	; aae4 <_Z41__static_initialization_and_destruction_0ii+0x50>
    aacc:	ebfffb6d 	bl	9888 <_ZN16CDisplay_SSD1306C1ER4CI2C>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
}
    aad0:	e320f000 	nop	{0}
    aad4:	e24bd004 	sub	sp, fp, #4
    aad8:	e8bd8800 	pop	{fp, pc}
    aadc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    aae0:	0000ff40 	andeq	pc, r0, r0, asr #30
    aae4:	0000ff8c 	andeq	pc, r0, ip, lsl #31

0000aae8 <_GLOBAL__sub_I_sDisplay_SSD1306>:
_GLOBAL__sub_I_sDisplay_SSD1306():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
    aae8:	e92d4800 	push	{fp, lr}
    aaec:	e28db004 	add	fp, sp, #4
    aaf0:	e59f1008 	ldr	r1, [pc, #8]	; ab00 <_GLOBAL__sub_I_sDisplay_SSD1306+0x18>
    aaf4:	e3a00001 	mov	r0, #1
    aaf8:	ebffffe5 	bl	aa94 <_Z41__static_initialization_and_destruction_0ii>
    aafc:	e8bd8800 	pop	{fp, pc}
    ab00:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000ab04 <_ZdlPvj>:
_ZdlPvj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:62
{
    sKernelMem.Free(p);
}

inline void operator delete(void* p, uint32_t)
{
    ab04:	e92d4800 	push	{fp, lr}
    ab08:	e28db004 	add	fp, sp, #4
    ab0c:	e24dd008 	sub	sp, sp, #8
    ab10:	e50b0008 	str	r0, [fp, #-8]
    ab14:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:63
    sKernelMem.Free(p);
    ab18:	e51b1008 	ldr	r1, [fp, #-8]
    ab1c:	e59f000c 	ldr	r0, [pc, #12]	; ab30 <_ZdlPvj+0x2c>
    ab20:	eb000b1f 	bl	d7a4 <_ZN20CKernel_Heap_Manager4FreeEPv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:64
}
    ab24:	e320f000 	nop	{0}
    ab28:	e24bd004 	sub	sp, fp, #4
    ab2c:	e8bd8800 	pop	{fp, pc}
    ab30:	00010060 	andeq	r0, r1, r0, rrx

0000ab34 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_>:
_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33

        // vlozeni znaku do bufferu
        template<typename T>
        CI2C_Transaction& operator<<(const T& chr)
    ab34:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ab38:	e28db000 	add	fp, sp, #0
    ab3c:	e24dd00c 	sub	sp, sp, #12
    ab40:	e50b0008 	str	r0, [fp, #-8]
    ab44:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
        {
            if (mLength >= I2C_Transaction_Max_Size)
    ab48:	e51b3008 	ldr	r3, [fp, #-8]
    ab4c:	e593300c 	ldr	r3, [r3, #12]
    ab50:	e3530007 	cmp	r3, #7
    ab54:	9a000001 	bls	ab60 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    ab58:	e51b3008 	ldr	r3, [fp, #-8]
    ab5c:	ea00000c 	b	ab94 <_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38

            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ab60:	e51b300c 	ldr	r3, [fp, #-12]
    ab64:	e5930000 	ldr	r0, [r3]
    ab68:	e51b3008 	ldr	r3, [fp, #-8]
    ab6c:	e593300c 	ldr	r3, [r3, #12]
    ab70:	e2831001 	add	r1, r3, #1
    ab74:	e51b2008 	ldr	r2, [fp, #-8]
    ab78:	e582100c 	str	r1, [r2, #12]
    ab7c:	e6ef1070 	uxtb	r1, r0
    ab80:	e51b2008 	ldr	r2, [fp, #-8]
    ab84:	e0823003 	add	r3, r2, r3
    ab88:	e1a02001 	mov	r2, r1
    ab8c:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40

            return *this;
    ab90:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ab94:	e1a00003 	mov	r0, r3
    ab98:	e28bd000 	add	sp, fp, #0
    ab9c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    aba0:	e12fff1e 	bx	lr

0000aba4 <_ZN16CI2C_TransactionlsIiEERS_RKT_>:
_ZN16CI2C_TransactionlsIiEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    aba4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    aba8:	e28db000 	add	fp, sp, #0
    abac:	e24dd00c 	sub	sp, sp, #12
    abb0:	e50b0008 	str	r0, [fp, #-8]
    abb4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    abb8:	e51b3008 	ldr	r3, [fp, #-8]
    abbc:	e593300c 	ldr	r3, [r3, #12]
    abc0:	e3530007 	cmp	r3, #7
    abc4:	9a000001 	bls	abd0 <_ZN16CI2C_TransactionlsIiEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    abc8:	e51b3008 	ldr	r3, [fp, #-8]
    abcc:	ea00000c 	b	ac04 <_ZN16CI2C_TransactionlsIiEERS_RKT_+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    abd0:	e51b300c 	ldr	r3, [fp, #-12]
    abd4:	e5930000 	ldr	r0, [r3]
    abd8:	e51b3008 	ldr	r3, [fp, #-8]
    abdc:	e593300c 	ldr	r3, [r3, #12]
    abe0:	e2831001 	add	r1, r3, #1
    abe4:	e51b2008 	ldr	r2, [fp, #-8]
    abe8:	e582100c 	str	r1, [r2, #12]
    abec:	e6ef1070 	uxtb	r1, r0
    abf0:	e51b2008 	ldr	r2, [fp, #-8]
    abf4:	e0823003 	add	r3, r2, r3
    abf8:	e1a02001 	mov	r2, r1
    abfc:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac00:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ac04:	e1a00003 	mov	r0, r3
    ac08:	e28bd000 	add	sp, fp, #0
    ac0c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ac10:	e12fff1e 	bx	lr

0000ac14 <_ZN16CI2C_TransactionlsIhEERS_RKT_>:
_ZN16CI2C_TransactionlsIhEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    ac14:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ac18:	e28db000 	add	fp, sp, #0
    ac1c:	e24dd00c 	sub	sp, sp, #12
    ac20:	e50b0008 	str	r0, [fp, #-8]
    ac24:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    ac28:	e51b3008 	ldr	r3, [fp, #-8]
    ac2c:	e593300c 	ldr	r3, [r3, #12]
    ac30:	e3530007 	cmp	r3, #7
    ac34:	9a000001 	bls	ac40 <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x2c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    ac38:	e51b3008 	ldr	r3, [fp, #-8]
    ac3c:	ea00000b 	b	ac70 <_ZN16CI2C_TransactionlsIhEERS_RKT_+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ac40:	e51b3008 	ldr	r3, [fp, #-8]
    ac44:	e593300c 	ldr	r3, [r3, #12]
    ac48:	e2831001 	add	r1, r3, #1
    ac4c:	e51b2008 	ldr	r2, [fp, #-8]
    ac50:	e582100c 	str	r1, [r2, #12]
    ac54:	e51b200c 	ldr	r2, [fp, #-12]
    ac58:	e5d21000 	ldrb	r1, [r2]
    ac5c:	e51b2008 	ldr	r2, [fp, #-8]
    ac60:	e0823003 	add	r3, r2, r3
    ac64:	e1a02001 	mov	r2, r1
    ac68:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac6c:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ac70:	e1a00003 	mov	r0, r3
    ac74:	e28bd000 	add	sp, fp, #0
    ac78:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ac7c:	e12fff1e 	bx	lr

0000ac80 <_ZN16CSegment_DisplayC1Ev>:
_ZN16CSegment_DisplayC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:124
    0,          // }
    0,          // ~
    0,          // DEL
};

CSegment_Display::CSegment_Display()
    ac80:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ac84:	e28db000 	add	fp, sp, #0
    ac88:	e24dd00c 	sub	sp, sp, #12
    ac8c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:126
: mOpened(false)
, mOutput('\0')
    ac90:	e51b3008 	ldr	r3, [fp, #-8]
    ac94:	e3a02000 	mov	r2, #0
    ac98:	e5c32000 	strb	r2, [r3]
    ac9c:	e51b3008 	ldr	r3, [fp, #-8]
    aca0:	e3a02000 	mov	r2, #0
    aca4:	e5c32001 	strb	r2, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:129
{
    //
}
    aca8:	e51b3008 	ldr	r3, [fp, #-8]
    acac:	e1a00003 	mov	r0, r3
    acb0:	e28bd000 	add	sp, fp, #0
    acb4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    acb8:	e12fff1e 	bx	lr

0000acbc <_ZN16CSegment_Display4OpenEv>:
_ZN16CSegment_Display4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:132

bool CSegment_Display::Open()
{
    acbc:	e92d4800 	push	{fp, lr}
    acc0:	e28db004 	add	fp, sp, #4
    acc4:	e24dd008 	sub	sp, sp, #8
    acc8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:133
    if (mOpened)
    accc:	e51b3008 	ldr	r3, [fp, #-8]
    acd0:	e5d33000 	ldrb	r3, [r3]
    acd4:	e3530000 	cmp	r3, #0
    acd8:	0a000001 	beq	ace4 <_ZN16CSegment_Display4OpenEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:134
        return false;
    acdc:	e3a03000 	mov	r3, #0
    ace0:	ea00000c 	b	ad18 <_ZN16CSegment_Display4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:136

    if (!sShift_Register.Open())
    ace4:	e59f0038 	ldr	r0, [pc, #56]	; ad24 <_ZN16CSegment_Display4OpenEv+0x68>
    ace8:	eb000092 	bl	af38 <_ZN15CShift_Register4OpenEv>
    acec:	e1a03000 	mov	r3, r0
    acf0:	e2233001 	eor	r3, r3, #1
    acf4:	e6ef3073 	uxtb	r3, r3
    acf8:	e3530000 	cmp	r3, #0
    acfc:	0a000001 	beq	ad08 <_ZN16CSegment_Display4OpenEv+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:137
        return false;
    ad00:	e3a03000 	mov	r3, #0
    ad04:	ea000003 	b	ad18 <_ZN16CSegment_Display4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:139

    mOpened = true;
    ad08:	e51b3008 	ldr	r3, [fp, #-8]
    ad0c:	e3a02001 	mov	r2, #1
    ad10:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:141

    return true;
    ad14:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:142
}
    ad18:	e1a00003 	mov	r0, r3
    ad1c:	e24bd004 	sub	sp, fp, #4
    ad20:	e8bd8800 	pop	{fp, pc}
    ad24:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000ad28 <_ZN16CSegment_Display5CloseEv>:
_ZN16CSegment_Display5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:145

void CSegment_Display::Close()
{
    ad28:	e92d4800 	push	{fp, lr}
    ad2c:	e28db004 	add	fp, sp, #4
    ad30:	e24dd008 	sub	sp, sp, #8
    ad34:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:146
    if (!mOpened)
    ad38:	e51b3008 	ldr	r3, [fp, #-8]
    ad3c:	e5d33000 	ldrb	r3, [r3]
    ad40:	e2233001 	eor	r3, r3, #1
    ad44:	e6ef3073 	uxtb	r3, r3
    ad48:	e3530000 	cmp	r3, #0
    ad4c:	1a000005 	bne	ad68 <_ZN16CSegment_Display5CloseEv+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:149
        return;

    sShift_Register.Close();
    ad50:	e59f001c 	ldr	r0, [pc, #28]	; ad74 <_ZN16CSegment_Display5CloseEv+0x4c>
    ad54:	eb0000d4 	bl	b0ac <_ZN15CShift_Register5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:151

    mOpened = false;
    ad58:	e51b3008 	ldr	r3, [fp, #-8]
    ad5c:	e3a02000 	mov	r2, #0
    ad60:	e5c32000 	strb	r2, [r3]
    ad64:	ea000000 	b	ad6c <_ZN16CSegment_Display5CloseEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:147
        return;
    ad68:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:152
}
    ad6c:	e24bd004 	sub	sp, fp, #4
    ad70:	e8bd8800 	pop	{fp, pc}
    ad74:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000ad78 <_ZNK16CSegment_Display9Is_OpenedEv>:
_ZNK16CSegment_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:155

bool CSegment_Display::Is_Opened() const
{
    ad78:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ad7c:	e28db000 	add	fp, sp, #0
    ad80:	e24dd00c 	sub	sp, sp, #12
    ad84:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:156
    return mOpened;
    ad88:	e51b3008 	ldr	r3, [fp, #-8]
    ad8c:	e5d33000 	ldrb	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:157
}
    ad90:	e1a00003 	mov	r0, r3
    ad94:	e28bd000 	add	sp, fp, #0
    ad98:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ad9c:	e12fff1e 	bx	lr

0000ada0 <_ZN16CSegment_Display5WriteEc>:
_ZN16CSegment_Display5WriteEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:160

void CSegment_Display::Write(char c)
{
    ada0:	e92d4800 	push	{fp, lr}
    ada4:	e28db004 	add	fp, sp, #4
    ada8:	e24dd010 	sub	sp, sp, #16
    adac:	e50b0010 	str	r0, [fp, #-16]
    adb0:	e1a03001 	mov	r3, r1
    adb4:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:161
    if (!mOpened)
    adb8:	e51b3010 	ldr	r3, [fp, #-16]
    adbc:	e5d33000 	ldrb	r3, [r3]
    adc0:	e2233001 	eor	r3, r3, #1
    adc4:	e6ef3073 	uxtb	r3, r3
    adc8:	e3530000 	cmp	r3, #0
    adcc:	1a000011 	bne	ae18 <_ZN16CSegment_Display5WriteEc+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:164
        return;

    uint8_t idx = static_cast<uint8_t>(c);
    add0:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
    add4:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167

    // jen tisknutelne zakladni znaky
    if (idx < 32 || idx >= 128)
    add8:	e55b3005 	ldrb	r3, [fp, #-5]
    addc:	e353001f 	cmp	r3, #31
    ade0:	9a00000e 	bls	ae20 <_ZN16CSegment_Display5WriteEc+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167 (discriminator 1)
    ade4:	e15b30d5 	ldrsb	r3, [fp, #-5]
    ade8:	e3530000 	cmp	r3, #0
    adec:	ba00000b 	blt	ae20 <_ZN16CSegment_Display5WriteEc+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:171
        return;

    // segmenty jsou invertovane (spolecna katoda), takze tam kde je 0 bude segment svitit
    sShift_Register.Shift_In(static_cast<uint8_t>(~(mCharacter_Map[idx - 32])));
    adf0:	e55b3005 	ldrb	r3, [fp, #-5]
    adf4:	e2433020 	sub	r3, r3, #32
    adf8:	e59f202c 	ldr	r2, [pc, #44]	; ae2c <_ZN16CSegment_Display5WriteEc+0x8c>
    adfc:	e7d23003 	ldrb	r3, [r2, r3]
    ae00:	e1e03003 	mvn	r3, r3
    ae04:	e6ef3073 	uxtb	r3, r3
    ae08:	e1a01003 	mov	r1, r3
    ae0c:	e59f001c 	ldr	r0, [pc, #28]	; ae30 <_ZN16CSegment_Display5WriteEc+0x90>
    ae10:	eb00012e 	bl	b2d0 <_ZN15CShift_Register8Shift_InEh>
    ae14:	ea000002 	b	ae24 <_ZN16CSegment_Display5WriteEc+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:162
        return;
    ae18:	e320f000 	nop	{0}
    ae1c:	ea000000 	b	ae24 <_ZN16CSegment_Display5WriteEc+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:168
        return;
    ae20:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:172
}
    ae24:	e24bd004 	sub	sp, fp, #4
    ae28:	e8bd8800 	pop	{fp, pc}
    ae2c:	0000f814 	andeq	pc, r0, r4, lsl r8	; <UNPREDICTABLE>
    ae30:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000ae34 <_ZNK16CSegment_Display4ReadEv>:
_ZNK16CSegment_Display4ReadEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:175

char CSegment_Display::Read() const
{
    ae34:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ae38:	e28db000 	add	fp, sp, #0
    ae3c:	e24dd00c 	sub	sp, sp, #12
    ae40:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:176
    if (!mOpened)
    ae44:	e51b3008 	ldr	r3, [fp, #-8]
    ae48:	e5d33000 	ldrb	r3, [r3]
    ae4c:	e2233001 	eor	r3, r3, #1
    ae50:	e6ef3073 	uxtb	r3, r3
    ae54:	e3530000 	cmp	r3, #0
    ae58:	0a000001 	beq	ae64 <_ZNK16CSegment_Display4ReadEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:177
        return '\0';
    ae5c:	e3a03000 	mov	r3, #0
    ae60:	ea000001 	b	ae6c <_ZNK16CSegment_Display4ReadEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:179

    return mOutput;
    ae64:	e51b3008 	ldr	r3, [fp, #-8]
    ae68:	e5d33001 	ldrb	r3, [r3, #1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae6c:	e1a00003 	mov	r0, r3
    ae70:	e28bd000 	add	sp, fp, #0
    ae74:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ae78:	e12fff1e 	bx	lr

0000ae7c <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae7c:	e92d4800 	push	{fp, lr}
    ae80:	e28db004 	add	fp, sp, #4
    ae84:	e24dd008 	sub	sp, sp, #8
    ae88:	e50b0008 	str	r0, [fp, #-8]
    ae8c:	e50b100c 	str	r1, [fp, #-12]
    ae90:	e51b3008 	ldr	r3, [fp, #-8]
    ae94:	e3530001 	cmp	r3, #1
    ae98:	1a000005 	bne	aeb4 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180 (discriminator 1)
    ae9c:	e51b300c 	ldr	r3, [fp, #-12]
    aea0:	e59f2018 	ldr	r2, [pc, #24]	; aec0 <_Z41__static_initialization_and_destruction_0ii+0x44>
    aea4:	e1530002 	cmp	r3, r2
    aea8:	1a000001 	bne	aeb4 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    aeac:	e59f0010 	ldr	r0, [pc, #16]	; aec4 <_Z41__static_initialization_and_destruction_0ii+0x48>
    aeb0:	ebffff72 	bl	ac80 <_ZN16CSegment_DisplayC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aeb4:	e320f000 	nop	{0}
    aeb8:	e24bd004 	sub	sp, fp, #4
    aebc:	e8bd8800 	pop	{fp, pc}
    aec0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    aec4:	0000ffa0 	andeq	pc, r0, r0, lsr #31

0000aec8 <_GLOBAL__sub_I_sSegment_Display>:
_GLOBAL__sub_I_sSegment_Display():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aec8:	e92d4800 	push	{fp, lr}
    aecc:	e28db004 	add	fp, sp, #4
    aed0:	e59f1008 	ldr	r1, [pc, #8]	; aee0 <_GLOBAL__sub_I_sSegment_Display+0x18>
    aed4:	e3a00001 	mov	r0, #1
    aed8:	ebffffe7 	bl	ae7c <_Z41__static_initialization_and_destruction_0ii>
    aedc:	e8bd8800 	pop	{fp, pc}
    aee0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000aee4 <_ZN15CShift_RegisterC1Ejjj>:
_ZN15CShift_RegisterC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:7

// na tvrdo definujeme, ze jsme shift registr pripojili sem - volitelne muzeme pak oddelit do nejake HAL vrstvy pro dany
// header
CShift_Register sShift_Register(2, 3, 4);

CShift_Register::CShift_Register(uint32_t latchPin, uint32_t dataPin, uint32_t clockPin)
    aee4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    aee8:	e28db000 	add	fp, sp, #0
    aeec:	e24dd014 	sub	sp, sp, #20
    aef0:	e50b0008 	str	r0, [fp, #-8]
    aef4:	e50b100c 	str	r1, [fp, #-12]
    aef8:	e50b2010 	str	r2, [fp, #-16]
    aefc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:10
: mLatch_Pin(latchPin)
, mData_Pin(dataPin)
, mClock_Pin(clockPin)
    af00:	e51b3008 	ldr	r3, [fp, #-8]
    af04:	e51b200c 	ldr	r2, [fp, #-12]
    af08:	e5832000 	str	r2, [r3]
    af0c:	e51b3008 	ldr	r3, [fp, #-8]
    af10:	e51b2010 	ldr	r2, [fp, #-16]
    af14:	e5832004 	str	r2, [r3, #4]
    af18:	e51b3008 	ldr	r3, [fp, #-8]
    af1c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    af20:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:13
{
    //
}
    af24:	e51b3008 	ldr	r3, [fp, #-8]
    af28:	e1a00003 	mov	r0, r3
    af2c:	e28bd000 	add	sp, fp, #0
    af30:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    af34:	e12fff1e 	bx	lr

0000af38 <_ZN15CShift_Register4OpenEv>:
_ZN15CShift_Register4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:16

bool CShift_Register::Open()
{
    af38:	e92d4800 	push	{fp, lr}
    af3c:	e28db004 	add	fp, sp, #4
    af40:	e24dd008 	sub	sp, sp, #8
    af44:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:17
    if (mOpened)
    af48:	e51b3008 	ldr	r3, [fp, #-8]
    af4c:	e5d3300c 	ldrb	r3, [r3, #12]
    af50:	e3530000 	cmp	r3, #0
    af54:	0a000001 	beq	af60 <_ZN15CShift_Register4OpenEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:18
        return false;
    af58:	e3a03000 	mov	r3, #0
    af5c:	ea00004e 	b	b09c <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:22

    // rezervujeme vsechny piny pro shift registr

    if (!sGPIO.Reserve_Pin(mLatch_Pin, true, true))
    af60:	e51b3008 	ldr	r3, [fp, #-8]
    af64:	e5931000 	ldr	r1, [r3]
    af68:	e3a03001 	mov	r3, #1
    af6c:	e3a02001 	mov	r2, #1
    af70:	e59f0130 	ldr	r0, [pc, #304]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    af74:	ebfff5bb 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    af78:	e1a03000 	mov	r3, r0
    af7c:	e2233001 	eor	r3, r3, #1
    af80:	e6ef3073 	uxtb	r3, r3
    af84:	e3530000 	cmp	r3, #0
    af88:	0a000001 	beq	af94 <_ZN15CShift_Register4OpenEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:23
        return false;
    af8c:	e3a03000 	mov	r3, #0
    af90:	ea000041 	b	b09c <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:25

    if (!sGPIO.Reserve_Pin(mData_Pin, true, true))
    af94:	e51b3008 	ldr	r3, [fp, #-8]
    af98:	e5931004 	ldr	r1, [r3, #4]
    af9c:	e3a03001 	mov	r3, #1
    afa0:	e3a02001 	mov	r2, #1
    afa4:	e59f00fc 	ldr	r0, [pc, #252]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    afa8:	ebfff5ae 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    afac:	e1a03000 	mov	r3, r0
    afb0:	e2233001 	eor	r3, r3, #1
    afb4:	e6ef3073 	uxtb	r3, r3
    afb8:	e3530000 	cmp	r3, #0
    afbc:	0a000007 	beq	afe0 <_ZN15CShift_Register4OpenEv+0xa8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:27
    {
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    afc0:	e51b3008 	ldr	r3, [fp, #-8]
    afc4:	e5931000 	ldr	r1, [r3]
    afc8:	e3a03001 	mov	r3, #1
    afcc:	e3a02001 	mov	r2, #1
    afd0:	e59f00d0 	ldr	r0, [pc, #208]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    afd4:	ebfff609 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:28
        return false;
    afd8:	e3a03000 	mov	r3, #0
    afdc:	ea00002e 	b	b09c <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:31
    }

    if (!sGPIO.Reserve_Pin(mClock_Pin, true, true))
    afe0:	e51b3008 	ldr	r3, [fp, #-8]
    afe4:	e5931008 	ldr	r1, [r3, #8]
    afe8:	e3a03001 	mov	r3, #1
    afec:	e3a02001 	mov	r2, #1
    aff0:	e59f00b0 	ldr	r0, [pc, #176]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    aff4:	ebfff59b 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    aff8:	e1a03000 	mov	r3, r0
    affc:	e2233001 	eor	r3, r3, #1
    b000:	e6ef3073 	uxtb	r3, r3
    b004:	e3530000 	cmp	r3, #0
    b008:	0a00000d 	beq	b044 <_ZN15CShift_Register4OpenEv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:33
    {
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b00c:	e51b3008 	ldr	r3, [fp, #-8]
    b010:	e5931000 	ldr	r1, [r3]
    b014:	e3a03001 	mov	r3, #1
    b018:	e3a02001 	mov	r2, #1
    b01c:	e59f0084 	ldr	r0, [pc, #132]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    b020:	ebfff5f6 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:34
        sGPIO.Free_Pin(mData_Pin, true, true);
    b024:	e51b3008 	ldr	r3, [fp, #-8]
    b028:	e5931004 	ldr	r1, [r3, #4]
    b02c:	e3a03001 	mov	r3, #1
    b030:	e3a02001 	mov	r2, #1
    b034:	e59f006c 	ldr	r0, [pc, #108]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    b038:	ebfff5f0 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:35
        return false;
    b03c:	e3a03000 	mov	r3, #0
    b040:	ea000015 	b	b09c <_ZN15CShift_Register4OpenEv+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:39
    }

    // vsechny jsou vystupni
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Output);
    b044:	e51b3008 	ldr	r3, [fp, #-8]
    b048:	e5933000 	ldr	r3, [r3]
    b04c:	e3a02001 	mov	r2, #1
    b050:	e1a01003 	mov	r1, r3
    b054:	e59f004c 	ldr	r0, [pc, #76]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    b058:	ebfff4dc 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:40
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Output);
    b05c:	e51b3008 	ldr	r3, [fp, #-8]
    b060:	e5933004 	ldr	r3, [r3, #4]
    b064:	e3a02001 	mov	r2, #1
    b068:	e1a01003 	mov	r1, r3
    b06c:	e59f0034 	ldr	r0, [pc, #52]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    b070:	ebfff4d6 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:41
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Output);
    b074:	e51b3008 	ldr	r3, [fp, #-8]
    b078:	e5933008 	ldr	r3, [r3, #8]
    b07c:	e3a02001 	mov	r2, #1
    b080:	e1a01003 	mov	r1, r3
    b084:	e59f001c 	ldr	r0, [pc, #28]	; b0a8 <_ZN15CShift_Register4OpenEv+0x170>
    b088:	ebfff4d0 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:43

    mOpened = true;
    b08c:	e51b3008 	ldr	r3, [fp, #-8]
    b090:	e3a02001 	mov	r2, #1
    b094:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:45

    return true;
    b098:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:46
}
    b09c:	e1a00003 	mov	r0, r3
    b0a0:	e24bd004 	sub	sp, fp, #4
    b0a4:	e8bd8800 	pop	{fp, pc}
    b0a8:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000b0ac <_ZN15CShift_Register5CloseEv>:
_ZN15CShift_Register5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:49

void CShift_Register::Close()
{
    b0ac:	e92d4800 	push	{fp, lr}
    b0b0:	e28db004 	add	fp, sp, #4
    b0b4:	e24dd008 	sub	sp, sp, #8
    b0b8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:50
    if (!mOpened)
    b0bc:	e51b3008 	ldr	r3, [fp, #-8]
    b0c0:	e5d3300c 	ldrb	r3, [r3, #12]
    b0c4:	e2233001 	eor	r3, r3, #1
    b0c8:	e6ef3073 	uxtb	r3, r3
    b0cc:	e3530000 	cmp	r3, #0
    b0d0:	1a000027 	bne	b174 <_ZN15CShift_Register5CloseEv+0xc8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:54
        return;

    // prepneme piny na vstupni (setreni energii)
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Input);
    b0d4:	e51b3008 	ldr	r3, [fp, #-8]
    b0d8:	e5933000 	ldr	r3, [r3]
    b0dc:	e3a02000 	mov	r2, #0
    b0e0:	e1a01003 	mov	r1, r3
    b0e4:	e59f0094 	ldr	r0, [pc, #148]	; b180 <_ZN15CShift_Register5CloseEv+0xd4>
    b0e8:	ebfff4b8 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:55
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Input);
    b0ec:	e51b3008 	ldr	r3, [fp, #-8]
    b0f0:	e5933004 	ldr	r3, [r3, #4]
    b0f4:	e3a02000 	mov	r2, #0
    b0f8:	e1a01003 	mov	r1, r3
    b0fc:	e59f007c 	ldr	r0, [pc, #124]	; b180 <_ZN15CShift_Register5CloseEv+0xd4>
    b100:	ebfff4b2 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:56
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Input);
    b104:	e51b3008 	ldr	r3, [fp, #-8]
    b108:	e5933008 	ldr	r3, [r3, #8]
    b10c:	e3a02000 	mov	r2, #0
    b110:	e1a01003 	mov	r1, r3
    b114:	e59f0064 	ldr	r0, [pc, #100]	; b180 <_ZN15CShift_Register5CloseEv+0xd4>
    b118:	ebfff4ac 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:59

    // a vratime je
    sGPIO.Free_Pin(mLatch_Pin, true, true);
    b11c:	e51b3008 	ldr	r3, [fp, #-8]
    b120:	e5931000 	ldr	r1, [r3]
    b124:	e3a03001 	mov	r3, #1
    b128:	e3a02001 	mov	r2, #1
    b12c:	e59f004c 	ldr	r0, [pc, #76]	; b180 <_ZN15CShift_Register5CloseEv+0xd4>
    b130:	ebfff5b2 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:60
    sGPIO.Free_Pin(mData_Pin, true, true);
    b134:	e51b3008 	ldr	r3, [fp, #-8]
    b138:	e5931004 	ldr	r1, [r3, #4]
    b13c:	e3a03001 	mov	r3, #1
    b140:	e3a02001 	mov	r2, #1
    b144:	e59f0034 	ldr	r0, [pc, #52]	; b180 <_ZN15CShift_Register5CloseEv+0xd4>
    b148:	ebfff5ac 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:61
    sGPIO.Free_Pin(mClock_Pin, true, true);
    b14c:	e51b3008 	ldr	r3, [fp, #-8]
    b150:	e5931008 	ldr	r1, [r3, #8]
    b154:	e3a03001 	mov	r3, #1
    b158:	e3a02001 	mov	r2, #1
    b15c:	e59f001c 	ldr	r0, [pc, #28]	; b180 <_ZN15CShift_Register5CloseEv+0xd4>
    b160:	ebfff5a6 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:63

    mOpened = false;
    b164:	e51b3008 	ldr	r3, [fp, #-8]
    b168:	e3a02000 	mov	r2, #0
    b16c:	e5c3200c 	strb	r2, [r3, #12]
    b170:	ea000000 	b	b178 <_ZN15CShift_Register5CloseEv+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:51
        return;
    b174:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:64
}
    b178:	e24bd004 	sub	sp, fp, #4
    b17c:	e8bd8800 	pop	{fp, pc}
    b180:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000b184 <_ZNK15CShift_Register9Is_OpenedEv>:
_ZNK15CShift_Register9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:67

bool CShift_Register::Is_Opened() const
{
    b184:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b188:	e28db000 	add	fp, sp, #0
    b18c:	e24dd00c 	sub	sp, sp, #12
    b190:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:68
    return mOpened;
    b194:	e51b3008 	ldr	r3, [fp, #-8]
    b198:	e5d3300c 	ldrb	r3, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:69
}
    b19c:	e1a00003 	mov	r0, r3
    b1a0:	e28bd000 	add	sp, fp, #0
    b1a4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b1a8:	e12fff1e 	bx	lr

0000b1ac <_ZN15CShift_Register8Shift_InEb>:
_ZN15CShift_Register8Shift_InEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:72

void CShift_Register::Shift_In(bool bit)
{
    b1ac:	e92d4800 	push	{fp, lr}
    b1b0:	e28db004 	add	fp, sp, #4
    b1b4:	e24dd010 	sub	sp, sp, #16
    b1b8:	e50b0010 	str	r0, [fp, #-16]
    b1bc:	e1a03001 	mov	r3, r1
    b1c0:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:73
    if (!mOpened)
    b1c4:	e51b3010 	ldr	r3, [fp, #-16]
    b1c8:	e5d3300c 	ldrb	r3, [r3, #12]
    b1cc:	e2233001 	eor	r3, r3, #1
    b1d0:	e6ef3073 	uxtb	r3, r3
    b1d4:	e3530000 	cmp	r3, #0
    b1d8:	1a000038 	bne	b2c0 <_ZN15CShift_Register8Shift_InEb+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:79
        return;

    volatile int i;

    // budeme nahravat bity do banku
    sGPIO.Set_Output(mLatch_Pin, false);
    b1dc:	e51b3010 	ldr	r3, [fp, #-16]
    b1e0:	e5933000 	ldr	r3, [r3]
    b1e4:	e3a02000 	mov	r2, #0
    b1e8:	e1a01003 	mov	r1, r3
    b1ec:	e59f00d8 	ldr	r0, [pc, #216]	; b2cc <_ZN15CShift_Register8Shift_InEb+0x120>
    b1f0:	ebfff4c5 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:82

    // nastavime bit
    sGPIO.Set_Output(mData_Pin, bit);
    b1f4:	e51b3010 	ldr	r3, [fp, #-16]
    b1f8:	e5933004 	ldr	r3, [r3, #4]
    b1fc:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
    b200:	e1a01003 	mov	r1, r3
    b204:	e59f00c0 	ldr	r0, [pc, #192]	; b2cc <_ZN15CShift_Register8Shift_InEb+0x120>
    b208:	ebfff4bf 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:84
    // clock -> shift registr nasune bit ze vstupu do banku
    sGPIO.Set_Output(mClock_Pin, true);
    b20c:	e51b3010 	ldr	r3, [fp, #-16]
    b210:	e5933008 	ldr	r3, [r3, #8]
    b214:	e3a02001 	mov	r2, #1
    b218:	e1a01003 	mov	r1, r3
    b21c:	e59f00a8 	ldr	r0, [pc, #168]	; b2cc <_ZN15CShift_Register8Shift_InEb+0x120>
    b220:	ebfff4b9 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87

    // pockat par milisekund
    for (i = 0; i < 0x10; i++)
    b224:	e3a03000 	mov	r3, #0
    b228:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 3)
    b22c:	e51b3008 	ldr	r3, [fp, #-8]
    b230:	e353000f 	cmp	r3, #15
    b234:	d3a03001 	movle	r3, #1
    b238:	c3a03000 	movgt	r3, #0
    b23c:	e6ef3073 	uxtb	r3, r3
    b240:	e3530000 	cmp	r3, #0
    b244:	0a000003 	beq	b258 <_ZN15CShift_Register8Shift_InEb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 2)
    b248:	e51b3008 	ldr	r3, [fp, #-8]
    b24c:	e2833001 	add	r3, r3, #1
    b250:	e50b3008 	str	r3, [fp, #-8]
    b254:	eafffff4 	b	b22c <_ZN15CShift_Register8Shift_InEb+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:91
        ;

    // vratit clock zpatky
    sGPIO.Set_Output(mClock_Pin, false);
    b258:	e51b3010 	ldr	r3, [fp, #-16]
    b25c:	e5933008 	ldr	r3, [r3, #8]
    b260:	e3a02000 	mov	r2, #0
    b264:	e1a01003 	mov	r1, r3
    b268:	e59f005c 	ldr	r0, [pc, #92]	; b2cc <_ZN15CShift_Register8Shift_InEb+0x120>
    b26c:	ebfff4a6 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94

    // pockat par milisekund
    for (i = 0; i < 0x10; i++)
    b270:	e3a03000 	mov	r3, #0
    b274:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 3)
    b278:	e51b3008 	ldr	r3, [fp, #-8]
    b27c:	e353000f 	cmp	r3, #15
    b280:	d3a03001 	movle	r3, #1
    b284:	c3a03000 	movgt	r3, #0
    b288:	e6ef3073 	uxtb	r3, r3
    b28c:	e3530000 	cmp	r3, #0
    b290:	0a000003 	beq	b2a4 <_ZN15CShift_Register8Shift_InEb+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 2)
    b294:	e51b3008 	ldr	r3, [fp, #-8]
    b298:	e2833001 	add	r3, r3, #1
    b29c:	e50b3008 	str	r3, [fp, #-8]
    b2a0:	eafffff4 	b	b278 <_ZN15CShift_Register8Shift_InEb+0xcc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:98
        ;

    // propiseme bank do vystupu
    sGPIO.Set_Output(mLatch_Pin, true);
    b2a4:	e51b3010 	ldr	r3, [fp, #-16]
    b2a8:	e5933000 	ldr	r3, [r3]
    b2ac:	e3a02001 	mov	r2, #1
    b2b0:	e1a01003 	mov	r1, r3
    b2b4:	e59f0010 	ldr	r0, [pc, #16]	; b2cc <_ZN15CShift_Register8Shift_InEb+0x120>
    b2b8:	ebfff493 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
    b2bc:	ea000000 	b	b2c4 <_ZN15CShift_Register8Shift_InEb+0x118>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:74
        return;
    b2c0:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:99
}
    b2c4:	e24bd004 	sub	sp, fp, #4
    b2c8:	e8bd8800 	pop	{fp, pc}
    b2cc:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000b2d0 <_ZN15CShift_Register8Shift_InEh>:
_ZN15CShift_Register8Shift_InEh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:102

void CShift_Register::Shift_In(uint8_t byte)
{
    b2d0:	e92d4800 	push	{fp, lr}
    b2d4:	e28db004 	add	fp, sp, #4
    b2d8:	e24dd010 	sub	sp, sp, #16
    b2dc:	e50b0010 	str	r0, [fp, #-16]
    b2e0:	e1a03001 	mov	r3, r1
    b2e4:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:103
    if (!mOpened)
    b2e8:	e51b3010 	ldr	r3, [fp, #-16]
    b2ec:	e5d3300c 	ldrb	r3, [r3, #12]
    b2f0:	e2233001 	eor	r3, r3, #1
    b2f4:	e6ef3073 	uxtb	r3, r3
    b2f8:	e3530000 	cmp	r3, #0
    b2fc:	1a000048 	bne	b424 <_ZN15CShift_Register8Shift_InEh+0x154>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:109
        return;

    volatile int i;

    // zapisovat do banku
    sGPIO.Set_Output(mLatch_Pin, false);
    b300:	e51b3010 	ldr	r3, [fp, #-16]
    b304:	e5933000 	ldr	r3, [r3]
    b308:	e3a02000 	mov	r2, #0
    b30c:	e1a01003 	mov	r1, r3
    b310:	e59f0118 	ldr	r0, [pc, #280]	; b430 <_ZN15CShift_Register8Shift_InEh+0x160>
    b314:	ebfff47c 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112

    // nasuneme bity od nejvyssiho po nejnizsi (aby na vystupu byly v poradi)
    for (int j = 7; j >= 0; j--)
    b318:	e3a03007 	mov	r3, #7
    b31c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 1)
    b320:	e51b3008 	ldr	r3, [fp, #-8]
    b324:	e3530000 	cmp	r3, #0
    b328:	ba000036 	blt	b408 <_ZN15CShift_Register8Shift_InEh+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:114
    {
        sGPIO.Set_Output(mData_Pin, ((byte >> j) & 0x1));
    b32c:	e51b3010 	ldr	r3, [fp, #-16]
    b330:	e5931004 	ldr	r1, [r3, #4]
    b334:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
    b338:	e51b3008 	ldr	r3, [fp, #-8]
    b33c:	e1a03352 	asr	r3, r2, r3
    b340:	e2033001 	and	r3, r3, #1
    b344:	e3530000 	cmp	r3, #0
    b348:	13a03001 	movne	r3, #1
    b34c:	03a03000 	moveq	r3, #0
    b350:	e6ef3073 	uxtb	r3, r3
    b354:	e1a02003 	mov	r2, r3
    b358:	e59f00d0 	ldr	r0, [pc, #208]	; b430 <_ZN15CShift_Register8Shift_InEh+0x160>
    b35c:	ebfff46a 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:115
        sGPIO.Set_Output(mClock_Pin, true);
    b360:	e51b3010 	ldr	r3, [fp, #-16]
    b364:	e5933008 	ldr	r3, [r3, #8]
    b368:	e3a02001 	mov	r2, #1
    b36c:	e1a01003 	mov	r1, r3
    b370:	e59f00b8 	ldr	r0, [pc, #184]	; b430 <_ZN15CShift_Register8Shift_InEh+0x160>
    b374:	ebfff464 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117

        for (i = 0; i < 0x10; i++)
    b378:	e3a03000 	mov	r3, #0
    b37c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 3)
    b380:	e51b300c 	ldr	r3, [fp, #-12]
    b384:	e353000f 	cmp	r3, #15
    b388:	d3a03001 	movle	r3, #1
    b38c:	c3a03000 	movgt	r3, #0
    b390:	e6ef3073 	uxtb	r3, r3
    b394:	e3530000 	cmp	r3, #0
    b398:	0a000003 	beq	b3ac <_ZN15CShift_Register8Shift_InEh+0xdc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 2)
    b39c:	e51b300c 	ldr	r3, [fp, #-12]
    b3a0:	e2833001 	add	r3, r3, #1
    b3a4:	e50b300c 	str	r3, [fp, #-12]
    b3a8:	eafffff4 	b	b380 <_ZN15CShift_Register8Shift_InEh+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:120
            ;

        sGPIO.Set_Output(mClock_Pin, false);
    b3ac:	e51b3010 	ldr	r3, [fp, #-16]
    b3b0:	e5933008 	ldr	r3, [r3, #8]
    b3b4:	e3a02000 	mov	r2, #0
    b3b8:	e1a01003 	mov	r1, r3
    b3bc:	e59f006c 	ldr	r0, [pc, #108]	; b430 <_ZN15CShift_Register8Shift_InEh+0x160>
    b3c0:	ebfff451 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122

        for (i = 0; i < 0x10; i++)
    b3c4:	e3a03000 	mov	r3, #0
    b3c8:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 3)
    b3cc:	e51b300c 	ldr	r3, [fp, #-12]
    b3d0:	e353000f 	cmp	r3, #15
    b3d4:	d3a03001 	movle	r3, #1
    b3d8:	c3a03000 	movgt	r3, #0
    b3dc:	e6ef3073 	uxtb	r3, r3
    b3e0:	e3530000 	cmp	r3, #0
    b3e4:	0a000003 	beq	b3f8 <_ZN15CShift_Register8Shift_InEh+0x128>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 2)
    b3e8:	e51b300c 	ldr	r3, [fp, #-12]
    b3ec:	e2833001 	add	r3, r3, #1
    b3f0:	e50b300c 	str	r3, [fp, #-12]
    b3f4:	eafffff4 	b	b3cc <_ZN15CShift_Register8Shift_InEh+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 2)
    for (int j = 7; j >= 0; j--)
    b3f8:	e51b3008 	ldr	r3, [fp, #-8]
    b3fc:	e2433001 	sub	r3, r3, #1
    b400:	e50b3008 	str	r3, [fp, #-8]
    b404:	eaffffc5 	b	b320 <_ZN15CShift_Register8Shift_InEh+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:127
            ;
    }

    // propiseme bank na vystup
    sGPIO.Set_Output(mLatch_Pin, true);
    b408:	e51b3010 	ldr	r3, [fp, #-16]
    b40c:	e5933000 	ldr	r3, [r3]
    b410:	e3a02001 	mov	r2, #1
    b414:	e1a01003 	mov	r1, r3
    b418:	e59f0010 	ldr	r0, [pc, #16]	; b430 <_ZN15CShift_Register8Shift_InEh+0x160>
    b41c:	ebfff43a 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
    b420:	ea000000 	b	b428 <_ZN15CShift_Register8Shift_InEh+0x158>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:104
        return;
    b424:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b428:	e24bd004 	sub	sp, fp, #4
    b42c:	e8bd8800 	pop	{fp, pc}
    b430:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000b434 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b434:	e92d4800 	push	{fp, lr}
    b438:	e28db004 	add	fp, sp, #4
    b43c:	e24dd008 	sub	sp, sp, #8
    b440:	e50b0008 	str	r0, [fp, #-8]
    b444:	e50b100c 	str	r1, [fp, #-12]
    b448:	e51b3008 	ldr	r3, [fp, #-8]
    b44c:	e3530001 	cmp	r3, #1
    b450:	1a000008 	bne	b478 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128 (discriminator 1)
    b454:	e51b300c 	ldr	r3, [fp, #-12]
    b458:	e59f2024 	ldr	r2, [pc, #36]	; b484 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b45c:	e1530002 	cmp	r3, r2
    b460:	1a000004 	bne	b478 <_Z41__static_initialization_and_destruction_0ii+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:5
CShift_Register sShift_Register(2, 3, 4);
    b464:	e3a03004 	mov	r3, #4
    b468:	e3a02003 	mov	r2, #3
    b46c:	e3a01002 	mov	r1, #2
    b470:	e59f0010 	ldr	r0, [pc, #16]	; b488 <_Z41__static_initialization_and_destruction_0ii+0x54>
    b474:	ebfffe9a 	bl	aee4 <_ZN15CShift_RegisterC1Ejjj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b478:	e320f000 	nop	{0}
    b47c:	e24bd004 	sub	sp, fp, #4
    b480:	e8bd8800 	pop	{fp, pc}
    b484:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b488:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000b48c <_GLOBAL__sub_I_sShift_Register>:
_GLOBAL__sub_I_sShift_Register():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b48c:	e92d4800 	push	{fp, lr}
    b490:	e28db004 	add	fp, sp, #4
    b494:	e59f1008 	ldr	r1, [pc, #8]	; b4a4 <_GLOBAL__sub_I_sShift_Register+0x18>
    b498:	e3a00001 	mov	r0, #1
    b49c:	ebffffe4 	bl	b434 <_Z41__static_initialization_and_destruction_0ii>
    b4a0:	e8bd8800 	pop	{fp, pc}
    b4a4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b4a8 <_ZN6CTimerC1Em>:
_ZN6CTimerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:26
    uint16_t unused_4 : 10;
};

#pragma pack(pop)

CTimer::CTimer(unsigned long timer_reg_base)
    b4a8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b4ac:	e28db000 	add	fp, sp, #0
    b4b0:	e24dd00c 	sub	sp, sp, #12
    b4b4:	e50b0008 	str	r0, [fp, #-8]
    b4b8:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:27
: mTimer_Regs(reinterpret_cast<unsigned int*>(timer_reg_base))
    b4bc:	e51b200c 	ldr	r2, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:28
, mCallback(nullptr)
    b4c0:	e51b3008 	ldr	r3, [fp, #-8]
    b4c4:	e5832000 	str	r2, [r3]
    b4c8:	e51b3008 	ldr	r3, [fp, #-8]
    b4cc:	e3a02000 	mov	r2, #0
    b4d0:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:31
{
    //
}
    b4d4:	e51b3008 	ldr	r3, [fp, #-8]
    b4d8:	e1a00003 	mov	r0, r3
    b4dc:	e28bd000 	add	sp, fp, #0
    b4e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b4e4:	e12fff1e 	bx	lr

0000b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>:
_ZN6CTimer4RegsEN3hal9Timer_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:34

volatile unsigned int& CTimer::Regs(hal::Timer_Reg reg)
{
    b4e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b4ec:	e28db000 	add	fp, sp, #0
    b4f0:	e24dd00c 	sub	sp, sp, #12
    b4f4:	e50b0008 	str	r0, [fp, #-8]
    b4f8:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:35
    return mTimer_Regs[static_cast<unsigned int>(reg)];
    b4fc:	e51b3008 	ldr	r3, [fp, #-8]
    b500:	e5932000 	ldr	r2, [r3]
    b504:	e51b300c 	ldr	r3, [fp, #-12]
    b508:	e1a03103 	lsl	r3, r3, #2
    b50c:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:36
}
    b510:	e1a00003 	mov	r0, r3
    b514:	e28bd000 	add	sp, fp, #0
    b518:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b51c:	e12fff1e 	bx	lr

0000b520 <_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler>:
_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:39

void CTimer::Enable(TTimer_Callback callback, unsigned int delay, NTimer_Prescaler prescaler)
{
    b520:	e92d4810 	push	{r4, fp, lr}
    b524:	e28db008 	add	fp, sp, #8
    b528:	e24dd01c 	sub	sp, sp, #28
    b52c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    b530:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    b534:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    b538:	e54b3021 	strb	r3, [fp, #-33]	; 0xffffffdf
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:40
    Regs(hal::Timer_Reg::Load) = delay;
    b53c:	e3a01000 	mov	r1, #0
    b540:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b544:	ebffffe7 	bl	b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b548:	e1a02000 	mov	r2, r0
    b54c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    b550:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:43

    TTimer_Ctl_Flags reg;
    reg.counter_32b = 1;
    b554:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b558:	e3833002 	orr	r3, r3, #2
    b55c:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:44
    reg.interrupt_enabled = 1;
    b560:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b564:	e3833020 	orr	r3, r3, #32
    b568:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:45
    reg.timer_enabled = 1;
    b56c:	e55b3014 	ldrb	r3, [fp, #-20]	; 0xffffffec
    b570:	e3833080 	orr	r3, r3, #128	; 0x80
    b574:	e54b3014 	strb	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:46
    reg.prescaler = static_cast<uint8_t>(prescaler);
    b578:	e55b3021 	ldrb	r3, [fp, #-33]	; 0xffffffdf
    b57c:	e2033003 	and	r3, r3, #3
    b580:	e6ef3073 	uxtb	r3, r3
    b584:	e55b2014 	ldrb	r2, [fp, #-20]	; 0xffffffec
    b588:	e2033003 	and	r3, r3, #3
    b58c:	e3c2200c 	bic	r2, r2, #12
    b590:	e1a03103 	lsl	r3, r3, #2
    b594:	e1833002 	orr	r3, r3, r2
    b598:	e1a02003 	mov	r2, r3
    b59c:	e54b2014 	strb	r2, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:48

    Regs(hal::Timer_Reg::Control) = *reinterpret_cast<unsigned int*>(&reg);
    b5a0:	e24b4014 	sub	r4, fp, #20
    b5a4:	e3a01002 	mov	r1, #2
    b5a8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b5ac:	ebffffcd 	bl	b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b5b0:	e1a02000 	mov	r2, r0
    b5b4:	e5943000 	ldr	r3, [r4]
    b5b8:	e5823000 	str	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:50

    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b5bc:	e3a01003 	mov	r1, #3
    b5c0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    b5c4:	ebffffc7 	bl	b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b5c8:	e1a03000 	mov	r3, r0
    b5cc:	e3a02001 	mov	r2, #1
    b5d0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:52

    mCallback = callback;
    b5d4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    b5d8:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    b5dc:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:53
}
    b5e0:	e320f000 	nop	{0}
    b5e4:	e24bd008 	sub	sp, fp, #8
    b5e8:	e8bd8810 	pop	{r4, fp, pc}

0000b5ec <_ZN6CTimer7DisableEv>:
_ZN6CTimer7DisableEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:56

void CTimer::Disable()
{
    b5ec:	e92d4800 	push	{fp, lr}
    b5f0:	e28db004 	add	fp, sp, #4
    b5f4:	e24dd010 	sub	sp, sp, #16
    b5f8:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:57
    volatile TTimer_Ctl_Flags& reg = reinterpret_cast<volatile TTimer_Ctl_Flags&>(Regs(hal::Timer_Reg::Control));
    b5fc:	e3a01002 	mov	r1, #2
    b600:	e51b0010 	ldr	r0, [fp, #-16]
    b604:	ebffffb7 	bl	b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b608:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:59

    reg.interrupt_enabled = 0;
    b60c:	e51b2008 	ldr	r2, [fp, #-8]
    b610:	e5d23000 	ldrb	r3, [r2]
    b614:	e3c33020 	bic	r3, r3, #32
    b618:	e5c23000 	strb	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:60
    reg.timer_enabled = 0;
    b61c:	e51b2008 	ldr	r2, [fp, #-8]
    b620:	e5d23000 	ldrb	r3, [r2]
    b624:	e3c33080 	bic	r3, r3, #128	; 0x80
    b628:	e5c23000 	strb	r3, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:61
}
    b62c:	e320f000 	nop	{0}
    b630:	e24bd004 	sub	sp, fp, #4
    b634:	e8bd8800 	pop	{fp, pc}

0000b638 <_ZN6CTimer12IRQ_CallbackEv>:
_ZN6CTimer12IRQ_CallbackEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:64

void CTimer::IRQ_Callback()
{
    b638:	e92d4800 	push	{fp, lr}
    b63c:	e28db004 	add	fp, sp, #4
    b640:	e24dd008 	sub	sp, sp, #8
    b644:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:65
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b648:	e3a01003 	mov	r1, #3
    b64c:	e51b0008 	ldr	r0, [fp, #-8]
    b650:	ebffffa4 	bl	b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b654:	e1a03000 	mov	r3, r0
    b658:	e3a02001 	mov	r2, #1
    b65c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:67

    if (mCallback)
    b660:	e51b3008 	ldr	r3, [fp, #-8]
    b664:	e5933004 	ldr	r3, [r3, #4]
    b668:	e3530000 	cmp	r3, #0
    b66c:	0a000002 	beq	b67c <_ZN6CTimer12IRQ_CallbackEv+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:68
        mCallback();
    b670:	e51b3008 	ldr	r3, [fp, #-8]
    b674:	e5933004 	ldr	r3, [r3, #4]
    b678:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:69
}
    b67c:	e320f000 	nop	{0}
    b680:	e24bd004 	sub	sp, fp, #4
    b684:	e8bd8800 	pop	{fp, pc}

0000b688 <_ZN6CTimer20Is_Timer_IRQ_PendingEv>:
_ZN6CTimer20Is_Timer_IRQ_PendingEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:72

bool CTimer::Is_Timer_IRQ_Pending()
{
    b688:	e92d4800 	push	{fp, lr}
    b68c:	e28db004 	add	fp, sp, #4
    b690:	e24dd008 	sub	sp, sp, #8
    b694:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:73
    return Regs(hal::Timer_Reg::IRQ_Masked);
    b698:	e3a01005 	mov	r1, #5
    b69c:	e51b0008 	ldr	r0, [fp, #-8]
    b6a0:	ebffff90 	bl	b4e8 <_ZN6CTimer4RegsEN3hal9Timer_RegE>
    b6a4:	e1a03000 	mov	r3, r0
    b6a8:	e5933000 	ldr	r3, [r3]
    b6ac:	e3530000 	cmp	r3, #0
    b6b0:	13a03001 	movne	r3, #1
    b6b4:	03a03000 	moveq	r3, #0
    b6b8:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b6bc:	e1a00003 	mov	r0, r3
    b6c0:	e24bd004 	sub	sp, fp, #4
    b6c4:	e8bd8800 	pop	{fp, pc}

0000b6c8 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b6c8:	e92d4800 	push	{fp, lr}
    b6cc:	e28db004 	add	fp, sp, #4
    b6d0:	e24dd008 	sub	sp, sp, #8
    b6d4:	e50b0008 	str	r0, [fp, #-8]
    b6d8:	e50b100c 	str	r1, [fp, #-12]
    b6dc:	e51b3008 	ldr	r3, [fp, #-8]
    b6e0:	e3530001 	cmp	r3, #1
    b6e4:	1a000006 	bne	b704 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74 (discriminator 1)
    b6e8:	e51b300c 	ldr	r3, [fp, #-12]
    b6ec:	e59f201c 	ldr	r2, [pc, #28]	; b710 <_Z41__static_initialization_and_destruction_0ii+0x48>
    b6f0:	e1530002 	cmp	r3, r2
    b6f4:	1a000002 	bne	b704 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:4
CTimer sTimer(hal::Timer_Base);
    b6f8:	e59f1014 	ldr	r1, [pc, #20]	; b714 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    b6fc:	e59f0014 	ldr	r0, [pc, #20]	; b718 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b700:	ebffff68 	bl	b4a8 <_ZN6CTimerC1Em>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b704:	e320f000 	nop	{0}
    b708:	e24bd004 	sub	sp, fp, #4
    b70c:	e8bd8800 	pop	{fp, pc}
    b710:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b714:	2000b400 	andcs	fp, r0, r0, lsl #8
    b718:	0000ffb4 			; <UNDEFINED> instruction: 0x0000ffb4

0000b71c <_GLOBAL__sub_I_sTimer>:
_GLOBAL__sub_I_sTimer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b71c:	e92d4800 	push	{fp, lr}
    b720:	e28db004 	add	fp, sp, #4
    b724:	e59f1008 	ldr	r1, [pc, #8]	; b734 <_GLOBAL__sub_I_sTimer+0x18>
    b728:	e3a00001 	mov	r0, #1
    b72c:	ebffffe5 	bl	b6c8 <_Z41__static_initialization_and_destruction_0ii>
    b730:	e8bd8800 	pop	{fp, pc}
    b734:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b738 <_ZN5CTRNGC1Ej>:
_ZN5CTRNGC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:8
CTRNG sTRNG(hal::TRNG_Base);

// tolik cisel ze zacatku generovani bude zahozeno - jsou "mene nahodna"
constexpr uint32_t TRNG_Warmup_Count = 0x40000;

CTRNG::CTRNG(uint32_t trng_reg_base)
    b738:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b73c:	e28db000 	add	fp, sp, #0
    b740:	e24dd00c 	sub	sp, sp, #12
    b744:	e50b0008 	str	r0, [fp, #-8]
    b748:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:10
: mTrng_Regs(reinterpret_cast<volatile unsigned int* const>(trng_reg_base))
, mOpened(0)
    b74c:	e51b200c 	ldr	r2, [fp, #-12]
    b750:	e51b3008 	ldr	r3, [fp, #-8]
    b754:	e5832000 	str	r2, [r3]
    b758:	e51b3008 	ldr	r3, [fp, #-8]
    b75c:	e3a02000 	mov	r2, #0
    b760:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:13
{
    //
}
    b764:	e51b3008 	ldr	r3, [fp, #-8]
    b768:	e1a00003 	mov	r0, r3
    b76c:	e28bd000 	add	sp, fp, #0
    b770:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b774:	e12fff1e 	bx	lr

0000b778 <_ZN5CTRNG4OpenEb>:
_ZN5CTRNG4OpenEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:16

bool CTRNG::Open(bool exclusive)
{
    b778:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b77c:	e28db000 	add	fp, sp, #0
    b780:	e24dd00c 	sub	sp, sp, #12
    b784:	e50b0008 	str	r0, [fp, #-8]
    b788:	e1a03001 	mov	r3, r1
    b78c:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19
    // TODO: zamek

    if (mOpened && exclusive)
    b790:	e51b3008 	ldr	r3, [fp, #-8]
    b794:	e5933004 	ldr	r3, [r3, #4]
    b798:	e3530000 	cmp	r3, #0
    b79c:	0a000004 	beq	b7b4 <_ZN5CTRNG4OpenEb+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19 (discriminator 1)
    b7a0:	e55b3009 	ldrb	r3, [fp, #-9]
    b7a4:	e3530000 	cmp	r3, #0
    b7a8:	0a000001 	beq	b7b4 <_ZN5CTRNG4OpenEb+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:20
        return false;
    b7ac:	e3a03000 	mov	r3, #0
    b7b0:	ea000026 	b	b850 <_ZN5CTRNG4OpenEb+0xd8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:22

    mOpened++;
    b7b4:	e51b3008 	ldr	r3, [fp, #-8]
    b7b8:	e5933004 	ldr	r3, [r3, #4]
    b7bc:	e2832001 	add	r2, r3, #1
    b7c0:	e51b3008 	ldr	r3, [fp, #-8]
    b7c4:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:24

    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] = TRNG_Warmup_Count;
    b7c8:	e51b3008 	ldr	r3, [fp, #-8]
    b7cc:	e5933000 	ldr	r3, [r3]
    b7d0:	e2833004 	add	r3, r3, #4
    b7d4:	e3a02701 	mov	r2, #262144	; 0x40000
    b7d8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:25
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Int_Mask)] |=
    b7dc:	e51b3008 	ldr	r3, [fp, #-8]
    b7e0:	e5933000 	ldr	r3, [r3]
    b7e4:	e2833010 	add	r3, r3, #16
    b7e8:	e5932000 	ldr	r2, [r3]
    b7ec:	e51b3008 	ldr	r3, [fp, #-8]
    b7f0:	e5933000 	ldr	r3, [r3]
    b7f4:	e2833010 	add	r3, r3, #16
    b7f8:	e3822001 	orr	r2, r2, #1
    b7fc:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:27
    1; // vypneme preruseni pro TRNG (tak ho pouzivat nechceme)
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] |= 1; // zapneme TRNG
    b800:	e51b3008 	ldr	r3, [fp, #-8]
    b804:	e5933000 	ldr	r3, [r3]
    b808:	e5932000 	ldr	r2, [r3]
    b80c:	e51b3008 	ldr	r3, [fp, #-8]
    b810:	e5933000 	ldr	r3, [r3]
    b814:	e3822001 	orr	r2, r2, #1
    b818:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:30

    // pockame, dokud TRNG nenageneruje warmup cisla (ty co zahazujeme)
    while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    b81c:	e51b3008 	ldr	r3, [fp, #-8]
    b820:	e5933000 	ldr	r3, [r3]
    b824:	e2833004 	add	r3, r3, #4
    b828:	e5933000 	ldr	r3, [r3]
    b82c:	e1a03c23 	lsr	r3, r3, #24
    b830:	e3530000 	cmp	r3, #0
    b834:	03a03001 	moveq	r3, #1
    b838:	13a03000 	movne	r3, #0
    b83c:	e6ef3073 	uxtb	r3, r3
    b840:	e3530000 	cmp	r3, #0
    b844:	0a000000 	beq	b84c <_ZN5CTRNG4OpenEb+0xd4>
    b848:	eafffff3 	b	b81c <_ZN5CTRNG4OpenEb+0xa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:33
        ;

    return true;
    b84c:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:34
}
    b850:	e1a00003 	mov	r0, r3
    b854:	e28bd000 	add	sp, fp, #0
    b858:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b85c:	e12fff1e 	bx	lr

0000b860 <_ZN5CTRNG5CloseEv>:
_ZN5CTRNG5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:37

void CTRNG::Close()
{
    b860:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b864:	e28db000 	add	fp, sp, #0
    b868:	e24dd00c 	sub	sp, sp, #12
    b86c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:38
    if (!mOpened)
    b870:	e51b3008 	ldr	r3, [fp, #-8]
    b874:	e5933004 	ldr	r3, [r3, #4]
    b878:	e3530000 	cmp	r3, #0
    b87c:	0a00000d 	beq	b8b8 <_ZN5CTRNG5CloseEv+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:41
        return;

    mOpened--;
    b880:	e51b3008 	ldr	r3, [fp, #-8]
    b884:	e5933004 	ldr	r3, [r3, #4]
    b888:	e2432001 	sub	r2, r3, #1
    b88c:	e51b3008 	ldr	r3, [fp, #-8]
    b890:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:43

    if (mOpened == 0)
    b894:	e51b3008 	ldr	r3, [fp, #-8]
    b898:	e5933004 	ldr	r3, [r3, #4]
    b89c:	e3530000 	cmp	r3, #0
    b8a0:	1a000005 	bne	b8bc <_ZN5CTRNG5CloseEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:44
        mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] = 0;
    b8a4:	e51b3008 	ldr	r3, [fp, #-8]
    b8a8:	e5933000 	ldr	r3, [r3]
    b8ac:	e3a02000 	mov	r2, #0
    b8b0:	e5832000 	str	r2, [r3]
    b8b4:	ea000000 	b	b8bc <_ZN5CTRNG5CloseEv+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:39
        return;
    b8b8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:45
}
    b8bc:	e28bd000 	add	sp, fp, #0
    b8c0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b8c4:	e12fff1e 	bx	lr

0000b8c8 <_ZNK5CTRNG9Is_OpenedEv>:
_ZNK5CTRNG9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:48

bool CTRNG::Is_Opened() const
{
    b8c8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b8cc:	e28db000 	add	fp, sp, #0
    b8d0:	e24dd00c 	sub	sp, sp, #12
    b8d4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:49
    return (mOpened > 0);
    b8d8:	e51b3008 	ldr	r3, [fp, #-8]
    b8dc:	e5933004 	ldr	r3, [r3, #4]
    b8e0:	e3530000 	cmp	r3, #0
    b8e4:	13a03001 	movne	r3, #1
    b8e8:	03a03000 	moveq	r3, #0
    b8ec:	e6ef3073 	uxtb	r3, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:50
}
    b8f0:	e1a00003 	mov	r0, r3
    b8f4:	e28bd000 	add	sp, fp, #0
    b8f8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b8fc:	e12fff1e 	bx	lr

0000b900 <_ZN5CTRNG17Get_Random_NumberEv>:
_ZN5CTRNG17Get_Random_NumberEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:53

uint32_t CTRNG::Get_Random_Number()
{
    b900:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    b904:	e28db000 	add	fp, sp, #0
    b908:	e24dd00c 	sub	sp, sp, #12
    b90c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:54
    if (mOpened == 0)
    b910:	e51b3008 	ldr	r3, [fp, #-8]
    b914:	e5933004 	ldr	r3, [r3, #4]
    b918:	e3530000 	cmp	r3, #0
    b91c:	1a000001 	bne	b928 <_ZN5CTRNG17Get_Random_NumberEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:55
        return 4; // https://xkcd.com/221/
    b920:	e3a03004 	mov	r3, #4
    b924:	ea000003 	b	b938 <_ZN5CTRNG17Get_Random_NumberEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:61

    // az budeme umet blokovat procesy, tak tady by melo byt opet cekani na entropii:
    // while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    //    ;

    return mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Data)];
    b928:	e51b3008 	ldr	r3, [fp, #-8]
    b92c:	e5933000 	ldr	r3, [r3]
    b930:	e2833008 	add	r3, r3, #8
    b934:	e5933000 	ldr	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b938:	e1a00003 	mov	r0, r3
    b93c:	e28bd000 	add	sp, fp, #0
    b940:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    b944:	e12fff1e 	bx	lr

0000b948 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b948:	e92d4800 	push	{fp, lr}
    b94c:	e28db004 	add	fp, sp, #4
    b950:	e24dd008 	sub	sp, sp, #8
    b954:	e50b0008 	str	r0, [fp, #-8]
    b958:	e50b100c 	str	r1, [fp, #-12]
    b95c:	e51b3008 	ldr	r3, [fp, #-8]
    b960:	e3530001 	cmp	r3, #1
    b964:	1a000006 	bne	b984 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62 (discriminator 1)
    b968:	e51b300c 	ldr	r3, [fp, #-12]
    b96c:	e59f201c 	ldr	r2, [pc, #28]	; b990 <_Z41__static_initialization_and_destruction_0ii+0x48>
    b970:	e1530002 	cmp	r3, r2
    b974:	1a000002 	bne	b984 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:3
CTRNG sTRNG(hal::TRNG_Base);
    b978:	e59f1014 	ldr	r1, [pc, #20]	; b994 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    b97c:	e59f0014 	ldr	r0, [pc, #20]	; b998 <_Z41__static_initialization_and_destruction_0ii+0x50>
    b980:	ebffff6c 	bl	b738 <_ZN5CTRNGC1Ej>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b984:	e320f000 	nop	{0}
    b988:	e24bd004 	sub	sp, fp, #4
    b98c:	e8bd8800 	pop	{fp, pc}
    b990:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    b994:	20104000 	andscs	r4, r0, r0
    b998:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc

0000b99c <_GLOBAL__sub_I_sTRNG>:
_GLOBAL__sub_I_sTRNG():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b99c:	e92d4800 	push	{fp, lr}
    b9a0:	e28db004 	add	fp, sp, #4
    b9a4:	e59f1008 	ldr	r1, [pc, #8]	; b9b4 <_GLOBAL__sub_I_sTRNG+0x18>
    b9a8:	e3a00001 	mov	r0, #1
    b9ac:	ebffffe5 	bl	b948 <_Z41__static_initialization_and_destruction_0ii>
    b9b0:	e8bd8800 	pop	{fp, pc}
    b9b4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000b9b8 <_ZN11CFilesystemC1Ev>:
_ZN11CFilesystemC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:10

#include <stdstring.h>

CFilesystem sFilesystem;

CFilesystem::CFilesystem()
    b9b8:	e92d4800 	push	{fp, lr}
    b9bc:	e28db004 	add	fp, sp, #4
    b9c0:	e24dd008 	sub	sp, sp, #8
    b9c4:	e50b0008 	str	r0, [fp, #-8]
    b9c8:	e51b3008 	ldr	r3, [fp, #-8]
    b9cc:	e1a00003 	mov	r0, r3
    b9d0:	eb00020f 	bl	c214 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    b9d4:	e51b3008 	ldr	r3, [fp, #-8]
    b9d8:	e2833024 	add	r3, r3, #36	; 0x24
    b9dc:	e1a00003 	mov	r0, r3
    b9e0:	eb00020b 	bl	c214 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    b9e4:	e51b3008 	ldr	r3, [fp, #-8]
    b9e8:	e2833048 	add	r3, r3, #72	; 0x48
    b9ec:	e1a00003 	mov	r0, r3
    b9f0:	eb000207 	bl	c214 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
    b9f4:	e51b3008 	ldr	r3, [fp, #-8]
    b9f8:	e283306c 	add	r3, r3, #108	; 0x6c
    b9fc:	e1a00003 	mov	r0, r3
    ba00:	eb000203 	bl	c214 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:14
{
    // inicializujeme zakladni strukturu (tedy vlastne obsah root adresare)

    mRoot.parent = nullptr;
    ba04:	e51b3008 	ldr	r3, [fp, #-8]
    ba08:	e3a02000 	mov	r2, #0
    ba0c:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:15
    mRoot.next = nullptr;
    ba10:	e51b3008 	ldr	r3, [fp, #-8]
    ba14:	e3a02000 	mov	r2, #0
    ba18:	e5832020 	str	r2, [r3, #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:16
    mRoot.children = &mRoot_Dev;
    ba1c:	e51b3008 	ldr	r3, [fp, #-8]
    ba20:	e2832024 	add	r2, r3, #36	; 0x24
    ba24:	e51b3008 	ldr	r3, [fp, #-8]
    ba28:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:17
    mRoot.isDirectory = true;
    ba2c:	e51b3008 	ldr	r3, [fp, #-8]
    ba30:	e3a02001 	mov	r2, #1
    ba34:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:18
    mRoot.driver_idx = NoFilesystemDriver;
    ba38:	e51b3008 	ldr	r3, [fp, #-8]
    ba3c:	e3e02000 	mvn	r2, #0
    ba40:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:19
    mRoot.name[0] = '\0';
    ba44:	e51b3008 	ldr	r3, [fp, #-8]
    ba48:	e3a02000 	mov	r2, #0
    ba4c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:21

    mRoot_Dev.parent = &mRoot;
    ba50:	e51b2008 	ldr	r2, [fp, #-8]
    ba54:	e51b3008 	ldr	r3, [fp, #-8]
    ba58:	e583203c 	str	r2, [r3, #60]	; 0x3c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:22
    mRoot_Dev.children = nullptr;
    ba5c:	e51b3008 	ldr	r3, [fp, #-8]
    ba60:	e3a02000 	mov	r2, #0
    ba64:	e5832040 	str	r2, [r3, #64]	; 0x40
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:23
    mRoot_Dev.next = &mRoot_Sys;
    ba68:	e51b3008 	ldr	r3, [fp, #-8]
    ba6c:	e2832048 	add	r2, r3, #72	; 0x48
    ba70:	e51b3008 	ldr	r3, [fp, #-8]
    ba74:	e5832044 	str	r2, [r3, #68]	; 0x44
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:24
    mRoot_Dev.isDirectory = true;
    ba78:	e51b3008 	ldr	r3, [fp, #-8]
    ba7c:	e3a02001 	mov	r2, #1
    ba80:	e5c32034 	strb	r2, [r3, #52]	; 0x34
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:25
    mRoot_Dev.driver_idx = NoFilesystemDriver;
    ba84:	e51b3008 	ldr	r3, [fp, #-8]
    ba88:	e3e02000 	mvn	r2, #0
    ba8c:	e5832038 	str	r2, [r3, #56]	; 0x38
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:26
    strncpy(mRoot_Dev.name, "DEV", 4);
    ba90:	e51b3008 	ldr	r3, [fp, #-8]
    ba94:	e2833024 	add	r3, r3, #36	; 0x24
    ba98:	e3a02004 	mov	r2, #4
    ba9c:	e59f10c0 	ldr	r1, [pc, #192]	; bb64 <_ZN11CFilesystemC1Ev+0x1ac>
    baa0:	e1a00003 	mov	r0, r3
    baa4:	eb000df2 	bl	f274 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:28

    mRoot_Sys.parent = &mRoot;
    baa8:	e51b2008 	ldr	r2, [fp, #-8]
    baac:	e51b3008 	ldr	r3, [fp, #-8]
    bab0:	e5832060 	str	r2, [r3, #96]	; 0x60
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:29
    mRoot_Sys.children = nullptr;
    bab4:	e51b3008 	ldr	r3, [fp, #-8]
    bab8:	e3a02000 	mov	r2, #0
    babc:	e5832064 	str	r2, [r3, #100]	; 0x64
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:30
    mRoot_Sys.next = &mRoot_Mnt;
    bac0:	e51b3008 	ldr	r3, [fp, #-8]
    bac4:	e283206c 	add	r2, r3, #108	; 0x6c
    bac8:	e51b3008 	ldr	r3, [fp, #-8]
    bacc:	e5832068 	str	r2, [r3, #104]	; 0x68
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:31
    mRoot_Sys.isDirectory = true;
    bad0:	e51b3008 	ldr	r3, [fp, #-8]
    bad4:	e3a02001 	mov	r2, #1
    bad8:	e5c32058 	strb	r2, [r3, #88]	; 0x58
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:32
    mRoot_Sys.driver_idx = NoFilesystemDriver;
    badc:	e51b3008 	ldr	r3, [fp, #-8]
    bae0:	e3e02000 	mvn	r2, #0
    bae4:	e583205c 	str	r2, [r3, #92]	; 0x5c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:33
    strncpy(mRoot_Sys.name, "SYS", 4);
    bae8:	e51b3008 	ldr	r3, [fp, #-8]
    baec:	e2833048 	add	r3, r3, #72	; 0x48
    baf0:	e3a02004 	mov	r2, #4
    baf4:	e59f106c 	ldr	r1, [pc, #108]	; bb68 <_ZN11CFilesystemC1Ev+0x1b0>
    baf8:	e1a00003 	mov	r0, r3
    bafc:	eb000ddc 	bl	f274 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:35

    mRoot_Mnt.parent = &mRoot;
    bb00:	e51b2008 	ldr	r2, [fp, #-8]
    bb04:	e51b3008 	ldr	r3, [fp, #-8]
    bb08:	e5832084 	str	r2, [r3, #132]	; 0x84
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:36
    mRoot_Mnt.children = nullptr;
    bb0c:	e51b3008 	ldr	r3, [fp, #-8]
    bb10:	e3a02000 	mov	r2, #0
    bb14:	e5832088 	str	r2, [r3, #136]	; 0x88
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:37
    mRoot_Mnt.next = nullptr;
    bb18:	e51b3008 	ldr	r3, [fp, #-8]
    bb1c:	e3a02000 	mov	r2, #0
    bb20:	e583208c 	str	r2, [r3, #140]	; 0x8c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:38
    mRoot_Mnt.isDirectory = true;
    bb24:	e51b3008 	ldr	r3, [fp, #-8]
    bb28:	e3a02001 	mov	r2, #1
    bb2c:	e5c3207c 	strb	r2, [r3, #124]	; 0x7c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:39
    mRoot_Mnt.driver_idx = NoFilesystemDriver;
    bb30:	e51b3008 	ldr	r3, [fp, #-8]
    bb34:	e3e02000 	mvn	r2, #0
    bb38:	e5832080 	str	r2, [r3, #128]	; 0x80
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:40
    strncpy(mRoot_Mnt.name, "MNT", 4);
    bb3c:	e51b3008 	ldr	r3, [fp, #-8]
    bb40:	e283306c 	add	r3, r3, #108	; 0x6c
    bb44:	e3a02004 	mov	r2, #4
    bb48:	e59f101c 	ldr	r1, [pc, #28]	; bb6c <_ZN11CFilesystemC1Ev+0x1b4>
    bb4c:	e1a00003 	mov	r0, r3
    bb50:	eb000dc7 	bl	f274 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:41
}
    bb54:	e51b3008 	ldr	r3, [fp, #-8]
    bb58:	e1a00003 	mov	r0, r3
    bb5c:	e24bd004 	sub	sp, fp, #4
    bb60:	e8bd8800 	pop	{fp, pc}
    bb64:	0000f90c 	andeq	pc, r0, ip, lsl #18
    bb68:	0000f910 	andeq	pc, r0, r0, lsl r9	; <UNPREDICTABLE>
    bb6c:	0000f914 	andeq	pc, r0, r4, lsl r9	; <UNPREDICTABLE>

0000bb70 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>:
_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:44

CFilesystem::TFS_Tree_Node* CFilesystem::TFS_Tree_Node::Find_Child(const char* name)
{
    bb70:	e92d4800 	push	{fp, lr}
    bb74:	e28db004 	add	fp, sp, #4
    bb78:	e24dd010 	sub	sp, sp, #16
    bb7c:	e50b0010 	str	r0, [fp, #-16]
    bb80:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:45
    TFS_Tree_Node* child = children;
    bb84:	e51b3010 	ldr	r3, [fp, #-16]
    bb88:	e593301c 	ldr	r3, [r3, #28]
    bb8c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47

    while (child != nullptr)
    bb90:	e51b3008 	ldr	r3, [fp, #-8]
    bb94:	e3530000 	cmp	r3, #0
    bb98:	0a000011 	beq	bbe4 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:49
    {
        if (strncmp(child->name, name, MaxFilenameLength) == 0)
    bb9c:	e51b3008 	ldr	r3, [fp, #-8]
    bba0:	e3a02010 	mov	r2, #16
    bba4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
    bba8:	e1a00003 	mov	r0, r3
    bbac:	eb000de0 	bl	f334 <_Z7strncmpPKcS0_i>
    bbb0:	e1a03000 	mov	r3, r0
    bbb4:	e3530000 	cmp	r3, #0
    bbb8:	03a03001 	moveq	r3, #1
    bbbc:	13a03000 	movne	r3, #0
    bbc0:	e6ef3073 	uxtb	r3, r3
    bbc4:	e3530000 	cmp	r3, #0
    bbc8:	0a000001 	beq	bbd4 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:50
            return child;
    bbcc:	e51b3008 	ldr	r3, [fp, #-8]
    bbd0:	ea000004 	b	bbe8 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:52

        child = child->next;
    bbd4:	e51b3008 	ldr	r3, [fp, #-8]
    bbd8:	e5933020 	ldr	r3, [r3, #32]
    bbdc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bbe0:	eaffffea 	b	bb90 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:55
    }

    return nullptr;
    bbe4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:56
}
    bbe8:	e1a00003 	mov	r0, r3
    bbec:	e24bd004 	sub	sp, fp, #4
    bbf0:	e8bd8800 	pop	{fp, pc}

0000bbf4 <_ZN11CFilesystem10InitializeEv>:
_ZN11CFilesystem10InitializeEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:59

void CFilesystem::Initialize()
{
    bbf4:	e92d4800 	push	{fp, lr}
    bbf8:	e28db004 	add	fp, sp, #4
    bbfc:	e24dd030 	sub	sp, sp, #48	; 0x30
    bc00:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:60
    sMonitor << "Initializing the FS\n";
    bc04:	e59f1310 	ldr	r1, [pc, #784]	; bf1c <_ZN11CFilesystem10InitializeEv+0x328>
    bc08:	e59f0310 	ldr	r0, [pc, #784]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    bc0c:	ebfff60e 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67
    char tmpName[MaxFilenameLength];
    const char* mpPtr;

    int i, j;

    for (i = 0; i < gFS_Drivers_Count; i++)
    bc10:	e3a03000 	mov	r3, #0
    bc14:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 1)
    bc18:	e51b200c 	ldr	r2, [fp, #-12]
    bc1c:	e59f3300 	ldr	r3, [pc, #768]	; bf24 <_ZN11CFilesystem10InitializeEv+0x330>
    bc20:	e5933000 	ldr	r3, [r3]
    bc24:	e1520003 	cmp	r2, r3
    bc28:	2a0000b4 	bcs	bf00 <_ZN11CFilesystem10InitializeEv+0x30c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:69
    {
        const TFS_Driver* ptr = &gFS_Drivers[i];
    bc2c:	e51b200c 	ldr	r2, [fp, #-12]
    bc30:	e1a03002 	mov	r3, r2
    bc34:	e1a03083 	lsl	r3, r3, #1
    bc38:	e0833002 	add	r3, r3, r2
    bc3c:	e1a03183 	lsl	r3, r3, #3
    bc40:	e59f22e0 	ldr	r2, [pc, #736]	; bf28 <_ZN11CFilesystem10InitializeEv+0x334>
    bc44:	e0833002 	add	r3, r3, r2
    bc48:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:71

        mpPtr = ptr->mountPoint;
    bc4c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bc50:	e5933010 	ldr	r3, [r3, #16]
    bc54:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:73

        sMonitor << "mount point = " << mpPtr << "\n";
    bc58:	e59f12cc 	ldr	r1, [pc, #716]	; bf2c <_ZN11CFilesystem10InitializeEv+0x338>
    bc5c:	e59f02bc 	ldr	r0, [pc, #700]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    bc60:	ebfff5f9 	bl	944c <_ZN8CMonitorlsEPKc>
    bc64:	e1a03000 	mov	r3, r0
    bc68:	e51b1008 	ldr	r1, [fp, #-8]
    bc6c:	e1a00003 	mov	r0, r3
    bc70:	ebfff5f5 	bl	944c <_ZN8CMonitorlsEPKc>
    bc74:	e1a03000 	mov	r3, r0
    bc78:	e59f12b0 	ldr	r1, [pc, #688]	; bf30 <_ZN11CFilesystem10InitializeEv+0x33c>
    bc7c:	e1a00003 	mov	r0, r3
    bc80:	ebfff5f1 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:75

        TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bc84:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    bc88:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    bc8c:	e3a03000 	mov	r3, #0
    bc90:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77

        while (mpPtr[0] != '\0')
    bc94:	e51b3008 	ldr	r3, [fp, #-8]
    bc98:	e5d33000 	ldrb	r3, [r3]
    bc9c:	e3530000 	cmp	r3, #0
    bca0:	0a000083 	beq	beb4 <_ZN11CFilesystem10InitializeEv+0x2c0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79
        {
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bca4:	e3a03000 	mov	r3, #0
    bca8:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 1)
    bcac:	e51b3010 	ldr	r3, [fp, #-16]
    bcb0:	e353007f 	cmp	r3, #127	; 0x7f
    bcb4:	8a00001e 	bhi	bd34 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 2)
    bcb8:	e51b3010 	ldr	r3, [fp, #-16]
    bcbc:	e51b2008 	ldr	r2, [fp, #-8]
    bcc0:	e0823003 	add	r3, r2, r3
    bcc4:	e5d33000 	ldrb	r3, [r3]
    bcc8:	e3530000 	cmp	r3, #0
    bccc:	0a000018 	beq	bd34 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81
            {
                if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bcd0:	e51b3010 	ldr	r3, [fp, #-16]
    bcd4:	e51b2008 	ldr	r2, [fp, #-8]
    bcd8:	e0823003 	add	r3, r2, r3
    bcdc:	e5d33000 	ldrb	r3, [r3]
    bce0:	e353003a 	cmp	r3, #58	; 0x3a
    bce4:	0a000012 	beq	bd34 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:81 (discriminator 1)
    bce8:	e51b3010 	ldr	r3, [fp, #-16]
    bcec:	e51b2008 	ldr	r2, [fp, #-8]
    bcf0:	e0823003 	add	r3, r2, r3
    bcf4:	e5d33000 	ldrb	r3, [r3]
    bcf8:	e353002f 	cmp	r3, #47	; 0x2f
    bcfc:	0a00000c 	beq	bd34 <_ZN11CFilesystem10InitializeEv+0x140>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:84 (discriminator 3)
                    break;

                tmpName[j] = mpPtr[j];
    bd00:	e51b3010 	ldr	r3, [fp, #-16]
    bd04:	e51b2008 	ldr	r2, [fp, #-8]
    bd08:	e0823003 	add	r3, r2, r3
    bd0c:	e5d31000 	ldrb	r1, [r3]
    bd10:	e24b202c 	sub	r2, fp, #44	; 0x2c
    bd14:	e51b3010 	ldr	r3, [fp, #-16]
    bd18:	e0823003 	add	r3, r2, r3
    bd1c:	e1a02001 	mov	r2, r1
    bd20:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:79 (discriminator 3)
            for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bd24:	e51b3010 	ldr	r3, [fp, #-16]
    bd28:	e2833001 	add	r3, r3, #1
    bd2c:	e50b3010 	str	r3, [fp, #-16]
    bd30:	eaffffdd 	b	bcac <_ZN11CFilesystem10InitializeEv+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:87
            }

            tmpName[j] = '\0';
    bd34:	e24b202c 	sub	r2, fp, #44	; 0x2c
    bd38:	e51b3010 	ldr	r3, [fp, #-16]
    bd3c:	e0823003 	add	r3, r2, r3
    bd40:	e3a02000 	mov	r2, #0
    bd44:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:89

            mpPtr += j;
    bd48:	e51b3010 	ldr	r3, [fp, #-16]
    bd4c:	e51b2008 	ldr	r2, [fp, #-8]
    bd50:	e0823003 	add	r3, r2, r3
    bd54:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:90
            if (mpPtr[0] != '\0')
    bd58:	e51b3008 	ldr	r3, [fp, #-8]
    bd5c:	e5d33000 	ldrb	r3, [r3]
    bd60:	e3530000 	cmp	r3, #0
    bd64:	0a000002 	beq	bd74 <_ZN11CFilesystem10InitializeEv+0x180>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:92
            {
                mpPtr += 1;
    bd68:	e51b3008 	ldr	r3, [fp, #-8]
    bd6c:	e2833001 	add	r3, r3, #1
    bd70:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:95
            }

            sMonitor << "finding child = " << tmpName << '\n';
    bd74:	e59f11b8 	ldr	r1, [pc, #440]	; bf34 <_ZN11CFilesystem10InitializeEv+0x340>
    bd78:	e59f01a0 	ldr	r0, [pc, #416]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    bd7c:	ebfff5b2 	bl	944c <_ZN8CMonitorlsEPKc>
    bd80:	e1a02000 	mov	r2, r0
    bd84:	e24b302c 	sub	r3, fp, #44	; 0x2c
    bd88:	e1a01003 	mov	r1, r3
    bd8c:	e1a00002 	mov	r0, r2
    bd90:	ebfff5ad 	bl	944c <_ZN8CMonitorlsEPKc>
    bd94:	e1a03000 	mov	r3, r0
    bd98:	e3a0100a 	mov	r1, #10
    bd9c:	e1a00003 	mov	r0, r3
    bda0:	ebfff57f 	bl	93a4 <_ZN8CMonitorlsEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:97

            tmpNode = node->Find_Child(tmpName);
    bda4:	e24b302c 	sub	r3, fp, #44	; 0x2c
    bda8:	e1a01003 	mov	r1, r3
    bdac:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    bdb0:	ebffff6e 	bl	bb70 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>
    bdb4:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:99
            // uzel jsme nasli - pouzijeme ho pro dalsi prohledavani
            if (tmpNode)
    bdb8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bdbc:	e3530000 	cmp	r3, #0
    bdc0:	0a00000e 	beq	be00 <_ZN11CFilesystem10InitializeEv+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:101
            {
                node = tmpNode;
    bdc4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    bdc8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:102
                sMonitor << "child " << tmpName << " was found\n";
    bdcc:	e59f1164 	ldr	r1, [pc, #356]	; bf38 <_ZN11CFilesystem10InitializeEv+0x344>
    bdd0:	e59f0148 	ldr	r0, [pc, #328]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    bdd4:	ebfff59c 	bl	944c <_ZN8CMonitorlsEPKc>
    bdd8:	e1a02000 	mov	r2, r0
    bddc:	e24b302c 	sub	r3, fp, #44	; 0x2c
    bde0:	e1a01003 	mov	r1, r3
    bde4:	e1a00002 	mov	r0, r2
    bde8:	ebfff597 	bl	944c <_ZN8CMonitorlsEPKc>
    bdec:	e1a03000 	mov	r3, r0
    bdf0:	e59f1144 	ldr	r1, [pc, #324]	; bf3c <_ZN11CFilesystem10InitializeEv+0x348>
    bdf4:	e1a00003 	mov	r0, r3
    bdf8:	ebfff593 	bl	944c <_ZN8CMonitorlsEPKc>
    bdfc:	eaffffa4 	b	bc94 <_ZN11CFilesystem10InitializeEv+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:107
            }
            // uzel jsme nenasli - vytvorime ho a pouzijeme ho pro dalsi prohledavani
            else
            {
                tmpNode = sKernelMem.Alloc<TFS_Tree_Node>();
    be00:	e59f0138 	ldr	r0, [pc, #312]	; bf40 <_ZN11CFilesystem10InitializeEv+0x34c>
    be04:	eb000111 	bl	c250 <_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v>
    be08:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:108
                strncpy(tmpNode->name, tmpName, MaxFilenameLength);
    be0c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be10:	e24b102c 	sub	r1, fp, #44	; 0x2c
    be14:	e3a02010 	mov	r2, #16
    be18:	e1a00003 	mov	r0, r3
    be1c:	eb000d14 	bl	f274 <_Z7strncpyPcPKci>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:109
                tmpNode->parent = node;
    be20:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be24:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    be28:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:110
                tmpNode->children = nullptr;
    be2c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be30:	e3a02000 	mov	r2, #0
    be34:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:111
                tmpNode->driver_idx = NoFilesystemDriver; // zatim - mozna se neco dole zmeni
    be38:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be3c:	e3e02000 	mvn	r2, #0
    be40:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:112
                tmpNode->isDirectory = true;
    be44:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be48:	e3a02001 	mov	r2, #1
    be4c:	e5c32010 	strb	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:113
                tmpNode->next = node->children;
    be50:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    be54:	e593201c 	ldr	r2, [r3, #28]
    be58:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be5c:	e5832020 	str	r2, [r3, #32]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:114
                node->children = tmpNode;
    be60:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    be64:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    be68:	e583201c 	str	r2, [r3, #28]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:116

                node = tmpNode;
    be6c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    be70:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:118

                sMonitor << "child was not found\n";
    be74:	e59f10c8 	ldr	r1, [pc, #200]	; bf44 <_ZN11CFilesystem10InitializeEv+0x350>
    be78:	e59f00a0 	ldr	r0, [pc, #160]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    be7c:	ebfff572 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:119
                sMonitor << "creating: " << node->name << "\n";
    be80:	e59f10c0 	ldr	r1, [pc, #192]	; bf48 <_ZN11CFilesystem10InitializeEv+0x354>
    be84:	e59f0094 	ldr	r0, [pc, #148]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    be88:	ebfff56f 	bl	944c <_ZN8CMonitorlsEPKc>
    be8c:	e1a02000 	mov	r2, r0
    be90:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    be94:	e1a01003 	mov	r1, r3
    be98:	e1a00002 	mov	r0, r2
    be9c:	ebfff56a 	bl	944c <_ZN8CMonitorlsEPKc>
    bea0:	e1a03000 	mov	r3, r0
    bea4:	e59f1084 	ldr	r1, [pc, #132]	; bf30 <_ZN11CFilesystem10InitializeEv+0x33c>
    bea8:	e1a00003 	mov	r0, r3
    beac:	ebfff566 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:77
        while (mpPtr[0] != '\0')
    beb0:	eaffff77 	b	bc94 <_ZN11CFilesystem10InitializeEv+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:126
        }

        // 'node' obsahuje uzel posledniho clanku mountpointu - tedy vlastni mountpoint

        // mountpoint nesmi byt uz zabrany
        if (node->driver_idx != NoFilesystemDriver)
    beb4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    beb8:	e5933014 	ldr	r3, [r3, #20]
    bebc:	e3730001 	cmn	r3, #1
    bec0:	1a000012 	bne	bf10 <_ZN11CFilesystem10InitializeEv+0x31c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:129 (discriminator 2)
            return;

        node->driver_idx = i; // timto predavame veskere manipulace driveru
    bec4:	e51b200c 	ldr	r2, [fp, #-12]
    bec8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    becc:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:132 (discriminator 2)

        // dame driveru vedet, ze jsme ho zaregistrovali
        ptr->driver->On_Register();
    bed0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bed4:	e5932014 	ldr	r2, [r3, #20]
    bed8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    bedc:	e5933014 	ldr	r3, [r3, #20]
    bee0:	e5933000 	ldr	r3, [r3]
    bee4:	e5933000 	ldr	r3, [r3]
    bee8:	e1a00002 	mov	r0, r2
    beec:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:67 (discriminator 2)
    for (i = 0; i < gFS_Drivers_Count; i++)
    bef0:	e51b300c 	ldr	r3, [fp, #-12]
    bef4:	e2833001 	add	r3, r3, #1
    bef8:	e50b300c 	str	r3, [fp, #-12]
    befc:	eaffff45 	b	bc18 <_ZN11CFilesystem10InitializeEv+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:135
    }

    sMonitor << "Finished FS initialization\n\n";
    bf00:	e59f1044 	ldr	r1, [pc, #68]	; bf4c <_ZN11CFilesystem10InitializeEv+0x358>
    bf04:	e59f0014 	ldr	r0, [pc, #20]	; bf20 <_ZN11CFilesystem10InitializeEv+0x32c>
    bf08:	ebfff54f 	bl	944c <_ZN8CMonitorlsEPKc>
    bf0c:	ea000000 	b	bf14 <_ZN11CFilesystem10InitializeEv+0x320>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:127
            return;
    bf10:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:136
}
    bf14:	e24bd004 	sub	sp, fp, #4
    bf18:	e8bd8800 	pop	{fp, pc}
    bf1c:	0000f918 	andeq	pc, r0, r8, lsl r9	; <UNPREDICTABLE>
    bf20:	0000ff64 	andeq	pc, r0, r4, ror #30
    bf24:	0000fac0 	andeq	pc, r0, r0, asr #21
    bf28:	0000fa48 	andeq	pc, r0, r8, asr #20
    bf2c:	0000f930 	andeq	pc, r0, r0, lsr r9	; <UNPREDICTABLE>
    bf30:	0000f940 	andeq	pc, r0, r0, asr #18
    bf34:	0000f944 	andeq	pc, r0, r4, asr #18
    bf38:	0000f958 	andeq	pc, r0, r8, asr r9	; <UNPREDICTABLE>
    bf3c:	0000f960 	andeq	pc, r0, r0, ror #18
    bf40:	00010060 	andeq	r0, r1, r0, rrx
    bf44:	0000f96c 	andeq	pc, r0, ip, ror #18
    bf48:	0000f984 	andeq	pc, r0, r4, lsl #19
    bf4c:	0000f990 	muleq	r0, r0, r9

0000bf50 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode>:
_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:139

IFile* CFilesystem::Open(const char* path, NFile_Open_Mode mode)
{
    bf50:	e92d4800 	push	{fp, lr}
    bf54:	e28db004 	add	fp, sp, #4
    bf58:	e24dd030 	sub	sp, sp, #48	; 0x30
    bf5c:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    bf60:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
    bf64:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:142
    char tmpName[MaxFilenameLength];
    const char* mpPtr;
    sMonitor << "opening file: " << path << "\n";
    bf68:	e59f1228 	ldr	r1, [pc, #552]	; c198 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x248>
    bf6c:	e59f0228 	ldr	r0, [pc, #552]	; c19c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x24c>
    bf70:	ebfff535 	bl	944c <_ZN8CMonitorlsEPKc>
    bf74:	e1a03000 	mov	r3, r0
    bf78:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    bf7c:	e1a00003 	mov	r0, r3
    bf80:	ebfff531 	bl	944c <_ZN8CMonitorlsEPKc>
    bf84:	e1a03000 	mov	r3, r0
    bf88:	e59f1210 	ldr	r1, [pc, #528]	; c1a0 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    bf8c:	e1a00003 	mov	r0, r3
    bf90:	ebfff52d 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:146

    int j;

    mpPtr = path;
    bf94:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    bf98:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:148

    TFS_Tree_Node *node = &mRoot, *tmpNode = nullptr;
    bf9c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    bfa0:	e50b3010 	str	r3, [fp, #-16]
    bfa4:	e3a03000 	mov	r3, #0
    bfa8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150

    while (mpPtr[0] != '\0')
    bfac:	e51b3008 	ldr	r3, [fp, #-8]
    bfb0:	e5d33000 	ldrb	r3, [r3]
    bfb4:	e3530000 	cmp	r3, #0
    bfb8:	0a000067 	beq	c15c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x20c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152
    {
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    bfbc:	e3a03000 	mov	r3, #0
    bfc0:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 1)
    bfc4:	e51b300c 	ldr	r3, [fp, #-12]
    bfc8:	e353007f 	cmp	r3, #127	; 0x7f
    bfcc:	8a00001e 	bhi	c04c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 2)
    bfd0:	e51b300c 	ldr	r3, [fp, #-12]
    bfd4:	e51b2008 	ldr	r2, [fp, #-8]
    bfd8:	e0823003 	add	r3, r2, r3
    bfdc:	e5d33000 	ldrb	r3, [r3]
    bfe0:	e3530000 	cmp	r3, #0
    bfe4:	0a000018 	beq	c04c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154
        {
            if (mpPtr[j] == ':' || mpPtr[j] == '/')
    bfe8:	e51b300c 	ldr	r3, [fp, #-12]
    bfec:	e51b2008 	ldr	r2, [fp, #-8]
    bff0:	e0823003 	add	r3, r2, r3
    bff4:	e5d33000 	ldrb	r3, [r3]
    bff8:	e353003a 	cmp	r3, #58	; 0x3a
    bffc:	0a000012 	beq	c04c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:154 (discriminator 1)
    c000:	e51b300c 	ldr	r3, [fp, #-12]
    c004:	e51b2008 	ldr	r2, [fp, #-8]
    c008:	e0823003 	add	r3, r2, r3
    c00c:	e5d33000 	ldrb	r3, [r3]
    c010:	e353002f 	cmp	r3, #47	; 0x2f
    c014:	0a00000c 	beq	c04c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:157 (discriminator 3)
                break;

            tmpName[j] = mpPtr[j];
    c018:	e51b300c 	ldr	r3, [fp, #-12]
    c01c:	e51b2008 	ldr	r2, [fp, #-8]
    c020:	e0823003 	add	r3, r2, r3
    c024:	e5d31000 	ldrb	r1, [r3]
    c028:	e24b2024 	sub	r2, fp, #36	; 0x24
    c02c:	e51b300c 	ldr	r3, [fp, #-12]
    c030:	e0823003 	add	r3, r2, r3
    c034:	e1a02001 	mov	r2, r1
    c038:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:152 (discriminator 3)
        for (j = 0; j < MaxPathLength && mpPtr[j] != '\0'; j++)
    c03c:	e51b300c 	ldr	r3, [fp, #-12]
    c040:	e2833001 	add	r3, r3, #1
    c044:	e50b300c 	str	r3, [fp, #-12]
    c048:	eaffffdd 	b	bfc4 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:160
        }

        tmpName[j] = '\0';
    c04c:	e24b2024 	sub	r2, fp, #36	; 0x24
    c050:	e51b300c 	ldr	r3, [fp, #-12]
    c054:	e0823003 	add	r3, r2, r3
    c058:	e3a02000 	mov	r2, #0
    c05c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:162

        mpPtr += j;
    c060:	e51b300c 	ldr	r3, [fp, #-12]
    c064:	e51b2008 	ldr	r2, [fp, #-8]
    c068:	e0823003 	add	r3, r2, r3
    c06c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:163
        if (mpPtr[0] != '\0')
    c070:	e51b3008 	ldr	r3, [fp, #-8]
    c074:	e5d33000 	ldrb	r3, [r3]
    c078:	e3530000 	cmp	r3, #0
    c07c:	0a000002 	beq	c08c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:165
        {
            mpPtr += 1;
    c080:	e51b3008 	ldr	r3, [fp, #-8]
    c084:	e2833001 	add	r3, r3, #1
    c088:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:168
        }

        tmpNode = node->Find_Child(tmpName);
    c08c:	e24b3024 	sub	r3, fp, #36	; 0x24
    c090:	e1a01003 	mov	r1, r3
    c094:	e51b0010 	ldr	r0, [fp, #-16]
    c098:	ebfffeb4 	bl	bb70 <_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc>
    c09c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:169
        if (tmpNode)
    c0a0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0a4:	e3530000 	cmp	r3, #0
    c0a8:	0a000001 	beq	c0b4 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:170
            node = tmpNode;
    c0ac:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0b0:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:172

        if (tmpNode->driver_idx != NoFilesystemDriver)
    c0b4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0b8:	e5933014 	ldr	r3, [r3, #20]
    c0bc:	e3730001 	cmn	r3, #1
    c0c0:	0a00001d 	beq	c13c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x1ec>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:174
        {
            return gFS_Drivers[tmpNode->driver_idx].driver->Open_File(mpPtr, mode);
    c0c4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0c8:	e5932014 	ldr	r2, [r3, #20]
    c0cc:	e59f10d0 	ldr	r1, [pc, #208]	; c1a4 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x254>
    c0d0:	e1a03002 	mov	r3, r2
    c0d4:	e1a03083 	lsl	r3, r3, #1
    c0d8:	e0833002 	add	r3, r3, r2
    c0dc:	e1a03183 	lsl	r3, r3, #3
    c0e0:	e0813003 	add	r3, r1, r3
    c0e4:	e2833014 	add	r3, r3, #20
    c0e8:	e5930000 	ldr	r0, [r3]
    c0ec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0f0:	e5932014 	ldr	r2, [r3, #20]
    c0f4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c0f8:	e5932014 	ldr	r2, [r3, #20]
    c0fc:	e59f10a0 	ldr	r1, [pc, #160]	; c1a4 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x254>
    c100:	e1a03002 	mov	r3, r2
    c104:	e1a03083 	lsl	r3, r3, #1
    c108:	e0833002 	add	r3, r3, r2
    c10c:	e1a03183 	lsl	r3, r3, #3
    c110:	e0813003 	add	r3, r1, r3
    c114:	e2833014 	add	r3, r3, #20
    c118:	e5933000 	ldr	r3, [r3]
    c11c:	e5933000 	ldr	r3, [r3]
    c120:	e2833004 	add	r3, r3, #4
    c124:	e5933000 	ldr	r3, [r3]
    c128:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
    c12c:	e51b1008 	ldr	r1, [fp, #-8]
    c130:	e12fff33 	blx	r3
    c134:	e1a03000 	mov	r3, r0
    c138:	ea000013 	b	c18c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x23c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:176
        }
        else if (!tmpNode->isDirectory)
    c13c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    c140:	e5d33010 	ldrb	r3, [r3, #16]
    c144:	e2233001 	eor	r3, r3, #1
    c148:	e6ef3073 	uxtb	r3, r3
    c14c:	e3530000 	cmp	r3, #0
    c150:	1a000000 	bne	c158 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x208>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:150
    while (mpPtr[0] != '\0')
    c154:	eaffff94 	b	bfac <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:177
            break;
    c158:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:180
    }

    sMonitor << "failed to open: " << path << "\n";
    c15c:	e59f1044 	ldr	r1, [pc, #68]	; c1a8 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x258>
    c160:	e59f0034 	ldr	r0, [pc, #52]	; c19c <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x24c>
    c164:	ebfff4b8 	bl	944c <_ZN8CMonitorlsEPKc>
    c168:	e1a03000 	mov	r3, r0
    c16c:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    c170:	e1a00003 	mov	r0, r3
    c174:	ebfff4b4 	bl	944c <_ZN8CMonitorlsEPKc>
    c178:	e1a03000 	mov	r3, r0
    c17c:	e59f101c 	ldr	r1, [pc, #28]	; c1a0 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode+0x250>
    c180:	e1a00003 	mov	r0, r3
    c184:	ebfff4b0 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:183

    // zadny filesystem se tohoto uzlu "neujal" -> soubor neexistuje
    return nullptr;
    c188:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
}
    c18c:	e1a00003 	mov	r0, r3
    c190:	e24bd004 	sub	sp, fp, #4
    c194:	e8bd8800 	pop	{fp, pc}
    c198:	0000f9b0 			; <UNDEFINED> instruction: 0x0000f9b0
    c19c:	0000ff64 	andeq	pc, r0, r4, ror #30
    c1a0:	0000f940 	andeq	pc, r0, r0, asr #18
    c1a4:	0000fa48 	andeq	pc, r0, r8, asr #20
    c1a8:	0000f9c0 	andeq	pc, r0, r0, asr #19

0000c1ac <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c1ac:	e92d4800 	push	{fp, lr}
    c1b0:	e28db004 	add	fp, sp, #4
    c1b4:	e24dd008 	sub	sp, sp, #8
    c1b8:	e50b0008 	str	r0, [fp, #-8]
    c1bc:	e50b100c 	str	r1, [fp, #-12]
    c1c0:	e51b3008 	ldr	r3, [fp, #-8]
    c1c4:	e3530001 	cmp	r3, #1
    c1c8:	1a000005 	bne	c1e4 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184 (discriminator 1)
    c1cc:	e51b300c 	ldr	r3, [fp, #-12]
    c1d0:	e59f2018 	ldr	r2, [pc, #24]	; c1f0 <_Z41__static_initialization_and_destruction_0ii+0x44>
    c1d4:	e1530002 	cmp	r3, r2
    c1d8:	1a000001 	bne	c1e4 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:8
CFilesystem sFilesystem;
    c1dc:	e59f0010 	ldr	r0, [pc, #16]	; c1f4 <_Z41__static_initialization_and_destruction_0ii+0x48>
    c1e0:	ebfffdf4 	bl	b9b8 <_ZN11CFilesystemC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
}
    c1e4:	e320f000 	nop	{0}
    c1e8:	e24bd004 	sub	sp, fp, #4
    c1ec:	e8bd8800 	pop	{fp, pc}
    c1f0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    c1f4:	0000ffc4 	andeq	pc, r0, r4, asr #31

0000c1f8 <_GLOBAL__sub_I_sFilesystem>:
_GLOBAL__sub_I_sFilesystem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:184
    c1f8:	e92d4800 	push	{fp, lr}
    c1fc:	e28db004 	add	fp, sp, #4
    c200:	e59f1008 	ldr	r1, [pc, #8]	; c210 <_GLOBAL__sub_I_sFilesystem+0x18>
    c204:	e3a00001 	mov	r0, #1
    c208:	ebffffe7 	bl	c1ac <_Z41__static_initialization_and_destruction_0ii>
    c20c:	e8bd8800 	pop	{fp, pc}
    c210:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000c214 <_ZN11CFilesystem13TFS_Tree_NodeC1Ev>:
_ZN11CFilesystem13TFS_Tree_NodeC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:80

class CFilesystem
{
private:
    // uzel filesystemu, ktery neni spravovan zadnym FS driverem
    struct TFS_Tree_Node
    c214:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c218:	e28db000 	add	fp, sp, #0
    c21c:	e24dd00c 	sub	sp, sp, #12
    c220:	e50b0008 	str	r0, [fp, #-8]
    c224:	e51b3008 	ldr	r3, [fp, #-8]
    c228:	e3a02000 	mov	r2, #0
    c22c:	e5c32010 	strb	r2, [r3, #16]
    c230:	e51b3008 	ldr	r3, [fp, #-8]
    c234:	e3e02000 	mvn	r2, #0
    c238:	e5832014 	str	r2, [r3, #20]
    c23c:	e51b3008 	ldr	r3, [fp, #-8]
    c240:	e1a00003 	mov	r0, r3
    c244:	e28bd000 	add	sp, fp, #0
    c248:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c24c:	e12fff1e 	bx	lr

0000c250 <_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocIN11CFilesystem13TFS_Tree_NodeEEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    c250:	e92d4800 	push	{fp, lr}
    c254:	e28db004 	add	fp, sp, #4
    c258:	e24dd008 	sub	sp, sp, #8
    c25c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    c260:	e3a01024 	mov	r1, #36	; 0x24
    c264:	e51b0008 	ldr	r0, [fp, #-8]
    c268:	eb0004fa 	bl	d658 <_ZN20CKernel_Heap_Manager5AllocEj>
    c26c:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    c270:	e1a00003 	mov	r0, r3
    c274:	e24bd004 	sub	sp, fp, #4
    c278:	e8bd8800 	pop	{fp, pc}

0000c27c <_ZN5IFile4ReadEPcj>:
_ZN5IFile4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:43
    virtual uint32_t Read(char* buffer, uint32_t num)
    c27c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c280:	e28db000 	add	fp, sp, #0
    c284:	e24dd014 	sub	sp, sp, #20
    c288:	e50b0008 	str	r0, [fp, #-8]
    c28c:	e50b100c 	str	r1, [fp, #-12]
    c290:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:45
        return 0;
    c294:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:46
    };
    c298:	e1a00003 	mov	r0, r3
    c29c:	e28bd000 	add	sp, fp, #0
    c2a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2a4:	e12fff1e 	bx	lr

0000c2a8 <_ZN5IFile5WriteEPKcj>:
_ZN5IFile5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:49
    virtual uint32_t Write(const char* buffer, uint32_t num)
    c2a8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2ac:	e28db000 	add	fp, sp, #0
    c2b0:	e24dd014 	sub	sp, sp, #20
    c2b4:	e50b0008 	str	r0, [fp, #-8]
    c2b8:	e50b100c 	str	r1, [fp, #-12]
    c2bc:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:51
        return 0;
    c2c0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:52
    };
    c2c4:	e1a00003 	mov	r0, r3
    c2c8:	e28bd000 	add	sp, fp, #0
    c2cc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2d0:	e12fff1e 	bx	lr

0000c2d4 <_ZN5IFile5CloseEv>:
_ZN5IFile5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:54
    virtual bool Close()
    c2d4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2d8:	e28db000 	add	fp, sp, #0
    c2dc:	e24dd00c 	sub	sp, sp, #12
    c2e0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:56
        return true;
    c2e4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:57
    };
    c2e8:	e1a00003 	mov	r0, r3
    c2ec:	e28bd000 	add	sp, fp, #0
    c2f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c2f4:	e12fff1e 	bx	lr

0000c2f8 <_ZN5IFile5IOCtlE16NIOCtl_OperationPv>:
_ZN5IFile5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:59
    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr)
    c2f8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c2fc:	e28db000 	add	fp, sp, #0
    c300:	e24dd014 	sub	sp, sp, #20
    c304:	e50b0008 	str	r0, [fp, #-8]
    c308:	e50b100c 	str	r1, [fp, #-12]
    c30c:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:61
        return false;
    c310:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:62
    };
    c314:	e1a00003 	mov	r0, r3
    c318:	e28bd000 	add	sp, fp, #0
    c31c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c320:	e12fff1e 	bx	lr

0000c324 <_Znwj>:
_Znwj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:42
{
    c324:	e92d4800 	push	{fp, lr}
    c328:	e28db004 	add	fp, sp, #4
    c32c:	e24dd008 	sub	sp, sp, #8
    c330:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:43
    return sKernelMem.Alloc(size);
    c334:	e51b1008 	ldr	r1, [fp, #-8]
    c338:	e59f0010 	ldr	r0, [pc, #16]	; c350 <_Znwj+0x2c>
    c33c:	eb0004c5 	bl	d658 <_ZN20CKernel_Heap_Manager5AllocEj>
    c340:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:44
}
    c344:	e1a00003 	mov	r0, r3
    c348:	e24bd004 	sub	sp, fp, #4
    c34c:	e8bd8800 	pop	{fp, pc}
    c350:	00010060 	andeq	r0, r1, r0, rrx

0000c354 <_ZN5IFileC1Ev>:
_ZN5IFileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:36
class IFile
    c354:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c358:	e28db000 	add	fp, sp, #0
    c35c:	e24dd00c 	sub	sp, sp, #12
    c360:	e50b0008 	str	r0, [fp, #-8]
    c364:	e59f2018 	ldr	r2, [pc, #24]	; c384 <_ZN5IFileC1Ev+0x30>
    c368:	e51b3008 	ldr	r3, [fp, #-8]
    c36c:	e5832000 	str	r2, [r3]
    c370:	e51b3008 	ldr	r3, [fp, #-8]
    c374:	e1a00003 	mov	r0, r3
    c378:	e28bd000 	add	sp, fp, #0
    c37c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c380:	e12fff1e 	bx	lr
    c384:	0000fec4 	andeq	pc, r0, r4, asr #29

0000c388 <_ZN5IFileD1Ev>:
_ZN5IFileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    virtual ~IFile() = default;
    c388:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c38c:	e28db000 	add	fp, sp, #0
    c390:	e24dd00c 	sub	sp, sp, #12
    c394:	e50b0008 	str	r0, [fp, #-8]
    c398:	e59f2018 	ldr	r2, [pc, #24]	; c3b8 <_ZN5IFileD1Ev+0x30>
    c39c:	e51b3008 	ldr	r3, [fp, #-8]
    c3a0:	e5832000 	str	r2, [r3]
    c3a4:	e51b3008 	ldr	r3, [fp, #-8]
    c3a8:	e1a00003 	mov	r0, r3
    c3ac:	e28bd000 	add	sp, fp, #0
    c3b0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c3b4:	e12fff1e 	bx	lr
    c3b8:	0000fec4 	andeq	pc, r0, r4, asr #29

0000c3bc <_ZN5IFileD0Ev>:
_ZN5IFileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/filesystem.h:39
    c3bc:	e92d4800 	push	{fp, lr}
    c3c0:	e28db004 	add	fp, sp, #4
    c3c4:	e24dd008 	sub	sp, sp, #8
    c3c8:	e50b0008 	str	r0, [fp, #-8]
    c3cc:	e51b0008 	ldr	r0, [fp, #-8]
    c3d0:	ebffffec 	bl	c388 <_ZN5IFileD1Ev>
    c3d4:	e3a01004 	mov	r1, #4
    c3d8:	e51b0008 	ldr	r0, [fp, #-8]
    c3dc:	ebfff9c8 	bl	ab04 <_ZdlPvj>
    c3e0:	e51b3008 	ldr	r3, [fp, #-8]
    c3e4:	e1a00003 	mov	r0, r3
    c3e8:	e24bd004 	sub	sp, fp, #4
    c3ec:	e8bd8800 	pop	{fp, pc}

0000c3f0 <_ZN10CGPIO_FileC1Eibb>:
_ZN10CGPIO_FileC2Eibb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:21
    bool mRead;
    // byl pin rezervovan pro zapis?
    bool mWrite;

public:
    CGPIO_File(int pinNo, bool read, bool write)
    c3f0:	e92d4800 	push	{fp, lr}
    c3f4:	e28db004 	add	fp, sp, #4
    c3f8:	e24dd010 	sub	sp, sp, #16
    c3fc:	e50b0008 	str	r0, [fp, #-8]
    c400:	e50b100c 	str	r1, [fp, #-12]
    c404:	e1a01002 	mov	r1, r2
    c408:	e1a02003 	mov	r2, r3
    c40c:	e1a03001 	mov	r3, r1
    c410:	e54b300d 	strb	r3, [fp, #-13]
    c414:	e1a03002 	mov	r3, r2
    c418:	e54b300e 	strb	r3, [fp, #-14]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:24
    : mPinNo(pinNo)
    , mRead(read)
    , mWrite(write)
    c41c:	e51b3008 	ldr	r3, [fp, #-8]
    c420:	e1a00003 	mov	r0, r3
    c424:	ebffffca 	bl	c354 <_ZN5IFileC1Ev>
    c428:	e59f2038 	ldr	r2, [pc, #56]	; c468 <_ZN10CGPIO_FileC1Eibb+0x78>
    c42c:	e51b3008 	ldr	r3, [fp, #-8]
    c430:	e5832000 	str	r2, [r3]
    c434:	e51b3008 	ldr	r3, [fp, #-8]
    c438:	e51b200c 	ldr	r2, [fp, #-12]
    c43c:	e5832004 	str	r2, [r3, #4]
    c440:	e51b3008 	ldr	r3, [fp, #-8]
    c444:	e55b200d 	ldrb	r2, [fp, #-13]
    c448:	e5c32008 	strb	r2, [r3, #8]
    c44c:	e51b3008 	ldr	r3, [fp, #-8]
    c450:	e55b200e 	ldrb	r2, [fp, #-14]
    c454:	e5c32009 	strb	r2, [r3, #9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:27
    {
        //
    }
    c458:	e51b3008 	ldr	r3, [fp, #-8]
    c45c:	e1a00003 	mov	r0, r3
    c460:	e24bd004 	sub	sp, fp, #4
    c464:	e8bd8800 	pop	{fp, pc}
    c468:	0000fea4 	andeq	pc, r0, r4, lsr #29

0000c46c <_ZN10CGPIO_FileD1Ev>:
_ZN10CGPIO_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29

    ~CGPIO_File()
    c46c:	e92d4800 	push	{fp, lr}
    c470:	e28db004 	add	fp, sp, #4
    c474:	e24dd008 	sub	sp, sp, #8
    c478:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c47c:	e59f2028 	ldr	r2, [pc, #40]	; c4ac <_ZN10CGPIO_FileD1Ev+0x40>
    c480:	e51b3008 	ldr	r3, [fp, #-8]
    c484:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:32
        // pokud jeste je otevreny, zavreme
        Close();
    c488:	e51b0008 	ldr	r0, [fp, #-8]
    c48c:	eb000053 	bl	c5e0 <_ZN10CGPIO_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:30
    {
    c490:	e51b3008 	ldr	r3, [fp, #-8]
    c494:	e1a00003 	mov	r0, r3
    c498:	ebffffba 	bl	c388 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c49c:	e51b3008 	ldr	r3, [fp, #-8]
    c4a0:	e1a00003 	mov	r0, r3
    c4a4:	e24bd004 	sub	sp, fp, #4
    c4a8:	e8bd8800 	pop	{fp, pc}
    c4ac:	0000fea4 	andeq	pc, r0, r4, lsr #29

0000c4b0 <_ZN10CGPIO_FileD0Ev>:
_ZN10CGPIO_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:29
    ~CGPIO_File()
    c4b0:	e92d4800 	push	{fp, lr}
    c4b4:	e28db004 	add	fp, sp, #4
    c4b8:	e24dd008 	sub	sp, sp, #8
    c4bc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:33
    }
    c4c0:	e51b0008 	ldr	r0, [fp, #-8]
    c4c4:	ebffffe8 	bl	c46c <_ZN10CGPIO_FileD1Ev>
    c4c8:	e3a0100c 	mov	r1, #12
    c4cc:	e51b0008 	ldr	r0, [fp, #-8]
    c4d0:	ebfff98b 	bl	ab04 <_ZdlPvj>
    c4d4:	e51b3008 	ldr	r3, [fp, #-8]
    c4d8:	e1a00003 	mov	r0, r3
    c4dc:	e24bd004 	sub	sp, fp, #4
    c4e0:	e8bd8800 	pop	{fp, pc}

0000c4e4 <_ZN10CGPIO_File4ReadEPcj>:
_ZN10CGPIO_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:35

    virtual uint32_t Read(char* buffer, uint32_t num) override
    c4e4:	e92d4800 	push	{fp, lr}
    c4e8:	e28db004 	add	fp, sp, #4
    c4ec:	e24dd010 	sub	sp, sp, #16
    c4f0:	e50b0008 	str	r0, [fp, #-8]
    c4f4:	e50b100c 	str	r1, [fp, #-12]
    c4f8:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37
    {
        if (num > 0 && buffer != nullptr)
    c4fc:	e51b3010 	ldr	r3, [fp, #-16]
    c500:	e3530000 	cmp	r3, #0
    c504:	0a000011 	beq	c550 <_ZN10CGPIO_File4ReadEPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:37 (discriminator 1)
    c508:	e51b300c 	ldr	r3, [fp, #-12]
    c50c:	e3530000 	cmp	r3, #0
    c510:	0a00000e 	beq	c550 <_ZN10CGPIO_File4ReadEPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40
        {
            // na prvni pozici v bufferu precteme bud znak 1 nebo 0 podle stavu digitalniho pinu
            buffer[0] = sGPIO.Get_Input(mPinNo) ? '1' : '0';
    c514:	e51b3008 	ldr	r3, [fp, #-8]
    c518:	e5933004 	ldr	r3, [r3, #4]
    c51c:	e1a01003 	mov	r1, r3
    c520:	e59f0038 	ldr	r0, [pc, #56]	; c560 <_ZN10CGPIO_File4ReadEPcj+0x7c>
    c524:	ebfff02e 	bl	85e4 <_ZN13CGPIO_Handler9Get_InputEj>
    c528:	e1a03000 	mov	r3, r0
    c52c:	e3530000 	cmp	r3, #0
    c530:	0a000001 	beq	c53c <_ZN10CGPIO_File4ReadEPcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 1)
    c534:	e3a02031 	mov	r2, #49	; 0x31
    c538:	ea000000 	b	c540 <_ZN10CGPIO_File4ReadEPcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 2)
    c53c:	e3a02030 	mov	r2, #48	; 0x30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:40 (discriminator 4)
    c540:	e51b300c 	ldr	r3, [fp, #-12]
    c544:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:41 (discriminator 4)
            return 1;
    c548:	e3a03001 	mov	r3, #1
    c54c:	ea000000 	b	c554 <_ZN10CGPIO_File4ReadEPcj+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:44
        }

        return 0;
    c550:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:45
    }
    c554:	e1a00003 	mov	r0, r3
    c558:	e24bd004 	sub	sp, fp, #4
    c55c:	e8bd8800 	pop	{fp, pc}
    c560:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000c564 <_ZN10CGPIO_File5WriteEPKcj>:
_ZN10CGPIO_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:47

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c564:	e92d4800 	push	{fp, lr}
    c568:	e28db004 	add	fp, sp, #4
    c56c:	e24dd010 	sub	sp, sp, #16
    c570:	e50b0008 	str	r0, [fp, #-8]
    c574:	e50b100c 	str	r1, [fp, #-12]
    c578:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49
    {
        if (num > 0 && buffer != nullptr)
    c57c:	e51b3010 	ldr	r3, [fp, #-16]
    c580:	e3530000 	cmp	r3, #0
    c584:	0a000010 	beq	c5cc <_ZN10CGPIO_File5WriteEPKcj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:49 (discriminator 1)
    c588:	e51b300c 	ldr	r3, [fp, #-12]
    c58c:	e3530000 	cmp	r3, #0
    c590:	0a00000d 	beq	c5cc <_ZN10CGPIO_File5WriteEPKcj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:52
        {
            // podle prvniho znaku zapiseme bud hodnotu HIGH (true) nebo LOW (false)
            sGPIO.Set_Output(mPinNo, (buffer[0] != '0'));
    c594:	e51b3008 	ldr	r3, [fp, #-8]
    c598:	e5933004 	ldr	r3, [r3, #4]
    c59c:	e1a01003 	mov	r1, r3
    c5a0:	e51b300c 	ldr	r3, [fp, #-12]
    c5a4:	e5d33000 	ldrb	r3, [r3]
    c5a8:	e3530030 	cmp	r3, #48	; 0x30
    c5ac:	13a03001 	movne	r3, #1
    c5b0:	03a03000 	moveq	r3, #0
    c5b4:	e6ef3073 	uxtb	r3, r3
    c5b8:	e1a02003 	mov	r2, r3
    c5bc:	e59f0018 	ldr	r0, [pc, #24]	; c5dc <_ZN10CGPIO_File5WriteEPKcj+0x78>
    c5c0:	ebffefd1 	bl	850c <_ZN13CGPIO_Handler10Set_OutputEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:53
            return 1;
    c5c4:	e3a03001 	mov	r3, #1
    c5c8:	ea000000 	b	c5d0 <_ZN10CGPIO_File5WriteEPKcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:56
        }

        return 0;
    c5cc:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:57
    }
    c5d0:	e1a00003 	mov	r0, r3
    c5d4:	e24bd004 	sub	sp, fp, #4
    c5d8:	e8bd8800 	pop	{fp, pc}
    c5dc:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000c5e0 <_ZN10CGPIO_File5CloseEv>:
_ZN10CGPIO_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:59

    virtual bool Close() override
    c5e0:	e92d4800 	push	{fp, lr}
    c5e4:	e28db004 	add	fp, sp, #4
    c5e8:	e24dd008 	sub	sp, sp, #8
    c5ec:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61
    {
        if (!mRead && !mWrite)
    c5f0:	e51b3008 	ldr	r3, [fp, #-8]
    c5f4:	e5d33008 	ldrb	r3, [r3, #8]
    c5f8:	e2233001 	eor	r3, r3, #1
    c5fc:	e6ef3073 	uxtb	r3, r3
    c600:	e3530000 	cmp	r3, #0
    c604:	0a000007 	beq	c628 <_ZN10CGPIO_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:61 (discriminator 1)
    c608:	e51b3008 	ldr	r3, [fp, #-8]
    c60c:	e5d33009 	ldrb	r3, [r3, #9]
    c610:	e2233001 	eor	r3, r3, #1
    c614:	e6ef3073 	uxtb	r3, r3
    c618:	e3530000 	cmp	r3, #0
    c61c:	0a000001 	beq	c628 <_ZN10CGPIO_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:62
            return false;
    c620:	e3a03000 	mov	r3, #0
    c624:	ea000010 	b	c66c <_ZN10CGPIO_File5CloseEv+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:65

        // uvolnime pin
        sGPIO.Free_Pin(mPinNo, mRead, mWrite);
    c628:	e51b3008 	ldr	r3, [fp, #-8]
    c62c:	e5933004 	ldr	r3, [r3, #4]
    c630:	e1a01003 	mov	r1, r3
    c634:	e51b3008 	ldr	r3, [fp, #-8]
    c638:	e5d32008 	ldrb	r2, [r3, #8]
    c63c:	e51b3008 	ldr	r3, [fp, #-8]
    c640:	e5d33009 	ldrb	r3, [r3, #9]
    c644:	e59f002c 	ldr	r0, [pc, #44]	; c678 <_ZN10CGPIO_File5CloseEv+0x98>
    c648:	ebfff06c 	bl	8800 <_ZN13CGPIO_Handler8Free_PinEjbb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:66
        mRead = mWrite = false;
    c64c:	e51b3008 	ldr	r3, [fp, #-8]
    c650:	e3a02000 	mov	r2, #0
    c654:	e5c32009 	strb	r2, [r3, #9]
    c658:	e51b3008 	ldr	r3, [fp, #-8]
    c65c:	e5d32009 	ldrb	r2, [r3, #9]
    c660:	e51b3008 	ldr	r3, [fp, #-8]
    c664:	e5c32008 	strb	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:68

        return true;
    c668:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:69
    }
    c66c:	e1a00003 	mov	r0, r3
    c670:	e24bd004 	sub	sp, fp, #4
    c674:	e8bd8800 	pop	{fp, pc}
    c678:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000c67c <_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv>:
_ZN10CGPIO_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:71

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c67c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c680:	e28db000 	add	fp, sp, #0
    c684:	e24dd014 	sub	sp, sp, #20
    c688:	e50b0008 	str	r0, [fp, #-8]
    c68c:	e50b100c 	str	r1, [fp, #-12]
    c690:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:74
    {
        // GPIO (zatim?) neumime nijak nastavovat
        return false;
    c694:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:75
    }
    c698:	e1a00003 	mov	r0, r3
    c69c:	e28bd000 	add	sp, fp, #0
    c6a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c6a4:	e12fff1e 	bx	lr

0000c6a8 <_ZN15CGPIO_FS_Driver11On_RegisterEv>:
_ZN15CGPIO_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:82

// driver pro filesystem pro GPIO piny
class CGPIO_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    c6a8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c6ac:	e28db000 	add	fp, sp, #0
    c6b0:	e24dd00c 	sub	sp, sp, #12
    c6b4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:85
    {
        //
    }
    c6b8:	e320f000 	nop	{0}
    c6bc:	e28bd000 	add	sp, fp, #0
    c6c0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c6c4:	e12fff1e 	bx	lr

0000c6c8 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:87

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    c6c8:	e92d4810 	push	{r4, fp, lr}
    c6cc:	e28db008 	add	fp, sp, #8
    c6d0:	e24dd01c 	sub	sp, sp, #28
    c6d4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    c6d8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    c6dc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89
    {
        if (mode != NFile_Open_Mode::Read_Only && mode != NFile_Open_Mode::Write_Only)
    c6e0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c6e4:	e3530000 	cmp	r3, #0
    c6e8:	0a000004 	beq	c700 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:89 (discriminator 1)
    c6ec:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c6f0:	e3530001 	cmp	r3, #1
    c6f4:	0a000001 	beq	c700 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:90
            return nullptr;
    c6f8:	e3a03000 	mov	r3, #0
    c6fc:	ea000043 	b	c810 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:94

        // tento driver ocekava na vstupu jen jednu jedinou uroven v 'path', a tou je cislo, tedy index GPIO pinu

        int gpionum = atoi(path);
    c700:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    c704:	eb000ab3 	bl	f1d8 <_Z4atoiPKc>
    c708:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95
        if (gpionum < 0 || gpionum >= hal::GPIO_Pin_Count)
    c70c:	e51b3010 	ldr	r3, [fp, #-16]
    c710:	e3530000 	cmp	r3, #0
    c714:	ba000002 	blt	c724 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:95 (discriminator 1)
    c718:	e51b3010 	ldr	r3, [fp, #-16]
    c71c:	e3530035 	cmp	r3, #53	; 0x35
    c720:	9a000001 	bls	c72c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x64>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:96
            return nullptr;
    c724:	e3a03000 	mov	r3, #0
    c728:	ea000038 	b	c810 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:98

        if (mode == NFile_Open_Mode::Read_Only)
    c72c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c730:	e3530000 	cmp	r3, #0
    c734:	1a000011 	bne	c780 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:100
        {
            if (!sGPIO.Reserve_Pin(gpionum, true, false))
    c738:	e51b1010 	ldr	r1, [fp, #-16]
    c73c:	e3a03000 	mov	r3, #0
    c740:	e3a02001 	mov	r2, #1
    c744:	e59f00d0 	ldr	r0, [pc, #208]	; c81c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c748:	ebffefc6 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    c74c:	e1a03000 	mov	r3, r0
    c750:	e2233001 	eor	r3, r3, #1
    c754:	e6ef3073 	uxtb	r3, r3
    c758:	e3530000 	cmp	r3, #0
    c75c:	0a000001 	beq	c768 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:101
                return nullptr;
    c760:	e3a03000 	mov	r3, #0
    c764:	ea000029 	b	c810 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:103

            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Input);
    c768:	e51b3010 	ldr	r3, [fp, #-16]
    c76c:	e3a02000 	mov	r2, #0
    c770:	e1a01003 	mov	r1, r3
    c774:	e59f00a0 	ldr	r0, [pc, #160]	; c81c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c778:	ebffef14 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
    c77c:	ea000010 	b	c7c4 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xfc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:107
        }
        else
        {
            if (!sGPIO.Reserve_Pin(gpionum, false, true))
    c780:	e51b1010 	ldr	r1, [fp, #-16]
    c784:	e3a03001 	mov	r3, #1
    c788:	e3a02000 	mov	r2, #0
    c78c:	e59f0088 	ldr	r0, [pc, #136]	; c81c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c790:	ebffefb4 	bl	8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    c794:	e1a03000 	mov	r3, r0
    c798:	e2233001 	eor	r3, r3, #1
    c79c:	e6ef3073 	uxtb	r3, r3
    c7a0:	e3530000 	cmp	r3, #0
    c7a4:	0a000001 	beq	c7b0 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0xe8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:108
                return nullptr;
    c7a8:	e3a03000 	mov	r3, #0
    c7ac:	ea000017 	b	c810 <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x148>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:110

            sGPIO.Set_GPIO_Function(gpionum, NGPIO_Function::Output);
    c7b0:	e51b3010 	ldr	r3, [fp, #-16]
    c7b4:	e3a02001 	mov	r2, #1
    c7b8:	e1a01003 	mov	r1, r3
    c7bc:	e59f0058 	ldr	r0, [pc, #88]	; c81c <_ZN15CGPIO_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x154>
    c7c0:	ebffef02 	bl	83d0 <_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:114
        }

        CGPIO_File* f =
        new CGPIO_File(gpionum, mode == NFile_Open_Mode::Read_Only, mode == NFile_Open_Mode::Write_Only);
    c7c4:	e3a0000c 	mov	r0, #12
    c7c8:	ebfffed5 	bl	c324 <_Znwj>
    c7cc:	e1a03000 	mov	r3, r0
    c7d0:	e1a04003 	mov	r4, r3
    c7d4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7d8:	e3530000 	cmp	r3, #0
    c7dc:	03a03001 	moveq	r3, #1
    c7e0:	13a03000 	movne	r3, #0
    c7e4:	e6ef2073 	uxtb	r2, r3
    c7e8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7ec:	e3530001 	cmp	r3, #1
    c7f0:	03a03001 	moveq	r3, #1
    c7f4:	13a03000 	movne	r3, #0
    c7f8:	e6ef3073 	uxtb	r3, r3
    c7fc:	e51b1010 	ldr	r1, [fp, #-16]
    c800:	e1a00004 	mov	r0, r4
    c804:	ebfffef9 	bl	c3f0 <_ZN10CGPIO_FileC1Eibb>
    c808:	e50b4014 	str	r4, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:116

        return f;
    c80c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:117
    }
    c810:	e1a00003 	mov	r0, r3
    c814:	e24bd008 	sub	sp, fp, #8
    c818:	e8bd8810 	pop	{r4, fp, pc}
    c81c:	0000ff2c 	andeq	pc, r0, ip, lsr #30

0000c820 <_ZN13CMonitor_FileC1Ei>:
_ZN13CMonitor_FileC2Ei():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:15
{
private:
    int mChannel;

public:
    CMonitor_File(int channel)
    c820:	e92d4800 	push	{fp, lr}
    c824:	e28db004 	add	fp, sp, #4
    c828:	e24dd008 	sub	sp, sp, #8
    c82c:	e50b0008 	str	r0, [fp, #-8]
    c830:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:16
    : mChannel(channel)
    c834:	e51b3008 	ldr	r3, [fp, #-8]
    c838:	e1a00003 	mov	r0, r3
    c83c:	ebfffec4 	bl	c354 <_ZN5IFileC1Ev>
    c840:	e59f2020 	ldr	r2, [pc, #32]	; c868 <_ZN13CMonitor_FileC1Ei+0x48>
    c844:	e51b3008 	ldr	r3, [fp, #-8]
    c848:	e5832000 	str	r2, [r3]
    c84c:	e51b3008 	ldr	r3, [fp, #-8]
    c850:	e51b200c 	ldr	r2, [fp, #-12]
    c854:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:18
    {
    }
    c858:	e51b3008 	ldr	r3, [fp, #-8]
    c85c:	e1a00003 	mov	r0, r3
    c860:	e24bd004 	sub	sp, fp, #4
    c864:	e8bd8800 	pop	{fp, pc}
    c868:	0000fe74 	andeq	pc, r0, r4, ror lr	; <UNPREDICTABLE>

0000c86c <_ZN13CMonitor_FileD1Ev>:
_ZN13CMonitor_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20

    ~CMonitor_File()
    c86c:	e92d4800 	push	{fp, lr}
    c870:	e28db004 	add	fp, sp, #4
    c874:	e24dd008 	sub	sp, sp, #8
    c878:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c87c:	e59f2028 	ldr	r2, [pc, #40]	; c8ac <_ZN13CMonitor_FileD1Ev+0x40>
    c880:	e51b3008 	ldr	r3, [fp, #-8]
    c884:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:22
        Close();
    c888:	e51b0008 	ldr	r0, [fp, #-8]
    c88c:	eb000039 	bl	c978 <_ZN13CMonitor_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:21
    {
    c890:	e51b3008 	ldr	r3, [fp, #-8]
    c894:	e1a00003 	mov	r0, r3
    c898:	ebfffeba 	bl	c388 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c89c:	e51b3008 	ldr	r3, [fp, #-8]
    c8a0:	e1a00003 	mov	r0, r3
    c8a4:	e24bd004 	sub	sp, fp, #4
    c8a8:	e8bd8800 	pop	{fp, pc}
    c8ac:	0000fe74 	andeq	pc, r0, r4, ror lr	; <UNPREDICTABLE>

0000c8b0 <_ZN13CMonitor_FileD0Ev>:
_ZN13CMonitor_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:20
    ~CMonitor_File()
    c8b0:	e92d4800 	push	{fp, lr}
    c8b4:	e28db004 	add	fp, sp, #4
    c8b8:	e24dd008 	sub	sp, sp, #8
    c8bc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:23
    }
    c8c0:	e51b0008 	ldr	r0, [fp, #-8]
    c8c4:	ebffffe8 	bl	c86c <_ZN13CMonitor_FileD1Ev>
    c8c8:	e3a01008 	mov	r1, #8
    c8cc:	e51b0008 	ldr	r0, [fp, #-8]
    c8d0:	ebfff88b 	bl	ab04 <_ZdlPvj>
    c8d4:	e51b3008 	ldr	r3, [fp, #-8]
    c8d8:	e1a00003 	mov	r0, r3
    c8dc:	e24bd004 	sub	sp, fp, #4
    c8e0:	e8bd8800 	pop	{fp, pc}

0000c8e4 <_ZN13CMonitor_File4ReadEPcj>:
_ZN13CMonitor_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:25

    virtual uint32_t Read(char* buffer, uint32_t num) override
    c8e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c8e8:	e28db000 	add	fp, sp, #0
    c8ec:	e24dd014 	sub	sp, sp, #20
    c8f0:	e50b0008 	str	r0, [fp, #-8]
    c8f4:	e50b100c 	str	r1, [fp, #-12]
    c8f8:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:27
    {
        return 0;
    c8fc:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:28
    }
    c900:	e1a00003 	mov	r0, r3
    c904:	e28bd000 	add	sp, fp, #0
    c908:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c90c:	e12fff1e 	bx	lr

0000c910 <_ZN13CMonitor_File5WriteEPKcj>:
_ZN13CMonitor_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:30

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    c910:	e92d4800 	push	{fp, lr}
    c914:	e28db004 	add	fp, sp, #4
    c918:	e24dd010 	sub	sp, sp, #16
    c91c:	e50b0008 	str	r0, [fp, #-8]
    c920:	e50b100c 	str	r1, [fp, #-12]
    c924:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32
    {
        if (num > 0 && buffer != nullptr)
    c928:	e51b3010 	ldr	r3, [fp, #-16]
    c92c:	e3530000 	cmp	r3, #0
    c930:	0a00000b 	beq	c964 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:32 (discriminator 1)
    c934:	e51b300c 	ldr	r3, [fp, #-12]
    c938:	e3530000 	cmp	r3, #0
    c93c:	0a000008 	beq	c964 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:34
        {
            if (mChannel == 0)
    c940:	e51b3008 	ldr	r3, [fp, #-8]
    c944:	e5933004 	ldr	r3, [r3, #4]
    c948:	e3530000 	cmp	r3, #0
    c94c:	1a000004 	bne	c964 <_ZN13CMonitor_File5WriteEPKcj+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:36
            {
                sMonitor << buffer;
    c950:	e51b100c 	ldr	r1, [fp, #-12]
    c954:	e59f0018 	ldr	r0, [pc, #24]	; c974 <_ZN13CMonitor_File5WriteEPKcj+0x64>
    c958:	ebfff2bb 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:37
                return num;
    c95c:	e51b3010 	ldr	r3, [fp, #-16]
    c960:	ea000000 	b	c968 <_ZN13CMonitor_File5WriteEPKcj+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:41
            }
        }

        return 0;
    c964:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:42
    }
    c968:	e1a00003 	mov	r0, r3
    c96c:	e24bd004 	sub	sp, fp, #4
    c970:	e8bd8800 	pop	{fp, pc}
    c974:	0000ff64 	andeq	pc, r0, r4, ror #30

0000c978 <_ZN13CMonitor_File5CloseEv>:
_ZN13CMonitor_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:44

    virtual bool Close() override
    c978:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c97c:	e28db000 	add	fp, sp, #0
    c980:	e24dd00c 	sub	sp, sp, #12
    c984:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:46
    {
        if (mChannel < 0)
    c988:	e51b3008 	ldr	r3, [fp, #-8]
    c98c:	e5933004 	ldr	r3, [r3, #4]
    c990:	e3530000 	cmp	r3, #0
    c994:	aa000001 	bge	c9a0 <_ZN13CMonitor_File5CloseEv+0x28>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:47
            return false;
    c998:	e3a03000 	mov	r3, #0
    c99c:	ea000003 	b	c9b0 <_ZN13CMonitor_File5CloseEv+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:53

        if (mChannel == 0)
        {
        }

        mChannel = -1;
    c9a0:	e51b3008 	ldr	r3, [fp, #-8]
    c9a4:	e3e02000 	mvn	r2, #0
    c9a8:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:55

        return true;
    c9ac:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:56
    }
    c9b0:	e1a00003 	mov	r0, r3
    c9b4:	e28bd000 	add	sp, fp, #0
    c9b8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    c9bc:	e12fff1e 	bx	lr

0000c9c0 <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv>:
_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:58

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    c9c0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    c9c4:	e28db000 	add	fp, sp, #0
    c9c8:	e24dd014 	sub	sp, sp, #20
    c9cc:	e50b0008 	str	r0, [fp, #-8]
    c9d0:	e50b100c 	str	r1, [fp, #-12]
    c9d4:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:60
    {
        if (mChannel == 0)
    c9d8:	e51b3008 	ldr	r3, [fp, #-8]
    c9dc:	e5933004 	ldr	r3, [r3, #4]
    c9e0:	e3530000 	cmp	r3, #0
    c9e4:	1a000001 	bne	c9f0 <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:62
        {
            return true;
    c9e8:	e3a03001 	mov	r3, #1
    c9ec:	ea000000 	b	c9f4 <_ZN13CMonitor_File5IOCtlE16NIOCtl_OperationPv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:65
        }

        return false;
    c9f0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:66
    }
    c9f4:	e1a00003 	mov	r0, r3
    c9f8:	e28bd000 	add	sp, fp, #0
    c9fc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ca00:	e12fff1e 	bx	lr

0000ca04 <_ZN18CMonitor_FS_Driver11On_RegisterEv>:
_ZN18CMonitor_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:72
};

class CMonitor_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    ca04:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ca08:	e28db000 	add	fp, sp, #0
    ca0c:	e24dd00c 	sub	sp, sp, #12
    ca10:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:74
    {
    }
    ca14:	e320f000 	nop	{0}
    ca18:	e28bd000 	add	sp, fp, #0
    ca1c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ca20:	e12fff1e 	bx	lr

0000ca24 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:76

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    ca24:	e92d4810 	push	{r4, fp, lr}
    ca28:	e28db008 	add	fp, sp, #8
    ca2c:	e24dd01c 	sub	sp, sp, #28
    ca30:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    ca34:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    ca38:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:78
    {
        int channel = atoi(path);
    ca3c:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
    ca40:	eb0009e4 	bl	f1d8 <_Z4atoiPKc>
    ca44:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:79
        if (channel != 0)
    ca48:	e51b3010 	ldr	r3, [fp, #-16]
    ca4c:	e3530000 	cmp	r3, #0
    ca50:	0a000001 	beq	ca5c <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:80
            return nullptr;
    ca54:	e3a03000 	mov	r3, #0
    ca58:	ea000008 	b	ca80 <_ZN18CMonitor_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:82

        CMonitor_File* f = new CMonitor_File(channel);
    ca5c:	e3a00008 	mov	r0, #8
    ca60:	ebfffe2f 	bl	c324 <_Znwj>
    ca64:	e1a03000 	mov	r3, r0
    ca68:	e1a04003 	mov	r4, r3
    ca6c:	e51b1010 	ldr	r1, [fp, #-16]
    ca70:	e1a00004 	mov	r0, r4
    ca74:	ebffff69 	bl	c820 <_ZN13CMonitor_FileC1Ei>
    ca78:	e50b4014 	str	r4, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:84

        return f;
    ca7c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:85
    }
    ca80:	e1a00003 	mov	r0, r3
    ca84:	e24bd008 	sub	sp, fp, #8
    ca88:	e8bd8810 	pop	{r4, fp, pc}

0000ca8c <_ZN21CSegment_Display_FileC1Ev>:
_ZN21CSegment_Display_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:16
{
private:
    bool mOpened;

public:
    CSegment_Display_File()
    ca8c:	e92d4800 	push	{fp, lr}
    ca90:	e28db004 	add	fp, sp, #4
    ca94:	e24dd008 	sub	sp, sp, #8
    ca98:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:17
    : mOpened(true)
    ca9c:	e51b3008 	ldr	r3, [fp, #-8]
    caa0:	e1a00003 	mov	r0, r3
    caa4:	ebfffe2a 	bl	c354 <_ZN5IFileC1Ev>
    caa8:	e59f2020 	ldr	r2, [pc, #32]	; cad0 <_ZN21CSegment_Display_FileC1Ev+0x44>
    caac:	e51b3008 	ldr	r3, [fp, #-8]
    cab0:	e5832000 	str	r2, [r3]
    cab4:	e51b3008 	ldr	r3, [fp, #-8]
    cab8:	e3a02001 	mov	r2, #1
    cabc:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:20
    {
        //
    }
    cac0:	e51b3008 	ldr	r3, [fp, #-8]
    cac4:	e1a00003 	mov	r0, r3
    cac8:	e24bd004 	sub	sp, fp, #4
    cacc:	e8bd8800 	pop	{fp, pc}
    cad0:	0000fe44 	andeq	pc, r0, r4, asr #28

0000cad4 <_ZN21CSegment_Display_FileD1Ev>:
_ZN21CSegment_Display_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22

    ~CSegment_Display_File()
    cad4:	e92d4800 	push	{fp, lr}
    cad8:	e28db004 	add	fp, sp, #4
    cadc:	e24dd008 	sub	sp, sp, #8
    cae0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    cae4:	e59f2028 	ldr	r2, [pc, #40]	; cb14 <_ZN21CSegment_Display_FileD1Ev+0x40>
    cae8:	e51b3008 	ldr	r3, [fp, #-8]
    caec:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:24
        Close();
    caf0:	e51b0008 	ldr	r0, [fp, #-8]
    caf4:	eb000046 	bl	cc14 <_ZN21CSegment_Display_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:23
    {
    caf8:	e51b3008 	ldr	r3, [fp, #-8]
    cafc:	e1a00003 	mov	r0, r3
    cb00:	ebfffe20 	bl	c388 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cb04:	e51b3008 	ldr	r3, [fp, #-8]
    cb08:	e1a00003 	mov	r0, r3
    cb0c:	e24bd004 	sub	sp, fp, #4
    cb10:	e8bd8800 	pop	{fp, pc}
    cb14:	0000fe44 	andeq	pc, r0, r4, asr #28

0000cb18 <_ZN21CSegment_Display_FileD0Ev>:
_ZN21CSegment_Display_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:22
    ~CSegment_Display_File()
    cb18:	e92d4800 	push	{fp, lr}
    cb1c:	e28db004 	add	fp, sp, #4
    cb20:	e24dd008 	sub	sp, sp, #8
    cb24:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:25
    }
    cb28:	e51b0008 	ldr	r0, [fp, #-8]
    cb2c:	ebffffe8 	bl	cad4 <_ZN21CSegment_Display_FileD1Ev>
    cb30:	e3a01008 	mov	r1, #8
    cb34:	e51b0008 	ldr	r0, [fp, #-8]
    cb38:	ebfff7f1 	bl	ab04 <_ZdlPvj>
    cb3c:	e51b3008 	ldr	r3, [fp, #-8]
    cb40:	e1a00003 	mov	r0, r3
    cb44:	e24bd004 	sub	sp, fp, #4
    cb48:	e8bd8800 	pop	{fp, pc}

0000cb4c <_ZN21CSegment_Display_File4ReadEPcj>:
_ZN21CSegment_Display_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:27

    virtual uint32_t Read(char* buffer, uint32_t num) override
    cb4c:	e92d4800 	push	{fp, lr}
    cb50:	e28db004 	add	fp, sp, #4
    cb54:	e24dd010 	sub	sp, sp, #16
    cb58:	e50b0008 	str	r0, [fp, #-8]
    cb5c:	e50b100c 	str	r1, [fp, #-12]
    cb60:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:30
    {
        // jen precteme posledni zapsany znak
        if (num > 0)
    cb64:	e51b3010 	ldr	r3, [fp, #-16]
    cb68:	e3530000 	cmp	r3, #0
    cb6c:	0a000007 	beq	cb90 <_ZN21CSegment_Display_File4ReadEPcj+0x44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:32
        {
            buffer[0] = sSegment_Display.Read();
    cb70:	e59f0028 	ldr	r0, [pc, #40]	; cba0 <_ZN21CSegment_Display_File4ReadEPcj+0x54>
    cb74:	ebfff8ae 	bl	ae34 <_ZNK16CSegment_Display4ReadEv>
    cb78:	e1a03000 	mov	r3, r0
    cb7c:	e1a02003 	mov	r2, r3
    cb80:	e51b300c 	ldr	r3, [fp, #-12]
    cb84:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:33
            return 1;
    cb88:	e3a03001 	mov	r3, #1
    cb8c:	ea000000 	b	cb94 <_ZN21CSegment_Display_File4ReadEPcj+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:36
        }

        return 0;
    cb90:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:37
    }
    cb94:	e1a00003 	mov	r0, r3
    cb98:	e24bd004 	sub	sp, fp, #4
    cb9c:	e8bd8800 	pop	{fp, pc}
    cba0:	0000ffa0 	andeq	pc, r0, r0, lsr #31

0000cba4 <_ZN21CSegment_Display_File5WriteEPKcj>:
_ZN21CSegment_Display_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:39

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    cba4:	e92d4800 	push	{fp, lr}
    cba8:	e28db004 	add	fp, sp, #4
    cbac:	e24dd018 	sub	sp, sp, #24
    cbb0:	e50b0010 	str	r0, [fp, #-16]
    cbb4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    cbb8:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42
    {
        // zapiseme vsechny znaky ze vstupu
        for (uint32_t i = 0; i < num; i++)
    cbbc:	e3a03000 	mov	r3, #0
    cbc0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 3)
    cbc4:	e51b2008 	ldr	r2, [fp, #-8]
    cbc8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbcc:	e1520003 	cmp	r2, r3
    cbd0:	2a00000a 	bcs	cc00 <_ZN21CSegment_Display_File5WriteEPKcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:43 (discriminator 2)
            sSegment_Display.Write(buffer[i]);
    cbd4:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    cbd8:	e51b3008 	ldr	r3, [fp, #-8]
    cbdc:	e0823003 	add	r3, r2, r3
    cbe0:	e5d33000 	ldrb	r3, [r3]
    cbe4:	e1a01003 	mov	r1, r3
    cbe8:	e59f0020 	ldr	r0, [pc, #32]	; cc10 <_ZN21CSegment_Display_File5WriteEPKcj+0x6c>
    cbec:	ebfff86b 	bl	ada0 <_ZN16CSegment_Display5WriteEc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:42 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    cbf0:	e51b3008 	ldr	r3, [fp, #-8]
    cbf4:	e2833001 	add	r3, r3, #1
    cbf8:	e50b3008 	str	r3, [fp, #-8]
    cbfc:	eafffff0 	b	cbc4 <_ZN21CSegment_Display_File5WriteEPKcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:45

        return num;
    cc00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:46
    }
    cc04:	e1a00003 	mov	r0, r3
    cc08:	e24bd004 	sub	sp, fp, #4
    cc0c:	e8bd8800 	pop	{fp, pc}
    cc10:	0000ffa0 	andeq	pc, r0, r0, lsr #31

0000cc14 <_ZN21CSegment_Display_File5CloseEv>:
_ZN21CSegment_Display_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:48

    virtual bool Close() override
    cc14:	e92d4800 	push	{fp, lr}
    cc18:	e28db004 	add	fp, sp, #4
    cc1c:	e24dd008 	sub	sp, sp, #8
    cc20:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:50
    {
        if (!mOpened)
    cc24:	e51b3008 	ldr	r3, [fp, #-8]
    cc28:	e5d33004 	ldrb	r3, [r3, #4]
    cc2c:	e2233001 	eor	r3, r3, #1
    cc30:	e6ef3073 	uxtb	r3, r3
    cc34:	e3530000 	cmp	r3, #0
    cc38:	0a000001 	beq	cc44 <_ZN21CSegment_Display_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:51
            return false;
    cc3c:	e3a03000 	mov	r3, #0
    cc40:	ea000005 	b	cc5c <_ZN21CSegment_Display_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:53

        sSegment_Display.Close();
    cc44:	e59f001c 	ldr	r0, [pc, #28]	; cc68 <_ZN21CSegment_Display_File5CloseEv+0x54>
    cc48:	ebfff836 	bl	ad28 <_ZN16CSegment_Display5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:54
        mOpened = false;
    cc4c:	e51b3008 	ldr	r3, [fp, #-8]
    cc50:	e3a02000 	mov	r2, #0
    cc54:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:56

        return true;
    cc58:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:57
    }
    cc5c:	e1a00003 	mov	r0, r3
    cc60:	e24bd004 	sub	sp, fp, #4
    cc64:	e8bd8800 	pop	{fp, pc}
    cc68:	0000ffa0 	andeq	pc, r0, r0, lsr #31

0000cc6c <_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv>:
_ZN21CSegment_Display_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:59

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    cc6c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cc70:	e28db000 	add	fp, sp, #0
    cc74:	e24dd014 	sub	sp, sp, #20
    cc78:	e50b0008 	str	r0, [fp, #-8]
    cc7c:	e50b100c 	str	r1, [fp, #-12]
    cc80:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:61
    {
        return false;
    cc84:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:62
    }
    cc88:	e1a00003 	mov	r0, r3
    cc8c:	e28bd000 	add	sp, fp, #0
    cc90:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cc94:	e12fff1e 	bx	lr

0000cc98 <_ZN26CSegment_Display_FS_Driver11On_RegisterEv>:
_ZN26CSegment_Display_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:68
};

class CSegment_Display_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    cc98:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cc9c:	e28db000 	add	fp, sp, #0
    cca0:	e24dd00c 	sub	sp, sp, #12
    cca4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:71
    {
        //
    }
    cca8:	e320f000 	nop	{0}
    ccac:	e28bd000 	add	sp, fp, #0
    ccb0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ccb4:	e12fff1e 	bx	lr

0000ccb8 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:73

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    ccb8:	e92d4810 	push	{r4, fp, lr}
    ccbc:	e28db008 	add	fp, sp, #8
    ccc0:	e24dd01c 	sub	sp, sp, #28
    ccc4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    ccc8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    cccc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:77
    {
        // segmentovy displej je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sSegment_Display.Open())
    ccd0:	e59f0048 	ldr	r0, [pc, #72]	; cd20 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x68>
    ccd4:	ebfff7f8 	bl	acbc <_ZN16CSegment_Display4OpenEv>
    ccd8:	e1a03000 	mov	r3, r0
    ccdc:	e2233001 	eor	r3, r3, #1
    cce0:	e6ef3073 	uxtb	r3, r3
    cce4:	e3530000 	cmp	r3, #0
    cce8:	0a000001 	beq	ccf4 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:78
            return nullptr;
    ccec:	e3a03000 	mov	r3, #0
    ccf0:	ea000007 	b	cd14 <_ZN26CSegment_Display_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:80

        CSegment_Display_File* f = new CSegment_Display_File();
    ccf4:	e3a00008 	mov	r0, #8
    ccf8:	ebfffd89 	bl	c324 <_Znwj>
    ccfc:	e1a03000 	mov	r3, r0
    cd00:	e1a04003 	mov	r4, r3
    cd04:	e1a00004 	mov	r0, r4
    cd08:	ebffff5f 	bl	ca8c <_ZN21CSegment_Display_FileC1Ev>
    cd0c:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:82

        return f;
    cd10:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:83
    }
    cd14:	e1a00003 	mov	r0, r3
    cd18:	e24bd008 	sub	sp, fp, #8
    cd1c:	e8bd8810 	pop	{r4, fp, pc}
    cd20:	0000ffa0 	andeq	pc, r0, r0, lsr #31

0000cd24 <_ZN20CShift_Register_FileC1Ev>:
_ZN20CShift_Register_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:16
{
private:
    bool mOpened;

public:
    CShift_Register_File()
    cd24:	e92d4800 	push	{fp, lr}
    cd28:	e28db004 	add	fp, sp, #4
    cd2c:	e24dd008 	sub	sp, sp, #8
    cd30:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:17
    : mOpened(true)
    cd34:	e51b3008 	ldr	r3, [fp, #-8]
    cd38:	e1a00003 	mov	r0, r3
    cd3c:	ebfffd84 	bl	c354 <_ZN5IFileC1Ev>
    cd40:	e59f2020 	ldr	r2, [pc, #32]	; cd68 <_ZN20CShift_Register_FileC1Ev+0x44>
    cd44:	e51b3008 	ldr	r3, [fp, #-8]
    cd48:	e5832000 	str	r2, [r3]
    cd4c:	e51b3008 	ldr	r3, [fp, #-8]
    cd50:	e3a02001 	mov	r2, #1
    cd54:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:20
    {
        //
    }
    cd58:	e51b3008 	ldr	r3, [fp, #-8]
    cd5c:	e1a00003 	mov	r0, r3
    cd60:	e24bd004 	sub	sp, fp, #4
    cd64:	e8bd8800 	pop	{fp, pc}
    cd68:	0000fe14 	andeq	pc, r0, r4, lsl lr	; <UNPREDICTABLE>

0000cd6c <_ZN20CShift_Register_FileD1Ev>:
_ZN20CShift_Register_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22

    ~CShift_Register_File()
    cd6c:	e92d4800 	push	{fp, lr}
    cd70:	e28db004 	add	fp, sp, #4
    cd74:	e24dd008 	sub	sp, sp, #8
    cd78:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    cd7c:	e59f2028 	ldr	r2, [pc, #40]	; cdac <_ZN20CShift_Register_FileD1Ev+0x40>
    cd80:	e51b3008 	ldr	r3, [fp, #-8]
    cd84:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:24
        Close();
    cd88:	e51b0008 	ldr	r0, [fp, #-8]
    cd8c:	eb00003b 	bl	ce80 <_ZN20CShift_Register_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:23
    {
    cd90:	e51b3008 	ldr	r3, [fp, #-8]
    cd94:	e1a00003 	mov	r0, r3
    cd98:	ebfffd7a 	bl	c388 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    cd9c:	e51b3008 	ldr	r3, [fp, #-8]
    cda0:	e1a00003 	mov	r0, r3
    cda4:	e24bd004 	sub	sp, fp, #4
    cda8:	e8bd8800 	pop	{fp, pc}
    cdac:	0000fe14 	andeq	pc, r0, r4, lsl lr	; <UNPREDICTABLE>

0000cdb0 <_ZN20CShift_Register_FileD0Ev>:
_ZN20CShift_Register_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:22
    ~CShift_Register_File()
    cdb0:	e92d4800 	push	{fp, lr}
    cdb4:	e28db004 	add	fp, sp, #4
    cdb8:	e24dd008 	sub	sp, sp, #8
    cdbc:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:25
    }
    cdc0:	e51b0008 	ldr	r0, [fp, #-8]
    cdc4:	ebffffe8 	bl	cd6c <_ZN20CShift_Register_FileD1Ev>
    cdc8:	e3a01008 	mov	r1, #8
    cdcc:	e51b0008 	ldr	r0, [fp, #-8]
    cdd0:	ebfff74b 	bl	ab04 <_ZdlPvj>
    cdd4:	e51b3008 	ldr	r3, [fp, #-8]
    cdd8:	e1a00003 	mov	r0, r3
    cddc:	e24bd004 	sub	sp, fp, #4
    cde0:	e8bd8800 	pop	{fp, pc}

0000cde4 <_ZN20CShift_Register_File4ReadEPcj>:
_ZN20CShift_Register_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:27

    virtual uint32_t Read(char* buffer, uint32_t num) override
    cde4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cde8:	e28db000 	add	fp, sp, #0
    cdec:	e24dd014 	sub	sp, sp, #20
    cdf0:	e50b0008 	str	r0, [fp, #-8]
    cdf4:	e50b100c 	str	r1, [fp, #-12]
    cdf8:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:31
    {
        // neumime cist z posuvneho registru (samozrejme by to bylo mozne, jen ho tak nemame zapojeny)

        return 0;
    cdfc:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:32
    }
    ce00:	e1a00003 	mov	r0, r3
    ce04:	e28bd000 	add	sp, fp, #0
    ce08:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ce0c:	e12fff1e 	bx	lr

0000ce10 <_ZN20CShift_Register_File5WriteEPKcj>:
_ZN20CShift_Register_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:34

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    ce10:	e92d4800 	push	{fp, lr}
    ce14:	e28db004 	add	fp, sp, #4
    ce18:	e24dd018 	sub	sp, sp, #24
    ce1c:	e50b0010 	str	r0, [fp, #-16]
    ce20:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    ce24:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38
    {
        // umime jen znakovy pristup v tomto druhu souboru (tedy neumime nasouvat jednotlive bity)
        // teoreticky muze mit shift registr vice nez 8 bitu, tak proste nasuneme vsechno ze vstupu
        for (uint32_t i = 0; i < num; i++)
    ce28:	e3a03000 	mov	r3, #0
    ce2c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 3)
    ce30:	e51b2008 	ldr	r2, [fp, #-8]
    ce34:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ce38:	e1520003 	cmp	r2, r3
    ce3c:	2a00000a 	bcs	ce6c <_ZN20CShift_Register_File5WriteEPKcj+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:39 (discriminator 2)
            sShift_Register.Shift_In(static_cast<uint8_t>(buffer[i]));
    ce40:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    ce44:	e51b3008 	ldr	r3, [fp, #-8]
    ce48:	e0823003 	add	r3, r2, r3
    ce4c:	e5d33000 	ldrb	r3, [r3]
    ce50:	e1a01003 	mov	r1, r3
    ce54:	e59f0020 	ldr	r0, [pc, #32]	; ce7c <_ZN20CShift_Register_File5WriteEPKcj+0x6c>
    ce58:	ebfff91c 	bl	b2d0 <_ZN15CShift_Register8Shift_InEh>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:38 (discriminator 2)
        for (uint32_t i = 0; i < num; i++)
    ce5c:	e51b3008 	ldr	r3, [fp, #-8]
    ce60:	e2833001 	add	r3, r3, #1
    ce64:	e50b3008 	str	r3, [fp, #-8]
    ce68:	eafffff0 	b	ce30 <_ZN20CShift_Register_File5WriteEPKcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:41

        return num;
    ce6c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:42
    }
    ce70:	e1a00003 	mov	r0, r3
    ce74:	e24bd004 	sub	sp, fp, #4
    ce78:	e8bd8800 	pop	{fp, pc}
    ce7c:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000ce80 <_ZN20CShift_Register_File5CloseEv>:
_ZN20CShift_Register_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:44

    virtual bool Close() override
    ce80:	e92d4800 	push	{fp, lr}
    ce84:	e28db004 	add	fp, sp, #4
    ce88:	e24dd008 	sub	sp, sp, #8
    ce8c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:46
    {
        if (!mOpened)
    ce90:	e51b3008 	ldr	r3, [fp, #-8]
    ce94:	e5d33004 	ldrb	r3, [r3, #4]
    ce98:	e2233001 	eor	r3, r3, #1
    ce9c:	e6ef3073 	uxtb	r3, r3
    cea0:	e3530000 	cmp	r3, #0
    cea4:	0a000001 	beq	ceb0 <_ZN20CShift_Register_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:47
            return false;
    cea8:	e3a03000 	mov	r3, #0
    ceac:	ea000005 	b	cec8 <_ZN20CShift_Register_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:49

        sShift_Register.Close();
    ceb0:	e59f001c 	ldr	r0, [pc, #28]	; ced4 <_ZN20CShift_Register_File5CloseEv+0x54>
    ceb4:	ebfff87c 	bl	b0ac <_ZN15CShift_Register5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:50
        mOpened = false;
    ceb8:	e51b3008 	ldr	r3, [fp, #-8]
    cebc:	e3a02000 	mov	r2, #0
    cec0:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:52

        return true;
    cec4:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:53
    }
    cec8:	e1a00003 	mov	r0, r3
    cecc:	e24bd004 	sub	sp, fp, #4
    ced0:	e8bd8800 	pop	{fp, pc}
    ced4:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000ced8 <_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv>:
_ZN20CShift_Register_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:55

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    ced8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cedc:	e28db000 	add	fp, sp, #0
    cee0:	e24dd014 	sub	sp, sp, #20
    cee4:	e50b0008 	str	r0, [fp, #-8]
    cee8:	e50b100c 	str	r1, [fp, #-12]
    ceec:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:57
    {
        return false;
    cef0:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:58
    }
    cef4:	e1a00003 	mov	r0, r3
    cef8:	e28bd000 	add	sp, fp, #0
    cefc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cf00:	e12fff1e 	bx	lr

0000cf04 <_ZN25CShift_Register_FS_Driver11On_RegisterEv>:
_ZN25CShift_Register_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:64
};

class CShift_Register_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    cf04:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    cf08:	e28db000 	add	fp, sp, #0
    cf0c:	e24dd00c 	sub	sp, sp, #12
    cf10:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:67
    {
        //
    }
    cf14:	e320f000 	nop	{0}
    cf18:	e28bd000 	add	sp, fp, #0
    cf1c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    cf20:	e12fff1e 	bx	lr

0000cf24 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:69

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    cf24:	e92d4810 	push	{r4, fp, lr}
    cf28:	e28db008 	add	fp, sp, #8
    cf2c:	e24dd01c 	sub	sp, sp, #28
    cf30:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    cf34:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    cf38:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:73
    {
        // shift register je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sShift_Register.Open())
    cf3c:	e59f0048 	ldr	r0, [pc, #72]	; cf8c <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x68>
    cf40:	ebfff7fc 	bl	af38 <_ZN15CShift_Register4OpenEv>
    cf44:	e1a03000 	mov	r3, r0
    cf48:	e2233001 	eor	r3, r3, #1
    cf4c:	e6ef3073 	uxtb	r3, r3
    cf50:	e3530000 	cmp	r3, #0
    cf54:	0a000001 	beq	cf60 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:74
            return nullptr;
    cf58:	e3a03000 	mov	r3, #0
    cf5c:	ea000007 	b	cf80 <_ZN25CShift_Register_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x5c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:76

        CShift_Register_File* f = new CShift_Register_File();
    cf60:	e3a00008 	mov	r0, #8
    cf64:	ebfffcee 	bl	c324 <_Znwj>
    cf68:	e1a03000 	mov	r3, r0
    cf6c:	e1a04003 	mov	r4, r3
    cf70:	e1a00004 	mov	r0, r4
    cf74:	ebffff6a 	bl	cd24 <_ZN20CShift_Register_FileC1Ev>
    cf78:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:78

        return f;
    cf7c:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:79
    }
    cf80:	e1a00003 	mov	r0, r3
    cf84:	e24bd008 	sub	sp, fp, #8
    cf88:	e8bd8810 	pop	{r4, fp, pc}
    cf8c:	0000ffa4 	andeq	pc, r0, r4, lsr #31

0000cf90 <_ZN10CTRNG_FileC1Ev>:
_ZN10CTRNG_FileC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:16
{
private:
    bool mOpened;

public:
    CTRNG_File()
    cf90:	e92d4800 	push	{fp, lr}
    cf94:	e28db004 	add	fp, sp, #4
    cf98:	e24dd008 	sub	sp, sp, #8
    cf9c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:17
    {
    cfa0:	e51b3008 	ldr	r3, [fp, #-8]
    cfa4:	e1a00003 	mov	r0, r3
    cfa8:	ebfffce9 	bl	c354 <_ZN5IFileC1Ev>
    cfac:	e59f2014 	ldr	r2, [pc, #20]	; cfc8 <_ZN10CTRNG_FileC1Ev+0x38>
    cfb0:	e51b3008 	ldr	r3, [fp, #-8]
    cfb4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:19
        //
    }
    cfb8:	e51b3008 	ldr	r3, [fp, #-8]
    cfbc:	e1a00003 	mov	r0, r3
    cfc0:	e24bd004 	sub	sp, fp, #4
    cfc4:	e8bd8800 	pop	{fp, pc}
    cfc8:	0000fde4 	andeq	pc, r0, r4, ror #27

0000cfcc <_ZN10CTRNG_FileD1Ev>:
_ZN10CTRNG_FileD2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21

    ~CTRNG_File()
    cfcc:	e92d4800 	push	{fp, lr}
    cfd0:	e28db004 	add	fp, sp, #4
    cfd4:	e24dd008 	sub	sp, sp, #8
    cfd8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    cfdc:	e59f2028 	ldr	r2, [pc, #40]	; d00c <_ZN10CTRNG_FileD1Ev+0x40>
    cfe0:	e51b3008 	ldr	r3, [fp, #-8]
    cfe4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:23
        Close();
    cfe8:	e51b0008 	ldr	r0, [fp, #-8]
    cfec:	eb000059 	bl	d158 <_ZN10CTRNG_File5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:22
    {
    cff0:	e51b3008 	ldr	r3, [fp, #-8]
    cff4:	e1a00003 	mov	r0, r3
    cff8:	ebfffce2 	bl	c388 <_ZN5IFileD1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    cffc:	e51b3008 	ldr	r3, [fp, #-8]
    d000:	e1a00003 	mov	r0, r3
    d004:	e24bd004 	sub	sp, fp, #4
    d008:	e8bd8800 	pop	{fp, pc}
    d00c:	0000fde4 	andeq	pc, r0, r4, ror #27

0000d010 <_ZN10CTRNG_FileD0Ev>:
_ZN10CTRNG_FileD0Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:21
    ~CTRNG_File()
    d010:	e92d4800 	push	{fp, lr}
    d014:	e28db004 	add	fp, sp, #4
    d018:	e24dd008 	sub	sp, sp, #8
    d01c:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:24
    }
    d020:	e51b0008 	ldr	r0, [fp, #-8]
    d024:	ebffffe8 	bl	cfcc <_ZN10CTRNG_FileD1Ev>
    d028:	e3a01008 	mov	r1, #8
    d02c:	e51b0008 	ldr	r0, [fp, #-8]
    d030:	ebfff6b3 	bl	ab04 <_ZdlPvj>
    d034:	e51b3008 	ldr	r3, [fp, #-8]
    d038:	e1a00003 	mov	r0, r3
    d03c:	e24bd004 	sub	sp, fp, #4
    d040:	e8bd8800 	pop	{fp, pc}

0000d044 <_ZN10CTRNG_File4ReadEPcj>:
_ZN10CTRNG_File4ReadEPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:26

    virtual uint32_t Read(char* buffer, uint32_t num) override
    d044:	e92d4810 	push	{r4, fp, lr}
    d048:	e28db008 	add	fp, sp, #8
    d04c:	e24dd024 	sub	sp, sp, #36	; 0x24
    d050:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    d054:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    d058:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:28
    {
        const uint32_t wcount = num / 4;
    d05c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    d060:	e1a03123 	lsr	r3, r3, #2
    d064:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:29
        uint32_t* wbuf = reinterpret_cast<uint32_t*>(buffer);
    d068:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    d06c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30
        for (int i = 0; i < wcount; i++)
    d070:	e3a03000 	mov	r3, #0
    d074:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 3)
    d078:	e51b3010 	ldr	r3, [fp, #-16]
    d07c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    d080:	e1520003 	cmp	r2, r3
    d084:	9a00000b 	bls	d0b8 <_ZN10CTRNG_File4ReadEPcj+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:31 (discriminator 2)
            wbuf[i] = sTRNG.Get_Random_Number();
    d088:	e51b3010 	ldr	r3, [fp, #-16]
    d08c:	e1a03103 	lsl	r3, r3, #2
    d090:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    d094:	e0824003 	add	r4, r2, r3
    d098:	e59f0088 	ldr	r0, [pc, #136]	; d128 <_ZN10CTRNG_File4ReadEPcj+0xe4>
    d09c:	ebfffa17 	bl	b900 <_ZN5CTRNG17Get_Random_NumberEv>
    d0a0:	e1a03000 	mov	r3, r0
    d0a4:	e5843000 	str	r3, [r4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:30 (discriminator 2)
        for (int i = 0; i < wcount; i++)
    d0a8:	e51b3010 	ldr	r3, [fp, #-16]
    d0ac:	e2833001 	add	r3, r3, #1
    d0b0:	e50b3010 	str	r3, [fp, #-16]
    d0b4:	eaffffef 	b	d078 <_ZN10CTRNG_File4ReadEPcj+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:33

        if (wcount * 4 != num)
    d0b8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    d0bc:	e1a03103 	lsl	r3, r3, #2
    d0c0:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
    d0c4:	e1520003 	cmp	r2, r3
    d0c8:	0a000012 	beq	d118 <_ZN10CTRNG_File4ReadEPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37
        {
            // tohle by se dalo vyresit jednim generovanim a posunem na pozici, ale pro ted staci takhle
            // ted tomu trochu "krademe" entropii
            for (int i = wcount * 4; i < num; i++)
    d0cc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    d0d0:	e1a03103 	lsl	r3, r3, #2
    d0d4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 3)
    d0d8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d0dc:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
    d0e0:	e1520003 	cmp	r2, r3
    d0e4:	9a00000b 	bls	d118 <_ZN10CTRNG_File4ReadEPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:38 (discriminator 2)
                buffer[i] = static_cast<uint8_t>(sTRNG.Get_Random_Number());
    d0e8:	e59f0038 	ldr	r0, [pc, #56]	; d128 <_ZN10CTRNG_File4ReadEPcj+0xe4>
    d0ec:	ebfffa03 	bl	b900 <_ZN5CTRNG17Get_Random_NumberEv>
    d0f0:	e1a01000 	mov	r1, r0
    d0f4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d0f8:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
    d0fc:	e0823003 	add	r3, r2, r3
    d100:	e6ef2071 	uxtb	r2, r1
    d104:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:37 (discriminator 2)
            for (int i = wcount * 4; i < num; i++)
    d108:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d10c:	e2833001 	add	r3, r3, #1
    d110:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    d114:	eaffffef 	b	d0d8 <_ZN10CTRNG_File4ReadEPcj+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:41
        }

        return 0;
    d118:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:42
    }
    d11c:	e1a00003 	mov	r0, r3
    d120:	e24bd008 	sub	sp, fp, #8
    d124:	e8bd8810 	pop	{r4, fp, pc}
    d128:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc

0000d12c <_ZN10CTRNG_File5WriteEPKcj>:
_ZN10CTRNG_File5WriteEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:44

    virtual uint32_t Write(const char* buffer, uint32_t num) override
    d12c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d130:	e28db000 	add	fp, sp, #0
    d134:	e24dd014 	sub	sp, sp, #20
    d138:	e50b0008 	str	r0, [fp, #-8]
    d13c:	e50b100c 	str	r1, [fp, #-12]
    d140:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:48
    {
        // do TRNG nelze zapisovat

        return 0;
    d144:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:49
    }
    d148:	e1a00003 	mov	r0, r3
    d14c:	e28bd000 	add	sp, fp, #0
    d150:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d154:	e12fff1e 	bx	lr

0000d158 <_ZN10CTRNG_File5CloseEv>:
_ZN10CTRNG_File5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:51

    virtual bool Close() override
    d158:	e92d4800 	push	{fp, lr}
    d15c:	e28db004 	add	fp, sp, #4
    d160:	e24dd008 	sub	sp, sp, #8
    d164:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:53
    {
        if (!mOpened)
    d168:	e51b3008 	ldr	r3, [fp, #-8]
    d16c:	e5d33004 	ldrb	r3, [r3, #4]
    d170:	e2233001 	eor	r3, r3, #1
    d174:	e6ef3073 	uxtb	r3, r3
    d178:	e3530000 	cmp	r3, #0
    d17c:	0a000001 	beq	d188 <_ZN10CTRNG_File5CloseEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:54
            return false;
    d180:	e3a03000 	mov	r3, #0
    d184:	ea000005 	b	d1a0 <_ZN10CTRNG_File5CloseEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:56

        sTRNG.Close();
    d188:	e59f001c 	ldr	r0, [pc, #28]	; d1ac <_ZN10CTRNG_File5CloseEv+0x54>
    d18c:	ebfff9b3 	bl	b860 <_ZN5CTRNG5CloseEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:57
        mOpened = false;
    d190:	e51b3008 	ldr	r3, [fp, #-8]
    d194:	e3a02000 	mov	r2, #0
    d198:	e5c32004 	strb	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:59

        return true;
    d19c:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:60
    }
    d1a0:	e1a00003 	mov	r0, r3
    d1a4:	e24bd004 	sub	sp, fp, #4
    d1a8:	e8bd8800 	pop	{fp, pc}
    d1ac:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc

0000d1b0 <_ZN10CTRNG_File5IOCtlE16NIOCtl_OperationPv>:
_ZN10CTRNG_File5IOCtlE16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:62

    virtual bool IOCtl(NIOCtl_Operation dir, void* ctlptr) override
    d1b0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d1b4:	e28db000 	add	fp, sp, #0
    d1b8:	e24dd014 	sub	sp, sp, #20
    d1bc:	e50b0008 	str	r0, [fp, #-8]
    d1c0:	e50b100c 	str	r1, [fp, #-12]
    d1c4:	e50b2010 	str	r2, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:64
    {
        return false;
    d1c8:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:65
    }
    d1cc:	e1a00003 	mov	r0, r3
    d1d0:	e28bd000 	add	sp, fp, #0
    d1d4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d1d8:	e12fff1e 	bx	lr

0000d1dc <_ZN15CTRNG_FS_Driver11On_RegisterEv>:
_ZN15CTRNG_FS_Driver11On_RegisterEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:71
};

class CTRNG_FS_Driver : public IFilesystem_Driver
{
public:
    virtual void On_Register() override
    d1dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d1e0:	e28db000 	add	fp, sp, #0
    d1e4:	e24dd00c 	sub	sp, sp, #12
    d1e8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:74
    {
        //
    }
    d1ec:	e320f000 	nop	{0}
    d1f0:	e28bd000 	add	sp, fp, #0
    d1f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d1f8:	e12fff1e 	bx	lr

0000d1fc <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode>:
_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:76

    virtual IFile* Open_File(const char* path, NFile_Open_Mode mode) override
    d1fc:	e92d4810 	push	{r4, fp, lr}
    d200:	e28db008 	add	fp, sp, #8
    d204:	e24dd01c 	sub	sp, sp, #28
    d208:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d20c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    d210:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:80
    {
        // TRNG je jen jeden a vyhrazeny, takze je jedno co je v ceste

        if (!sTRNG.Open(mode == NFile_Open_Mode::Read_Write)) // read_write povazujeme za "exkluzivni" mod
    d214:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    d218:	e3530002 	cmp	r3, #2
    d21c:	03a03001 	moveq	r3, #1
    d220:	13a03000 	movne	r3, #0
    d224:	e6ef3073 	uxtb	r3, r3
    d228:	e1a01003 	mov	r1, r3
    d22c:	e59f0048 	ldr	r0, [pc, #72]	; d27c <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x80>
    d230:	ebfff950 	bl	b778 <_ZN5CTRNG4OpenEb>
    d234:	e1a03000 	mov	r3, r0
    d238:	e2233001 	eor	r3, r3, #1
    d23c:	e6ef3073 	uxtb	r3, r3
    d240:	e3530000 	cmp	r3, #0
    d244:	0a000001 	beq	d250 <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:81
            return nullptr;
    d248:	e3a03000 	mov	r3, #0
    d24c:	ea000007 	b	d270 <_ZN15CTRNG_FS_Driver9Open_FileEPKc15NFile_Open_Mode+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:83

        CTRNG_File* f = new CTRNG_File();
    d250:	e3a00008 	mov	r0, #8
    d254:	ebfffc32 	bl	c324 <_Znwj>
    d258:	e1a03000 	mov	r3, r0
    d25c:	e1a04003 	mov	r4, r3
    d260:	e1a00004 	mov	r0, r4
    d264:	ebffff49 	bl	cf90 <_ZN10CTRNG_FileC1Ev>
    d268:	e50b4010 	str	r4, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:85

        return f;
    d26c:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:86
    }
    d270:	e1a00003 	mov	r0, r3
    d274:	e24bd008 	sub	sp, fp, #8
    d278:	e8bd8810 	pop	{r4, fp, pc}
    d27c:	0000ffbc 			; <UNDEFINED> instruction: 0x0000ffbc

0000d280 <_internal_software_interrupt_handler>:
_internal_software_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:19

extern "C" TSWI_Result* _internal_software_interrupt_handler(uint32_t register r0,
                                                             uint32_t register r1,
                                                             uint32_t register r2,
                                                             uint32_t register /*r3*/ service_identifier)
{
    d280:	e92d4800 	push	{fp, lr}
    d284:	e28db004 	add	fp, sp, #4
    d288:	e24dd010 	sub	sp, sp, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:21
    // facility jsou horni 2 bity, zbytek je cislo sluzby v dane facility
    NSWI_Facility facility = static_cast<NSWI_Facility>(service_identifier >> 6);
    d28c:	e1a0c323 	lsr	ip, r3, #6
    d290:	e50bc008 	str	ip, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:23

    switch (facility)
    d294:	e51bc008 	ldr	ip, [fp, #-8]
    d298:	e35c0000 	cmp	ip, #0
    d29c:	0a000003 	beq	d2b0 <_internal_software_interrupt_handler+0x30>
    d2a0:	e51bc008 	ldr	ip, [fp, #-8]
    d2a4:	e35c0001 	cmp	ip, #1
    d2a8:	0a00000b 	beq	d2dc <_internal_software_interrupt_handler+0x5c>
    d2ac:	ea000015 	b	d308 <_internal_software_interrupt_handler+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:26
    {
        case NSWI_Facility::Process:
            sProcessMgr.Handle_Process_SWI(static_cast<NSWI_Process_Service>(service_identifier & 0x3F),
    d2b0:	e203303f 	and	r3, r3, #63	; 0x3f
    d2b4:	e1a0c003 	mov	ip, r3
    d2b8:	e59f3058 	ldr	r3, [pc, #88]	; d318 <_internal_software_interrupt_handler+0x98>
    d2bc:	e58d3004 	str	r3, [sp, #4]
    d2c0:	e58d2000 	str	r2, [sp]
    d2c4:	e1a03001 	mov	r3, r1
    d2c8:	e1a02000 	mov	r2, r0
    d2cc:	e1a0100c 	mov	r1, ip
    d2d0:	e59f0044 	ldr	r0, [pc, #68]	; d31c <_internal_software_interrupt_handler+0x9c>
    d2d4:	eb00040f 	bl	e318 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:31
                                           r0,
                                           r1,
                                           r2,
                                           _SWI_Result);
            break;
    d2d8:	ea00000a 	b	d308 <_internal_software_interrupt_handler+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:33
        case NSWI_Facility::Filesystem:
            sProcessMgr.Handle_Filesystem_SWI(static_cast<NSWI_Filesystem_Service>(service_identifier & 0x3F),
    d2dc:	e203303f 	and	r3, r3, #63	; 0x3f
    d2e0:	e1a0c003 	mov	ip, r3
    d2e4:	e59f302c 	ldr	r3, [pc, #44]	; d318 <_internal_software_interrupt_handler+0x98>
    d2e8:	e58d3004 	str	r3, [sp, #4]
    d2ec:	e58d2000 	str	r2, [sp]
    d2f0:	e1a03001 	mov	r3, r1
    d2f4:	e1a02000 	mov	r2, r0
    d2f8:	e1a0100c 	mov	r1, ip
    d2fc:	e59f0018 	ldr	r0, [pc, #24]	; d31c <_internal_software_interrupt_handler+0x9c>
    d300:	eb00041d 	bl	e37c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:38
                                              r0,
                                              r1,
                                              r2,
                                              _SWI_Result);
            break;
    d304:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:41
    }

    return &_SWI_Result;
    d308:	e59f3008 	ldr	r3, [pc, #8]	; d318 <_internal_software_interrupt_handler+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:42
}
    d30c:	e1a00003 	mov	r0, r3
    d310:	e24bd004 	sub	sp, fp, #4
    d314:	e8bd8800 	pop	{fp, pc}
    d318:	00010058 	andeq	r0, r1, r8, asr r0
    d31c:	00011064 	andeq	r1, r1, r4, rrx

0000d320 <_internal_irq_handler>:
_internal_irq_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:45

extern "C" void _internal_irq_handler()
{
    d320:	e92d4800 	push	{fp, lr}
    d324:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:50
    // jelikoz ARM nerozlisuje zdroje IRQ implicitne, ani nezarucuje, ze se navzajen nemaskuji, musime
    // projit vsechny mozne zdroje a podivat se (poll), zda nebylo vyvolano preruseni

    // casovac
    if (sTimer.Is_Timer_IRQ_Pending())
    d328:	e59f001c 	ldr	r0, [pc, #28]	; d34c <_internal_irq_handler+0x2c>
    d32c:	ebfff8d5 	bl	b688 <_ZN6CTimer20Is_Timer_IRQ_PendingEv>
    d330:	e1a03000 	mov	r3, r0
    d334:	e3530000 	cmp	r3, #0
    d338:	0a000001 	beq	d344 <_internal_irq_handler+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:51
        sTimer.IRQ_Callback();
    d33c:	e59f0008 	ldr	r0, [pc, #8]	; d34c <_internal_irq_handler+0x2c>
    d340:	ebfff8bc 	bl	b638 <_ZN6CTimer12IRQ_CallbackEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:52
}
    d344:	e320f000 	nop	{0}
    d348:	e8bd8800 	pop	{fp, pc}
    d34c:	0000ffb4 			; <UNDEFINED> instruction: 0x0000ffb4

0000d350 <fast_interrupt_handler>:
fast_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:55

extern "C" void __attribute__((interrupt("FIQ"))) fast_interrupt_handler()
{
    d350:	e24db004 	sub	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:57
    // zatim nepouzivame
}
    d354:	e320f000 	nop	{0}
    d358:	e28bd004 	add	sp, fp, #4
    d35c:	e25ef004 	subs	pc, lr, #4

0000d360 <_ZN21CInterrupt_ControllerC1Em>:
_ZN21CInterrupt_ControllerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:61

// implementace controlleru

CInterrupt_Controller::CInterrupt_Controller(unsigned long base)
    d360:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d364:	e28db000 	add	fp, sp, #0
    d368:	e24dd00c 	sub	sp, sp, #12
    d36c:	e50b0008 	str	r0, [fp, #-8]
    d370:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:62
: mInterrupt_Regs(reinterpret_cast<unsigned int*>(base))
    d374:	e51b200c 	ldr	r2, [fp, #-12]
    d378:	e51b3008 	ldr	r3, [fp, #-8]
    d37c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:65
{
    //
}
    d380:	e51b3008 	ldr	r3, [fp, #-8]
    d384:	e1a00003 	mov	r0, r3
    d388:	e28bd000 	add	sp, fp, #0
    d38c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d390:	e12fff1e 	bx	lr

0000d394 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>:
_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:68

volatile unsigned int& CInterrupt_Controller::Regs(hal::Interrupt_Controller_Reg reg)
{
    d394:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d398:	e28db000 	add	fp, sp, #0
    d39c:	e24dd00c 	sub	sp, sp, #12
    d3a0:	e50b0008 	str	r0, [fp, #-8]
    d3a4:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:69
    return mInterrupt_Regs[static_cast<unsigned int>(reg)];
    d3a8:	e51b3008 	ldr	r3, [fp, #-8]
    d3ac:	e5932000 	ldr	r2, [r3]
    d3b0:	e51b300c 	ldr	r3, [fp, #-12]
    d3b4:	e1a03103 	lsl	r3, r3, #2
    d3b8:	e0823003 	add	r3, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:70
}
    d3bc:	e1a00003 	mov	r0, r3
    d3c0:	e28bd000 	add	sp, fp, #0
    d3c4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d3c8:	e12fff1e 	bx	lr

0000d3cc <_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE>:
_ZN21CInterrupt_Controller16Enable_Basic_IRQEN3hal16IRQ_Basic_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:73

void CInterrupt_Controller::Enable_Basic_IRQ(hal::IRQ_Basic_Source source_idx)
{
    d3cc:	e92d4810 	push	{r4, fp, lr}
    d3d0:	e28db008 	add	fp, sp, #8
    d3d4:	e24dd00c 	sub	sp, sp, #12
    d3d8:	e50b0010 	str	r0, [fp, #-16]
    d3dc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:74
    Regs(hal::Interrupt_Controller_Reg::IRQ_Basic_Enable) = (1 << static_cast<unsigned int>(source_idx));
    d3e0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d3e4:	e3a02001 	mov	r2, #1
    d3e8:	e1a04312 	lsl	r4, r2, r3
    d3ec:	e3a01006 	mov	r1, #6
    d3f0:	e51b0010 	ldr	r0, [fp, #-16]
    d3f4:	ebffffe6 	bl	d394 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d3f8:	e1a03000 	mov	r3, r0
    d3fc:	e1a02004 	mov	r2, r4
    d400:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:75
}
    d404:	e320f000 	nop	{0}
    d408:	e24bd008 	sub	sp, fp, #8
    d40c:	e8bd8810 	pop	{r4, fp, pc}

0000d410 <_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE>:
_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:78

void CInterrupt_Controller::Disable_Basic_IRQ(hal::IRQ_Basic_Source source_idx)
{
    d410:	e92d4810 	push	{r4, fp, lr}
    d414:	e28db008 	add	fp, sp, #8
    d418:	e24dd00c 	sub	sp, sp, #12
    d41c:	e50b0010 	str	r0, [fp, #-16]
    d420:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:79
    Regs(hal::Interrupt_Controller_Reg::IRQ_Basic_Disable) = (1 << static_cast<unsigned int>(source_idx));
    d424:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d428:	e3a02001 	mov	r2, #1
    d42c:	e1a04312 	lsl	r4, r2, r3
    d430:	e3a01009 	mov	r1, #9
    d434:	e51b0010 	ldr	r0, [fp, #-16]
    d438:	ebffffd5 	bl	d394 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d43c:	e1a03000 	mov	r3, r0
    d440:	e1a02004 	mov	r2, r4
    d444:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:80
}
    d448:	e320f000 	nop	{0}
    d44c:	e24bd008 	sub	sp, fp, #8
    d450:	e8bd8810 	pop	{r4, fp, pc}

0000d454 <_ZN21CInterrupt_Controller10Enable_IRQEN3hal10IRQ_SourceE>:
_ZN21CInterrupt_Controller10Enable_IRQEN3hal10IRQ_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:83

void CInterrupt_Controller::Enable_IRQ(hal::IRQ_Source source_idx)
{
    d454:	e92d4810 	push	{r4, fp, lr}
    d458:	e28db008 	add	fp, sp, #8
    d45c:	e24dd014 	sub	sp, sp, #20
    d460:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d464:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:84
    const unsigned int idx_base = static_cast<unsigned int>(source_idx);
    d468:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    d46c:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:87

    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    (1 << (idx_base % 32));
    d470:	e51b3010 	ldr	r3, [fp, #-16]
    d474:	e203301f 	and	r3, r3, #31
    d478:	e3a02001 	mov	r2, #1
    d47c:	e1a04312 	lsl	r4, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:86
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    d480:	e3a01004 	mov	r1, #4
    d484:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    d488:	ebffffc1 	bl	d394 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d48c:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:87
    (1 << (idx_base % 32));
    d490:	e1a02004 	mov	r2, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:86
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Enable_1 : hal::Interrupt_Controller_Reg::IRQ_Enable_1) =
    d494:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:88
}
    d498:	e320f000 	nop	{0}
    d49c:	e24bd008 	sub	sp, fp, #8
    d4a0:	e8bd8810 	pop	{r4, fp, pc}

0000d4a4 <_ZN21CInterrupt_Controller11Disable_IRQEN3hal10IRQ_SourceE>:
_ZN21CInterrupt_Controller11Disable_IRQEN3hal10IRQ_SourceE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:91

void CInterrupt_Controller::Disable_IRQ(hal::IRQ_Source source_idx)
{
    d4a4:	e92d4810 	push	{r4, fp, lr}
    d4a8:	e28db008 	add	fp, sp, #8
    d4ac:	e24dd014 	sub	sp, sp, #20
    d4b0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    d4b4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:92
    const unsigned int idx_base = static_cast<unsigned int>(source_idx);
    d4b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    d4bc:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:95

    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    (1 << (idx_base % 32));
    d4c0:	e51b3010 	ldr	r3, [fp, #-16]
    d4c4:	e203301f 	and	r3, r3, #31
    d4c8:	e3a02001 	mov	r2, #1
    d4cc:	e1a04312 	lsl	r4, r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:94
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    d4d0:	e3a01007 	mov	r1, #7
    d4d4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    d4d8:	ebffffad 	bl	d394 <_ZN21CInterrupt_Controller4RegsEN3hal24Interrupt_Controller_RegE>
    d4dc:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:95
    (1 << (idx_base % 32));
    d4e0:	e1a02004 	mov	r2, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:94
    Regs(idx_base < 32 ? hal::Interrupt_Controller_Reg::IRQ_Disable_1 : hal::Interrupt_Controller_Reg::IRQ_Disable_1) =
    d4e4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
}
    d4e8:	e320f000 	nop	{0}
    d4ec:	e24bd008 	sub	sp, fp, #8
    d4f0:	e8bd8810 	pop	{r4, fp, pc}

0000d4f4 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
    d4f4:	e92d4800 	push	{fp, lr}
    d4f8:	e28db004 	add	fp, sp, #4
    d4fc:	e24dd008 	sub	sp, sp, #8
    d500:	e50b0008 	str	r0, [fp, #-8]
    d504:	e50b100c 	str	r1, [fp, #-12]
    d508:	e51b3008 	ldr	r3, [fp, #-8]
    d50c:	e3530001 	cmp	r3, #1
    d510:	1a000006 	bne	d530 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96 (discriminator 1)
    d514:	e51b300c 	ldr	r3, [fp, #-12]
    d518:	e59f201c 	ldr	r2, [pc, #28]	; d53c <_Z41__static_initialization_and_destruction_0ii+0x48>
    d51c:	e1530002 	cmp	r3, r2
    d520:	1a000002 	bne	d530 <_Z41__static_initialization_and_destruction_0ii+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:9
CInterrupt_Controller sInterruptCtl(hal::Interrupt_Controller_Base);
    d524:	e59f1014 	ldr	r1, [pc, #20]	; d540 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    d528:	e59f0014 	ldr	r0, [pc, #20]	; d544 <_Z41__static_initialization_and_destruction_0ii+0x50>
    d52c:	ebffff8b 	bl	d360 <_ZN21CInterrupt_ControllerC1Em>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
}
    d530:	e320f000 	nop	{0}
    d534:	e24bd004 	sub	sp, fp, #4
    d538:	e8bd8800 	pop	{fp, pc}
    d53c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    d540:	2000b200 	andcs	fp, r0, r0, lsl #4
    d544:	00010054 	andeq	r0, r1, r4, asr r0

0000d548 <_GLOBAL__sub_I_sInterruptCtl>:
_GLOBAL__sub_I_sInterruptCtl():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:96
    d548:	e92d4800 	push	{fp, lr}
    d54c:	e28db004 	add	fp, sp, #4
    d550:	e59f1008 	ldr	r1, [pc, #8]	; d560 <_GLOBAL__sub_I_sInterruptCtl+0x18>
    d554:	e3a00001 	mov	r0, #1
    d558:	ebffffe5 	bl	d4f4 <_Z41__static_initialization_and_destruction_0ii>
    d55c:	e8bd8800 	pop	{fp, pc}
    d560:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000d564 <Timer_Callback>:
Timer_Callback():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:23

// externi funkce pro povoleni IRQ
extern "C" void enable_irq();

extern "C" void Timer_Callback()
{
    d564:	e92d4800 	push	{fp, lr}
    d568:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:24
    sProcessMgr.Schedule();
    d56c:	e59f0008 	ldr	r0, [pc, #8]	; d57c <Timer_Callback+0x18>
    d570:	eb00027d 	bl	df6c <_ZN16CProcess_Manager8ScheduleEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:25
}
    d574:	e320f000 	nop	{0}
    d578:	e8bd8800 	pop	{fp, pc}
    d57c:	00011064 	andeq	r1, r1, r4, rrx

0000d580 <_kernel_main>:
_kernel_main():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:35
extern void Process_3();
extern void Process_4();
extern void Process_5();

extern "C" int _kernel_main(void)
{
    d580:	e92d4800 	push	{fp, lr}
    d584:	e28db004 	add	fp, sp, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:46

    sUART0.Write("Welcome to KIV/OS RPiOS kernel\r\n");
    sUART0.Close();
    */

    sMonitor.Clear();
    d588:	e59f0020 	ldr	r0, [pc, #32]	; d5b0 <_kernel_main+0x30>
    d58c:	ebffef0e 	bl	91cc <_ZN8CMonitor5ClearEv>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:60
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_2));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_3));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_4));
    sProcessMgr.Create_Process(reinterpret_cast<unsigned long>(&Process_5)); */

	sDisplay_SSD1306.Open(128, 32);
    d590:	e3a02020 	mov	r2, #32
    d594:	e3a01080 	mov	r1, #128	; 0x80
    d598:	e59f0014 	ldr	r0, [pc, #20]	; d5b4 <_kernel_main+0x34>
    d59c:	ebfff0d2 	bl	98ec <_ZN16CDisplay_SSD13064OpenEii>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:63

    // zatim zakazeme IRQ casovace
    sInterruptCtl.Disable_Basic_IRQ(hal::IRQ_Basic_Source::Timer);
    d5a0:	e3a01000 	mov	r1, #0
    d5a4:	e59f000c 	ldr	r0, [pc, #12]	; d5b8 <_kernel_main+0x38>
    d5a8:	ebffff98 	bl	d410 <_ZN21CInterrupt_Controller17Disable_Basic_IRQEN3hal16IRQ_Basic_SourceE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/main.cpp:75 (discriminator 1)

    // povolime IRQ a od tohoto momentu je vse v rukou planovace
    // enable_irq();

    // nekonecna smycka - tadyodsud se CPU uz nedostane jinak, nez treba prerusenim
    while (1)
    d5ac:	eafffffe 	b	d5ac <_kernel_main+0x2c>
    d5b0:	0000ff64 	andeq	pc, r0, r4, ror #30
    d5b4:	0000ff8c 	andeq	pc, r0, ip, lsl #31
    d5b8:	00010054 	andeq	r0, r1, r4, asr r0

0000d5bc <_ZN20CKernel_Heap_ManagerC1Ev>:
_ZN20CKernel_Heap_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:6
#include <memory/kernel_heap.h>
#include <memory/pages.h>

CKernel_Heap_Manager sKernelMem;

CKernel_Heap_Manager::CKernel_Heap_Manager()
    d5bc:	e92d4800 	push	{fp, lr}
    d5c0:	e28db004 	add	fp, sp, #4
    d5c4:	e24dd008 	sub	sp, sp, #8
    d5c8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:10
{
    // na zacatku si alokujeme jednu stranku dopredu, protoze je temer jiste, ze budeme docela brzy potrebovat nejakou
    // pamet
    mFirst = Alloc_Next_Page();
    d5cc:	e51b0008 	ldr	r0, [fp, #-8]
    d5d0:	eb000006 	bl	d5f0 <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv>
    d5d4:	e1a02000 	mov	r2, r0
    d5d8:	e51b3008 	ldr	r3, [fp, #-8]
    d5dc:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:11
}
    d5e0:	e51b3008 	ldr	r3, [fp, #-8]
    d5e4:	e1a00003 	mov	r0, r3
    d5e8:	e24bd004 	sub	sp, fp, #4
    d5ec:	e8bd8800 	pop	{fp, pc}

0000d5f0 <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv>:
_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:14

TKernel_Heap_Chunk_Header* CKernel_Heap_Manager::Alloc_Next_Page()
{
    d5f0:	e92d4800 	push	{fp, lr}
    d5f4:	e28db004 	add	fp, sp, #4
    d5f8:	e24dd010 	sub	sp, sp, #16
    d5fc:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:15
    TKernel_Heap_Chunk_Header* chunk = reinterpret_cast<TKernel_Heap_Chunk_Header*>(sPage_Manager.Alloc_Page());
    d600:	e59f0048 	ldr	r0, [pc, #72]	; d650 <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv+0x60>
    d604:	eb00010f 	bl	da48 <_ZN13CPage_Manager10Alloc_PageEv>
    d608:	e1a03000 	mov	r3, r0
    d60c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:16
    chunk->prev = nullptr;
    d610:	e51b3008 	ldr	r3, [fp, #-8]
    d614:	e3a02000 	mov	r2, #0
    d618:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:17
    chunk->next = nullptr;
    d61c:	e51b3008 	ldr	r3, [fp, #-8]
    d620:	e3a02000 	mov	r2, #0
    d624:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:18
    chunk->size =
    d628:	e51b3008 	ldr	r3, [fp, #-8]
    d62c:	e59f2020 	ldr	r2, [pc, #32]	; d654 <_ZN20CKernel_Heap_Manager15Alloc_Next_PageEv+0x64>
    d630:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:20
    mem::PageSize - sizeof(TKernel_Heap_Chunk_Header); // z alokovane stranky musime ubrat velikost hlavicky
    chunk->is_free = true;
    d634:	e51b3008 	ldr	r3, [fp, #-8]
    d638:	e3a02001 	mov	r2, #1
    d63c:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:22

    return chunk;
    d640:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:23
}
    d644:	e1a00003 	mov	r0, r3
    d648:	e24bd004 	sub	sp, fp, #4
    d64c:	e8bd8800 	pop	{fp, pc}
    d650:	00010064 	andeq	r0, r1, r4, rrx
    d654:	00003ff0 	strdeq	r3, [r0], -r0

0000d658 <_ZN20CKernel_Heap_Manager5AllocEj>:
_ZN20CKernel_Heap_Manager5AllocEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:26

void* CKernel_Heap_Manager::Alloc(uint32_t size)
{
    d658:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d65c:	e28db000 	add	fp, sp, #0
    d660:	e24dd014 	sub	sp, sp, #20
    d664:	e50b0010 	str	r0, [fp, #-16]
    d668:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:27
    TKernel_Heap_Chunk_Header* chunk = mFirst;
    d66c:	e51b3010 	ldr	r3, [fp, #-16]
    d670:	e5933000 	ldr	r3, [r3]
    d674:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31

    // potrebujeme najit prvni blok, ktery je volny a zaroven alespon tak velky, jak potrebujeme (pro ted pouzivame
    // proste first-fit)
    while (chunk != nullptr && (!chunk->is_free || chunk->size < size))
    d678:	e51b3008 	ldr	r3, [fp, #-8]
    d67c:	e3530000 	cmp	r3, #0
    d680:	0a00000c 	beq	d6b8 <_ZN20CKernel_Heap_Manager5AllocEj+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31 (discriminator 1)
    d684:	e51b3008 	ldr	r3, [fp, #-8]
    d688:	e5d3300c 	ldrb	r3, [r3, #12]
    d68c:	e3530000 	cmp	r3, #0
    d690:	0a000004 	beq	d6a8 <_ZN20CKernel_Heap_Manager5AllocEj+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31 (discriminator 2)
    d694:	e51b3008 	ldr	r3, [fp, #-8]
    d698:	e5933008 	ldr	r3, [r3, #8]
    d69c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    d6a0:	e1520003 	cmp	r2, r3
    d6a4:	9a000003 	bls	d6b8 <_ZN20CKernel_Heap_Manager5AllocEj+0x60>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:33
    {
        chunk = chunk->next;
    d6a8:	e51b3008 	ldr	r3, [fp, #-8]
    d6ac:	e5933004 	ldr	r3, [r3, #4]
    d6b0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:31
    while (chunk != nullptr && (!chunk->is_free || chunk->size < size))
    d6b4:	eaffffef 	b	d678 <_ZN20CKernel_Heap_Manager5AllocEj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:36
    }

    if (!chunk)
    d6b8:	e51b3008 	ldr	r3, [fp, #-8]
    d6bc:	e3530000 	cmp	r3, #0
    d6c0:	1a000001 	bne	d6cc <_ZN20CKernel_Heap_Manager5AllocEj+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:40
    {
        // TODO: tady by se hodila alokace dalsi stranky (Alloc_Next_Page) a navazani na predchozi chunk
        // pro ted nechme byt, vic jak 4kB snad v tomto prikladu potrebovat nebudeme
        return nullptr;
    d6c4:	e3a03000 	mov	r3, #0
    d6c8:	ea000031 	b	d794 <_ZN20CKernel_Heap_Manager5AllocEj+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:46
    }

    // pokud je pozadovane misto uz tak velke, jak potrebujeme, tak je to snadne - jen ho oznacime za alokovane a
    // vratime vzdy zarovname tak, aby se do dalsiho potencialniho bloku vesla alespon hlavicka dalsiho bloku a nejaky
    // overlap (alespon jeden bajt)
    if (chunk->size >= size && chunk->size <= size + sizeof(TKernel_Heap_Chunk_Header) + 1)
    d6cc:	e51b3008 	ldr	r3, [fp, #-8]
    d6d0:	e5933008 	ldr	r3, [r3, #8]
    d6d4:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    d6d8:	e1520003 	cmp	r2, r3
    d6dc:	8a00000b 	bhi	d710 <_ZN20CKernel_Heap_Manager5AllocEj+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:46 (discriminator 1)
    d6e0:	e51b3008 	ldr	r3, [fp, #-8]
    d6e4:	e5932008 	ldr	r2, [r3, #8]
    d6e8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d6ec:	e2833011 	add	r3, r3, #17
    d6f0:	e1520003 	cmp	r2, r3
    d6f4:	8a000005 	bhi	d710 <_ZN20CKernel_Heap_Manager5AllocEj+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:48
    {
        chunk->is_free = false;
    d6f8:	e51b3008 	ldr	r3, [fp, #-8]
    d6fc:	e3a02000 	mov	r2, #0
    d700:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:50
        return reinterpret_cast<uint8_t*>(chunk) +
               sizeof(TKernel_Heap_Chunk_Header); // vracime az pouzitelnou pamet, tedy to co nasleduje po hlavicce
    d704:	e51b3008 	ldr	r3, [fp, #-8]
    d708:	e2833010 	add	r3, r3, #16
    d70c:	ea000020 	b	d794 <_ZN20CKernel_Heap_Manager5AllocEj+0x13c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:57

    // pokud je vetsi, musime blok rozdelit
    // to, ze se tam vejde dalsi hlavicka jsme garantovali prekryvem, viz vyse

    TKernel_Heap_Chunk_Header* hdr2 = reinterpret_cast<TKernel_Heap_Chunk_Header*>(
    reinterpret_cast<uint8_t*>(chunk) + sizeof(TKernel_Heap_Chunk_Header) + size);
    d710:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d714:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:56
    TKernel_Heap_Chunk_Header* hdr2 = reinterpret_cast<TKernel_Heap_Chunk_Header*>(
    d718:	e51b2008 	ldr	r2, [fp, #-8]
    d71c:	e0823003 	add	r3, r2, r3
    d720:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:59

    hdr2->size = chunk->size - size - sizeof(TKernel_Heap_Chunk_Header);
    d724:	e51b3008 	ldr	r3, [fp, #-8]
    d728:	e5932008 	ldr	r2, [r3, #8]
    d72c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d730:	e0423003 	sub	r3, r2, r3
    d734:	e2432010 	sub	r2, r3, #16
    d738:	e51b300c 	ldr	r3, [fp, #-12]
    d73c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:61

    hdr2->prev = chunk;
    d740:	e51b300c 	ldr	r3, [fp, #-12]
    d744:	e51b2008 	ldr	r2, [fp, #-8]
    d748:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:62
    hdr2->next = chunk->next;
    d74c:	e51b3008 	ldr	r3, [fp, #-8]
    d750:	e5932004 	ldr	r2, [r3, #4]
    d754:	e51b300c 	ldr	r3, [fp, #-12]
    d758:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:63
    hdr2->is_free = true;
    d75c:	e51b300c 	ldr	r3, [fp, #-12]
    d760:	e3a02001 	mov	r2, #1
    d764:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:64
    chunk->next = hdr2;
    d768:	e51b3008 	ldr	r3, [fp, #-8]
    d76c:	e51b200c 	ldr	r2, [fp, #-12]
    d770:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:66

    chunk->size = size;
    d774:	e51b3008 	ldr	r3, [fp, #-8]
    d778:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    d77c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:67
    chunk->is_free = false;
    d780:	e51b3008 	ldr	r3, [fp, #-8]
    d784:	e3a02000 	mov	r2, #0
    d788:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:70

    return reinterpret_cast<uint8_t*>(chunk) +
           sizeof(TKernel_Heap_Chunk_Header); // vracime az pouzitelnou pamet, tedy to co nasleduje po hlavicce
    d78c:	e51b3008 	ldr	r3, [fp, #-8]
    d790:	e2833010 	add	r3, r3, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:71
}
    d794:	e1a00003 	mov	r0, r3
    d798:	e28bd000 	add	sp, fp, #0
    d79c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d7a0:	e12fff1e 	bx	lr

0000d7a4 <_ZN20CKernel_Heap_Manager4FreeEPv>:
_ZN20CKernel_Heap_Manager4FreeEPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:74

void CKernel_Heap_Manager::Free(void* mem)
{
    d7a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d7a8:	e28db000 	add	fp, sp, #0
    d7ac:	e24dd014 	sub	sp, sp, #20
    d7b0:	e50b0010 	str	r0, [fp, #-16]
    d7b4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:75
    TKernel_Heap_Chunk_Header* chunk =
    d7b8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    d7bc:	e2433010 	sub	r3, r3, #16
    d7c0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:78
    reinterpret_cast<TKernel_Heap_Chunk_Header*>(reinterpret_cast<uint8_t*>(mem) - sizeof(TKernel_Heap_Chunk_Header));

    chunk->is_free = true;
    d7c4:	e51b3008 	ldr	r3, [fp, #-8]
    d7c8:	e3a02001 	mov	r2, #1
    d7cc:	e5c3200c 	strb	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:81

    // pokud je dalsi blok volny, spojme tento a dalsi blok do jednoho
    if (chunk->next && chunk->next->is_free)
    d7d0:	e51b3008 	ldr	r3, [fp, #-8]
    d7d4:	e5933004 	ldr	r3, [r3, #4]
    d7d8:	e3530000 	cmp	r3, #0
    d7dc:	0a000016 	beq	d83c <_ZN20CKernel_Heap_Manager4FreeEPv+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:81 (discriminator 1)
    d7e0:	e51b3008 	ldr	r3, [fp, #-8]
    d7e4:	e5933004 	ldr	r3, [r3, #4]
    d7e8:	e5d3300c 	ldrb	r3, [r3, #12]
    d7ec:	e3530000 	cmp	r3, #0
    d7f0:	0a000011 	beq	d83c <_ZN20CKernel_Heap_Manager4FreeEPv+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:83
    {
        chunk->size += chunk->next->size + sizeof(TKernel_Heap_Chunk_Header); // zvetsit soucasny
    d7f4:	e51b3008 	ldr	r3, [fp, #-8]
    d7f8:	e5932008 	ldr	r2, [r3, #8]
    d7fc:	e51b3008 	ldr	r3, [fp, #-8]
    d800:	e5933004 	ldr	r3, [r3, #4]
    d804:	e5933008 	ldr	r3, [r3, #8]
    d808:	e0823003 	add	r3, r2, r3
    d80c:	e2832010 	add	r2, r3, #16
    d810:	e51b3008 	ldr	r3, [fp, #-8]
    d814:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:84
        chunk->next = chunk->next->next; // navazat nasledujici nasledujiciho jako dalsi
    d818:	e51b3008 	ldr	r3, [fp, #-8]
    d81c:	e5933004 	ldr	r3, [r3, #4]
    d820:	e5932004 	ldr	r2, [r3, #4]
    d824:	e51b3008 	ldr	r3, [fp, #-8]
    d828:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:85
        chunk->next->prev = chunk;       // nasledujicimu nastavit predchozi na sebe
    d82c:	e51b3008 	ldr	r3, [fp, #-8]
    d830:	e5933004 	ldr	r3, [r3, #4]
    d834:	e51b2008 	ldr	r2, [fp, #-8]
    d838:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:89
    }

    // pokud je predchozi blok volny, spojme predchozi a tento blok do jednoho
    if (chunk->prev && chunk->prev->is_free)
    d83c:	e51b3008 	ldr	r3, [fp, #-8]
    d840:	e5933000 	ldr	r3, [r3]
    d844:	e3530000 	cmp	r3, #0
    d848:	0a000018 	beq	d8b0 <_ZN20CKernel_Heap_Manager4FreeEPv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:89 (discriminator 1)
    d84c:	e51b3008 	ldr	r3, [fp, #-8]
    d850:	e5933000 	ldr	r3, [r3]
    d854:	e5d3300c 	ldrb	r3, [r3, #12]
    d858:	e3530000 	cmp	r3, #0
    d85c:	0a000013 	beq	d8b0 <_ZN20CKernel_Heap_Manager4FreeEPv+0x10c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:91
    {
        chunk->prev->size += chunk->size + sizeof(TKernel_Heap_Chunk_Header);
    d860:	e51b3008 	ldr	r3, [fp, #-8]
    d864:	e5933000 	ldr	r3, [r3]
    d868:	e5932008 	ldr	r2, [r3, #8]
    d86c:	e51b3008 	ldr	r3, [fp, #-8]
    d870:	e5933008 	ldr	r3, [r3, #8]
    d874:	e0822003 	add	r2, r2, r3
    d878:	e51b3008 	ldr	r3, [fp, #-8]
    d87c:	e5933000 	ldr	r3, [r3]
    d880:	e2822010 	add	r2, r2, #16
    d884:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:92
        chunk->prev->next = chunk->next;
    d888:	e51b3008 	ldr	r3, [fp, #-8]
    d88c:	e5933000 	ldr	r3, [r3]
    d890:	e51b2008 	ldr	r2, [fp, #-8]
    d894:	e5922004 	ldr	r2, [r2, #4]
    d898:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:93
        chunk->next->prev = chunk->prev;
    d89c:	e51b3008 	ldr	r3, [fp, #-8]
    d8a0:	e5933004 	ldr	r3, [r3, #4]
    d8a4:	e51b2008 	ldr	r2, [fp, #-8]
    d8a8:	e5922000 	ldr	r2, [r2]
    d8ac:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    }
    d8b0:	e320f000 	nop	{0}
    d8b4:	e28bd000 	add	sp, fp, #0
    d8b8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d8bc:	e12fff1e 	bx	lr

0000d8c0 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    d8c0:	e92d4800 	push	{fp, lr}
    d8c4:	e28db004 	add	fp, sp, #4
    d8c8:	e24dd008 	sub	sp, sp, #8
    d8cc:	e50b0008 	str	r0, [fp, #-8]
    d8d0:	e50b100c 	str	r1, [fp, #-12]
    d8d4:	e51b3008 	ldr	r3, [fp, #-8]
    d8d8:	e3530001 	cmp	r3, #1
    d8dc:	1a000005 	bne	d8f8 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95 (discriminator 1)
    d8e0:	e51b300c 	ldr	r3, [fp, #-12]
    d8e4:	e59f2018 	ldr	r2, [pc, #24]	; d904 <_Z41__static_initialization_and_destruction_0ii+0x44>
    d8e8:	e1530002 	cmp	r3, r2
    d8ec:	1a000001 	bne	d8f8 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:4
CKernel_Heap_Manager sKernelMem;
    d8f0:	e59f0010 	ldr	r0, [pc, #16]	; d908 <_Z41__static_initialization_and_destruction_0ii+0x48>
    d8f4:	ebffff30 	bl	d5bc <_ZN20CKernel_Heap_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    d8f8:	e320f000 	nop	{0}
    d8fc:	e24bd004 	sub	sp, fp, #4
    d900:	e8bd8800 	pop	{fp, pc}
    d904:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    d908:	00010060 	andeq	r0, r1, r0, rrx

0000d90c <_GLOBAL__sub_I_sKernelMem>:
_GLOBAL__sub_I_sKernelMem():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:95
    d90c:	e92d4800 	push	{fp, lr}
    d910:	e28db004 	add	fp, sp, #4
    d914:	e59f1008 	ldr	r1, [pc, #8]	; d924 <_GLOBAL__sub_I_sKernelMem+0x18>
    d918:	e3a00001 	mov	r0, #1
    d91c:	ebffffe7 	bl	d8c0 <_Z41__static_initialization_and_destruction_0ii>
    d920:	e8bd8800 	pop	{fp, pc}
    d924:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000d928 <_ZN13CPage_ManagerC1Ev>:
_ZN13CPage_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:5
#include <memory/pages.h>

CPage_Manager sPage_Manager;

CPage_Manager::CPage_Manager()
    d928:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d92c:	e28db000 	add	fp, sp, #0
    d930:	e24dd014 	sub	sp, sp, #20
    d934:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8
{
    // zadna stranka neni alokovana
    for (int i = 0; i < sizeof(mPage_Bitmap); i++)
    d938:	e3a03000 	mov	r3, #0
    d93c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8 (discriminator 3)
    d940:	e51b3008 	ldr	r3, [fp, #-8]
    d944:	e59f203c 	ldr	r2, [pc, #60]	; d988 <_ZN13CPage_ManagerC1Ev+0x60>
    d948:	e1530002 	cmp	r3, r2
    d94c:	8a000008 	bhi	d974 <_ZN13CPage_ManagerC1Ev+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:9 (discriminator 2)
        mPage_Bitmap[i] = 0;
    d950:	e51b2010 	ldr	r2, [fp, #-16]
    d954:	e51b3008 	ldr	r3, [fp, #-8]
    d958:	e0823003 	add	r3, r2, r3
    d95c:	e3a02000 	mov	r2, #0
    d960:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:8 (discriminator 2)
    for (int i = 0; i < sizeof(mPage_Bitmap); i++)
    d964:	e51b3008 	ldr	r3, [fp, #-8]
    d968:	e2833001 	add	r3, r3, #1
    d96c:	e50b3008 	str	r3, [fp, #-8]
    d970:	eafffff2 	b	d940 <_ZN13CPage_ManagerC1Ev+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:12

    // nutno dodat, ze strankovatelna pamet implicitne nezahrnuje pamet, kam se nahralo jadro
}
    d974:	e51b3010 	ldr	r3, [fp, #-16]
    d978:	e1a00003 	mov	r0, r3
    d97c:	e28bd000 	add	sp, fp, #0
    d980:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    d984:	e12fff1e 	bx	lr
    d988:	00000ffe 	strdeq	r0, [r0], -lr

0000d98c <_ZN13CPage_Manager4MarkEjb>:
_ZN13CPage_Manager4MarkEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:15

void CPage_Manager::Mark(uint32_t page_idx, bool used)
{
    d98c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    d990:	e28db000 	add	fp, sp, #0
    d994:	e24dd014 	sub	sp, sp, #20
    d998:	e50b0008 	str	r0, [fp, #-8]
    d99c:	e50b100c 	str	r1, [fp, #-12]
    d9a0:	e1a03002 	mov	r3, r2
    d9a4:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:16
    if (used)
    d9a8:	e55b300d 	ldrb	r3, [fp, #-13]
    d9ac:	e3530000 	cmp	r3, #0
    d9b0:	0a00000f 	beq	d9f4 <_ZN13CPage_Manager4MarkEjb+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:17
        mPage_Bitmap[page_idx / 8] |= 1 << (page_idx % 8);
    d9b4:	e51b300c 	ldr	r3, [fp, #-12]
    d9b8:	e1a031a3 	lsr	r3, r3, #3
    d9bc:	e51b2008 	ldr	r2, [fp, #-8]
    d9c0:	e7d22003 	ldrb	r2, [r2, r3]
    d9c4:	e6af1072 	sxtb	r1, r2
    d9c8:	e51b200c 	ldr	r2, [fp, #-12]
    d9cc:	e2022007 	and	r2, r2, #7
    d9d0:	e3a00001 	mov	r0, #1
    d9d4:	e1a02210 	lsl	r2, r0, r2
    d9d8:	e6af2072 	sxtb	r2, r2
    d9dc:	e1812002 	orr	r2, r1, r2
    d9e0:	e6af2072 	sxtb	r2, r2
    d9e4:	e6ef1072 	uxtb	r1, r2
    d9e8:	e51b2008 	ldr	r2, [fp, #-8]
    d9ec:	e7c21003 	strb	r1, [r2, r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:20
    else
        mPage_Bitmap[page_idx / 8] &= ~(1 << (page_idx % 8));
}
    d9f0:	ea000010 	b	da38 <_ZN13CPage_Manager4MarkEjb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:19
        mPage_Bitmap[page_idx / 8] &= ~(1 << (page_idx % 8));
    d9f4:	e51b300c 	ldr	r3, [fp, #-12]
    d9f8:	e1a031a3 	lsr	r3, r3, #3
    d9fc:	e51b2008 	ldr	r2, [fp, #-8]
    da00:	e7d22003 	ldrb	r2, [r2, r3]
    da04:	e6af1072 	sxtb	r1, r2
    da08:	e51b200c 	ldr	r2, [fp, #-12]
    da0c:	e2022007 	and	r2, r2, #7
    da10:	e3a00001 	mov	r0, #1
    da14:	e1a02210 	lsl	r2, r0, r2
    da18:	e6af2072 	sxtb	r2, r2
    da1c:	e1e02002 	mvn	r2, r2
    da20:	e6af2072 	sxtb	r2, r2
    da24:	e0022001 	and	r2, r2, r1
    da28:	e6af2072 	sxtb	r2, r2
    da2c:	e6ef1072 	uxtb	r1, r2
    da30:	e51b2008 	ldr	r2, [fp, #-8]
    da34:	e7c21003 	strb	r1, [r2, r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:20
}
    da38:	e320f000 	nop	{0}
    da3c:	e28bd000 	add	sp, fp, #0
    da40:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    da44:	e12fff1e 	bx	lr

0000da48 <_ZN13CPage_Manager10Alloc_PageEv>:
_ZN13CPage_Manager10Alloc_PageEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:23

uint32_t CPage_Manager::Alloc_Page()
{
    da48:	e92d4800 	push	{fp, lr}
    da4c:	e28db004 	add	fp, sp, #4
    da50:	e24dd018 	sub	sp, sp, #24
    da54:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30
    // to je samozrejme O(n) a pro prakticke pouziti ne uplne dobre, ale k tomuto problemu az jindy

    uint32_t i, j;

    // projdeme vsechny stranky
    for (i = 0; i < mem::PageCount; i++)
    da58:	e3a03000 	mov	r3, #0
    da5c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30 (discriminator 1)
    da60:	e51b3008 	ldr	r3, [fp, #-8]
    da64:	e59f20bc 	ldr	r2, [pc, #188]	; db28 <_ZN13CPage_Manager10Alloc_PageEv+0xe0>
    da68:	e1530002 	cmp	r3, r2
    da6c:	8a000029 	bhi	db18 <_ZN13CPage_Manager10Alloc_PageEv+0xd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:33
    {
        // je v dane osmici volna nejaka stranka? (0xFF = vse obsazeno)
        if (mPage_Bitmap[i] != 0xFF)
    da70:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    da74:	e51b3008 	ldr	r3, [fp, #-8]
    da78:	e0823003 	add	r3, r2, r3
    da7c:	e5d33000 	ldrb	r3, [r3]
    da80:	e35300ff 	cmp	r3, #255	; 0xff
    da84:	0a00001f 	beq	db08 <_ZN13CPage_Manager10Alloc_PageEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36
        {
            // projdeme vsechny bity a najdeme ten co je volny
            for (j = 0; j < 8; j++)
    da88:	e3a03000 	mov	r3, #0
    da8c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36 (discriminator 1)
    da90:	e51b300c 	ldr	r3, [fp, #-12]
    da94:	e3530007 	cmp	r3, #7
    da98:	8a00001a 	bhi	db08 <_ZN13CPage_Manager10Alloc_PageEv+0xc0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:38
            {
                if ((mPage_Bitmap[i] & (1 << j)) == 0)
    da9c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    daa0:	e51b3008 	ldr	r3, [fp, #-8]
    daa4:	e0823003 	add	r3, r2, r3
    daa8:	e5d33000 	ldrb	r3, [r3]
    daac:	e1a02003 	mov	r2, r3
    dab0:	e51b300c 	ldr	r3, [fp, #-12]
    dab4:	e1a03352 	asr	r3, r2, r3
    dab8:	e2033001 	and	r3, r3, #1
    dabc:	e3530000 	cmp	r3, #0
    dac0:	1a00000c 	bne	daf8 <_ZN13CPage_Manager10Alloc_PageEv+0xb0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:41
                {
                    // oznacime
                    const uint32_t page_idx = i * 8 + j;
    dac4:	e51b3008 	ldr	r3, [fp, #-8]
    dac8:	e1a03183 	lsl	r3, r3, #3
    dacc:	e51b200c 	ldr	r2, [fp, #-12]
    dad0:	e0823003 	add	r3, r2, r3
    dad4:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:42
                    Mark(page_idx, true);
    dad8:	e3a02001 	mov	r2, #1
    dadc:	e51b1010 	ldr	r1, [fp, #-16]
    dae0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    dae4:	ebffffa8 	bl	d98c <_ZN13CPage_Manager4MarkEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:43
                    return mem::LowMemory + page_idx * mem::PageSize;
    dae8:	e51b3010 	ldr	r3, [fp, #-16]
    daec:	e2833008 	add	r3, r3, #8
    daf0:	e1a03703 	lsl	r3, r3, #14
    daf4:	ea000008 	b	db1c <_ZN13CPage_Manager10Alloc_PageEv+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:36 (discriminator 2)
            for (j = 0; j < 8; j++)
    daf8:	e51b300c 	ldr	r3, [fp, #-12]
    dafc:	e2833001 	add	r3, r3, #1
    db00:	e50b300c 	str	r3, [fp, #-12]
    db04:	eaffffe1 	b	da90 <_ZN13CPage_Manager10Alloc_PageEv+0x48>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:30 (discriminator 2)
    for (i = 0; i < mem::PageCount; i++)
    db08:	e51b3008 	ldr	r3, [fp, #-8]
    db0c:	e2833001 	add	r3, r3, #1
    db10:	e50b3008 	str	r3, [fp, #-8]
    db14:	eaffffd1 	b	da60 <_ZN13CPage_Manager10Alloc_PageEv+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:49
                }
            }
        }
    }

    return 0;
    db18:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:50
}
    db1c:	e1a00003 	mov	r0, r3
    db20:	e24bd004 	sub	sp, fp, #4
    db24:	e8bd8800 	pop	{fp, pc}
    db28:	00007ff7 	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>

0000db2c <_ZN13CPage_Manager9Free_PageEj>:
_ZN13CPage_Manager9Free_PageEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:53

void CPage_Manager::Free_Page(uint32_t fa)
{
    db2c:	e92d4800 	push	{fp, lr}
    db30:	e28db004 	add	fp, sp, #4
    db34:	e24dd008 	sub	sp, sp, #8
    db38:	e50b0008 	str	r0, [fp, #-8]
    db3c:	e50b100c 	str	r1, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:56
    // pro vyssi bezpecnost v nejakych safe systemech lze tady data stranky premazavat napr. nulami po dealokaci

    Mark(fa / mem::PageSize, false);
    db40:	e51b300c 	ldr	r3, [fp, #-12]
    db44:	e1a03723 	lsr	r3, r3, #14
    db48:	e3a02000 	mov	r2, #0
    db4c:	e1a01003 	mov	r1, r3
    db50:	e51b0008 	ldr	r0, [fp, #-8]
    db54:	ebffff8c 	bl	d98c <_ZN13CPage_Manager4MarkEjb>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
}
    db58:	e320f000 	nop	{0}
    db5c:	e24bd004 	sub	sp, fp, #4
    db60:	e8bd8800 	pop	{fp, pc}

0000db64 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
    db64:	e92d4800 	push	{fp, lr}
    db68:	e28db004 	add	fp, sp, #4
    db6c:	e24dd008 	sub	sp, sp, #8
    db70:	e50b0008 	str	r0, [fp, #-8]
    db74:	e50b100c 	str	r1, [fp, #-12]
    db78:	e51b3008 	ldr	r3, [fp, #-8]
    db7c:	e3530001 	cmp	r3, #1
    db80:	1a000005 	bne	db9c <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57 (discriminator 1)
    db84:	e51b300c 	ldr	r3, [fp, #-12]
    db88:	e59f2018 	ldr	r2, [pc, #24]	; dba8 <_Z41__static_initialization_and_destruction_0ii+0x44>
    db8c:	e1530002 	cmp	r3, r2
    db90:	1a000001 	bne	db9c <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:3
CPage_Manager sPage_Manager;
    db94:	e59f0010 	ldr	r0, [pc, #16]	; dbac <_Z41__static_initialization_and_destruction_0ii+0x48>
    db98:	ebffff62 	bl	d928 <_ZN13CPage_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
}
    db9c:	e320f000 	nop	{0}
    dba0:	e24bd004 	sub	sp, fp, #4
    dba4:	e8bd8800 	pop	{fp, pc}
    dba8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    dbac:	00010064 	andeq	r0, r1, r4, rrx

0000dbb0 <_GLOBAL__sub_I_sPage_Manager>:
_GLOBAL__sub_I_sPage_Manager():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/pages.cpp:57
    dbb0:	e92d4800 	push	{fp, lr}
    dbb4:	e28db004 	add	fp, sp, #4
    dbb8:	e59f1008 	ldr	r1, [pc, #8]	; dbc8 <_GLOBAL__sub_I_sPage_Manager+0x18>
    dbbc:	e3a00001 	mov	r0, #1
    dbc0:	ebffffe7 	bl	db64 <_Z41__static_initialization_and_destruction_0ii>
    dbc4:	e8bd8800 	pop	{fp, pc}
    dbc8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000dbcc <_ZN16CProcess_ManagerC1Ev>:
_ZN16CProcess_ManagerC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:19
void context_switch_first(TCPU_Context* ctx_to, TCPU_Context* ctx_from);
};

CProcess_Manager sProcessMgr;

CProcess_Manager::CProcess_Manager()
    dbcc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dbd0:	e28db000 	add	fp, sp, #0
    dbd4:	e24dd00c 	sub	sp, sp, #12
    dbd8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:22
: mLast_PID(0)
, mProcess_List_Head(nullptr)
, mCurrent_Task_Node(nullptr)
    dbdc:	e51b3008 	ldr	r3, [fp, #-8]
    dbe0:	e3a02000 	mov	r2, #0
    dbe4:	e5832000 	str	r2, [r3]
    dbe8:	e51b3008 	ldr	r3, [fp, #-8]
    dbec:	e3a02000 	mov	r2, #0
    dbf0:	e5832004 	str	r2, [r3, #4]
    dbf4:	e51b3008 	ldr	r3, [fp, #-8]
    dbf8:	e3a02000 	mov	r2, #0
    dbfc:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:25
{
    //
}
    dc00:	e51b3008 	ldr	r3, [fp, #-8]
    dc04:	e1a00003 	mov	r0, r3
    dc08:	e28bd000 	add	sp, fp, #0
    dc0c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dc10:	e12fff1e 	bx	lr

0000dc14 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>:
_ZNK16CProcess_Manager19Get_Current_ProcessEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:28

TTask_Struct* CProcess_Manager::Get_Current_Process() const
{
    dc14:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    dc18:	e28db000 	add	fp, sp, #0
    dc1c:	e24dd00c 	sub	sp, sp, #12
    dc20:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29
    return mCurrent_Task_Node ? mCurrent_Task_Node->task : nullptr;
    dc24:	e51b3008 	ldr	r3, [fp, #-8]
    dc28:	e5933008 	ldr	r3, [r3, #8]
    dc2c:	e3530000 	cmp	r3, #0
    dc30:	0a000003 	beq	dc44 <_ZNK16CProcess_Manager19Get_Current_ProcessEv+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29 (discriminator 1)
    dc34:	e51b3008 	ldr	r3, [fp, #-8]
    dc38:	e5933008 	ldr	r3, [r3, #8]
    dc3c:	e5933008 	ldr	r3, [r3, #8]
    dc40:	ea000000 	b	dc48 <_ZNK16CProcess_Manager19Get_Current_ProcessEv+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:29 (discriminator 2)
    dc44:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:30 (discriminator 5)
}
    dc48:	e1a00003 	mov	r0, r3
    dc4c:	e28bd000 	add	sp, fp, #0
    dc50:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    dc54:	e12fff1e 	bx	lr

0000dc58 <_ZN16CProcess_Manager19Create_Main_ProcessEv>:
_ZN16CProcess_Manager19Create_Main_ProcessEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:33

void CProcess_Manager::Create_Main_Process()
{
    dc58:	e92d4800 	push	{fp, lr}
    dc5c:	e28db004 	add	fp, sp, #4
    dc60:	e24dd018 	sub	sp, sp, #24
    dc64:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:34
    CProcess_List_Node* procnode = sKernelMem.Alloc<CProcess_List_Node>();
    dc68:	e59f00f8 	ldr	r0, [pc, #248]	; dd68 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0x110>
    dc6c:	eb0002cb 	bl	e7a0 <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>
    dc70:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:36

    procnode->next = mProcess_List_Head;
    dc74:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dc78:	e5932004 	ldr	r2, [r3, #4]
    dc7c:	e51b300c 	ldr	r3, [fp, #-12]
    dc80:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:37
    procnode->prev = nullptr;
    dc84:	e51b300c 	ldr	r3, [fp, #-12]
    dc88:	e3a02000 	mov	r2, #0
    dc8c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:38
    mProcess_List_Head->prev = procnode;
    dc90:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dc94:	e5933004 	ldr	r3, [r3, #4]
    dc98:	e51b200c 	ldr	r2, [fp, #-12]
    dc9c:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:40

    procnode->task = sKernelMem.Alloc<TTask_Struct>();
    dca0:	e59f00c0 	ldr	r0, [pc, #192]	; dd68 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0x110>
    dca4:	eb0002c8 	bl	e7cc <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>
    dca8:	e1a02000 	mov	r2, r0
    dcac:	e51b300c 	ldr	r3, [fp, #-12]
    dcb0:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:42

    auto* task = procnode->task;
    dcb4:	e51b300c 	ldr	r3, [fp, #-12]
    dcb8:	e5933008 	ldr	r3, [r3, #8]
    dcbc:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:44

    task->pid = ++mLast_PID;
    dcc0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dcc4:	e5933000 	ldr	r3, [r3]
    dcc8:	e2832001 	add	r2, r3, #1
    dccc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dcd0:	e5832000 	str	r2, [r3]
    dcd4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dcd8:	e5932000 	ldr	r2, [r3]
    dcdc:	e51b3010 	ldr	r3, [fp, #-16]
    dce0:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:45
    task->sched_static_priority =
    dce4:	e51b3010 	ldr	r3, [fp, #-16]
    dce8:	e3a02005 	mov	r2, #5
    dcec:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:47
    5; // TODO: pro ted je to jen hardcoded hodnota, do budoucna urcite bude nutne dovolit specifikovat
    task->sched_counter = task->sched_static_priority;
    dcf0:	e51b3010 	ldr	r3, [fp, #-16]
    dcf4:	e5932018 	ldr	r2, [r3, #24]
    dcf8:	e51b3010 	ldr	r3, [fp, #-16]
    dcfc:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:48
    task->state = NTask_State::Running;
    dd00:	e51b3010 	ldr	r3, [fp, #-16]
    dd04:	e3a02002 	mov	r2, #2
    dd08:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:50

    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    dd0c:	e3a03000 	mov	r3, #0
    dd10:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:50 (discriminator 3)
    dd14:	e51b3008 	ldr	r3, [fp, #-8]
    dd18:	e353000f 	cmp	r3, #15
    dd1c:	8a00000a 	bhi	dd4c <_ZN16CProcess_Manager19Create_Main_ProcessEv+0xf4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:51 (discriminator 2)
        task->opened_files[i] = nullptr;
    dd20:	e51b2010 	ldr	r2, [fp, #-16]
    dd24:	e51b3008 	ldr	r3, [fp, #-8]
    dd28:	e2833006 	add	r3, r3, #6
    dd2c:	e1a03103 	lsl	r3, r3, #2
    dd30:	e0823003 	add	r3, r2, r3
    dd34:	e3a02000 	mov	r2, #0
    dd38:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:50 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    dd3c:	e51b3008 	ldr	r3, [fp, #-8]
    dd40:	e2833001 	add	r3, r3, #1
    dd44:	e50b3008 	str	r3, [fp, #-8]
    dd48:	eafffff1 	b	dd14 <_ZN16CProcess_Manager19Create_Main_ProcessEv+0xbc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:53

    mCurrent_Task_Node = mProcess_List_Head;
    dd4c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dd50:	e5932004 	ldr	r2, [r3, #4]
    dd54:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dd58:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:54
}
    dd5c:	e320f000 	nop	{0}
    dd60:	e24bd004 	sub	sp, fp, #4
    dd64:	e8bd8800 	pop	{fp, pc}
    dd68:	00010060 	andeq	r0, r1, r0, rrx

0000dd6c <_ZN16CProcess_Manager14Create_ProcessEm>:
_ZN16CProcess_Manager14Create_ProcessEm():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:57

uint32_t CProcess_Manager::Create_Process(unsigned long funcptr)
{
    dd6c:	e92d4800 	push	{fp, lr}
    dd70:	e28db004 	add	fp, sp, #4
    dd74:	e24dd018 	sub	sp, sp, #24
    dd78:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    dd7c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:58
    CProcess_List_Node* procnode = sKernelMem.Alloc<CProcess_List_Node>();
    dd80:	e59f01c4 	ldr	r0, [pc, #452]	; df4c <_ZN16CProcess_Manager14Create_ProcessEm+0x1e0>
    dd84:	eb000285 	bl	e7a0 <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>
    dd88:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:60

    procnode->next = mProcess_List_Head;
    dd8c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    dd90:	e5932004 	ldr	r2, [r3, #4]
    dd94:	e51b300c 	ldr	r3, [fp, #-12]
    dd98:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:61
    procnode->prev = nullptr;
    dd9c:	e51b300c 	ldr	r3, [fp, #-12]
    dda0:	e3a02000 	mov	r2, #0
    dda4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:62
    mProcess_List_Head->prev = procnode;
    dda8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddac:	e5933004 	ldr	r3, [r3, #4]
    ddb0:	e51b200c 	ldr	r2, [fp, #-12]
    ddb4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:63
    mProcess_List_Head = procnode;
    ddb8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddbc:	e51b200c 	ldr	r2, [fp, #-12]
    ddc0:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:65

    if (mCurrent_Task_Node == nullptr)
    ddc4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddc8:	e5933008 	ldr	r3, [r3, #8]
    ddcc:	e3530000 	cmp	r3, #0
    ddd0:	1a000002 	bne	dde0 <_ZN16CProcess_Manager14Create_ProcessEm+0x74>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:67
    {
        mCurrent_Task_Node = procnode;
    ddd4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddd8:	e51b200c 	ldr	r2, [fp, #-12]
    dddc:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:70
    }

    procnode->task = sKernelMem.Alloc<TTask_Struct>();
    dde0:	e59f0164 	ldr	r0, [pc, #356]	; df4c <_ZN16CProcess_Manager14Create_ProcessEm+0x1e0>
    dde4:	eb000278 	bl	e7cc <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>
    dde8:	e1a02000 	mov	r2, r0
    ddec:	e51b300c 	ldr	r3, [fp, #-12]
    ddf0:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:72

    auto* task = procnode->task;
    ddf4:	e51b300c 	ldr	r3, [fp, #-12]
    ddf8:	e5933008 	ldr	r3, [r3, #8]
    ddfc:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:74

    task->pid = ++mLast_PID;
    de00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    de04:	e5933000 	ldr	r3, [r3]
    de08:	e2832001 	add	r2, r3, #1
    de0c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    de10:	e5832000 	str	r2, [r3]
    de14:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    de18:	e5932000 	ldr	r2, [r3]
    de1c:	e51b3010 	ldr	r3, [fp, #-16]
    de20:	e583200c 	str	r2, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:75
    task->sched_static_priority =
    de24:	e51b3010 	ldr	r3, [fp, #-16]
    de28:	e3a02005 	mov	r2, #5
    de2c:	e5832018 	str	r2, [r3, #24]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:77
    5; // TODO: pro ted je to jen hardcoded hodnota, do budoucna urcite bude nutne dovolit specifikovat
    task->sched_counter = task->sched_static_priority;
    de30:	e51b3010 	ldr	r3, [fp, #-16]
    de34:	e5932018 	ldr	r2, [r3, #24]
    de38:	e51b3010 	ldr	r3, [fp, #-16]
    de3c:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:78
    task->state = NTask_State::New;
    de40:	e51b3010 	ldr	r3, [fp, #-16]
    de44:	e3a02000 	mov	r2, #0
    de48:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:80

    task->cpu_context.lr = funcptr;
    de4c:	e51b3010 	ldr	r3, [fp, #-16]
    de50:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    de54:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:81
    task->cpu_context.pc = reinterpret_cast<unsigned long>(&process_bootstrap);
    de58:	e59f20f0 	ldr	r2, [pc, #240]	; df50 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e4>
    de5c:	e51b3010 	ldr	r3, [fp, #-16]
    de60:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:82
    task->cpu_context.sp = static_cast<unsigned long>(sPage_Manager.Alloc_Page()) + mem::PageSize;
    de64:	e59f00e8 	ldr	r0, [pc, #232]	; df54 <_ZN16CProcess_Manager14Create_ProcessEm+0x1e8>
    de68:	ebfffef6 	bl	da48 <_ZN13CPage_Manager10Alloc_PageEv>
    de6c:	e1a03000 	mov	r3, r0
    de70:	e2832901 	add	r2, r3, #16384	; 0x4000
    de74:	e51b3010 	ldr	r3, [fp, #-16]
    de78:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:84

    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    de7c:	e3a03000 	mov	r3, #0
    de80:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:84 (discriminator 3)
    de84:	e51b3008 	ldr	r3, [fp, #-8]
    de88:	e353000f 	cmp	r3, #15
    de8c:	8a00000a 	bhi	debc <_ZN16CProcess_Manager14Create_ProcessEm+0x150>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:85 (discriminator 2)
        task->opened_files[i] = nullptr;
    de90:	e51b2010 	ldr	r2, [fp, #-16]
    de94:	e51b3008 	ldr	r3, [fp, #-8]
    de98:	e2833006 	add	r3, r3, #6
    de9c:	e1a03103 	lsl	r3, r3, #2
    dea0:	e0823003 	add	r3, r2, r3
    dea4:	e3a02000 	mov	r2, #0
    dea8:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:84 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    deac:	e51b3008 	ldr	r3, [fp, #-8]
    deb0:	e2833001 	add	r3, r3, #1
    deb4:	e50b3008 	str	r3, [fp, #-8]
    deb8:	eafffff1 	b	de84 <_ZN16CProcess_Manager14Create_ProcessEm+0x118>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:87

    sMonitor << "Created process with pid " << (unsigned int)task->pid << " ("
    debc:	e59f1094 	ldr	r1, [pc, #148]	; df58 <_ZN16CProcess_Manager14Create_ProcessEm+0x1ec>
    dec0:	e59f0094 	ldr	r0, [pc, #148]	; df5c <_ZN16CProcess_Manager14Create_ProcessEm+0x1f0>
    dec4:	ebffed60 	bl	944c <_ZN8CMonitorlsEPKc>
    dec8:	e1a02000 	mov	r2, r0
    decc:	e51b3010 	ldr	r3, [fp, #-16]
    ded0:	e593300c 	ldr	r3, [r3, #12]
    ded4:	e1a01003 	mov	r1, r3
    ded8:	e1a00002 	mov	r0, r2
    dedc:	ebffed85 	bl	94f8 <_ZN8CMonitorlsEj>
    dee0:	e1a03000 	mov	r3, r0
    dee4:	e59f1074 	ldr	r1, [pc, #116]	; df60 <_ZN16CProcess_Manager14Create_ProcessEm+0x1f4>
    dee8:	e1a00003 	mov	r0, r3
    deec:	ebffed56 	bl	944c <_ZN8CMonitorlsEPKc>
    def0:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:88
             << "SP = 0x" << CMonitor::NNumber_Base::HEX << (unsigned int)task->cpu_context.sp << ")\n";
    def4:	e59f1068 	ldr	r1, [pc, #104]	; df64 <_ZN16CProcess_Manager14Create_ProcessEm+0x1f8>
    def8:	e1a00003 	mov	r0, r3
    defc:	ebffed52 	bl	944c <_ZN8CMonitorlsEPKc>
    df00:	e1a03000 	mov	r3, r0
    df04:	e3a01010 	mov	r1, #16
    df08:	e1a00003 	mov	r0, r3
    df0c:	ebffed6c 	bl	94c4 <_ZN8CMonitorlsENS_12NNumber_BaseE>
    df10:	e1a02000 	mov	r2, r0
    df14:	e51b3010 	ldr	r3, [fp, #-16]
    df18:	e5933004 	ldr	r3, [r3, #4]
    df1c:	e1a01003 	mov	r1, r3
    df20:	e1a00002 	mov	r0, r2
    df24:	ebffed73 	bl	94f8 <_ZN8CMonitorlsEj>
    df28:	e1a03000 	mov	r3, r0
    df2c:	e59f1034 	ldr	r1, [pc, #52]	; df68 <_ZN16CProcess_Manager14Create_ProcessEm+0x1fc>
    df30:	e1a00003 	mov	r0, r3
    df34:	ebffed44 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:90

    return task->pid;
    df38:	e51b3010 	ldr	r3, [fp, #-16]
    df3c:	e593300c 	ldr	r3, [r3, #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:91
}
    df40:	e1a00003 	mov	r0, r3
    df44:	e24bd004 	sub	sp, fp, #4
    df48:	e8bd8800 	pop	{fp, pc}
    df4c:	00010060 	andeq	r0, r1, r0, rrx
    df50:	0000e7f8 	strdeq	lr, [r0], -r8
    df54:	00010064 	andeq	r0, r1, r4, rrx
    df58:	0000fc40 	andeq	pc, r0, r0, asr #24
    df5c:	0000ff64 	andeq	pc, r0, r4, ror #30
    df60:	0000fc5c 	andeq	pc, r0, ip, asr ip	; <UNPREDICTABLE>
    df64:	0000fc60 	andeq	pc, r0, r0, ror #24
    df68:	0000fc68 	andeq	pc, r0, r8, ror #24

0000df6c <_ZN16CProcess_Manager8ScheduleEv>:
_ZN16CProcess_Manager8ScheduleEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:94

void CProcess_Manager::Schedule()
{
    df6c:	e92d4800 	push	{fp, lr}
    df70:	e28db004 	add	fp, sp, #4
    df74:	e24dd010 	sub	sp, sp, #16
    df78:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:96
    // je nejaky proces naplanovany?
    if (mCurrent_Task_Node)
    df7c:	e51b3010 	ldr	r3, [fp, #-16]
    df80:	e5933008 	ldr	r3, [r3, #8]
    df84:	e3530000 	cmp	r3, #0
    df88:	0a000011 	beq	dfd4 <_ZN16CProcess_Manager8ScheduleEv+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:99
    {
        // snizime citac planovace
        mCurrent_Task_Node->task->sched_counter--;
    df8c:	e51b3010 	ldr	r3, [fp, #-16]
    df90:	e5933008 	ldr	r3, [r3, #8]
    df94:	e5933008 	ldr	r3, [r3, #8]
    df98:	e5932014 	ldr	r2, [r3, #20]
    df9c:	e2422001 	sub	r2, r2, #1
    dfa0:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:102
        // pokud je citac vetsi nez 0, zatim nebudeme preplanovavat (a zaroven je proces stale ve stavu Running -
        // nezablokoval se nad necim)
        if (mCurrent_Task_Node->task->sched_counter > 0 && mCurrent_Task_Node->task->state == NTask_State::Running)
    dfa4:	e51b3010 	ldr	r3, [fp, #-16]
    dfa8:	e5933008 	ldr	r3, [r3, #8]
    dfac:	e5933008 	ldr	r3, [r3, #8]
    dfb0:	e5933014 	ldr	r3, [r3, #20]
    dfb4:	e3530000 	cmp	r3, #0
    dfb8:	0a000005 	beq	dfd4 <_ZN16CProcess_Manager8ScheduleEv+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:102 (discriminator 1)
    dfbc:	e51b3010 	ldr	r3, [fp, #-16]
    dfc0:	e5933008 	ldr	r3, [r3, #8]
    dfc4:	e5933008 	ldr	r3, [r3, #8]
    dfc8:	e5933010 	ldr	r3, [r3, #16]
    dfcc:	e3530002 	cmp	r3, #2
    dfd0:	0a00003c 	beq	e0c8 <_ZN16CProcess_Manager8ScheduleEv+0x15c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109
    }

    // najdeme dalsi proces na planovani

    // vybereme dalsi proces v rade
    CProcess_List_Node* next = mCurrent_Task_Node ? mCurrent_Task_Node->next : mProcess_List_Head;
    dfd4:	e51b3010 	ldr	r3, [fp, #-16]
    dfd8:	e5933008 	ldr	r3, [r3, #8]
    dfdc:	e3530000 	cmp	r3, #0
    dfe0:	0a000003 	beq	dff4 <_ZN16CProcess_Manager8ScheduleEv+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109 (discriminator 1)
    dfe4:	e51b3010 	ldr	r3, [fp, #-16]
    dfe8:	e5933008 	ldr	r3, [r3, #8]
    dfec:	e5933004 	ldr	r3, [r3, #4]
    dff0:	ea000001 	b	dffc <_ZN16CProcess_Manager8ScheduleEv+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109 (discriminator 2)
    dff4:	e51b3010 	ldr	r3, [fp, #-16]
    dff8:	e5933004 	ldr	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:109 (discriminator 4)
    dffc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:110 (discriminator 4)
    if (!next)
    e000:	e51b3008 	ldr	r3, [fp, #-8]
    e004:	e3530000 	cmp	r3, #0
    e008:	1a000002 	bne	e018 <_ZN16CProcess_Manager8ScheduleEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:111
        next = mProcess_List_Head;
    e00c:	e51b3010 	ldr	r3, [fp, #-16]
    e010:	e5933004 	ldr	r3, [r3, #4]
    e014:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115

    // proces k naplanovani musi bud byt ve stavu runnable (jiz nekdy bezel a muze bezet znovu) nebo running (pak jde o
    // stavajici proces) a nebo new (novy proces, ktery jeste nebyl planovany)
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e018:	e51b3008 	ldr	r3, [fp, #-8]
    e01c:	e5933008 	ldr	r3, [r3, #8]
    e020:	e5933010 	ldr	r3, [r3, #16]
    e024:	e3530001 	cmp	r3, #1
    e028:	0a000014 	beq	e080 <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115 (discriminator 1)
    e02c:	e51b3008 	ldr	r3, [fp, #-8]
    e030:	e5933008 	ldr	r3, [r3, #8]
    e034:	e5933010 	ldr	r3, [r3, #16]
    e038:	e3530002 	cmp	r3, #2
    e03c:	0a00000f 	beq	e080 <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:116 (discriminator 2)
           next->task->state != NTask_State::New)
    e040:	e51b3008 	ldr	r3, [fp, #-8]
    e044:	e5933008 	ldr	r3, [r3, #8]
    e048:	e5933010 	ldr	r3, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115 (discriminator 2)
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e04c:	e3530000 	cmp	r3, #0
    e050:	0a00000a 	beq	e080 <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:118
    {
        if (!next)
    e054:	e51b3008 	ldr	r3, [fp, #-8]
    e058:	e3530000 	cmp	r3, #0
    e05c:	1a000003 	bne	e070 <_ZN16CProcess_Manager8ScheduleEv+0x104>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:120
        {
            next = mCurrent_Task_Node;
    e060:	e51b3010 	ldr	r3, [fp, #-16]
    e064:	e5933008 	ldr	r3, [r3, #8]
    e068:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:121
            break;
    e06c:	ea000003 	b	e080 <_ZN16CProcess_Manager8ScheduleEv+0x114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:124
        }
        else
            next = next->next;
    e070:	e51b3008 	ldr	r3, [fp, #-8]
    e074:	e5933004 	ldr	r3, [r3, #4]
    e078:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:115
    while (next->task->state != NTask_State::Runnable && next->task->state != NTask_State::Running &&
    e07c:	eaffffe5 	b	e018 <_ZN16CProcess_Manager8ScheduleEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:128
    }

    // stavajici proces je jediny planovatelny - nemusime nic preplanovavat
    if (next == mCurrent_Task_Node)
    e080:	e51b3010 	ldr	r3, [fp, #-16]
    e084:	e5933008 	ldr	r3, [r3, #8]
    e088:	e51b2008 	ldr	r2, [fp, #-8]
    e08c:	e1520003 	cmp	r2, r3
    e090:	1a000008 	bne	e0b8 <_ZN16CProcess_Manager8ScheduleEv+0x14c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:131
    {
        // nastavime mu zase zpatky jeho pridel casovych kvant a vracime se
        mCurrent_Task_Node->task->sched_counter = mCurrent_Task_Node->task->sched_static_priority;
    e094:	e51b3010 	ldr	r3, [fp, #-16]
    e098:	e5933008 	ldr	r3, [r3, #8]
    e09c:	e5932008 	ldr	r2, [r3, #8]
    e0a0:	e51b3010 	ldr	r3, [fp, #-16]
    e0a4:	e5933008 	ldr	r3, [r3, #8]
    e0a8:	e5933008 	ldr	r3, [r3, #8]
    e0ac:	e5922018 	ldr	r2, [r2, #24]
    e0b0:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:132
        return;
    e0b4:	ea000004 	b	e0cc <_ZN16CProcess_Manager8ScheduleEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:135
    }

    Switch_To(next);
    e0b8:	e51b1008 	ldr	r1, [fp, #-8]
    e0bc:	e51b0010 	ldr	r0, [fp, #-16]
    e0c0:	eb000003 	bl	e0d4 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node>
    e0c4:	ea000000 	b	e0cc <_ZN16CProcess_Manager8ScheduleEv+0x160>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:103
            return;
    e0c8:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:136
}
    e0cc:	e24bd004 	sub	sp, fp, #4
    e0d0:	e8bd8800 	pop	{fp, pc}

0000e0d4 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node>:
_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:139

void CProcess_Manager::Switch_To(CProcess_List_Node* node)
{
    e0d4:	e92d4800 	push	{fp, lr}
    e0d8:	e28db004 	add	fp, sp, #4
    e0dc:	e24dd010 	sub	sp, sp, #16
    e0e0:	e50b0010 	str	r0, [fp, #-16]
    e0e4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:142
    // pokud je stavajici proces ve stavu Running (muze teoreticky byt jeste Blocked), vratime ho do stavu Runnable
    // Blocked prehazovat nebudeme ze zjevnych duvodu
    if (mCurrent_Task_Node->task->state == NTask_State::Running)
    e0e8:	e51b3010 	ldr	r3, [fp, #-16]
    e0ec:	e5933008 	ldr	r3, [r3, #8]
    e0f0:	e5933008 	ldr	r3, [r3, #8]
    e0f4:	e5933010 	ldr	r3, [r3, #16]
    e0f8:	e3530002 	cmp	r3, #2
    e0fc:	1a000004 	bne	e114 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:143
        mCurrent_Task_Node->task->state = NTask_State::Runnable;
    e100:	e51b3010 	ldr	r3, [fp, #-16]
    e104:	e5933008 	ldr	r3, [r3, #8]
    e108:	e5933008 	ldr	r3, [r3, #8]
    e10c:	e3a02001 	mov	r2, #1
    e110:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:146

    // projistotu vynulujeme prideleny pocet casovych kvant
    mCurrent_Task_Node->task->sched_counter = 0;
    e114:	e51b3010 	ldr	r3, [fp, #-16]
    e118:	e5933008 	ldr	r3, [r3, #8]
    e11c:	e5933008 	ldr	r3, [r3, #8]
    e120:	e3a02000 	mov	r2, #0
    e124:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:148

    TCPU_Context* old = &mCurrent_Task_Node->task->cpu_context;
    e128:	e51b3010 	ldr	r3, [fp, #-16]
    e12c:	e5933008 	ldr	r3, [r3, #8]
    e130:	e5933008 	ldr	r3, [r3, #8]
    e134:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:149
    bool is_first_time = (node->task->state == NTask_State::New);
    e138:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e13c:	e5933008 	ldr	r3, [r3, #8]
    e140:	e5933010 	ldr	r3, [r3, #16]
    e144:	e3530000 	cmp	r3, #0
    e148:	03a03001 	moveq	r3, #1
    e14c:	13a03000 	movne	r3, #0
    e150:	e54b3009 	strb	r3, [fp, #-9]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:152

    // prehodime na novy proces, pridelime casova kvanta a nastavime proces do stavu Running
    mCurrent_Task_Node = node;
    e154:	e51b3010 	ldr	r3, [fp, #-16]
    e158:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    e15c:	e5832008 	str	r2, [r3, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:153
    mCurrent_Task_Node->task->sched_counter = mCurrent_Task_Node->task->sched_static_priority;
    e160:	e51b3010 	ldr	r3, [fp, #-16]
    e164:	e5933008 	ldr	r3, [r3, #8]
    e168:	e5932008 	ldr	r2, [r3, #8]
    e16c:	e51b3010 	ldr	r3, [fp, #-16]
    e170:	e5933008 	ldr	r3, [r3, #8]
    e174:	e5933008 	ldr	r3, [r3, #8]
    e178:	e5922018 	ldr	r2, [r2, #24]
    e17c:	e5832014 	str	r2, [r3, #20]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:154
    mCurrent_Task_Node->task->state = NTask_State::Running;
    e180:	e51b3010 	ldr	r3, [fp, #-16]
    e184:	e5933008 	ldr	r3, [r3, #8]
    e188:	e5933008 	ldr	r3, [r3, #8]
    e18c:	e3a02002 	mov	r2, #2
    e190:	e5832010 	str	r2, [r3, #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:157

    // pokud je to poprve, co je proces planovany, musime to vzit jeste pres malou odbocku ("bootstrap")
    if (is_first_time)
    e194:	e55b3009 	ldrb	r3, [fp, #-9]
    e198:	e3530000 	cmp	r3, #0
    e19c:	0a000005 	beq	e1b8 <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0xe4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:158
        context_switch_first(&node->task->cpu_context, old);
    e1a0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e1a4:	e5933008 	ldr	r3, [r3, #8]
    e1a8:	e51b1008 	ldr	r1, [fp, #-8]
    e1ac:	e1a00003 	mov	r0, r3
    e1b0:	eb00019b 	bl	e824 <context_switch_first>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:161
    else
        context_switch(&node->task->cpu_context, old);
}
    e1b4:	ea000004 	b	e1cc <_ZN16CProcess_Manager9Switch_ToEP18CProcess_List_Node+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:160
        context_switch(&node->task->cpu_context, old);
    e1b8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e1bc:	e5933008 	ldr	r3, [r3, #8]
    e1c0:	e51b1008 	ldr	r1, [fp, #-8]
    e1c4:	e1a00003 	mov	r0, r3
    e1c8:	eb00018c 	bl	e800 <context_switch>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:161
}
    e1cc:	e320f000 	nop	{0}
    e1d0:	e24bd004 	sub	sp, fp, #4
    e1d4:	e8bd8800 	pop	{fp, pc}

0000e1d8 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile>:
_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:164

uint32_t CProcess_Manager::Map_File_To_Current(IFile* file)
{
    e1d8:	e92d4800 	push	{fp, lr}
    e1dc:	e28db004 	add	fp, sp, #4
    e1e0:	e24dd010 	sub	sp, sp, #16
    e1e4:	e50b0010 	str	r0, [fp, #-16]
    e1e8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:167
    // TODO: zamek

    TTask_Struct* current = Get_Current_Process();
    e1ec:	e51b0010 	ldr	r0, [fp, #-16]
    e1f0:	ebfffe87 	bl	dc14 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>
    e1f4:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:168
    if (!current)
    e1f8:	e51b300c 	ldr	r3, [fp, #-12]
    e1fc:	e3530000 	cmp	r3, #0
    e200:	1a000001 	bne	e20c <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x34>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:169
        return Invalid_Handle;
    e204:	e3e03000 	mvn	r3, #0
    e208:	ea00001a 	b	e278 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:172

    // najdeme volny slot, pokud je
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e20c:	e3a03000 	mov	r3, #0
    e210:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:172 (discriminator 1)
    e214:	e51b3008 	ldr	r3, [fp, #-8]
    e218:	e353000f 	cmp	r3, #15
    e21c:	8a000014 	bhi	e274 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:175
    {
        // volny slot - namapujeme soubor a vracime handle (index do tabulky)
        if (current->opened_files[i] == nullptr)
    e220:	e51b200c 	ldr	r2, [fp, #-12]
    e224:	e51b3008 	ldr	r3, [fp, #-8]
    e228:	e2833006 	add	r3, r3, #6
    e22c:	e1a03103 	lsl	r3, r3, #2
    e230:	e0823003 	add	r3, r2, r3
    e234:	e5933004 	ldr	r3, [r3, #4]
    e238:	e3530000 	cmp	r3, #0
    e23c:	1a000008 	bne	e264 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x8c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:177
        {
            current->opened_files[i] = file;
    e240:	e51b200c 	ldr	r2, [fp, #-12]
    e244:	e51b3008 	ldr	r3, [fp, #-8]
    e248:	e2833006 	add	r3, r3, #6
    e24c:	e1a03103 	lsl	r3, r3, #2
    e250:	e0823003 	add	r3, r2, r3
    e254:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    e258:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:178
            return i;
    e25c:	e51b3008 	ldr	r3, [fp, #-8]
    e260:	ea000004 	b	e278 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0xa0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:172 (discriminator 2)
    for (uint32_t i = 0; i < Max_Process_Opened_Files; i++)
    e264:	e51b3008 	ldr	r3, [fp, #-8]
    e268:	e2833001 	add	r3, r3, #1
    e26c:	e50b3008 	str	r3, [fp, #-8]
    e270:	eaffffe7 	b	e214 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:183
        }
    }

    // nenasli jsme - vracime neplatny handle (vnejsi kod nejspis bude chtit soubor zase zavrit)
    return Invalid_Handle;
    e274:	e3e03000 	mvn	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:184
}
    e278:	e1a00003 	mov	r0, r3
    e27c:	e24bd004 	sub	sp, fp, #4
    e280:	e8bd8800 	pop	{fp, pc}

0000e284 <_ZN16CProcess_Manager18Unmap_File_CurrentEj>:
_ZN16CProcess_Manager18Unmap_File_CurrentEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:187

bool CProcess_Manager::Unmap_File_Current(uint32_t handle)
{
    e284:	e92d4800 	push	{fp, lr}
    e288:	e28db004 	add	fp, sp, #4
    e28c:	e24dd010 	sub	sp, sp, #16
    e290:	e50b0010 	str	r0, [fp, #-16]
    e294:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:188
    TTask_Struct* current = Get_Current_Process();
    e298:	e51b0010 	ldr	r0, [fp, #-16]
    e29c:	ebfffe5c 	bl	dc14 <_ZNK16CProcess_Manager19Get_Current_ProcessEv>
    e2a0:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:189
    if (!current || handle >= Max_Process_Opened_Files)
    e2a4:	e51b3008 	ldr	r3, [fp, #-8]
    e2a8:	e3530000 	cmp	r3, #0
    e2ac:	0a000002 	beq	e2bc <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:189 (discriminator 1)
    e2b0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e2b4:	e353000f 	cmp	r3, #15
    e2b8:	9a000001 	bls	e2c4 <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:190
        return false;
    e2bc:	e3a03000 	mov	r3, #0
    e2c0:	ea000011 	b	e30c <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:192

    if (!current->opened_files[handle])
    e2c4:	e51b2008 	ldr	r2, [fp, #-8]
    e2c8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e2cc:	e2833006 	add	r3, r3, #6
    e2d0:	e1a03103 	lsl	r3, r3, #2
    e2d4:	e0823003 	add	r3, r2, r3
    e2d8:	e5933004 	ldr	r3, [r3, #4]
    e2dc:	e3530000 	cmp	r3, #0
    e2e0:	1a000001 	bne	e2ec <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:193
        return false;
    e2e4:	e3a03000 	mov	r3, #0
    e2e8:	ea000007 	b	e30c <_ZN16CProcess_Manager18Unmap_File_CurrentEj+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:195

    current->opened_files[handle] = nullptr;
    e2ec:	e51b2008 	ldr	r2, [fp, #-8]
    e2f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e2f4:	e2833006 	add	r3, r3, #6
    e2f8:	e1a03103 	lsl	r3, r3, #2
    e2fc:	e0823003 	add	r3, r2, r3
    e300:	e3a02000 	mov	r2, #0
    e304:	e5832004 	str	r2, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:196
    return true;
    e308:	e3a03001 	mov	r3, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:197
}
    e30c:	e1a00003 	mov	r0, r3
    e310:	e24bd004 	sub	sp, fp, #4
    e314:	e8bd8800 	pop	{fp, pc}

0000e318 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result>:
_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:201

void CProcess_Manager::Handle_Process_SWI(
NSWI_Process_Service svc_idx, uint32_t r0, uint32_t r1, uint32_t r2, TSWI_Result& target)
{
    e318:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    e31c:	e28db000 	add	fp, sp, #0
    e320:	e24dd014 	sub	sp, sp, #20
    e324:	e50b0008 	str	r0, [fp, #-8]
    e328:	e50b100c 	str	r1, [fp, #-12]
    e32c:	e50b2010 	str	r2, [fp, #-16]
    e330:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:203
    // TODO: signalizace chyby
    if (!mCurrent_Task_Node)
    e334:	e51b3008 	ldr	r3, [fp, #-8]
    e338:	e5933008 	ldr	r3, [r3, #8]
    e33c:	e3530000 	cmp	r3, #0
    e340:	0a000009 	beq	e36c <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:206
        return;

    switch (svc_idx)
    e344:	e51b300c 	ldr	r3, [fp, #-12]
    e348:	e3530000 	cmp	r3, #0
    e34c:	1a000007 	bne	e370 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:209
    {
        case NSWI_Process_Service::Get_PID:
            target.r0 = mCurrent_Task_Node->task->pid;
    e350:	e51b3008 	ldr	r3, [fp, #-8]
    e354:	e5933008 	ldr	r3, [r3, #8]
    e358:	e5933008 	ldr	r3, [r3, #8]
    e35c:	e593200c 	ldr	r2, [r3, #12]
    e360:	e59b3008 	ldr	r3, [fp, #8]
    e364:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:210
            break;
    e368:	ea000000 	b	e370 <_ZN16CProcess_Manager18Handle_Process_SWIE20NSWI_Process_ServicejjjR11TSWI_Result+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:204
        return;
    e36c:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:212
    }
}
    e370:	e28bd000 	add	sp, fp, #0
    e374:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    e378:	e12fff1e 	bx	lr

0000e37c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result>:
_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:216

void CProcess_Manager::Handle_Filesystem_SWI(
NSWI_Filesystem_Service svc_idx, uint32_t r0, uint32_t r1, uint32_t r2, TSWI_Result& target)
{
    e37c:	e92d4800 	push	{fp, lr}
    e380:	e28db004 	add	fp, sp, #4
    e384:	e24dd018 	sub	sp, sp, #24
    e388:	e50b0010 	str	r0, [fp, #-16]
    e38c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    e390:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    e394:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:218
    // TODO: signalizace chyby
    if (!mCurrent_Task_Node)
    e398:	e51b3010 	ldr	r3, [fp, #-16]
    e39c:	e5933008 	ldr	r3, [r3, #8]
    e3a0:	e3530000 	cmp	r3, #0
    e3a4:	0a0000d3 	beq	e6f8 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x37c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:221
        return;

    switch (svc_idx)
    e3a8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    e3ac:	e3530004 	cmp	r3, #4
    e3b0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    e3b4:	ea0000dc 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
    e3b8:	0000e3cc 	andeq	lr, r0, ip, asr #7
    e3bc:	0000e460 	andeq	lr, r0, r0, ror #8
    e3c0:	0000e508 	andeq	lr, r0, r8, lsl #10
    e3c4:	0000e5b0 			; <UNDEFINED> instruction: 0x0000e5b0
    e3c8:	0000e658 	andeq	lr, r0, r8, asr r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:224
    {
        case NSWI_Filesystem_Service::Open: {
            target.r0 = Invalid_Handle;
    e3cc:	e59b3008 	ldr	r3, [fp, #8]
    e3d0:	e3e02000 	mvn	r2, #0
    e3d4:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:226

            IFile* f = sFilesystem.Open(reinterpret_cast<const char*>(r0), static_cast<NFile_Open_Mode>(r1));
    e3d8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e3dc:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    e3e0:	e1a01003 	mov	r1, r3
    e3e4:	e59f0348 	ldr	r0, [pc, #840]	; e734 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b8>
    e3e8:	ebfff6d8 	bl	bf50 <_ZN11CFilesystem4OpenEPKc15NFile_Open_Mode>
    e3ec:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:227
            if (!f)
    e3f0:	e51b3008 	ldr	r3, [fp, #-8]
    e3f4:	e3530000 	cmp	r3, #0
    e3f8:	0a0000c0 	beq	e700 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x384>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:230
                return;

            target.r0 = Map_File_To_Current(f);
    e3fc:	e51b1008 	ldr	r1, [fp, #-8]
    e400:	e51b0010 	ldr	r0, [fp, #-16]
    e404:	ebffff73 	bl	e1d8 <_ZN16CProcess_Manager19Map_File_To_CurrentEP5IFile>
    e408:	e1a02000 	mov	r2, r0
    e40c:	e59b3008 	ldr	r3, [fp, #8]
    e410:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:233

            // nepodarilo se namapovat, napr. proto, ze jsme dosahli limitu otevrenych souboru
            if (target.r0 == Invalid_Handle)
    e414:	e59b3008 	ldr	r3, [fp, #8]
    e418:	e5933000 	ldr	r3, [r3]
    e41c:	e3730001 	cmn	r3, #1
    e420:	1a0000b8 	bne	e708 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:235
            {
                f->Close();
    e424:	e51b3008 	ldr	r3, [fp, #-8]
    e428:	e5933000 	ldr	r3, [r3]
    e42c:	e2833010 	add	r3, r3, #16
    e430:	e5933000 	ldr	r3, [r3]
    e434:	e51b0008 	ldr	r0, [fp, #-8]
    e438:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:236
                delete f;
    e43c:	e51b3008 	ldr	r3, [fp, #-8]
    e440:	e3530000 	cmp	r3, #0
    e444:	0a0000af 	beq	e708 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:236 (discriminator 1)
    e448:	e5932000 	ldr	r2, [r3]
    e44c:	e2822004 	add	r2, r2, #4
    e450:	e5922000 	ldr	r2, [r2]
    e454:	e1a00003 	mov	r0, r3
    e458:	e12fff32 	blx	r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:238 (discriminator 1)
            }
            break;
    e45c:	ea0000a9 	b	e708 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x38c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:241
        }
        case NSWI_Filesystem_Service::Read: {
            target.r0 = 0;
    e460:	e59b3008 	ldr	r3, [fp, #8]
    e464:	e3a02000 	mov	r2, #0
    e468:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:243

            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e46c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e470:	e3530010 	cmp	r3, #16
    e474:	8a0000a5 	bhi	e710 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x394>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:243 (discriminator 1)
    e478:	e51b3010 	ldr	r3, [fp, #-16]
    e47c:	e5933008 	ldr	r3, [r3, #8]
    e480:	e5932008 	ldr	r2, [r3, #8]
    e484:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e488:	e2833006 	add	r3, r3, #6
    e48c:	e1a03103 	lsl	r3, r3, #2
    e490:	e0823003 	add	r3, r2, r3
    e494:	e5933004 	ldr	r3, [r3, #4]
    e498:	e3530000 	cmp	r3, #0
    e49c:	0a00009b 	beq	e710 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x394>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:246
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Read(reinterpret_cast<char*>(r1), r2);
    e4a0:	e51b3010 	ldr	r3, [fp, #-16]
    e4a4:	e5933008 	ldr	r3, [r3, #8]
    e4a8:	e5932008 	ldr	r2, [r3, #8]
    e4ac:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e4b0:	e2833006 	add	r3, r3, #6
    e4b4:	e1a03103 	lsl	r3, r3, #2
    e4b8:	e0823003 	add	r3, r2, r3
    e4bc:	e5930004 	ldr	r0, [r3, #4]
    e4c0:	e51b3010 	ldr	r3, [fp, #-16]
    e4c4:	e5933008 	ldr	r3, [r3, #8]
    e4c8:	e5932008 	ldr	r2, [r3, #8]
    e4cc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e4d0:	e2833006 	add	r3, r3, #6
    e4d4:	e1a03103 	lsl	r3, r3, #2
    e4d8:	e0823003 	add	r3, r2, r3
    e4dc:	e5933004 	ldr	r3, [r3, #4]
    e4e0:	e5933000 	ldr	r3, [r3]
    e4e4:	e2833008 	add	r3, r3, #8
    e4e8:	e5933000 	ldr	r3, [r3]
    e4ec:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e4f0:	e59b2004 	ldr	r2, [fp, #4]
    e4f4:	e12fff33 	blx	r3
    e4f8:	e1a02000 	mov	r2, r0
    e4fc:	e59b3008 	ldr	r3, [fp, #8]
    e500:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:247
            break;
    e504:	ea000088 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:250
        }
        case NSWI_Filesystem_Service::Write: {
            target.r0 = 0;
    e508:	e59b3008 	ldr	r3, [fp, #8]
    e50c:	e3a02000 	mov	r2, #0
    e510:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:252

            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e514:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e518:	e3530010 	cmp	r3, #16
    e51c:	8a00007d 	bhi	e718 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:252 (discriminator 1)
    e520:	e51b3010 	ldr	r3, [fp, #-16]
    e524:	e5933008 	ldr	r3, [r3, #8]
    e528:	e5932008 	ldr	r2, [r3, #8]
    e52c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e530:	e2833006 	add	r3, r3, #6
    e534:	e1a03103 	lsl	r3, r3, #2
    e538:	e0823003 	add	r3, r2, r3
    e53c:	e5933004 	ldr	r3, [r3, #4]
    e540:	e3530000 	cmp	r3, #0
    e544:	0a000073 	beq	e718 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x39c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:255
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Write(reinterpret_cast<const char*>(r1), r2);
    e548:	e51b3010 	ldr	r3, [fp, #-16]
    e54c:	e5933008 	ldr	r3, [r3, #8]
    e550:	e5932008 	ldr	r2, [r3, #8]
    e554:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e558:	e2833006 	add	r3, r3, #6
    e55c:	e1a03103 	lsl	r3, r3, #2
    e560:	e0823003 	add	r3, r2, r3
    e564:	e5930004 	ldr	r0, [r3, #4]
    e568:	e51b3010 	ldr	r3, [fp, #-16]
    e56c:	e5933008 	ldr	r3, [r3, #8]
    e570:	e5932008 	ldr	r2, [r3, #8]
    e574:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e578:	e2833006 	add	r3, r3, #6
    e57c:	e1a03103 	lsl	r3, r3, #2
    e580:	e0823003 	add	r3, r2, r3
    e584:	e5933004 	ldr	r3, [r3, #4]
    e588:	e5933000 	ldr	r3, [r3]
    e58c:	e283300c 	add	r3, r3, #12
    e590:	e5933000 	ldr	r3, [r3]
    e594:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e598:	e59b2004 	ldr	r2, [fp, #4]
    e59c:	e12fff33 	blx	r3
    e5a0:	e1a02000 	mov	r2, r0
    e5a4:	e59b3008 	ldr	r3, [fp, #8]
    e5a8:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:256
            break;
    e5ac:	ea00005e 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:259
        }
        case NSWI_Filesystem_Service::Close: {
            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e5b0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e5b4:	e3530010 	cmp	r3, #16
    e5b8:	8a000058 	bhi	e720 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:259 (discriminator 1)
    e5bc:	e51b3010 	ldr	r3, [fp, #-16]
    e5c0:	e5933008 	ldr	r3, [r3, #8]
    e5c4:	e5932008 	ldr	r2, [r3, #8]
    e5c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e5cc:	e2833006 	add	r3, r3, #6
    e5d0:	e1a03103 	lsl	r3, r3, #2
    e5d4:	e0823003 	add	r3, r2, r3
    e5d8:	e5933004 	ldr	r3, [r3, #4]
    e5dc:	e3530000 	cmp	r3, #0
    e5e0:	0a00004e 	beq	e720 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:262
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->Close();
    e5e4:	e51b3010 	ldr	r3, [fp, #-16]
    e5e8:	e5933008 	ldr	r3, [r3, #8]
    e5ec:	e5932008 	ldr	r2, [r3, #8]
    e5f0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e5f4:	e2833006 	add	r3, r3, #6
    e5f8:	e1a03103 	lsl	r3, r3, #2
    e5fc:	e0823003 	add	r3, r2, r3
    e600:	e5931004 	ldr	r1, [r3, #4]
    e604:	e51b3010 	ldr	r3, [fp, #-16]
    e608:	e5933008 	ldr	r3, [r3, #8]
    e60c:	e5932008 	ldr	r2, [r3, #8]
    e610:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e614:	e2833006 	add	r3, r3, #6
    e618:	e1a03103 	lsl	r3, r3, #2
    e61c:	e0823003 	add	r3, r2, r3
    e620:	e5933004 	ldr	r3, [r3, #4]
    e624:	e5933000 	ldr	r3, [r3]
    e628:	e2833010 	add	r3, r3, #16
    e62c:	e5933000 	ldr	r3, [r3]
    e630:	e1a00001 	mov	r0, r1
    e634:	e12fff33 	blx	r3
    e638:	e1a03000 	mov	r3, r0
    e63c:	e1a02003 	mov	r2, r3
    e640:	e59b3008 	ldr	r3, [fp, #8]
    e644:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:263
            Unmap_File_Current(r0);
    e648:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
    e64c:	e51b0010 	ldr	r0, [fp, #-16]
    e650:	ebffff0b 	bl	e284 <_ZN16CProcess_Manager18Unmap_File_CurrentEj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:265

            break;
    e654:	ea000034 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:268
        }
        case NSWI_Filesystem_Service::IOCtl: {
            if (r0 > Max_Process_Opened_Files || !mCurrent_Task_Node->task->opened_files[r0])
    e658:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e65c:	e3530010 	cmp	r3, #16
    e660:	8a000030 	bhi	e728 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:268 (discriminator 1)
    e664:	e51b3010 	ldr	r3, [fp, #-16]
    e668:	e5933008 	ldr	r3, [r3, #8]
    e66c:	e5932008 	ldr	r2, [r3, #8]
    e670:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e674:	e2833006 	add	r3, r3, #6
    e678:	e1a03103 	lsl	r3, r3, #2
    e67c:	e0823003 	add	r3, r2, r3
    e680:	e5933004 	ldr	r3, [r3, #4]
    e684:	e3530000 	cmp	r3, #0
    e688:	0a000026 	beq	e728 <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3ac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:271
                return;

            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->IOCtl(static_cast<NIOCtl_Operation>(r1),
    e68c:	e51b3010 	ldr	r3, [fp, #-16]
    e690:	e5933008 	ldr	r3, [r3, #8]
    e694:	e5932008 	ldr	r2, [r3, #8]
    e698:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e69c:	e2833006 	add	r3, r3, #6
    e6a0:	e1a03103 	lsl	r3, r3, #2
    e6a4:	e0823003 	add	r3, r2, r3
    e6a8:	e5930004 	ldr	r0, [r3, #4]
    e6ac:	e51b3010 	ldr	r3, [fp, #-16]
    e6b0:	e5933008 	ldr	r3, [r3, #8]
    e6b4:	e5932008 	ldr	r2, [r3, #8]
    e6b8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    e6bc:	e2833006 	add	r3, r3, #6
    e6c0:	e1a03103 	lsl	r3, r3, #2
    e6c4:	e0823003 	add	r3, r2, r3
    e6c8:	e5933004 	ldr	r3, [r3, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:272
                                                                          reinterpret_cast<void*>(r2));
    e6cc:	e5933000 	ldr	r3, [r3]
    e6d0:	e2833014 	add	r3, r3, #20
    e6d4:	e5933000 	ldr	r3, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:271
            target.r0 = mCurrent_Task_Node->task->opened_files[r0]->IOCtl(static_cast<NIOCtl_Operation>(r1),
    e6d8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    e6dc:	e59b2004 	ldr	r2, [fp, #4]
    e6e0:	e12fff33 	blx	r3
    e6e4:	e1a03000 	mov	r3, r0
    e6e8:	e1a02003 	mov	r2, r3
    e6ec:	e59b3008 	ldr	r3, [fp, #8]
    e6f0:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:273
            break;
    e6f4:	ea00000c 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:219
        return;
    e6f8:	e320f000 	nop	{0}
    e6fc:	ea00000a 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:228
                return;
    e700:	e320f000 	nop	{0}
    e704:	ea000008 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:238
            break;
    e708:	e320f000 	nop	{0}
    e70c:	ea000006 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:244
                return;
    e710:	e320f000 	nop	{0}
    e714:	ea000004 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:253
                return;
    e718:	e320f000 	nop	{0}
    e71c:	ea000002 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:260
                return;
    e720:	e320f000 	nop	{0}
    e724:	ea000000 	b	e72c <_ZN16CProcess_Manager21Handle_Filesystem_SWIE23NSWI_Filesystem_ServicejjjR11TSWI_Result+0x3b0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:269
                return;
    e728:	e320f000 	nop	{0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
        }
    }
}
    e72c:	e24bd004 	sub	sp, fp, #4
    e730:	e8bd8800 	pop	{fp, pc}
    e734:	0000ffc4 	andeq	pc, r0, r4, asr #31

0000e738 <_Z41__static_initialization_and_destruction_0ii>:
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
    e738:	e92d4800 	push	{fp, lr}
    e73c:	e28db004 	add	fp, sp, #4
    e740:	e24dd008 	sub	sp, sp, #8
    e744:	e50b0008 	str	r0, [fp, #-8]
    e748:	e50b100c 	str	r1, [fp, #-12]
    e74c:	e51b3008 	ldr	r3, [fp, #-8]
    e750:	e3530001 	cmp	r3, #1
    e754:	1a000005 	bne	e770 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276 (discriminator 1)
    e758:	e51b300c 	ldr	r3, [fp, #-12]
    e75c:	e59f2018 	ldr	r2, [pc, #24]	; e77c <_Z41__static_initialization_and_destruction_0ii+0x44>
    e760:	e1530002 	cmp	r3, r2
    e764:	1a000001 	bne	e770 <_Z41__static_initialization_and_destruction_0ii+0x38>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:17
CProcess_Manager sProcessMgr;
    e768:	e59f0010 	ldr	r0, [pc, #16]	; e780 <_Z41__static_initialization_and_destruction_0ii+0x48>
    e76c:	ebfffd16 	bl	dbcc <_ZN16CProcess_ManagerC1Ev>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
}
    e770:	e320f000 	nop	{0}
    e774:	e24bd004 	sub	sp, fp, #4
    e778:	e8bd8800 	pop	{fp, pc}
    e77c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    e780:	00011064 	andeq	r1, r1, r4, rrx

0000e784 <_GLOBAL__sub_I_sProcessMgr>:
_GLOBAL__sub_I_sProcessMgr():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/process_manager.cpp:276
    e784:	e92d4800 	push	{fp, lr}
    e788:	e28db004 	add	fp, sp, #4
    e78c:	e59f1008 	ldr	r1, [pc, #8]	; e79c <_GLOBAL__sub_I_sProcessMgr+0x18>
    e790:	e3a00001 	mov	r0, #1
    e794:	ebffffe7 	bl	e738 <_Z41__static_initialization_and_destruction_0ii>
    e798:	e8bd8800 	pop	{fp, pc}
    e79c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0000e7a0 <_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocI18CProcess_List_NodeEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    e7a0:	e92d4800 	push	{fp, lr}
    e7a4:	e28db004 	add	fp, sp, #4
    e7a8:	e24dd008 	sub	sp, sp, #8
    e7ac:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    e7b0:	e3a0100c 	mov	r1, #12
    e7b4:	e51b0008 	ldr	r0, [fp, #-8]
    e7b8:	ebfffba6 	bl	d658 <_ZN20CKernel_Heap_Manager5AllocEj>
    e7bc:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    e7c0:	e1a00003 	mov	r0, r3
    e7c4:	e24bd004 	sub	sp, fp, #4
    e7c8:	e8bd8800 	pop	{fp, pc}

0000e7cc <_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v>:
_ZN20CKernel_Heap_Manager5AllocI12TTask_StructEEPT_v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:30
    T* Alloc()
    e7cc:	e92d4800 	push	{fp, lr}
    e7d0:	e28db004 	add	fp, sp, #4
    e7d4:	e24dd008 	sub	sp, sp, #8
    e7d8:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:32
        return reinterpret_cast<T*>(Alloc(sizeof(T)));
    e7dc:	e3a0105c 	mov	r1, #92	; 0x5c
    e7e0:	e51b0008 	ldr	r0, [fp, #-8]
    e7e4:	ebfffb9b 	bl	d658 <_ZN20CKernel_Heap_Manager5AllocEj>
    e7e8:	e1a03000 	mov	r3, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:33
    }
    e7ec:	e1a00003 	mov	r0, r3
    e7f0:	e24bd004 	sub	sp, fp, #4
    e7f4:	e8bd8800 	pop	{fp, pc}

0000e7f8 <process_bootstrap>:
process_bootstrap():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:5
.global process_bootstrap
;@ Process bootstrapping - kernelovy "obal" procesu
;@ Vyzaduje na zasobniku pushnutou hodnotu vstupniho bodu procesu
process_bootstrap:
    add lr, pc, #8      ;@ ulozime do lr hodnotu PC+8, abychom se korektne vratili na instrukci po nasledujici
    e7f8:	e28fe008 	add	lr, pc, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:6
    pop {pc}            ;@ vyzvedneme si ulozenou hodnotu cile
    e7fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000e800 <context_switch>:
context_switch():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:14
.global context_switch
;@ Prepnuti procesu ze soucasneho na jiny, ktery jiz byl planovany
;@ r0 - novy proces
;@ r1 - stary proces
context_switch:
	mrs r12, cpsr           ;@ ulozit CPU state do r12
    e800:	e10fc000 	mrs	ip, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:15
	push {r14}              ;@ push LR
    e804:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:16
	push {r0}               ;@ push SP
    e808:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:17
	push {r0-r12}           ;@ push registru
    e80c:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:18
	str sp, [r1, #4]        ;@ ulozit SP stareho procesu
    e810:	e581d004 	str	sp, [r1, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:20

	ldr sp, [r0, #4]        ;@ nacist SP noveho procesu
    e814:	e590d004 	ldr	sp, [r0, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:21
	pop {r0-r12}            ;@ obnovit registry noveho procesu
    e818:	e8bd1fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:22
	msr cpsr_c, r12         ;@ obnovit CPU state
    e81c:	e121f00c 	msr	CPSR_c, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:23
	pop {lr, pc}            ;@ navrat do kontextu provadeni noveho procesu
    e820:	e8bdc000 	pop	{lr, pc}

0000e824 <context_switch_first>:
context_switch_first():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:30
.global context_switch_first
;@ Prepnuti procesu ze soucasneho na jiny, ktery jeste nebyl planovany
;@ r0 - novy proces
;@ r1 - stary proces
context_switch_first:
	mrs r12, cpsr           ;@ ulozit CPU state do r12
    e824:	e10fc000 	mrs	ip, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:31
	push {r14}              ;@ push LR
    e828:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:32
	push {r13}              ;@ push SP
    e82c:	e92d2000 	stmfd	sp!, {sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:33
	push {r0-r12}           ;@ push registru
    e830:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:34
	str sp, [r1, #4]        ;@ ulozit SP stareho procesu
    e834:	e581d004 	str	sp, [r1, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:36

    ldr r3, [r0, #0]        ;@ "budouci" PC do r3 (entry point procesu)
    e838:	e5903000 	ldr	r3, [r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:37
    ldr r2, [r0, #8]        ;@ "vstupni" PC do r2 (bootstrap procesu v kernelu)
    e83c:	e5902008 	ldr	r2, [r0, #8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:38
    ldr sp, [r0, #4]        ;@ nacteme stack pointer procesu
    e840:	e590d004 	ldr	sp, [r0, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:39
    push {r3}               ;@ budouci navratova adresa -> do zasobniku, bootstrap si ji tamodsud vyzvedne
    e844:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:40
    push {r2}               ;@ pushneme si i bootstrap adresu, abychom ji mohli obnovit do PC
    e848:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:41
    cpsie i                 ;@ povolime preruseni (v budoucich switchich uz bude flaga ulozena v cpsr/spsr)
    e84c:	f1080080 	cpsie	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/process/switch.s:42
    pop {pc}                ;@ vybereme ze zasobniku novou hodnotu PC (PC procesu)
    e850:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000e854 <disable_irq>:
disable_irq():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:102
;@ tady budou ostatni symboly, ktere nevyzaduji zadne specialni misto
.section .text

.global disable_irq
disable_irq:
    cpsid i
    e854:	f10c0080 	cpsid	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:103
    bx lr
    e858:	e12fff1e 	bx	lr

0000e85c <enable_irq>:
enable_irq():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:107

.global enable_irq
enable_irq:
    mrs r0, cpsr		;@ presun ridiciho registru (CPSR) do general purpose registru (R0)
    e85c:	e10f0000 	mrs	r0, CPSR
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:108
    bic r0, r0, #0x80	;@ vypne bit 7 v registru r0 ("IRQ mask bit")
    e860:	e3c00080 	bic	r0, r0, #128	; 0x80
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:109
    msr cpsr_c, r0		;@ nacteme upraveny general purpose (R0) registr do ridiciho (CPSR)
    e864:	e121f000 	msr	CPSR_c, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:110
    cpsie i				;@ povoli preruseni
    e868:	f1080080 	cpsie	i
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:111
    bx lr
    e86c:	e12fff1e 	bx	lr

0000e870 <undefined_instruction_handler>:
undefined_instruction_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:114

undefined_instruction_handler:
	b hang
    e870:	eaffe60c 	b	80a8 <hang>

0000e874 <software_interrupt_handler>:
software_interrupt_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:118

.global _internal_software_interrupt_handler
software_interrupt_handler:
	stmfd sp!,{r2-r12,lr}		;@ ulozime na zasobnik stav
    e874:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:122

	;@ tady budeme mozna chtit prepinat do SYS rezimu v budoucnu

	ldr r3,[lr,#-4]				;@ do registru r3 nacteme instrukci, ktera vyvolala preruseni (lr = navratova adresa, -4 proto, ze ukazuje na nasledujici instrukci)
    e878:	e51e3004 	ldr	r3, [lr, #-4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:123
    bic r3,r3,#0xff000000		;@ vymaskujeme parametr (dolnich 24 bitu) a nechame ho v r3
    e87c:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:124
	bl _internal_software_interrupt_handler		;@ zavolame nas interni handler
    e880:	ebfffa7e 	bl	d280 <_internal_software_interrupt_handler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:125
	mov r2, r0					;@ ten vraci pointer na result kontejner v r0, presuneme do r2 - potrebujeme obsah dostat do r0 a r1
    e884:	e1a02000 	mov	r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:126
	ldr r0, [r2, #0]			;@ nacteme navratove hodnoty do registru
    e888:	e5920000 	ldr	r0, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:127
	ldr r1, [r2, #4]
    e88c:	e5921004 	ldr	r1, [r2, #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:128
	ldmfd sp!, {r2-r12,pc}^		;@ obnovime ze zasobniku stav (jen puvodni lr nacteme do pc)
    e890:	e8fd9ffc 	ldm	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

0000e894 <irq_handler>:
irq_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:133


.global _internal_irq_handler
irq_handler:
	sub lr, lr, #4
    e894:	e24ee004 	sub	lr, lr, #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:134
	srsdb #CPSR_MODE_SYS!		;@ ekvivalent k push lr a msr+push spsr
    e898:	f96d051f 	srsdb	sp!, #31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:135
	cpsid if, #CPSR_MODE_SYS	;@ prechod do SYS modu + zakazeme preruseni
    e89c:	f10e00df 	cpsid	if,#31
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:136
	push {r0-r4, r12, lr}		;@ ulozime callee-saved registry
    e8a0:	e92d501f 	push	{r0, r1, r2, r3, r4, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:138

	and r4, sp, #7
    e8a4:	e20d4007 	and	r4, sp, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:139
	sub sp, sp, r4
    e8a8:	e04dd004 	sub	sp, sp, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:141

	bl _internal_irq_handler	;@ zavolame handler IRQ
    e8ac:	ebfffa9b 	bl	d320 <_internal_irq_handler>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:143

	add sp, sp, r4
    e8b0:	e08dd004 	add	sp, sp, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:145

	pop {r0-r4, r12, lr}		;@ obnovime callee-saved registry
    e8b4:	e8bd501f 	pop	{r0, r1, r2, r3, r4, ip, lr}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:146
	rfeia sp!					;@ vracime se do puvodniho stavu (ktery ulozila instrukce srsdb)
    e8b8:	f8bd0a00 	rfeia	sp!

0000e8bc <prefetch_abort_handler>:
prefetch_abort_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:151

prefetch_abort_handler:
	;@ tady pak muzeme osetrit, kdyz program zasahne do mista, ktere nema mapovane ve svem virtualnim adr. prostoru
	;@ a treba vyvolat nasi obdobu segfaultu
	b hang
    e8bc:	eaffe5f9 	b	80a8 <hang>

0000e8c0 <data_abort_handler>:
data_abort_handler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:156

data_abort_handler:
	;@ tady pak muzeme osetrit, kdyz program zasahne do mista, ktere nema mapovane ve svem virtualnim adr. prostoru
	;@ a treba vyvolat nasi obdobu segfaultu
	b hang
    e8c0:	eaffe5f8 	b	80a8 <hang>

0000e8c4 <_c_startup>:
_c_startup():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:21
extern "C" dtor_ptr __DTOR_LIST__[0];
// konec pole destruktoru
extern "C" dtor_ptr __DTOR_END__[0];

extern "C" int _c_startup(void)
{
    e8c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    e8c8:	e28db000 	add	fp, sp, #0
    e8cc:	e24dd00c 	sub	sp, sp, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25
    int* i;

    // vynulujeme .bss sekci
    for (i = (int*)_bss_start; i < (int*)_bss_end; i++)
    e8d0:	e59f304c 	ldr	r3, [pc, #76]	; e924 <_c_startup+0x60>
    e8d4:	e5933000 	ldr	r3, [r3]
    e8d8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25 (discriminator 3)
    e8dc:	e59f3044 	ldr	r3, [pc, #68]	; e928 <_c_startup+0x64>
    e8e0:	e5933000 	ldr	r3, [r3]
    e8e4:	e1a02003 	mov	r2, r3
    e8e8:	e51b3008 	ldr	r3, [fp, #-8]
    e8ec:	e1530002 	cmp	r3, r2
    e8f0:	2a000006 	bcs	e910 <_c_startup+0x4c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:26 (discriminator 2)
        *i = 0;
    e8f4:	e51b3008 	ldr	r3, [fp, #-8]
    e8f8:	e3a02000 	mov	r2, #0
    e8fc:	e5832000 	str	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:25 (discriminator 2)
    for (i = (int*)_bss_start; i < (int*)_bss_end; i++)
    e900:	e51b3008 	ldr	r3, [fp, #-8]
    e904:	e2833004 	add	r3, r3, #4
    e908:	e50b3008 	str	r3, [fp, #-8]
    e90c:	eafffff2 	b	e8dc <_c_startup+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:28

    return 0;
    e910:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:29
}
    e914:	e1a00003 	mov	r0, r3
    e918:	e28bd000 	add	sp, fp, #0
    e91c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    e920:	e12fff1e 	bx	lr
    e924:	0000ff2c 	andeq	pc, r0, ip, lsr #30
    e928:	00011080 	andeq	r1, r1, r0, lsl #1

0000e92c <_cpp_startup>:
_cpp_startup():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:32

extern "C" int _cpp_startup(void)
{
    e92c:	e92d4800 	push	{fp, lr}
    e930:	e28db004 	add	fp, sp, #4
    e934:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37
    ctor_ptr* fnptr;

    // zavolame konstruktory globalnich C++ trid
    // v poli __CTOR_LIST__ jsou ukazatele na vygenerovane stuby volani konstruktoru
    for (fnptr = __CTOR_LIST__; fnptr < __CTOR_END__; fnptr++)
    e938:	e59f303c 	ldr	r3, [pc, #60]	; e97c <_cpp_startup+0x50>
    e93c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37 (discriminator 3)
    e940:	e51b3008 	ldr	r3, [fp, #-8]
    e944:	e59f2034 	ldr	r2, [pc, #52]	; e980 <_cpp_startup+0x54>
    e948:	e1530002 	cmp	r3, r2
    e94c:	2a000006 	bcs	e96c <_cpp_startup+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:38 (discriminator 2)
        (*fnptr)();
    e950:	e51b3008 	ldr	r3, [fp, #-8]
    e954:	e5933000 	ldr	r3, [r3]
    e958:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:37 (discriminator 2)
    for (fnptr = __CTOR_LIST__; fnptr < __CTOR_END__; fnptr++)
    e95c:	e51b3008 	ldr	r3, [fp, #-8]
    e960:	e2833004 	add	r3, r3, #4
    e964:	e50b3008 	str	r3, [fp, #-8]
    e968:	eafffff4 	b	e940 <_cpp_startup+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:40

    return 0;
    e96c:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:41
}
    e970:	e1a00003 	mov	r0, r3
    e974:	e24bd004 	sub	sp, fp, #4
    e978:	e8bd8800 	pop	{fp, pc}
    e97c:	0000fee4 	andeq	pc, r0, r4, ror #29
    e980:	0000ff18 	andeq	pc, r0, r8, lsl pc	; <UNPREDICTABLE>

0000e984 <_cpp_shutdown>:
_cpp_shutdown():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:44

extern "C" int _cpp_shutdown(void)
{
    e984:	e92d4800 	push	{fp, lr}
    e988:	e28db004 	add	fp, sp, #4
    e98c:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48
    dtor_ptr* fnptr;

    // zavolame destruktory globalnich C++ trid
    for (fnptr = __DTOR_LIST__; fnptr < __DTOR_END__; fnptr++)
    e990:	e59f303c 	ldr	r3, [pc, #60]	; e9d4 <_cpp_shutdown+0x50>
    e994:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48 (discriminator 3)
    e998:	e51b3008 	ldr	r3, [fp, #-8]
    e99c:	e59f2034 	ldr	r2, [pc, #52]	; e9d8 <_cpp_shutdown+0x54>
    e9a0:	e1530002 	cmp	r3, r2
    e9a4:	2a000006 	bcs	e9c4 <_cpp_shutdown+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:49 (discriminator 2)
        (*fnptr)();
    e9a8:	e51b3008 	ldr	r3, [fp, #-8]
    e9ac:	e5933000 	ldr	r3, [r3]
    e9b0:	e12fff33 	blx	r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:48 (discriminator 2)
    for (fnptr = __DTOR_LIST__; fnptr < __DTOR_END__; fnptr++)
    e9b4:	e51b3008 	ldr	r3, [fp, #-8]
    e9b8:	e2833004 	add	r3, r3, #4
    e9bc:	e50b3008 	str	r3, [fp, #-8]
    e9c0:	eafffff4 	b	e998 <_cpp_shutdown+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:51

    return 0;
    e9c4:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/startup.cpp:52
}
    e9c8:	e1a00003 	mov	r0, r3
    e9cc:	e24bd004 	sub	sp, fp, #4
    e9d0:	e8bd8800 	pop	{fp, pc}
    e9d4:	0000ff18 	andeq	pc, r0, r8, lsl pc	; <UNPREDICTABLE>
    e9d8:	0000ff18 	andeq	pc, r0, r8, lsl pc	; <UNPREDICTABLE>

0000e9dc <_Z9Process_1v>:
_Z9Process_1v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:10

extern "C" void enable_irq();
extern "C" void disable_irq();

void Process_1()
{
    e9dc:	e92d4800 	push	{fp, lr}
    e9e0:	e28db004 	add	fp, sp, #4
    e9e4:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:13
    volatile int i;

    uint32_t f = open("DEV:gpio/18", NFile_Open_Mode::Write_Only);
    e9e8:	e3a01001 	mov	r1, #1
    e9ec:	e59f00c0 	ldr	r0, [pc, #192]	; eab4 <_Z9Process_1v+0xd8>
    e9f0:	eb000143 	bl	ef04 <_Z4openPKc15NFile_Open_Mode>
    e9f4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:15

    disable_irq();
    e9f8:	ebffff95 	bl	e854 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:16
    sMonitor << "process 1 file descriptor = " << f << "\n";
    e9fc:	e59f10b4 	ldr	r1, [pc, #180]	; eab8 <_Z9Process_1v+0xdc>
    ea00:	e59f00b4 	ldr	r0, [pc, #180]	; eabc <_Z9Process_1v+0xe0>
    ea04:	ebffea90 	bl	944c <_ZN8CMonitorlsEPKc>
    ea08:	e1a03000 	mov	r3, r0
    ea0c:	e51b1008 	ldr	r1, [fp, #-8]
    ea10:	e1a00003 	mov	r0, r3
    ea14:	ebffeab7 	bl	94f8 <_ZN8CMonitorlsEj>
    ea18:	e1a03000 	mov	r3, r0
    ea1c:	e59f109c 	ldr	r1, [pc, #156]	; eac0 <_Z9Process_1v+0xe4>
    ea20:	e1a00003 	mov	r0, r3
    ea24:	ebffea88 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:17
    enable_irq();
    ea28:	ebffff8b 	bl	e85c <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:21

    while (true)
    {
        write(f, "1", 1);
    ea2c:	e3a02001 	mov	r2, #1
    ea30:	e59f108c 	ldr	r1, [pc, #140]	; eac4 <_Z9Process_1v+0xe8>
    ea34:	e51b0008 	ldr	r0, [fp, #-8]
    ea38:	eb000156 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:23

        for (i = 0; i < 0x400; i++)
    ea3c:	e3a03000 	mov	r3, #0
    ea40:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:23 (discriminator 3)
    ea44:	e51b300c 	ldr	r3, [fp, #-12]
    ea48:	e3530b01 	cmp	r3, #1024	; 0x400
    ea4c:	b3a03001 	movlt	r3, #1
    ea50:	a3a03000 	movge	r3, #0
    ea54:	e6ef3073 	uxtb	r3, r3
    ea58:	e3530000 	cmp	r3, #0
    ea5c:	0a000003 	beq	ea70 <_Z9Process_1v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:23 (discriminator 2)
    ea60:	e51b300c 	ldr	r3, [fp, #-12]
    ea64:	e2833001 	add	r3, r3, #1
    ea68:	e50b300c 	str	r3, [fp, #-12]
    ea6c:	eafffff4 	b	ea44 <_Z9Process_1v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:26
            ;

        write(f, "0", 1);
    ea70:	e3a02001 	mov	r2, #1
    ea74:	e59f104c 	ldr	r1, [pc, #76]	; eac8 <_Z9Process_1v+0xec>
    ea78:	e51b0008 	ldr	r0, [fp, #-8]
    ea7c:	eb000145 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:28

        for (i = 0; i < 0x400; i++)
    ea80:	e3a03000 	mov	r3, #0
    ea84:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:28 (discriminator 3)
    ea88:	e51b300c 	ldr	r3, [fp, #-12]
    ea8c:	e3530b01 	cmp	r3, #1024	; 0x400
    ea90:	b3a03001 	movlt	r3, #1
    ea94:	a3a03000 	movge	r3, #0
    ea98:	e6ef3073 	uxtb	r3, r3
    ea9c:	e3530000 	cmp	r3, #0
    eaa0:	0affffe1 	beq	ea2c <_Z9Process_1v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:28 (discriminator 2)
    eaa4:	e51b300c 	ldr	r3, [fp, #-12]
    eaa8:	e2833001 	add	r3, r3, #1
    eaac:	e50b300c 	str	r3, [fp, #-12]
    eab0:	eafffff4 	b	ea88 <_Z9Process_1v+0xac>
    eab4:	0000fc7c 	andeq	pc, r0, ip, ror ip	; <UNPREDICTABLE>
    eab8:	0000fc88 	andeq	pc, r0, r8, lsl #25
    eabc:	0000ff64 	andeq	pc, r0, r4, ror #30
    eac0:	0000fca8 	andeq	pc, r0, r8, lsr #25
    eac4:	0000fcac 	andeq	pc, r0, ip, lsr #25
    eac8:	0000fcb0 			; <UNDEFINED> instruction: 0x0000fcb0

0000eacc <_Z9Process_2v>:
_Z9Process_2v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:36

    close(f);
}

void Process_2()
{
    eacc:	e92d4800 	push	{fp, lr}
    ead0:	e28db004 	add	fp, sp, #4
    ead4:	e24dd028 	sub	sp, sp, #40	; 0x28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:39
    volatile int i;

    const char* msg = "Hello!\n";
    ead8:	e59f3110 	ldr	r3, [pc, #272]	; ebf0 <_Z9Process_2v+0x124>
    eadc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:41

    uint32_t f = open("DEV:monitor/0", NFile_Open_Mode::Read_Write);
    eae0:	e3a01002 	mov	r1, #2
    eae4:	e59f0108 	ldr	r0, [pc, #264]	; ebf4 <_Z9Process_2v+0x128>
    eae8:	eb000105 	bl	ef04 <_Z4openPKc15NFile_Open_Mode>
    eaec:	e50b000c 	str	r0, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:42
    uint32_t rndf = open("DEV:trng", NFile_Open_Mode::Read_Only);
    eaf0:	e3a01000 	mov	r1, #0
    eaf4:	e59f00fc 	ldr	r0, [pc, #252]	; ebf8 <_Z9Process_2v+0x12c>
    eaf8:	eb000101 	bl	ef04 <_Z4openPKc15NFile_Open_Mode>
    eafc:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:44

    disable_irq();
    eb00:	ebffff53 	bl	e854 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:45
    sMonitor << "process 2 file descriptor (f) = " << f << "\n";
    eb04:	e59f10f0 	ldr	r1, [pc, #240]	; ebfc <_Z9Process_2v+0x130>
    eb08:	e59f00f0 	ldr	r0, [pc, #240]	; ec00 <_Z9Process_2v+0x134>
    eb0c:	ebffea4e 	bl	944c <_ZN8CMonitorlsEPKc>
    eb10:	e1a03000 	mov	r3, r0
    eb14:	e51b100c 	ldr	r1, [fp, #-12]
    eb18:	e1a00003 	mov	r0, r3
    eb1c:	ebffea75 	bl	94f8 <_ZN8CMonitorlsEj>
    eb20:	e1a03000 	mov	r3, r0
    eb24:	e59f10d8 	ldr	r1, [pc, #216]	; ec04 <_Z9Process_2v+0x138>
    eb28:	e1a00003 	mov	r0, r3
    eb2c:	ebffea46 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:46
    sMonitor << "process 2 file descriptor (rndf)= " << rndf << "\n";
    eb30:	e59f10d0 	ldr	r1, [pc, #208]	; ec08 <_Z9Process_2v+0x13c>
    eb34:	e59f00c4 	ldr	r0, [pc, #196]	; ec00 <_Z9Process_2v+0x134>
    eb38:	ebffea43 	bl	944c <_ZN8CMonitorlsEPKc>
    eb3c:	e1a03000 	mov	r3, r0
    eb40:	e51b1010 	ldr	r1, [fp, #-16]
    eb44:	e1a00003 	mov	r0, r3
    eb48:	ebffea6a 	bl	94f8 <_ZN8CMonitorlsEj>
    eb4c:	e1a03000 	mov	r3, r0
    eb50:	e59f10ac 	ldr	r1, [pc, #172]	; ec04 <_Z9Process_2v+0x138>
    eb54:	e1a00003 	mov	r0, r3
    eb58:	ebffea3b 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:47
    enable_irq();
    eb5c:	ebffff3e 	bl	e85c <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:54
    uint32_t rdbuf;
    char numbuf[16];

    while (true)
    {
        read(rndf, reinterpret_cast<char*>(&rdbuf), 4);
    eb60:	e24b3018 	sub	r3, fp, #24
    eb64:	e3a02004 	mov	r2, #4
    eb68:	e1a01003 	mov	r1, r3
    eb6c:	e51b0010 	ldr	r0, [fp, #-16]
    eb70:	eb0000f4 	bl	ef48 <_Z4readjPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:56

        bzero(numbuf, 16);
    eb74:	e24b3028 	sub	r3, fp, #40	; 0x28
    eb78:	e3a01010 	mov	r1, #16
    eb7c:	e1a00003 	mov	r0, r3
    eb80:	eb00022b 	bl	f434 <_Z5bzeroPvi>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:57
        itoa(rdbuf, numbuf, 10);
    eb84:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    eb88:	e24b1028 	sub	r1, fp, #40	; 0x28
    eb8c:	e3a0200a 	mov	r2, #10
    eb90:	e1a00003 	mov	r0, r3
    eb94:	eb000132 	bl	f064 <_Z4itoajPcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:59

        write(f, numbuf, strlen(numbuf));
    eb98:	e24b3028 	sub	r3, fp, #40	; 0x28
    eb9c:	e1a00003 	mov	r0, r3
    eba0:	eb00020e 	bl	f3e0 <_Z6strlenPKc>
    eba4:	e1a03000 	mov	r3, r0
    eba8:	e1a02003 	mov	r2, r3
    ebac:	e24b3028 	sub	r3, fp, #40	; 0x28
    ebb0:	e1a01003 	mov	r1, r3
    ebb4:	e51b000c 	ldr	r0, [fp, #-12]
    ebb8:	eb0000f6 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:61

        for (i = 0; i < 0x800; i++)
    ebbc:	e3a03000 	mov	r3, #0
    ebc0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:61 (discriminator 3)
    ebc4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ebc8:	e3530b02 	cmp	r3, #2048	; 0x800
    ebcc:	b3a03001 	movlt	r3, #1
    ebd0:	a3a03000 	movge	r3, #0
    ebd4:	e6ef3073 	uxtb	r3, r3
    ebd8:	e3530000 	cmp	r3, #0
    ebdc:	0affffdf 	beq	eb60 <_Z9Process_2v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:61 (discriminator 2)
    ebe0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ebe4:	e2833001 	add	r3, r3, #1
    ebe8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    ebec:	eafffff4 	b	ebc4 <_Z9Process_2v+0xf8>
    ebf0:	0000fcb4 			; <UNDEFINED> instruction: 0x0000fcb4
    ebf4:	0000fcbc 			; <UNDEFINED> instruction: 0x0000fcbc
    ebf8:	0000fccc 	andeq	pc, r0, ip, asr #25
    ebfc:	0000fcd8 	ldrdeq	pc, [r0], -r8
    ec00:	0000ff64 	andeq	pc, r0, r4, ror #30
    ec04:	0000fca8 	andeq	pc, r0, r8, lsr #25
    ec08:	0000fcfc 	strdeq	pc, [r0], -ip

0000ec0c <_Z9Process_3v>:
_Z9Process_3v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:70
    close(f);
    close(rndf);
}

void Process_3()
{
    ec0c:	e92d4800 	push	{fp, lr}
    ec10:	e28db004 	add	fp, sp, #4
    ec14:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:73
    volatile int i;

    uint32_t f = open("DEV:gpio/19", NFile_Open_Mode::Write_Only);
    ec18:	e3a01001 	mov	r1, #1
    ec1c:	e59f00c0 	ldr	r0, [pc, #192]	; ece4 <_Z9Process_3v+0xd8>
    ec20:	eb0000b7 	bl	ef04 <_Z4openPKc15NFile_Open_Mode>
    ec24:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:75

    disable_irq();
    ec28:	ebffff09 	bl	e854 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:76
    sMonitor << "process 3 file descriptor = " << f << "\n";
    ec2c:	e59f10b4 	ldr	r1, [pc, #180]	; ece8 <_Z9Process_3v+0xdc>
    ec30:	e59f00b4 	ldr	r0, [pc, #180]	; ecec <_Z9Process_3v+0xe0>
    ec34:	ebffea04 	bl	944c <_ZN8CMonitorlsEPKc>
    ec38:	e1a03000 	mov	r3, r0
    ec3c:	e51b1008 	ldr	r1, [fp, #-8]
    ec40:	e1a00003 	mov	r0, r3
    ec44:	ebffea2b 	bl	94f8 <_ZN8CMonitorlsEj>
    ec48:	e1a03000 	mov	r3, r0
    ec4c:	e59f109c 	ldr	r1, [pc, #156]	; ecf0 <_Z9Process_3v+0xe4>
    ec50:	e1a00003 	mov	r0, r3
    ec54:	ebffe9fc 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:77
    enable_irq();
    ec58:	ebfffeff 	bl	e85c <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:81

    while (true)
    {
        write(f, "1", 1);
    ec5c:	e3a02001 	mov	r2, #1
    ec60:	e59f108c 	ldr	r1, [pc, #140]	; ecf4 <_Z9Process_3v+0xe8>
    ec64:	e51b0008 	ldr	r0, [fp, #-8]
    ec68:	eb0000ca 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:83

        for (i = 0; i < 0x800; i++)
    ec6c:	e3a03000 	mov	r3, #0
    ec70:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:83 (discriminator 3)
    ec74:	e51b300c 	ldr	r3, [fp, #-12]
    ec78:	e3530b02 	cmp	r3, #2048	; 0x800
    ec7c:	b3a03001 	movlt	r3, #1
    ec80:	a3a03000 	movge	r3, #0
    ec84:	e6ef3073 	uxtb	r3, r3
    ec88:	e3530000 	cmp	r3, #0
    ec8c:	0a000003 	beq	eca0 <_Z9Process_3v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:83 (discriminator 2)
    ec90:	e51b300c 	ldr	r3, [fp, #-12]
    ec94:	e2833001 	add	r3, r3, #1
    ec98:	e50b300c 	str	r3, [fp, #-12]
    ec9c:	eafffff4 	b	ec74 <_Z9Process_3v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:86
            ;

        write(f, "0", 1);
    eca0:	e3a02001 	mov	r2, #1
    eca4:	e59f104c 	ldr	r1, [pc, #76]	; ecf8 <_Z9Process_3v+0xec>
    eca8:	e51b0008 	ldr	r0, [fp, #-8]
    ecac:	eb0000b9 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:88

        for (i = 0; i < 0x800; i++)
    ecb0:	e3a03000 	mov	r3, #0
    ecb4:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:88 (discriminator 3)
    ecb8:	e51b300c 	ldr	r3, [fp, #-12]
    ecbc:	e3530b02 	cmp	r3, #2048	; 0x800
    ecc0:	b3a03001 	movlt	r3, #1
    ecc4:	a3a03000 	movge	r3, #0
    ecc8:	e6ef3073 	uxtb	r3, r3
    eccc:	e3530000 	cmp	r3, #0
    ecd0:	0affffe1 	beq	ec5c <_Z9Process_3v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:88 (discriminator 2)
    ecd4:	e51b300c 	ldr	r3, [fp, #-12]
    ecd8:	e2833001 	add	r3, r3, #1
    ecdc:	e50b300c 	str	r3, [fp, #-12]
    ece0:	eafffff4 	b	ecb8 <_Z9Process_3v+0xac>
    ece4:	0000fd20 	andeq	pc, r0, r0, lsr #26
    ece8:	0000fd2c 	andeq	pc, r0, ip, lsr #26
    ecec:	0000ff64 	andeq	pc, r0, r4, ror #30
    ecf0:	0000fca8 	andeq	pc, r0, r8, lsr #25
    ecf4:	0000fcac 	andeq	pc, r0, ip, lsr #25
    ecf8:	0000fcb0 			; <UNDEFINED> instruction: 0x0000fcb0

0000ecfc <_Z9Process_4v>:
_Z9Process_4v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:96

    close(f);
}

void Process_4()
{
    ecfc:	e92d4800 	push	{fp, lr}
    ed00:	e28db004 	add	fp, sp, #4
    ed04:	e24dd008 	sub	sp, sp, #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:99
    volatile int i;

    uint32_t f = open("DEV:gpio/20", NFile_Open_Mode::Write_Only);
    ed08:	e3a01001 	mov	r1, #1
    ed0c:	e59f00c0 	ldr	r0, [pc, #192]	; edd4 <_Z9Process_4v+0xd8>
    ed10:	eb00007b 	bl	ef04 <_Z4openPKc15NFile_Open_Mode>
    ed14:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:101

    disable_irq();
    ed18:	ebfffecd 	bl	e854 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:102
    sMonitor << "process 4 file descriptor = " << f << "\n";
    ed1c:	e59f10b4 	ldr	r1, [pc, #180]	; edd8 <_Z9Process_4v+0xdc>
    ed20:	e59f00b4 	ldr	r0, [pc, #180]	; eddc <_Z9Process_4v+0xe0>
    ed24:	ebffe9c8 	bl	944c <_ZN8CMonitorlsEPKc>
    ed28:	e1a03000 	mov	r3, r0
    ed2c:	e51b1008 	ldr	r1, [fp, #-8]
    ed30:	e1a00003 	mov	r0, r3
    ed34:	ebffe9ef 	bl	94f8 <_ZN8CMonitorlsEj>
    ed38:	e1a03000 	mov	r3, r0
    ed3c:	e59f109c 	ldr	r1, [pc, #156]	; ede0 <_Z9Process_4v+0xe4>
    ed40:	e1a00003 	mov	r0, r3
    ed44:	ebffe9c0 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:103
    enable_irq();
    ed48:	ebfffec3 	bl	e85c <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:107

    while (true)
    {
        write(f, "1", 1);
    ed4c:	e3a02001 	mov	r2, #1
    ed50:	e59f108c 	ldr	r1, [pc, #140]	; ede4 <_Z9Process_4v+0xe8>
    ed54:	e51b0008 	ldr	r0, [fp, #-8]
    ed58:	eb00008e 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:109

        for (i = 0; i < 0x1600; i++)
    ed5c:	e3a03000 	mov	r3, #0
    ed60:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:109 (discriminator 3)
    ed64:	e51b300c 	ldr	r3, [fp, #-12]
    ed68:	e3530c16 	cmp	r3, #5632	; 0x1600
    ed6c:	b3a03001 	movlt	r3, #1
    ed70:	a3a03000 	movge	r3, #0
    ed74:	e6ef3073 	uxtb	r3, r3
    ed78:	e3530000 	cmp	r3, #0
    ed7c:	0a000003 	beq	ed90 <_Z9Process_4v+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:109 (discriminator 2)
    ed80:	e51b300c 	ldr	r3, [fp, #-12]
    ed84:	e2833001 	add	r3, r3, #1
    ed88:	e50b300c 	str	r3, [fp, #-12]
    ed8c:	eafffff4 	b	ed64 <_Z9Process_4v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:112
            ;

        write(f, "0", 1);
    ed90:	e3a02001 	mov	r2, #1
    ed94:	e59f104c 	ldr	r1, [pc, #76]	; ede8 <_Z9Process_4v+0xec>
    ed98:	e51b0008 	ldr	r0, [fp, #-8]
    ed9c:	eb00007d 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:114

        for (i = 0; i < 0x1600; i++)
    eda0:	e3a03000 	mov	r3, #0
    eda4:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:114 (discriminator 3)
    eda8:	e51b300c 	ldr	r3, [fp, #-12]
    edac:	e3530c16 	cmp	r3, #5632	; 0x1600
    edb0:	b3a03001 	movlt	r3, #1
    edb4:	a3a03000 	movge	r3, #0
    edb8:	e6ef3073 	uxtb	r3, r3
    edbc:	e3530000 	cmp	r3, #0
    edc0:	0affffe1 	beq	ed4c <_Z9Process_4v+0x50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:114 (discriminator 2)
    edc4:	e51b300c 	ldr	r3, [fp, #-12]
    edc8:	e2833001 	add	r3, r3, #1
    edcc:	e50b300c 	str	r3, [fp, #-12]
    edd0:	eafffff4 	b	eda8 <_Z9Process_4v+0xac>
    edd4:	0000fd4c 	andeq	pc, r0, ip, asr #26
    edd8:	0000fd58 	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
    eddc:	0000ff64 	andeq	pc, r0, r4, ror #30
    ede0:	0000fca8 	andeq	pc, r0, r8, lsr #25
    ede4:	0000fcac 	andeq	pc, r0, ip, lsr #25
    ede8:	0000fcb0 			; <UNDEFINED> instruction: 0x0000fcb0

0000edec <_Z9Process_5v>:
_Z9Process_5v():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:122

    close(f);
}

void Process_5()
{
    edec:	e92d4800 	push	{fp, lr}
    edf0:	e28db004 	add	fp, sp, #4
    edf4:	e24dd010 	sub	sp, sp, #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:125
    volatile int i;

    uint32_t f = open("DEV:segd", NFile_Open_Mode::Write_Only);
    edf8:	e3a01001 	mov	r1, #1
    edfc:	e59f00c0 	ldr	r0, [pc, #192]	; eec4 <_Z9Process_5v+0xd8>
    ee00:	eb00003f 	bl	ef04 <_Z4openPKc15NFile_Open_Mode>
    ee04:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:126
    write(f, "4", 1);
    ee08:	e3a02001 	mov	r2, #1
    ee0c:	e59f10b4 	ldr	r1, [pc, #180]	; eec8 <_Z9Process_5v+0xdc>
    ee10:	e51b0008 	ldr	r0, [fp, #-8]
    ee14:	eb00005f 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:128

    disable_irq();
    ee18:	ebfffe8d 	bl	e854 <disable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:129
    sMonitor << "process 5 file descriptor = " << f << "\n";
    ee1c:	e59f10a8 	ldr	r1, [pc, #168]	; eecc <_Z9Process_5v+0xe0>
    ee20:	e59f00a8 	ldr	r0, [pc, #168]	; eed0 <_Z9Process_5v+0xe4>
    ee24:	ebffe988 	bl	944c <_ZN8CMonitorlsEPKc>
    ee28:	e1a03000 	mov	r3, r0
    ee2c:	e51b1008 	ldr	r1, [fp, #-8]
    ee30:	e1a00003 	mov	r0, r3
    ee34:	ebffe9af 	bl	94f8 <_ZN8CMonitorlsEj>
    ee38:	e1a03000 	mov	r3, r0
    ee3c:	e59f1090 	ldr	r1, [pc, #144]	; eed4 <_Z9Process_5v+0xe8>
    ee40:	e1a00003 	mov	r0, r3
    ee44:	ebffe980 	bl	944c <_ZN8CMonitorlsEPKc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:130
    enable_irq();
    ee48:	ebfffe83 	bl	e85c <enable_irq>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:132

    char message[] = "0";
    ee4c:	e3a03030 	mov	r3, #48	; 0x30
    ee50:	e14b31b0 	strh	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:136

    while (true)
    {
        if (message[0] == '9')
    ee54:	e55b3010 	ldrb	r3, [fp, #-16]
    ee58:	e3530039 	cmp	r3, #57	; 0x39
    ee5c:	1a000002 	bne	ee6c <_Z9Process_5v+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:138
        {
            message[0] = '0';
    ee60:	e3a03030 	mov	r3, #48	; 0x30
    ee64:	e54b3010 	strb	r3, [fp, #-16]
    ee68:	ea000003 	b	ee7c <_Z9Process_5v+0x90>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:142
        }
        else
        {
            ++message[0];
    ee6c:	e55b3010 	ldrb	r3, [fp, #-16]
    ee70:	e2833001 	add	r3, r3, #1
    ee74:	e6ef3073 	uxtb	r3, r3
    ee78:	e54b3010 	strb	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:145
        }

        write(f, message, 1);
    ee7c:	e24b3010 	sub	r3, fp, #16
    ee80:	e3a02001 	mov	r2, #1
    ee84:	e1a01003 	mov	r1, r3
    ee88:	e51b0008 	ldr	r0, [fp, #-8]
    ee8c:	eb000041 	bl	ef98 <_Z5writejPKcj>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:147

        for (i = 0; i < 0x1600; i++)
    ee90:	e3a03000 	mov	r3, #0
    ee94:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:147 (discriminator 3)
    ee98:	e51b300c 	ldr	r3, [fp, #-12]
    ee9c:	e3530c16 	cmp	r3, #5632	; 0x1600
    eea0:	b3a03001 	movlt	r3, #1
    eea4:	a3a03000 	movge	r3, #0
    eea8:	e6ef3073 	uxtb	r3, r3
    eeac:	e3530000 	cmp	r3, #0
    eeb0:	0affffe7 	beq	ee54 <_Z9Process_5v+0x68>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/test_processes.cpp:147 (discriminator 2)
    eeb4:	e51b300c 	ldr	r3, [fp, #-12]
    eeb8:	e2833001 	add	r3, r3, #1
    eebc:	e50b300c 	str	r3, [fp, #-12]
    eec0:	eafffff4 	b	ee98 <_Z9Process_5v+0xac>
    eec4:	0000fd78 	andeq	pc, r0, r8, ror sp	; <UNPREDICTABLE>
    eec8:	0000fd84 	andeq	pc, r0, r4, lsl #27
    eecc:	0000fd88 	andeq	pc, r0, r8, lsl #27
    eed0:	0000ff64 	andeq	pc, r0, r4, ror #30
    eed4:	0000fca8 	andeq	pc, r0, r8, lsr #25

0000eed8 <_Z6getpidv>:
_Z6getpidv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:4
#include <stdfile.h>

uint32_t getpid()
{
    eed8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    eedc:	e28db000 	add	fp, sp, #0
    eee0:	e24dd00c 	sub	sp, sp, #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:7
    uint32_t pid;

    asm volatile("swi 0");
    eee4:	ef000000 	svc	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:8
    asm volatile("mov %0, r0" : "=r"(pid));
    eee8:	e1a03000 	mov	r3, r0
    eeec:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:10

    return pid;
    eef0:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:11
}
    eef4:	e1a00003 	mov	r0, r3
    eef8:	e28bd000 	add	sp, fp, #0
    eefc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ef00:	e12fff1e 	bx	lr

0000ef04 <_Z4openPKc15NFile_Open_Mode>:
_Z4openPKc15NFile_Open_Mode():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:14

uint32_t open(const char* filename, NFile_Open_Mode mode)
{
    ef04:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ef08:	e28db000 	add	fp, sp, #0
    ef0c:	e24dd014 	sub	sp, sp, #20
    ef10:	e50b0010 	str	r0, [fp, #-16]
    ef14:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:17
    uint32_t file;

    asm volatile("mov r0, %0" : : "r"(filename));
    ef18:	e51b3010 	ldr	r3, [fp, #-16]
    ef1c:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:18
    asm volatile("mov r1, %0" : : "r"(mode));
    ef20:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ef24:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:19
    asm volatile("swi 64");
    ef28:	ef000040 	svc	0x00000040
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:20
    asm volatile("mov %0, r0" : "=r"(file));
    ef2c:	e1a03000 	mov	r3, r0
    ef30:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:22

    return file;
    ef34:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:23
}
    ef38:	e1a00003 	mov	r0, r3
    ef3c:	e28bd000 	add	sp, fp, #0
    ef40:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ef44:	e12fff1e 	bx	lr

0000ef48 <_Z4readjPcj>:
_Z4readjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:26

uint32_t read(uint32_t file, char* const buffer, uint32_t size)
{
    ef48:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ef4c:	e28db000 	add	fp, sp, #0
    ef50:	e24dd01c 	sub	sp, sp, #28
    ef54:	e50b0010 	str	r0, [fp, #-16]
    ef58:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    ef5c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:29
    uint32_t rdnum;

    asm volatile("mov r0, %0" : : "r"(file));
    ef60:	e51b3010 	ldr	r3, [fp, #-16]
    ef64:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:30
    asm volatile("mov r1, %0" : : "r"(buffer));
    ef68:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    ef6c:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:31
    asm volatile("mov r2, %0" : : "r"(size));
    ef70:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    ef74:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:32
    asm volatile("swi 65");
    ef78:	ef000041 	svc	0x00000041
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:33
    asm volatile("mov %0, r0" : "=r"(rdnum));
    ef7c:	e1a03000 	mov	r3, r0
    ef80:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:35

    return rdnum;
    ef84:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:36
}
    ef88:	e1a00003 	mov	r0, r3
    ef8c:	e28bd000 	add	sp, fp, #0
    ef90:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    ef94:	e12fff1e 	bx	lr

0000ef98 <_Z5writejPKcj>:
_Z5writejPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:39

uint32_t write(uint32_t file, const char* buffer, uint32_t size)
{
    ef98:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    ef9c:	e28db000 	add	fp, sp, #0
    efa0:	e24dd01c 	sub	sp, sp, #28
    efa4:	e50b0010 	str	r0, [fp, #-16]
    efa8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    efac:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:42
    uint32_t wrnum;

    asm volatile("mov r0, %0" : : "r"(file));
    efb0:	e51b3010 	ldr	r3, [fp, #-16]
    efb4:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:43
    asm volatile("mov r1, %0" : : "r"(buffer));
    efb8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    efbc:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:44
    asm volatile("mov r2, %0" : : "r"(size));
    efc0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    efc4:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:45
    asm volatile("swi 66");
    efc8:	ef000042 	svc	0x00000042
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:46
    asm volatile("mov %0, r0" : "=r"(wrnum));
    efcc:	e1a03000 	mov	r3, r0
    efd0:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:48

    return wrnum;
    efd4:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:49
}
    efd8:	e1a00003 	mov	r0, r3
    efdc:	e28bd000 	add	sp, fp, #0
    efe0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    efe4:	e12fff1e 	bx	lr

0000efe8 <_Z5closej>:
_Z5closej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:52

void close(uint32_t file)
{
    efe8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    efec:	e28db000 	add	fp, sp, #0
    eff0:	e24dd00c 	sub	sp, sp, #12
    eff4:	e50b0008 	str	r0, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:53
    asm volatile("mov r0, %0" : : "r"(file));
    eff8:	e51b3008 	ldr	r3, [fp, #-8]
    effc:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:54
    asm volatile("swi 67");
    f000:	ef000043 	svc	0x00000043
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:55
}
    f004:	e320f000 	nop	{0}
    f008:	e28bd000 	add	sp, fp, #0
    f00c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f010:	e12fff1e 	bx	lr

0000f014 <_Z5ioctlj16NIOCtl_OperationPv>:
_Z5ioctlj16NIOCtl_OperationPv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:58

uint32_t ioctl(uint32_t file, NIOCtl_Operation operation, void* param)
{
    f014:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f018:	e28db000 	add	fp, sp, #0
    f01c:	e24dd01c 	sub	sp, sp, #28
    f020:	e50b0010 	str	r0, [fp, #-16]
    f024:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f028:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:61
    uint32_t retcode;

    asm volatile("mov r0, %0" : : "r"(file));
    f02c:	e51b3010 	ldr	r3, [fp, #-16]
    f030:	e1a00003 	mov	r0, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:62
    asm volatile("mov r1, %0" : : "r"(operation));
    f034:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f038:	e1a01003 	mov	r1, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:63
    asm volatile("mov r2, %0" : : "r"(param));
    f03c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f040:	e1a02003 	mov	r2, r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:64
    asm volatile("swi 68");
    f044:	ef000044 	svc	0x00000044
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:65
    asm volatile("mov %0, r0" : "=r"(retcode));
    f048:	e1a03000 	mov	r3, r0
    f04c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:67

    return retcode;
    f050:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdfile.cpp:68
}
    f054:	e1a00003 	mov	r0, r3
    f058:	e28bd000 	add	sp, fp, #0
    f05c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f060:	e12fff1e 	bx	lr

0000f064 <_Z4itoajPcj>:
_Z4itoajPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:9
{
    const char CharConvArr[] = "0123456789ABCDEF";
}

void itoa(unsigned int input, char* output, unsigned int base)
{
    f064:	e92d4800 	push	{fp, lr}
    f068:	e28db004 	add	fp, sp, #4
    f06c:	e24dd020 	sub	sp, sp, #32
    f070:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    f074:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    f078:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:10
    int i = 0;
    f07c:	e3a03000 	mov	r3, #0
    f080:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:12

    while (input > 0)
    f084:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f088:	e3530000 	cmp	r3, #0
    f08c:	0a000014 	beq	f0e4 <_Z4itoajPcj+0x80>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:14
    {
        output[i] = CharConvArr[input % base];
    f090:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f094:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    f098:	e1a00003 	mov	r0, r3
    f09c:	eb00019a 	bl	f70c <__aeabi_uidivmod>
    f0a0:	e1a03001 	mov	r3, r1
    f0a4:	e1a01003 	mov	r1, r3
    f0a8:	e51b3008 	ldr	r3, [fp, #-8]
    f0ac:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f0b0:	e0823003 	add	r3, r2, r3
    f0b4:	e59f2118 	ldr	r2, [pc, #280]	; f1d4 <_Z4itoajPcj+0x170>
    f0b8:	e7d22001 	ldrb	r2, [r2, r1]
    f0bc:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:15
        input /= base;
    f0c0:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
    f0c4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    f0c8:	eb000114 	bl	f520 <__udivsi3>
    f0cc:	e1a03000 	mov	r3, r0
    f0d0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:16
        i++;
    f0d4:	e51b3008 	ldr	r3, [fp, #-8]
    f0d8:	e2833001 	add	r3, r3, #1
    f0dc:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:12
    while (input > 0)
    f0e0:	eaffffe7 	b	f084 <_Z4itoajPcj+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:19
    }

    if (i == 0)
    f0e4:	e51b3008 	ldr	r3, [fp, #-8]
    f0e8:	e3530000 	cmp	r3, #0
    f0ec:	1a000007 	bne	f110 <_Z4itoajPcj+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:21
    {
        output[i] = CharConvArr[0];
    f0f0:	e51b3008 	ldr	r3, [fp, #-8]
    f0f4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f0f8:	e0823003 	add	r3, r2, r3
    f0fc:	e3a02030 	mov	r2, #48	; 0x30
    f100:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:22
        i++;
    f104:	e51b3008 	ldr	r3, [fp, #-8]
    f108:	e2833001 	add	r3, r3, #1
    f10c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:25
    }

    output[i] = '\0';
    f110:	e51b3008 	ldr	r3, [fp, #-8]
    f114:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f118:	e0823003 	add	r3, r2, r3
    f11c:	e3a02000 	mov	r2, #0
    f120:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:26
    i--;
    f124:	e51b3008 	ldr	r3, [fp, #-8]
    f128:	e2433001 	sub	r3, r3, #1
    f12c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28

    for (int j = 0; j <= i / 2; j++)
    f130:	e3a03000 	mov	r3, #0
    f134:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28 (discriminator 3)
    f138:	e51b3008 	ldr	r3, [fp, #-8]
    f13c:	e1a02fa3 	lsr	r2, r3, #31
    f140:	e0823003 	add	r3, r2, r3
    f144:	e1a030c3 	asr	r3, r3, #1
    f148:	e1a02003 	mov	r2, r3
    f14c:	e51b300c 	ldr	r3, [fp, #-12]
    f150:	e1530002 	cmp	r3, r2
    f154:	ca00001b 	bgt	f1c8 <_Z4itoajPcj+0x164>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:30 (discriminator 2)
    {
        char c = output[i - j];
    f158:	e51b2008 	ldr	r2, [fp, #-8]
    f15c:	e51b300c 	ldr	r3, [fp, #-12]
    f160:	e0423003 	sub	r3, r2, r3
    f164:	e1a02003 	mov	r2, r3
    f168:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f16c:	e0833002 	add	r3, r3, r2
    f170:	e5d33000 	ldrb	r3, [r3]
    f174:	e54b300d 	strb	r3, [fp, #-13]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:31 (discriminator 2)
        output[i - j] = output[j];
    f178:	e51b300c 	ldr	r3, [fp, #-12]
    f17c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f180:	e0822003 	add	r2, r2, r3
    f184:	e51b1008 	ldr	r1, [fp, #-8]
    f188:	e51b300c 	ldr	r3, [fp, #-12]
    f18c:	e0413003 	sub	r3, r1, r3
    f190:	e1a01003 	mov	r1, r3
    f194:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f198:	e0833001 	add	r3, r3, r1
    f19c:	e5d22000 	ldrb	r2, [r2]
    f1a0:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:32 (discriminator 2)
        output[j] = c;
    f1a4:	e51b300c 	ldr	r3, [fp, #-12]
    f1a8:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
    f1ac:	e0823003 	add	r3, r2, r3
    f1b0:	e55b200d 	ldrb	r2, [fp, #-13]
    f1b4:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:28 (discriminator 2)
    for (int j = 0; j <= i / 2; j++)
    f1b8:	e51b300c 	ldr	r3, [fp, #-12]
    f1bc:	e2833001 	add	r3, r3, #1
    f1c0:	e50b300c 	str	r3, [fp, #-12]
    f1c4:	eaffffdb 	b	f138 <_Z4itoajPcj+0xd4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:34
    }
}
    f1c8:	e320f000 	nop	{0}
    f1cc:	e24bd004 	sub	sp, fp, #4
    f1d0:	e8bd8800 	pop	{fp, pc}
    f1d4:	0000fdb8 			; <UNDEFINED> instruction: 0x0000fdb8

0000f1d8 <_Z4atoiPKc>:
_Z4atoiPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:37

int atoi(const char* input)
{
    f1d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f1dc:	e28db000 	add	fp, sp, #0
    f1e0:	e24dd014 	sub	sp, sp, #20
    f1e4:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:38
    int output = 0;
    f1e8:	e3a03000 	mov	r3, #0
    f1ec:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:40

    while (*input != '\0')
    f1f0:	e51b3010 	ldr	r3, [fp, #-16]
    f1f4:	e5d33000 	ldrb	r3, [r3]
    f1f8:	e3530000 	cmp	r3, #0
    f1fc:	0a000017 	beq	f260 <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:42
    {
        output *= 10;
    f200:	e51b2008 	ldr	r2, [fp, #-8]
    f204:	e1a03002 	mov	r3, r2
    f208:	e1a03103 	lsl	r3, r3, #2
    f20c:	e0833002 	add	r3, r3, r2
    f210:	e1a03083 	lsl	r3, r3, #1
    f214:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:43
        if (*input > '9' || *input < '0')
    f218:	e51b3010 	ldr	r3, [fp, #-16]
    f21c:	e5d33000 	ldrb	r3, [r3]
    f220:	e3530039 	cmp	r3, #57	; 0x39
    f224:	8a00000d 	bhi	f260 <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:43 (discriminator 1)
    f228:	e51b3010 	ldr	r3, [fp, #-16]
    f22c:	e5d33000 	ldrb	r3, [r3]
    f230:	e353002f 	cmp	r3, #47	; 0x2f
    f234:	9a000009 	bls	f260 <_Z4atoiPKc+0x88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:46
            break;

        output += *input - '0';
    f238:	e51b3010 	ldr	r3, [fp, #-16]
    f23c:	e5d33000 	ldrb	r3, [r3]
    f240:	e2433030 	sub	r3, r3, #48	; 0x30
    f244:	e51b2008 	ldr	r2, [fp, #-8]
    f248:	e0823003 	add	r3, r2, r3
    f24c:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:48

        input++;
    f250:	e51b3010 	ldr	r3, [fp, #-16]
    f254:	e2833001 	add	r3, r3, #1
    f258:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:40
    while (*input != '\0')
    f25c:	eaffffe3 	b	f1f0 <_Z4atoiPKc+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:51
    }

    return output;
    f260:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:52
}
    f264:	e1a00003 	mov	r0, r3
    f268:	e28bd000 	add	sp, fp, #0
    f26c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f270:	e12fff1e 	bx	lr

0000f274 <_Z7strncpyPcPKci>:
_Z7strncpyPcPKci():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:55

char* strncpy(char* dest, const char* src, int num)
{
    f274:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f278:	e28db000 	add	fp, sp, #0
    f27c:	e24dd01c 	sub	sp, sp, #28
    f280:	e50b0010 	str	r0, [fp, #-16]
    f284:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f288:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58
    int i;

    for (i = 0; i < num && src[i] != '\0'; i++)
    f28c:	e3a03000 	mov	r3, #0
    f290:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 4)
    f294:	e51b2008 	ldr	r2, [fp, #-8]
    f298:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f29c:	e1520003 	cmp	r2, r3
    f2a0:	aa000011 	bge	f2ec <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 2)
    f2a4:	e51b3008 	ldr	r3, [fp, #-8]
    f2a8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    f2ac:	e0823003 	add	r3, r2, r3
    f2b0:	e5d33000 	ldrb	r3, [r3]
    f2b4:	e3530000 	cmp	r3, #0
    f2b8:	0a00000b 	beq	f2ec <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:59 (discriminator 3)
        dest[i] = src[i];
    f2bc:	e51b3008 	ldr	r3, [fp, #-8]
    f2c0:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    f2c4:	e0822003 	add	r2, r2, r3
    f2c8:	e51b3008 	ldr	r3, [fp, #-8]
    f2cc:	e51b1010 	ldr	r1, [fp, #-16]
    f2d0:	e0813003 	add	r3, r1, r3
    f2d4:	e5d22000 	ldrb	r2, [r2]
    f2d8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:58 (discriminator 3)
    for (i = 0; i < num && src[i] != '\0'; i++)
    f2dc:	e51b3008 	ldr	r3, [fp, #-8]
    f2e0:	e2833001 	add	r3, r3, #1
    f2e4:	e50b3008 	str	r3, [fp, #-8]
    f2e8:	eaffffe9 	b	f294 <_Z7strncpyPcPKci+0x20>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:60 (discriminator 2)
    for (; i < num; i++)
    f2ec:	e51b2008 	ldr	r2, [fp, #-8]
    f2f0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f2f4:	e1520003 	cmp	r2, r3
    f2f8:	aa000008 	bge	f320 <_Z7strncpyPcPKci+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:61 (discriminator 1)
        dest[i] = '\0';
    f2fc:	e51b3008 	ldr	r3, [fp, #-8]
    f300:	e51b2010 	ldr	r2, [fp, #-16]
    f304:	e0823003 	add	r3, r2, r3
    f308:	e3a02000 	mov	r2, #0
    f30c:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:60 (discriminator 1)
    for (; i < num; i++)
    f310:	e51b3008 	ldr	r3, [fp, #-8]
    f314:	e2833001 	add	r3, r3, #1
    f318:	e50b3008 	str	r3, [fp, #-8]
    f31c:	eafffff2 	b	f2ec <_Z7strncpyPcPKci+0x78>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:63

    return dest;
    f320:	e51b3010 	ldr	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:64
}
    f324:	e1a00003 	mov	r0, r3
    f328:	e28bd000 	add	sp, fp, #0
    f32c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f330:	e12fff1e 	bx	lr

0000f334 <_Z7strncmpPKcS0_i>:
_Z7strncmpPKcS0_i():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:67

int strncmp(const char* s1, const char* s2, int num)
{
    f334:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f338:	e28db000 	add	fp, sp, #0
    f33c:	e24dd01c 	sub	sp, sp, #28
    f340:	e50b0010 	str	r0, [fp, #-16]
    f344:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    f348:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:69
    unsigned char u1, u2;
    while (num-- > 0)
    f34c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f350:	e2432001 	sub	r2, r3, #1
    f354:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    f358:	e3530000 	cmp	r3, #0
    f35c:	c3a03001 	movgt	r3, #1
    f360:	d3a03000 	movle	r3, #0
    f364:	e6ef3073 	uxtb	r3, r3
    f368:	e3530000 	cmp	r3, #0
    f36c:	0a000016 	beq	f3cc <_Z7strncmpPKcS0_i+0x98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:71
    {
        u1 = (unsigned char)*s1++;
    f370:	e51b3010 	ldr	r3, [fp, #-16]
    f374:	e2832001 	add	r2, r3, #1
    f378:	e50b2010 	str	r2, [fp, #-16]
    f37c:	e5d33000 	ldrb	r3, [r3]
    f380:	e54b3005 	strb	r3, [fp, #-5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:72
        u2 = (unsigned char)*s2++;
    f384:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f388:	e2832001 	add	r2, r3, #1
    f38c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    f390:	e5d33000 	ldrb	r3, [r3]
    f394:	e54b3006 	strb	r3, [fp, #-6]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:73
        if (u1 != u2)
    f398:	e55b2005 	ldrb	r2, [fp, #-5]
    f39c:	e55b3006 	ldrb	r3, [fp, #-6]
    f3a0:	e1520003 	cmp	r2, r3
    f3a4:	0a000003 	beq	f3b8 <_Z7strncmpPKcS0_i+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:74
            return u1 - u2;
    f3a8:	e55b2005 	ldrb	r2, [fp, #-5]
    f3ac:	e55b3006 	ldrb	r3, [fp, #-6]
    f3b0:	e0423003 	sub	r3, r2, r3
    f3b4:	ea000005 	b	f3d0 <_Z7strncmpPKcS0_i+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:75
        if (u1 == '\0')
    f3b8:	e55b3005 	ldrb	r3, [fp, #-5]
    f3bc:	e3530000 	cmp	r3, #0
    f3c0:	1affffe1 	bne	f34c <_Z7strncmpPKcS0_i+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:76
            return 0;
    f3c4:	e3a03000 	mov	r3, #0
    f3c8:	ea000000 	b	f3d0 <_Z7strncmpPKcS0_i+0x9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:79
    }

    return 0;
    f3cc:	e3a03000 	mov	r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:80
}
    f3d0:	e1a00003 	mov	r0, r3
    f3d4:	e28bd000 	add	sp, fp, #0
    f3d8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f3dc:	e12fff1e 	bx	lr

0000f3e0 <_Z6strlenPKc>:
_Z6strlenPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:83

int strlen(const char* s)
{
    f3e0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f3e4:	e28db000 	add	fp, sp, #0
    f3e8:	e24dd014 	sub	sp, sp, #20
    f3ec:	e50b0010 	str	r0, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:84
    int i = 0;
    f3f0:	e3a03000 	mov	r3, #0
    f3f4:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:86

    while (s[i] != '\0')
    f3f8:	e51b3008 	ldr	r3, [fp, #-8]
    f3fc:	e51b2010 	ldr	r2, [fp, #-16]
    f400:	e0823003 	add	r3, r2, r3
    f404:	e5d33000 	ldrb	r3, [r3]
    f408:	e3530000 	cmp	r3, #0
    f40c:	0a000003 	beq	f420 <_Z6strlenPKc+0x40>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:87
        i++;
    f410:	e51b3008 	ldr	r3, [fp, #-8]
    f414:	e2833001 	add	r3, r3, #1
    f418:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:86
    while (s[i] != '\0')
    f41c:	eafffff5 	b	f3f8 <_Z6strlenPKc+0x18>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:89

    return i;
    f420:	e51b3008 	ldr	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:90
}
    f424:	e1a00003 	mov	r0, r3
    f428:	e28bd000 	add	sp, fp, #0
    f42c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f430:	e12fff1e 	bx	lr

0000f434 <_Z5bzeroPvi>:
_Z5bzeroPvi():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:93

void bzero(void* memory, int length)
{
    f434:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f438:	e28db000 	add	fp, sp, #0
    f43c:	e24dd014 	sub	sp, sp, #20
    f440:	e50b0010 	str	r0, [fp, #-16]
    f444:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:94
    char* mem = reinterpret_cast<char*>(memory);
    f448:	e51b3010 	ldr	r3, [fp, #-16]
    f44c:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96

    for (int i = 0; i < length; i++)
    f450:	e3a03000 	mov	r3, #0
    f454:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96 (discriminator 3)
    f458:	e51b2008 	ldr	r2, [fp, #-8]
    f45c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    f460:	e1520003 	cmp	r2, r3
    f464:	aa000008 	bge	f48c <_Z5bzeroPvi+0x58>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:97 (discriminator 2)
        mem[i] = 0;
    f468:	e51b3008 	ldr	r3, [fp, #-8]
    f46c:	e51b200c 	ldr	r2, [fp, #-12]
    f470:	e0823003 	add	r3, r2, r3
    f474:	e3a02000 	mov	r2, #0
    f478:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:96 (discriminator 2)
    for (int i = 0; i < length; i++)
    f47c:	e51b3008 	ldr	r3, [fp, #-8]
    f480:	e2833001 	add	r3, r3, #1
    f484:	e50b3008 	str	r3, [fp, #-8]
    f488:	eafffff2 	b	f458 <_Z5bzeroPvi+0x24>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:98
}
    f48c:	e320f000 	nop	{0}
    f490:	e28bd000 	add	sp, fp, #0
    f494:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f498:	e12fff1e 	bx	lr

0000f49c <_Z6memcpyPKvPvi>:
_Z6memcpyPKvPvi():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:101

void memcpy(const void* src, void* dst, int num)
{
    f49c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
    f4a0:	e28db000 	add	fp, sp, #0
    f4a4:	e24dd024 	sub	sp, sp, #36	; 0x24
    f4a8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    f4ac:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    f4b0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:102
    const char* memsrc = reinterpret_cast<const char*>(src);
    f4b4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    f4b8:	e50b300c 	str	r3, [fp, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:103
    char* memdst = reinterpret_cast<char*>(dst);
    f4bc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4c0:	e50b3010 	str	r3, [fp, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105

    for (int i = 0; i < num; i++)
    f4c4:	e3a03000 	mov	r3, #0
    f4c8:	e50b3008 	str	r3, [fp, #-8]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105 (discriminator 3)
    f4cc:	e51b2008 	ldr	r2, [fp, #-8]
    f4d0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    f4d4:	e1520003 	cmp	r2, r3
    f4d8:	aa00000b 	bge	f50c <_Z6memcpyPKvPvi+0x70>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:106 (discriminator 2)
        memdst[i] = memsrc[i];
    f4dc:	e51b3008 	ldr	r3, [fp, #-8]
    f4e0:	e51b200c 	ldr	r2, [fp, #-12]
    f4e4:	e0822003 	add	r2, r2, r3
    f4e8:	e51b3008 	ldr	r3, [fp, #-8]
    f4ec:	e51b1010 	ldr	r1, [fp, #-16]
    f4f0:	e0813003 	add	r3, r1, r3
    f4f4:	e5d22000 	ldrb	r2, [r2]
    f4f8:	e5c32000 	strb	r2, [r3]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:105 (discriminator 2)
    for (int i = 0; i < num; i++)
    f4fc:	e51b3008 	ldr	r3, [fp, #-8]
    f500:	e2833001 	add	r3, r3, #1
    f504:	e50b3008 	str	r3, [fp, #-8]
    f508:	eaffffef 	b	f4cc <_Z6memcpyPKvPvi+0x30>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/stdlib/src/stdstring.cpp:107
}
    f50c:	e320f000 	nop	{0}
    f510:	e28bd000 	add	sp, fp, #0
    f514:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
    f518:	e12fff1e 	bx	lr

0000f51c <_Znaj>:
_Znaj():
/build/libstdc++-arm-none-eabi-gDiE7C/libstdc++-arm-none-eabi-17/build/arm/v5te/hard/libstdc++/libsupc++/../../../../../../src/libstdc++-v3/libsupc++/new_opv.cc:32
    f51c:	eafff380 	b	c324 <_Znwj>

0000f520 <__udivsi3>:
__udivsi3():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1104
    f520:	e2512001 	subs	r2, r1, #1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1106
    f524:	012fff1e 	bxeq	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1107
    f528:	3a000074 	bcc	f700 <__udivsi3+0x1e0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1108
    f52c:	e1500001 	cmp	r0, r1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1109
    f530:	9a00006b 	bls	f6e4 <__udivsi3+0x1c4>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1110
    f534:	e1110002 	tst	r1, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1111
    f538:	0a00006c 	beq	f6f0 <__udivsi3+0x1d0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1113
    f53c:	e16f3f10 	clz	r3, r0
    f540:	e16f2f11 	clz	r2, r1
    f544:	e0423003 	sub	r3, r2, r3
    f548:	e273301f 	rsbs	r3, r3, #31
    f54c:	10833083 	addne	r3, r3, r3, lsl #1
    f550:	e3a02000 	mov	r2, #0
    f554:	108ff103 	addne	pc, pc, r3, lsl #2
    f558:	e1a00000 	nop			; (mov r0, r0)
    f55c:	e1500f81 	cmp	r0, r1, lsl #31
    f560:	e0a22002 	adc	r2, r2, r2
    f564:	20400f81 	subcs	r0, r0, r1, lsl #31
    f568:	e1500f01 	cmp	r0, r1, lsl #30
    f56c:	e0a22002 	adc	r2, r2, r2
    f570:	20400f01 	subcs	r0, r0, r1, lsl #30
    f574:	e1500e81 	cmp	r0, r1, lsl #29
    f578:	e0a22002 	adc	r2, r2, r2
    f57c:	20400e81 	subcs	r0, r0, r1, lsl #29
    f580:	e1500e01 	cmp	r0, r1, lsl #28
    f584:	e0a22002 	adc	r2, r2, r2
    f588:	20400e01 	subcs	r0, r0, r1, lsl #28
    f58c:	e1500d81 	cmp	r0, r1, lsl #27
    f590:	e0a22002 	adc	r2, r2, r2
    f594:	20400d81 	subcs	r0, r0, r1, lsl #27
    f598:	e1500d01 	cmp	r0, r1, lsl #26
    f59c:	e0a22002 	adc	r2, r2, r2
    f5a0:	20400d01 	subcs	r0, r0, r1, lsl #26
    f5a4:	e1500c81 	cmp	r0, r1, lsl #25
    f5a8:	e0a22002 	adc	r2, r2, r2
    f5ac:	20400c81 	subcs	r0, r0, r1, lsl #25
    f5b0:	e1500c01 	cmp	r0, r1, lsl #24
    f5b4:	e0a22002 	adc	r2, r2, r2
    f5b8:	20400c01 	subcs	r0, r0, r1, lsl #24
    f5bc:	e1500b81 	cmp	r0, r1, lsl #23
    f5c0:	e0a22002 	adc	r2, r2, r2
    f5c4:	20400b81 	subcs	r0, r0, r1, lsl #23
    f5c8:	e1500b01 	cmp	r0, r1, lsl #22
    f5cc:	e0a22002 	adc	r2, r2, r2
    f5d0:	20400b01 	subcs	r0, r0, r1, lsl #22
    f5d4:	e1500a81 	cmp	r0, r1, lsl #21
    f5d8:	e0a22002 	adc	r2, r2, r2
    f5dc:	20400a81 	subcs	r0, r0, r1, lsl #21
    f5e0:	e1500a01 	cmp	r0, r1, lsl #20
    f5e4:	e0a22002 	adc	r2, r2, r2
    f5e8:	20400a01 	subcs	r0, r0, r1, lsl #20
    f5ec:	e1500981 	cmp	r0, r1, lsl #19
    f5f0:	e0a22002 	adc	r2, r2, r2
    f5f4:	20400981 	subcs	r0, r0, r1, lsl #19
    f5f8:	e1500901 	cmp	r0, r1, lsl #18
    f5fc:	e0a22002 	adc	r2, r2, r2
    f600:	20400901 	subcs	r0, r0, r1, lsl #18
    f604:	e1500881 	cmp	r0, r1, lsl #17
    f608:	e0a22002 	adc	r2, r2, r2
    f60c:	20400881 	subcs	r0, r0, r1, lsl #17
    f610:	e1500801 	cmp	r0, r1, lsl #16
    f614:	e0a22002 	adc	r2, r2, r2
    f618:	20400801 	subcs	r0, r0, r1, lsl #16
    f61c:	e1500781 	cmp	r0, r1, lsl #15
    f620:	e0a22002 	adc	r2, r2, r2
    f624:	20400781 	subcs	r0, r0, r1, lsl #15
    f628:	e1500701 	cmp	r0, r1, lsl #14
    f62c:	e0a22002 	adc	r2, r2, r2
    f630:	20400701 	subcs	r0, r0, r1, lsl #14
    f634:	e1500681 	cmp	r0, r1, lsl #13
    f638:	e0a22002 	adc	r2, r2, r2
    f63c:	20400681 	subcs	r0, r0, r1, lsl #13
    f640:	e1500601 	cmp	r0, r1, lsl #12
    f644:	e0a22002 	adc	r2, r2, r2
    f648:	20400601 	subcs	r0, r0, r1, lsl #12
    f64c:	e1500581 	cmp	r0, r1, lsl #11
    f650:	e0a22002 	adc	r2, r2, r2
    f654:	20400581 	subcs	r0, r0, r1, lsl #11
    f658:	e1500501 	cmp	r0, r1, lsl #10
    f65c:	e0a22002 	adc	r2, r2, r2
    f660:	20400501 	subcs	r0, r0, r1, lsl #10
    f664:	e1500481 	cmp	r0, r1, lsl #9
    f668:	e0a22002 	adc	r2, r2, r2
    f66c:	20400481 	subcs	r0, r0, r1, lsl #9
    f670:	e1500401 	cmp	r0, r1, lsl #8
    f674:	e0a22002 	adc	r2, r2, r2
    f678:	20400401 	subcs	r0, r0, r1, lsl #8
    f67c:	e1500381 	cmp	r0, r1, lsl #7
    f680:	e0a22002 	adc	r2, r2, r2
    f684:	20400381 	subcs	r0, r0, r1, lsl #7
    f688:	e1500301 	cmp	r0, r1, lsl #6
    f68c:	e0a22002 	adc	r2, r2, r2
    f690:	20400301 	subcs	r0, r0, r1, lsl #6
    f694:	e1500281 	cmp	r0, r1, lsl #5
    f698:	e0a22002 	adc	r2, r2, r2
    f69c:	20400281 	subcs	r0, r0, r1, lsl #5
    f6a0:	e1500201 	cmp	r0, r1, lsl #4
    f6a4:	e0a22002 	adc	r2, r2, r2
    f6a8:	20400201 	subcs	r0, r0, r1, lsl #4
    f6ac:	e1500181 	cmp	r0, r1, lsl #3
    f6b0:	e0a22002 	adc	r2, r2, r2
    f6b4:	20400181 	subcs	r0, r0, r1, lsl #3
    f6b8:	e1500101 	cmp	r0, r1, lsl #2
    f6bc:	e0a22002 	adc	r2, r2, r2
    f6c0:	20400101 	subcs	r0, r0, r1, lsl #2
    f6c4:	e1500081 	cmp	r0, r1, lsl #1
    f6c8:	e0a22002 	adc	r2, r2, r2
    f6cc:	20400081 	subcs	r0, r0, r1, lsl #1
    f6d0:	e1500001 	cmp	r0, r1
    f6d4:	e0a22002 	adc	r2, r2, r2
    f6d8:	20400001 	subcs	r0, r0, r1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1115
    f6dc:	e1a00002 	mov	r0, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1116
    f6e0:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1119
    f6e4:	03a00001 	moveq	r0, #1
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1120
    f6e8:	13a00000 	movne	r0, #0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1121
    f6ec:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1123
    f6f0:	e16f2f11 	clz	r2, r1
    f6f4:	e262201f 	rsb	r2, r2, #31
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1125
    f6f8:	e1a00230 	lsr	r0, r0, r2
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1126
    f6fc:	e12fff1e 	bx	lr
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1130
    f700:	e3500000 	cmp	r0, #0
    f704:	13e00000 	mvnne	r0, #0
    f708:	ea000007 	b	f72c <__aeabi_idiv0>

0000f70c <__aeabi_uidivmod>:
__aeabi_uidivmod():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1161
    f70c:	e3510000 	cmp	r1, #0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1162
    f710:	0afffffa 	beq	f700 <__udivsi3+0x1e0>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1163
    f714:	e92d4003 	push	{r0, r1, lr}
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1164
    f718:	ebffff80 	bl	f520 <__udivsi3>
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1165
    f71c:	e8bd4006 	pop	{r1, r2, lr}
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1166
    f720:	e0030092 	mul	r3, r2, r0
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1167
    f724:	e0411003 	sub	r1, r1, r3
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1168
    f728:	e12fff1e 	bx	lr

0000f72c <__aeabi_idiv0>:
__aeabi_ldiv0():
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/config/arm/lib1funcs.S:1466
    f72c:	e12fff1e 	bx	lr

Disassembly of section .rodata:

0000f730 <_ZN3halL18Default_Clock_RateE>:
    f730:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f734 <_ZN3halL15Peripheral_BaseE>:
    f734:	20000000 	andcs	r0, r0, r0

0000f738 <_ZN3halL9GPIO_BaseE>:
    f738:	20200000 	eorcs	r0, r0, r0

0000f73c <_ZN3halL14GPIO_Pin_CountE>:
    f73c:	00000036 	andeq	r0, r0, r6, lsr r0

0000f740 <_ZN3halL8AUX_BaseE>:
    f740:	20215000 	eorcs	r5, r1, r0

0000f744 <_ZN3halL25Interrupt_Controller_BaseE>:
    f744:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f748 <_ZN3halL10Timer_BaseE>:
    f748:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f74c <_ZN3halL9TRNG_BaseE>:
    f74c:	20104000 	andscs	r4, r0, r0

0000f750 <_ZN3halL9BSC0_BaseE>:
    f750:	20205000 	eorcs	r5, r0, r0

0000f754 <_ZN3halL9BSC1_BaseE>:
    f754:	20804000 	addcs	r4, r0, r0

0000f758 <_ZN3halL9BSC2_BaseE>:
    f758:	20805000 	addcs	r5, r0, r0

0000f75c <_ZN3halL18Default_Clock_RateE>:
    f75c:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f760 <_ZN3halL15Peripheral_BaseE>:
    f760:	20000000 	andcs	r0, r0, r0

0000f764 <_ZN3halL9GPIO_BaseE>:
    f764:	20200000 	eorcs	r0, r0, r0

0000f768 <_ZN3halL14GPIO_Pin_CountE>:
    f768:	00000036 	andeq	r0, r0, r6, lsr r0

0000f76c <_ZN3halL8AUX_BaseE>:
    f76c:	20215000 	eorcs	r5, r1, r0

0000f770 <_ZN3halL25Interrupt_Controller_BaseE>:
    f770:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f774 <_ZN3halL10Timer_BaseE>:
    f774:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f778 <_ZN3halL9TRNG_BaseE>:
    f778:	20104000 	andscs	r4, r0, r0

0000f77c <_ZN3halL9BSC0_BaseE>:
    f77c:	20205000 	eorcs	r5, r0, r0

0000f780 <_ZN3halL9BSC1_BaseE>:
    f780:	20804000 	addcs	r4, r0, r0

0000f784 <_ZN3halL9BSC2_BaseE>:
    f784:	20805000 	addcs	r5, r0, r0

0000f788 <_ZL24I2C_Transaction_Max_Size>:
    f788:	00000008 	andeq	r0, r0, r8

0000f78c <_ZZN8CMonitorlsEjE11BUFFER_SIZE>:
    f78c:	00000010 	andeq	r0, r0, r0, lsl r0
    f790:	65757274 	ldrbvs	r7, [r5, #-628]!	; 0xfffffd8c
    f794:	00000000 	andeq	r0, r0, r0
    f798:	736c6166 	cmnvc	ip, #-2147483623	; 0x80000019
    f79c:	00000065 	andeq	r0, r0, r5, rrx
    f7a0:	33323130 	teqcc	r2, #48, 2
    f7a4:	37363534 			; <UNDEFINED> instruction: 0x37363534
    f7a8:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
    f7ac:	46454443 	strbmi	r4, [r5], -r3, asr #8
    f7b0:	00000000 	andeq	r0, r0, r0

0000f7b4 <_ZN3halL18Default_Clock_RateE>:
    f7b4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f7b8 <_ZN3halL15Peripheral_BaseE>:
    f7b8:	20000000 	andcs	r0, r0, r0

0000f7bc <_ZN3halL9GPIO_BaseE>:
    f7bc:	20200000 	eorcs	r0, r0, r0

0000f7c0 <_ZN3halL14GPIO_Pin_CountE>:
    f7c0:	00000036 	andeq	r0, r0, r6, lsr r0

0000f7c4 <_ZN3halL8AUX_BaseE>:
    f7c4:	20215000 	eorcs	r5, r1, r0

0000f7c8 <_ZN3halL25Interrupt_Controller_BaseE>:
    f7c8:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f7cc <_ZN3halL10Timer_BaseE>:
    f7cc:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f7d0 <_ZN3halL9TRNG_BaseE>:
    f7d0:	20104000 	andscs	r4, r0, r0

0000f7d4 <_ZN3halL9BSC0_BaseE>:
    f7d4:	20205000 	eorcs	r5, r0, r0

0000f7d8 <_ZN3halL9BSC1_BaseE>:
    f7d8:	20804000 	addcs	r4, r0, r0

0000f7dc <_ZN3halL9BSC2_BaseE>:
    f7dc:	20805000 	addcs	r5, r0, r0

0000f7e0 <_ZL24I2C_Transaction_Max_Size>:
    f7e0:	00000008 	andeq	r0, r0, r8

0000f7e4 <_ZL21SSD1306_Slave_Address>:
    f7e4:	0000003c 	andeq	r0, r0, ip, lsr r0

0000f7e8 <_ZN3halL18Default_Clock_RateE>:
    f7e8:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f7ec <_ZN3halL15Peripheral_BaseE>:
    f7ec:	20000000 	andcs	r0, r0, r0

0000f7f0 <_ZN3halL9GPIO_BaseE>:
    f7f0:	20200000 	eorcs	r0, r0, r0

0000f7f4 <_ZN3halL14GPIO_Pin_CountE>:
    f7f4:	00000036 	andeq	r0, r0, r6, lsr r0

0000f7f8 <_ZN3halL8AUX_BaseE>:
    f7f8:	20215000 	eorcs	r5, r1, r0

0000f7fc <_ZN3halL25Interrupt_Controller_BaseE>:
    f7fc:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f800 <_ZN3halL10Timer_BaseE>:
    f800:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f804 <_ZN3halL9TRNG_BaseE>:
    f804:	20104000 	andscs	r4, r0, r0

0000f808 <_ZN3halL9BSC0_BaseE>:
    f808:	20205000 	eorcs	r5, r0, r0

0000f80c <_ZN3halL9BSC1_BaseE>:
    f80c:	20804000 	addcs	r4, r0, r0

0000f810 <_ZN3halL9BSC2_BaseE>:
    f810:	20805000 	addcs	r5, r0, r0

0000f814 <_ZN16CSegment_Display14mCharacter_MapE>:
    f814:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
    f824:	9dd914de 	cfldrdls	mvd1, [r9, #888]	; 0x378
    f828:	94cf8f17 	strbls	r8, [pc], #3863	; f830 <_ZN16CSegment_Display14mCharacter_MapE+0x1c>
    f82c:	00009fdf 	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
	...

0000f874 <_ZN3halL18Default_Clock_RateE>:
    f874:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f878 <_ZN3halL15Peripheral_BaseE>:
    f878:	20000000 	andcs	r0, r0, r0

0000f87c <_ZN3halL9GPIO_BaseE>:
    f87c:	20200000 	eorcs	r0, r0, r0

0000f880 <_ZN3halL14GPIO_Pin_CountE>:
    f880:	00000036 	andeq	r0, r0, r6, lsr r0

0000f884 <_ZN3halL8AUX_BaseE>:
    f884:	20215000 	eorcs	r5, r1, r0

0000f888 <_ZN3halL25Interrupt_Controller_BaseE>:
    f888:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f88c <_ZN3halL10Timer_BaseE>:
    f88c:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f890 <_ZN3halL9TRNG_BaseE>:
    f890:	20104000 	andscs	r4, r0, r0

0000f894 <_ZN3halL9BSC0_BaseE>:
    f894:	20205000 	eorcs	r5, r0, r0

0000f898 <_ZN3halL9BSC1_BaseE>:
    f898:	20804000 	addcs	r4, r0, r0

0000f89c <_ZN3halL9BSC2_BaseE>:
    f89c:	20805000 	addcs	r5, r0, r0

0000f8a0 <_ZN3halL18Default_Clock_RateE>:
    f8a0:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f8a4 <_ZN3halL15Peripheral_BaseE>:
    f8a4:	20000000 	andcs	r0, r0, r0

0000f8a8 <_ZN3halL9GPIO_BaseE>:
    f8a8:	20200000 	eorcs	r0, r0, r0

0000f8ac <_ZN3halL14GPIO_Pin_CountE>:
    f8ac:	00000036 	andeq	r0, r0, r6, lsr r0

0000f8b0 <_ZN3halL8AUX_BaseE>:
    f8b0:	20215000 	eorcs	r5, r1, r0

0000f8b4 <_ZN3halL25Interrupt_Controller_BaseE>:
    f8b4:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f8b8 <_ZN3halL10Timer_BaseE>:
    f8b8:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f8bc <_ZN3halL9TRNG_BaseE>:
    f8bc:	20104000 	andscs	r4, r0, r0

0000f8c0 <_ZN3halL9BSC0_BaseE>:
    f8c0:	20205000 	eorcs	r5, r0, r0

0000f8c4 <_ZN3halL9BSC1_BaseE>:
    f8c4:	20804000 	addcs	r4, r0, r0

0000f8c8 <_ZN3halL9BSC2_BaseE>:
    f8c8:	20805000 	addcs	r5, r0, r0

0000f8cc <_ZN3halL18Default_Clock_RateE>:
    f8cc:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f8d0 <_ZN3halL15Peripheral_BaseE>:
    f8d0:	20000000 	andcs	r0, r0, r0

0000f8d4 <_ZN3halL9GPIO_BaseE>:
    f8d4:	20200000 	eorcs	r0, r0, r0

0000f8d8 <_ZN3halL14GPIO_Pin_CountE>:
    f8d8:	00000036 	andeq	r0, r0, r6, lsr r0

0000f8dc <_ZN3halL8AUX_BaseE>:
    f8dc:	20215000 	eorcs	r5, r1, r0

0000f8e0 <_ZN3halL25Interrupt_Controller_BaseE>:
    f8e0:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f8e4 <_ZN3halL10Timer_BaseE>:
    f8e4:	2000b400 	andcs	fp, r0, r0, lsl #8

0000f8e8 <_ZN3halL9TRNG_BaseE>:
    f8e8:	20104000 	andscs	r4, r0, r0

0000f8ec <_ZN3halL9BSC0_BaseE>:
    f8ec:	20205000 	eorcs	r5, r0, r0

0000f8f0 <_ZN3halL9BSC1_BaseE>:
    f8f0:	20804000 	addcs	r4, r0, r0

0000f8f4 <_ZN3halL9BSC2_BaseE>:
    f8f4:	20805000 	addcs	r5, r0, r0

0000f8f8 <_ZL17TRNG_Warmup_Count>:
    f8f8:	00040000 	andeq	r0, r4, r0

0000f8fc <_ZL21MaxFSDriverNameLength>:
    f8fc:	00000010 	andeq	r0, r0, r0, lsl r0

0000f900 <_ZL17MaxFilenameLength>:
    f900:	00000010 	andeq	r0, r0, r0, lsl r0

0000f904 <_ZL13MaxPathLength>:
    f904:	00000080 	andeq	r0, r0, r0, lsl #1

0000f908 <_ZL18NoFilesystemDriver>:
    f908:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    f90c:	00564544 	subseq	r4, r6, r4, asr #10
    f910:	00535953 	subseq	r5, r3, r3, asr r9
    f914:	00544e4d 	subseq	r4, r4, sp, asr #28
    f918:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    f91c:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    f920:	676e697a 			; <UNDEFINED> instruction: 0x676e697a
    f924:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
    f928:	0a534620 	beq	14e11b0 <_bss_end+0x14d0130>
    f92c:	00000000 	andeq	r0, r0, r0
    f930:	6e756f6d 	cdpvs	15, 7, cr6, cr5, cr13, {3}
    f934:	6f702074 	svcvs	0x00702074
    f938:	20746e69 	rsbscs	r6, r4, r9, ror #28
    f93c:	0000203d 	andeq	r2, r0, sp, lsr r0
    f940:	0000000a 	andeq	r0, r0, sl
    f944:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
    f948:	20676e69 	rsbcs	r6, r7, r9, ror #28
    f94c:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
    f950:	203d2064 	eorscs	r2, sp, r4, rrx
    f954:	00000000 	andeq	r0, r0, r0
    f958:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
    f95c:	00002064 	andeq	r2, r0, r4, rrx
    f960:	73617720 	cmnvc	r1, #32, 14	; 0x800000
    f964:	756f6620 	strbvc	r6, [pc, #-1568]!	; f34c <_Z7strncmpPKcS0_i+0x18>
    f968:	000a646e 	andeq	r6, sl, lr, ror #8
    f96c:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
    f970:	61772064 	cmnvs	r7, r4, rrx
    f974:	6f6e2073 	svcvs	0x006e2073
    f978:	6f662074 	svcvs	0x00662074
    f97c:	0a646e75 	beq	192b358 <_bss_end+0x191a2d8>
    f980:	00000000 	andeq	r0, r0, r0
    f984:	61657263 	cmnvs	r5, r3, ror #4
    f988:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    f98c:	0000203a 	andeq	r2, r0, sl, lsr r0
    f990:	696e6946 	stmdbvs	lr!, {r1, r2, r6, r8, fp, sp, lr}^
    f994:	64656873 	strbtvs	r6, [r5], #-2163	; 0xfffff78d
    f998:	20534620 	subscs	r4, r3, r0, lsr #12
    f99c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    f9a0:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    f9a4:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
    f9a8:	0a0a6e6f 	beq	2ab36c <_bss_end+0x29a2ec>
    f9ac:	00000000 	andeq	r0, r0, r0
    f9b0:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
    f9b4:	20676e69 	rsbcs	r6, r7, r9, ror #28
    f9b8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    f9bc:	0000203a 	andeq	r2, r0, sl, lsr r0
    f9c0:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
    f9c4:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
    f9c8:	706f206f 	rsbvc	r2, pc, pc, rrx
    f9cc:	203a6e65 	eorscs	r6, sl, r5, ror #28
    f9d0:	00000000 	andeq	r0, r0, r0

0000f9d4 <_ZL21MaxFSDriverNameLength>:
    f9d4:	00000010 	andeq	r0, r0, r0, lsl r0

0000f9d8 <_ZL17MaxFilenameLength>:
    f9d8:	00000010 	andeq	r0, r0, r0, lsl r0

0000f9dc <_ZL13MaxPathLength>:
    f9dc:	00000080 	andeq	r0, r0, r0, lsl #1

0000f9e0 <_ZL18NoFilesystemDriver>:
    f9e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000f9e4 <_ZN3halL18Default_Clock_RateE>:
    f9e4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000f9e8 <_ZN3halL15Peripheral_BaseE>:
    f9e8:	20000000 	andcs	r0, r0, r0

0000f9ec <_ZN3halL9GPIO_BaseE>:
    f9ec:	20200000 	eorcs	r0, r0, r0

0000f9f0 <_ZN3halL14GPIO_Pin_CountE>:
    f9f0:	00000036 	andeq	r0, r0, r6, lsr r0

0000f9f4 <_ZN3halL8AUX_BaseE>:
    f9f4:	20215000 	eorcs	r5, r1, r0

0000f9f8 <_ZN3halL25Interrupt_Controller_BaseE>:
    f9f8:	2000b200 	andcs	fp, r0, r0, lsl #4

0000f9fc <_ZN3halL10Timer_BaseE>:
    f9fc:	2000b400 	andcs	fp, r0, r0, lsl #8

0000fa00 <_ZN3halL9TRNG_BaseE>:
    fa00:	20104000 	andscs	r4, r0, r0

0000fa04 <_ZN3halL9BSC0_BaseE>:
    fa04:	20205000 	eorcs	r5, r0, r0

0000fa08 <_ZN3halL9BSC1_BaseE>:
    fa08:	20804000 	addcs	r4, r0, r0

0000fa0c <_ZN3halL9BSC2_BaseE>:
    fa0c:	20805000 	addcs	r5, r0, r0
    fa10:	3a564544 	bcc	15a0f28 <_bss_end+0x158fea8>
    fa14:	6f697067 	svcvs	0x00697067
    fa18:	00000000 	andeq	r0, r0, r0
    fa1c:	3a564544 	bcc	15a0f34 <_bss_end+0x158feb4>
    fa20:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    fa24:	00726f74 	rsbseq	r6, r2, r4, ror pc
    fa28:	3a564544 	bcc	15a0f40 <_bss_end+0x158fec0>
    fa2c:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    fa30:	00000000 	andeq	r0, r0, r0
    fa34:	3a564544 	bcc	15a0f4c <_bss_end+0x158fecc>
    fa38:	00007273 	andeq	r7, r0, r3, ror r2
    fa3c:	3a564544 	bcc	15a0f54 <_bss_end+0x158fed4>
    fa40:	64676573 	strbtvs	r6, [r7], #-1395	; 0xfffffa8d
    fa44:	00000000 	andeq	r0, r0, r0

0000fa48 <_ZN11CFilesystem11gFS_DriversE>:
    fa48:	4f495047 	svcmi	0x00495047
    fa4c:	0053465f 	subseq	r4, r3, pc, asr r6
	...
    fa58:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    fa5c:	0000ff18 	andeq	pc, r0, r8, lsl pc	; <UNPREDICTABLE>
    fa60:	494e4f4d 	stmdbmi	lr, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
    fa64:	5f524f54 	svcpl	0x00524f54
    fa68:	00005346 	andeq	r5, r0, r6, asr #6
    fa6c:	00000000 	andeq	r0, r0, r0
    fa70:	0000fa1c 	andeq	pc, r0, ip, lsl sl	; <UNPREDICTABLE>
    fa74:	0000ff1c 	andeq	pc, r0, ip, lsl pc	; <UNPREDICTABLE>
    fa78:	474e5254 	smlsldmi	r5, lr, r4, r2
    fa7c:	0053465f 	subseq	r4, r3, pc, asr r6
	...
    fa88:	0000fa28 	andeq	pc, r0, r8, lsr #20
    fa8c:	0000ff28 	andeq	pc, r0, r8, lsr #30
    fa90:	66696853 			; <UNDEFINED> instruction: 0x66696853
    fa94:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    fa98:	53465f67 	movtpl	r5, #28519	; 0x6f67
    fa9c:	00000000 	andeq	r0, r0, r0
    faa0:	0000fa34 	andeq	pc, r0, r4, lsr sl	; <UNPREDICTABLE>
    faa4:	0000ff24 	andeq	pc, r0, r4, lsr #30
    faa8:	67655337 			; <UNDEFINED> instruction: 0x67655337
    faac:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    fab0:	53465f70 	movtpl	r5, #28528	; 0x6f70
    fab4:	00000000 	andeq	r0, r0, r0
    fab8:	0000fa3c 	andeq	pc, r0, ip, lsr sl	; <UNPREDICTABLE>
    fabc:	0000ff20 	andeq	pc, r0, r0, lsr #30

0000fac0 <_ZN11CFilesystem17gFS_Drivers_CountE>:
    fac0:	00000005 	andeq	r0, r0, r5

0000fac4 <_ZN3halL18Default_Clock_RateE>:
    fac4:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fac8 <_ZN3halL15Peripheral_BaseE>:
    fac8:	20000000 	andcs	r0, r0, r0

0000facc <_ZN3halL9GPIO_BaseE>:
    facc:	20200000 	eorcs	r0, r0, r0

0000fad0 <_ZN3halL14GPIO_Pin_CountE>:
    fad0:	00000036 	andeq	r0, r0, r6, lsr r0

0000fad4 <_ZN3halL8AUX_BaseE>:
    fad4:	20215000 	eorcs	r5, r1, r0

0000fad8 <_ZN3halL25Interrupt_Controller_BaseE>:
    fad8:	2000b200 	andcs	fp, r0, r0, lsl #4

0000fadc <_ZN3halL10Timer_BaseE>:
    fadc:	2000b400 	andcs	fp, r0, r0, lsl #8

0000fae0 <_ZN3halL9TRNG_BaseE>:
    fae0:	20104000 	andscs	r4, r0, r0

0000fae4 <_ZN3halL9BSC0_BaseE>:
    fae4:	20205000 	eorcs	r5, r0, r0

0000fae8 <_ZN3halL9BSC1_BaseE>:
    fae8:	20804000 	addcs	r4, r0, r0

0000faec <_ZN3halL9BSC2_BaseE>:
    faec:	20805000 	addcs	r5, r0, r0

0000faf0 <_ZL24Max_Process_Opened_Files>:
    faf0:	00000010 	andeq	r0, r0, r0, lsl r0

0000faf4 <_ZL21MaxFSDriverNameLength>:
    faf4:	00000010 	andeq	r0, r0, r0, lsl r0

0000faf8 <_ZL17MaxFilenameLength>:
    faf8:	00000010 	andeq	r0, r0, r0, lsl r0

0000fafc <_ZL13MaxPathLength>:
    fafc:	00000080 	andeq	r0, r0, r0, lsl #1

0000fb00 <_ZL18NoFilesystemDriver>:
    fb00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fb04 <_ZL14Invalid_Handle>:
    fb04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fb08 <_ZN3halL18Default_Clock_RateE>:
    fb08:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fb0c <_ZN3halL15Peripheral_BaseE>:
    fb0c:	20000000 	andcs	r0, r0, r0

0000fb10 <_ZN3halL9GPIO_BaseE>:
    fb10:	20200000 	eorcs	r0, r0, r0

0000fb14 <_ZN3halL14GPIO_Pin_CountE>:
    fb14:	00000036 	andeq	r0, r0, r6, lsr r0

0000fb18 <_ZN3halL8AUX_BaseE>:
    fb18:	20215000 	eorcs	r5, r1, r0

0000fb1c <_ZN3halL25Interrupt_Controller_BaseE>:
    fb1c:	2000b200 	andcs	fp, r0, r0, lsl #4

0000fb20 <_ZN3halL10Timer_BaseE>:
    fb20:	2000b400 	andcs	fp, r0, r0, lsl #8

0000fb24 <_ZN3halL9TRNG_BaseE>:
    fb24:	20104000 	andscs	r4, r0, r0

0000fb28 <_ZN3halL9BSC0_BaseE>:
    fb28:	20205000 	eorcs	r5, r0, r0

0000fb2c <_ZN3halL9BSC1_BaseE>:
    fb2c:	20804000 	addcs	r4, r0, r0

0000fb30 <_ZN3halL9BSC2_BaseE>:
    fb30:	20805000 	addcs	r5, r0, r0

0000fb34 <_ZL24I2C_Transaction_Max_Size>:
    fb34:	00000008 	andeq	r0, r0, r8

0000fb38 <_ZL21SSD1306_Slave_Address>:
    fb38:	0000003c 	andeq	r0, r0, ip, lsr r0

0000fb3c <_ZN3memL9LowMemoryE>:
    fb3c:	00020000 	andeq	r0, r2, r0

0000fb40 <_ZN3memL10HighMemoryE>:
    fb40:	20000000 	andcs	r0, r0, r0

0000fb44 <_ZN3memL8PageSizeE>:
    fb44:	00004000 	andeq	r4, r0, r0

0000fb48 <_ZN3memL16PagingMemorySizeE>:
    fb48:	1ffe0000 	svcne	0x00fe0000

0000fb4c <_ZN3memL9PageCountE>:
    fb4c:	00007ff8 	strdeq	r7, [r0], -r8

0000fb50 <_ZL24Max_Process_Opened_Files>:
    fb50:	00000010 	andeq	r0, r0, r0, lsl r0

0000fb54 <_ZL21MaxFSDriverNameLength>:
    fb54:	00000010 	andeq	r0, r0, r0, lsl r0

0000fb58 <_ZL17MaxFilenameLength>:
    fb58:	00000010 	andeq	r0, r0, r0, lsl r0

0000fb5c <_ZL13MaxPathLength>:
    fb5c:	00000080 	andeq	r0, r0, r0, lsl #1

0000fb60 <_ZL18NoFilesystemDriver>:
    fb60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fb64 <_ZL14Invalid_Handle>:
    fb64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fb68 <_ZN3halL18Default_Clock_RateE>:
    fb68:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fb6c <_ZN3halL15Peripheral_BaseE>:
    fb6c:	20000000 	andcs	r0, r0, r0

0000fb70 <_ZN3halL9GPIO_BaseE>:
    fb70:	20200000 	eorcs	r0, r0, r0

0000fb74 <_ZN3halL14GPIO_Pin_CountE>:
    fb74:	00000036 	andeq	r0, r0, r6, lsr r0

0000fb78 <_ZN3halL8AUX_BaseE>:
    fb78:	20215000 	eorcs	r5, r1, r0

0000fb7c <_ZN3halL25Interrupt_Controller_BaseE>:
    fb7c:	2000b200 	andcs	fp, r0, r0, lsl #4

0000fb80 <_ZN3halL10Timer_BaseE>:
    fb80:	2000b400 	andcs	fp, r0, r0, lsl #8

0000fb84 <_ZN3halL9TRNG_BaseE>:
    fb84:	20104000 	andscs	r4, r0, r0

0000fb88 <_ZN3halL9BSC0_BaseE>:
    fb88:	20205000 	eorcs	r5, r0, r0

0000fb8c <_ZN3halL9BSC1_BaseE>:
    fb8c:	20804000 	addcs	r4, r0, r0

0000fb90 <_ZN3halL9BSC2_BaseE>:
    fb90:	20805000 	addcs	r5, r0, r0

0000fb94 <_ZN3memL9LowMemoryE>:
    fb94:	00020000 	andeq	r0, r2, r0

0000fb98 <_ZN3memL10HighMemoryE>:
    fb98:	20000000 	andcs	r0, r0, r0

0000fb9c <_ZN3memL8PageSizeE>:
    fb9c:	00004000 	andeq	r4, r0, r0

0000fba0 <_ZN3memL16PagingMemorySizeE>:
    fba0:	1ffe0000 	svcne	0x00fe0000

0000fba4 <_ZN3memL9PageCountE>:
    fba4:	00007ff8 	strdeq	r7, [r0], -r8

0000fba8 <_ZN3halL18Default_Clock_RateE>:
    fba8:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fbac <_ZN3halL15Peripheral_BaseE>:
    fbac:	20000000 	andcs	r0, r0, r0

0000fbb0 <_ZN3halL9GPIO_BaseE>:
    fbb0:	20200000 	eorcs	r0, r0, r0

0000fbb4 <_ZN3halL14GPIO_Pin_CountE>:
    fbb4:	00000036 	andeq	r0, r0, r6, lsr r0

0000fbb8 <_ZN3halL8AUX_BaseE>:
    fbb8:	20215000 	eorcs	r5, r1, r0

0000fbbc <_ZN3halL25Interrupt_Controller_BaseE>:
    fbbc:	2000b200 	andcs	fp, r0, r0, lsl #4

0000fbc0 <_ZN3halL10Timer_BaseE>:
    fbc0:	2000b400 	andcs	fp, r0, r0, lsl #8

0000fbc4 <_ZN3halL9TRNG_BaseE>:
    fbc4:	20104000 	andscs	r4, r0, r0

0000fbc8 <_ZN3halL9BSC0_BaseE>:
    fbc8:	20205000 	eorcs	r5, r0, r0

0000fbcc <_ZN3halL9BSC1_BaseE>:
    fbcc:	20804000 	addcs	r4, r0, r0

0000fbd0 <_ZN3halL9BSC2_BaseE>:
    fbd0:	20805000 	addcs	r5, r0, r0

0000fbd4 <_ZN3memL9LowMemoryE>:
    fbd4:	00020000 	andeq	r0, r2, r0

0000fbd8 <_ZN3memL10HighMemoryE>:
    fbd8:	20000000 	andcs	r0, r0, r0

0000fbdc <_ZN3memL8PageSizeE>:
    fbdc:	00004000 	andeq	r4, r0, r0

0000fbe0 <_ZN3memL16PagingMemorySizeE>:
    fbe0:	1ffe0000 	svcne	0x00fe0000

0000fbe4 <_ZN3memL9PageCountE>:
    fbe4:	00007ff8 	strdeq	r7, [r0], -r8

0000fbe8 <_ZL24Max_Process_Opened_Files>:
    fbe8:	00000010 	andeq	r0, r0, r0, lsl r0

0000fbec <_ZL21MaxFSDriverNameLength>:
    fbec:	00000010 	andeq	r0, r0, r0, lsl r0

0000fbf0 <_ZL17MaxFilenameLength>:
    fbf0:	00000010 	andeq	r0, r0, r0, lsl r0

0000fbf4 <_ZL13MaxPathLength>:
    fbf4:	00000080 	andeq	r0, r0, r0, lsl #1

0000fbf8 <_ZL18NoFilesystemDriver>:
    fbf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fbfc <_ZL14Invalid_Handle>:
    fbfc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fc00 <_ZN3halL18Default_Clock_RateE>:
    fc00:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}

0000fc04 <_ZN3halL15Peripheral_BaseE>:
    fc04:	20000000 	andcs	r0, r0, r0

0000fc08 <_ZN3halL9GPIO_BaseE>:
    fc08:	20200000 	eorcs	r0, r0, r0

0000fc0c <_ZN3halL14GPIO_Pin_CountE>:
    fc0c:	00000036 	andeq	r0, r0, r6, lsr r0

0000fc10 <_ZN3halL8AUX_BaseE>:
    fc10:	20215000 	eorcs	r5, r1, r0

0000fc14 <_ZN3halL25Interrupt_Controller_BaseE>:
    fc14:	2000b200 	andcs	fp, r0, r0, lsl #4

0000fc18 <_ZN3halL10Timer_BaseE>:
    fc18:	2000b400 	andcs	fp, r0, r0, lsl #8

0000fc1c <_ZN3halL9TRNG_BaseE>:
    fc1c:	20104000 	andscs	r4, r0, r0

0000fc20 <_ZN3halL9BSC0_BaseE>:
    fc20:	20205000 	eorcs	r5, r0, r0

0000fc24 <_ZN3halL9BSC1_BaseE>:
    fc24:	20804000 	addcs	r4, r0, r0

0000fc28 <_ZN3halL9BSC2_BaseE>:
    fc28:	20805000 	addcs	r5, r0, r0

0000fc2c <_ZN3memL9LowMemoryE>:
    fc2c:	00020000 	andeq	r0, r2, r0

0000fc30 <_ZN3memL10HighMemoryE>:
    fc30:	20000000 	andcs	r0, r0, r0

0000fc34 <_ZN3memL8PageSizeE>:
    fc34:	00004000 	andeq	r4, r0, r0

0000fc38 <_ZN3memL16PagingMemorySizeE>:
    fc38:	1ffe0000 	svcne	0x00fe0000

0000fc3c <_ZN3memL9PageCountE>:
    fc3c:	00007ff8 	strdeq	r7, [r0], -r8
    fc40:	61657243 	cmnvs	r5, r3, asr #4
    fc44:	20646574 	rsbcs	r6, r4, r4, ror r5
    fc48:	636f7270 	cmnvs	pc, #112, 4
    fc4c:	20737365 	rsbscs	r7, r3, r5, ror #6
    fc50:	68746977 	ldmdavs	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
    fc54:	64697020 	strbtvs	r7, [r9], #-32	; 0xffffffe0
    fc58:	00000020 	andeq	r0, r0, r0, lsr #32
    fc5c:	00002820 	andeq	r2, r0, r0, lsr #16
    fc60:	3d205053 	stccc	0, cr5, [r0, #-332]!	; 0xfffffeb4
    fc64:	00783020 	rsbseq	r3, r8, r0, lsr #32
    fc68:	00000a29 	andeq	r0, r0, r9, lsr #20

0000fc6c <_ZL21MaxFSDriverNameLength>:
    fc6c:	00000010 	andeq	r0, r0, r0, lsl r0

0000fc70 <_ZL17MaxFilenameLength>:
    fc70:	00000010 	andeq	r0, r0, r0, lsl r0

0000fc74 <_ZL13MaxPathLength>:
    fc74:	00000080 	andeq	r0, r0, r0, lsl #1

0000fc78 <_ZL18NoFilesystemDriver>:
    fc78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    fc7c:	3a564544 	bcc	15a1194 <_bss_end+0x1590114>
    fc80:	6f697067 	svcvs	0x00697067
    fc84:	0038312f 	eorseq	r3, r8, pc, lsr #2
    fc88:	636f7270 	cmnvs	pc, #112, 4
    fc8c:	20737365 	rsbscs	r7, r3, r5, ror #6
    fc90:	69662031 	stmdbvs	r6!, {r0, r4, r5, sp}^
    fc94:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
    fc98:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    fc9c:	6f747069 	svcvs	0x00747069
    fca0:	203d2072 	eorscs	r2, sp, r2, ror r0
    fca4:	00000000 	andeq	r0, r0, r0
    fca8:	0000000a 	andeq	r0, r0, sl
    fcac:	00000031 	andeq	r0, r0, r1, lsr r0
    fcb0:	00000030 	andeq	r0, r0, r0, lsr r0
    fcb4:	6c6c6548 	cfstr64vs	mvdx6, [ip], #-288	; 0xfffffee0
    fcb8:	000a216f 	andeq	r2, sl, pc, ror #2
    fcbc:	3a564544 	bcc	15a11d4 <_bss_end+0x1590154>
    fcc0:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    fcc4:	2f726f74 	svccs	0x00726f74
    fcc8:	00000030 	andeq	r0, r0, r0, lsr r0
    fccc:	3a564544 	bcc	15a11e4 <_bss_end+0x1590164>
    fcd0:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    fcd4:	00000000 	andeq	r0, r0, r0
    fcd8:	636f7270 	cmnvs	pc, #112, 4
    fcdc:	20737365 	rsbscs	r7, r3, r5, ror #6
    fce0:	69662032 	stmdbvs	r6!, {r1, r4, r5, sp}^
    fce4:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
    fce8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    fcec:	6f747069 	svcvs	0x00747069
    fcf0:	66282072 			; <UNDEFINED> instruction: 0x66282072
    fcf4:	203d2029 	eorscs	r2, sp, r9, lsr #32
    fcf8:	00000000 	andeq	r0, r0, r0
    fcfc:	636f7270 	cmnvs	pc, #112, 4
    fd00:	20737365 	rsbscs	r7, r3, r5, ror #6
    fd04:	69662032 	stmdbvs	r6!, {r1, r4, r5, sp}^
    fd08:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
    fd0c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    fd10:	6f747069 	svcvs	0x00747069
    fd14:	72282072 	eorvc	r2, r8, #114	; 0x72
    fd18:	2966646e 	stmdbcs	r6!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    fd1c:	0000203d 	andeq	r2, r0, sp, lsr r0
    fd20:	3a564544 	bcc	15a1238 <_bss_end+0x15901b8>
    fd24:	6f697067 	svcvs	0x00697067
    fd28:	0039312f 	eorseq	r3, r9, pc, lsr #2
    fd2c:	636f7270 	cmnvs	pc, #112, 4
    fd30:	20737365 	rsbscs	r7, r3, r5, ror #6
    fd34:	69662033 	stmdbvs	r6!, {r0, r1, r4, r5, sp}^
    fd38:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
    fd3c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    fd40:	6f747069 	svcvs	0x00747069
    fd44:	203d2072 	eorscs	r2, sp, r2, ror r0
    fd48:	00000000 	andeq	r0, r0, r0
    fd4c:	3a564544 	bcc	15a1264 <_bss_end+0x15901e4>
    fd50:	6f697067 	svcvs	0x00697067
    fd54:	0030322f 	eorseq	r3, r0, pc, lsr #4
    fd58:	636f7270 	cmnvs	pc, #112, 4
    fd5c:	20737365 	rsbscs	r7, r3, r5, ror #6
    fd60:	69662034 	stmdbvs	r6!, {r2, r4, r5, sp}^
    fd64:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
    fd68:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    fd6c:	6f747069 	svcvs	0x00747069
    fd70:	203d2072 	eorscs	r2, sp, r2, ror r0
    fd74:	00000000 	andeq	r0, r0, r0
    fd78:	3a564544 	bcc	15a1290 <_bss_end+0x1590210>
    fd7c:	64676573 	strbtvs	r6, [r7], #-1395	; 0xfffffa8d
    fd80:	00000000 	andeq	r0, r0, r0
    fd84:	00000034 	andeq	r0, r0, r4, lsr r0
    fd88:	636f7270 	cmnvs	pc, #112, 4
    fd8c:	20737365 	rsbscs	r7, r3, r5, ror #6
    fd90:	69662035 	stmdbvs	r6!, {r0, r2, r4, r5, sp}^
    fd94:	6420656c 	strtvs	r6, [r0], #-1388	; 0xfffffa94
    fd98:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    fd9c:	6f747069 	svcvs	0x00747069
    fda0:	203d2072 	eorscs	r2, sp, r2, ror r0
    fda4:	00000000 	andeq	r0, r0, r0

0000fda8 <_ZL21MaxFSDriverNameLength>:
    fda8:	00000010 	andeq	r0, r0, r0, lsl r0

0000fdac <_ZL17MaxFilenameLength>:
    fdac:	00000010 	andeq	r0, r0, r0, lsl r0

0000fdb0 <_ZL13MaxPathLength>:
    fdb0:	00000080 	andeq	r0, r0, r0, lsl #1

0000fdb4 <_ZL18NoFilesystemDriver>:
    fdb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0000fdb8 <_ZN12_GLOBAL__N_1L11CharConvArrE>:
    fdb8:	33323130 	teqcc	r2, #48, 2
    fdbc:	37363534 			; <UNDEFINED> instruction: 0x37363534
    fdc0:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
    fdc4:	46454443 	strbmi	r4, [r5], -r3, asr #8
	...

Disassembly of section .rodata._ZTV15CTRNG_FS_Driver:

0000fdcc <_ZTV15CTRNG_FS_Driver>:
	...
    fdd4:	0000d1dc 	ldrdeq	sp, [r0], -ip
    fdd8:	0000d1fc 	strdeq	sp, [r0], -ip

Disassembly of section .rodata._ZTV10CTRNG_File:

0000fddc <_ZTV10CTRNG_File>:
	...
    fde4:	0000cfcc 	andeq	ip, r0, ip, asr #31
    fde8:	0000d010 	andeq	sp, r0, r0, lsl r0
    fdec:	0000d044 	andeq	sp, r0, r4, asr #32
    fdf0:	0000d12c 	andeq	sp, r0, ip, lsr #2
    fdf4:	0000d158 	andeq	sp, r0, r8, asr r1
    fdf8:	0000d1b0 			; <UNDEFINED> instruction: 0x0000d1b0

Disassembly of section .rodata._ZTV25CShift_Register_FS_Driver:

0000fdfc <_ZTV25CShift_Register_FS_Driver>:
	...
    fe04:	0000cf04 	andeq	ip, r0, r4, lsl #30
    fe08:	0000cf24 	andeq	ip, r0, r4, lsr #30

Disassembly of section .rodata._ZTV20CShift_Register_File:

0000fe0c <_ZTV20CShift_Register_File>:
	...
    fe14:	0000cd6c 	andeq	ip, r0, ip, ror #26
    fe18:	0000cdb0 			; <UNDEFINED> instruction: 0x0000cdb0
    fe1c:	0000cde4 	andeq	ip, r0, r4, ror #27
    fe20:	0000ce10 	andeq	ip, r0, r0, lsl lr
    fe24:	0000ce80 	andeq	ip, r0, r0, lsl #29
    fe28:	0000ced8 	ldrdeq	ip, [r0], -r8

Disassembly of section .rodata._ZTV26CSegment_Display_FS_Driver:

0000fe2c <_ZTV26CSegment_Display_FS_Driver>:
	...
    fe34:	0000cc98 	muleq	r0, r8, ip
    fe38:	0000ccb8 			; <UNDEFINED> instruction: 0x0000ccb8

Disassembly of section .rodata._ZTV21CSegment_Display_File:

0000fe3c <_ZTV21CSegment_Display_File>:
	...
    fe44:	0000cad4 	ldrdeq	ip, [r0], -r4
    fe48:	0000cb18 	andeq	ip, r0, r8, lsl fp
    fe4c:	0000cb4c 	andeq	ip, r0, ip, asr #22
    fe50:	0000cba4 	andeq	ip, r0, r4, lsr #23
    fe54:	0000cc14 	andeq	ip, r0, r4, lsl ip
    fe58:	0000cc6c 	andeq	ip, r0, ip, ror #24

Disassembly of section .rodata._ZTV18CMonitor_FS_Driver:

0000fe5c <_ZTV18CMonitor_FS_Driver>:
	...
    fe64:	0000ca04 	andeq	ip, r0, r4, lsl #20
    fe68:	0000ca24 	andeq	ip, r0, r4, lsr #20

Disassembly of section .rodata._ZTV13CMonitor_File:

0000fe6c <_ZTV13CMonitor_File>:
	...
    fe74:	0000c86c 	andeq	ip, r0, ip, ror #16
    fe78:	0000c8b0 			; <UNDEFINED> instruction: 0x0000c8b0
    fe7c:	0000c8e4 	andeq	ip, r0, r4, ror #17
    fe80:	0000c910 	andeq	ip, r0, r0, lsl r9
    fe84:	0000c978 	andeq	ip, r0, r8, ror r9
    fe88:	0000c9c0 	andeq	ip, r0, r0, asr #19

Disassembly of section .rodata._ZTV15CGPIO_FS_Driver:

0000fe8c <_ZTV15CGPIO_FS_Driver>:
	...
    fe94:	0000c6a8 	andeq	ip, r0, r8, lsr #13
    fe98:	0000c6c8 	andeq	ip, r0, r8, asr #13

Disassembly of section .rodata._ZTV10CGPIO_File:

0000fe9c <_ZTV10CGPIO_File>:
	...
    fea4:	0000c46c 	andeq	ip, r0, ip, ror #8
    fea8:	0000c4b0 			; <UNDEFINED> instruction: 0x0000c4b0
    feac:	0000c4e4 	andeq	ip, r0, r4, ror #9
    feb0:	0000c564 	andeq	ip, r0, r4, ror #10
    feb4:	0000c5e0 	andeq	ip, r0, r0, ror #11
    feb8:	0000c67c 	andeq	ip, r0, ip, ror r6

Disassembly of section .rodata._ZTV5IFile:

0000febc <_ZTV5IFile>:
	...
    fec4:	0000c388 	andeq	ip, r0, r8, lsl #7
    fec8:	0000c3bc 			; <UNDEFINED> instruction: 0x0000c3bc
    fecc:	0000c27c 	andeq	ip, r0, ip, ror r2
    fed0:	0000c2a8 	andeq	ip, r0, r8, lsr #5
    fed4:	0000c2d4 	ldrdeq	ip, [r0], -r4
    fed8:	0000c2f8 	strdeq	ip, [r0], -r8

Disassembly of section .ARM.exidx.text._Znaj:

0000fedc <.ARM.exidx.text._Znaj>:
    fedc:	7ffff640 	svcvc	0x00fff640
    fee0:	00000001 	andeq	r0, r0, r1

Disassembly of section .data:

0000fee4 <__CTOR_LIST__>:
/build/gcc-arm-none-eabi-hYfgK4/gcc-arm-none-eabi-10.3-2021.07/build/arm-none-eabi/arm/v5te/hard/libgcc/../../../../../../libgcc/libgcc2.c:2355
    fee4:	000089f4 	strdeq	r8, [r0], -r4
    fee8:	000090bc 	strheq	r9, [r0], -ip
    feec:	00009780 	andeq	r9, r0, r0, lsl #15
    fef0:	0000aae8 	andeq	sl, r0, r8, ror #21
    fef4:	0000aec8 	andeq	sl, r0, r8, asr #29
    fef8:	0000b48c 	andeq	fp, r0, ip, lsl #9
    fefc:	0000b71c 	andeq	fp, r0, ip, lsl r7
    ff00:	0000b99c 	muleq	r0, ip, r9
    ff04:	0000c1f8 	strdeq	ip, [r0], -r8
    ff08:	0000d548 	andeq	sp, r0, r8, asr #10
    ff0c:	0000d90c 	andeq	sp, r0, ip, lsl #18
    ff10:	0000dbb0 			; <UNDEFINED> instruction: 0x0000dbb0
    ff14:	0000e784 	andeq	lr, r0, r4, lsl #15

0000ff18 <__DTOR_LIST__>:
__DTOR_END__():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/gpio_fs.h:120
};

CGPIO_FS_Driver fsGPIO_FS_Driver;
    ff18:	0000fe94 	muleq	r0, r4, lr

0000ff1c <fsMonitor_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/monitor_fs.h:88
};

CMonitor_FS_Driver fsMonitor_FS_Driver;
    ff1c:	0000fe64 	andeq	pc, r0, r4, ror #28

0000ff20 <fsSegment_Display_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/segmentdisplay_fs.h:86
};

CSegment_Display_FS_Driver fsSegment_Display_FS_Driver;
    ff20:	0000fe34 	andeq	pc, r0, r4, lsr lr	; <UNPREDICTABLE>

0000ff24 <fsShift_Register_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/shiftregister_fs.h:82
};

CShift_Register_FS_Driver fsShift_Register_FS_Driver;
    ff24:	0000fe04 	andeq	pc, r0, r4, lsl #28

0000ff28 <fsTRNG_FS_Driver>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/fs/drivers/trng_fs.h:89
};

CTRNG_FS_Driver fsTRNG_FS_Driver;
    ff28:	0000fdd4 	ldrdeq	pc, [r0], -r4

Disassembly of section .bss:

0000ff2c <sGPIO>:
	...

0000ff40 <sI2C1>:
	...

0000ff64 <sMonitor>:
	...

0000ff7c <_ZZN8CMonitorlsEjE8s_buffer>:
	...

0000ff8c <sDisplay_SSD1306>:
	...

0000ffa0 <sSegment_Display>:
_ZZN8CMonitorlsEjE8s_buffer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    ffa0:	00000000 	andeq	r0, r0, r0

0000ffa4 <sShift_Register>:
	...

0000ffb4 <sTimer>:
	...

0000ffbc <sTRNG>:
	...

0000ffc4 <sFilesystem>:
	...

00010054 <sInterruptCtl>:
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/interrupt_controller.cpp:9
CInterrupt_Controller sInterruptCtl(hal::Interrupt_Controller_Base);
   10054:	00000000 	andeq	r0, r0, r0

00010058 <_ZL11_SWI_Result>:
	...

00010060 <sKernelMem>:
_ZL11_SWI_Result():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/memory/kernel_heap.cpp:4
CKernel_Heap_Manager sKernelMem;
   10060:	00000000 	andeq	r0, r0, r0

00010064 <sPage_Manager>:
	...

00011064 <sProcessMgr>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000126 	andeq	r0, r0, r6, lsr #2
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000061 	andeq	r0, r0, r1, rrx
      10:	00010f04 	andeq	r0, r1, r4, lsl #30
      14:	00002600 	andeq	r2, r0, r0, lsl #12
      18:	0080ac00 	addeq	sl, r0, r0, lsl #24
      1c:	0000d800 	andeq	sp, r0, r0, lsl #16
      20:	00000000 	andeq	r0, r0, r0
      24:	01a30200 			; <UNDEFINED> instruction: 0x01a30200
      28:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
      2c:	00817811 	addeq	r7, r1, r1, lsl r8
      30:	00000c00 	andeq	r0, r0, r0, lsl #24
      34:	029c0100 	addseq	r0, ip, #0, 2
      38:	00000190 	muleq	r0, r0, r1
      3c:	60112301 	andsvs	r2, r1, r1, lsl #6
      40:	18000081 	stmdane	r0, {r0, r7}
      44:	01000000 	mrseq	r0, (UNDEF: 0)
      48:	0164029c 			; <UNDEFINED> instruction: 0x0164029c
      4c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
      50:	00814811 	addeq	r4, r1, r1, lsl r8
      54:	00001800 	andeq	r1, r0, r0, lsl #16
      58:	029c0100 	addseq	r0, ip, #0, 2
      5c:	00000157 	andeq	r0, r0, r7, asr r1
      60:	30111901 	andscc	r1, r1, r1, lsl #18
      64:	18000081 	stmdane	r0, {r0, r7}
      68:	01000000 	mrseq	r0, (UNDEF: 0)
      6c:	0185039c 			; <UNDEFINED> instruction: 0x0185039c
      70:	00020000 	andeq	r0, r2, r0
      74:	000000bb 	strheq	r0, [r0], -fp
      78:	00001404 	andeq	r1, r0, r4, lsl #8
      7c:	15140100 	ldrne	r0, [r4, #-256]	; 0xffffff00
      80:	0000008a 	andeq	r0, r0, sl, lsl #1
      84:	0000bb05 	andeq	fp, r0, r5, lsl #22
      88:	ba060000 	blt	180090 <_bss_end+0x16f010>
      8c:	01000001 	tsteq	r0, r1
      90:	00c11f04 	sbceq	r1, r1, r4, lsl #30
      94:	00040000 	andeq	r0, r4, r0
      98:	01000000 	mrseq	r0, (UNDEF: 0)
      9c:	00a8150f 	adceq	r1, r8, pc, lsl #10
      a0:	bb050000 	bllt	1400a8 <_bss_end+0x12f028>
      a4:	00000000 	andeq	r0, r0, r0
      a8:	00017107 	andeq	r7, r1, r7, lsl #2
      ac:	140a0100 	strne	r0, [sl], #-256	; 0xffffff00
      b0:	00000105 	andeq	r0, r0, r5, lsl #2
      b4:	0000bb05 	andeq	fp, r0, r5, lsl #22
      b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      bc:	00008a04 	andeq	r8, r0, r4, lsl #20
      c0:	05080900 	streq	r0, [r8, #-2304]	; 0xfffff700
      c4:	000001c2 	andeq	r0, r0, r2, asr #3
      c8:	0000780a 	andeq	r7, r0, sl, lsl #16
      cc:	00811000 	addeq	r1, r1, r0
      d0:	00002000 	andeq	r2, r0, r0
      d4:	e49c0100 	ldr	r0, [ip], #256	; 0x100
      d8:	0b000000 	bleq	e0 <CPSR_IRQ_INHIBIT+0x60>
      dc:	000000bb 	strheq	r0, [r0], -fp
      e0:	00749102 	rsbseq	r9, r4, r2, lsl #2
      e4:	0000960a 	andeq	r9, r0, sl, lsl #12
      e8:	0080e400 	addeq	lr, r0, r0, lsl #8
      ec:	00002c00 	andeq	r2, r0, r0, lsl #24
      f0:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
      f4:	0c000001 	stceq	0, cr0, [r0], {1}
      f8:	0f010067 	svceq	0x00010067
      fc:	0000bb32 	andeq	fp, r0, r2, lsr fp
     100:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     104:	05040d00 	streq	r0, [r4, #-3328]	; 0xfffff300
     108:	00746e69 	rsbseq	r6, r4, r9, ror #28
     10c:	0000a80e 	andeq	sl, r0, lr, lsl #16
     110:	0080ac00 	addeq	sl, r0, r0, lsl #24
     114:	00003800 	andeq	r3, r0, r0, lsl #16
     118:	0c9c0100 	ldfeqs	f0, [ip], {0}
     11c:	0a010067 	beq	402c0 <_bss_end+0x2f240>
     120:	0000bb31 	andeq	fp, r0, r1, lsr fp
     124:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     128:	09150000 	ldmdbeq	r5, {}	; <UNPREDICTABLE>
     12c:	00040000 	andeq	r0, r4, r0
     130:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     134:	00610104 	rsbeq	r0, r1, r4, lsl #2
     138:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
     13c:	26000006 	strcs	r0, [r0], -r6
     140:	84000000 	strhi	r0, [r0], #-0
     144:	8c000081 	stchi	0, cr0, [r0], {129}	; 0x81
     148:	a9000008 	stmdbge	r0, {r3}
     14c:	02000000 	andeq	r0, r0, #0
     150:	05700801 	ldrbeq	r0, [r0, #-2049]!	; 0xfffff7ff
     154:	02020000 	andeq	r0, r2, #0
     158:	00059605 	andeq	r9, r5, r5, lsl #12
     15c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
     160:	00746e69 	rsbseq	r6, r4, r9, ror #28
     164:	67080102 	strvs	r0, [r8, -r2, lsl #2]
     168:	02000005 	andeq	r0, r0, #5
     16c:	03d90702 	bicseq	r0, r9, #524288	; 0x80000
     170:	e1040000 	mrs	r0, (UNDEF: 4)
     174:	04000005 	streq	r0, [r0], #-5
     178:	00590709 	subseq	r0, r9, r9, lsl #14
     17c:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
     180:	02000000 	andeq	r0, r0, #0
     184:	40ee0704 	rscmi	r0, lr, r4, lsl #14
     188:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
     18c:	06000000 	streq	r0, [r0], -r0
     190:	00000059 	andeq	r0, r0, r9, asr r0
     194:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
     198:	0b050200 	bleq	1409a0 <_bss_end+0x12f920>
     19c:	000001e5 	andeq	r0, r0, r5, ror #3
     1a0:	00048408 	andeq	r8, r4, r8, lsl #8
     1a4:	19070200 	stmdbne	r7, {r9}
     1a8:	00000060 	andeq	r0, r0, r0, rrx
     1ac:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
     1b0:	0005c908 	andeq	ip, r5, r8, lsl #18
     1b4:	1a0a0200 	bne	2809bc <_bss_end+0x26f93c>
     1b8:	000001f1 	strdeq	r0, [r0], -r1
     1bc:	20000000 	andcs	r0, r0, r0
     1c0:	00044f08 	andeq	r4, r4, r8, lsl #30
     1c4:	1a0d0200 	bne	3409cc <_bss_end+0x32f94c>
     1c8:	000001f1 	strdeq	r0, [r0], -r1
     1cc:	20200000 	eorcs	r0, r0, r0
     1d0:	00058709 	andeq	r8, r5, r9, lsl #14
     1d4:	15100200 	ldrne	r0, [r0, #-512]	; 0xfffffe00
     1d8:	00000054 	andeq	r0, r0, r4, asr r0
     1dc:	03f60a36 	mvnseq	r0, #221184	; 0x36000
     1e0:	04050000 	streq	r0, [r5], #-0
     1e4:	00000033 	andeq	r0, r0, r3, lsr r0
     1e8:	740d1302 	strvc	r1, [sp], #-770	; 0xfffffcfe
     1ec:	0b000001 	bleq	1f8 <CPSR_IRQ_INHIBIT+0x178>
     1f0:	00000379 	andeq	r0, r0, r9, ror r3
     1f4:	03810b00 	orreq	r0, r1, #0, 22
     1f8:	0b010000 	bleq	40200 <_bss_end+0x2f180>
     1fc:	00000389 	andeq	r0, r0, r9, lsl #7
     200:	03910b02 	orrseq	r0, r1, #2048	; 0x800
     204:	0b030000 	bleq	c020c <_bss_end+0xaf18c>
     208:	00000399 	muleq	r0, r9, r3
     20c:	03a10b04 			; <UNDEFINED> instruction: 0x03a10b04
     210:	0b050000 	bleq	140218 <_bss_end+0x12f198>
     214:	000002ed 	andeq	r0, r0, sp, ror #5
     218:	02f40b07 	rscseq	r0, r4, #7168	; 0x1c00
     21c:	0b080000 	bleq	200224 <_bss_end+0x1ef1a4>
     220:	00000405 	andeq	r0, r0, r5, lsl #8
     224:	040c0b0a 	streq	r0, [ip], #-2826	; 0xfffff4f6
     228:	0b0b0000 	bleq	2c0230 <_bss_end+0x2af1b0>
     22c:	0000031b 	andeq	r0, r0, fp, lsl r3
     230:	03220b0d 			; <UNDEFINED> instruction: 0x03220b0d
     234:	0b0e0000 	bleq	38023c <_bss_end+0x36f1bc>
     238:	0000063d 	andeq	r0, r0, sp, lsr r6
     23c:	06440b10 			; <UNDEFINED> instruction: 0x06440b10
     240:	0b110000 	bleq	440248 <_bss_end+0x42f1c8>
     244:	00000476 	andeq	r0, r0, r6, ror r4
     248:	047d0b13 	ldrbteq	r0, [sp], #-2835	; 0xfffff4ed
     24c:	0b140000 	bleq	500254 <_bss_end+0x4ef1d4>
     250:	0000064b 	andeq	r0, r0, fp, asr #12
     254:	06520b16 			; <UNDEFINED> instruction: 0x06520b16
     258:	0b170000 	bleq	5c0260 <_bss_end+0x5af1e0>
     25c:	00000559 	andeq	r0, r0, r9, asr r5
     260:	05600b19 	strbeq	r0, [r0, #-2841]!	; 0xfffff4e7
     264:	0b1a0000 	bleq	68026c <_bss_end+0x66f1ec>
     268:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     26c:	02e60b1c 	rsceq	r0, r6, #28, 22	; 0x7000
     270:	0b1d0000 	bleq	740278 <_bss_end+0x72f1f8>
     274:	00000506 	andeq	r0, r0, r6, lsl #10
     278:	050e0b1f 	streq	r0, [lr, #-2847]	; 0xfffff4e1
     27c:	0b200000 	bleq	800284 <_bss_end+0x7ef204>
     280:	000006d9 	ldrdeq	r0, [r0], -r9
     284:	06e10b22 	strbteq	r0, [r1], r2, lsr #22
     288:	0b230000 	bleq	8c0290 <_bss_end+0x8af210>
     28c:	000002ad 	andeq	r0, r0, sp, lsr #5
     290:	02990b25 	addseq	r0, r9, #37888	; 0x9400
     294:	0b260000 	bleq	98029c <_bss_end+0x96f21c>
     298:	000002a3 	andeq	r0, r0, r3, lsr #5
     29c:	70080027 	andvc	r0, r8, r7, lsr #32
     2a0:	02000003 	andeq	r0, r0, #3
     2a4:	01f11a42 	mvnseq	r1, r2, asr #20
     2a8:	50000000 	andpl	r0, r0, r0
     2ac:	47082021 	strmi	r2, [r8, -r1, lsr #32]
     2b0:	02000003 	andeq	r0, r0, #3
     2b4:	01f11a71 	mvnseq	r1, r1, ror sl
     2b8:	b2000000 	andlt	r0, r0, #0
     2bc:	b3082000 	movwlt	r2, #32768	; 0x8000
     2c0:	02000002 	andeq	r0, r0, #2
     2c4:	01f11aa4 	mvnseq	r1, r4, lsr #21
     2c8:	b4000000 	strlt	r0, [r0], #-0
     2cc:	61082000 	mrsvs	r2, (UNDEF: 8)
     2d0:	02000003 	andeq	r0, r0, #3
     2d4:	01f11ab3 	ldrheq	r1, [r1, #163]!	; 0xa3
     2d8:	40000000 	andmi	r0, r0, r0
     2dc:	2e082010 	mcrcs	0, 0, r2, cr8, cr0, {0}
     2e0:	02000003 	andeq	r0, r0, #3
     2e4:	01f11abe 	ldrheq	r1, [r1, #174]!	; 0xae
     2e8:	50000000 	andpl	r0, r0, r0
     2ec:	ec082020 	stc	0, cr2, [r8], {32}
     2f0:	02000003 	andeq	r0, r0, #3
     2f4:	01f11abf 	ldrheq	r1, [r1, #175]!	; 0xaf
     2f8:	40000000 	andmi	r0, r0, r0
     2fc:	59082080 	stmdbpl	r8, {r7, sp}
     300:	02000004 	andeq	r0, r0, #4
     304:	01f11ac0 	mvnseq	r1, r0, asr #21
     308:	50000000 	andpl	r0, r0, r0
     30c:	0c002080 	stceq	0, cr2, [r0], {128}	; 0x80
     310:	00000076 	andeq	r0, r0, r6, ror r0
     314:	e9070402 	stmdb	r7, {r1, sl}
     318:	05000040 	streq	r0, [r0, #-64]	; 0xffffffc0
     31c:	000001ea 	andeq	r0, r0, sl, ror #3
     320:	0000860c 	andeq	r8, r0, ip, lsl #12
     324:	00960c00 	addseq	r0, r6, r0, lsl #24
     328:	a60c0000 	strge	r0, [ip], -r0
     32c:	0c000000 	stceq	0, cr0, [r0], {-0}
     330:	00000174 	andeq	r0, r0, r4, ror r1
     334:	0001840c 	andeq	r8, r1, ip, lsl #8
     338:	01940c00 	orrseq	r0, r4, r0, lsl #24
     33c:	a40c0000 	strge	r0, [ip], #-0
     340:	0c000001 	stceq	0, cr0, [r0], {1}
     344:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
     348:	0001c40c 	andeq	ip, r1, ip, lsl #8
     34c:	01d40c00 	bicseq	r0, r4, r0, lsl #24
     350:	4a0a0000 	bmi	280358 <_bss_end+0x26f2d8>
     354:	07000005 	streq	r0, [r0, -r5]
     358:	00005904 	andeq	r5, r0, r4, lsl #18
     35c:	0c070300 	stceq	3, cr0, [r7], {-0}
     360:	00000271 	andeq	r0, r0, r1, ror r2
     364:	0002d90b 	andeq	sp, r2, fp, lsl #18
     368:	1a0b0000 	bne	2c0370 <_bss_end+0x2af2f0>
     36c:	01000005 	tsteq	r0, r5
     370:	0002120b 	andeq	r1, r2, fp, lsl #4
     374:	0c0b0200 	sfmeq	f0, 4, [fp], {-0}
     378:	03000002 	movweq	r0, #2
     37c:	0001f40b 	andeq	pc, r1, fp, lsl #8
     380:	fa0b0400 	blx	2c1388 <_bss_end+0x2b0308>
     384:	05000001 	streq	r0, [r0, #-1]
     388:	0002000b 	andeq	r0, r2, fp
     38c:	060b0600 	streq	r0, [fp], -r0, lsl #12
     390:	07000002 	streq	r0, [r0, -r2]
     394:	0007250b 	andeq	r2, r7, fp, lsl #10
     398:	0d000800 	stceq	8, cr0, [r0, #-0]
     39c:	00000717 	andeq	r0, r0, r7, lsl r7
     3a0:	071b0314 			; <UNDEFINED> instruction: 0x071b0314
     3a4:	0000046c 	andeq	r0, r0, ip, ror #8
     3a8:	0003ff0e 	andeq	pc, r3, lr, lsl #30
     3ac:	221f0300 	andscs	r0, pc, #0, 6
     3b0:	00000477 	andeq	r0, r0, r7, ror r4
     3b4:	02be0e00 	adcseq	r0, lr, #0, 28
     3b8:	22030000 	andcs	r0, r3, #0
     3bc:	00047c0e 	andeq	r7, r4, lr, lsl #24
     3c0:	ee0e0400 	cfcpys	mvf0, mvf14
     3c4:	03000004 	movweq	r0, #4
     3c8:	047c0e24 	ldrbteq	r0, [ip], #-3620	; 0xfffff1dc
     3cc:	0f0c0000 	svceq	0x000c0000
     3d0:	0000043b 	andeq	r0, r0, fp, lsr r4
     3d4:	a90a2803 	stmdbge	sl, {r0, r1, fp, sp}
     3d8:	8c000003 	stchi	0, cr0, [r0], {3}
     3dc:	02000004 	andeq	r0, r0, #4
     3e0:	000002be 			; <UNDEFINED> instruction: 0x000002be
     3e4:	000002d3 	ldrdeq	r0, [r0], -r3
     3e8:	00049310 	andeq	r9, r4, r0, lsl r3
     3ec:	00481100 	subeq	r1, r8, r0, lsl #2
     3f0:	9e110000 	cdpls	0, 1, cr0, cr1, cr0, {0}
     3f4:	11000004 	tstne	r0, r4
     3f8:	0000049e 	muleq	r0, lr, r4
     3fc:	04db0f00 	ldrbeq	r0, [fp], #3840	; 0xf00
     400:	2a030000 	bcs	c0408 <_bss_end+0xaf388>
     404:	0004ac0a 	andeq	sl, r4, sl, lsl #24
     408:	00048c00 	andeq	r8, r4, r0, lsl #24
     40c:	02ec0200 	rsceq	r0, ip, #0, 4
     410:	03010000 	movweq	r0, #4096	; 0x1000
     414:	93100000 	tstls	r0, #0
     418:	11000004 	tstne	r0, r4
     41c:	00000048 	andeq	r0, r0, r8, asr #32
     420:	00049e11 	andeq	r9, r4, r1, lsl lr
     424:	049e1100 	ldreq	r1, [lr], #256	; 0x100
     428:	0f000000 	svceq	0x00000000
     42c:	0000062a 	andeq	r0, r0, sl, lsr #12
     430:	aa0a2c03 	bge	28b444 <_bss_end+0x27a3c4>
     434:	8c000006 	stchi	0, cr0, [r0], {6}
     438:	02000004 	andeq	r0, r0, #4
     43c:	0000031a 	andeq	r0, r0, sl, lsl r3
     440:	0000032f 	andeq	r0, r0, pc, lsr #6
     444:	00049310 	andeq	r9, r4, r0, lsl r3
     448:	00481100 	subeq	r1, r8, r0, lsl #2
     44c:	9e110000 	cdpls	0, 1, cr0, cr1, cr0, {0}
     450:	11000004 	tstne	r0, r4
     454:	0000049e 	muleq	r0, lr, r4
     458:	04630f00 	strbteq	r0, [r3], #-3840	; 0xfffff100
     45c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     460:	0005fb0a 	andeq	pc, r5, sl, lsl #22
     464:	00048c00 	andeq	r8, r4, r0, lsl #24
     468:	03480200 	movteq	r0, #33280	; 0x8200
     46c:	035d0000 	cmpeq	sp, #0
     470:	93100000 	tstls	r0, #0
     474:	11000004 	tstne	r0, r4
     478:	00000048 	andeq	r0, r0, r8, asr #32
     47c:	00049e11 	andeq	r9, r4, r1, lsl lr
     480:	049e1100 	ldreq	r1, [lr], #256	; 0x100
     484:	0f000000 	svceq	0x00000000
     488:	00000717 	andeq	r0, r0, r7, lsl r7
     48c:	b2053103 	andlt	r3, r5, #-1073741824	; 0xc0000000
     490:	a4000005 	strge	r0, [r0], #-5
     494:	01000004 	tsteq	r0, r4
     498:	00000376 	andeq	r0, r0, r6, ror r3
     49c:	00000381 	andeq	r0, r0, r1, lsl #7
     4a0:	0004a410 	andeq	sl, r4, r0, lsl r4
     4a4:	00591100 	subseq	r1, r9, r0, lsl #2
     4a8:	12000000 	andne	r0, r0, #0
     4ac:	00000287 	andeq	r0, r0, r7, lsl #5
     4b0:	210a3403 	tstcs	sl, r3, lsl #8
     4b4:	01000005 	tsteq	r0, r5
     4b8:	00000396 	muleq	r0, r6, r3
     4bc:	000003a6 	andeq	r0, r0, r6, lsr #7
     4c0:	0004a410 	andeq	sl, r4, r0, lsl r4
     4c4:	00481100 	subeq	r1, r8, r0, lsl #2
     4c8:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
     4cc:	00000002 	andeq	r0, r0, r2
     4d0:	0005750f 	andeq	r7, r5, pc, lsl #10
     4d4:	14360300 	ldrtne	r0, [r6], #-768	; 0xfffffd00
     4d8:	000006e9 	andeq	r0, r0, r9, ror #13
     4dc:	00000228 	andeq	r0, r0, r8, lsr #4
     4e0:	0003bf01 	andeq	fp, r3, r1, lsl #30
     4e4:	0003ca00 	andeq	ip, r3, r0, lsl #20
     4e8:	04931000 	ldreq	r1, [r3], #0
     4ec:	48110000 	ldmdami	r1, {}	; <UNPREDICTABLE>
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00051612 	andeq	r1, r5, r2, lsl r6
     4f8:	0a390300 	beq	e41100 <_bss_end+0xe30080>
     4fc:	00000413 	andeq	r0, r0, r3, lsl r4
     500:	0003df01 	andeq	sp, r3, r1, lsl #30
     504:	0003ef00 	andeq	lr, r3, r0, lsl #30
     508:	04a41000 	strteq	r1, [r4], #0
     50c:	48110000 	ldmdami	r1, {}	; <UNPREDICTABLE>
     510:	11000000 	mrsne	r0, (UNDEF: 0)
     514:	0000048c 	andeq	r0, r0, ip, lsl #9
     518:	02d50f00 	sbcseq	r0, r5, #0, 30
     51c:	3c030000 	stccc	0, cr0, [r3], {-0}
     520:	0002680a 	andeq	r6, r2, sl, lsl #16
     524:	00048c00 	andeq	r8, r4, r0, lsl #24
     528:	04080100 	streq	r0, [r8], #-256	; 0xffffff00
     52c:	04130000 	ldreq	r0, [r3], #-0
     530:	a4100000 	ldrge	r0, [r0], #-0
     534:	11000004 	tstne	r0, r4
     538:	00000048 	andeq	r0, r0, r8, asr #32
     53c:	05ea0f00 	strbeq	r0, [sl, #3840]!	; 0xf00
     540:	3f030000 	svccc	0x00030000
     544:	0001d00a 	andeq	sp, r1, sl
     548:	00048c00 	andeq	r8, r4, r0, lsl #24
     54c:	042c0100 	strteq	r0, [ip], #-256	; 0xffffff00
     550:	04410000 	strbeq	r0, [r1], #-0
     554:	a4100000 	ldrge	r0, [r0], #-0
     558:	11000004 	tstne	r0, r4
     55c:	00000048 	andeq	r0, r0, r8, asr #32
     560:	00048c11 	andeq	r8, r4, r1, lsl ip
     564:	048c1100 	streq	r1, [ip], #256	; 0x100
     568:	13000000 	movwne	r0, #0
     56c:	000005a0 	andeq	r0, r0, r0, lsr #11
     570:	fb0a4103 	blx	290986 <_bss_end+0x27f906>
     574:	8c000002 	stchi	0, cr0, [r0], {2}
     578:	01000004 	tsteq	r0, r4
     57c:	00000456 	andeq	r0, r0, r6, asr r4
     580:	0004a410 	andeq	sl, r4, r0, lsl r4
     584:	00481100 	subeq	r1, r8, r0, lsl #2
     588:	8c110000 	ldchi	0, cr0, [r1], {-0}
     58c:	11000004 	tstne	r0, r4
     590:	0000048c 	andeq	r0, r0, ip, lsl #9
     594:	71050000 	mrsvc	r0, (UNDEF: 5)
     598:	14000002 	strne	r0, [r0], #-2
     59c:	00006504 	andeq	r6, r0, r4, lsl #10
     5a0:	04710500 	ldrbteq	r0, [r1], #-1280	; 0xfffffb00
     5a4:	48150000 	ldmdami	r5, {}	; <UNPREDICTABLE>
     5a8:	8c000000 	stchi	0, cr0, [r0], {-0}
     5ac:	16000004 	strne	r0, [r0], -r4
     5b0:	00000059 	andeq	r0, r0, r9, asr r0
     5b4:	01020001 	tsteq	r2, r1
     5b8:	0040a502 	subeq	sl, r0, r2, lsl #10
     5bc:	6c041400 	cfstrsvs	mvf1, [r4], {-0}
     5c0:	05000004 	streq	r0, [r0, #-4]
     5c4:	00000493 	muleq	r0, r3, r4
     5c8:	00480417 	subeq	r0, r8, r7, lsl r4
     5cc:	04140000 	ldreq	r0, [r4], #-0
     5d0:	00000271 	andeq	r0, r0, r1, ror r2
     5d4:	0004a405 	andeq	sl, r4, r5, lsl #8
     5d8:	04a61800 	strteq	r1, [r6], #2048	; 0x800
     5dc:	45030000 	strmi	r0, [r3, #-0]
     5e0:	00027116 	andeq	r7, r2, r6, lsl r1
     5e4:	04af1900 	strteq	r1, [pc], #2304	; 5ec <CPSR_IRQ_INHIBIT+0x56c>
     5e8:	06010000 	streq	r0, [r1], -r0
     5ec:	2c03050f 	cfstr32cs	mvfx0, [r3], {15}
     5f0:	1a0000ff 	bne	9f4 <CPSR_IRQ_INHIBIT+0x974>
     5f4:	00000497 	muleq	r0, r7, r4
     5f8:	000089f4 	strdeq	r8, [r0], -r4
     5fc:	0000001c 	andeq	r0, r0, ip, lsl r0
     600:	3e1b9c01 	cdpcc	12, 1, cr9, cr11, cr1, {0}
     604:	a0000002 	andge	r0, r0, r2
     608:	54000089 	strpl	r0, [r0], #-137	; 0xffffff77
     60c:	01000000 	mrseq	r0, (UNDEF: 0)
     610:	00050a9c 	muleq	r5, ip, sl
     614:	03381c00 	teqeq	r8, #0, 24
     618:	97010000 	strls	r0, [r1, -r0]
     61c:	00003301 	andeq	r3, r0, r1, lsl #6
     620:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     624:	0007311c 	andeq	r3, r7, ip, lsl r1
     628:	01970100 	orrseq	r0, r7, r0, lsl #2
     62c:	00000033 	andeq	r0, r0, r3, lsr r0
     630:	00709102 	rsbseq	r9, r0, r2, lsl #2
     634:	0004411d 	andeq	r4, r4, sp, lsl r1
     638:	06850100 	streq	r0, [r5], r0, lsl #2
     63c:	00000524 	andeq	r0, r0, r4, lsr #10
     640:	00008800 	andeq	r8, r0, r0, lsl #16
     644:	000001a0 	andeq	r0, r0, r0, lsr #3
     648:	057c9c01 	ldrbeq	r9, [ip, #-3073]!	; 0xfffff3ff
     64c:	291e0000 	ldmdbcs	lr, {}	; <UNPREDICTABLE>
     650:	aa000003 	bge	664 <CPSR_IRQ_INHIBIT+0x5e4>
     654:	02000004 	andeq	r0, r0, #4
     658:	701f5c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     65c:	01006e69 	tsteq	r0, r9, ror #28
     660:	00482785 	subeq	r2, r8, r5, lsl #15
     664:	91020000 	mrsls	r0, (UNDEF: 2)
     668:	07121c58 			; <UNDEFINED> instruction: 0x07121c58
     66c:	85010000 	strhi	r0, [r1, #-0]
     670:	00048c31 	andeq	r8, r4, r1, lsr ip
     674:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
     678:	0004351c 	andeq	r3, r4, ip, lsl r5
     67c:	3c850100 	stfccs	f0, [r5], {0}
     680:	0000048c 	andeq	r0, r0, ip, lsl #9
     684:	20569102 	subscs	r9, r6, r2, lsl #2
     688:	000005a9 	andeq	r0, r0, r9, lsr #11
     68c:	480e8701 	stmdami	lr, {r0, r8, r9, sl, pc}
     690:	02000000 	andeq	r0, r0, #0
     694:	d9206491 	stmdble	r0!, {r0, r4, r7, sl, sp, lr}
     698:	01000005 	tsteq	r0, r5
     69c:	00480e88 	subeq	r0, r8, r8, lsl #29
     6a0:	91020000 	mrsls	r0, (UNDEF: 2)
     6a4:	131d0060 	tstne	sp, #96	; 0x60
     6a8:	01000004 	tsteq	r0, r4
     6ac:	0596066f 	ldreq	r0, [r6, #1647]	; 0x66f
     6b0:	86680000 	strbthi	r0, [r8], -r0
     6b4:	01980000 	orrseq	r0, r8, r0
     6b8:	9c010000 	stcls	0, cr0, [r1], {-0}
     6bc:	000005ee 	andeq	r0, r0, lr, ror #11
     6c0:	0003291e 	andeq	r2, r3, lr, lsl r9
     6c4:	0004aa00 	andeq	sl, r4, r0, lsl #20
     6c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
     6cc:	6e69701f 	mcrvs	0, 3, r7, cr9, cr15, {0}
     6d0:	2a6f0100 	bcs	1bc0ad8 <_bss_end+0x1bafa58>
     6d4:	00000048 	andeq	r0, r0, r8, asr #32
     6d8:	1c589102 	ldfnep	f1, [r8], {2}
     6dc:	00000712 	andeq	r0, r0, r2, lsl r7
     6e0:	8c346f01 	ldchi	15, cr6, [r4], #-4
     6e4:	02000004 	andeq	r0, r0, #4
     6e8:	351c5791 	ldrcc	r5, [ip, #-1937]	; 0xfffff86f
     6ec:	01000004 	tsteq	r0, r4
     6f0:	048c3f6f 	streq	r3, [ip], #3951	; 0xf6f
     6f4:	91020000 	mrsls	r0, (UNDEF: 2)
     6f8:	05a92056 	streq	r2, [r9, #86]!	; 0x56
     6fc:	73010000 	movwvc	r0, #4096	; 0x1000
     700:	0000480e 	andeq	r4, r0, lr, lsl #16
     704:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     708:	0005d920 	andeq	sp, r5, r0, lsr #18
     70c:	0e740100 	rpweqs	f0, f4, f0
     710:	00000048 	andeq	r0, r0, r8, asr #32
     714:	00609102 	rsbeq	r9, r0, r2, lsl #2
     718:	0003ef21 	andeq	lr, r3, r1, lsr #30
     71c:	06660100 	strbteq	r0, [r6], -r0, lsl #2
     720:	00000608 	andeq	r0, r0, r8, lsl #12
     724:	000085e4 	andeq	r8, r0, r4, ror #11
     728:	00000084 	andeq	r0, r0, r4, lsl #1
     72c:	06429c01 	strbeq	r9, [r2], -r1, lsl #24
     730:	291e0000 	ldmdbcs	lr, {}	; <UNPREDICTABLE>
     734:	aa000003 	bge	748 <CPSR_IRQ_INHIBIT+0x6c8>
     738:	02000004 	andeq	r0, r0, #4
     73c:	701f6c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     740:	01006e69 	tsteq	r0, r9, ror #28
     744:	00482866 	subeq	r2, r8, r6, ror #16
     748:	91020000 	mrsls	r0, (UNDEF: 2)
     74c:	65722268 	ldrbvs	r2, [r2, #-616]!	; 0xfffffd98
     750:	68010067 	stmdavs	r1, {r0, r1, r2, r5, r6}
     754:	0000480e 	andeq	r4, r0, lr, lsl #16
     758:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     75c:	74696222 	strbtvc	r6, [r9], #-546	; 0xfffffdde
     760:	13680100 	cmnne	r8, #0, 2
     764:	00000048 	andeq	r0, r0, r8, asr #32
     768:	00709102 	rsbseq	r9, r0, r2, lsl #2
     76c:	0003ca21 	andeq	ip, r3, r1, lsr #20
     770:	065d0100 	ldrbeq	r0, [sp], -r0, lsl #2
     774:	0000065c 	andeq	r0, r0, ip, asr r6
     778:	0000850c 	andeq	r8, r0, ip, lsl #10
     77c:	000000d8 	ldrdeq	r0, [r0], -r8
     780:	06a59c01 	strteq	r9, [r5], r1, lsl #24
     784:	291e0000 	ldmdbcs	lr, {}	; <UNPREDICTABLE>
     788:	aa000003 	bge	79c <CPSR_IRQ_INHIBIT+0x71c>
     78c:	02000004 	andeq	r0, r0, #4
     790:	701f6c91 	mulsvc	pc, r1, ip	; <UNPREDICTABLE>
     794:	01006e69 	tsteq	r0, r9, ror #28
     798:	0048295d 	subeq	r2, r8, sp, asr r9
     79c:	91020000 	mrsls	r0, (UNDEF: 2)
     7a0:	65731f68 	ldrbvs	r1, [r3, #-3944]!	; 0xfffff098
     7a4:	5d010074 	stcpl	0, cr0, [r1, #-464]	; 0xfffffe30
     7a8:	00048c33 	andeq	r8, r4, r3, lsr ip
     7ac:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
     7b0:	67657222 	strbvs	r7, [r5, -r2, lsr #4]!
     7b4:	0e5f0100 	rdfeqe	f0, f7, f0
     7b8:	00000048 	andeq	r0, r0, r8, asr #32
     7bc:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
     7c0:	00746962 	rsbseq	r6, r4, r2, ror #18
     7c4:	48135f01 	ldmdami	r3, {r0, r8, r9, sl, fp, ip, lr}
     7c8:	02000000 	andeq	r0, r0, #0
     7cc:	21007091 	swpcs	r7, r1, [r0]
     7d0:	000003a6 	andeq	r0, r0, r6, lsr #7
     7d4:	bf105401 	svclt	0x00105401
     7d8:	98000006 	stmdals	r0, {r1, r2}
     7dc:	74000084 	strvc	r0, [r0], #-132	; 0xffffff7c
     7e0:	01000000 	mrseq	r0, (UNDEF: 0)
     7e4:	0006f99c 	muleq	r6, ip, r9
     7e8:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
     7ec:	04990000 	ldreq	r0, [r9], #0
     7f0:	91020000 	mrsls	r0, (UNDEF: 2)
     7f4:	69701f6c 	ldmdbvs	r0!, {r2, r3, r5, r6, r8, r9, sl, fp, ip}^
     7f8:	5401006e 	strpl	r0, [r1], #-110	; 0xffffff92
     7fc:	0000483a 	andeq	r4, r0, sl, lsr r8
     800:	68910200 	ldmvs	r1, {r9}
     804:	67657222 	strbvs	r7, [r5, -r2, lsr #4]!
     808:	0e560100 	rdfeqs	f0, f6, f0
     80c:	00000048 	andeq	r0, r0, r8, asr #32
     810:	22749102 	rsbscs	r9, r4, #-2147483648	; 0x80000000
     814:	00746962 	rsbseq	r6, r4, r2, ror #18
     818:	48135601 	ldmdami	r3, {r0, r9, sl, ip, lr}
     81c:	02000000 	andeq	r0, r0, #0
     820:	21007091 	swpcs	r7, r1, [r0]
     824:	00000381 	andeq	r0, r0, r1, lsl #7
     828:	13064501 	movwne	r4, #25857	; 0x6501
     82c:	d0000007 	andle	r0, r0, r7
     830:	c8000083 	stmdagt	r0, {r0, r1, r7}
     834:	01000000 	mrseq	r0, (UNDEF: 0)
     838:	0007799c 	muleq	r7, ip, r9
     83c:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
     840:	04aa0000 	strteq	r0, [sl], #0
     844:	91020000 	mrsls	r0, (UNDEF: 2)
     848:	69701f64 	ldmdbvs	r0!, {r2, r5, r6, r8, r9, sl, fp, ip}^
     84c:	4501006e 	strmi	r0, [r1, #-110]	; 0xffffff92
     850:	00004830 	andeq	r4, r0, r0, lsr r8
     854:	60910200 	addsvs	r0, r1, r0, lsl #4
     858:	0005f61c 	andeq	pc, r5, ip, lsl r6	; <UNPREDICTABLE>
     85c:	44450100 	strbmi	r0, [r5], #-256	; 0xffffff00
     860:	00000228 	andeq	r0, r0, r8, lsr #4
     864:	225c9102 	subscs	r9, ip, #-2147483648	; 0x80000000
     868:	00676572 	rsbeq	r6, r7, r2, ror r5
     86c:	480e4701 	stmdami	lr, {r0, r8, r9, sl, lr}
     870:	02000000 	andeq	r0, r0, #0
     874:	62226c91 	eorvs	r6, r2, #37120	; 0x9100
     878:	01007469 	tsteq	r0, r9, ror #8
     87c:	00481347 	subeq	r1, r8, r7, asr #6
     880:	91020000 	mrsls	r0, (UNDEF: 2)
     884:	036b2068 	cmneq	fp, #104	; 0x68
     888:	4b010000 	blmi	40890 <_bss_end+0x2f810>
     88c:	00005912 	andeq	r5, r0, r2, lsl r9
     890:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     894:	00647222 	rsbeq	r7, r4, r2, lsr #4
     898:	59124d01 	ldmdbpl	r2, {r0, r8, sl, fp, lr}
     89c:	02000000 	andeq	r0, r0, #0
     8a0:	1d007091 	stcne	0, cr7, [r0, #-580]	; 0xfffffdbc
     8a4:	0000032f 	andeq	r0, r0, pc, lsr #6
     8a8:	93063a01 	movwls	r3, #27137	; 0x6a01
     8ac:	5c000007 	stcpl	0, cr0, [r0], {7}
     8b0:	74000083 	strvc	r0, [r0], #-131	; 0xffffff7d
     8b4:	01000000 	mrseq	r0, (UNDEF: 0)
     8b8:	0007cd9c 	muleq	r7, ip, sp
     8bc:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
     8c0:	04990000 	ldreq	r0, [r9], #0
     8c4:	91020000 	mrsls	r0, (UNDEF: 2)
     8c8:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     8cc:	3a01006e 	bcc	40a8c <_bss_end+0x2fa0c>
     8d0:	00004831 	andeq	r4, r0, r1, lsr r8
     8d4:	70910200 	addsvc	r0, r1, r0, lsl #4
     8d8:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     8dc:	403a0100 	eorsmi	r0, sl, r0, lsl #2
     8e0:	0000049e 	muleq	r0, lr, r4
     8e4:	1c6c9102 	stfnep	f1, [ip], #-8
     8e8:	000005d9 	ldrdeq	r0, [r0], -r9
     8ec:	9e4f3a01 	vmlals.f32	s7, s30, s2
     8f0:	02000004 	andeq	r0, r0, #4
     8f4:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     8f8:	00000301 	andeq	r0, r0, r1, lsl #6
     8fc:	e7062f01 	str	r2, [r6, -r1, lsl #30]
     900:	e8000007 	stmda	r0, {r0, r1, r2}
     904:	74000082 	strvc	r0, [r0], #-130	; 0xffffff7e
     908:	01000000 	mrseq	r0, (UNDEF: 0)
     90c:	0008219c 	muleq	r8, ip, r1
     910:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
     914:	04990000 	ldreq	r0, [r9], #0
     918:	91020000 	mrsls	r0, (UNDEF: 2)
     91c:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     920:	2f01006e 	svccs	0x0001006e
     924:	00004831 	andeq	r4, r0, r1, lsr r8
     928:	70910200 	addsvc	r0, r1, r0, lsl #4
     92c:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     930:	402f0100 	eormi	r0, pc, r0, lsl #2
     934:	0000049e 	muleq	r0, lr, r4
     938:	1c6c9102 	stfnep	f1, [ip], #-8
     93c:	000005d9 	ldrdeq	r0, [r0], -r9
     940:	9e4f2f01 	cdpls	15, 4, cr2, cr15, cr1, {0}
     944:	02000004 	andeq	r0, r0, #4
     948:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     94c:	000002d3 	ldrdeq	r0, [r0], -r3
     950:	3b062401 	blcc	18995c <_bss_end+0x1788dc>
     954:	74000008 	strvc	r0, [r0], #-8
     958:	74000082 	strvc	r0, [r0], #-130	; 0xffffff7e
     95c:	01000000 	mrseq	r0, (UNDEF: 0)
     960:	0008759c 	muleq	r8, ip, r5
     964:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
     968:	04990000 	ldreq	r0, [r9], #0
     96c:	91020000 	mrsls	r0, (UNDEF: 2)
     970:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     974:	2401006e 	strcs	r0, [r1], #-110	; 0xffffff92
     978:	00004831 	andeq	r4, r0, r1, lsr r8
     97c:	70910200 	addsvc	r0, r1, r0, lsl #4
     980:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     984:	40240100 	eormi	r0, r4, r0, lsl #2
     988:	0000049e 	muleq	r0, lr, r4
     98c:	1c6c9102 	stfnep	f1, [ip], #-8
     990:	000005d9 	ldrdeq	r0, [r0], -r9
     994:	9e4f2401 	cdpls	4, 4, cr2, cr15, cr1, {0}
     998:	02000004 	andeq	r0, r0, #4
     99c:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
     9a0:	000002a5 	andeq	r0, r0, r5, lsr #5
     9a4:	8f060f01 	svchi	0x00060f01
     9a8:	dc000008 	stcle	0, cr0, [r0], {8}
     9ac:	98000081 	stmdals	r0, {r0, r7}
     9b0:	01000000 	mrseq	r0, (UNDEF: 0)
     9b4:	0008c99c 	muleq	r8, ip, r9
     9b8:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
     9bc:	04990000 	ldreq	r0, [r9], #0
     9c0:	91020000 	mrsls	r0, (UNDEF: 2)
     9c4:	69701f74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
     9c8:	0f01006e 	svceq	0x0001006e
     9cc:	00004832 	andeq	r4, r0, r2, lsr r8
     9d0:	70910200 	addsvc	r0, r1, r0, lsl #4
     9d4:	6765721f 			; <UNDEFINED> instruction: 0x6765721f
     9d8:	410f0100 	mrsmi	r0, (UNDEF: 31)
     9dc:	0000049e 	muleq	r0, lr, r4
     9e0:	1c6c9102 	stfnep	f1, [ip], #-8
     9e4:	000005d9 	ldrdeq	r0, [r0], -r9
     9e8:	9e500f01 	cdpls	15, 5, cr0, cr0, cr1, {0}
     9ec:	02000004 	andeq	r0, r0, #4
     9f0:	23006891 	movwcs	r6, #2193	; 0x891
     9f4:	0000035d 	andeq	r0, r0, sp, asr r3
     9f8:	da010801 	ble	42a04 <_bss_end+0x31984>
     9fc:	00000008 	andeq	r0, r0, r8
     a00:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a04:	00032924 	andeq	r2, r3, r4, lsr #18
     a08:	0004aa00 	andeq	sl, r4, r0, lsl #20
     a0c:	02182500 	andseq	r2, r8, #0, 10
     a10:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     a14:	0000592b 	andeq	r5, r0, fp, lsr #18
     a18:	c9260000 	stmdbgt	r6!, {}	; <UNPREDICTABLE>
     a1c:	27000008 	strcs	r0, [r0, -r8]
     a20:	07000002 	streq	r0, [r0, -r2]
     a24:	84000009 	strhi	r0, [r0], #-9
     a28:	58000081 	stmdapl	r0, {r0, r7}
     a2c:	01000000 	mrseq	r0, (UNDEF: 0)
     a30:	08da279c 	ldmeq	sl, {r2, r3, r4, r7, r8, r9, sl, sp}^
     a34:	91020000 	mrsls	r0, (UNDEF: 2)
     a38:	08e32774 	stmiaeq	r3!, {r2, r4, r5, r6, r8, r9, sl, sp}^
     a3c:	91020000 	mrsls	r0, (UNDEF: 2)
     a40:	72000070 	andvc	r0, r0, #112	; 0x70
     a44:	0400000a 	streq	r0, [r0], #-10
     a48:	00033100 	andeq	r3, r3, r0, lsl #2
     a4c:	61010400 	tstvs	r1, r0, lsl #8
     a50:	04000000 	streq	r0, [r0], #-0
     a54:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
     a58:	00000026 	andeq	r0, r0, r6, lsr #32
	...
     a64:	0000047a 	andeq	r0, r0, sl, ror r4
     a68:	70080102 	andvc	r0, r8, r2, lsl #2
     a6c:	03000005 	movweq	r0, #5
     a70:	00000025 	andeq	r0, r0, r5, lsr #32
     a74:	96050202 	strls	r0, [r5], -r2, lsl #4
     a78:	04000005 	streq	r0, [r0], #-5
     a7c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     a80:	38050074 	stmdacc	r5, {r2, r4, r5, r6}
     a84:	06000000 	streq	r0, [r0], -r0
     a88:	0000097f 	andeq	r0, r0, pc, ror r9
     a8c:	50070703 	andpl	r0, r7, r3, lsl #14
     a90:	02000000 	andeq	r0, r0, #0
     a94:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
     a98:	95060000 	strls	r0, [r6, #-0]
     a9c:	03000007 	movweq	r0, #7
     aa0:	00630708 	rsbeq	r0, r3, r8, lsl #14
     aa4:	02020000 	andeq	r0, r2, #0
     aa8:	0003d907 	andeq	sp, r3, r7, lsl #18
     aac:	05e10600 	strbeq	r0, [r1, #1536]!	; 0x600
     ab0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
     ab4:	00008007 	andeq	r8, r0, r7
     ab8:	006a0300 	rsbeq	r0, sl, r0, lsl #6
     abc:	6a050000 	bvs	140ac4 <_bss_end+0x12fa44>
     ac0:	02000000 	andeq	r0, r0, #0
     ac4:	40ee0704 	rscmi	r0, lr, r4, lsl #14
     ac8:	80030000 	andhi	r0, r3, r0
     acc:	05000000 	streq	r0, [r0, #-0]
     ad0:	00000080 	andeq	r0, r0, r0, lsl #1
     ad4:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
     ad8:	0b050400 	bleq	141ae0 <_bss_end+0x130a60>
     adc:	0000018a 	andeq	r0, r0, sl, lsl #3
     ae0:	00048408 	andeq	r8, r4, r8, lsl #8
     ae4:	19070400 	stmdbne	r7, {sl}
     ae8:	00000087 	andeq	r0, r0, r7, lsl #1
     aec:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
     af0:	0005c908 	andeq	ip, r5, r8, lsl #18
     af4:	1a0a0400 	bne	281afc <_bss_end+0x270a7c>
     af8:	00000196 	muleq	r0, r6, r1
     afc:	20000000 	andcs	r0, r0, r0
     b00:	00044f08 	andeq	r4, r4, r8, lsl #30
     b04:	1a0d0400 	bne	341b0c <_bss_end+0x330a8c>
     b08:	00000196 	muleq	r0, r6, r1
     b0c:	20200000 	eorcs	r0, r0, r0
     b10:	00058709 	andeq	r8, r5, r9, lsl #14
     b14:	15100400 	ldrne	r0, [r0, #-1024]	; 0xfffffc00
     b18:	00000076 	andeq	r0, r0, r6, ror r0
     b1c:	03700836 	cmneq	r0, #3538944	; 0x360000
     b20:	42040000 	andmi	r0, r4, #0
     b24:	0001961a 	andeq	r9, r1, sl, lsl r6
     b28:	21500000 	cmpcs	r0, r0
     b2c:	03470820 	movteq	r0, #30752	; 0x7820
     b30:	71040000 	mrsvc	r0, (UNDEF: 4)
     b34:	0001961a 	andeq	r9, r1, sl, lsl r6
     b38:	00b20000 	adcseq	r0, r2, r0
     b3c:	02b30820 	adcseq	r0, r3, #32, 16	; 0x200000
     b40:	a4040000 	strge	r0, [r4], #-0
     b44:	0001961a 	andeq	r9, r1, sl, lsl r6
     b48:	00b40000 	adcseq	r0, r4, r0
     b4c:	03610820 	cmneq	r1, #32, 16	; 0x200000
     b50:	b3040000 	movwlt	r0, #16384	; 0x4000
     b54:	0001961a 	andeq	r9, r1, sl, lsl r6
     b58:	10400000 	subne	r0, r0, r0
     b5c:	032e0820 			; <UNDEFINED> instruction: 0x032e0820
     b60:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
     b64:	0001961a 	andeq	r9, r1, sl, lsl r6
     b68:	20500000 	subscs	r0, r0, r0
     b6c:	03ec0820 	mvneq	r0, #32, 16	; 0x200000
     b70:	bf040000 	svclt	0x00040000
     b74:	0001961a 	andeq	r9, r1, sl, lsl r6
     b78:	80400000 	subhi	r0, r0, r0
     b7c:	04590820 	ldrbeq	r0, [r9], #-2080	; 0xfffff7e0
     b80:	c0040000 	andgt	r0, r4, r0
     b84:	0001961a 	andeq	r9, r1, sl, lsl r6
     b88:	80500000 	subshi	r0, r0, r0
     b8c:	079e0a20 	ldreq	r0, [lr, r0, lsr #20]
     b90:	04050000 	streq	r0, [r5], #-0
     b94:	00000038 	andeq	r0, r0, r8, lsr r0
     b98:	0b0dc204 	bleq	3713b0 <_bss_end+0x360330>
     b9c:	0000330e 	andeq	r3, r0, lr, lsl #6
     ba0:	0a090b00 	beq	2437a8 <_bss_end+0x232728>
     ba4:	0b010000 	bleq	40bac <_bss_end+0x2fb2c>
     ba8:	00000947 	andeq	r0, r0, r7, asr #18
     bac:	12850b02 	addne	r0, r5, #2048	; 0x800
     bb0:	0b030000 	bleq	c0bb8 <_bss_end+0xafb38>
     bb4:	00000865 	andeq	r0, r0, r5, ror #16
     bb8:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
     bbc:	0b050000 	bleq	140bc4 <_bss_end+0x12fb44>
     bc0:	00000746 	andeq	r0, r0, r6, asr #14
     bc4:	07e10b06 	strbeq	r0, [r1, r6, lsl #22]!
     bc8:	00070000 	andeq	r0, r7, r0
     bcc:	009d0c00 	addseq	r0, sp, r0, lsl #24
     bd0:	04020000 	streq	r0, [r2], #-0
     bd4:	0040e907 	subeq	lr, r0, r7, lsl #18
     bd8:	018f0300 	orreq	r0, pc, r0, lsl #6
     bdc:	ad0c0000 	stcge	0, cr0, [ip, #-0]
     be0:	0c000000 	stceq	0, cr0, [r0], {-0}
     be4:	000000bd 	strheq	r0, [r0], -sp
     be8:	0000cd0c 	andeq	ip, r0, ip, lsl #26
     bec:	00da0c00 	sbcseq	r0, sl, r0, lsl #24
     bf0:	ea0c0000 	b	300bf8 <_bss_end+0x2efb78>
     bf4:	0c000000 	stceq	0, cr0, [r0], {-0}
     bf8:	000000fa 	strdeq	r0, [r0], -sl
     bfc:	00010a0c 	andeq	r0, r1, ip, lsl #20
     c00:	011a0c00 	tsteq	sl, r0, lsl #24
     c04:	2a0c0000 	bcs	300c0c <_bss_end+0x2efb8c>
     c08:	0c000001 	stceq	0, cr0, [r0], {1}
     c0c:	0000013a 	andeq	r0, r0, sl, lsr r1
     c10:	0009870d 	andeq	r8, r9, sp, lsl #14
     c14:	14060100 	strne	r0, [r6], #-256	; 0xffffff00
     c18:	00000076 	andeq	r0, r0, r6, ror r0
     c1c:	f7880305 			; <UNDEFINED> instruction: 0xf7880305
     c20:	510e0000 	mrspl	r0, (UNDEF: 14)
     c24:	14000007 	strne	r0, [r0], #-7
     c28:	5d070b01 	vstrpl	d0, [r7, #-4]
     c2c:	0f000002 	svceq	0x00000002
     c30:	000007d4 	ldrdeq	r0, [r0], -r4
     c34:	5d0e0f01 	stcpl	15, cr0, [lr, #-4]
     c38:	00000002 	andeq	r0, r0, r2
     c3c:	00085d0f 	andeq	r5, r8, pc, lsl #26
     c40:	11110100 	tstne	r1, r0, lsl #2
     c44:	00000264 	andeq	r0, r0, r4, ror #4
     c48:	093f0f01 	ldmdbeq	pc!, {r0, r8, r9, sl, fp}	; <UNPREDICTABLE>
     c4c:	13010000 	movwne	r0, #4096	; 0x1000
     c50:	00006a12 	andeq	r6, r0, r2, lsl sl
     c54:	ef0f0c00 	svc	0x000f0c00
     c58:	01000008 	tsteq	r0, r8
     c5c:	00571215 	subseq	r1, r7, r5, lsl r2
     c60:	10100000 	andsne	r0, r0, r0
     c64:	00000751 	andeq	r0, r0, r1, asr r7
     c68:	e6091801 	str	r1, [r9], -r1, lsl #16
     c6c:	74000007 	strvc	r0, [r0], #-7
     c70:	01000002 	tsteq	r0, r2
     c74:	00023a01 	andeq	r3, r2, r1, lsl #20
     c78:	00024000 	andeq	r4, r2, r0
     c7c:	02741100 	rsbseq	r1, r4, #0, 2
     c80:	12000000 	andne	r0, r0, #0
     c84:	00000953 	andeq	r0, r0, r3, asr r9
     c88:	6f0e1a01 	svcvs	0x000e1a01
     c8c:	01000008 	tsteq	r0, r8
     c90:	00000251 	andeq	r0, r0, r1, asr r2
     c94:	00027411 	andeq	r7, r2, r1, lsl r4
     c98:	00571300 	subseq	r1, r7, r0, lsl #6
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	a5020102 	strge	r0, [r2, #-258]	; 0xfffffefe
     ca4:	14000040 	strne	r0, [r0], #-64	; 0xffffffc0
     ca8:	00000044 	andeq	r0, r0, r4, asr #32
     cac:	00000274 	andeq	r0, r0, r4, ror r2
     cb0:	00008015 	andeq	r8, r0, r5, lsl r0
     cb4:	16000700 	strne	r0, [r0], -r0, lsl #14
     cb8:	0001df04 	andeq	sp, r1, r4, lsl #30
     cbc:	02740300 	rsbseq	r0, r4, #0, 6
     cc0:	6f0e0000 	svcvs	0x000e0000
     cc4:	2400000f 	strcs	r0, [r0], #-15
     cc8:	2d072c01 	stccs	12, cr2, [r7, #-4]
     ccc:	0f000004 	svceq	0x00000004
     cd0:	000009a0 	andeq	r0, r0, r0, lsr #19
     cd4:	38223001 	stmdacc	r2!, {r0, ip, sp}
     cd8:	00000004 	andeq	r0, r0, r4
     cdc:	0007620f 	andeq	r6, r7, pc, lsl #4
     ce0:	0e320100 	rsfeqs	f0, f2, f0
     ce4:	0000025d 	andeq	r0, r0, sp, asr r2
     ce8:	09b00f04 	ldmibeq	r0!, {r2, r8, r9, sl, fp}
     cec:	35010000 	strcc	r0, [r1, #-0]
     cf0:	00006a12 	andeq	r6, r0, r2, lsl sl
     cf4:	e60f0800 	str	r0, [pc], -r0, lsl #16
     cf8:	01000008 	tsteq	r0, r8
     cfc:	006a1237 	rsbeq	r1, sl, r7, lsr r2
     d00:	0f0c0000 	svceq	0x000c0000
     d04:	00000a10 	andeq	r0, r0, r0, lsl sl
     d08:	df1a3a01 	svcle	0x001a3a01
     d0c:	10000001 	andne	r0, r0, r1
     d10:	67655217 			; <UNDEFINED> instruction: 0x67655217
     d14:	1c3d0100 	ldfnes	f0, [sp], #-0
     d18:	00000779 	andeq	r0, r0, r9, ror r7
     d1c:	0000043d 	andeq	r0, r0, sp, lsr r4
     d20:	0002e602 	andeq	lr, r2, r2, lsl #12
     d24:	0002f100 	andeq	pc, r2, r0, lsl #2
     d28:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     d2c:	4a130000 	bmi	4c0d34 <_bss_end+0x4afcb4>
     d30:	00000001 	andeq	r0, r0, r1
     d34:	00095f18 	andeq	r5, r9, r8, lsl pc
     d38:	0e400100 	dvfeqs	f0, f0, f0
     d3c:	000007a6 	andeq	r0, r0, r6, lsr #15
     d40:	00030602 	andeq	r0, r3, r2, lsl #12
     d44:	00030c00 	andeq	r0, r3, r0, lsl #24
     d48:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     d4c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     d50:	00000f6f 	andeq	r0, r0, pc, ror #30
     d54:	bd094301 	stclt	3, cr4, [r9, #-4]
     d58:	43000007 	movwmi	r0, #7
     d5c:	01000004 	tsteq	r0, r4
     d60:	00000325 	andeq	r0, r0, r5, lsr #6
     d64:	0000033a 	andeq	r0, r0, sl, lsr r3
     d68:	00044311 	andeq	r4, r4, r1, lsl r3
     d6c:	018f1300 	orreq	r1, pc, r0, lsl #6
     d70:	6a130000 	bvs	4c0d78 <_bss_end+0x4afcf8>
     d74:	13000000 	movwne	r0, #0
     d78:	0000006a 	andeq	r0, r0, sl, rrx
     d7c:	0a1d1900 	beq	747184 <_bss_end+0x736104>
     d80:	46010000 	strmi	r0, [r1], -r0
     d84:	000a380e 	andeq	r3, sl, lr, lsl #16
     d88:	00025d00 	andeq	r5, r2, r0, lsl #26
     d8c:	03530100 	cmpeq	r3, #0, 2
     d90:	03590000 	cmpeq	r9, #0
     d94:	43110000 	tstmi	r1, #0
     d98:	00000004 	andeq	r0, r0, r4
     d9c:	0009aa18 	andeq	sl, r9, r8, lsl sl
     da0:	0e480100 	dvfeqe	f0, f0, f0
     da4:	0000089c 	muleq	r0, ip, r8
     da8:	00036e01 	andeq	r6, r3, r1, lsl #28
     dac:	00037400 	andeq	r7, r3, r0, lsl #8
     db0:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     db4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     db8:	0000073c 	andeq	r0, r0, ip, lsr r7
     dbc:	f80e4a01 			; <UNDEFINED> instruction: 0xf80e4a01
     dc0:	5d000008 	stcpl	0, cr0, [r0, #-32]	; 0xffffffe0
     dc4:	01000002 	tsteq	r0, r2
     dc8:	0000038d 	andeq	r0, r0, sp, lsl #7
     dcc:	00000393 	muleq	r0, r3, r3
     dd0:	00044e11 	andeq	r4, r4, r1, lsl lr
     dd4:	20180000 	andscs	r0, r8, r0
     dd8:	01000009 	tsteq	r0, r9
     ddc:	08ad0e4d 	stmiaeq	sp!, {r0, r2, r3, r6, r9, sl, fp}
     de0:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
     de4:	bd000003 	stclt	0, cr0, [r0, #-12]
     de8:	11000003 	tstne	r0, r3
     dec:	00000443 	andeq	r0, r0, r3, asr #8
     df0:	00005713 	andeq	r5, r0, r3, lsl r7
     df4:	04591300 	ldrbeq	r1, [r9], #-768	; 0xfffffd00
     df8:	6a130000 	bvs	4c0e00 <_bss_end+0x4afd80>
     dfc:	00000000 	andeq	r0, r0, r0
     e00:	0007cc18 	andeq	ip, r7, r8, lsl ip
     e04:	0e4f0100 	dvfeqe	f0, f7, f0
     e08:	00000a22 	andeq	r0, r0, r2, lsr #20
     e0c:	0003d201 	andeq	sp, r3, r1, lsl #4
     e10:	0003e700 	andeq	lr, r3, r0, lsl #14
     e14:	04431100 	strbeq	r1, [r3], #-256	; 0xffffff00
     e18:	57130000 	ldrpl	r0, [r3, -r0]
     e1c:	13000000 	movwne	r0, #0
     e20:	0000045f 	andeq	r0, r0, pc, asr r4
     e24:	00006a13 	andeq	r6, r0, r3, lsl sl
     e28:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     e2c:	01000009 	tsteq	r0, r9
     e30:	08c11b52 	stmiaeq	r1, {r1, r4, r6, r8, r9, fp, ip}^
     e34:	04650000 	strbteq	r0, [r5], #-0
     e38:	00010000 	andeq	r0, r1, r0
     e3c:	0b000004 	bleq	e54 <CPSR_IRQ_INHIBIT+0xdd4>
     e40:	11000004 	tstne	r0, r4
     e44:	00000443 	andeq	r0, r0, r3, asr #8
     e48:	00005713 	andeq	r5, r0, r3, lsl r7
     e4c:	39120000 	ldmdbcc	r2, {}	; <UNPREDICTABLE>
     e50:	01000008 	tsteq	r0, r8
     e54:	080a0e54 	stmdaeq	sl, {r2, r4, r6, r9, sl, fp}
     e58:	1c010000 	stcne	0, cr0, [r1], {-0}
     e5c:	11000004 	tstne	r0, r4
     e60:	00000443 	andeq	r0, r0, r3, asr #8
     e64:	00046513 	andeq	r6, r4, r3, lsl r5
     e68:	025d1300 	subseq	r1, sp, #0, 6
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	00027f03 	andeq	r7, r2, r3, lsl #30
     e74:	7b041600 	blvc	10667c <_bss_end+0xf55fc>
     e78:	03000000 	movweq	r0, #0
     e7c:	00000432 	andeq	r0, r0, r2, lsr r4
     e80:	007b041a 	rsbseq	r0, fp, sl, lsl r4
     e84:	04160000 	ldreq	r0, [r6], #-0
     e88:	0000027f 	andeq	r0, r0, pc, ror r2
     e8c:	00044303 	andeq	r4, r4, r3, lsl #6
     e90:	2d041600 	stccs	6, cr1, [r4, #-0]
     e94:	03000004 	movweq	r0, #4
     e98:	0000044e 	andeq	r0, r0, lr, asr #8
     e9c:	002c0416 	eoreq	r0, ip, r6, lsl r4
     ea0:	04160000 	ldreq	r0, [r6], #-0
     ea4:	00000025 	andeq	r0, r0, r5, lsr #32
     ea8:	01df041a 	bicseq	r0, pc, sl, lsl r4	; <UNPREDICTABLE>
     eac:	791b0000 	ldmdbvc	fp, {}	; <UNPREDICTABLE>
     eb0:	01000009 	tsteq	r0, r9
     eb4:	027f0d58 	rsbseq	r0, pc, #88, 26	; 0x1600
     eb8:	4a1c0000 	bmi	700ec0 <_bss_end+0x6efe40>
     ebc:	07000005 	streq	r0, [r0, -r5]
     ec0:	00008004 	andeq	r8, r0, r4
     ec4:	0c070500 	cfstr32eq	mvfx0, [r7], {-0}
     ec8:	000004c0 	andeq	r0, r0, r0, asr #9
     ecc:	0002d90b 	andeq	sp, r2, fp, lsl #18
     ed0:	1a0b0000 	bne	2c0ed8 <_bss_end+0x2afe58>
     ed4:	01000005 	tsteq	r0, r5
     ed8:	0002120b 	andeq	r1, r2, fp, lsl #4
     edc:	0c0b0200 	sfmeq	f0, 4, [fp], {-0}
     ee0:	03000002 	movweq	r0, #2
     ee4:	0001f40b 	andeq	pc, r1, fp, lsl #8
     ee8:	fa0b0400 	blx	2c1ef0 <_bss_end+0x2b0e70>
     eec:	05000001 	streq	r0, [r0, #-1]
     ef0:	0002000b 	andeq	r0, r2, fp
     ef4:	060b0600 	streq	r0, [fp], -r0, lsl #12
     ef8:	07000002 	streq	r0, [r0, -r2]
     efc:	0007250b 	andeq	r2, r7, fp, lsl #10
     f00:	0e000800 	cdpeq	8, 0, cr0, cr0, cr0, {0}
     f04:	00000717 	andeq	r0, r0, r7, lsl r7
     f08:	071b0514 			; <UNDEFINED> instruction: 0x071b0514
     f0c:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
     f10:	0003ff0f 	andeq	pc, r3, pc, lsl #30
     f14:	221f0500 	andscs	r0, pc, #0, 10
     f18:	000006c6 	andeq	r0, r0, r6, asr #13
     f1c:	02be0f00 	adcseq	r0, lr, #0, 30
     f20:	22050000 	andcs	r0, r5, #0
     f24:	0006cb0e 	andeq	ip, r6, lr, lsl #22
     f28:	ee0f0400 	cfcpys	mvf0, mvf15
     f2c:	05000004 	streq	r0, [r0, #-4]
     f30:	06cb0e24 	strbeq	r0, [fp], r4, lsr #28
     f34:	190c0000 	stmdbne	ip, {}	; <UNPREDICTABLE>
     f38:	0000043b 	andeq	r0, r0, fp, lsr r4
     f3c:	a90a2805 	stmdbge	sl, {r0, r2, fp, sp}
     f40:	5d000003 	stcpl	0, cr0, [r0, #-12]
     f44:	02000002 	andeq	r0, r0, #2
     f48:	0000050d 	andeq	r0, r0, sp, lsl #10
     f4c:	00000522 	andeq	r0, r0, r2, lsr #10
     f50:	0006db11 	andeq	sp, r6, r1, lsl fp
     f54:	006a1300 	rsbeq	r1, sl, r0, lsl #6
     f58:	e1130000 	tst	r3, r0
     f5c:	13000006 	movwne	r0, #6
     f60:	000006e1 	andeq	r0, r0, r1, ror #13
     f64:	04db1900 	ldrbeq	r1, [fp], #2304	; 0x900
     f68:	2a050000 	bcs	140f70 <_bss_end+0x12fef0>
     f6c:	0004ac0a 	andeq	sl, r4, sl, lsl #24
     f70:	00025d00 	andeq	r5, r2, r0, lsl #26
     f74:	053b0200 	ldreq	r0, [fp, #-512]!	; 0xfffffe00
     f78:	05500000 	ldrbeq	r0, [r0, #-0]
     f7c:	db110000 	blle	440f84 <_bss_end+0x42ff04>
     f80:	13000006 	movwne	r0, #6
     f84:	0000006a 	andeq	r0, r0, sl, rrx
     f88:	0006e113 	andeq	lr, r6, r3, lsl r1
     f8c:	06e11300 	strbteq	r1, [r1], r0, lsl #6
     f90:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     f94:	0000062a 	andeq	r0, r0, sl, lsr #12
     f98:	aa0a2c05 	bge	28bfb4 <_bss_end+0x27af34>
     f9c:	5d000006 	stcpl	0, cr0, [r0, #-24]	; 0xffffffe8
     fa0:	02000002 	andeq	r0, r0, #2
     fa4:	00000569 	andeq	r0, r0, r9, ror #10
     fa8:	0000057e 	andeq	r0, r0, lr, ror r5
     fac:	0006db11 	andeq	sp, r6, r1, lsl fp
     fb0:	006a1300 	rsbeq	r1, sl, r0, lsl #6
     fb4:	e1130000 	tst	r3, r0
     fb8:	13000006 	movwne	r0, #6
     fbc:	000006e1 	andeq	r0, r0, r1, ror #13
     fc0:	04631900 	strbteq	r1, [r3], #-2304	; 0xfffff700
     fc4:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
     fc8:	0005fb0a 	andeq	pc, r5, sl, lsl #22
     fcc:	00025d00 	andeq	r5, r2, r0, lsl #26
     fd0:	05970200 	ldreq	r0, [r7, #512]	; 0x200
     fd4:	05ac0000 	streq	r0, [ip, #0]!
     fd8:	db110000 	blle	440fe0 <_bss_end+0x42ff60>
     fdc:	13000006 	movwne	r0, #6
     fe0:	0000006a 	andeq	r0, r0, sl, rrx
     fe4:	0006e113 	andeq	lr, r6, r3, lsl r1
     fe8:	06e11300 	strbteq	r1, [r1], r0, lsl #6
     fec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     ff0:	00000717 	andeq	r0, r0, r7, lsl r7
     ff4:	b2053105 	andlt	r3, r5, #1073741825	; 0x40000001
     ff8:	e7000005 	str	r0, [r0, -r5]
     ffc:	01000006 	tsteq	r0, r6
    1000:	000005c5 	andeq	r0, r0, r5, asr #11
    1004:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1008:	0006e711 	andeq	lr, r6, r1, lsl r7
    100c:	00801300 	addeq	r1, r0, r0, lsl #6
    1010:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1014:	00000287 	andeq	r0, r0, r7, lsl #5
    1018:	210a3405 	tstcs	sl, r5, lsl #8
    101c:	01000005 	tsteq	r0, r5
    1020:	000005e5 	andeq	r0, r0, r5, ror #11
    1024:	000005f5 	strdeq	r0, [r0], -r5
    1028:	0006e711 	andeq	lr, r6, r1, lsl r7
    102c:	006a1300 	rsbeq	r1, sl, r0, lsl #6
    1030:	77130000 	ldrvc	r0, [r3, -r0]
    1034:	00000004 	andeq	r0, r0, r4
    1038:	00057519 	andeq	r7, r5, r9, lsl r5
    103c:	14360500 	ldrtne	r0, [r6], #-1280	; 0xfffffb00
    1040:	000006e9 	andeq	r0, r0, r9, ror #13
    1044:	00000477 	andeq	r0, r0, r7, ror r4
    1048:	00060e01 	andeq	r0, r6, r1, lsl #28
    104c:	00061900 	andeq	r1, r6, r0, lsl #18
    1050:	06db1100 	ldrbeq	r1, [fp], r0, lsl #2
    1054:	6a130000 	bvs	4c105c <_bss_end+0x4affdc>
    1058:	00000000 	andeq	r0, r0, r0
    105c:	00051618 	andeq	r1, r5, r8, lsl r6
    1060:	0a390500 	beq	e42468 <_bss_end+0xe313e8>
    1064:	00000413 	andeq	r0, r0, r3, lsl r4
    1068:	00062e01 	andeq	r2, r6, r1, lsl #28
    106c:	00063e00 	andeq	r3, r6, r0, lsl #28
    1070:	06e71100 	strbteq	r1, [r7], r0, lsl #2
    1074:	6a130000 	bvs	4c107c <_bss_end+0x4afffc>
    1078:	13000000 	movwne	r0, #0
    107c:	0000025d 	andeq	r0, r0, sp, asr r2
    1080:	02d51900 	sbcseq	r1, r5, #0, 18
    1084:	3c050000 	stccc	0, cr0, [r5], {-0}
    1088:	0002680a 	andeq	r6, r2, sl, lsl #16
    108c:	00025d00 	andeq	r5, r2, r0, lsl #26
    1090:	06570100 	ldrbeq	r0, [r7], -r0, lsl #2
    1094:	06620000 	strbteq	r0, [r2], -r0
    1098:	e7110000 	ldr	r0, [r1, -r0]
    109c:	13000006 	movwne	r0, #6
    10a0:	0000006a 	andeq	r0, r0, sl, rrx
    10a4:	05ea1900 	strbeq	r1, [sl, #2304]!	; 0x900
    10a8:	3f050000 	svccc	0x00050000
    10ac:	0001d00a 	andeq	sp, r1, sl
    10b0:	00025d00 	andeq	r5, r2, r0, lsl #26
    10b4:	067b0100 	ldrbteq	r0, [fp], -r0, lsl #2
    10b8:	06900000 	ldreq	r0, [r0], r0
    10bc:	e7110000 	ldr	r0, [r1, -r0]
    10c0:	13000006 	movwne	r0, #6
    10c4:	0000006a 	andeq	r0, r0, sl, rrx
    10c8:	00025d13 	andeq	r5, r2, r3, lsl sp
    10cc:	025d1300 	subseq	r1, sp, #0, 6
    10d0:	1d000000 	stcne	0, cr0, [r0, #-0]
    10d4:	000005a0 	andeq	r0, r0, r0, lsr #11
    10d8:	fb0a4105 	blx	2914f6 <_bss_end+0x280476>
    10dc:	5d000002 	stcpl	0, cr0, [r0, #-8]
    10e0:	01000002 	tsteq	r0, r2
    10e4:	000006a5 	andeq	r0, r0, r5, lsr #13
    10e8:	0006e711 	andeq	lr, r6, r1, lsl r7
    10ec:	006a1300 	rsbeq	r1, sl, r0, lsl #6
    10f0:	5d130000 	ldcpl	0, cr0, [r3, #-0]
    10f4:	13000002 	movwne	r0, #2
    10f8:	0000025d 	andeq	r0, r0, sp, asr r2
    10fc:	c0030000 	andgt	r0, r3, r0
    1100:	16000004 	strne	r0, [r0], -r4
    1104:	00008c04 	andeq	r8, r0, r4, lsl #24
    1108:	06c00300 	strbeq	r0, [r0], r0, lsl #6
    110c:	6a140000 	bvs	501114 <_bss_end+0x4f0094>
    1110:	db000000 	blle	1118 <CPSR_IRQ_INHIBIT+0x1098>
    1114:	15000006 	strne	r0, [r0, #-6]
    1118:	00000080 	andeq	r0, r0, r0, lsl #1
    111c:	04160001 	ldreq	r0, [r6], #-1
    1120:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    1124:	006a041a 	rsbeq	r0, sl, sl, lsl r4
    1128:	04160000 	ldreq	r0, [r6], #-0
    112c:	000004c0 	andeq	r0, r0, r0, asr #9
    1130:	0004a61b 	andeq	sl, r4, fp, lsl r6
    1134:	16450500 	strbne	r0, [r5], -r0, lsl #10
    1138:	000004c0 	andeq	r0, r0, r0, asr #9
    113c:	00046b1e 	andeq	r6, r4, lr, lsl fp
    1140:	06050200 	streq	r0, [r5], -r0, lsl #4
    1144:	ff400305 			; <UNDEFINED> instruction: 0xff400305
    1148:	6a1f0000 	bvs	7c1150 <_bss_end+0x7b00d0>
    114c:	bc000009 	stclt	0, cr0, [r0], {9}
    1150:	1c000090 	stcne	0, cr0, [r0], {144}	; 0x90
    1154:	01000000 	mrseq	r0, (UNDEF: 0)
    1158:	023e209c 	eorseq	r2, lr, #156	; 0x9c
    115c:	90600000 	rsbls	r0, r0, r0
    1160:	005c0000 	subseq	r0, ip, r0
    1164:	9c010000 	stcls	0, cr0, [r1], {-0}
    1168:	00000748 	andeq	r0, r0, r8, asr #14
    116c:	00033821 	andeq	r3, r3, r1, lsr #16
    1170:	01870200 	orreq	r0, r7, r0, lsl #4
    1174:	00000038 	andeq	r0, r0, r8, lsr r0
    1178:	21749102 	cmncs	r4, r2, lsl #2
    117c:	00000731 	andeq	r0, r0, r1, lsr r7
    1180:	38018702 	stmdacc	r1, {r1, r8, r9, sl, pc}
    1184:	02000000 	andeq	r0, r0, #0
    1188:	22007091 	andcs	r7, r0, #145	; 0x91
    118c:	0000040b 	andeq	r0, r0, fp, lsl #8
    1190:	62066a02 	andvs	r6, r6, #8192	; 0x2000
    1194:	04000007 	streq	r0, [r0], #-7
    1198:	5c00008f 	stcpl	0, cr0, [r0], {143}	; 0x8f
    119c:	01000001 	tsteq	r0, r1
    11a0:	0007a49c 	muleq	r7, ip, r4
    11a4:	03292300 			; <UNDEFINED> instruction: 0x03292300
    11a8:	04490000 	strbeq	r0, [r9], #-0
    11ac:	91020000 	mrsls	r0, (UNDEF: 2)
    11b0:	08492164 	stmdaeq	r9, {r2, r5, r6, r8, sp}^
    11b4:	6a020000 	bvs	811bc <_bss_end+0x7013c>
    11b8:	0004652e 	andeq	r6, r4, lr, lsr #10
    11bc:	60910200 	addsvs	r0, r1, r0, lsl #4
    11c0:	0008df21 	andeq	sp, r8, r1, lsr #30
    11c4:	406a0200 	rsbmi	r0, sl, r0, lsl #4
    11c8:	0000025d 	andeq	r0, r0, sp, asr r2
    11cc:	245f9102 	ldrbcs	r9, [pc], #-258	; 11d4 <CPSR_IRQ_INHIBIT+0x1154>
    11d0:	00008fa4 	andeq	r8, r0, r4, lsr #31
    11d4:	00000064 	andeq	r0, r0, r4, rrx
    11d8:	02006925 	andeq	r6, r0, #606208	; 0x94000
    11dc:	003f177b 	eorseq	r1, pc, fp, ror r7	; <UNPREDICTABLE>
    11e0:	91020000 	mrsls	r0, (UNDEF: 2)
    11e4:	2200006c 	andcs	r0, r0, #108	; 0x6c
    11e8:	000003e7 	andeq	r0, r0, r7, ror #7
    11ec:	be135e02 	cdplt	14, 1, cr5, cr3, cr2, {0}
    11f0:	8c000007 	stchi	0, cr0, [r0], {7}
    11f4:	7800008e 	stmdavc	r0, {r1, r2, r3, r7}
    11f8:	01000000 	mrseq	r0, (UNDEF: 0)
    11fc:	0007da9c 	muleq	r7, ip, sl
    1200:	03292300 			; <UNDEFINED> instruction: 0x03292300
    1204:	04490000 	strbeq	r0, [r9], #-0
    1208:	91020000 	mrsls	r0, (UNDEF: 2)
    120c:	02222174 	eoreq	r2, r2, #116, 2
    1210:	5e020000 	cdppl	0, 0, cr0, cr2, cr0, {0}
    1214:	00005734 	andeq	r5, r0, r4, lsr r7
    1218:	72910200 	addsvc	r0, r1, #0, 4
    121c:	03bd2200 			; <UNDEFINED> instruction: 0x03bd2200
    1220:	50020000 	andpl	r0, r2, r0
    1224:	0007f406 	andeq	pc, r7, r6, lsl #8
    1228:	008da000 	addeq	sl, sp, r0
    122c:	0000ec00 	andeq	lr, r0, r0, lsl #24
    1230:	459c0100 	ldrmi	r0, [ip, #256]	; 0x100
    1234:	23000008 	movwcs	r0, #8
    1238:	00000329 	andeq	r0, r0, r9, lsr #6
    123c:	00000449 	andeq	r0, r0, r9, asr #8
    1240:	216c9102 	cmncs	ip, r2, lsl #2
    1244:	00000222 	andeq	r0, r0, r2, lsr #4
    1248:	571d5002 	ldrpl	r5, [sp, -r2]
    124c:	02000000 	andeq	r0, r0, #0
    1250:	b7216a91 			; <UNDEFINED> instruction: 0xb7216a91
    1254:	0200000c 	andeq	r0, r0, #12
    1258:	045f2950 	ldrbeq	r2, [pc], #-2384	; 1260 <CPSR_IRQ_INHIBIT+0x11e0>
    125c:	91020000 	mrsls	r0, (UNDEF: 2)
    1260:	656c2664 	strbvs	r2, [ip, #-1636]!	; 0xfffff99c
    1264:	5002006e 	andpl	r0, r2, lr, rrx
    1268:	00006a3a 	andeq	r6, r0, sl, lsr sl
    126c:	60910200 	addsvs	r0, r1, r0, lsl #4
    1270:	008e2824 	addeq	r2, lr, r4, lsr #16
    1274:	00005000 	andeq	r5, r0, r0
    1278:	00692500 	rsbeq	r2, r9, r0, lsl #10
    127c:	6a135a02 	bvs	4d7a8c <_bss_end+0x4c6a0c>
    1280:	02000000 	andeq	r0, r0, #0
    1284:	00007491 	muleq	r0, r1, r4
    1288:	00039322 	andeq	r9, r3, r2, lsr #6
    128c:	06420200 	strbeq	r0, [r2], -r0, lsl #4
    1290:	0000085f 	andeq	r0, r0, pc, asr r8
    1294:	00008cb4 			; <UNDEFINED> instruction: 0x00008cb4
    1298:	000000ec 	andeq	r0, r0, ip, ror #1
    129c:	08b09c01 	ldmeq	r0!, {r0, sl, fp, ip, pc}
    12a0:	29230000 	stmdbcs	r3!, {}	; <UNPREDICTABLE>
    12a4:	49000003 	stmdbmi	r0, {r0, r1}
    12a8:	02000004 	andeq	r0, r0, #4
    12ac:	22216491 	eorcs	r6, r1, #-1862270976	; 0x91000000
    12b0:	02000002 	andeq	r0, r0, #2
    12b4:	00571a42 	subseq	r1, r7, r2, asr #20
    12b8:	91020000 	mrsls	r0, (UNDEF: 2)
    12bc:	0cb72162 	ldfeqs	f2, [r7], #392	; 0x188
    12c0:	42020000 	andmi	r0, r2, #0
    12c4:	0004592c 	andeq	r5, r4, ip, lsr #18
    12c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    12cc:	6e656c26 	cdpvs	12, 6, cr6, cr5, cr6, {1}
    12d0:	3d420200 	sfmcc	f0, 2, [r2, #-0]
    12d4:	0000006a 	andeq	r0, r0, sl, rrx
    12d8:	24589102 	ldrbcs	r9, [r8], #-258	; 0xfffffefe
    12dc:	00008d04 	andeq	r8, r0, r4, lsl #26
    12e0:	00000050 	andeq	r0, r0, r0, asr r0
    12e4:	02006925 	andeq	r6, r0, #606208	; 0x94000
    12e8:	006a1347 	rsbeq	r1, sl, r7, asr #6
    12ec:	91020000 	mrsls	r0, (UNDEF: 2)
    12f0:	2700006c 	strcs	r0, [r0, -ip, rrx]
    12f4:	00000374 	andeq	r0, r0, r4, ror r3
    12f8:	ca063d02 	bgt	190708 <_bss_end+0x17f688>
    12fc:	8c000008 	stchi	0, cr0, [r0], {8}
    1300:	2800008c 	stmdacs	r0, {r2, r3, r7}
    1304:	01000000 	mrseq	r0, (UNDEF: 0)
    1308:	0008d79c 	muleq	r8, ip, r7
    130c:	03292300 			; <UNDEFINED> instruction: 0x03292300
    1310:	04540000 	ldrbeq	r0, [r4], #-0
    1314:	91020000 	mrsls	r0, (UNDEF: 2)
    1318:	59220074 	stmdbpl	r2!, {r2, r4, r5, r6}
    131c:	02000003 	andeq	r0, r0, #3
    1320:	08f10630 	ldmeq	r1!, {r4, r5, r9, sl}^
    1324:	8be80000 	blhi	ffa0132c <_bss_end+0xff9f02ac>
    1328:	00a40000 	adceq	r0, r4, r0
    132c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1330:	000008fe 	strdeq	r0, [r0], -lr
    1334:	00032923 	andeq	r2, r3, r3, lsr #18
    1338:	00044900 	andeq	r4, r4, r0, lsl #18
    133c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1340:	033a2200 	teqeq	sl, #0, 4
    1344:	1b020000 	blne	8134c <_bss_end+0x702cc>
    1348:	00091806 	andeq	r1, r9, r6, lsl #16
    134c:	008b0800 	addeq	r0, fp, r0, lsl #16
    1350:	0000e000 	andeq	lr, r0, r0
    1354:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    1358:	23000009 	movwcs	r0, #9
    135c:	00000329 	andeq	r0, r0, r9, lsr #6
    1360:	00000449 	andeq	r0, r0, r9, asr #8
    1364:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1368:	0002f122 	andeq	pc, r2, r2, lsr #2
    136c:	06120200 	ldreq	r0, [r2], -r0, lsl #4
    1370:	0000093f 	andeq	r0, r0, pc, lsr r9
    1374:	00008ab4 			; <UNDEFINED> instruction: 0x00008ab4
    1378:	00000054 	andeq	r0, r0, r4, asr r0
    137c:	09599c01 	ldmdbeq	r9, {r0, sl, fp, ip, pc}^
    1380:	29230000 	stmdbcs	r3!, {}	; <UNPREDICTABLE>
    1384:	49000003 	stmdbmi	r0, {r0, r1}
    1388:	02000004 	andeq	r0, r0, #4
    138c:	73256c91 			; <UNDEFINED> instruction: 0x73256c91
    1390:	18140200 	ldmdane	r4, {r9}
    1394:	0000043d 	andeq	r0, r0, sp, lsr r4
    1398:	00749102 	rsbseq	r9, r4, r2, lsl #2
    139c:	0002cd27 	andeq	ip, r2, r7, lsr #26
    13a0:	140d0200 	strne	r0, [sp], #-512	; 0xfffffe00
    13a4:	00000973 	andeq	r0, r0, r3, ror r9
    13a8:	00008a7c 	andeq	r8, r0, ip, ror sl
    13ac:	00000038 	andeq	r0, r0, r8, lsr r0
    13b0:	098f9c01 	stmibeq	pc, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
    13b4:	29230000 	stmdbcs	r3!, {}	; <UNPREDICTABLE>
    13b8:	49000003 	stmdbmi	r0, {r0, r1}
    13bc:	02000004 	andeq	r0, r0, #4
    13c0:	72267491 	eorvc	r7, r6, #-1862270976	; 0x91000000
    13c4:	02006765 	andeq	r6, r0, #26476544	; 0x1940000
    13c8:	014a2b0d 	cmpeq	sl, sp, lsl #22
    13cc:	91020000 	mrsls	r0, (UNDEF: 2)
    13d0:	0c280070 	stceq	0, cr0, [r8], #-448	; 0xfffffe40
    13d4:	02000003 	andeq	r0, r0, #3
    13d8:	09a00107 	stmibeq	r0!, {r0, r1, r2, r8}
    13dc:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    13e0:	29000009 	stmdbcs	r0, {r0, r3}
    13e4:	00000329 	andeq	r0, r0, r9, lsr #6
    13e8:	00000449 	andeq	r0, r0, r9, asr #8
    13ec:	001afb2a 	andseq	pc, sl, sl, lsr #22
    13f0:	1a070200 	bne	1c1bf8 <_bss_end+0x1b0b78>
    13f4:	0000018f 	andeq	r0, r0, pc, lsl #3
    13f8:	0008942a 	andeq	r9, r8, sl, lsr #8
    13fc:	29070200 	stmdbcs	r7, {r9}
    1400:	0000006a 	andeq	r0, r0, sl, rrx
    1404:	0008552a 	andeq	r5, r8, sl, lsr #10
    1408:	3b070200 	blcc	1c1c10 <_bss_end+0x1b0b90>
    140c:	0000006a 	andeq	r0, r0, sl, rrx
    1410:	098f2b00 	stmibeq	pc, {r8, r9, fp, sp}	; <UNPREDICTABLE>
    1414:	076a0000 	strbeq	r0, [sl, -r0]!
    1418:	09e90000 	stmibeq	r9!, {}^	; <UNPREDICTABLE>
    141c:	8a100000 	bhi	401424 <_bss_end+0x3f03a4>
    1420:	006c0000 	rsbeq	r0, ip, r0
    1424:	9c010000 	stcls	0, cr0, [r1], {-0}
    1428:	00000a0a 	andeq	r0, r0, sl, lsl #20
    142c:	0009a02c 	andeq	sl, r9, ip, lsr #32
    1430:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1434:	0009a92c 	andeq	sl, r9, ip, lsr #18
    1438:	70910200 	addsvc	r0, r1, r0, lsl #4
    143c:	0009b52c 	andeq	fp, r9, ip, lsr #10
    1440:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1444:	0009c12c 	andeq	ip, r9, ip, lsr #2
    1448:	68910200 	ldmvs	r1, {r9}
    144c:	02202d00 	eoreq	r2, r0, #0, 26
    1450:	0a180000 	beq	601458 <_bss_end+0x5f03d8>
    1454:	22020000 	andcs	r0, r2, #0
    1458:	2900000a 	stmdbcs	r0, {r1, r3}
    145c:	00000329 	andeq	r0, r0, r9, lsr #6
    1460:	0000027a 	andeq	r0, r0, sl, ror r2
    1464:	0a0a2e00 	beq	28cc6c <_bss_end+0x27bbec>
    1468:	09250000 	stmdbeq	r5!, {}	; <UNPREDICTABLE>
    146c:	0a3d0000 	beq	f41474 <_bss_end+0xf303f4>
    1470:	910c0000 	mrsls	r0, (UNDEF: 12)
    1474:	00480000 	subeq	r0, r8, r0
    1478:	9c010000 	stcls	0, cr0, [r1], {-0}
    147c:	00000a46 	andeq	r0, r0, r6, asr #20
    1480:	000a182c 	andeq	r1, sl, ip, lsr #16
    1484:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1488:	02402f00 	subeq	r2, r0, #0, 30
    148c:	0a590000 	beq	1641494 <_bss_end+0x1630414>
    1490:	90d80000 	sbcsls	r0, r8, r0
    1494:	00340000 	eorseq	r0, r4, r0
    1498:	9c010000 	stcls	0, cr0, [r1], {-0}
    149c:	00032923 	andeq	r2, r3, r3, lsr #18
    14a0:	00027a00 	andeq	r7, r2, r0, lsl #20
    14a4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    14a8:	00022221 	andeq	r2, r2, r1, lsr #4
    14ac:	231a0100 	tstcs	sl, #0, 2
    14b0:	00000057 	andeq	r0, r0, r7, asr r0
    14b4:	00729102 	rsbseq	r9, r2, r2, lsl #2
    14b8:	0006b400 	andeq	fp, r6, r0, lsl #8
    14bc:	39000400 	stmdbcc	r0, {sl}
    14c0:	04000006 	streq	r0, [r0], #-6
    14c4:	00006101 	andeq	r6, r0, r1, lsl #2
    14c8:	0abf0400 	beq	fefc24d0 <_bss_end+0xfefb1450>
    14cc:	00260000 	eoreq	r0, r6, r0
    14d0:	00200000 	eoreq	r0, r0, r0
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	07bf0000 	ldreq	r0, [pc, r0]!
    14dc:	95020000 	strls	r0, [r2, #-0]
    14e0:	1800000b 	stmdane	r0, {r0, r1, r3}
    14e4:	66070302 	strvs	r0, [r7], -r2, lsl #6
    14e8:	03000002 	movweq	r0, #2
    14ec:	00000b13 	andeq	r0, r0, r3, lsl fp
    14f0:	02660407 	rsbeq	r0, r6, #117440512	; 0x7000000
    14f4:	06020000 	streq	r0, [r2], -r0
    14f8:	00520110 	subseq	r0, r2, r0, lsl r1
    14fc:	48040000 	stmdami	r4, {}	; <UNPREDICTABLE>
    1500:	10005845 	andne	r5, r0, r5, asr #16
    1504:	43454404 	movtmi	r4, #21508	; 0x5404
    1508:	05000a00 	streq	r0, [r0, #-2560]	; 0xfffff600
    150c:	00000032 	andeq	r0, r0, r2, lsr r0
    1510:	000b2006 	andeq	r2, fp, r6
    1514:	24020800 	strcs	r0, [r2], #-2048	; 0xfffff800
    1518:	00007b0c 	andeq	r7, r0, ip, lsl #22
    151c:	00790700 	rsbseq	r0, r9, r0, lsl #14
    1520:	66162602 	ldrvs	r2, [r6], -r2, lsl #12
    1524:	00000002 	andeq	r0, r0, r2
    1528:	02007807 	andeq	r7, r0, #458752	; 0x70000
    152c:	02661627 	rsbeq	r1, r6, #40894464	; 0x2700000
    1530:	00040000 	andeq	r0, r4, r0
    1534:	000c7208 	andeq	r7, ip, r8, lsl #4
    1538:	1b0c0200 	blne	301d40 <_bss_end+0x2f0cc0>
    153c:	00000052 	andeq	r0, r0, r2, asr r0
    1540:	e5090a01 	str	r0, [r9, #-2561]	; 0xfffff5ff
    1544:	0200000b 	andeq	r0, r0, #11
    1548:	0278280d 	rsbseq	r2, r8, #851968	; 0xd0000
    154c:	0a010000 	beq	41554 <_bss_end+0x304d4>
    1550:	00000b95 	muleq	r0, r5, fp
    1554:	5f0e1002 	svcpl	0x000e1002
    1558:	8900000c 	stmdbhi	r0, {r2, r3}
    155c:	01000002 	tsteq	r0, r2
    1560:	000000af 	andeq	r0, r0, pc, lsr #1
    1564:	000000c4 	andeq	r0, r0, r4, asr #1
    1568:	0002890b 	andeq	r8, r2, fp, lsl #18
    156c:	02660c00 	rsbeq	r0, r6, #0, 24
    1570:	660c0000 	strvs	r0, [ip], -r0
    1574:	0c000002 	stceq	0, cr0, [r0], {2}
    1578:	00000266 	andeq	r0, r0, r6, ror #4
    157c:	18960d00 	ldmne	r6, {r8, sl, fp}
    1580:	12020000 	andne	r0, r2, #0
    1584:	000b800a 	andeq	r8, fp, sl
    1588:	00d90100 	sbcseq	r0, r9, r0, lsl #2
    158c:	00df0000 	sbcseq	r0, pc, r0
    1590:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    1594:	00000002 	andeq	r0, r0, r2
    1598:	000b9e0e 	andeq	r9, fp, lr, lsl #28
    159c:	0f140200 	svceq	0x00140200
    15a0:	00000c02 	andeq	r0, r0, r2, lsl #24
    15a4:	00000294 	muleq	r0, r4, r2
    15a8:	0000f801 	andeq	pc, r0, r1, lsl #16
    15ac:	00010300 	andeq	r0, r1, r0, lsl #6
    15b0:	02890b00 	addeq	r0, r9, #0, 22
    15b4:	7d0c0000 	stcvc	0, cr0, [ip, #-0]
    15b8:	00000002 	andeq	r0, r0, r2
    15bc:	000b9e0e 	andeq	r9, fp, lr, lsl #28
    15c0:	0f150200 	svceq	0x00150200
    15c4:	00000ba9 	andeq	r0, r0, r9, lsr #23
    15c8:	00000294 	muleq	r0, r4, r2
    15cc:	00011c01 	andeq	r1, r1, r1, lsl #24
    15d0:	00012700 	andeq	r2, r1, r0, lsl #14
    15d4:	02890b00 	addeq	r0, r9, #0, 22
    15d8:	720c0000 	andvc	r0, ip, #0
    15dc:	00000002 	andeq	r0, r0, r2
    15e0:	000b9e0e 	andeq	r9, fp, lr, lsl #28
    15e4:	0f160200 	svceq	0x00160200
    15e8:	00000c86 	andeq	r0, r0, r6, lsl #25
    15ec:	00000294 	muleq	r0, r4, r2
    15f0:	00014001 	andeq	r4, r1, r1
    15f4:	00014b00 	andeq	r4, r1, r0, lsl #22
    15f8:	02890b00 	addeq	r0, r9, #0, 22
    15fc:	320c0000 	andcc	r0, ip, #0
    1600:	00000000 	andeq	r0, r0, r0
    1604:	000b9e0e 	andeq	r9, fp, lr, lsl #28
    1608:	0f170200 	svceq	0x00170200
    160c:	00000c31 	andeq	r0, r0, r1, lsr ip
    1610:	00000294 	muleq	r0, r4, r2
    1614:	00016401 	andeq	r6, r1, r1, lsl #8
    1618:	00016f00 	andeq	r6, r1, r0, lsl #30
    161c:	02890b00 	addeq	r0, r9, #0, 22
    1620:	660c0000 	strvs	r0, [ip], -r0
    1624:	00000002 	andeq	r0, r0, r2
    1628:	000b9e0e 	andeq	r9, fp, lr, lsl #28
    162c:	0f180200 	svceq	0x00180200
    1630:	00000bf1 	strdeq	r0, [r0], -r1
    1634:	00000294 	muleq	r0, r4, r2
    1638:	00018801 	andeq	r8, r1, r1, lsl #16
    163c:	00019300 	andeq	r9, r1, r0, lsl #6
    1640:	02890b00 	addeq	r0, r9, #0, 22
    1644:	9a0c0000 	bls	30164c <_bss_end+0x2f05cc>
    1648:	00000002 	andeq	r0, r0, r2
    164c:	000ab10f 	andeq	fp, sl, pc, lsl #2
    1650:	111b0200 	tstne	fp, r0, lsl #4
    1654:	00000a81 	andeq	r0, r0, r1, lsl #21
    1658:	000001a7 	andeq	r0, r0, r7, lsr #3
    165c:	000001ad 	andeq	r0, r0, sp, lsr #3
    1660:	0002890b 	andeq	r8, r2, fp, lsl #18
    1664:	a40f0000 	strge	r0, [pc], #-0	; 166c <CPSR_IRQ_INHIBIT+0x15ec>
    1668:	0200000a 	andeq	r0, r0, #10
    166c:	0c42111c 	stfeqe	f1, [r2], {28}
    1670:	01c10000 	biceq	r0, r1, r0
    1674:	01c70000 	biceq	r0, r7, r0
    1678:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    167c:	00000002 	andeq	r0, r0, r2
    1680:	000a5c0f 	andeq	r5, sl, pc, lsl #24
    1684:	111d0200 	tstne	sp, r0, lsl #4
    1688:	00000b2a 	andeq	r0, r0, sl, lsr #22
    168c:	000001db 	ldrdeq	r0, [r0], -fp
    1690:	000001e1 	andeq	r0, r0, r1, ror #3
    1694:	0002890b 	andeq	r8, r2, fp, lsl #18
    1698:	de0f0000 	cdple	0, 0, cr0, cr15, cr0, {0}
    169c:	02000013 	andeq	r0, r0, #19
    16a0:	0c1b0a1f 			; <UNDEFINED> instruction: 0x0c1b0a1f
    16a4:	01f50000 	mvnseq	r0, r0
    16a8:	01fb0000 	mvnseq	r0, r0
    16ac:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    16b0:	00000002 	andeq	r0, r0, r2
    16b4:	000a9f0f 	andeq	r9, sl, pc, lsl #30
    16b8:	0a210200 	beq	841ec0 <_bss_end+0x830e40>
    16bc:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    16c0:	0000020f 	andeq	r0, r0, pc, lsl #4
    16c4:	00000224 	andeq	r0, r0, r4, lsr #4
    16c8:	0002890b 	andeq	r8, r2, fp, lsl #18
    16cc:	02660c00 	rsbeq	r0, r6, #0, 24
    16d0:	a10c0000 	mrsge	r0, (UNDEF: 12)
    16d4:	0c000002 	stceq	0, cr0, [r0], {2}
    16d8:	00000266 	andeq	r0, r0, r6, ror #4
    16dc:	0b4c1000 	bleq	13056e4 <_bss_end+0x12f4664>
    16e0:	2b020000 	blcs	816e8 <_bss_end+0x70668>
    16e4:	0002ad23 	andeq	sl, r2, r3, lsr #26
    16e8:	13100000 	tstne	r0, #0
    16ec:	0200000c 	andeq	r0, r0, #12
    16f0:	0266122c 	rsbeq	r1, r6, #44, 4	; 0xc0000002
    16f4:	10040000 	andne	r0, r4, r0
    16f8:	00000bd3 	ldrdeq	r0, [r0], -r3
    16fc:	66122d02 	ldrvs	r2, [r2], -r2, lsl #26
    1700:	08000002 	stmdaeq	r0, {r1}
    1704:	000bdc10 	andeq	sp, fp, r0, lsl ip
    1708:	0f2e0200 	svceq	0x002e0200
    170c:	00000057 	andeq	r0, r0, r7, asr r0
    1710:	0a4e100c 	beq	1385748 <_bss_end+0x13746c8>
    1714:	2f020000 	svccs	0x00020000
    1718:	00003212 	andeq	r3, r0, r2, lsl r2
    171c:	11001400 	tstne	r0, r0, lsl #8
    1720:	40ee0704 	rscmi	r0, lr, r4, lsl #14
    1724:	66050000 	strvs	r0, [r5], -r0
    1728:	12000002 	andne	r0, r0, #2
    172c:	00028404 	andeq	r8, r2, r4, lsl #8
    1730:	02720500 	rsbseq	r0, r2, #0, 10
    1734:	01110000 	tsteq	r1, r0
    1738:	00057008 	andeq	r7, r5, r8
    173c:	027d0500 	rsbseq	r0, sp, #0, 10
    1740:	04120000 	ldreq	r0, [r2], #-0
    1744:	00000025 	andeq	r0, r0, r5, lsr #32
    1748:	00028905 	andeq	r8, r2, r5, lsl #18
    174c:	25041300 	strcs	r1, [r4, #-768]	; 0xfffffd00
    1750:	11000000 	mrsne	r0, (UNDEF: 0)
    1754:	40a50201 	adcmi	r0, r5, r1, lsl #4
    1758:	04120000 	ldreq	r0, [r2], #-0
    175c:	0000027d 	andeq	r0, r0, sp, ror r2
    1760:	02b90412 	adcseq	r0, r9, #301989888	; 0x12000000
    1764:	a7050000 	strge	r0, [r5, -r0]
    1768:	11000002 	tstne	r0, r2
    176c:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
    1770:	b2140000 	andslt	r0, r4, #0
    1774:	15000002 	strne	r0, [r0, #-2]
    1778:	00000b65 	andeq	r0, r0, r5, ror #22
    177c:	25113202 	ldrcs	r3, [r1, #-514]	; 0xfffffdfe
    1780:	16000000 	strne	r0, [r0], -r0
    1784:	000002be 			; <UNDEFINED> instruction: 0x000002be
    1788:	050a0301 	streq	r0, [sl, #-769]	; 0xfffffcff
    178c:	00ff6403 	rscseq	r6, pc, r3, lsl #8
    1790:	0b561700 	bleq	1587398 <_bss_end+0x1576318>
    1794:	97800000 	strls	r0, [r0, r0]
    1798:	001c0000 	andseq	r0, ip, r0
    179c:	9c010000 	stcls	0, cr0, [r1], {-0}
    17a0:	00023e18 	andeq	r3, r2, r8, lsl lr
    17a4:	00972800 	addseq	r2, r7, r0, lsl #16
    17a8:	00005800 	andeq	r5, r0, r0, lsl #16
    17ac:	199c0100 	ldmibne	ip, {r8}
    17b0:	19000003 	stmdbne	r0, {r0, r1}
    17b4:	00000338 	andeq	r0, r0, r8, lsr r3
    17b8:	1901a201 	stmdbne	r1, {r0, r9, sp, pc}
    17bc:	02000003 	andeq	r0, r0, #3
    17c0:	31197491 			; <UNDEFINED> instruction: 0x31197491
    17c4:	01000007 	tsteq	r0, r7
    17c8:	031901a2 	tsteq	r9, #-2147483608	; 0x80000028
    17cc:	91020000 	mrsls	r0, (UNDEF: 2)
    17d0:	041a0070 	ldreq	r0, [sl], #-112	; 0xffffff90
    17d4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    17d8:	01fb1b00 	mvnseq	r1, r0, lsl #22
    17dc:	87010000 	strhi	r0, [r1, -r0]
    17e0:	00033a06 	andeq	r3, r3, r6, lsl #20
    17e4:	0095ac00 	addseq	sl, r5, r0, lsl #24
    17e8:	00017c00 	andeq	r7, r1, r0, lsl #24
    17ec:	af9c0100 	svcge	0x009c0100
    17f0:	1c000003 	stcne	0, cr0, [r0], {3}
    17f4:	00000329 	andeq	r0, r0, r9, lsr #6
    17f8:	0000028f 	andeq	r0, r0, pc, lsl #5
    17fc:	19649102 	stmdbne	r4!, {r1, r8, ip, pc}^
    1800:	00000caf 	andeq	r0, r0, pc, lsr #25
    1804:	66228701 	strtvs	r8, [r2], -r1, lsl #14
    1808:	02000002 	andeq	r0, r0, #2
    180c:	a8196091 	ldmdage	r9, {r0, r4, r7, sp, lr}
    1810:	0100000c 	tsteq	r0, ip
    1814:	02a12f87 	adceq	r2, r1, #540	; 0x21c
    1818:	91020000 	mrsls	r0, (UNDEF: 2)
    181c:	1afb195c 	bne	ffec7d94 <_bss_end+0xffeb6d14>
    1820:	87010000 	strhi	r0, [r1, -r0]
    1824:	00026644 	andeq	r6, r2, r4, asr #12
    1828:	58910200 	ldmpl	r1, {r9}
    182c:	0100691d 	tsteq	r0, sp, lsl r9
    1830:	03190989 	tsteq	r9, #2244608	; 0x224000
    1834:	91020000 	mrsls	r0, (UNDEF: 2)
    1838:	96801e74 			; <UNDEFINED> instruction: 0x96801e74
    183c:	00980000 	addseq	r0, r8, r0
    1840:	6a1d0000 	bvs	741848 <_bss_end+0x7307c8>
    1844:	0e9c0100 	fmleqe	f0, f4, f0
    1848:	00000319 	andeq	r0, r0, r9, lsl r3
    184c:	1e709102 	expnes	f1, f2
    1850:	000096a8 	andeq	r9, r0, r8, lsr #13
    1854:	00000060 	andeq	r0, r0, r0, rrx
    1858:	0100631d 	tsteq	r0, sp, lsl r3
    185c:	027d0e9e 	rsbseq	r0, sp, #2528	; 0x9e0
    1860:	91020000 	mrsls	r0, (UNDEF: 2)
    1864:	0000006f 	andeq	r0, r0, pc, rrx
    1868:	00016f1b 	andeq	r6, r1, fp, lsl pc
    186c:	0b770100 	bleq	1dc1c74 <_bss_end+0x1db0bf4>
    1870:	000003c9 	andeq	r0, r0, r9, asr #7
    1874:	0000954c 	andeq	r9, r0, ip, asr #10
    1878:	00000060 	andeq	r0, r0, r0, rrx
    187c:	03e59c01 	mvneq	r9, #256	; 0x100
    1880:	291c0000 	ldmdbcs	ip, {}	; <UNPREDICTABLE>
    1884:	8f000003 	svchi	0x00000003
    1888:	02000002 	andeq	r0, r0, #2
    188c:	48197491 	ldmdami	r9, {r0, r4, r7, sl, ip, sp, lr}
    1890:	0100000a 	tsteq	r0, sl
    1894:	029a2577 	addseq	r2, sl, #499122176	; 0x1dc00000
    1898:	91020000 	mrsls	r0, (UNDEF: 2)
    189c:	4b1b0073 	blmi	6c1a70 <_bss_end+0x6b09f0>
    18a0:	01000001 	tsteq	r0, r1
    18a4:	03ff0b6a 	mvnseq	r0, #108544	; 0x1a800
    18a8:	94f80000 	ldrbtls	r0, [r8], #0
    18ac:	00540000 	subseq	r0, r4, r0
    18b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    18b4:	0000043f 	andeq	r0, r0, pc, lsr r4
    18b8:	0003291c 	andeq	r2, r3, ip, lsl r9
    18bc:	00028f00 	andeq	r8, r2, r0, lsl #30
    18c0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    18c4:	6d756e1f 	ldclvs	14, cr6, [r5, #-124]!	; 0xffffff84
    18c8:	2d6a0100 	stfcse	f0, [sl, #-0]
    18cc:	00000266 	andeq	r0, r0, r6, ror #4
    18d0:	20709102 	rsbscs	r9, r0, r2, lsl #2
    18d4:	00000cbe 			; <UNDEFINED> instruction: 0x00000cbe
    18d8:	6d236c01 	stcvs	12, cr6, [r3, #-4]!
    18dc:	05000002 	streq	r0, [r0, #-2]
    18e0:	00f78c03 	rscseq	r8, r7, r3, lsl #24
    18e4:	0cb52100 	ldfeqs	f2, [r5]
    18e8:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    18ec:	00043f11 	andeq	r3, r4, r1, lsl pc
    18f0:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    18f4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    18f8:	00027d22 	andeq	r7, r2, r2, lsr #26
    18fc:	00044f00 	andeq	r4, r4, r0, lsl #30
    1900:	02662300 	rsbeq	r2, r6, #0, 6
    1904:	000f0000 	andeq	r0, pc, r0
    1908:	00012724 	andeq	r2, r1, r4, lsr #14
    190c:	0b630100 	bleq	18c1d14 <_bss_end+0x18b0c94>
    1910:	00000469 	andeq	r0, r0, r9, ror #8
    1914:	000094c4 	andeq	r9, r0, r4, asr #9
    1918:	00000034 	andeq	r0, r0, r4, lsr r0
    191c:	04859c01 	streq	r9, [r5], #3073	; 0xc01
    1920:	291c0000 	ldmdbcs	ip, {}	; <UNPREDICTABLE>
    1924:	8f000003 	svchi	0x00000003
    1928:	02000002 	andeq	r0, r0, #2
    192c:	50197491 	mulspl	r9, r1, r4
    1930:	0100000a 	tsteq	r0, sl
    1934:	00323763 	eorseq	r3, r2, r3, ror #14
    1938:	91020000 	mrsls	r0, (UNDEF: 2)
    193c:	031b0070 	tsteq	fp, #112	; 0x70
    1940:	01000001 	tsteq	r0, r1
    1944:	049f0b57 	ldreq	r0, [pc], #2903	; 194c <CPSR_IRQ_INHIBIT+0x18cc>
    1948:	944c0000 	strbls	r0, [ip], #-0
    194c:	00780000 	rsbseq	r0, r8, r0
    1950:	9c010000 	stcls	0, cr0, [r1], {-0}
    1954:	000004d2 	ldrdeq	r0, [r0], -r2
    1958:	0003291c 	andeq	r2, r3, ip, lsl r9
    195c:	00028f00 	andeq	r8, r2, r0, lsl #30
    1960:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1964:	7274731f 	rsbsvc	r7, r4, #2080374784	; 0x7c000000
    1968:	2c570100 	ldfcse	f0, [r7], {-0}
    196c:	00000272 	andeq	r0, r0, r2, ror r2
    1970:	1e689102 	lgnnee	f1, f2
    1974:	00009460 	andeq	r9, r0, r0, ror #8
    1978:	0000004c 	andeq	r0, r0, ip, asr #32
    197c:	0100691d 	tsteq	r0, sp, lsl r9
    1980:	02661759 	rsbeq	r1, r6, #23330816	; 0x1640000
    1984:	91020000 	mrsls	r0, (UNDEF: 2)
    1988:	1b000074 	blne	1b60 <CPSR_IRQ_INHIBIT+0x1ae0>
    198c:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1990:	ec0b4501 	cfstr32	mvfx4, [fp], {1}
    1994:	a4000004 	strge	r0, [r0], #-4
    1998:	a8000093 	stmdage	r0, {r0, r1, r4, r7}
    199c:	01000000 	mrseq	r0, (UNDEF: 0)
    19a0:	0005069c 	muleq	r5, ip, r6
    19a4:	03291c00 			; <UNDEFINED> instruction: 0x03291c00
    19a8:	028f0000 	addeq	r0, pc, #0
    19ac:	91020000 	mrsls	r0, (UNDEF: 2)
    19b0:	00631f74 	rsbeq	r1, r3, r4, ror pc
    19b4:	7d254501 	cfstr32vc	mvfx4, [r5, #-4]!
    19b8:	02000002 	andeq	r0, r0, #2
    19bc:	24007391 	strcs	r7, [r0], #-913	; 0xfffffc6f
    19c0:	000001c7 	andeq	r0, r0, r7, asr #3
    19c4:	20064001 	andcs	r4, r6, r1
    19c8:	5c000005 	stcpl	0, cr0, [r0], {5}
    19cc:	2c000098 	stccs	0, cr0, [r0], {152}	; 0x98
    19d0:	01000000 	mrseq	r0, (UNDEF: 0)
    19d4:	00052d9c 	muleq	r5, ip, sp
    19d8:	03291c00 			; <UNDEFINED> instruction: 0x03291c00
    19dc:	028f0000 	addeq	r0, pc, #0
    19e0:	91020000 	mrsls	r0, (UNDEF: 2)
    19e4:	e1240074 	bkpt	0x4004
    19e8:	01000001 	tsteq	r0, r1
    19ec:	05470630 	strbeq	r0, [r7, #-1584]	; 0xfffff9d0
    19f0:	92740000 	rsbsls	r0, r4, #0
    19f4:	01300000 	teqeq	r0, r0
    19f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    19fc:	0000059d 	muleq	r0, sp, r5
    1a00:	0003291c 	andeq	r2, r3, ip, lsl r9
    1a04:	00028f00 	andeq	r8, r2, r0, lsl #30
    1a08:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    1a0c:	00928425 	addseq	r8, r2, r5, lsr #8
    1a10:	0000b000 	andeq	fp, r0, r0
    1a14:	00058500 	andeq	r8, r5, r0, lsl #10
    1a18:	00791d00 	rsbseq	r1, r9, r0, lsl #26
    1a1c:	66173201 	ldrvs	r3, [r7], -r1, lsl #4
    1a20:	02000002 	andeq	r0, r0, #2
    1a24:	a01e7491 	mulsge	lr, r1, r4
    1a28:	84000092 	strhi	r0, [r0], #-146	; 0xffffff6e
    1a2c:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a30:	34010078 	strcc	r0, [r1], #-120	; 0xffffff88
    1a34:	0002661b 	andeq	r6, r2, fp, lsl r6
    1a38:	70910200 	addsvc	r0, r1, r0, lsl #4
    1a3c:	341e0000 	ldrcc	r0, [lr], #-0
    1a40:	60000093 	mulvs	r0, r3, r0
    1a44:	1d000000 	stcne	0, cr0, [r0, #-0]
    1a48:	3a010078 	bcc	41c30 <_bss_end+0x30bb0>
    1a4c:	00026617 	andeq	r6, r2, r7, lsl r6
    1a50:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1a54:	931b0000 	tstls	fp, #0
    1a58:	01000001 	tsteq	r0, r1
    1a5c:	05b70621 	ldreq	r0, [r7, #1569]!	; 0x621
    1a60:	97d40000 	ldrbls	r0, [r4, r0]
    1a64:	00880000 	addeq	r0, r8, r0
    1a68:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a6c:	000005c4 	andeq	r0, r0, r4, asr #11
    1a70:	0003291c 	andeq	r2, r3, ip, lsl r9
    1a74:	00028f00 	andeq	r8, r2, r0, lsl #30
    1a78:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1a7c:	00c41b00 	sbceq	r1, r4, r0, lsl #22
    1a80:	14010000 	strne	r0, [r1], #-0
    1a84:	0005de06 	andeq	sp, r5, r6, lsl #28
    1a88:	0091cc00 	addseq	ip, r1, r0, lsl #24
    1a8c:	0000a800 	andeq	sl, r0, r0, lsl #16
    1a90:	199c0100 	ldmibne	ip, {r8}
    1a94:	1c000006 	stcne	0, cr0, [r0], {6}
    1a98:	00000329 	andeq	r0, r0, r9, lsr #6
    1a9c:	0000028f 	andeq	r0, r0, pc, lsl #5
    1aa0:	1e6c9102 	lgnnee	f1, f2
    1aa4:	000091e4 	andeq	r9, r0, r4, ror #3
    1aa8:	00000084 	andeq	r0, r0, r4, lsl #1
    1aac:	0100791d 	tsteq	r0, sp, lsl r9
    1ab0:	02661718 	rsbeq	r1, r6, #24, 14	; 0x600000
    1ab4:	91020000 	mrsls	r0, (UNDEF: 2)
    1ab8:	92001e74 	andls	r1, r0, #116, 28	; 0x740
    1abc:	00580000 	subseq	r0, r8, r0
    1ac0:	781d0000 	ldmdavc	sp, {}	; <UNPREDICTABLE>
    1ac4:	1b1a0100 	blne	681ecc <_bss_end+0x670e4c>
    1ac8:	00000266 	andeq	r0, r0, r6, ror #4
    1acc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    1ad0:	ad240000 	stcge	0, cr0, [r4, #-0]
    1ad4:	01000001 	tsteq	r0, r1
    1ad8:	0633060e 	ldrteq	r0, [r3], -lr, lsl #12
    1adc:	979c0000 	ldrls	r0, [ip, r0]
    1ae0:	00380000 	eorseq	r0, r8, r0
    1ae4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ae8:	00000640 	andeq	r0, r0, r0, asr #12
    1aec:	0003291c 	andeq	r2, r3, ip, lsl r9
    1af0:	00028f00 	andeq	r8, r2, r0, lsl #30
    1af4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1af8:	00962600 	addseq	r2, r6, r0, lsl #12
    1afc:	05010000 	streq	r0, [r1, #-0]
    1b00:	00065101 	andeq	r5, r6, r1, lsl #2
    1b04:	067f0000 	ldrbteq	r0, [pc], -r0
    1b08:	29270000 	stmdbcs	r7!, {}	; <UNPREDICTABLE>
    1b0c:	8f000003 	svchi	0x00000003
    1b10:	28000002 	stmdacs	r0, {r1}
    1b14:	00000b6e 	andeq	r0, r0, lr, ror #22
    1b18:	66210501 	strtvs	r0, [r1], -r1, lsl #10
    1b1c:	28000002 	stmdacs	r0, {r1}
    1b20:	00000c15 	andeq	r0, r0, r5, lsl ip
    1b24:	66410501 	strbvs	r0, [r1], -r1, lsl #10
    1b28:	28000002 	stmdacs	r0, {r1}
    1b2c:	00000bd5 	ldrdeq	r0, [r0], -r5
    1b30:	66550501 	ldrbvs	r0, [r5], -r1, lsl #10
    1b34:	00000002 	andeq	r0, r0, r2
    1b38:	00064029 	andeq	r4, r6, r9, lsr #32
    1b3c:	000a6e00 	andeq	r6, sl, r0, lsl #28
    1b40:	00069600 	andeq	r9, r6, r0, lsl #12
    1b44:	00915400 	addseq	r5, r1, r0, lsl #8
    1b48:	00007800 	andeq	r7, r0, r0, lsl #16
    1b4c:	2a9c0100 	bcs	fe701f54 <_bss_end+0xfe6f0ed4>
    1b50:	00000651 	andeq	r0, r0, r1, asr r6
    1b54:	2a749102 	bcs	1d25f64 <_bss_end+0x1d14ee4>
    1b58:	0000065a 	andeq	r0, r0, sl, asr r6
    1b5c:	2a709102 	bcs	1c25f6c <_bss_end+0x1c14eec>
    1b60:	00000666 	andeq	r0, r0, r6, ror #12
    1b64:	2a6c9102 	bcs	1b25f74 <_bss_end+0x1b14ef4>
    1b68:	00000672 	andeq	r0, r0, r2, ror r6
    1b6c:	00689102 	rsbeq	r9, r8, r2, lsl #2
    1b70:	0010c300 	andseq	ip, r0, r0, lsl #6
    1b74:	e1000400 	tst	r0, r0, lsl #8
    1b78:	04000008 	streq	r0, [r0], #-8
    1b7c:	00006101 	andeq	r6, r0, r1, lsl #2
    1b80:	0d370400 	cfldrseq	mvf0, [r7, #-0]
    1b84:	00260000 	eoreq	r0, r6, r0
    1b88:	00900000 	addseq	r0, r0, r0
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	0ba00000 	bleq	fe801b98 <_bss_end+0xfe7f0b18>
    1b94:	01020000 	mrseq	r0, (UNDEF: 2)
    1b98:	00057008 	andeq	r7, r5, r8
    1b9c:	00250300 	eoreq	r0, r5, r0, lsl #6
    1ba0:	02020000 	andeq	r0, r2, #0
    1ba4:	00059605 	andeq	r9, r5, r5, lsl #12
    1ba8:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1bac:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1bb0:	00003803 	andeq	r3, r0, r3, lsl #16
    1bb4:	097f0500 	ldmdbeq	pc!, {r8, sl}^	; <UNPREDICTABLE>
    1bb8:	07040000 	streq	r0, [r4, -r0]
    1bbc:	00005507 	andeq	r5, r0, r7, lsl #10
    1bc0:	00440300 	subeq	r0, r4, r0, lsl #6
    1bc4:	01020000 	mrseq	r0, (UNDEF: 2)
    1bc8:	00056708 	andeq	r6, r5, r8, lsl #14
    1bcc:	00550300 	subseq	r0, r5, r0, lsl #6
    1bd0:	95050000 	strls	r0, [r5, #-0]
    1bd4:	04000007 	streq	r0, [r0], #-7
    1bd8:	00720708 	rsbseq	r0, r2, r8, lsl #14
    1bdc:	61030000 	mrsvs	r0, (UNDEF: 3)
    1be0:	02000000 	andeq	r0, r0, #0
    1be4:	03d90702 	bicseq	r0, r9, #524288	; 0x80000
    1be8:	e1050000 	mrs	r0, (UNDEF: 5)
    1bec:	04000005 	streq	r0, [r0], #-5
    1bf0:	008f0709 	addeq	r0, pc, r9, lsl #14
    1bf4:	79030000 	stmdbvc	r3, {}	; <UNPREDICTABLE>
    1bf8:	06000000 	streq	r0, [r0], -r0
    1bfc:	00000079 	andeq	r0, r0, r9, ror r0
    1c00:	ee070402 	cdp	4, 0, cr0, cr7, cr2, {0}
    1c04:	03000040 	movweq	r0, #64	; 0x40
    1c08:	0000008f 	andeq	r0, r0, pc, lsl #1
    1c0c:	6c616807 	stclvs	8, cr6, [r1], #-28	; 0xffffffe4
    1c10:	0b050500 	bleq	143018 <_bss_end+0x131f98>
    1c14:	00000194 	muleq	r0, r4, r1
    1c18:	00048408 	andeq	r8, r4, r8, lsl #8
    1c1c:	19070500 	stmdbne	r7, {r8, sl}
    1c20:	00000096 	muleq	r0, r6, r0
    1c24:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    1c28:	0005c908 	andeq	ip, r5, r8, lsl #18
    1c2c:	1a0a0500 	bne	283034 <_bss_end+0x271fb4>
    1c30:	000001a0 	andeq	r0, r0, r0, lsr #3
    1c34:	20000000 	andcs	r0, r0, r0
    1c38:	00044f08 	andeq	r4, r4, r8, lsl #30
    1c3c:	1a0d0500 	bne	343044 <_bss_end+0x331fc4>
    1c40:	000001a0 	andeq	r0, r0, r0, lsr #3
    1c44:	20200000 	eorcs	r0, r0, r0
    1c48:	00058709 	andeq	r8, r5, r9, lsl #14
    1c4c:	15100500 	ldrne	r0, [r0, #-1280]	; 0xfffffb00
    1c50:	00000085 	andeq	r0, r0, r5, lsl #1
    1c54:	03700836 	cmneq	r0, #3538944	; 0x360000
    1c58:	42050000 	andmi	r0, r5, #0
    1c5c:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1c60:	21500000 	cmpcs	r0, r0
    1c64:	03470820 	movteq	r0, #30752	; 0x7820
    1c68:	71050000 	mrsvc	r0, (UNDEF: 5)
    1c6c:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1c70:	00b20000 	adcseq	r0, r2, r0
    1c74:	02b30820 	adcseq	r0, r3, #32, 16	; 0x200000
    1c78:	a4050000 	strge	r0, [r5], #-0
    1c7c:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1c80:	00b40000 	adcseq	r0, r4, r0
    1c84:	03610820 	cmneq	r1, #32, 16	; 0x200000
    1c88:	b3050000 	movwlt	r0, #20480	; 0x5000
    1c8c:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1c90:	10400000 	subne	r0, r0, r0
    1c94:	032e0820 			; <UNDEFINED> instruction: 0x032e0820
    1c98:	be050000 	cdplt	0, 0, cr0, cr5, cr0, {0}
    1c9c:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1ca0:	20500000 	subscs	r0, r0, r0
    1ca4:	03ec0820 	mvneq	r0, #32, 16	; 0x200000
    1ca8:	bf050000 	svclt	0x00050000
    1cac:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1cb0:	80400000 	subhi	r0, r0, r0
    1cb4:	04590820 	ldrbeq	r0, [r9], #-2080	; 0xfffff7e0
    1cb8:	c0050000 	andgt	r0, r5, r0
    1cbc:	0001a01a 	andeq	sl, r1, sl, lsl r0
    1cc0:	80500000 	subshi	r0, r0, r0
    1cc4:	079e0a20 	ldreq	r0, [lr, r0, lsr #20]
    1cc8:	04050000 	streq	r0, [r5], #-0
    1ccc:	00000038 	andeq	r0, r0, r8, lsr r0
    1cd0:	0b0dc205 	bleq	3724ec <_bss_end+0x36146c>
    1cd4:	0000330e 	andeq	r3, r0, lr, lsl #6
    1cd8:	0a090b00 	beq	2448e0 <_bss_end+0x233860>
    1cdc:	0b010000 	bleq	41ce4 <_bss_end+0x30c64>
    1ce0:	00000947 	andeq	r0, r0, r7, asr #18
    1ce4:	12850b02 	addne	r0, r5, #2048	; 0x800
    1ce8:	0b030000 	bleq	c1cf0 <_bss_end+0xb0c70>
    1cec:	00000865 	andeq	r0, r0, r5, ror #16
    1cf0:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
    1cf4:	0b050000 	bleq	141cfc <_bss_end+0x130c7c>
    1cf8:	00000746 	andeq	r0, r0, r6, asr #14
    1cfc:	07e10b06 	strbeq	r0, [r1, r6, lsl #22]!
    1d00:	00070000 	andeq	r0, r7, r0
    1d04:	00a70c00 	adceq	r0, r7, r0, lsl #24
    1d08:	04020000 	streq	r0, [r2], #-0
    1d0c:	0040e907 	subeq	lr, r0, r7, lsl #18
    1d10:	01990300 	orrseq	r0, r9, r0, lsl #6
    1d14:	b70c0000 	strlt	r0, [ip, -r0]
    1d18:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d1c:	000000c7 	andeq	r0, r0, r7, asr #1
    1d20:	0000d70c 	andeq	sp, r0, ip, lsl #14
    1d24:	00e40c00 	rsceq	r0, r4, r0, lsl #24
    1d28:	f40c0000 	vst4.8	{d0-d3}, [ip], r0
    1d2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1d30:	00000104 	andeq	r0, r0, r4, lsl #2
    1d34:	0001140c 	andeq	r1, r1, ip, lsl #8
    1d38:	01240c00 			; <UNDEFINED> instruction: 0x01240c00
    1d3c:	340c0000 	strcc	r0, [ip], #-0
    1d40:	0c000001 	stceq	0, cr0, [r0], {1}
    1d44:	00000144 	andeq	r0, r0, r4, asr #2
    1d48:	0009870d 	andeq	r8, r9, sp, lsl #14
    1d4c:	14060300 	strne	r0, [r6], #-768	; 0xfffffd00
    1d50:	00000085 	andeq	r0, r0, r5, lsl #1
    1d54:	f7e00305 			; <UNDEFINED> instruction: 0xf7e00305
    1d58:	510e0000 	mrspl	r0, (UNDEF: 14)
    1d5c:	14000007 	strne	r0, [r0], #-7
    1d60:	e8070b03 	stmda	r7, {r0, r1, r8, r9, fp}
    1d64:	0f000002 	svceq	0x00000002
    1d68:	000007d4 	ldrdeq	r0, [r0], -r4
    1d6c:	e80e0f03 	stmda	lr, {r0, r1, r8, r9, sl, fp}
    1d70:	00000002 	andeq	r0, r0, r2
    1d74:	00085d0f 	andeq	r5, r8, pc, lsl #26
    1d78:	11110300 	tstne	r1, r0, lsl #6
    1d7c:	000002ef 	andeq	r0, r0, pc, ror #5
    1d80:	093f0f01 	ldmdbeq	pc!, {r0, r8, r9, sl, fp}	; <UNPREDICTABLE>
    1d84:	13030000 	movwne	r0, #12288	; 0x3000
    1d88:	00007912 	andeq	r7, r0, r2, lsl r9
    1d8c:	ef0f0c00 	svc	0x000f0c00
    1d90:	03000008 	movweq	r0, #8
    1d94:	00611215 	rsbeq	r1, r1, r5, lsl r2
    1d98:	10100000 	andsne	r0, r0, r0
    1d9c:	00000751 	andeq	r0, r0, r1, asr r7
    1da0:	e6091803 	str	r1, [r9], -r3, lsl #16
    1da4:	ff000007 			; <UNDEFINED> instruction: 0xff000007
    1da8:	01000002 	tsteq	r0, r2
    1dac:	00024401 	andeq	r4, r2, r1, lsl #8
    1db0:	00024a00 	andeq	r4, r2, r0, lsl #20
    1db4:	02ff1100 	rscseq	r1, pc, #0, 2
    1db8:	12000000 	andne	r0, r0, #0
    1dbc:	00000953 	andeq	r0, r0, r3, asr r9
    1dc0:	6f0e1a03 	svcvs	0x000e1a03
    1dc4:	01000008 	tsteq	r0, r8
    1dc8:	0000025f 	andeq	r0, r0, pc, asr r2
    1dcc:	0000026a 	andeq	r0, r0, sl, ror #4
    1dd0:	0002ff11 	andeq	pc, r2, r1, lsl pc	; <UNPREDICTABLE>
    1dd4:	00611300 	rsbeq	r1, r1, r0, lsl #6
    1dd8:	14000000 	strne	r0, [r0], #-0
    1ddc:	00000f74 	andeq	r0, r0, r4, ror pc
    1de0:	cc1b2103 	ldfgts	f2, [fp], {3}
    1de4:	e600000f 	str	r0, [r0], -pc
    1de8:	01000004 	tsteq	r0, r4
    1dec:	0000028a 	andeq	r0, r0, sl, lsl #5
    1df0:	00000295 	muleq	r0, r5, r2
    1df4:	55005415 	strpl	r5, [r0, #-1045]	; 0xfffffbeb
    1df8:	11000000 	mrsne	r0, (UNDEF: 0)
    1dfc:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1e00:	000a3813 	andeq	r3, sl, r3, lsl r8
    1e04:	06140000 	ldreq	r0, [r4], -r0
    1e08:	03000011 	movweq	r0, #17
    1e0c:	0fef1b21 	svceq	0x00ef1b21
    1e10:	04e60000 	strbteq	r0, [r6], #0
    1e14:	b5010000 	strlt	r0, [r1, #-0]
    1e18:	c0000002 	andgt	r0, r0, r2
    1e1c:	15000002 	strne	r0, [r0, #-2]
    1e20:	00380054 	eorseq	r0, r8, r4, asr r0
    1e24:	ff110000 			; <UNDEFINED> instruction: 0xff110000
    1e28:	13000002 	movwne	r0, #2
    1e2c:	00000a78 	andeq	r0, r0, r8, ror sl
    1e30:	14001600 	strne	r1, [r0], #-1536	; 0xfffffa00
    1e34:	21030000 	mrscs	r0, (UNDEF: 3)
    1e38:	0012ab1b 	andseq	sl, r2, fp, lsl fp
    1e3c:	0004e600 	andeq	lr, r4, r0, lsl #12
    1e40:	02dc0100 	sbcseq	r0, ip, #0, 2
    1e44:	54150000 	ldrpl	r0, [r5], #-0
    1e48:	00050a00 	andeq	r0, r5, r0, lsl #20
    1e4c:	02ff1100 	rscseq	r1, pc, #0, 2
    1e50:	b8130000 	ldmdalt	r3, {}	; <UNPREDICTABLE>
    1e54:	0000000a 	andeq	r0, r0, sl
    1e58:	02010200 	andeq	r0, r1, #0, 4
    1e5c:	000040a5 	andeq	r4, r0, r5, lsr #1
    1e60:	00004417 	andeq	r4, r0, r7, lsl r4
    1e64:	0002ff00 	andeq	pc, r2, r0, lsl #30
    1e68:	008f1800 	addeq	r1, pc, r0, lsl #16
    1e6c:	00070000 	andeq	r0, r7, r0
    1e70:	01e90419 	mvneq	r0, r9, lsl r4
    1e74:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    1e78:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1e7c:	00000f6f 	andeq	r0, r0, pc, ror #30
    1e80:	072c0324 	streq	r0, [ip, -r4, lsr #6]!
    1e84:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
    1e88:	0009a00f 	andeq	sl, r9, pc
    1e8c:	22300300 	eorscs	r0, r0, #0, 6
    1e90:	000004c3 	andeq	r0, r0, r3, asr #9
    1e94:	07620f00 	strbeq	r0, [r2, -r0, lsl #30]!
    1e98:	32030000 	andcc	r0, r3, #0
    1e9c:	0002e80e 	andeq	lr, r2, lr, lsl #16
    1ea0:	b00f0400 	andlt	r0, pc, r0, lsl #8
    1ea4:	03000009 	movweq	r0, #9
    1ea8:	00791235 	rsbseq	r1, r9, r5, lsr r2
    1eac:	0f080000 	svceq	0x00080000
    1eb0:	000008e6 	andeq	r0, r0, r6, ror #17
    1eb4:	79123703 	ldmdbvc	r2, {r0, r1, r8, r9, sl, ip, sp}
    1eb8:	0c000000 	stceq	0, cr0, [r0], {-0}
    1ebc:	000a100f 	andeq	r1, sl, pc
    1ec0:	1a3a0300 	bne	e82ac8 <_bss_end+0xe71a48>
    1ec4:	000001e9 	andeq	r0, r0, r9, ror #3
    1ec8:	65521a10 	ldrbvs	r1, [r2, #-2576]	; 0xfffff5f0
    1ecc:	3d030067 	stccc	0, cr0, [r3, #-412]	; 0xfffffe64
    1ed0:	0007791c 	andeq	r7, r7, ip, lsl r9
    1ed4:	0004c800 	andeq	ip, r4, r0, lsl #16
    1ed8:	03710200 	cmneq	r1, #0, 4
    1edc:	037c0000 	cmneq	ip, #0
    1ee0:	ce110000 	cdpgt	0, 1, cr0, cr1, cr0, {0}
    1ee4:	13000004 	movwne	r0, #4
    1ee8:	00000154 	andeq	r0, r0, r4, asr r1
    1eec:	095f1200 	ldmdbeq	pc, {r9, ip}^	; <UNPREDICTABLE>
    1ef0:	40030000 	andmi	r0, r3, r0
    1ef4:	0007a60e 	andeq	sl, r7, lr, lsl #12
    1ef8:	03910200 	orrseq	r0, r1, #0, 4
    1efc:	03970000 	orrseq	r0, r7, #0
    1f00:	ce110000 	cdpgt	0, 1, cr0, cr1, cr0, {0}
    1f04:	00000004 	andeq	r0, r0, r4
    1f08:	000f6f14 	andeq	r6, pc, r4, lsl pc	; <UNPREDICTABLE>
    1f0c:	09430300 	stmdbeq	r3, {r8, r9}^
    1f10:	000007bd 			; <UNDEFINED> instruction: 0x000007bd
    1f14:	000004ce 	andeq	r0, r0, lr, asr #9
    1f18:	0003b001 	andeq	fp, r3, r1
    1f1c:	0003c500 	andeq	ip, r3, r0, lsl #10
    1f20:	04ce1100 	strbeq	r1, [lr], #256	; 0x100
    1f24:	99130000 	ldmdbls	r3, {}	; <UNPREDICTABLE>
    1f28:	13000001 	movwne	r0, #1
    1f2c:	00000079 	andeq	r0, r0, r9, ror r0
    1f30:	00007913 	andeq	r7, r0, r3, lsl r9
    1f34:	1d140000 	ldcne	0, cr0, [r4, #-0]
    1f38:	0300000a 	movweq	r0, #10
    1f3c:	0a380e46 	beq	e0585c <_bss_end+0xdf47dc>
    1f40:	02e80000 	rsceq	r0, r8, #0
    1f44:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    1f48:	e4000003 	str	r0, [r0], #-3
    1f4c:	11000003 	tstne	r0, r3
    1f50:	000004ce 	andeq	r0, r0, lr, asr #9
    1f54:	09aa1200 	stmibeq	sl!, {r9, ip}
    1f58:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    1f5c:	00089c0e 	andeq	r9, r8, lr, lsl #24
    1f60:	03f90100 	mvnseq	r0, #0, 2
    1f64:	03ff0000 	mvnseq	r0, #0
    1f68:	ce110000 	cdpgt	0, 1, cr0, cr1, cr0, {0}
    1f6c:	00000004 	andeq	r0, r0, r4
    1f70:	00073c14 	andeq	r3, r7, r4, lsl ip
    1f74:	0e4a0300 	cdpeq	3, 4, cr0, cr10, cr0, {0}
    1f78:	000008f8 	strdeq	r0, [r0], -r8
    1f7c:	000002e8 	andeq	r0, r0, r8, ror #5
    1f80:	00041801 	andeq	r1, r4, r1, lsl #16
    1f84:	00041e00 	andeq	r1, r4, r0, lsl #28
    1f88:	04d41100 	ldrbeq	r1, [r4], #256	; 0x100
    1f8c:	12000000 	andne	r0, r0, #0
    1f90:	00000920 	andeq	r0, r0, r0, lsr #18
    1f94:	ad0e4d03 	stcge	13, cr4, [lr, #-12]
    1f98:	01000008 	tsteq	r0, r8
    1f9c:	00000433 	andeq	r0, r0, r3, lsr r4
    1fa0:	00000448 	andeq	r0, r0, r8, asr #8
    1fa4:	0004ce11 	andeq	ip, r4, r1, lsl lr
    1fa8:	00611300 	rsbeq	r1, r1, r0, lsl #6
    1fac:	da130000 	ble	4c1fb4 <_bss_end+0x4b0f34>
    1fb0:	13000004 	movwne	r0, #4
    1fb4:	00000079 	andeq	r0, r0, r9, ror r0
    1fb8:	07cc1200 	strbeq	r1, [ip, r0, lsl #4]
    1fbc:	4f030000 	svcmi	0x00030000
    1fc0:	000a220e 	andeq	r2, sl, lr, lsl #4
    1fc4:	045d0100 	ldrbeq	r0, [sp], #-256	; 0xffffff00
    1fc8:	04720000 	ldrbteq	r0, [r2], #-0
    1fcc:	ce110000 	cdpgt	0, 1, cr0, cr1, cr0, {0}
    1fd0:	13000004 	movwne	r0, #4
    1fd4:	00000061 	andeq	r0, r0, r1, rrx
    1fd8:	0004e013 	andeq	lr, r4, r3, lsl r0
    1fdc:	00791300 	rsbseq	r1, r9, r0, lsl #6
    1fe0:	14000000 	strne	r0, [r0], #-0
    1fe4:	0000090e 	andeq	r0, r0, lr, lsl #18
    1fe8:	c11b5203 	tstgt	fp, r3, lsl #4
    1fec:	e6000008 	str	r0, [r0], -r8
    1ff0:	01000004 	tsteq	r0, r4
    1ff4:	0000048b 	andeq	r0, r0, fp, lsl #9
    1ff8:	00000496 	muleq	r0, r6, r4
    1ffc:	0004ce11 	andeq	ip, r4, r1, lsl lr
    2000:	00611300 	rsbeq	r1, r1, r0, lsl #6
    2004:	1b000000 	blne	200c <CPSR_IRQ_INHIBIT+0x1f8c>
    2008:	00000839 	andeq	r0, r0, r9, lsr r8
    200c:	0a0e5403 	beq	397020 <_bss_end+0x385fa0>
    2010:	01000008 	tsteq	r0, r8
    2014:	000004a7 	andeq	r0, r0, r7, lsr #9
    2018:	0004ce11 	andeq	ip, r4, r1, lsl lr
    201c:	04e61300 	strbteq	r1, [r6], #768	; 0x300
    2020:	e8130000 	ldmda	r3, {}	; <UNPREDICTABLE>
    2024:	00000002 	andeq	r0, r0, r2
    2028:	030a0300 	movweq	r0, #41728	; 0xa300
    202c:	04190000 	ldreq	r0, [r9], #-0
    2030:	0000008a 	andeq	r0, r0, sl, lsl #1
    2034:	0004bd03 	andeq	fp, r4, r3, lsl #26
    2038:	8a041c00 	bhi	109040 <_bss_end+0xf7fc0>
    203c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    2040:	00030a04 	andeq	r0, r3, r4, lsl #20
    2044:	b8041900 	stmdalt	r4, {r8, fp, ip}
    2048:	19000004 	stmdbne	r0, {r2}
    204c:	00002c04 	andeq	r2, r0, r4, lsl #24
    2050:	25041900 	strcs	r1, [r4, #-2304]	; 0xfffff700
    2054:	1c000000 	stcne	0, cr0, [r0], {-0}
    2058:	0001e904 	andeq	lr, r1, r4, lsl #18
    205c:	09791d00 	ldmdbeq	r9!, {r8, sl, fp, ip}^
    2060:	58030000 	stmdapl	r3, {}	; <UNPREDICTABLE>
    2064:	00030a0d 	andeq	r0, r3, sp, lsl #20
    2068:	127d0d00 	rsbsne	r0, sp, #0, 26
    206c:	06060000 	streq	r0, [r6], -r0
    2070:	00006d14 	andeq	r6, r0, r4, lsl sp
    2074:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    2078:	1e0000f7 	mcrne	0, 0, r0, cr0, cr7, {7}
    207c:	00000dec 	andeq	r0, r0, ip, ror #27
    2080:	00380405 	eorseq	r0, r8, r5, lsl #8
    2084:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    2088:	0005e90c 	andeq	lr, r5, ip, lsl #18
    208c:	0f470b00 	svceq	0x00470b00
    2090:	0b000000 	bleq	2098 <CPSR_IRQ_INHIBIT+0x2018>
    2094:	00000cd2 	ldrdeq	r0, [r0], -r2
    2098:	12f50bc0 	rscsne	r0, r5, #192, 22	; 0x30000
    209c:	0b400000 	bleq	10020a4 <_bss_end+0xff1024>
    20a0:	000013a7 	andeq	r1, r0, r7, lsr #7
    20a4:	115d0b81 	cmpne	sp, r1, lsl #23
    20a8:	0ba40000 	bleq	fe9020b0 <_bss_end+0xfe8f1030>
    20ac:	00001028 	andeq	r1, r0, r8, lsr #32
    20b0:	11c20ba5 	bicne	r0, r2, r5, lsr #23
    20b4:	0ba60000 	bleq	fe9820bc <_bss_end+0xfe97103c>
    20b8:	0000126c 	andeq	r1, r0, ip, ror #4
    20bc:	13140ba7 	tstne	r4, #171008	; 0x29c00
    20c0:	0bae0000 	bleq	feb820c8 <_bss_end+0xfeb71048>
    20c4:	00000fa7 	andeq	r0, r0, r7, lsr #31
    20c8:	6f4e1faf 	svcvs	0x004e1faf
    20cc:	0be30070 	bleq	ff8c2294 <_bss_end+0xff8b1214>
    20d0:	000011f0 	strdeq	r1, [r0], -r0
    20d4:	13900b26 	orrsne	r0, r0, #38912	; 0x9800
    20d8:	0b270000 	bleq	9c20e0 <_bss_end+0x9b1060>
    20dc:	00000e29 	andeq	r0, r0, r9, lsr #28
    20e0:	13e50b29 	mvnne	r0, #41984	; 0xa400
    20e4:	0b2a0000 	bleq	a820ec <_bss_end+0xa7106c>
    20e8:	00000eae 	andeq	r0, r0, lr, lsr #29
    20ec:	13d50b2e 	bicsne	r0, r5, #47104	; 0xb800
    20f0:	0b2f0000 	bleq	bc20f8 <_bss_end+0xbb1078>
    20f4:	00001073 	andeq	r1, r0, r3, ror r0
    20f8:	0d900ba3 	vldreq	d0, [r0, #652]	; 0x28c
    20fc:	0b000000 	bleq	2104 <CPSR_IRQ_INHIBIT+0x2084>
    2100:	000010a9 	andeq	r1, r0, r9, lsr #1
    2104:	0e510b10 	vmoveq.s8	r0, d1[0]
    2108:	0b200000 	bleq	802110 <_bss_end+0x7f1090>
    210c:	00000fb2 			; <UNDEFINED> instruction: 0x00000fb2
    2110:	10870b21 	addne	r0, r7, r1, lsr #22
    2114:	0b220000 	bleq	88211c <_bss_end+0x87109c>
    2118:	00001136 	andeq	r1, r0, r6, lsr r1
    211c:	12da0b40 	sbcsne	r0, sl, #64, 22	; 0x10000
    2120:	0ba00000 	bleq	fe802128 <_bss_end+0xfe7f10a8>
    2124:	00001117 	andeq	r1, r0, r7, lsl r1
    2128:	129a0ba8 	addsne	r0, sl, #168, 22	; 0x2a000
    212c:	0bc00000 	bleq	ff002134 <_bss_end+0xfeff10b4>
    2130:	000010f5 	strdeq	r1, [r0], -r5
    2134:	12280bc8 	eorne	r0, r8, #200, 22	; 0x32000
    2138:	0bd30000 	bleq	ff4c2140 <_bss_end+0xff4b10c0>
    213c:	00000ea1 	andeq	r0, r0, r1, lsr #29
    2140:	11b60bda 			; <UNDEFINED> instruction: 0x11b60bda
    2144:	0b8d0000 	bleq	fe34214c <_bss_end+0xfe3310cc>
    2148:	00000ede 	ldrdeq	r0, [r0], -lr
    214c:	0efa0bd5 	vmoveq.u8	r0, d26[6]
    2150:	0bd90000 	bleq	ff642158 <_bss_end+0xff6310d8>
    2154:	00000f0f 	andeq	r0, r0, pc, lsl #30
    2158:	0a0300d8 	beq	c24c0 <_bss_end+0xb1440>
    215c:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    2160:	00001017 	andeq	r1, r0, r7, lsl r0
    2164:	07360614 			; <UNDEFINED> instruction: 0x07360614
    2168:	0000076f 	andeq	r0, r0, pc, ror #14
    216c:	0010370f 	andseq	r3, r0, pc, lsl #14
    2170:	0f3a0600 	svceq	0x003a0600
    2174:	00000774 	andeq	r0, r0, r4, ror r7
    2178:	07620f00 	strbeq	r0, [r2, -r0, lsl #30]!
    217c:	3c060000 	stccc	0, cr0, [r6], {-0}
    2180:	0002e80e 	andeq	lr, r2, lr, lsl #16
    2184:	5d0f0400 	cfstrspl	mvf0, [pc, #-0]	; 218c <CPSR_IRQ_INHIBIT+0x210c>
    2188:	06000008 	streq	r0, [r0], -r8
    218c:	077a123e 			; <UNDEFINED> instruction: 0x077a123e
    2190:	0f080000 	svceq	0x00080000
    2194:	00000e4a 	andeq	r0, r0, sl, asr #28
    2198:	380d4006 	stmdacc	sp, {r1, r2, lr}
    219c:	0c000000 	stceq	0, cr0, [r0], {-0}
    21a0:	000cca0f 	andeq	ip, ip, pc, lsl #20
    21a4:	15400600 	strbne	r0, [r0, #-1536]	; 0xfffffa00
    21a8:	00000038 	andeq	r0, r0, r8, lsr r0
    21ac:	123b1210 	eorsne	r1, fp, #16, 4
    21b0:	44060000 	strmi	r0, [r6], #-0
    21b4:	0013450e 	andseq	r4, r3, lr, lsl #10
    21b8:	06510200 	ldrbeq	r0, [r1], -r0, lsl #4
    21bc:	06610000 	strbteq	r0, [r1], -r0
    21c0:	80110000 	andshi	r0, r1, r0
    21c4:	13000007 	movwne	r0, #7
    21c8:	0000050a 	andeq	r0, r0, sl, lsl #10
    21cc:	00004413 	andeq	r4, r0, r3, lsl r4
    21d0:	17140000 	ldrne	r0, [r4, -r0]
    21d4:	06000010 			; <UNDEFINED> instruction: 0x06000010
    21d8:	11d10947 	bicsne	r0, r1, r7, asr #18
    21dc:	07800000 	streq	r0, [r0, r0]
    21e0:	7a010000 	bvc	421e8 <_bss_end+0x31168>
    21e4:	85000006 	strhi	r0, [r0, #-6]
    21e8:	11000006 	tstne	r0, r6
    21ec:	00000780 	andeq	r0, r0, r0, lsl #15
    21f0:	00077413 	andeq	r7, r7, r3, lsl r4
    21f4:	1d140000 	ldcne	0, cr0, [r4, #-0]
    21f8:	0600000a 	streq	r0, [r0], -sl
    21fc:	0f1f0e4a 	svceq	0x001f0e4a
    2200:	02e80000 	rsceq	r0, r8, #0
    2204:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    2208:	ae000006 	cdpge	0, 0, cr0, cr0, cr6, {0}
    220c:	11000006 	tstne	r0, r6
    2210:	00000780 	andeq	r0, r0, r0, lsl #15
    2214:	00003813 	andeq	r3, r0, r3, lsl r8
    2218:	00381300 	eorseq	r1, r8, r0, lsl #6
    221c:	12000000 	andne	r0, r0, #0
    2220:	000009aa 	andeq	r0, r0, sl, lsr #19
    2224:	190e4c06 	stmdbne	lr, {r1, r2, sl, fp, lr}
    2228:	01000014 	tsteq	r0, r4, lsl r0
    222c:	000006c3 	andeq	r0, r0, r3, asr #13
    2230:	000006c9 	andeq	r0, r0, r9, asr #13
    2234:	00078011 	andeq	r8, r7, r1, lsl r0
    2238:	3c140000 	ldccc	0, cr0, [r4], {-0}
    223c:	06000007 	streq	r0, [r0], -r7
    2240:	0e680e4e 	cdpeq	14, 6, cr0, cr8, cr14, {2}
    2244:	02e80000 	rsceq	r0, r8, #0
    2248:	e2010000 	and	r0, r1, #0
    224c:	e8000006 	stmda	r0, {r1, r2}
    2250:	11000006 	tstne	r0, r6
    2254:	0000078b 	andeq	r0, r0, fp, lsl #15
    2258:	18961200 	ldmne	r6, {r9, ip}
    225c:	51060000 	mrspl	r0, (UNDEF: 6)
    2260:	0010550e 	andseq	r5, r0, lr, lsl #10
    2264:	06fd0100 	ldrbteq	r0, [sp], r0, lsl #2
    2268:	07080000 	streq	r0, [r8, -r0]
    226c:	80110000 	andshi	r0, r1, r0
    2270:	13000007 	movwne	r0, #7
    2274:	000002e8 	andeq	r0, r0, r8, ror #5
    2278:	0fc21200 	svceq	0x00c21200
    227c:	53060000 	movwpl	r0, #24576	; 0x6000
    2280:	0012480e 	andseq	r4, r2, lr, lsl #16
    2284:	071d0100 	ldreq	r0, [sp, -r0, lsl #2]
    2288:	07320000 	ldreq	r0, [r2, -r0]!
    228c:	80110000 	andshi	r0, r1, r0
    2290:	13000007 	movwne	r0, #7
    2294:	00000079 	andeq	r0, r0, r9, ror r0
    2298:	00007913 	andeq	r7, r0, r3, lsl r9
    229c:	02e81300 	rsceq	r1, r8, #0, 6
    22a0:	12000000 	andne	r0, r0, #0
    22a4:	00000f3d 	andeq	r0, r0, sp, lsr pc
    22a8:	dd0e5506 	cfstr32le	mvfx5, [lr, #-24]	; 0xffffffe8
    22ac:	0100000c 	tsteq	r0, ip
    22b0:	00000747 	andeq	r0, r0, r7, asr #14
    22b4:	0000074d 	andeq	r0, r0, sp, asr #14
    22b8:	00078011 	andeq	r8, r7, r1, lsl r0
    22bc:	ba1b0000 	blt	6c22c4 <_bss_end+0x6b1244>
    22c0:	06000010 			; <UNDEFINED> instruction: 0x06000010
    22c4:	0da10e58 	stceq	14, cr0, [r1, #352]!	; 0x160
    22c8:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    22cc:	11000007 	tstne	r0, r7
    22d0:	00000780 	andeq	r0, r0, r0, lsl #15
    22d4:	0004da13 	andeq	sp, r4, r3, lsl sl
    22d8:	00791300 	rsbseq	r1, r9, r0, lsl #6
    22dc:	00000000 	andeq	r0, r0, r0
    22e0:	0005ee03 	andeq	lr, r5, r3, lsl #28
    22e4:	0a041c00 	beq	1092ec <_bss_end+0xf826c>
    22e8:	19000003 	stmdbne	r0, {r0, r1}
    22ec:	00004404 	andeq	r4, r0, r4, lsl #8
    22f0:	ee041900 	vmla.f16	s2, s8, s0
    22f4:	03000005 	movweq	r0, #5
    22f8:	00000780 	andeq	r0, r0, r0, lsl #15
    22fc:	076f0419 			; <UNDEFINED> instruction: 0x076f0419
    2300:	8b030000 	blhi	c2308 <_bss_end+0xb1288>
    2304:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    2308:	00001217 	andeq	r1, r0, r7, lsl r2
    230c:	ee195b06 	vnmls.f64	d5, d9, d6
    2310:	20000005 	andcs	r0, r0, r5
    2314:	000013bb 			; <UNDEFINED> instruction: 0x000013bb
    2318:	08080110 	stmdaeq	r8, {r4, r8}
    231c:	000007e4 	andeq	r0, r0, r4, ror #15
    2320:	000d050f 	andeq	r0, sp, pc, lsl #10
    2324:	200a0100 	andcs	r0, sl, r0, lsl #2
    2328:	000007e4 	andeq	r0, r0, r4, ror #15
    232c:	0df80f00 	ldcleq	15, cr0, [r8]
    2330:	0b010000 	bleq	42338 <_bss_end+0x312b8>
    2334:	0007e420 	andeq	lr, r7, r0, lsr #8
    2338:	450f0400 	strmi	r0, [pc, #-1024]	; 1f40 <CPSR_IRQ_INHIBIT+0x1ec0>
    233c:	0100000e 	tsteq	r0, lr
    2340:	00790e0c 	rsbseq	r0, r9, ip, lsl #28
    2344:	0f080000 	svceq	0x00080000
    2348:	00000e99 	muleq	r0, r9, lr
    234c:	e80a0d01 	stmda	sl, {r0, r8, sl, fp}
    2350:	0c000002 	stceq	0, cr0, [r0], {2}
    2354:	a2041900 	andge	r1, r4, #0, 18
    2358:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    235c:	00000dfd 	strdeq	r0, [r0], -sp
    2360:	07100104 	ldreq	r0, [r0, -r4, lsl #2]
    2364:	00000882 	andeq	r0, r0, r2, lsl #17
    2368:	00133e0f 	andseq	r3, r3, pc, lsl #28
    236c:	20130100 	andscs	r0, r3, r0, lsl #2
    2370:	000007e4 	andeq	r0, r0, r4, ror #15
    2374:	13802100 	orrne	r2, r0, #0, 2
    2378:	15010000 	strne	r0, [r1, #-0]
    237c:	000d0a20 	andeq	r0, sp, r0, lsr #20
    2380:	0007e400 	andeq	lr, r7, r0, lsl #8
    2384:	00081c00 	andeq	r1, r8, r0, lsl #24
    2388:	00082200 	andeq	r2, r8, r0, lsl #4
    238c:	08821100 	stmeq	r2, {r8, ip}
    2390:	14000000 	strne	r0, [r0], #-0
    2394:	00000dfd 	strdeq	r0, [r0], -sp
    2398:	20051801 	andcs	r1, r5, r1, lsl #16
    239c:	82000013 	andhi	r0, r0, #19
    23a0:	01000008 	tsteq	r0, r8
    23a4:	0000083b 	andeq	r0, r0, fp, lsr r8
    23a8:	00000841 	andeq	r0, r0, r1, asr #16
    23ac:	00088211 	andeq	r8, r8, r1, lsl r2
    23b0:	d8140000 	ldmdale	r4, {}	; <UNPREDICTABLE>
    23b4:	0100000e 	tsteq	r0, lr
    23b8:	11940b1a 	orrsne	r0, r4, sl, lsl fp
    23bc:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
    23c0:	5a010000 	bpl	423c8 <_bss_end+0x31348>
    23c4:	65000008 	strvs	r0, [r0, #-8]
    23c8:	11000008 	tstne	r0, r8
    23cc:	00000882 	andeq	r0, r0, r2, lsl #17
    23d0:	00007913 	andeq	r7, r0, r3, lsl r9
    23d4:	421b0000 	andsmi	r0, fp, #0
    23d8:	0100000f 	tsteq	r0, pc
    23dc:	10d30a1b 	sbcsne	r0, r3, fp, lsl sl
    23e0:	76010000 	strvc	r0, [r1], -r0
    23e4:	11000008 	tstne	r0, r8
    23e8:	00000882 	andeq	r0, r0, r2, lsl #17
    23ec:	00088813 	andeq	r8, r8, r3, lsl r8
    23f0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    23f4:	0007ea04 	andeq	lr, r7, r4, lsl #20
    23f8:	1d042200 	sfmne	f2, 4, [r4, #-0]
    23fc:	0000357e 	andeq	r3, r0, lr, ror r5
    2400:	ea1d2401 	b	74b40c <_bss_end+0x73a38c>
    2404:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    2408:	00001303 	andeq	r1, r0, r3, lsl #6
    240c:	00440107 	subeq	r0, r4, r7, lsl #2
    2410:	06070000 	streq	r0, [r7], -r0
    2414:	0008c70c 	andeq	ip, r8, ip, lsl #14
    2418:	6f4e1f00 	svcvs	0x004e1f00
    241c:	0b000070 	bleq	25e4 <CPSR_IRQ_INHIBIT+0x2564>
    2420:	00000f3d 	andeq	r0, r0, sp, lsr pc
    2424:	18960b01 	ldmne	r6, {r0, r8, r9, fp}
    2428:	0b020000 	bleq	82430 <_bss_end+0x713b0>
    242c:	00001145 	andeq	r1, r0, r5, asr #2
    2430:	103c0b03 	eorsne	r0, ip, r3, lsl #22
    2434:	00040000 	andeq	r0, r4, r0
    2438:	00109520 	andseq	r9, r0, r0, lsr #10
    243c:	22070500 	andcs	r0, r7, #0, 10
    2440:	0008f808 	andeq	pc, r8, r8, lsl #16
    2444:	00782300 	rsbseq	r2, r8, r0, lsl #6
    2448:	610e2407 	tstvs	lr, r7, lsl #8
    244c:	00000000 	andeq	r0, r0, r0
    2450:	07007923 	streq	r7, [r0, -r3, lsr #18]
    2454:	00610e25 	rsbeq	r0, r1, r5, lsr #28
    2458:	23020000 	movwcs	r0, #8192	; 0x2000
    245c:	00746573 	rsbseq	r6, r4, r3, ror r5
    2460:	440d2607 	strmi	r2, [sp], #-1543	; 0xfffff9f9
    2464:	04000000 	streq	r0, [r0], #-0
    2468:	08c70300 	stmiaeq	r7, {r8, r9}^
    246c:	12200000 	eorne	r0, r0, #0
    2470:	0100000e 	tsteq	r0, lr
    2474:	18082a07 	stmdane	r8, {r0, r1, r2, r9, fp, sp}
    2478:	23000009 	movwcs	r0, #9
    247c:	00646d63 	rsbeq	r6, r4, r3, ror #26
    2480:	96162c07 	ldrls	r2, [r6], -r7, lsl #24
    2484:	00000008 	andeq	r0, r0, r8
    2488:	0dd62000 	ldcleq	0, cr2, [r6]
    248c:	07020000 	streq	r0, [r2, -r0]
    2490:	09400836 	stmdbeq	r0, {r1, r2, r4, r5, fp}^
    2494:	b40f0000 	strlt	r0, [pc], #-0	; 249c <CPSR_IRQ_INHIBIT+0x241c>
    2498:	07000013 	smladeq	r0, r3, r0, r0
    249c:	08fd1c38 	ldmeq	sp!, {r3, r4, r5, sl, fp, ip}^
    24a0:	0f000000 	svceq	0x00000000
    24a4:	000012ec 	andeq	r1, r0, ip, ror #5
    24a8:	440d3907 	strmi	r3, [sp], #-2311	; 0xfffff6f9
    24ac:	01000000 	mrseq	r0, (UNDEF: 0)
    24b0:	09180300 	ldmdbeq	r8, {r8, r9}
    24b4:	73200000 	nopvc	{0}	; <UNPREDICTABLE>
    24b8:	08000011 	stmdaeq	r0, {r0, r4}
    24bc:	7a083d07 	bvc	2118e0 <_bss_end+0x200860>
    24c0:	0f000009 	svceq	0x00000009
    24c4:	000013b4 			; <UNDEFINED> instruction: 0x000013b4
    24c8:	fd1c3f07 	ldc2	15, cr3, [ip, #-28]	; 0xffffffe4
    24cc:	00000008 	andeq	r0, r0, r8
    24d0:	002a810f 	eoreq	r8, sl, pc, lsl #2
    24d4:	0e400700 	cdpeq	7, 4, cr0, cr0, cr0, {0}
    24d8:	00000061 	andeq	r0, r0, r1, rrx
    24dc:	0e620f01 	cdpeq	15, 6, cr0, cr2, cr1, {0}
    24e0:	42070000 	andmi	r0, r7, #0
    24e4:	0008c719 	andeq	ip, r8, r9, lsl r7
    24e8:	03000300 	movweq	r0, #768	; 0x300
    24ec:	00000945 	andeq	r0, r0, r5, asr #18
    24f0:	000ec020 	andeq	ip, lr, r0, lsr #32
    24f4:	46070b00 	strmi	r0, [r7], -r0, lsl #22
    24f8:	0009e208 	andeq	lr, r9, r8, lsl #4
    24fc:	13b40f00 			; <UNDEFINED> instruction: 0x13b40f00
    2500:	48070000 	stmdami	r7, {}	; <UNPREDICTABLE>
    2504:	0008fd1c 	andeq	pc, r8, ip, lsl sp	; <UNPREDICTABLE>
    2508:	78230000 	stmdavc	r3!, {}	; <UNPREDICTABLE>
    250c:	49070031 	stmdbmi	r7, {r0, r4, r5}
    2510:	0000610e 	andeq	r6, r0, lr, lsl #2
    2514:	79230100 	stmdbvc	r3!, {r8}
    2518:	49070031 	stmdbmi	r7, {r0, r4, r5}
    251c:	00006112 	andeq	r6, r0, r2, lsl r1
    2520:	77230300 	strvc	r0, [r3, -r0, lsl #6]!
    2524:	0e4a0700 	cdpeq	7, 4, cr0, cr10, cr0, {0}
    2528:	00000061 	andeq	r0, r0, r1, rrx
    252c:	00682305 	rsbeq	r2, r8, r5, lsl #6
    2530:	61114a07 	tstvs	r1, r7, lsl #20
    2534:	07000000 	streq	r0, [r0, -r0]
    2538:	000e930f 	andeq	r9, lr, pc, lsl #6
    253c:	0d4b0700 	stcleq	7, cr0, [fp, #-0]
    2540:	00000044 	andeq	r0, r0, r4, asr #32
    2544:	0e620f09 	cdpeq	15, 6, cr0, cr2, cr9, {0}
    2548:	4d070000 	stcmi	0, cr0, [r7, #-0]
    254c:	0000440d 	andeq	r4, r0, sp, lsl #8
    2550:	03000a00 	movweq	r0, #2560	; 0xa00
    2554:	0000097f 	andeq	r0, r0, pc, ror r9
    2558:	00079624 	andeq	r9, r7, r4, lsr #12
    255c:	12070200 	andne	r0, r7, #0, 4
    2560:	ff8c0305 			; <UNDEFINED> instruction: 0xff8c0305
    2564:	08250000 	stmdaeq	r5!, {}	; <UNPREDICTABLE>
    2568:	e8000012 	stmda	r0, {r1, r4}
    256c:	1c0000aa 	stcne	0, cr0, [r0], {170}	; 0xaa
    2570:	01000000 	mrseq	r0, (UNDEF: 0)
    2574:	023e269c 	eorseq	r2, lr, #156, 12	; 0x9c00000
    2578:	aa940000 	bge	fe502580 <_bss_end+0xfe4f1500>
    257c:	00540000 	subseq	r0, r4, r0
    2580:	9c010000 	stcls	0, cr0, [r1], {-0}
    2584:	00000a38 	andeq	r0, r0, r8, lsr sl
    2588:	00033827 	andeq	r3, r3, r7, lsr #16
    258c:	01660200 	cmneq	r6, r0, lsl #4
    2590:	00003801 	andeq	r3, r0, r1, lsl #16
    2594:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2598:	00073127 	andeq	r3, r7, r7, lsr #2
    259c:	01660200 	cmneq	r6, r0, lsl #4
    25a0:	00003801 	andeq	r3, r0, r1, lsl #16
    25a4:	70910200 	addsvc	r0, r1, r0, lsl #4
    25a8:	5c041c00 	stcpl	12, cr1, [r4], {-0}
    25ac:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    25b0:	0000026a 	andeq	r0, r0, sl, ror #4
    25b4:	00000a5c 	andeq	r0, r0, ip, asr sl
    25b8:	0000ac14 	andeq	sl, r0, r4, lsl ip
    25bc:	0000006c 	andeq	r0, r0, ip, rrx
    25c0:	0a789c01 	beq	1e295cc <_bss_end+0x1e1854c>
    25c4:	54150000 	ldrpl	r0, [r5], #-0
    25c8:	00005500 	andeq	r5, r0, r0, lsl #10
    25cc:	03292900 			; <UNDEFINED> instruction: 0x03292900
    25d0:	03050000 	movweq	r0, #20480	; 0x5000
    25d4:	91020000 	mrsls	r0, (UNDEF: 2)
    25d8:	68632a74 	stmdavs	r3!, {r2, r4, r5, r6, r9, fp, sp}^
    25dc:	21030072 	tstcs	r3, r2, ror r0
    25e0:	000a382f 	andeq	r3, sl, pc, lsr #16
    25e4:	70910200 	addsvc	r0, r1, r0, lsl #4
    25e8:	3f041c00 	svccc	0x00041c00
    25ec:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    25f0:	00000295 	muleq	r0, r5, r2
    25f4:	00000a9c 	muleq	r0, ip, sl
    25f8:	0000aba4 	andeq	sl, r0, r4, lsr #23
    25fc:	00000070 	andeq	r0, r0, r0, ror r0
    2600:	0ab89c01 	beq	fee2960c <_bss_end+0xfee1858c>
    2604:	54150000 	ldrpl	r0, [r5], #-0
    2608:	00003800 	andeq	r3, r0, r0, lsl #16
    260c:	03292900 			; <UNDEFINED> instruction: 0x03292900
    2610:	03050000 	movweq	r0, #20480	; 0x5000
    2614:	91020000 	mrsls	r0, (UNDEF: 2)
    2618:	68632a74 	stmdavs	r3!, {r2, r4, r5, r6, r9, fp, sp}^
    261c:	21030072 	tstcs	r3, r2, ror r0
    2620:	000a782f 	andeq	r7, sl, pc, lsr #16
    2624:	70910200 	addsvc	r0, r1, r0, lsl #4
    2628:	e9041c00 	stmdb	r4, {sl, fp, ip}
    262c:	28000005 	stmdacs	r0, {r0, r2}
    2630:	000002c0 	andeq	r0, r0, r0, asr #5
    2634:	00000adc 	ldrdeq	r0, [r0], -ip
    2638:	0000ab34 	andeq	sl, r0, r4, lsr fp
    263c:	00000070 	andeq	r0, r0, r0, ror r0
    2640:	0af89c01 	beq	ffe2964c <_bss_end+0xffe185cc>
    2644:	54150000 	ldrpl	r0, [r5], #-0
    2648:	00050a00 	andeq	r0, r5, r0, lsl #20
    264c:	03292900 			; <UNDEFINED> instruction: 0x03292900
    2650:	03050000 	movweq	r0, #20480	; 0x5000
    2654:	91020000 	mrsls	r0, (UNDEF: 2)
    2658:	68632a74 	stmdavs	r3!, {r2, r4, r5, r6, r9, fp, sp}^
    265c:	21030072 	tstcs	r3, r2, ror r0
    2660:	000ab82f 	andeq	fp, sl, pc, lsr #16
    2664:	70910200 	addsvc	r0, r1, r0, lsl #4
    2668:	074d2b00 	strbeq	r2, [sp, -r0, lsl #22]
    266c:	16020000 	strne	r0, [r2], -r0
    2670:	0b130601 	bleq	4c3e7c <_bss_end+0x4b2dfc>
    2674:	a5e00000 	strbge	r0, [r0, #0]!
    2678:	04b40000 	ldrteq	r0, [r4], #0
    267c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2680:	00000c6a 	andeq	r0, r0, sl, ror #24
    2684:	00032929 	andeq	r2, r3, r9, lsr #18
    2688:	00078600 	andeq	r8, r7, r0, lsl #12
    268c:	4c910200 	lfmmi	f0, 4, [r1], {0}
    2690:	000caf27 	andeq	sl, ip, r7, lsr #30
    2694:	01160200 	tsteq	r6, r0, lsl #4
    2698:	0004da3d 	andeq	sp, r4, sp, lsr sl
    269c:	48910200 	ldmmi	r1, {r9}
    26a0:	00129327 	andseq	r9, r2, r7, lsr #6
    26a4:	01160200 	tsteq	r6, r0, lsl #4
    26a8:	0000794d 	andeq	r7, r0, sp, asr #18
    26ac:	44910200 	ldrmi	r0, [r1], #512	; 0x200
    26b0:	646d632c 	strbtvs	r6, [sp], #-812	; 0xfffffcd4
    26b4:	011b0200 	tsteq	fp, r0, lsl #4
    26b8:	00089616 	andeq	r9, r8, r6, lsl r6
    26bc:	6d910200 	lfmvs	f0, 4, [r1]
    26c0:	0000482d 	andeq	r4, r0, sp, lsr #16
    26c4:	000b6900 	andeq	r6, fp, r0, lsl #18
    26c8:	6b702c00 	blvs	1c0d6d0 <_bss_end+0x1bfc650>
    26cc:	2b020074 	blcs	828a4 <_bss_end+0x71824>
    26d0:	0c6a2a01 			; <UNDEFINED> instruction: 0x0c6a2a01
    26d4:	91020000 	mrsls	r0, (UNDEF: 2)
    26d8:	602d0054 	eorvs	r0, sp, r4, asr r0
    26dc:	ab000000 	blge	26e4 <CPSR_IRQ_INHIBIT+0x2664>
    26e0:	2c00000b 	stccs	0, cr0, [r0], {11}
    26e4:	00746b70 	rsbseq	r6, r4, r0, ror fp
    26e8:	35013702 	strcc	r3, [r1, #-1794]	; 0xfffff8fe
    26ec:	00000c70 	andeq	r0, r0, r0, ror ip
    26f0:	2c5c9102 	ldfcsp	f1, [ip], {2}
    26f4:	00727470 	rsbseq	r7, r2, r0, ror r4
    26f8:	28013902 	stmdacs	r1, {r1, r8, fp, ip, sp}
    26fc:	00000c76 	andeq	r0, r0, r6, ror ip
    2700:	2e589102 	logcse	f1, f2
    2704:	0000a69c 	muleq	r0, ip, r6
    2708:	00000094 	muleq	r0, r4, r0
    270c:	0200692c 	andeq	r6, r0, #44, 18	; 0xb0000
    2710:	611b013b 	tstvs	fp, fp, lsr r1
    2714:	02000000 	andeq	r0, r0, #0
    2718:	00007691 	muleq	r0, r1, r6
    271c:	0000782f 	andeq	r7, r0, pc, lsr #16
    2720:	6b702c00 	blvs	1c0d728 <_bss_end+0x1bfc6a8>
    2724:	46020074 			; <UNDEFINED> instruction: 0x46020074
    2728:	0c7c2c01 	ldcleq	12, cr2, [ip], #-4
    272c:	91020000 	mrsls	r0, (UNDEF: 2)
    2730:	10123068 	andsne	r3, r2, r8, rrx
    2734:	48020000 	stmdami	r2, {}	; <UNPREDICTABLE>
    2738:	0c821c01 	stceq	12, cr1, [r2], {1}
    273c:	91020000 	mrsls	r0, (UNDEF: 2)
    2740:	a7603164 	strbge	r3, [r0, -r4, ror #2]!
    2744:	019c0000 	orrseq	r0, ip, r0
    2748:	0c1e0000 	ldceq	0, cr0, [lr], {-0}
    274c:	782c0000 	stmdavc	ip!, {}	; <UNPREDICTABLE>
    2750:	014c0200 	mrseq	r0, (UNDEF: 108)
    2754:	0000611f 	andeq	r6, r0, pc, lsl r1
    2758:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    275c:	00a7bc2e 	adceq	fp, r7, lr, lsr #24
    2760:	00013000 	andeq	r3, r1, r0
    2764:	00792c00 	rsbseq	r2, r9, r0, lsl #24
    2768:	23014e02 	movwcs	r4, #7682	; 0x1e02
    276c:	00000061 	andeq	r0, r0, r1, rrx
    2770:	2e729102 	expcss	f1, f2
    2774:	0000a818 	andeq	sl, r0, r8, lsl r8
    2778:	000000c4 	andeq	r0, r0, r4, asr #1
    277c:	736f702c 	cmnvc	pc, #44	; 0x2c
    2780:	01500200 	cmpeq	r0, r0, lsl #4
    2784:	00006d28 	andeq	r6, r0, r8, lsr #26
    2788:	60910200 	addsvs	r0, r1, r0, lsl #4
    278c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    2790:	0000a8fc 	strdeq	sl, [r0], -ip
    2794:	00000164 	andeq	r0, r0, r4, ror #2
    2798:	0200782c 	andeq	r7, r0, #44, 16	; 0x2c0000
    279c:	611f0158 	tstvs	pc, r8, asr r1	; <UNPREDICTABLE>
    27a0:	02000000 	andeq	r0, r0, #0
    27a4:	282e7091 	stmdacs	lr!, {r0, r4, r7, ip, sp, lr}
    27a8:	280000a9 	stmdacs	r0, {r0, r3, r5, r7}
    27ac:	2c000001 	stccs	0, cr0, [r0], {1}
    27b0:	5a020079 	bpl	8299c <_bss_end+0x7191c>
    27b4:	00612301 	rsbeq	r2, r1, r1, lsl #6
    27b8:	91020000 	mrsls	r0, (UNDEF: 2)
    27bc:	a9542e6e 	ldmdbge	r4, {r1, r2, r3, r5, r6, r9, sl, fp, sp}^
    27c0:	00ec0000 	rsceq	r0, ip, r0
    27c4:	702c0000 	eorvc	r0, ip, r0
    27c8:	0200736f 	andeq	r7, r0, #-1140850687	; 0xbc000001
    27cc:	6d28015c 	stfvss	f0, [r8, #-368]!	; 0xfffffe90
    27d0:	02000000 	andeq	r0, r0, #0
    27d4:	00006291 	muleq	r0, r1, r2
    27d8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    27dc:	00094004 	andeq	r4, r9, r4
    27e0:	7a041900 	bvc	108be8 <_bss_end+0xf7b68>
    27e4:	19000009 	stmdbne	r0, {r0, r3}
    27e8:	0008f804 	andeq	pc, r8, r4, lsl #16
    27ec:	e2041900 	and	r1, r4, #0, 18
    27f0:	19000009 	stmdbne	r0, {r0, r3}
    27f4:	00005004 	andeq	r5, r0, r4
    27f8:	07323200 	ldreq	r3, [r2, -r0, lsl #4]!
    27fc:	ed020000 	stc	0, cr0, [r2, #-0]
    2800:	000ca206 	andeq	sl, ip, r6, lsl #4
    2804:	00a3c800 	adceq	ip, r3, r0, lsl #16
    2808:	00021800 	andeq	r1, r2, r0, lsl #16
    280c:	3f9c0100 	svccc	0x009c0100
    2810:	2900000d 	stmdbcs	r0, {r0, r2, r3}
    2814:	00000329 	andeq	r0, r0, r9, lsr #6
    2818:	00000786 	andeq	r0, r0, r6, lsl #15
    281c:	7fbc9103 	svcvc	0x00bc9103
    2820:	02006933 	andeq	r6, r0, #835584	; 0xcc000
    2824:	003809f2 	ldrshteq	r0, [r8], -r2
    2828:	78340000 	ldmdavc	r4!, {}	; <UNPREDICTABLE>
    282c:	02000013 	andeq	r0, r0, #19
    2830:	3f130104 	svccc	0x00130104
    2834:	02000000 	andeq	r0, r0, #0
    2838:	56306891 			; <UNDEFINED> instruction: 0x56306891
    283c:	02000011 	andeq	r0, r0, #17
    2840:	3f0f0106 	svccc	0x000f0106
    2844:	02000000 	andeq	r0, r0, #0
    2848:	f0316491 			; <UNDEFINED> instruction: 0xf0316491
    284c:	f80000a3 			; <UNDEFINED> instruction: 0xf80000a3
    2850:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    2854:	3500000c 	strcc	r0, [r0, #-12]
    2858:	02006174 	andeq	r6, r0, #116, 2
    285c:	04e60ff6 	strbteq	r0, [r6], #4086	; 0xff6
    2860:	91020000 	mrsls	r0, (UNDEF: 2)
    2864:	1c2e006c 	stcne	0, cr0, [lr], #-432	; 0xfffffe50
    2868:	b80000a5 	stmdalt	r0, {r0, r2, r5, r7}
    286c:	2c000000 	stccs	0, cr0, [r0], {-0}
    2870:	0a020069 	beq	82a1c <_bss_end+0x7199c>
    2874:	00380e01 	eorseq	r0, r8, r1, lsl #28
    2878:	91020000 	mrsls	r0, (UNDEF: 2)
    287c:	a5342e74 	ldrge	r2, [r4, #-3700]!	; 0xfffff18c
    2880:	00900000 	addseq	r0, r0, r0
    2884:	742c0000 	strtvc	r0, [ip], #-0
    2888:	0c020061 	stceq	0, cr0, [r2], {97}	; 0x61
    288c:	04e60f01 	strbteq	r0, [r6], #3841	; 0xf01
    2890:	91020000 	mrsls	r0, (UNDEF: 2)
    2894:	a5642e60 	strbge	r2, [r4, #-3680]!	; 0xfffff1a0
    2898:	00480000 	subeq	r0, r8, r0
    289c:	6a2c0000 	bvs	b028a4 <_bss_end+0xaf1824>
    28a0:	010f0200 	mrseq	r0, (UNDEF: 47)
    28a4:	00003812 	andeq	r3, r0, r2, lsl r8
    28a8:	70910200 	addsvc	r0, r1, r0, lsl #4
    28ac:	00000000 	andeq	r0, r0, r0
    28b0:	00070836 	andeq	r0, r7, r6, lsr r8
    28b4:	06e20200 	strbteq	r0, [r2], r0, lsl #4
    28b8:	00000d59 	andeq	r0, r0, r9, asr sp
    28bc:	0000a280 	andeq	sl, r0, r0, lsl #5
    28c0:	00000148 	andeq	r0, r0, r8, asr #2
    28c4:	0d8f9c01 	stceq	12, cr9, [pc, #4]	; 28d0 <CPSR_IRQ_INHIBIT+0x2850>
    28c8:	29290000 	stmdbcs	r9!, {}	; <UNPREDICTABLE>
    28cc:	86000003 	strhi	r0, [r0], -r3
    28d0:	02000007 	andeq	r0, r0, #7
    28d4:	782a7491 	stmdavc	sl!, {r0, r4, r7, sl, ip, sp, lr}
    28d8:	2be20200 	blcs	ff8830e0 <_bss_end+0xff872060>
    28dc:	00000079 	andeq	r0, r0, r9, ror r0
    28e0:	2a709102 	bcs	1c26cf0 <_bss_end+0x1c15c70>
    28e4:	e2020079 	and	r0, r2, #121	; 0x79
    28e8:	00007937 	andeq	r7, r0, r7, lsr r9
    28ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    28f0:	7465732a 	strbtvc	r7, [r5], #-810	; 0xfffffcd6
    28f4:	3fe20200 	svccc	0x00e20200
    28f8:	000002e8 	andeq	r0, r0, r8, ror #5
    28fc:	006b9102 	rsbeq	r9, fp, r2, lsl #2
    2900:	0006e832 	andeq	lr, r6, r2, lsr r8
    2904:	06d30200 	ldrbeq	r0, [r3], r0, lsl #4
    2908:	00000da9 	andeq	r0, r0, r9, lsr #27
    290c:	0000a1b0 			; <UNDEFINED> instruction: 0x0000a1b0
    2910:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2914:	0dfa9c01 	ldcleq	12, cr9, [sl, #4]!
    2918:	29290000 	stmdbcs	r9!, {}	; <UNPREDICTABLE>
    291c:	86000003 	strhi	r0, [r0], -r3
    2920:	02000007 	andeq	r0, r0, #7
    2924:	2b376491 	blcs	ddbb70 <_bss_end+0xdcaaf0>
    2928:	02000011 	andeq	r0, r0, #17
    292c:	02e823d3 	rsceq	r2, r8, #1275068419	; 0x4c000003
    2930:	91020000 	mrsls	r0, (UNDEF: 2)
    2934:	0cfa3863 	ldcleq	8, cr3, [sl], #396	; 0x18c
    2938:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    293c:	00005013 	andeq	r5, r0, r3, lsl r0
    2940:	73910200 	orrsvc	r0, r1, #0, 4
    2944:	00115638 	andseq	r5, r1, r8, lsr r6
    2948:	0fda0200 	svceq	0x00da0200
    294c:	0000003f 	andeq	r0, r0, pc, lsr r0
    2950:	2e6c9102 	lgncse	f1, f2
    2954:	0000a228 	andeq	sl, r0, r8, lsr #4
    2958:	00000040 	andeq	r0, r0, r0, asr #32
    295c:	02006935 	andeq	r6, r0, #868352	; 0xd4000
    2960:	00380edc 	ldrsbteq	r0, [r8], -ip
    2964:	91020000 	mrsls	r0, (UNDEF: 2)
    2968:	36000074 			; <UNDEFINED> instruction: 0x36000074
    296c:	000006c9 	andeq	r0, r0, r9, asr #13
    2970:	1406ce02 	strne	ip, [r6], #-3586	; 0xfffff1fe
    2974:	8800000e 	stmdahi	r0, {r1, r2, r3}
    2978:	280000a1 	stmdacs	r0, {r0, r5, r7}
    297c:	01000000 	mrseq	r0, (UNDEF: 0)
    2980:	000e219c 	muleq	lr, ip, r1
    2984:	03292900 			; <UNDEFINED> instruction: 0x03292900
    2988:	07910000 	ldreq	r0, [r1, r0]
    298c:	91020000 	mrsls	r0, (UNDEF: 2)
    2990:	ae320074 	mrcge	0, 1, r0, cr2, cr4, {3}
    2994:	02000006 	andeq	r0, r0, #6
    2998:	0e3b06b8 	mrceq	6, 1, r0, cr11, cr8, {5}
    299c:	a0b40000 	adcsge	r0, r4, r0
    29a0:	00d40000 	sbcseq	r0, r4, r0
    29a4:	9c010000 	stcls	0, cr0, [r1], {-0}
    29a8:	00000e60 	andeq	r0, r0, r0, ror #28
    29ac:	00032929 	andeq	r2, r3, r9, lsr #18
    29b0:	00078600 	andeq	r8, r7, r0, lsl #12
    29b4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    29b8:	00a0dc2e 	adceq	sp, r0, lr, lsr #24
    29bc:	00006400 	andeq	r6, r0, r0, lsl #8
    29c0:	61743500 	cmnvs	r4, r0, lsl #10
    29c4:	0fbf0200 	svceq	0x00bf0200
    29c8:	000004e6 	andeq	r0, r0, r6, ror #9
    29cc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    29d0:	063c3200 	ldrteq	r3, [ip], -r0, lsl #4
    29d4:	ae020000 	cdpge	0, 0, cr0, cr2, cr0, {0}
    29d8:	000e7a06 	andeq	r7, lr, r6, lsl #20
    29dc:	00a02000 	adceq	r2, r0, r0
    29e0:	00009400 	andeq	r9, r0, r0, lsl #8
    29e4:	b39c0100 	orrslt	r0, ip, #0, 2
    29e8:	2900000e 	stmdbcs	r0, {r1, r2, r3}
    29ec:	00000329 	andeq	r0, r0, r9, lsr #6
    29f0:	00000786 	andeq	r0, r0, r6, lsl #15
    29f4:	2a649102 	bcs	1926e04 <_bss_end+0x1915d84>
    29f8:	00646d63 	rsbeq	r6, r4, r3, ror #26
    29fc:	0a31ae02 	beq	c6e20c <_bss_end+0xc5d18c>
    2a00:	02000005 	andeq	r0, r0, #5
    2a04:	8f376091 	svchi	0x00376091
    2a08:	0200000f 	andeq	r0, r0, #15
    2a0c:	00443eae 	subeq	r3, r4, lr, lsr #29
    2a10:	91020000 	mrsls	r0, (UNDEF: 2)
    2a14:	6174355f 	cmnvs	r4, pc, asr r5
    2a18:	0bb00200 	bleq	fec03220 <_bss_end+0xfebf21a0>
    2a1c:	000004e6 	andeq	r0, r0, r6, ror #9
    2a20:	00749102 	rsbseq	r9, r4, r2, lsl #2
    2a24:	00068532 	andeq	r8, r6, r2, lsr r5
    2a28:	060f0200 	streq	r0, [pc], -r0, lsl #4
    2a2c:	00000ecd 	andeq	r0, r0, sp, asr #29
    2a30:	000098ec 	andeq	r9, r0, ip, ror #17
    2a34:	00000734 	andeq	r0, r0, r4, lsr r7
    2a38:	10479c01 	subne	r9, r7, r1, lsl #24
    2a3c:	29290000 	stmdbcs	r9!, {}	; <UNPREDICTABLE>
    2a40:	86000003 	strhi	r0, [r0], -r3
    2a44:	03000007 	movweq	r0, #7
    2a48:	377eac91 			; <UNDEFINED> instruction: 0x377eac91
    2a4c:	00000c15 	andeq	r0, r0, r5, lsl ip
    2a50:	38210f02 	stmdacc	r1!, {r1, r8, r9, sl, fp}
    2a54:	03000000 	movweq	r0, #0
    2a58:	377ea891 			; <UNDEFINED> instruction: 0x377ea891
    2a5c:	00000bd5 	ldrdeq	r0, [r0], -r5
    2a60:	382c0f02 	stmdacc	ip!, {r1, r8, r9, sl, fp}
    2a64:	03000000 	movweq	r0, #0
    2a68:	317ea491 			; <UNDEFINED> instruction: 0x317ea491
    2a6c:	000099c8 	andeq	r9, r0, r8, asr #19
    2a70:	000000b8 	strheq	r0, [r0], -r8
    2a74:	00000f16 	andeq	r0, r0, r6, lsl pc
    2a78:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2a7c:	e60f2402 	str	r2, [pc], -r2, lsl #8
    2a80:	02000004 	andeq	r0, r0, #4
    2a84:	31007491 			; <UNDEFINED> instruction: 0x31007491
    2a88:	00009a80 	andeq	r9, r0, r0, lsl #21
    2a8c:	00000068 	andeq	r0, r0, r8, rrx
    2a90:	00000f32 	andeq	r0, r0, r2, lsr pc
    2a94:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2a98:	e60f3102 	str	r3, [pc], -r2, lsl #2
    2a9c:	02000004 	andeq	r0, r0, #4
    2aa0:	31007091 	swpcc	r7, r1, [r0]
    2aa4:	00009ae8 	andeq	r9, r0, r8, ror #21
    2aa8:	000000b8 	strheq	r0, [r0], -r8
    2aac:	00000f4e 	andeq	r0, r0, lr, asr #30
    2ab0:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2ab4:	e60f3b02 	str	r3, [pc], -r2, lsl #22
    2ab8:	02000004 	andeq	r0, r0, #4
    2abc:	31006c91 			; <UNDEFINED> instruction: 0x31006c91
    2ac0:	00009ba0 	andeq	r9, r0, r0, lsr #23
    2ac4:	00000064 	andeq	r0, r0, r4, rrx
    2ac8:	00000f6a 	andeq	r0, r0, sl, ror #30
    2acc:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2ad0:	e60f4802 	str	r4, [pc], -r2, lsl #16
    2ad4:	02000004 	andeq	r0, r0, #4
    2ad8:	31006891 			; <UNDEFINED> instruction: 0x31006891
    2adc:	00009c04 	andeq	r9, r0, r4, lsl #24
    2ae0:	000000b8 	strheq	r0, [r0], -r8
    2ae4:	00000f86 	andeq	r0, r0, r6, lsl #31
    2ae8:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2aec:	e60f5302 	str	r5, [pc], -r2, lsl #6
    2af0:	02000004 	andeq	r0, r0, #4
    2af4:	31006491 			; <UNDEFINED> instruction: 0x31006491
    2af8:	00009cbc 			; <UNDEFINED> instruction: 0x00009cbc
    2afc:	00000064 	andeq	r0, r0, r4, rrx
    2b00:	00000fa2 	andeq	r0, r0, r2, lsr #31
    2b04:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2b08:	e60f6002 	str	r6, [pc], -r2
    2b0c:	02000004 	andeq	r0, r0, #4
    2b10:	31006091 	swpcc	r6, r1, [r0]
    2b14:	00009d20 	andeq	r9, r0, r0, lsr #26
    2b18:	00000064 	andeq	r0, r0, r4, rrx
    2b1c:	00000fbe 			; <UNDEFINED> instruction: 0x00000fbe
    2b20:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2b24:	e60f6a02 	str	r6, [pc], -r2, lsl #20
    2b28:	02000004 	andeq	r0, r0, #4
    2b2c:	31005c91 			; <UNDEFINED> instruction: 0x31005c91
    2b30:	00009d84 	andeq	r9, r0, r4, lsl #27
    2b34:	00000064 	andeq	r0, r0, r4, rrx
    2b38:	00000fda 	ldrdeq	r0, [r0], -sl
    2b3c:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2b40:	e60f7402 	str	r7, [pc], -r2, lsl #8
    2b44:	02000004 	andeq	r0, r0, #4
    2b48:	31005891 			; <UNDEFINED> instruction: 0x31005891
    2b4c:	00009de8 	andeq	r9, r0, r8, ror #27
    2b50:	00000064 	andeq	r0, r0, r4, rrx
    2b54:	00000ff6 	strdeq	r0, [r0], -r6
    2b58:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2b5c:	e60f7e02 	str	r7, [pc], -r2, lsl #28
    2b60:	02000004 	andeq	r0, r0, #4
    2b64:	31005491 			; <UNDEFINED> instruction: 0x31005491
    2b68:	00009e4c 	andeq	r9, r0, ip, asr #28
    2b6c:	00000064 	andeq	r0, r0, r4, rrx
    2b70:	00001012 	andeq	r1, r0, r2, lsl r0
    2b74:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2b78:	e60f8802 	str	r8, [pc], -r2, lsl #16
    2b7c:	02000004 	andeq	r0, r0, #4
    2b80:	31005091 	swpcc	r5, r1, [r0]
    2b84:	00009eb0 			; <UNDEFINED> instruction: 0x00009eb0
    2b88:	00000064 	andeq	r0, r0, r4, rrx
    2b8c:	0000102e 	andeq	r1, r0, lr, lsr #32
    2b90:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2b94:	e60f9202 	str	r9, [pc], -r2, lsl #4
    2b98:	02000004 	andeq	r0, r0, #4
    2b9c:	2e004c91 	mcrcs	12, 0, r4, cr0, cr1, {4}
    2ba0:	00009f14 	andeq	r9, r0, r4, lsl pc
    2ba4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2ba8:	00617435 	rsbeq	r7, r1, r5, lsr r4
    2bac:	e60f9c02 	str	r9, [pc], -r2, lsl #24
    2bb0:	02000004 	andeq	r0, r0, #4
    2bb4:	00004891 	muleq	r0, r1, r8
    2bb8:	00066139 	andeq	r6, r6, r9, lsr r1
    2bbc:	01090200 	mrseq	r0, R9_fiq
    2bc0:	00001058 	andeq	r1, r0, r8, asr r0
    2bc4:	00106e00 	andseq	r6, r0, r0, lsl #28
    2bc8:	03293a00 			; <UNDEFINED> instruction: 0x03293a00
    2bcc:	07860000 	streq	r0, [r6, r0]
    2bd0:	693b0000 	ldmdbvs	fp!, {}	; <UNPREDICTABLE>
    2bd4:	02006332 	andeq	r6, r0, #-939524096	; 0xc8000000
    2bd8:	07742a09 	ldrbeq	r2, [r4, -r9, lsl #20]!
    2bdc:	3c000000 	stccc	0, cr0, [r0], {-0}
    2be0:	00001047 	andeq	r1, r0, r7, asr #32
    2be4:	00000f55 	andeq	r0, r0, r5, asr pc
    2be8:	00001089 	andeq	r1, r0, r9, lsl #1
    2bec:	00009888 	andeq	r9, r0, r8, lsl #17
    2bf0:	00000064 	andeq	r0, r0, r4, rrx
    2bf4:	109a9c01 	addsne	r9, sl, r1, lsl #24
    2bf8:	583d0000 	ldmdapl	sp!, {}	; <UNPREDICTABLE>
    2bfc:	02000010 	andeq	r0, r0, #16
    2c00:	613d7491 	teqvs	sp, r1	; <illegal shifter operand>
    2c04:	02000010 	andeq	r0, r0, #16
    2c08:	3e007091 	mcrcc	0, 0, r7, cr0, cr1, {4}
    2c0c:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    2c10:	8b0d3d01 	blhi	35201c <_bss_end+0x340f9c>
    2c14:	0400000e 	streq	r0, [r0], #-14
    2c18:	300000ab 	andcc	r0, r0, fp, lsr #1
    2c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c20:	00702a9c 			; <UNDEFINED> instruction: 0x00702a9c
    2c24:	88233d01 	stmdahi	r3!, {r0, r8, sl, fp, ip, sp}
    2c28:	02000008 	andeq	r0, r0, #8
    2c2c:	793f7491 	ldmdbvc	pc!, {r0, r4, r7, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2c30:	02000000 	andeq	r0, r0, #0
    2c34:	00007091 	muleq	r0, r1, r0
    2c38:	00000537 	andeq	r0, r0, r7, lsr r5
    2c3c:	0cda0004 	ldcleq	0, cr0, [sl], {4}
    2c40:	01040000 	mrseq	r0, (UNDEF: 4)
    2c44:	00000061 	andeq	r0, r0, r1, rrx
    2c48:	00145904 	andseq	r5, r4, r4, lsl #18
    2c4c:	00002600 	andeq	r2, r0, r0, lsl #12
    2c50:	00ac8000 	adceq	r8, ip, r0
    2c54:	00026400 	andeq	r6, r2, r0, lsl #8
    2c58:	00139800 	andseq	r9, r3, r0, lsl #16
    2c5c:	08010200 	stmdaeq	r1, {r9}
    2c60:	00000570 	andeq	r0, r0, r0, ror r5
    2c64:	96050202 	strls	r0, [r5], -r2, lsl #4
    2c68:	03000005 	movweq	r0, #5
    2c6c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2c70:	7f040074 	svcvc	0x00040074
    2c74:	02000009 	andeq	r0, r0, #9
    2c78:	004b0707 	subeq	r0, fp, r7, lsl #14
    2c7c:	3a050000 	bcc	142c84 <_bss_end+0x131c04>
    2c80:	02000000 	andeq	r0, r0, #0
    2c84:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
    2c88:	02020000 	andeq	r0, r2, #0
    2c8c:	0003d907 	andeq	sp, r3, r7, lsl #18
    2c90:	05e10400 	strbeq	r0, [r1, #1024]!	; 0x400
    2c94:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2c98:	00006a07 	andeq	r6, r0, r7, lsl #20
    2c9c:	00590500 	subseq	r0, r9, r0, lsl #10
    2ca0:	04020000 	streq	r0, [r2], #-0
    2ca4:	0040ee07 	subeq	lr, r0, r7, lsl #28
    2ca8:	006a0500 	rsbeq	r0, sl, r0, lsl #10
    2cac:	68060000 	stmdavs	r6, {}	; <UNPREDICTABLE>
    2cb0:	03006c61 	movweq	r6, #3169	; 0xc61
    2cb4:	01300b05 	teqeq	r0, r5, lsl #22
    2cb8:	84070000 	strhi	r0, [r7], #-0
    2cbc:	03000004 	movweq	r0, #4
    2cc0:	00711907 	rsbseq	r1, r1, r7, lsl #18
    2cc4:	b2800000 	addlt	r0, r0, #0
    2cc8:	c9070ee6 	stmdbgt	r7, {r1, r2, r5, r6, r7, r9, sl, fp}
    2ccc:	03000005 	movweq	r0, #5
    2cd0:	013c1a0a 	teqeq	ip, sl, lsl #20
    2cd4:	00000000 	andeq	r0, r0, r0
    2cd8:	4f072000 	svcmi	0x00072000
    2cdc:	03000004 	movweq	r0, #4
    2ce0:	013c1a0d 	teqeq	ip, sp, lsl #20
    2ce4:	00000000 	andeq	r0, r0, r0
    2ce8:	87082020 	strhi	r2, [r8, -r0, lsr #32]
    2cec:	03000005 	movweq	r0, #5
    2cf0:	00651510 	rsbeq	r1, r5, r0, lsl r5
    2cf4:	07360000 	ldreq	r0, [r6, -r0]!
    2cf8:	00000370 	andeq	r0, r0, r0, ror r3
    2cfc:	3c1a4203 	lfmcc	f4, 4, [sl], {3}
    2d00:	00000001 	andeq	r0, r0, r1
    2d04:	07202150 			; <UNDEFINED> instruction: 0x07202150
    2d08:	00000347 	andeq	r0, r0, r7, asr #6
    2d0c:	3c1a7103 	ldfccs	f7, [sl], {3}
    2d10:	00000001 	andeq	r0, r0, r1
    2d14:	072000b2 			; <UNDEFINED> instruction: 0x072000b2
    2d18:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    2d1c:	3c1aa403 	cfldrscc	mvf10, [sl], {3}
    2d20:	00000001 	andeq	r0, r0, r1
    2d24:	072000b4 			; <UNDEFINED> instruction: 0x072000b4
    2d28:	00000361 	andeq	r0, r0, r1, ror #6
    2d2c:	3c1ab303 	ldccc	3, cr11, [sl], {3}
    2d30:	00000001 	andeq	r0, r0, r1
    2d34:	07201040 	streq	r1, [r0, -r0, asr #32]!
    2d38:	0000032e 	andeq	r0, r0, lr, lsr #6
    2d3c:	3c1abe03 	ldccc	14, cr11, [sl], {3}
    2d40:	00000001 	andeq	r0, r0, r1
    2d44:	07202050 			; <UNDEFINED> instruction: 0x07202050
    2d48:	000003ec 	andeq	r0, r0, ip, ror #7
    2d4c:	3c1abf03 	ldccc	15, cr11, [sl], {3}
    2d50:	00000001 	andeq	r0, r0, r1
    2d54:	07208040 	streq	r8, [r0, -r0, asr #32]!
    2d58:	00000459 	andeq	r0, r0, r9, asr r4
    2d5c:	3c1ac003 	ldccc	0, cr12, [sl], {3}
    2d60:	00000001 	andeq	r0, r0, r1
    2d64:	00208050 	eoreq	r8, r0, r0, asr r0
    2d68:	00008209 	andeq	r8, r0, r9, lsl #4
    2d6c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2d70:	000040e9 	andeq	r4, r0, r9, ror #1
    2d74:	00013505 	andeq	r3, r1, r5, lsl #10
    2d78:	00920900 	addseq	r0, r2, r0, lsl #18
    2d7c:	a2090000 	andge	r0, r9, #0
    2d80:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2d84:	000000b2 	strheq	r0, [r0], -r2
    2d88:	0000bf09 	andeq	fp, r0, r9, lsl #30
    2d8c:	00cf0900 	sbceq	r0, pc, r0, lsl #18
    2d90:	df090000 	svcle	0x00090000
    2d94:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2d98:	000000ef 	andeq	r0, r0, pc, ror #1
    2d9c:	0000ff09 	andeq	pc, r0, r9, lsl #30
    2da0:	010f0900 	tsteq	pc, r0, lsl #18
    2da4:	1f090000 	svcne	0x00090000
    2da8:	02000001 	andeq	r0, r0, #1
    2dac:	40a50201 	adcmi	r0, r5, r1, lsl #4
    2db0:	b40a0000 	strlt	r0, [sl], #-0
    2db4:	10000014 	andne	r0, r0, r4, lsl r0
    2db8:	7f070704 	svcvc	0x00070704
    2dbc:	0b000002 	bleq	2dcc <CPSR_IRQ_INHIBIT+0x2d4c>
    2dc0:	0000168d 	andeq	r1, r0, sp, lsl #13
    2dc4:	590e0b04 	stmdbpl	lr, {r2, r8, r9, fp}
    2dc8:	00000000 	andeq	r0, r0, r0
    2dcc:	0015230b 	andseq	r2, r5, fp, lsl #6
    2dd0:	0e0d0400 	cfcpyseq	mvf0, mvf13
    2dd4:	00000059 	andeq	r0, r0, r9, asr r0
    2dd8:	15850b04 	strne	r0, [r5, #2820]	; 0xb04
    2ddc:	0f040000 	svceq	0x00040000
    2de0:	0000590e 	andeq	r5, r0, lr, lsl #18
    2de4:	620b0800 	andvs	r0, fp, #0, 16
    2de8:	04000007 	streq	r0, [r0], #-7
    2dec:	01730a12 	cmneq	r3, r2, lsl sl
    2df0:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    2df4:	000014b4 			; <UNDEFINED> instruction: 0x000014b4
    2df8:	4d051504 	cfstr32mi	mvfx1, [r5, #-16]
    2dfc:	84000015 	strhi	r0, [r0], #-21	; 0xffffffeb
    2e00:	01000002 	tsteq	r0, r2
    2e04:	000001d4 	ldrdeq	r0, [r0], -r4
    2e08:	000001e9 	andeq	r0, r0, r9, ror #3
    2e0c:	0002840d 	andeq	r8, r2, sp, lsl #8
    2e10:	00590e00 	subseq	r0, r9, r0, lsl #28
    2e14:	590e0000 	stmdbpl	lr, {}	; <UNPREDICTABLE>
    2e18:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2e1c:	00000059 	andeq	r0, r0, r9, asr r0
    2e20:	0a1d0c00 	beq	745e28 <_bss_end+0x734da8>
    2e24:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    2e28:	0015fd0a 	andseq	pc, r5, sl, lsl #26
    2e2c:	00017300 	andeq	r7, r1, r0, lsl #6
    2e30:	02020100 	andeq	r0, r2, #0, 2
    2e34:	02080000 	andeq	r0, r8, #0
    2e38:	840d0000 	strhi	r0, [sp], #-0
    2e3c:	00000002 	andeq	r0, r0, r2
    2e40:	0009aa0f 	andeq	sl, r9, pc, lsl #20
    2e44:	0a1a0400 	beq	683e4c <_bss_end+0x672dcc>
    2e48:	00001568 	andeq	r1, r0, r8, ror #10
    2e4c:	00021d01 	andeq	r1, r2, r1, lsl #26
    2e50:	00022300 	andeq	r2, r2, r0, lsl #6
    2e54:	02840d00 	addeq	r0, r4, #0, 26
    2e58:	0c000000 	stceq	0, cr0, [r0], {-0}
    2e5c:	0000073c 	andeq	r0, r0, ip, lsr r7
    2e60:	370a1c04 	strcc	r1, [sl, -r4, lsl #24]
    2e64:	73000014 	movwvc	r0, #20
    2e68:	01000001 	tsteq	r0, r1
    2e6c:	0000023c 	andeq	r0, r0, ip, lsr r2
    2e70:	00000242 	andeq	r0, r0, r2, asr #4
    2e74:	00028a0d 	andeq	r8, r2, sp, lsl #20
    2e78:	980f0000 	stmdals	pc, {}	; <UNPREDICTABLE>
    2e7c:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    2e80:	152d0a1f 	strne	r0, [sp, #-2591]!	; 0xfffff5e1
    2e84:	57010000 	strpl	r0, [r1, -r0]
    2e88:	62000002 	andvs	r0, r0, #2
    2e8c:	0d000002 	stceq	0, cr0, [r0, #-8]
    2e90:	00000284 	andeq	r0, r0, r4, lsl #5
    2e94:	0001730e 	andeq	r7, r1, lr, lsl #6
    2e98:	98100000 	ldmdals	r0, {}	; <UNPREDICTABLE>
    2e9c:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    2ea0:	15900a21 	ldrne	r0, [r0, #2593]	; 0xa21
    2ea4:	73010000 	movwvc	r0, #4096	; 0x1000
    2ea8:	0d000002 	stceq	0, cr0, [r0, #-8]
    2eac:	00000284 	andeq	r0, r0, r4, lsl #5
    2eb0:	00003a0e 	andeq	r3, r0, lr, lsl #20
    2eb4:	05000000 	streq	r0, [r0, #-0]
    2eb8:	0000017a 	andeq	r0, r0, sl, ror r1
    2ebc:	017a0411 	cmneq	sl, r1, lsl r4
    2ec0:	04110000 	ldreq	r0, [r1], #-0
    2ec4:	0000027f 	andeq	r0, r0, pc, ror r2
    2ec8:	0016e812 	andseq	lr, r6, r2, lsl r8
    2ecc:	18240400 	stmdane	r4!, {sl}
    2ed0:	0000017a 	andeq	r0, r0, sl, ror r1
    2ed4:	0015d20a 	andseq	sp, r5, sl, lsl #4
    2ed8:	07050200 	streq	r0, [r5, -r0, lsl #4]
    2edc:	00038307 	andeq	r8, r3, r7, lsl #6
    2ee0:	07620b00 	strbeq	r0, [r2, -r0, lsl #22]!
    2ee4:	0b050000 	bleq	142eec <_bss_end+0x131e6c>
    2ee8:	0001730a 	andeq	r7, r1, sl, lsl #6
    2eec:	ca0b0000 	bgt	2c2ef4 <_bss_end+0x2b1e74>
    2ef0:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    2ef4:	00250a0d 	eoreq	r0, r5, sp, lsl #20
    2ef8:	13010000 	movwne	r0, #4096	; 0x1000
    2efc:	00001619 	andeq	r1, r0, r9, lsl r6
    2f00:	981a1005 	ldmdals	sl, {r0, r2, ip}
    2f04:	0c000003 	stceq	0, cr0, [r0], {3}
    2f08:	000015d2 	ldrdeq	r1, [r0], -r2
    2f0c:	b0051305 	andlt	r1, r5, r5, lsl #6
    2f10:	9d000015 	stcls	0, cr0, [r0, #-84]	; 0xffffffac
    2f14:	01000003 	tsteq	r0, r3
    2f18:	000002e8 	andeq	r0, r0, r8, ror #5
    2f1c:	000002ee 	andeq	r0, r0, lr, ror #5
    2f20:	00039d0d 	andeq	r9, r3, sp, lsl #26
    2f24:	1d0c0000 	stcne	0, cr0, [ip, #-0]
    2f28:	0500000a 	streq	r0, [r0, #-10]
    2f2c:	16a10a16 	ssatne	r0, #2, r6, lsl #20
    2f30:	01730000 	cmneq	r3, r0
    2f34:	07010000 	streq	r0, [r1, -r0]
    2f38:	0d000003 	stceq	0, cr0, [r0, #-12]
    2f3c:	0d000003 	stceq	0, cr0, [r0, #-12]
    2f40:	0000039d 	muleq	r0, sp, r3
    2f44:	09aa0f00 	stmibeq	sl!, {r8, r9, sl, fp}
    2f48:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
    2f4c:	0015050a 	andseq	r0, r5, sl, lsl #10
    2f50:	03220100 			; <UNDEFINED> instruction: 0x03220100
    2f54:	03280000 			; <UNDEFINED> instruction: 0x03280000
    2f58:	9d0d0000 	stcls	0, cr0, [sp, #-0]
    2f5c:	00000003 	andeq	r0, r0, r3
    2f60:	00073c0c 	andeq	r3, r7, ip, lsl #24
    2f64:	0a1a0500 	beq	68436c <_bss_end+0x6732ec>
    2f68:	000014e2 	andeq	r1, r0, r2, ror #9
    2f6c:	00000173 	andeq	r0, r0, r3, ror r1
    2f70:	00034101 	andeq	r4, r3, r1, lsl #2
    2f74:	00034700 	andeq	r4, r3, r0, lsl #14
    2f78:	03a80d00 			; <UNDEFINED> instruction: 0x03a80d00
    2f7c:	0f000000 	svceq	0x00000000
    2f80:	00001cdd 	ldrdeq	r1, [r0], -sp
    2f84:	480a1d05 	stmdami	sl, {r0, r2, r8, sl, fp, ip}
    2f88:	01000016 	tsteq	r0, r6, lsl r0
    2f8c:	0000035c 	andeq	r0, r0, ip, asr r3
    2f90:	00000367 	andeq	r0, r0, r7, ror #6
    2f94:	00039d0d 	andeq	r9, r3, sp, lsl #26
    2f98:	00250e00 	eoreq	r0, r5, r0, lsl #28
    2f9c:	14000000 	strne	r0, [r0], #-0
    2fa0:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2fa4:	c40a1f05 	strgt	r1, [sl], #-3845	; 0xfffff0fb
    2fa8:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    2fac:	01000000 	mrseq	r0, (UNDEF: 0)
    2fb0:	0000037c 	andeq	r0, r0, ip, ror r3
    2fb4:	0003a80d 	andeq	sl, r3, sp, lsl #16
    2fb8:	05000000 	streq	r0, [r0, #-0]
    2fbc:	0000029c 	muleq	r0, ip, r2
    2fc0:	00004615 	andeq	r4, r0, r5, lsl r6
    2fc4:	00039800 	andeq	r9, r3, r0, lsl #16
    2fc8:	006a1600 	rsbeq	r1, sl, r0, lsl #12
    2fcc:	005f0000 	subseq	r0, pc, r0
    2fd0:	00038805 	andeq	r8, r3, r5, lsl #16
    2fd4:	9c041100 	stflss	f1, [r4], {-0}
    2fd8:	05000002 	streq	r0, [r0, #-2]
    2fdc:	0000039d 	muleq	r0, sp, r3
    2fe0:	03830411 	orreq	r0, r3, #285212672	; 0x11000000
    2fe4:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
    2fe8:	12000003 	andne	r0, r0, #3
    2fec:	00001637 	andeq	r1, r0, r7, lsr r6
    2ff0:	9c192205 	lfmls	f2, 4, [r9], {5}
    2ff4:	17000002 	strne	r0, [r0, -r2]
    2ff8:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    2ffc:	05120301 	ldreq	r0, [r2, #-769]	; 0xfffffcff
    3000:	00ffa003 	rscseq	sl, pc, r3
    3004:	02c31800 	sbceq	r1, r3, #0, 16
    3008:	15010000 	strne	r0, [r1, #-0]
    300c:	0016660f 	andseq	r6, r6, pc, lsl #12
    3010:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    3014:	190000f8 	stmdbne	r0, {r3, r4, r5, r6, r7}
    3018:	00001628 	andeq	r1, r0, r8, lsr #12
    301c:	0000aec8 	andeq	sl, r0, r8, asr #29
    3020:	0000001c 	andeq	r0, r0, ip, lsl r0
    3024:	3e1a9c01 	cdpcc	12, 1, cr9, cr10, cr1, {0}
    3028:	7c000002 	stcvc	0, cr0, [r0], {2}
    302c:	4c0000ae 	stcmi	0, cr0, [r0], {174}	; 0xae
    3030:	01000000 	mrseq	r0, (UNDEF: 0)
    3034:	0004209c 	muleq	r4, ip, r0
    3038:	03381b00 	teqeq	r8, #0, 22
    303c:	b4010000 	strlt	r0, [r1], #-0
    3040:	00003301 	andeq	r3, r0, r1, lsl #6
    3044:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3048:	0007311b 	andeq	r3, r7, fp, lsl r1
    304c:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
    3050:	00000033 	andeq	r0, r0, r3, lsr r0
    3054:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3058:	0003671c 	andeq	r6, r3, ip, lsl r7
    305c:	06ae0100 	strteq	r0, [lr], r0, lsl #2
    3060:	0000043a 	andeq	r0, r0, sl, lsr r4
    3064:	0000ae34 	andeq	sl, r0, r4, lsr lr
    3068:	00000048 	andeq	r0, r0, r8, asr #32
    306c:	04479c01 	strbeq	r9, [r7], #-3073	; 0xfffff3ff
    3070:	291d0000 	ldmdbcs	sp, {}	; <UNPREDICTABLE>
    3074:	ae000003 	cdpge	0, 0, cr0, cr0, cr3, {0}
    3078:	02000003 	andeq	r0, r0, #3
    307c:	1e007491 	mcrne	4, 0, r7, cr0, cr1, {4}
    3080:	00000347 	andeq	r0, r0, r7, asr #6
    3084:	61069f01 	tstvs	r6, r1, lsl #30
    3088:	a0000004 	andge	r0, r0, r4
    308c:	940000ad 	strls	r0, [r0], #-173	; 0xffffff53
    3090:	01000000 	mrseq	r0, (UNDEF: 0)
    3094:	00048a9c 	muleq	r4, ip, sl
    3098:	03291d00 			; <UNDEFINED> instruction: 0x03291d00
    309c:	03a30000 			; <UNDEFINED> instruction: 0x03a30000
    30a0:	91020000 	mrsls	r0, (UNDEF: 2)
    30a4:	00631f6c 	rsbeq	r1, r3, ip, ror #30
    30a8:	25239f01 	strcs	r9, [r3, #-3841]!	; 0xfffff0ff
    30ac:	02000000 	andeq	r0, r0, #0
    30b0:	69206b91 	stmdbvs	r0!, {r0, r4, r7, r8, r9, fp, sp, lr}
    30b4:	01007864 	tsteq	r0, r4, ror #16
    30b8:	003a0da4 	eorseq	r0, sl, r4, lsr #27
    30bc:	91020000 	mrsls	r0, (UNDEF: 2)
    30c0:	281c0077 	ldmdacs	ip, {r0, r1, r2, r4, r5, r6}
    30c4:	01000003 	tsteq	r0, r3
    30c8:	04a4069a 	strteq	r0, [r4], #1690	; 0x69a
    30cc:	ad780000 	ldclge	0, cr0, [r8, #-0]
    30d0:	00280000 	eoreq	r0, r8, r0
    30d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    30d8:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
    30dc:	0003291d 	andeq	r2, r3, sp, lsl r9
    30e0:	0003ae00 	andeq	sl, r3, r0, lsl #28
    30e4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    30e8:	030d1e00 	movweq	r1, #56832	; 0xde00
    30ec:	90010000 	andls	r0, r1, r0
    30f0:	0004cb06 	andeq	ip, r4, r6, lsl #22
    30f4:	00ad2800 	adceq	r2, sp, r0, lsl #16
    30f8:	00005000 	andeq	r5, r0, r0
    30fc:	d89c0100 	ldmle	ip, {r8}
    3100:	1d000004 	stcne	0, cr0, [r0, #-16]
    3104:	00000329 	andeq	r0, r0, r9, lsr #6
    3108:	000003a3 	andeq	r0, r0, r3, lsr #7
    310c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3110:	0002ee1e 	andeq	lr, r2, lr, lsl lr
    3114:	06830100 	streq	r0, [r3], r0, lsl #2
    3118:	000004f2 	strdeq	r0, [r0], -r2
    311c:	0000acbc 			; <UNDEFINED> instruction: 0x0000acbc
    3120:	0000006c 	andeq	r0, r0, ip, rrx
    3124:	04ff9c01 	ldrbteq	r9, [pc], #3073	; 312c <CPSR_IRQ_INHIBIT+0x30ac>
    3128:	291d0000 	ldmdbcs	sp, {}	; <UNPREDICTABLE>
    312c:	a3000003 	movwge	r0, #3
    3130:	02000003 	andeq	r0, r0, #3
    3134:	21007491 			; <UNDEFINED> instruction: 0x21007491
    3138:	000002cf 	andeq	r0, r0, pc, asr #5
    313c:	10017c01 	andne	r7, r1, r1, lsl #24
    3140:	00000005 	andeq	r0, r0, r5
    3144:	0000051a 	andeq	r0, r0, sl, lsl r5
    3148:	00032922 	andeq	r2, r3, r2, lsr #18
    314c:	0003a300 	andeq	sl, r3, r0, lsl #6
    3150:	ff230000 			; <UNDEFINED> instruction: 0xff230000
    3154:	e3000004 	movw	r0, #4
    3158:	31000015 	tstcc	r0, r5, lsl r0
    315c:	80000005 	andhi	r0, r0, r5
    3160:	3c0000ac 	stccc	0, cr0, [r0], {172}	; 0xac
    3164:	01000000 	mrseq	r0, (UNDEF: 0)
    3168:	0510249c 	ldreq	r2, [r0, #-1180]	; 0xfffffb64
    316c:	91020000 	mrsls	r0, (UNDEF: 2)
    3170:	02000074 	andeq	r0, r0, #116	; 0x74
    3174:	04000007 	streq	r0, [r0], #-7
    3178:	000f2600 	andeq	r2, pc, r0, lsl #12
    317c:	61010400 	tstvs	r1, r0, lsl #8
    3180:	04000000 	streq	r0, [r0], #-0
    3184:	0000170f 	andeq	r1, r0, pc, lsl #14
    3188:	00000026 	andeq	r0, r0, r6, lsr #32
    318c:	0000aee4 	andeq	sl, r0, r4, ror #29
    3190:	000005c4 	andeq	r0, r0, r4, asr #11
    3194:	000015a7 	andeq	r1, r0, r7, lsr #11
    3198:	70080102 	andvc	r0, r8, r2, lsl #2
    319c:	02000005 	andeq	r0, r0, #5
    31a0:	05960502 	ldreq	r0, [r6, #1282]	; 0x502
    31a4:	04030000 	streq	r0, [r3], #-0
    31a8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    31ac:	00330400 	eorseq	r0, r3, r0, lsl #8
    31b0:	7f050000 	svcvc	0x00050000
    31b4:	02000009 	andeq	r0, r0, #9
    31b8:	004b0707 	subeq	r0, fp, r7, lsl #14
    31bc:	01020000 	mrseq	r0, (UNDEF: 2)
    31c0:	00056708 	andeq	r6, r5, r8, lsl #14
    31c4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    31c8:	000003d9 	ldrdeq	r0, [r0], -r9
    31cc:	0005e105 	andeq	lr, r5, r5, lsl #2
    31d0:	07090200 	streq	r0, [r9, -r0, lsl #4]
    31d4:	0000006a 	andeq	r0, r0, sl, rrx
    31d8:	00005906 	andeq	r5, r0, r6, lsl #18
    31dc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    31e0:	000040ee 	andeq	r4, r0, lr, ror #1
    31e4:	00006a06 	andeq	r6, r0, r6, lsl #20
    31e8:	006a0400 	rsbeq	r0, sl, r0, lsl #8
    31ec:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    31f0:	03006c61 	movweq	r6, #3169	; 0xc61
    31f4:	01350b05 	teqeq	r5, r5, lsl #22
    31f8:	84080000 	strhi	r0, [r8], #-0
    31fc:	03000004 	movweq	r0, #4
    3200:	00711907 	rsbseq	r1, r1, r7, lsl #18
    3204:	b2800000 	addlt	r0, r0, #0
    3208:	c9080ee6 	stmdbgt	r8, {r1, r2, r5, r6, r7, r9, sl, fp}
    320c:	03000005 	movweq	r0, #5
    3210:	01411a0a 	cmpeq	r1, sl, lsl #20
    3214:	00000000 	andeq	r0, r0, r0
    3218:	4f082000 	svcmi	0x00082000
    321c:	03000004 	movweq	r0, #4
    3220:	01411a0d 	cmpeq	r1, sp, lsl #20
    3224:	00000000 	andeq	r0, r0, r0
    3228:	87092020 	strhi	r2, [r9, -r0, lsr #32]
    322c:	03000005 	movweq	r0, #5
    3230:	00651510 	rsbeq	r1, r5, r0, lsl r5
    3234:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    3238:	00000370 	andeq	r0, r0, r0, ror r3
    323c:	411a4203 	tstmi	sl, r3, lsl #4
    3240:	00000001 	andeq	r0, r0, r1
    3244:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    3248:	00000347 	andeq	r0, r0, r7, asr #6
    324c:	411a7103 	tstmi	sl, r3, lsl #2
    3250:	00000001 	andeq	r0, r0, r1
    3254:	082000b2 	stmdaeq	r0!, {r1, r4, r5, r7}
    3258:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    325c:	411aa403 	tstmi	sl, r3, lsl #8
    3260:	00000001 	andeq	r0, r0, r1
    3264:	082000b4 	stmdaeq	r0!, {r2, r4, r5, r7}
    3268:	00000361 	andeq	r0, r0, r1, ror #6
    326c:	411ab303 	tstmi	sl, r3, lsl #6
    3270:	00000001 	andeq	r0, r0, r1
    3274:	08201040 	stmdaeq	r0!, {r6, ip}
    3278:	0000032e 	andeq	r0, r0, lr, lsr #6
    327c:	411abe03 	tstmi	sl, r3, lsl #28
    3280:	00000001 	andeq	r0, r0, r1
    3284:	08202050 	stmdaeq	r0!, {r4, r6, sp}
    3288:	000003ec 	andeq	r0, r0, ip, ror #7
    328c:	411abf03 	tstmi	sl, r3, lsl #30
    3290:	00000001 	andeq	r0, r0, r1
    3294:	08208040 	stmdaeq	r0!, {r6, pc}
    3298:	00000459 	andeq	r0, r0, r9, asr r4
    329c:	411ac003 	tstmi	sl, r3
    32a0:	00000001 	andeq	r0, r0, r1
    32a4:	00208050 	eoreq	r8, r0, r0, asr r0
    32a8:	0000870a 	andeq	r8, r0, sl, lsl #14
    32ac:	07040200 	streq	r0, [r4, -r0, lsl #4]
    32b0:	000040e9 	andeq	r4, r0, r9, ror #1
    32b4:	00013a06 	andeq	r3, r1, r6, lsl #20
    32b8:	00970a00 	addseq	r0, r7, r0, lsl #20
    32bc:	a70a0000 	strge	r0, [sl, -r0]
    32c0:	0a000000 	beq	32c8 <CPSR_IRQ_INHIBIT+0x3248>
    32c4:	000000b7 	strheq	r0, [r0], -r7
    32c8:	0000c40a 	andeq	ip, r0, sl, lsl #8
    32cc:	00d40a00 	sbcseq	r0, r4, r0, lsl #20
    32d0:	e40a0000 	str	r0, [sl], #-0
    32d4:	0a000000 	beq	32dc <CPSR_IRQ_INHIBIT+0x325c>
    32d8:	000000f4 	strdeq	r0, [r0], -r4
    32dc:	0001040a 	andeq	r0, r1, sl, lsl #8
    32e0:	01140a00 	tsteq	r4, r0, lsl #20
    32e4:	240a0000 	strcs	r0, [sl], #-0
    32e8:	0b000001 	bleq	32f4 <CPSR_IRQ_INHIBIT+0x3274>
    32ec:	0000054a 	andeq	r0, r0, sl, asr #10
    32f0:	006a0407 	rsbeq	r0, sl, r7, lsl #8
    32f4:	07040000 	streq	r0, [r4, -r0]
    32f8:	0001c10c 	andeq	ip, r1, ip, lsl #2
    32fc:	02d90c00 	sbcseq	r0, r9, #0, 24
    3300:	0c000000 	stceq	0, cr0, [r0], {-0}
    3304:	0000051a 	andeq	r0, r0, sl, lsl r5
    3308:	02120c01 	andseq	r0, r2, #256	; 0x100
    330c:	0c020000 	stceq	0, cr0, [r2], {-0}
    3310:	0000020c 	andeq	r0, r0, ip, lsl #4
    3314:	01f40c03 	mvnseq	r0, r3, lsl #24
    3318:	0c040000 	stceq	0, cr0, [r4], {-0}
    331c:	000001fa 	strdeq	r0, [r0], -sl
    3320:	02000c05 	andeq	r0, r0, #1280	; 0x500
    3324:	0c060000 	stceq	0, cr0, [r6], {-0}
    3328:	00000206 	andeq	r0, r0, r6, lsl #4
    332c:	07250c07 	streq	r0, [r5, -r7, lsl #24]!
    3330:	00080000 	andeq	r0, r8, r0
    3334:	0007170d 	andeq	r1, r7, sp, lsl #14
    3338:	1b041400 	blne	108340 <_bss_end+0xf72c0>
    333c:	0003bc07 	andeq	fp, r3, r7, lsl #24
    3340:	03ff0e00 	mvnseq	r0, #0, 28
    3344:	1f040000 	svcne	0x00040000
    3348:	0003c722 	andeq	ip, r3, r2, lsr #14
    334c:	be0e0000 	cdplt	0, 0, cr0, cr14, cr0, {0}
    3350:	04000002 	streq	r0, [r0], #-2
    3354:	03cc0e22 	biceq	r0, ip, #544	; 0x220
    3358:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    335c:	000004ee 	andeq	r0, r0, lr, ror #9
    3360:	cc0e2404 	cfstrsgt	mvf2, [lr], {4}
    3364:	0c000003 	stceq	0, cr0, [r0], {3}
    3368:	00043b0f 	andeq	r3, r4, pc, lsl #22
    336c:	0a280400 	beq	a04374 <_bss_end+0x9f32f4>
    3370:	000003a9 	andeq	r0, r0, r9, lsr #7
    3374:	000003dc 	ldrdeq	r0, [r0], -ip
    3378:	00020e02 	andeq	r0, r2, r2, lsl #28
    337c:	00022300 	andeq	r2, r2, r0, lsl #6
    3380:	03e31000 	mvneq	r1, #0
    3384:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    3388:	11000000 	mrsne	r0, (UNDEF: 0)
    338c:	000003e9 	andeq	r0, r0, r9, ror #7
    3390:	0003e911 	andeq	lr, r3, r1, lsl r9
    3394:	db0f0000 	blle	3c339c <_bss_end+0x3b231c>
    3398:	04000004 	streq	r0, [r0], #-4
    339c:	04ac0a2a 	strteq	r0, [ip], #2602	; 0xa2a
    33a0:	03dc0000 	bicseq	r0, ip, #0
    33a4:	3c020000 	stccc	0, cr0, [r2], {-0}
    33a8:	51000002 	tstpl	r0, r2
    33ac:	10000002 	andne	r0, r0, r2
    33b0:	000003e3 	andeq	r0, r0, r3, ror #7
    33b4:	00005911 	andeq	r5, r0, r1, lsl r9
    33b8:	03e91100 	mvneq	r1, #0, 2
    33bc:	e9110000 	ldmdb	r1, {}	; <UNPREDICTABLE>
    33c0:	00000003 	andeq	r0, r0, r3
    33c4:	00062a0f 	andeq	r2, r6, pc, lsl #20
    33c8:	0a2c0400 	beq	b043d0 <_bss_end+0xaf3350>
    33cc:	000006aa 	andeq	r0, r0, sl, lsr #13
    33d0:	000003dc 	ldrdeq	r0, [r0], -ip
    33d4:	00026a02 	andeq	r6, r2, r2, lsl #20
    33d8:	00027f00 	andeq	r7, r2, r0, lsl #30
    33dc:	03e31000 	mvneq	r1, #0
    33e0:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    33e4:	11000000 	mrsne	r0, (UNDEF: 0)
    33e8:	000003e9 	andeq	r0, r0, r9, ror #7
    33ec:	0003e911 	andeq	lr, r3, r1, lsl r9
    33f0:	630f0000 	movwvs	r0, #61440	; 0xf000
    33f4:	04000004 	streq	r0, [r0], #-4
    33f8:	05fb0a2e 	ldrbeq	r0, [fp, #2606]!	; 0xa2e
    33fc:	03dc0000 	bicseq	r0, ip, #0
    3400:	98020000 	stmdals	r2, {}	; <UNPREDICTABLE>
    3404:	ad000002 	stcge	0, cr0, [r0, #-8]
    3408:	10000002 	andne	r0, r0, r2
    340c:	000003e3 	andeq	r0, r0, r3, ror #7
    3410:	00005911 	andeq	r5, r0, r1, lsl r9
    3414:	03e91100 	mvneq	r1, #0, 2
    3418:	e9110000 	ldmdb	r1, {}	; <UNPREDICTABLE>
    341c:	00000003 	andeq	r0, r0, r3
    3420:	0007170f 	andeq	r1, r7, pc, lsl #14
    3424:	05310400 	ldreq	r0, [r1, #-1024]!	; 0xfffffc00
    3428:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
    342c:	000003ef 	andeq	r0, r0, pc, ror #7
    3430:	0002c601 	andeq	ip, r2, r1, lsl #12
    3434:	0002d100 	andeq	sp, r2, r0, lsl #2
    3438:	03ef1000 	mvneq	r1, #0
    343c:	6a110000 	bvs	443444 <_bss_end+0x4323c4>
    3440:	00000000 	andeq	r0, r0, r0
    3444:	00028712 	andeq	r8, r2, r2, lsl r7
    3448:	0a340400 	beq	d04450 <_bss_end+0xcf33d0>
    344c:	00000521 	andeq	r0, r0, r1, lsr #10
    3450:	0002e601 	andeq	lr, r2, r1, lsl #12
    3454:	0002f600 	andeq	pc, r2, r0, lsl #12
    3458:	03ef1000 	mvneq	r1, #0
    345c:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    3460:	11000000 	mrsne	r0, (UNDEF: 0)
    3464:	00000178 	andeq	r0, r0, r8, ror r1
    3468:	05750f00 	ldrbeq	r0, [r5, #-3840]!	; 0xfffff100
    346c:	36040000 	strcc	r0, [r4], -r0
    3470:	0006e914 	andeq	lr, r6, r4, lsl r9
    3474:	00017800 	andeq	r7, r1, r0, lsl #16
    3478:	030f0100 	movweq	r0, #61696	; 0xf100
    347c:	031a0000 	tsteq	sl, #0
    3480:	e3100000 	tst	r0, #0
    3484:	11000003 	tstne	r0, r3
    3488:	00000059 	andeq	r0, r0, r9, asr r0
    348c:	05161200 	ldreq	r1, [r6, #-512]	; 0xfffffe00
    3490:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    3494:	0004130a 	andeq	r1, r4, sl, lsl #6
    3498:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    349c:	033f0000 	teqeq	pc, #0
    34a0:	ef100000 	svc	0x00100000
    34a4:	11000003 	tstne	r0, r3
    34a8:	00000059 	andeq	r0, r0, r9, asr r0
    34ac:	0003dc11 	andeq	sp, r3, r1, lsl ip
    34b0:	d50f0000 	strle	r0, [pc, #-0]	; 34b8 <CPSR_IRQ_INHIBIT+0x3438>
    34b4:	04000002 	streq	r0, [r0], #-2
    34b8:	02680a3c 	rsbeq	r0, r8, #60, 20	; 0x3c000
    34bc:	03dc0000 	bicseq	r0, ip, #0
    34c0:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    34c4:	63000003 	movwvs	r0, #3
    34c8:	10000003 	andne	r0, r0, r3
    34cc:	000003ef 	andeq	r0, r0, pc, ror #7
    34d0:	00005911 	andeq	r5, r0, r1, lsl r9
    34d4:	ea0f0000 	b	3c34dc <_bss_end+0x3b245c>
    34d8:	04000005 	streq	r0, [r0], #-5
    34dc:	01d00a3f 	bicseq	r0, r0, pc, lsr sl
    34e0:	03dc0000 	bicseq	r0, ip, #0
    34e4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    34e8:	91000003 	tstls	r0, r3
    34ec:	10000003 	andne	r0, r0, r3
    34f0:	000003ef 	andeq	r0, r0, pc, ror #7
    34f4:	00005911 	andeq	r5, r0, r1, lsl r9
    34f8:	03dc1100 	bicseq	r1, ip, #0, 2
    34fc:	dc110000 	ldcle	0, cr0, [r1], {-0}
    3500:	00000003 	andeq	r0, r0, r3
    3504:	0005a013 	andeq	sl, r5, r3, lsl r0
    3508:	0a410400 	beq	1044510 <_bss_end+0x1033490>
    350c:	000002fb 	strdeq	r0, [r0], -fp
    3510:	000003dc 	ldrdeq	r0, [r0], -ip
    3514:	0003a601 	andeq	sl, r3, r1, lsl #12
    3518:	03ef1000 	mvneq	r1, #0
    351c:	59110000 	ldmdbpl	r1, {}	; <UNPREDICTABLE>
    3520:	11000000 	mrsne	r0, (UNDEF: 0)
    3524:	000003dc 	ldrdeq	r0, [r0], -ip
    3528:	0003dc11 	andeq	sp, r3, r1, lsl ip
    352c:	06000000 	streq	r0, [r0], -r0
    3530:	000001c1 	andeq	r0, r0, r1, asr #3
    3534:	00760414 	rsbseq	r0, r6, r4, lsl r4
    3538:	c1060000 	mrsgt	r0, (UNDEF: 6)
    353c:	15000003 	strne	r0, [r0, #-3]
    3540:	00000059 	andeq	r0, r0, r9, asr r0
    3544:	000003dc 	ldrdeq	r0, [r0], -ip
    3548:	00006a16 	andeq	r6, r0, r6, lsl sl
    354c:	02000100 	andeq	r0, r0, #0, 2
    3550:	40a50201 	adcmi	r0, r5, r1, lsl #4
    3554:	04140000 	ldreq	r0, [r4], #-0
    3558:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    355c:	00590417 	subseq	r0, r9, r7, lsl r4
    3560:	04140000 	ldreq	r0, [r4], #-0
    3564:	000001c1 	andeq	r0, r0, r1, asr #3
    3568:	0004a618 	andeq	sl, r4, r8, lsl r6
    356c:	16450400 	strbne	r0, [r5], -r0, lsl #8
    3570:	000001c1 	andeq	r0, r0, r1, asr #3
    3574:	0014b40d 	andseq	fp, r4, sp, lsl #8
    3578:	07051000 	streq	r1, [r5, -r0]
    357c:	00050607 	andeq	r0, r5, r7, lsl #12
    3580:	168d0e00 	strne	r0, [sp], r0, lsl #28
    3584:	0b050000 	bleq	14358c <_bss_end+0x13250c>
    3588:	0000590e 	andeq	r5, r0, lr, lsl #18
    358c:	230e0000 	movwcs	r0, #57344	; 0xe000
    3590:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    3594:	00590e0d 	subseq	r0, r9, sp, lsl #28
    3598:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    359c:	00001585 	andeq	r1, r0, r5, lsl #11
    35a0:	590e0f05 	stmdbpl	lr, {r0, r2, r8, r9, sl, fp}
    35a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    35a8:	0007620e 	andeq	r6, r7, lr, lsl #4
    35ac:	0a120500 	beq	4849b4 <_bss_end+0x473934>
    35b0:	000003dc 	ldrdeq	r0, [r0], -ip
    35b4:	14b40f0c 	ldrtne	r0, [r4], #3852	; 0xf0c
    35b8:	15050000 	strne	r0, [r5, #-0]
    35bc:	00154d05 	andseq	r4, r5, r5, lsl #26
    35c0:	00050b00 	andeq	r0, r5, r0, lsl #22
    35c4:	045b0100 	ldrbeq	r0, [fp], #-256	; 0xffffff00
    35c8:	04700000 	ldrbteq	r0, [r0], #-0
    35cc:	0b100000 	bleq	4035d4 <_bss_end+0x3f2554>
    35d0:	11000005 	tstne	r0, r5
    35d4:	00000059 	andeq	r0, r0, r9, asr r0
    35d8:	00005911 	andeq	r5, r0, r1, lsl r9
    35dc:	00591100 	subseq	r1, r9, r0, lsl #2
    35e0:	0f000000 	svceq	0x00000000
    35e4:	00000a1d 	andeq	r0, r0, sp, lsl sl
    35e8:	fd0a1805 	stc2	8, cr1, [sl, #-20]	; 0xffffffec
    35ec:	dc000015 	stcle	0, cr0, [r0], {21}
    35f0:	01000003 	tsteq	r0, r3
    35f4:	00000489 	andeq	r0, r0, r9, lsl #9
    35f8:	0000048f 	andeq	r0, r0, pc, lsl #9
    35fc:	00050b10 	andeq	r0, r5, r0, lsl fp
    3600:	aa120000 	bge	483608 <_bss_end+0x472588>
    3604:	05000009 	streq	r0, [r0, #-9]
    3608:	15680a1a 	strbne	r0, [r8, #-2586]!	; 0xfffff5e6
    360c:	a4010000 	strge	r0, [r1], #-0
    3610:	aa000004 	bge	3628 <CPSR_IRQ_INHIBIT+0x35a8>
    3614:	10000004 	andne	r0, r0, r4
    3618:	0000050b 	andeq	r0, r0, fp, lsl #10
    361c:	073c0f00 	ldreq	r0, [ip, -r0, lsl #30]!
    3620:	1c050000 	stcne	0, cr0, [r5], {-0}
    3624:	0014370a 	andseq	r3, r4, sl, lsl #14
    3628:	0003dc00 	andeq	sp, r3, r0, lsl #24
    362c:	04c30100 	strbeq	r0, [r3], #256	; 0x100
    3630:	04c90000 	strbeq	r0, [r9], #0
    3634:	16100000 	ldrne	r0, [r0], -r0
    3638:	00000005 	andeq	r0, r0, r5
    363c:	00169812 	andseq	r9, r6, r2, lsl r8
    3640:	0a1f0500 	beq	7c4a48 <_bss_end+0x7b39c8>
    3644:	0000152d 	andeq	r1, r0, sp, lsr #10
    3648:	0004de01 	andeq	sp, r4, r1, lsl #28
    364c:	0004e900 	andeq	lr, r4, r0, lsl #18
    3650:	050b1000 	streq	r1, [fp, #-0]
    3654:	dc110000 	ldcle	0, cr0, [r1], {-0}
    3658:	00000003 	andeq	r0, r0, r3
    365c:	00169819 	andseq	r9, r6, r9, lsl r8
    3660:	0a210500 	beq	844a68 <_bss_end+0x8339e8>
    3664:	00001590 	muleq	r0, r0, r5
    3668:	0004fa01 	andeq	pc, r4, r1, lsl #20
    366c:	050b1000 	streq	r1, [fp, #-0]
    3670:	3f110000 	svccc	0x00110000
    3674:	00000000 	andeq	r0, r0, r0
    3678:	04010600 	streq	r0, [r1], #-1536	; 0xfffffa00
    367c:	04140000 	ldreq	r0, [r4], #-0
    3680:	00000401 	andeq	r0, r0, r1, lsl #8
    3684:	00050b06 	andeq	r0, r5, r6, lsl #22
    3688:	06041400 	streq	r1, [r4], -r0, lsl #8
    368c:	06000005 	streq	r0, [r0], -r5
    3690:	00000516 	andeq	r0, r0, r6, lsl r5
    3694:	0016e818 	andseq	lr, r6, r8, lsl r8
    3698:	18240500 	stmdane	r4!, {r8, sl}
    369c:	00000401 	andeq	r0, r0, r1, lsl #8
    36a0:	0005211a 	andeq	r2, r5, sl, lsl r1
    36a4:	11050100 	mrsne	r0, (UNDEF: 21)
    36a8:	ffa40305 			; <UNDEFINED> instruction: 0xffa40305
    36ac:	d91b0000 	ldmdble	fp, {}	; <UNPREDICTABLE>
    36b0:	8c000016 	stchi	0, cr0, [r0], {22}
    36b4:	1c0000b4 	stcne	0, cr0, [r0], {180}	; 0xb4
    36b8:	01000000 	mrseq	r0, (UNDEF: 0)
    36bc:	023e1c9c 	eorseq	r1, lr, #156, 24	; 0x9c00
    36c0:	b4340000 	ldrtlt	r0, [r4], #-0
    36c4:	00580000 	subseq	r0, r8, r0
    36c8:	9c010000 	stcls	0, cr0, [r1], {-0}
    36cc:	0000057c 	andeq	r0, r0, ip, ror r5
    36d0:	0003381d 	andeq	r3, r3, sp, lsl r8
    36d4:	01800100 	orreq	r0, r0, r0, lsl #2
    36d8:	00000033 	andeq	r0, r0, r3, lsr r0
    36dc:	1d749102 	ldfnep	f1, [r4, #-8]!
    36e0:	00000731 	andeq	r0, r0, r1, lsr r7
    36e4:	33018001 	movwcc	r8, #4097	; 0x1001
    36e8:	02000000 	andeq	r0, r0, #0
    36ec:	1e007091 	mcrne	0, 0, r7, cr0, cr1, {4}
    36f0:	000004e9 	andeq	r0, r0, r9, ror #9
    36f4:	96066501 	strls	r6, [r6], -r1, lsl #10
    36f8:	d0000005 	andle	r0, r0, r5
    36fc:	640000b2 	strvs	r0, [r0], #-178	; 0xffffff4e
    3700:	01000001 	tsteq	r0, r1
    3704:	0005d69c 	muleq	r5, ip, r6
    3708:	03291f00 			; <UNDEFINED> instruction: 0x03291f00
    370c:	05110000 	ldreq	r0, [r1, #-0]
    3710:	91020000 	mrsls	r0, (UNDEF: 2)
    3714:	16f81d6c 	ldrbtne	r1, [r8], ip, ror #26
    3718:	65010000 	strvs	r0, [r1, #-0]
    371c:	00003f28 	andeq	r3, r0, r8, lsr #30
    3720:	6b910200 	blvs	fe443f28 <_bss_end+0xfe432ea8>
    3724:	01006920 	tsteq	r0, r0, lsr #18
    3728:	003a126a 	eorseq	r1, sl, sl, ror #4
    372c:	91020000 	mrsls	r0, (UNDEF: 2)
    3730:	b3182170 	tstlt	r8, #112, 2
    3734:	00f00000 	rscseq	r0, r0, r0
    3738:	6a200000 	bvs	803740 <_bss_end+0x7f26c0>
    373c:	0e700100 	rpweqs	f0, f0, f0
    3740:	00000033 	andeq	r0, r0, r3, lsr r0
    3744:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3748:	04c91e00 	strbeq	r1, [r9], #3584	; 0xe00
    374c:	47010000 	strmi	r0, [r1, -r0]
    3750:	0005f006 	andeq	pc, r5, r6
    3754:	00b1ac00 	adcseq	sl, r1, r0, lsl #24
    3758:	00012400 	andeq	r2, r1, r0, lsl #8
    375c:	199c0100 	ldmibne	ip, {r8}
    3760:	1f000006 	svcne	0x00000006
    3764:	00000329 	andeq	r0, r0, r9, lsr #6
    3768:	00000511 	andeq	r0, r0, r1, lsl r5
    376c:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    3770:	00746962 	rsbseq	r6, r4, r2, ror #18
    3774:	dc254701 	stcle	7, cr4, [r5], #-4
    3778:	02000003 	andeq	r0, r0, #3
    377c:	69206b91 	stmdbvs	r0!, {r0, r4, r7, r8, r9, fp, sp, lr}
    3780:	124c0100 	subne	r0, ip, #0, 2
    3784:	0000003a 	andeq	r0, r0, sl, lsr r0
    3788:	00749102 	rsbseq	r9, r4, r2, lsl #2
    378c:	0004aa23 	andeq	sl, r4, r3, lsr #20
    3790:	06420100 	strbeq	r0, [r2], -r0, lsl #2
    3794:	00000633 	andeq	r0, r0, r3, lsr r6
    3798:	0000b184 	andeq	fp, r0, r4, lsl #3
    379c:	00000028 	andeq	r0, r0, r8, lsr #32
    37a0:	06409c01 	strbeq	r9, [r0], -r1, lsl #24
    37a4:	291f0000 	ldmdbcs	pc, {}	; <UNPREDICTABLE>
    37a8:	1c000003 	stcne	0, cr0, [r0], {3}
    37ac:	02000005 	andeq	r0, r0, #5
    37b0:	1e007491 	mcrne	4, 0, r7, cr0, cr1, {4}
    37b4:	0000048f 	andeq	r0, r0, pc, lsl #9
    37b8:	5a063001 	bpl	18f7c4 <_bss_end+0x17e744>
    37bc:	ac000006 	stcge	0, cr0, [r0], {6}
    37c0:	d80000b0 	stmdale	r0, {r4, r5, r7}
    37c4:	01000000 	mrseq	r0, (UNDEF: 0)
    37c8:	0006679c 	muleq	r6, ip, r7
    37cc:	03291f00 			; <UNDEFINED> instruction: 0x03291f00
    37d0:	05110000 	ldreq	r0, [r1, #-0]
    37d4:	91020000 	mrsls	r0, (UNDEF: 2)
    37d8:	701e0074 	andsvc	r0, lr, r4, ror r0
    37dc:	01000004 	tsteq	r0, r4
    37e0:	0681060f 	streq	r0, [r1], pc, lsl #12
    37e4:	af380000 	svcge	0x00380000
    37e8:	01740000 	cmneq	r4, r0
    37ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    37f0:	0000068e 	andeq	r0, r0, lr, lsl #13
    37f4:	0003291f 	andeq	r2, r3, pc, lsl r9
    37f8:	00051100 	andeq	r1, r5, r0, lsl #2
    37fc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3800:	04422400 	strbeq	r2, [r2], #-1024	; 0xfffffc00
    3804:	07010000 	streq	r0, [r1, -r0]
    3808:	00069f01 	andeq	r9, r6, r1, lsl #30
    380c:	06cd0000 	strbeq	r0, [sp], r0
    3810:	29250000 	stmdbcs	r5!, {}	; <UNPREDICTABLE>
    3814:	11000003 	tstne	r0, r3
    3818:	26000005 	strcs	r0, [r0], -r5
    381c:	00001706 	andeq	r1, r0, r6, lsl #14
    3820:	592b0701 	stmdbpl	fp!, {r0, r8, r9, sl}
    3824:	26000000 	strcs	r0, [r0], -r0
    3828:	00001769 	andeq	r1, r0, r9, ror #14
    382c:	593e0701 	ldmdbpl	lr!, {r0, r8, r9, sl}
    3830:	26000000 	strcs	r0, [r0], -r0
    3834:	000016fd 	strdeq	r1, [r0], -sp
    3838:	59500701 	ldmdbpl	r0, {r0, r8, r9, sl}^
    383c:	00000000 	andeq	r0, r0, r0
    3840:	00068e27 	andeq	r8, r6, r7, lsr #28
    3844:	0016be00 	andseq	fp, r6, r0, lsl #28
    3848:	0006e400 	andeq	lr, r6, r0, lsl #8
    384c:	00aee400 	adceq	lr, lr, r0, lsl #8
    3850:	00005400 	andeq	r5, r0, r0, lsl #8
    3854:	289c0100 	ldmcs	ip, {r8}
    3858:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    385c:	28749102 	ldmdacs	r4!, {r1, r8, ip, pc}^
    3860:	000006a8 	andeq	r0, r0, r8, lsr #13
    3864:	28709102 	ldmdacs	r0!, {r1, r8, ip, pc}^
    3868:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    386c:	286c9102 	stmdacs	ip!, {r1, r8, ip, pc}^
    3870:	000006c0 	andeq	r0, r0, r0, asr #13
    3874:	00689102 	rsbeq	r9, r8, r2, lsl #2
    3878:	0005a700 	andeq	sl, r5, r0, lsl #14
    387c:	96000400 	strls	r0, [r0], -r0, lsl #8
    3880:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    3884:	00006101 	andeq	r6, r0, r1, lsl #2
    3888:	19120400 	ldmdbne	r2, {sl}
    388c:	00260000 	eoreq	r0, r6, r0
    3890:	b4a80000 	strtlt	r0, [r8], #0
    3894:	02900000 	addseq	r0, r0, #0
    3898:	18370000 	ldmdane	r7!, {}	; <UNPREDICTABLE>
    389c:	01020000 	mrseq	r0, (UNDEF: 2)
    38a0:	00057008 	andeq	r7, r5, r8
    38a4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    38a8:	00000596 	muleq	r0, r6, r5
    38ac:	69050403 	stmdbvs	r5, {r0, r1, sl}
    38b0:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    38b4:	0000097f 	andeq	r0, r0, pc, ror r9
    38b8:	46070702 	strmi	r0, [r7], -r2, lsl #14
    38bc:	02000000 	andeq	r0, r0, #0
    38c0:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
    38c4:	95040000 	strls	r0, [r4, #-0]
    38c8:	02000007 	andeq	r0, r0, #7
    38cc:	00590708 	subseq	r0, r9, r8, lsl #14
    38d0:	02020000 	andeq	r0, r2, #0
    38d4:	0003d907 	andeq	sp, r3, r7, lsl #18
    38d8:	05e10400 	strbeq	r0, [r1, #1024]!	; 0x400
    38dc:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    38e0:	00007107 	andeq	r7, r0, r7, lsl #2
    38e4:	00600500 	rsbeq	r0, r0, r0, lsl #10
    38e8:	04020000 	streq	r0, [r2], #-0
    38ec:	0040ee07 	subeq	lr, r0, r7, lsl #28
    38f0:	00710500 	rsbseq	r0, r1, r0, lsl #10
    38f4:	71060000 	mrsvc	r0, (UNDEF: 6)
    38f8:	07000000 	streq	r0, [r0, -r0]
    38fc:	006c6168 	rsbeq	r6, ip, r8, ror #2
    3900:	850b0503 	strhi	r0, [fp, #-1283]	; 0xfffffafd
    3904:	08000001 	stmdaeq	r0, {r0}
    3908:	00000484 	andeq	r0, r0, r4, lsl #9
    390c:	78190703 	ldmdavc	r9, {r0, r1, r8, r9, sl}
    3910:	80000000 	andhi	r0, r0, r0
    3914:	080ee6b2 	stmdaeq	lr, {r1, r4, r5, r7, r9, sl, sp, lr, pc}
    3918:	000005c9 	andeq	r0, r0, r9, asr #11
    391c:	911a0a03 	tstls	sl, r3, lsl #20
    3920:	00000001 	andeq	r0, r0, r1
    3924:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    3928:	0000044f 	andeq	r0, r0, pc, asr #8
    392c:	911a0d03 	tstls	sl, r3, lsl #26
    3930:	00000001 	andeq	r0, r0, r1
    3934:	09202000 	stmdbeq	r0!, {sp}
    3938:	00000587 	andeq	r0, r0, r7, lsl #11
    393c:	6c151003 	ldcvs	0, cr1, [r5], {3}
    3940:	36000000 	strcc	r0, [r0], -r0
    3944:	00037008 	andeq	r7, r3, r8
    3948:	1a420300 	bne	1084550 <_bss_end+0x10734d0>
    394c:	00000191 	muleq	r0, r1, r1
    3950:	20215000 	eorcs	r5, r1, r0
    3954:	00034708 	andeq	r4, r3, r8, lsl #14
    3958:	1a710300 	bne	1c44560 <_bss_end+0x1c334e0>
    395c:	00000191 	muleq	r0, r1, r1
    3960:	2000b200 	andcs	fp, r0, r0, lsl #4
    3964:	0002b308 	andeq	fp, r2, r8, lsl #6
    3968:	1aa40300 	bne	fe904570 <_bss_end+0xfe8f34f0>
    396c:	00000191 	muleq	r0, r1, r1
    3970:	2000b400 	andcs	fp, r0, r0, lsl #8
    3974:	0018d60a 	andseq	sp, r8, sl, lsl #12
    3978:	33040500 	movwcc	r0, #17664	; 0x4500
    397c:	03000000 	movweq	r0, #0
    3980:	01440da6 	smlaltbeq	r0, r4, r6, sp
    3984:	750b0000 	strvc	r0, [fp, #-0]
    3988:	00000019 	andeq	r0, r0, r9, lsl r0
    398c:	0018a90b 	andseq	sl, r8, fp, lsl #18
    3990:	0e0b0100 	adfeqe	f0, f3, f0
    3994:	02000033 	andeq	r0, r0, #51	; 0x33
    3998:	0018920b 	andseq	r9, r8, fp, lsl #4
    399c:	f90b0300 			; <UNDEFINED> instruction: 0xf90b0300
    39a0:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    39a4:	0017ed0b 	andseq	lr, r7, fp, lsl #26
    39a8:	d90b0500 	stmdble	fp, {r8, sl}
    39ac:	06000017 			; <UNDEFINED> instruction: 0x06000017
    39b0:	0018ca0b 	andseq	ip, r8, fp, lsl #20
    39b4:	bb0b0700 	bllt	2c55bc <_bss_end+0x2b453c>
    39b8:	08000019 	stmdaeq	r0, {r0, r3, r4}
    39bc:	03610800 	cmneq	r1, #0, 16
    39c0:	b3030000 	movwlt	r0, #12288	; 0x3000
    39c4:	0001911a 	andeq	r9, r1, sl, lsl r1
    39c8:	10400000 	subne	r0, r0, r0
    39cc:	032e0820 			; <UNDEFINED> instruction: 0x032e0820
    39d0:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    39d4:	0001911a 	andeq	r9, r1, sl, lsl r1
    39d8:	20500000 	subscs	r0, r0, r0
    39dc:	03ec0820 	mvneq	r0, #32, 16	; 0x200000
    39e0:	bf030000 	svclt	0x00030000
    39e4:	0001911a 	andeq	r9, r1, sl, lsl r1
    39e8:	80400000 	subhi	r0, r0, r0
    39ec:	04590820 	ldrbeq	r0, [r9], #-2080	; 0xfffff7e0
    39f0:	c0030000 	andgt	r0, r3, r0
    39f4:	0001911a 	andeq	r9, r1, sl, lsl r1
    39f8:	80500000 	subshi	r0, r0, r0
    39fc:	8e0c0020 	cdphi	0, 0, cr0, cr12, cr0, {1}
    3a00:	02000000 	andeq	r0, r0, #0
    3a04:	40e90704 	rscmi	r0, r9, r4, lsl #14
    3a08:	8a050000 	bhi	143a10 <_bss_end+0x132990>
    3a0c:	0c000001 	stceq	0, cr0, [r0], {1}
    3a10:	0000009e 	muleq	r0, lr, r0
    3a14:	0000ae0c 	andeq	sl, r0, ip, lsl #28
    3a18:	00be0c00 	adcseq	r0, lr, r0, lsl #24
    3a1c:	cb0c0000 	blgt	303a24 <_bss_end+0x2f29a4>
    3a20:	0c000000 	stceq	0, cr0, [r0], {-0}
    3a24:	000000db 	ldrdeq	r0, [r0], -fp
    3a28:	0000eb0c 	andeq	lr, r0, ip, lsl #22
    3a2c:	01440c00 	cmpeq	r4, r0, lsl #24
    3a30:	540c0000 	strpl	r0, [ip], #-0
    3a34:	0c000001 	stceq	0, cr0, [r0], {1}
    3a38:	00000164 	andeq	r0, r0, r4, ror #2
    3a3c:	0001740c 	andeq	r7, r1, ip, lsl #8
    3a40:	18560a00 	ldmdane	r6, {r9, fp}^
    3a44:	01070000 	mrseq	r0, (UNDEF: 7)
    3a48:	0000003a 	andeq	r0, r0, sl, lsr r0
    3a4c:	ed0c0604 	stc	6, cr0, [ip, #-16]
    3a50:	0b000001 	bleq	3a5c <CPSR_IRQ_INHIBIT+0x39dc>
    3a54:	000019c8 	andeq	r1, r0, r8, asr #19
    3a58:	189c0b00 	ldmne	ip, {r8, r9, fp}
    3a5c:	0b010000 	bleq	43a64 <_bss_end+0x329e4>
    3a60:	0000182e 	andeq	r1, r0, lr, lsr #16
    3a64:	a50d0002 	strge	r0, [sp, #-2]
    3a68:	08000019 	stmdaeq	r0, {r0, r3, r4}
    3a6c:	e5070d04 	str	r0, [r7, #-3332]	; 0xfffff2fc
    3a70:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3a74:	00001771 	andeq	r1, r0, r1, ror r7
    3a78:	e51c1504 	ldr	r1, [ip, #-1284]	; 0xfffffafc
    3a7c:	00000002 	andeq	r0, r0, r2
    3a80:	0019e90f 	andseq	lr, r9, pc, lsl #18
    3a84:	0b110400 	bleq	444a8c <_bss_end+0x433a0c>
    3a88:	000002eb 	andeq	r0, r0, fp, ror #5
    3a8c:	197a0e01 	ldmdbne	sl!, {r0, r9, sl, fp}^
    3a90:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    3a94:	00020715 	andeq	r0, r2, r5, lsl r7
    3a98:	2b100400 	blcs	404aa0 <_bss_end+0x3f3a20>
    3a9c:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    3aa0:	19841c1b 	stmibne	r4, {r0, r1, r3, r4, sl, fp, ip}
    3aa4:	02f20000 	rscseq	r0, r2, #0
    3aa8:	3a020000 	bcc	83ab0 <_bss_end+0x72a30>
    3aac:	45000002 	strmi	r0, [r0, #-2]
    3ab0:	11000002 	tstne	r0, r2
    3ab4:	000002f8 	strdeq	r0, [r0], -r8
    3ab8:	0000fb12 	andeq	pc, r0, r2, lsl fp	; <UNPREDICTABLE>
    3abc:	a5100000 	ldrge	r0, [r0, #-0]
    3ac0:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3ac4:	19ac051e 	stmibne	ip!, {r1, r2, r3, r4, r8, sl}
    3ac8:	02f80000 	rscseq	r0, r8, #0
    3acc:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    3ad0:	69000002 	stmdbvs	r0, {r1}
    3ad4:	11000002 	tstne	r0, r2
    3ad8:	000002f8 	strdeq	r0, [r0], -r8
    3adc:	00018a12 	andeq	r8, r1, r2, lsl sl
    3ae0:	6c130000 	ldcvs	0, cr0, [r3], {-0}
    3ae4:	04000033 	streq	r0, [r0], #-51	; 0xffffffcd
    3ae8:	183c0522 	ldmdane	ip!, {r1, r5, r8, sl}
    3aec:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    3af0:	93000002 	movwls	r0, #2
    3af4:	11000002 	tstne	r0, r2
    3af8:	000002f8 	strdeq	r0, [r0], -r8
    3afc:	00020712 	andeq	r0, r2, r2, lsl r7
    3b00:	00711200 	rsbseq	r1, r1, r0, lsl #4
    3b04:	c8120000 	ldmdagt	r2, {}	; <UNPREDICTABLE>
    3b08:	00000001 	andeq	r0, r0, r1
    3b0c:	00317813 	eorseq	r7, r1, r3, lsl r8
    3b10:	0a240400 	beq	904b18 <_bss_end+0x8f3a98>
    3b14:	000018e0 	andeq	r1, r0, r0, ror #17
    3b18:	0002a801 	andeq	sl, r2, r1, lsl #16
    3b1c:	0002ae00 	andeq	sl, r2, r0, lsl #28
    3b20:	02f81100 	rscseq	r1, r8, #0, 2
    3b24:	13000000 	movwne	r0, #0
    3b28:	000017e0 	andeq	r1, r0, r0, ror #15
    3b2c:	010a2704 	tsteq	sl, r4, lsl #14
    3b30:	0100001a 	tsteq	r0, sl, lsl r0
    3b34:	000002c3 	andeq	r0, r0, r3, asr #5
    3b38:	000002c9 	andeq	r0, r0, r9, asr #5
    3b3c:	0002f811 	andeq	pc, r2, r1, lsl r8	; <UNPREDICTABLE>
    3b40:	d4140000 	ldrle	r0, [r4], #-0
    3b44:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    3b48:	17930a29 	ldrne	r0, [r3, r9, lsr #20]
    3b4c:	03030000 	movweq	r0, #12288	; 0x3000
    3b50:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    3b54:	11000002 	tstne	r0, r2
    3b58:	000002f8 	strdeq	r0, [r0], -r8
    3b5c:	04150000 	ldreq	r0, [r5], #-0
    3b60:	0000007d 	andeq	r0, r0, sp, ror r0
    3b64:	02f10415 	rscseq	r0, r1, #352321536	; 0x15000000
    3b68:	17160000 	ldrne	r0, [r6, -r0]
    3b6c:	00007d04 	andeq	r7, r0, r4, lsl #26
    3b70:	ed041500 	cfstr32	mvfx1, [r4, #-0]
    3b74:	05000001 	streq	r0, [r0, #-1]
    3b78:	000002f8 	strdeq	r0, [r0], -r8
    3b7c:	a5020102 	strge	r0, [r2, #-258]	; 0xfffffefe
    3b80:	18000040 	stmdane	r0, {r6}
    3b84:	0000178c 	andeq	r1, r0, ip, lsl #15
    3b88:	ed0f2c04 	stc	12, cr2, [pc, #-16]	; 3b80 <CPSR_IRQ_INHIBIT+0x3b00>
    3b8c:	19000001 	stmdbne	r0, {r0}
    3b90:	0000030a 	andeq	r0, r0, sl, lsl #6
    3b94:	05080401 	streq	r0, [r8, #-1025]	; 0xfffffbff
    3b98:	00ffb403 	rscseq	fp, pc, r3, lsl #8
    3b9c:	19641a00 	stmdbne	r4!, {r9, fp, ip}^
    3ba0:	01060000 	mrseq	r0, (UNDEF: 6)
    3ba4:	03f20808 	mvnseq	r0, #8, 16	; 0x80000
    3ba8:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    3bac:	01000017 	tsteq	r0, r7, lsl r0
    3bb0:	003a0d0a 	eorseq	r0, sl, sl, lsl #26
    3bb4:	01010000 	mrseq	r0, (UNDEF: 1)
    3bb8:	221b0007 	andscs	r0, fp, #7
    3bbc:	01000018 	tsteq	r0, r8, lsl r0
    3bc0:	003a0d0b 	eorseq	r0, sl, fp, lsl #26
    3bc4:	01010000 	mrseq	r0, (UNDEF: 1)
    3bc8:	741b0006 	ldrvc	r0, [fp], #-6
    3bcc:	01000018 	tsteq	r0, r8, lsl r0
    3bd0:	003a0d0c 	eorseq	r0, sl, ip, lsl #26
    3bd4:	02010000 	andeq	r0, r1, #0
    3bd8:	c11b0004 	tstgt	fp, r4
    3bdc:	01000018 	tsteq	r0, r8, lsl r0
    3be0:	003a0d0d 	eorseq	r0, sl, sp, lsl #26
    3be4:	01010000 	mrseq	r0, (UNDEF: 1)
    3be8:	af1b0003 	svcge	0x001b0003
    3bec:	01000018 	tsteq	r0, r8, lsl r0
    3bf0:	003a0d0e 	eorseq	r0, sl, lr, lsl #26
    3bf4:	01010000 	mrseq	r0, (UNDEF: 1)
    3bf8:	071b0002 	ldreq	r0, [fp, -r2]
    3bfc:	01000018 	tsteq	r0, r8, lsl r0
    3c00:	003a0d0f 	eorseq	r0, sl, pc, lsl #26
    3c04:	01010000 	mrseq	r0, (UNDEF: 1)
    3c08:	041b0001 	ldreq	r0, [fp], #-1
    3c0c:	01000019 	tsteq	r0, r9, lsl r0
    3c10:	003a0d10 	eorseq	r0, sl, r0, lsl sp
    3c14:	01010000 	mrseq	r0, (UNDEF: 1)
    3c18:	b61b0000 	ldrlt	r0, [fp], -r0
    3c1c:	01000017 	tsteq	r0, r7, lsl r0
    3c20:	003a0d11 	eorseq	r0, sl, r1, lsl sp
    3c24:	01010000 	mrseq	r0, (UNDEF: 1)
    3c28:	7e1b0107 	mufvce	f0, f3, f7
    3c2c:	01000018 	tsteq	r0, r8, lsl r0
    3c30:	003a0d12 	eorseq	r0, sl, r2, lsl sp
    3c34:	01010000 	mrseq	r0, (UNDEF: 1)
    3c38:	101c0106 	andsne	r0, ip, r6, lsl #2
    3c3c:	01000018 	tsteq	r0, r8, lsl r0
    3c40:	004d0e13 	subeq	r0, sp, r3, lsl lr
    3c44:	0a020000 	beq	83c4c <_bss_end+0x72bcc>
    3c48:	671c007c 			; <UNDEFINED> instruction: 0x671c007c
    3c4c:	01000018 	tsteq	r0, r8, lsl r0
    3c50:	004d0e14 	subeq	r0, sp, r4, lsl lr
    3c54:	10020000 	andne	r0, r2, r0
    3c58:	191b027c 	ldmdbne	fp, {r2, r3, r4, r5, r6, r9}
    3c5c:	01000018 	tsteq	r0, r8, lsl r0
    3c60:	004d0e15 	subeq	r0, sp, r5, lsl lr
    3c64:	0a020000 	beq	83c6c <_bss_end+0x72bec>
    3c68:	06000402 	streq	r0, [r0], -r2, lsl #8
    3c6c:	00000324 	andeq	r0, r0, r4, lsr #6
    3c70:	00177d1d 	andseq	r7, r7, sp, lsl sp
    3c74:	00b71c00 	adcseq	r1, r7, r0, lsl #24
    3c78:	00001c00 	andeq	r1, r0, r0, lsl #24
    3c7c:	1e9c0100 	fmlnee	f0, f4, f0
    3c80:	0000023e 	andeq	r0, r0, lr, lsr r2
    3c84:	0000b6c8 	andeq	fp, r0, r8, asr #13
    3c88:	00000054 	andeq	r0, r0, r4, asr r0
    3c8c:	04389c01 	ldrteq	r9, [r8], #-3073	; 0xfffff3ff
    3c90:	381f0000 	ldmdacc	pc, {}	; <UNPREDICTABLE>
    3c94:	01000003 	tsteq	r0, r3
    3c98:	0033014a 	eorseq	r0, r3, sl, asr #2
    3c9c:	91020000 	mrsls	r0, (UNDEF: 2)
    3ca0:	07311f74 			; <UNDEFINED> instruction: 0x07311f74
    3ca4:	4a010000 	bmi	43cac <_bss_end+0x32c2c>
    3ca8:	00003301 	andeq	r3, r0, r1, lsl #6
    3cac:	70910200 	addsvc	r0, r1, r0, lsl #4
    3cb0:	02c92000 	sbceq	r2, r9, #0
    3cb4:	47010000 	strmi	r0, [r1, -r0]
    3cb8:	00045206 	andeq	r5, r4, r6, lsl #4
    3cbc:	00b68800 	adcseq	r8, r6, r0, lsl #16
    3cc0:	00004000 	andeq	r4, r0, r0
    3cc4:	5f9c0100 	svcpl	0x009c0100
    3cc8:	21000004 	tstcs	r0, r4
    3ccc:	00000329 	andeq	r0, r0, r9, lsr #6
    3cd0:	000002fe 	strdeq	r0, [r0], -lr
    3cd4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3cd8:	0002ae20 	andeq	sl, r2, r0, lsr #28
    3cdc:	063f0100 	ldrteq	r0, [pc], -r0, lsl #2
    3ce0:	00000479 	andeq	r0, r0, r9, ror r4
    3ce4:	0000b638 	andeq	fp, r0, r8, lsr r6
    3ce8:	00000050 	andeq	r0, r0, r0, asr r0
    3cec:	04869c01 	streq	r9, [r6], #3073	; 0xc01
    3cf0:	29210000 	stmdbcs	r1!, {}	; <UNPREDICTABLE>
    3cf4:	fe000003 	cdp2	0, 0, cr0, cr0, cr3, {0}
    3cf8:	02000002 	andeq	r0, r0, #2
    3cfc:	20007491 	mulcs	r0, r1, r4
    3d00:	00000293 	muleq	r0, r3, r2
    3d04:	a0063701 	andge	r3, r6, r1, lsl #14
    3d08:	ec000004 	stc	0, cr0, [r0], {4}
    3d0c:	4c0000b5 	stcmi	0, cr0, [r0], {181}	; 0xb5
    3d10:	01000000 	mrseq	r0, (UNDEF: 0)
    3d14:	0004bc9c 	muleq	r4, ip, ip
    3d18:	03292100 			; <UNDEFINED> instruction: 0x03292100
    3d1c:	02fe0000 	rscseq	r0, lr, #0
    3d20:	91020000 	mrsls	r0, (UNDEF: 2)
    3d24:	6572226c 	ldrbvs	r2, [r2, #-620]!	; 0xfffffd94
    3d28:	39010067 	stmdbcc	r1, {r0, r1, r2, r5, r6}
    3d2c:	0004bc20 	andeq	fp, r4, r0, lsr #24
    3d30:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3d34:	f2041700 	vabd.s8	d1, d4, d0
    3d38:	20000003 	andcs	r0, r0, r3
    3d3c:	00000269 	andeq	r0, r0, r9, ror #4
    3d40:	dc062601 	stcle	6, cr2, [r6], {1}
    3d44:	20000004 	andcs	r0, r0, r4
    3d48:	cc0000b5 	stcgt	0, cr0, [r0], {181}	; 0xb5
    3d4c:	01000000 	mrseq	r0, (UNDEF: 0)
    3d50:	0005259c 	muleq	r5, ip, r5
    3d54:	03292100 			; <UNDEFINED> instruction: 0x03292100
    3d58:	02fe0000 	rscseq	r0, lr, #0
    3d5c:	91020000 	mrsls	r0, (UNDEF: 2)
    3d60:	1a1c1f64 	bne	70baf8 <_bss_end+0x6faa78>
    3d64:	26010000 	strcs	r0, [r1], -r0
    3d68:	00020725 	andeq	r0, r2, r5, lsr #14
    3d6c:	60910200 	addsvs	r0, r1, r0, lsl #4
    3d70:	0017f81f 	andseq	pc, r7, pc, lsl r8	; <UNPREDICTABLE>
    3d74:	3c260100 	stfccs	f0, [r6], #-0
    3d78:	00000071 	andeq	r0, r0, r1, ror r0
    3d7c:	1f5c9102 	svcne	0x005c9102
    3d80:	00001874 	andeq	r1, r0, r4, ror r8
    3d84:	c8542601 	ldmdagt	r4, {r0, r9, sl, sp}^
    3d88:	02000001 	andeq	r0, r0, #1
    3d8c:	72225b91 	eorvc	r5, r2, #148480	; 0x24400
    3d90:	01006765 	tsteq	r0, r5, ror #14
    3d94:	0324162a 			; <UNDEFINED> instruction: 0x0324162a
    3d98:	91020000 	mrsls	r0, (UNDEF: 2)
    3d9c:	21230068 			; <UNDEFINED> instruction: 0x21230068
    3da0:	01000002 	tsteq	r0, r2
    3da4:	053f1821 	ldreq	r1, [pc, #-2081]!	; 358b <CPSR_IRQ_INHIBIT+0x350b>
    3da8:	b4e80000 	strbtlt	r0, [r8], #0
    3dac:	00380000 	eorseq	r0, r8, r0
    3db0:	9c010000 	stcls	0, cr0, [r1], {-0}
    3db4:	0000055b 	andeq	r0, r0, fp, asr r5
    3db8:	00032921 	andeq	r2, r3, r1, lsr #18
    3dbc:	0002fe00 	andeq	pc, r2, r0, lsl #28
    3dc0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3dc4:	67657224 	strbvs	r7, [r5, -r4, lsr #4]!
    3dc8:	34210100 	strtcc	r0, [r1], #-256	; 0xffffff00
    3dcc:	000000fb 	strdeq	r0, [r0], -fp
    3dd0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3dd4:	00024525 	andeq	r4, r2, r5, lsr #10
    3dd8:	011a0100 	tsteq	sl, r0, lsl #2
    3ddc:	0000056c 	andeq	r0, r0, ip, ror #10
    3de0:	00058200 	andeq	r8, r5, r0, lsl #4
    3de4:	03292600 			; <UNDEFINED> instruction: 0x03292600
    3de8:	02fe0000 	rscseq	r0, lr, #0
    3dec:	f5270000 			; <UNDEFINED> instruction: 0xf5270000
    3df0:	01000018 	tsteq	r0, r8, lsl r0
    3df4:	018a1e1a 	orreq	r1, sl, sl, lsl lr
    3df8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    3dfc:	0000055b 	andeq	r0, r0, fp, asr r5
    3e00:	000017ca 	andeq	r1, r0, sl, asr #15
    3e04:	00000599 	muleq	r0, r9, r5
    3e08:	0000b4a8 	andeq	fp, r0, r8, lsr #9
    3e0c:	00000040 	andeq	r0, r0, r0, asr #32
    3e10:	6c299c01 	stcvs	12, cr9, [r9], #-4
    3e14:	02000005 	andeq	r0, r0, #5
    3e18:	75297491 	strvc	r7, [r9, #-1169]!	; 0xfffffb6f
    3e1c:	02000005 	andeq	r0, r0, #5
    3e20:	00007091 	muleq	r0, r1, r0
    3e24:	000003e8 	andeq	r0, r0, r8, ror #7
    3e28:	14290004 	strtne	r0, [r9], #-4
    3e2c:	01040000 	mrseq	r0, (UNDEF: 4)
    3e30:	00000061 	andeq	r0, r0, r1, rrx
    3e34:	001a7404 	andseq	r7, sl, r4, lsl #8
    3e38:	00002600 	andeq	r2, r0, r0, lsl #12
    3e3c:	00b73800 	adcseq	r3, r7, r0, lsl #16
    3e40:	00028000 	andeq	r8, r2, r0
    3e44:	001a0a00 	andseq	r0, sl, r0, lsl #20
    3e48:	08010200 	stmdaeq	r1, {r9}
    3e4c:	00000570 	andeq	r0, r0, r0, ror r5
    3e50:	96050202 	strls	r0, [r5], -r2, lsl #4
    3e54:	03000005 	movweq	r0, #5
    3e58:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3e5c:	01020074 	tsteq	r2, r4, ror r0
    3e60:	00056708 	andeq	r6, r5, r8, lsl #14
    3e64:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3e68:	000003d9 	ldrdeq	r0, [r0], -r9
    3e6c:	0005e104 	andeq	lr, r5, r4, lsl #2
    3e70:	07090400 	streq	r0, [r9, -r0, lsl #8]
    3e74:	00000059 	andeq	r0, r0, r9, asr r0
    3e78:	00004805 	andeq	r4, r0, r5, lsl #16
    3e7c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3e80:	000040ee 	andeq	r4, r0, lr, ror #1
    3e84:	00005905 	andeq	r5, r0, r5, lsl #18
    3e88:	00590600 	subseq	r0, r9, r0, lsl #12
    3e8c:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    3e90:	02006c61 	andeq	r6, r0, #24832	; 0x6100
    3e94:	014f0b05 	cmpeq	pc, r5, lsl #22
    3e98:	84080000 	strhi	r0, [r8], #-0
    3e9c:	02000004 	andeq	r0, r0, #4
    3ea0:	00601907 	rsbeq	r1, r0, r7, lsl #18
    3ea4:	b2800000 	addlt	r0, r0, #0
    3ea8:	c9080ee6 	stmdbgt	r8, {r1, r2, r5, r6, r7, r9, sl, fp}
    3eac:	02000005 	andeq	r0, r0, #5
    3eb0:	015b1a0a 	cmpeq	fp, sl, lsl #20
    3eb4:	00000000 	andeq	r0, r0, r0
    3eb8:	4f082000 	svcmi	0x00082000
    3ebc:	02000004 	andeq	r0, r0, #4
    3ec0:	015b1a0d 	cmpeq	fp, sp, lsl #20
    3ec4:	00000000 	andeq	r0, r0, r0
    3ec8:	87092020 	strhi	r2, [r9, -r0, lsr #32]
    3ecc:	02000005 	andeq	r0, r0, #5
    3ed0:	00541510 	subseq	r1, r4, r0, lsl r5
    3ed4:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    3ed8:	00000370 	andeq	r0, r0, r0, ror r3
    3edc:	5b1a4202 	blpl	6946ec <_bss_end+0x68366c>
    3ee0:	00000001 	andeq	r0, r0, r1
    3ee4:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    3ee8:	00000347 	andeq	r0, r0, r7, asr #6
    3eec:	5b1a7102 	blpl	6a02fc <_bss_end+0x68f27c>
    3ef0:	00000001 	andeq	r0, r0, r1
    3ef4:	082000b2 	stmdaeq	r0!, {r1, r4, r5, r7}
    3ef8:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    3efc:	5b1aa402 	blpl	6acf0c <_bss_end+0x69be8c>
    3f00:	00000001 	andeq	r0, r0, r1
    3f04:	082000b4 	stmdaeq	r0!, {r2, r4, r5, r7}
    3f08:	00000361 	andeq	r0, r0, r1, ror #6
    3f0c:	5b1ab302 	blpl	6b0b1c <_bss_end+0x69fa9c>
    3f10:	00000001 	andeq	r0, r0, r1
    3f14:	0a201040 	beq	80801c <_bss_end+0x7f6f9c>
    3f18:	00001b5b 	andeq	r1, r0, fp, asr fp
    3f1c:	00330405 	eorseq	r0, r3, r5, lsl #8
    3f20:	b5020000 	strlt	r0, [r2, #-0]
    3f24:	00011e0d 	andeq	r1, r1, sp, lsl #28
    3f28:	330e0b00 	movwcc	r0, #60160	; 0xeb00
    3f2c:	0b000000 	bleq	3f34 <CPSR_IRQ_INHIBIT+0x3eb4>
    3f30:	00000a09 	andeq	r0, r0, r9, lsl #20
    3f34:	1ac50b01 	bne	ff146b40 <_bss_end+0xff135ac0>
    3f38:	0b020000 	bleq	83f40 <_bss_end+0x72ec0>
    3f3c:	00001a6b 	andeq	r1, r0, fp, ror #20
    3f40:	2e080004 	cdpcs	0, 0, cr0, cr8, cr4, {0}
    3f44:	02000003 	andeq	r0, r0, #3
    3f48:	015b1abe 	ldrheq	r1, [fp, #-174]	; 0xffffff52
    3f4c:	50000000 	andpl	r0, r0, r0
    3f50:	ec082020 	stc	0, cr2, [r8], {32}
    3f54:	02000003 	andeq	r0, r0, #3
    3f58:	015b1abf 	ldrheq	r1, [fp, #-175]	; 0xffffff51
    3f5c:	40000000 	andmi	r0, r0, r0
    3f60:	59082080 	stmdbpl	r8, {r7, sp}
    3f64:	02000004 	andeq	r0, r0, #4
    3f68:	015b1ac0 	cmpeq	fp, r0, asr #21
    3f6c:	50000000 	andpl	r0, r0, r0
    3f70:	0c002080 	stceq	0, cr2, [r0], {128}	; 0x80
    3f74:	00000076 	andeq	r0, r0, r6, ror r0
    3f78:	e9070402 	stmdb	r7, {r1, sl}
    3f7c:	05000040 	streq	r0, [r0, #-64]	; 0xffffffc0
    3f80:	00000154 	andeq	r0, r0, r4, asr r1
    3f84:	0000860c 	andeq	r8, r0, ip, lsl #12
    3f88:	00960c00 	addseq	r0, r6, r0, lsl #24
    3f8c:	a60c0000 	strge	r0, [ip], -r0
    3f90:	0c000000 	stceq	0, cr0, [r0], {-0}
    3f94:	000000b3 	strheq	r0, [r0], -r3
    3f98:	0000c30c 	andeq	ip, r0, ip, lsl #6
    3f9c:	00d30c00 	sbcseq	r0, r3, r0, lsl #24
    3fa0:	e30c0000 	movw	r0, #49152	; 0xc000
    3fa4:	0c000000 	stceq	0, cr0, [r0], {-0}
    3fa8:	0000011e 	andeq	r0, r0, lr, lsl r1
    3fac:	00012e0c 	andeq	r2, r1, ip, lsl #28
    3fb0:	013e0c00 	teqeq	lr, r0, lsl #24
    3fb4:	400d0000 	andmi	r0, sp, r0
    3fb8:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    3fbc:	57070603 	strpl	r0, [r7, -r3, lsl #12]
    3fc0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3fc4:	00001a25 	andeq	r1, r0, r5, lsr #20
    3fc8:	62220a03 	eorvs	r0, r2, #12288	; 0x3000
    3fcc:	00000002 	andeq	r0, r0, r2
    3fd0:	0007620e 	andeq	r6, r7, lr, lsl #4
    3fd4:	0e0e0300 	cdpeq	3, 0, cr0, cr14, cr0, {0}
    3fd8:	00000048 	andeq	r0, r0, r8, asr #32
    3fdc:	1b400f04 	blne	1007bf4 <_bss_end+0xff6b74>
    3fe0:	11030000 	mrsne	r0, (UNDEF: 3)
    3fe4:	001b1205 	andseq	r1, fp, r5, lsl #4
    3fe8:	00026700 	andeq	r6, r2, r0, lsl #14
    3fec:	01d20100 	bicseq	r0, r2, r0, lsl #2
    3ff0:	01dd0000 	bicseq	r0, sp, r0
    3ff4:	67100000 	ldrvs	r0, [r0, -r0]
    3ff8:	11000002 	tstne	r0, r2
    3ffc:	00000048 	andeq	r0, r0, r8, asr #32
    4000:	0a1d0f00 	beq	747c08 <_bss_end+0x736b88>
    4004:	14030000 	strne	r0, [r3], #-0
    4008:	001aca0a 	andseq	ip, sl, sl, lsl #20
    400c:	00027200 	andeq	r7, r2, r0, lsl #4
    4010:	01f60100 	mvnseq	r0, r0, lsl #2
    4014:	02010000 	andeq	r0, r1, #0
    4018:	67100000 	ldrvs	r0, [r0, -r0]
    401c:	11000002 	tstne	r0, r2
    4020:	00000272 	andeq	r0, r0, r2, ror r2
    4024:	09aa1200 	stmibeq	sl!, {r9, ip}
    4028:	16030000 	strne	r0, [r3], -r0
    402c:	001b200a 	andseq	r2, fp, sl
    4030:	02160100 	andseq	r0, r6, #0, 2
    4034:	021c0000 	andseq	r0, ip, #0
    4038:	67100000 	ldrvs	r0, [r0, -r0]
    403c:	00000002 	andeq	r0, r0, r2
    4040:	00073c0f 	andeq	r3, r7, pc, lsl #24
    4044:	0a180300 	beq	604c4c <_bss_end+0x5f3bcc>
    4048:	00001adb 	ldrdeq	r1, [r0], -fp
    404c:	00000272 	andeq	r0, r0, r2, ror r2
    4050:	00023501 	andeq	r3, r2, r1, lsl #10
    4054:	00023b00 	andeq	r3, r2, r0, lsl #22
    4058:	02791000 	rsbseq	r1, r9, #0
    405c:	13000000 	movwne	r0, #0
    4060:	00001b00 	andeq	r1, r0, r0, lsl #22
    4064:	3a0e1b03 	bcc	38ac78 <_bss_end+0x379bf8>
    4068:	4800001a 	stmdami	r0, {r1, r3, r4}
    406c:	01000000 	mrseq	r0, (UNDEF: 0)
    4070:	00000250 	andeq	r0, r0, r0, asr r2
    4074:	00026710 	andeq	r6, r2, r0, lsl r7
    4078:	05000000 	streq	r0, [r0, #-0]
    407c:	00000192 	muleq	r0, r2, r1
    4080:	00650414 	rsbeq	r0, r5, r4, lsl r4
    4084:	5c050000 	stcpl	0, cr0, [r5], {-0}
    4088:	14000002 	strne	r0, [r0], #-2
    408c:	00019204 	andeq	r9, r1, r4, lsl #4
    4090:	02670500 	rsbeq	r0, r7, #0, 10
    4094:	01020000 	mrseq	r0, (UNDEF: 2)
    4098:	0040a502 	subeq	sl, r0, r2, lsl #10
    409c:	57041400 	strpl	r1, [r4, -r0, lsl #8]
    40a0:	05000002 	streq	r0, [r0, #-2]
    40a4:	00000279 	andeq	r0, r0, r9, ror r2
    40a8:	001b5515 	andseq	r5, fp, r5, lsl r5
    40ac:	0e1e0300 	cdpeq	3, 1, cr0, cr14, cr0, {0}
    40b0:	00000192 	muleq	r0, r2, r1
    40b4:	00028416 	andeq	r8, r2, r6, lsl r4
    40b8:	07030100 	streq	r0, [r3, -r0, lsl #2]
    40bc:	ffbc0305 			; <UNDEFINED> instruction: 0xffbc0305
    40c0:	59170000 	ldmdbpl	r7, {}	; <UNPREDICTABLE>
    40c4:	0100001a 	tsteq	r0, sl, lsl r0
    40c8:	00541406 	subseq	r1, r4, r6, lsl #8
    40cc:	03050000 	movweq	r0, #20480	; 0x5000
    40d0:	0000f8f8 	strdeq	pc, [r0], -r8
    40d4:	001b4618 	andseq	r4, fp, r8, lsl r6
    40d8:	00b99c00 	adcseq	r9, r9, r0, lsl #24
    40dc:	00001c00 	andeq	r1, r0, r0, lsl #24
    40e0:	199c0100 	ldmibne	ip, {r8}
    40e4:	0000023e 	andeq	r0, r0, lr, lsr r2
    40e8:	0000b948 	andeq	fp, r0, r8, asr #18
    40ec:	00000054 	andeq	r0, r0, r4, asr r0
    40f0:	02f19c01 	rscseq	r9, r1, #256	; 0x100
    40f4:	381a0000 	ldmdacc	sl, {}	; <UNPREDICTABLE>
    40f8:	01000003 	tsteq	r0, r3
    40fc:	0033013e 	eorseq	r0, r3, lr, lsr r1
    4100:	91020000 	mrsls	r0, (UNDEF: 2)
    4104:	07311a74 			; <UNDEFINED> instruction: 0x07311a74
    4108:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    410c:	00003301 	andeq	r3, r0, r1, lsl #6
    4110:	70910200 	addsvc	r0, r1, r0, lsl #4
    4114:	023b1b00 	eorseq	r1, fp, #0, 22
    4118:	34010000 	strcc	r0, [r1], #-0
    411c:	00030b0a 	andeq	r0, r3, sl, lsl #22
    4120:	00b90000 	adcseq	r0, r9, r0
    4124:	00004800 	andeq	r4, r0, r0, lsl #16
    4128:	189c0100 	ldmne	ip, {r8}
    412c:	1c000003 	stcne	0, cr0, [r0], {3}
    4130:	00000329 	andeq	r0, r0, r9, lsr #6
    4134:	0000026d 	andeq	r0, r0, sp, ror #4
    4138:	00749102 	rsbseq	r9, r4, r2, lsl #2
    413c:	00021c1b 	andeq	r1, r2, fp, lsl ip
    4140:	062f0100 	strteq	r0, [pc], -r0, lsl #2
    4144:	00000332 	andeq	r0, r0, r2, lsr r3
    4148:	0000b8c8 	andeq	fp, r0, r8, asr #17
    414c:	00000038 	andeq	r0, r0, r8, lsr r0
    4150:	033f9c01 	teqeq	pc, #256	; 0x100
    4154:	291c0000 	ldmdbcs	ip, {}	; <UNPREDICTABLE>
    4158:	7f000003 	svcvc	0x00000003
    415c:	02000002 	andeq	r0, r0, #2
    4160:	1b007491 	blne	213ac <_bss_end+0x1032c>
    4164:	00000201 	andeq	r0, r0, r1, lsl #4
    4168:	59062401 	stmdbpl	r6, {r0, sl, sp}
    416c:	60000003 	andvs	r0, r0, r3
    4170:	680000b8 	stmdavs	r0, {r3, r4, r5, r7}
    4174:	01000000 	mrseq	r0, (UNDEF: 0)
    4178:	0003669c 	muleq	r3, ip, r6
    417c:	03291c00 			; <UNDEFINED> instruction: 0x03291c00
    4180:	026d0000 	rsbeq	r0, sp, #0
    4184:	91020000 	mrsls	r0, (UNDEF: 2)
    4188:	dd1b0074 	ldcle	0, cr0, [fp, #-464]	; 0xfffffe30
    418c:	01000001 	tsteq	r0, r1
    4190:	0380060f 	orreq	r0, r0, #15728640	; 0xf00000
    4194:	b7780000 	ldrblt	r0, [r8, -r0]!
    4198:	00e80000 	rsceq	r0, r8, r0
    419c:	9c010000 	stcls	0, cr0, [r1], {-0}
    41a0:	0000039c 	muleq	r0, ip, r3
    41a4:	0003291c 	andeq	r2, r3, ip, lsl r9
    41a8:	00026d00 	andeq	r6, r2, r0, lsl #26
    41ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    41b0:	001a301a 	andseq	r3, sl, sl, lsl r0
    41b4:	170f0100 	strne	r0, [pc, -r0, lsl #2]
    41b8:	00000272 	andeq	r0, r0, r2, ror r2
    41bc:	00739102 	rsbseq	r9, r3, r2, lsl #2
    41c0:	0001b91d 	andeq	fp, r1, sp, lsl r9
    41c4:	01080100 	mrseq	r0, (UNDEF: 24)
    41c8:	000003ad 	andeq	r0, r0, sp, lsr #7
    41cc:	0003c300 	andeq	ip, r3, r0, lsl #6
    41d0:	03291e00 			; <UNDEFINED> instruction: 0x03291e00
    41d4:	026d0000 	rsbeq	r0, sp, #0
    41d8:	f21f0000 	vhadd.s16	d0, d15, d0
    41dc:	0100001a 	tsteq	r0, sl, lsl r0
    41e0:	00481708 	subeq	r1, r8, r8, lsl #14
    41e4:	20000000 	andcs	r0, r0, r0
    41e8:	0000039c 	muleq	r0, ip, r3
    41ec:	00001b32 	andeq	r1, r0, r2, lsr fp
    41f0:	000003da 	ldrdeq	r0, [r0], -sl
    41f4:	0000b738 	andeq	fp, r0, r8, lsr r7
    41f8:	00000040 	andeq	r0, r0, r0, asr #32
    41fc:	ad219c01 	stcge	12, cr9, [r1, #-4]!
    4200:	02000003 	andeq	r0, r0, #3
    4204:	b6217491 			; <UNDEFINED> instruction: 0xb6217491
    4208:	02000003 	andeq	r0, r0, #3
    420c:	00007091 	muleq	r0, r1, r0
    4210:	000008ae 	andeq	r0, r0, lr, lsr #17
    4214:	16350004 	ldrtne	r0, [r5], -r4
    4218:	01040000 	mrseq	r0, (UNDEF: 4)
    421c:	00000061 	andeq	r0, r0, r1, rrx
    4220:	001d3e04 	andseq	r3, sp, r4, lsl #28
    4224:	00002600 	andeq	r2, r0, r0, lsl #12
    4228:	0000c000 	andeq	ip, r0, r0
    422c:	00000000 	andeq	r0, r0, r0
    4230:	001bf800 	andseq	pc, fp, r0, lsl #16
    4234:	08010200 	stmdaeq	r1, {r9}
    4238:	00000570 	andeq	r0, r0, r0, ror r5
    423c:	00002503 	andeq	r2, r0, r3, lsl #10
    4240:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    4244:	00000596 	muleq	r0, r6, r5
    4248:	69050404 	stmdbvs	r5, {r2, sl}
    424c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    4250:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
    4254:	3f050000 	svccc	0x00050000
    4258:	02000000 	andeq	r0, r0, #0
    425c:	03d90702 	bicseq	r0, r9, #524288	; 0x80000
    4260:	e1060000 	mrs	r0, (UNDEF: 6)
    4264:	05000005 	streq	r0, [r0, #-5]
    4268:	00630709 	rsbeq	r0, r3, r9, lsl #14
    426c:	52030000 	andpl	r0, r3, #0
    4270:	02000000 	andeq	r0, r0, #0
    4274:	40ee0704 	rscmi	r0, lr, r4, lsl #14
    4278:	41070000 	mrsmi	r0, (UNDEF: 7)
    427c:	0100001c 	tsteq	r0, ip, lsl r0
    4280:	005e1a06 	subseq	r1, lr, r6, lsl #20
    4284:	03050000 	movweq	r0, #20480	; 0x5000
    4288:	0000f8fc 	strdeq	pc, [r0], -ip
    428c:	001c7207 	andseq	r7, ip, r7, lsl #4
    4290:	1a080100 	bne	204698 <_bss_end+0x1f3618>
    4294:	0000005e 	andeq	r0, r0, lr, asr r0
    4298:	f9000305 			; <UNDEFINED> instruction: 0xf9000305
    429c:	90070000 	andls	r0, r7, r0
    42a0:	0100001d 	tsteq	r0, sp, lsl r0
    42a4:	005e1a0a 	subseq	r1, lr, sl, lsl #20
    42a8:	03050000 	movweq	r0, #20480	; 0x5000
    42ac:	0000f904 	andeq	pc, r0, r4, lsl #18
    42b0:	001b7607 	andseq	r7, fp, r7, lsl #12
    42b4:	1a0c0100 	bne	3046bc <_bss_end+0x2f363c>
    42b8:	0000005e 	andeq	r0, r0, lr, asr r0
    42bc:	f9080305 			; <UNDEFINED> instruction: 0xf9080305
    42c0:	5c080000 	stcpl	0, cr0, [r8], {-0}
    42c4:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    42c8:	00003804 	andeq	r3, r0, r4, lsl #16
    42cc:	0c0e0100 	stfeqs	f0, [lr], {-0}
    42d0:	000000d7 	ldrdeq	r0, [r0], -r7
    42d4:	001d3409 	andseq	r3, sp, r9, lsl #8
    42d8:	3a090000 	bcc	2442e0 <_bss_end+0x233260>
    42dc:	0100001e 	tsteq	r0, lr, lsl r0
    42e0:	001cd809 	andseq	sp, ip, r9, lsl #16
    42e4:	0a000200 	beq	4aec <CPSR_IRQ_INHIBIT+0x4a6c>
    42e8:	00001c84 	andeq	r1, r0, r4, lsl #25
    42ec:	074c0190 			; <UNDEFINED> instruction: 0x074c0190
    42f0:	00000260 	andeq	r0, r0, r0, ror #4
    42f4:	001c640b 	andseq	r6, ip, fp, lsl #8
    42f8:	50012400 	andpl	r2, r1, r0, lsl #8
    42fc:	00017a0c 	andeq	r7, r1, ip, lsl #20
    4300:	3af30c00 	bcc	ffcc7308 <_bss_end+0xffcb6288>
    4304:	52010000 	andpl	r0, r1, #0
    4308:	0002600e 	andeq	r6, r2, lr
    430c:	350c0000 	strcc	r0, [ip, #-0]
    4310:	0100001c 	tsteq	r0, ip, lsl r0
    4314:	02700e54 	rsbseq	r0, r0, #84, 28	; 0x540
    4318:	0c100000 	ldceq	0, cr0, [r0], {-0}
    431c:	00001b89 	andeq	r1, r0, r9, lsl #23
    4320:	52125601 	andspl	r5, r2, #1048576	; 0x100000
    4324:	14000000 	strne	r0, [r0], #-0
    4328:	001c5d0c 	andseq	r5, ip, ip, lsl #26
    432c:	18590100 	ldmdane	r9, {r8}^
    4330:	00000277 	andeq	r0, r0, r7, ror r2
    4334:	1c900c18 	ldcne	12, cr0, [r0], {24}
    4338:	5b010000 	blpl	44340 <_bss_end+0x332c0>
    433c:	00027718 	andeq	r7, r2, r8, lsl r7
    4340:	f80c1c00 			; <UNDEFINED> instruction: 0xf80c1c00
    4344:	0100000d 	tsteq	r0, sp
    4348:	0277185e 	rsbseq	r1, r7, #6160384	; 0x5e0000
    434c:	0d200000 	stceq	0, cr0, [r0, #-0]
    4350:	00001d0e 	andeq	r1, r0, lr, lsl #26
    4354:	cc186001 	ldcgt	0, cr6, [r8], {1}
    4358:	7700001d 	smladvc	r0, sp, r0, r0
    435c:	57000002 	strpl	r0, [r0, -r2]
    4360:	62000001 	andvs	r0, r0, #1
    4364:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4368:	00000277 	andeq	r0, r0, r7, ror r2
    436c:	0002820f 	andeq	r8, r2, pc, lsl #4
    4370:	64100000 	ldrvs	r0, [r0], #-0
    4374:	a100001c 	tstge	r0, ip, lsl r0
    4378:	7700001c 	smladvc	r0, ip, r0, r0
    437c:	73000002 	movwvc	r0, #2
    4380:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4384:	00000277 	andeq	r0, r0, r7, ror r2
    4388:	cd0b0000 	stcgt	0, cr0, [fp, #-0]
    438c:	1800001c 	stmdane	r0, {r2, r3, r4}
    4390:	af0c6401 	svcge	0x000c6401
    4394:	0c000001 	stceq	0, cr0, [r0], {1}
    4398:	00003af3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    439c:	600e6701 	andvs	r6, lr, r1, lsl #14
    43a0:	00000002 	andeq	r0, r0, r2
    43a4:	001bb30c 	andseq	fp, fp, ip, lsl #6
    43a8:	15690100 	strbne	r0, [r9, #-256]!	; 0xffffff00
    43ac:	00000282 	andeq	r0, r0, r2, lsl #5
    43b0:	1d230c10 	stcne	12, cr0, [r3, #-64]!	; 0xffffffc0
    43b4:	6b010000 	blvs	443bc <_bss_end+0x3333c>
    43b8:	0002921d 	andeq	r9, r2, sp, lsl r2
    43bc:	03001400 	movweq	r1, #1024	; 0x400
    43c0:	0000017a 	andeq	r0, r0, sl, ror r1
    43c4:	001bc911 	andseq	ip, fp, r1, lsl r9
    43c8:	1d6f0100 	stfnee	f0, [pc, #-0]	; 43d0 <CPSR_IRQ_INHIBIT+0x4350>
    43cc:	00000298 	muleq	r0, r8, r2
    43d0:	001b6411 	andseq	r6, fp, r1, lsl r4
    43d4:	1b710100 	blne	1c447dc <_bss_end+0x1c3375c>
    43d8:	0000005e 	andeq	r0, r0, lr, asr r0
    43dc:	001d9e0c 	andseq	r9, sp, ip, lsl #28
    43e0:	13740100 	cmnne	r4, #0, 2
    43e4:	000000e4 	andeq	r0, r0, r4, ror #1
    43e8:	1b940c00 	blne	fe5073f0 <_bss_end+0xfe4f6370>
    43ec:	77010000 	strvc	r0, [r1, -r0]
    43f0:	0000e413 	andeq	lr, r0, r3, lsl r4
    43f4:	2a0c2400 	bcs	30d3fc <_bss_end+0x2fc37c>
    43f8:	0100001d 	tsteq	r0, sp, lsl r0
    43fc:	00e41378 	rsceq	r1, r4, r8, ror r3
    4400:	0c480000 	mareq	acc0, r0, r8
    4404:	00001d19 	andeq	r1, r0, r9, lsl sp
    4408:	e4137901 	ldr	r7, [r3], #-2305	; 0xfffff6ff
    440c:	6c000000 	stcvs	0, cr0, [r0], {-0}
    4410:	001c8412 	andseq	r8, ip, r2, lsl r4
    4414:	057c0100 	ldrbeq	r0, [ip, #-256]!	; 0xffffff00
    4418:	00001dfc 	strdeq	r1, [r0], -ip
    441c:	000002a3 	andeq	r0, r0, r3, lsr #5
    4420:	00021901 	andeq	r1, r2, r1, lsl #18
    4424:	00021f00 	andeq	r1, r2, r0, lsl #30
    4428:	02a30e00 	adceq	r0, r3, #0, 28
    442c:	13000000 	movwne	r0, #0
    4430:	00001bbe 			; <UNDEFINED> instruction: 0x00001bbe
    4434:	450a7f01 	strmi	r7, [sl, #-3841]	; 0xfffff0ff
    4438:	0100001e 	tsteq	r0, lr, lsl r0
    443c:	00000234 	andeq	r0, r0, r4, lsr r2
    4440:	0000023a 	andeq	r0, r0, sl, lsr r2
    4444:	0002a30e 	andeq	sl, r2, lr, lsl #6
    4448:	1d140000 	ldcne	0, cr0, [r4, #-0]
    444c:	0100000a 	tsteq	r0, sl
    4450:	1ce30c82 	stclne	12, cr0, [r3], #520	; 0x208
    4454:	02b30000 	adcseq	r0, r3, #0
    4458:	4f010000 	svcmi	0x00010000
    445c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    4460:	000002a3 	andeq	r0, r0, r3, lsr #5
    4464:	0002820f 	andeq	r8, r2, pc, lsl #4
    4468:	00b20f00 	adcseq	r0, r2, r0, lsl #30
    446c:	00000000 	andeq	r0, r0, r0
    4470:	00002515 	andeq	r2, r0, r5, lsl r5
    4474:	00027000 	andeq	r7, r2, r0
    4478:	00631600 	rsbeq	r1, r3, r0, lsl #12
    447c:	000f0000 	andeq	r0, pc, r0
    4480:	a5020102 	strge	r0, [r2, #-258]	; 0xfffffefe
    4484:	17000040 	strne	r0, [r0, -r0, asr #32]
    4488:	0000e404 	andeq	lr, r0, r4, lsl #8
    448c:	02770300 	rsbseq	r0, r7, #0, 6
    4490:	04170000 	ldreq	r0, [r7], #-0
    4494:	0000002c 	andeq	r0, r0, ip, lsr #32
    4498:	00028203 	andeq	r8, r2, r3, lsl #4
    449c:	280f1800 	stmdacs	pc, {fp, ip}	; <UNPREDICTABLE>
    44a0:	04170000 	ldreq	r0, [r7], #-0
    44a4:	0000028d 	andeq	r0, r0, sp, lsl #5
    44a8:	0001af15 	andeq	sl, r1, r5, lsl pc
    44ac:	0002a300 	andeq	sl, r2, r0, lsl #6
    44b0:	17001900 	strne	r1, [r0, -r0, lsl #18]
    44b4:	0000d704 	andeq	sp, r0, r4, lsl #14
    44b8:	02a30300 	adceq	r0, r3, #0, 6
    44bc:	ea180000 	b	6044c4 <_bss_end+0x5f3444>
    44c0:	17000029 	strne	r0, [r0, -r9, lsr #32]
    44c4:	0002ae04 	andeq	sl, r2, r4, lsl #28
    44c8:	1be41a00 	blne	ff90acd0 <_bss_end+0xff8f9c50>
    44cc:	85010000 	strhi	r0, [r1, #-0]
    44d0:	0000d714 	andeq	sp, r0, r4, lsl r7
    44d4:	0b950a00 	bleq	fe546cdc <_bss_end+0xfe535c5c>
    44d8:	04180000 	ldreq	r0, [r8], #-0
    44dc:	05060703 	streq	r0, [r6, #-1795]	; 0xfffff8fd
    44e0:	131b0000 	tstne	fp, #0
    44e4:	0700000b 	streq	r0, [r0, -fp]
    44e8:	00006304 	andeq	r6, r0, r4, lsl #6
    44ec:	10060400 	andne	r0, r6, r0, lsl #8
    44f0:	0002f201 	andeq	pc, r2, r1, lsl #4
    44f4:	45481c00 	strbmi	r1, [r8, #-3072]	; 0xfffff400
    44f8:	1c100058 	ldcne	0, cr0, [r0], {88}	; 0x58
    44fc:	00434544 	subeq	r4, r3, r4, asr #10
    4500:	d203000a 	andle	r0, r3, #10
    4504:	0b000002 	bleq	4514 <CPSR_IRQ_INHIBIT+0x4494>
    4508:	00000b20 	andeq	r0, r0, r0, lsr #22
    450c:	0c240408 	cfstrseq	mvf0, [r4], #-32	; 0xffffffe0
    4510:	0000031b 	andeq	r0, r0, fp, lsl r3
    4514:	0400791d 	streq	r7, [r0], #-2333	; 0xfffff6e3
    4518:	00631626 	rsbeq	r1, r3, r6, lsr #12
    451c:	1d000000 	stcne	0, cr0, [r0, #-0]
    4520:	27040078 	smlsdxcs	r4, r8, r0, r0
    4524:	00006316 	andeq	r6, r0, r6, lsl r3
    4528:	1e000400 	cfcpysne	mvf0, mvf0
    452c:	00000c72 	andeq	r0, r0, r2, ror ip
    4530:	f21b0c04 			; <UNDEFINED> instruction: 0xf21b0c04
    4534:	01000002 	tsteq	r0, r2
    4538:	0be51f0a 	bleq	ff94c168 <_bss_end+0xff93b0e8>
    453c:	0d040000 	stceq	0, cr0, [r4, #-0]
    4540:	00028828 	andeq	r8, r2, r8, lsr #16
    4544:	95200100 	strls	r0, [r0, #-256]!	; 0xffffff00
    4548:	0400000b 	streq	r0, [r0], #-11
    454c:	0c5f0e10 	mrrceq	14, 1, r0, pc, cr0	; <UNPREDICTABLE>
    4550:	05060000 	streq	r0, [r6, #-0]
    4554:	4f010000 	svcmi	0x00010000
    4558:	64000003 	strvs	r0, [r0], #-3
    455c:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    4560:	00000506 	andeq	r0, r0, r6, lsl #10
    4564:	0000630f 	andeq	r6, r0, pc, lsl #6
    4568:	00630f00 	rsbeq	r0, r3, r0, lsl #30
    456c:	630f0000 	movwvs	r0, #61440	; 0xf000
    4570:	00000000 	andeq	r0, r0, r0
    4574:	00189613 	andseq	r9, r8, r3, lsl r6
    4578:	0a120400 	beq	485580 <_bss_end+0x474500>
    457c:	00000b80 	andeq	r0, r0, r0, lsl #23
    4580:	00037901 	andeq	r7, r3, r1, lsl #18
    4584:	00037f00 	andeq	r7, r3, r0, lsl #30
    4588:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    458c:	12000000 	andne	r0, r0, #0
    4590:	00000b9e 	muleq	r0, lr, fp
    4594:	020f1404 	andeq	r1, pc, #4, 8	; 0x4000000
    4598:	0c00000c 	stceq	0, cr0, [r0], {12}
    459c:	01000005 	tsteq	r0, r5
    45a0:	00000398 	muleq	r0, r8, r3
    45a4:	000003a3 	andeq	r0, r0, r3, lsr #7
    45a8:	0005060e 	andeq	r0, r5, lr, lsl #12
    45ac:	00250f00 	eoreq	r0, r5, r0, lsl #30
    45b0:	12000000 	andne	r0, r0, #0
    45b4:	00000b9e 	muleq	r0, lr, fp
    45b8:	a90f1504 	stmdbge	pc, {r2, r8, sl, ip}	; <UNPREDICTABLE>
    45bc:	0c00000b 	stceq	0, cr0, [r0], {11}
    45c0:	01000005 	tsteq	r0, r5
    45c4:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    45c8:	000003c7 	andeq	r0, r0, r7, asr #7
    45cc:	0005060e 	andeq	r0, r5, lr, lsl #12
    45d0:	02820f00 	addeq	r0, r2, #0, 30
    45d4:	12000000 	andne	r0, r0, #0
    45d8:	00000b9e 	muleq	r0, lr, fp
    45dc:	860f1604 	strhi	r1, [pc], -r4, lsl #12
    45e0:	0c00000c 	stceq	0, cr0, [r0], {12}
    45e4:	01000005 	tsteq	r0, r5
    45e8:	000003e0 	andeq	r0, r0, r0, ror #7
    45ec:	000003eb 	andeq	r0, r0, fp, ror #7
    45f0:	0005060e 	andeq	r0, r5, lr, lsl #12
    45f4:	02d20f00 	sbcseq	r0, r2, #0, 30
    45f8:	12000000 	andne	r0, r0, #0
    45fc:	00000b9e 	muleq	r0, lr, fp
    4600:	310f1704 	tstcc	pc, r4, lsl #14
    4604:	0c00000c 	stceq	0, cr0, [r0], {12}
    4608:	01000005 	tsteq	r0, r5
    460c:	00000404 	andeq	r0, r0, r4, lsl #8
    4610:	0000040f 	andeq	r0, r0, pc, lsl #8
    4614:	0005060e 	andeq	r0, r5, lr, lsl #12
    4618:	00630f00 	rsbeq	r0, r3, r0, lsl #30
    461c:	12000000 	andne	r0, r0, #0
    4620:	00000b9e 	muleq	r0, lr, fp
    4624:	f10f1804 			; <UNDEFINED> instruction: 0xf10f1804
    4628:	0c00000b 	stceq	0, cr0, [r0], {11}
    462c:	01000005 	tsteq	r0, r5
    4630:	00000428 	andeq	r0, r0, r8, lsr #8
    4634:	00000433 	andeq	r0, r0, r3, lsr r4
    4638:	0005060e 	andeq	r0, r5, lr, lsl #12
    463c:	02700f00 	rsbseq	r0, r0, #0, 30
    4640:	21000000 	mrscs	r0, (UNDEF: 0)
    4644:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    4648:	81111b04 	tsthi	r1, r4, lsl #22
    464c:	4700000a 	strmi	r0, [r0, -sl]
    4650:	4d000004 	stcmi	0, cr0, [r0, #-16]
    4654:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4658:	00000506 	andeq	r0, r0, r6, lsl #10
    465c:	0aa42100 	beq	fe90ca64 <_bss_end+0xfe8fb9e4>
    4660:	1c040000 	stcne	0, cr0, [r4], {-0}
    4664:	000c4211 	andeq	r4, ip, r1, lsl r2
    4668:	00046100 	andeq	r6, r4, r0, lsl #2
    466c:	00046700 	andeq	r6, r4, r0, lsl #14
    4670:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    4674:	21000000 	mrscs	r0, (UNDEF: 0)
    4678:	00000a5c 	andeq	r0, r0, ip, asr sl
    467c:	2a111d04 	bcs	44ba94 <_bss_end+0x43aa14>
    4680:	7b00000b 	blvc	46b4 <CPSR_IRQ_INHIBIT+0x4634>
    4684:	81000004 	tsthi	r0, r4
    4688:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    468c:	00000506 	andeq	r0, r0, r6, lsl #10
    4690:	13de2100 	bicsne	r2, lr, #0, 2
    4694:	1f040000 	svcne	0x00040000
    4698:	000c1b0a 	andeq	r1, ip, sl, lsl #22
    469c:	00049500 	andeq	r9, r4, r0, lsl #10
    46a0:	00049b00 	andeq	r9, r4, r0, lsl #22
    46a4:	05060e00 	streq	r0, [r6, #-3584]	; 0xfffff200
    46a8:	21000000 	mrscs	r0, (UNDEF: 0)
    46ac:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    46b0:	bc0a2104 	stflts	f2, [sl], {4}
    46b4:	af00000b 	svcge	0x0000000b
    46b8:	c4000004 	strgt	r0, [r0], #-4
    46bc:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    46c0:	00000506 	andeq	r0, r0, r6, lsl #10
    46c4:	0000630f 	andeq	r6, r0, pc, lsl #6
    46c8:	05120f00 	ldreq	r0, [r2, #-3840]	; 0xfffff100
    46cc:	630f0000 	movwvs	r0, #61440	; 0xf000
    46d0:	00000000 	andeq	r0, r0, r0
    46d4:	000b4c0c 	andeq	r4, fp, ip, lsl #24
    46d8:	232b0400 			; <UNDEFINED> instruction: 0x232b0400
    46dc:	0000051e 	andeq	r0, r0, lr, lsl r5
    46e0:	0c130c00 	ldceq	12, cr0, [r3], {-0}
    46e4:	2c040000 	stccs	0, cr0, [r4], {-0}
    46e8:	00006312 	andeq	r6, r0, r2, lsl r3
    46ec:	d30c0400 	movwle	r0, #50176	; 0xc400
    46f0:	0400000b 	streq	r0, [r0], #-11
    46f4:	0063122d 	rsbeq	r1, r3, sp, lsr #4
    46f8:	0c080000 	stceq	0, cr0, [r8], {-0}
    46fc:	00000bdc 	ldrdeq	r0, [r0], -ip
    4700:	f70f2e04 			; <UNDEFINED> instruction: 0xf70f2e04
    4704:	0c000002 	stceq	0, cr0, [r0], {2}
    4708:	000a4e0c 	andeq	r4, sl, ip, lsl #28
    470c:	122f0400 	eorne	r0, pc, #0, 8
    4710:	000002d2 	ldrdeq	r0, [r0], -r2
    4714:	04170014 	ldreq	r0, [r7], #-20	; 0xffffffec
    4718:	000002c5 	andeq	r0, r0, r5, asr #5
    471c:	02c50422 	sbceq	r0, r5, #570425344	; 0x22000000
    4720:	04170000 	ldreq	r0, [r7], #-0
    4724:	00000025 	andeq	r0, r0, r5, lsr #32
    4728:	00460417 	subeq	r0, r6, r7, lsl r4
    472c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    4730:	1a000005 	bne	474c <CPSR_IRQ_INHIBIT+0x46cc>
    4734:	00000b65 	andeq	r0, r0, r5, ror #22
    4738:	c5113204 	ldrgt	r3, [r1, #-516]	; 0xfffffdfc
    473c:	0b000002 	bleq	474c <CPSR_IRQ_INHIBIT+0x46cc>
    4740:	000013bb 			; <UNDEFINED> instruction: 0x000013bb
    4744:	08080310 	stmdaeq	r8, {r4, r8, r9}
    4748:	00000571 	andeq	r0, r0, r1, ror r5
    474c:	000d050c 	andeq	r0, sp, ip, lsl #10
    4750:	200a0300 	andcs	r0, sl, r0, lsl #6
    4754:	00000571 	andeq	r0, r0, r1, ror r5
    4758:	0df80c00 	ldcleq	12, cr0, [r8]
    475c:	0b030000 	bleq	c4764 <_bss_end+0xb36e4>
    4760:	00057120 	andeq	r7, r5, r0, lsr #2
    4764:	450c0400 	strmi	r0, [ip, #-1024]	; 0xfffffc00
    4768:	0300000e 	movweq	r0, #14
    476c:	00520e0c 	subseq	r0, r2, ip, lsl #28
    4770:	0c080000 	stceq	0, cr0, [r8], {-0}
    4774:	00000e99 	muleq	r0, r9, lr
    4778:	700a0d03 	andvc	r0, sl, r3, lsl #26
    477c:	0c000002 	stceq	0, cr0, [r0], {2}
    4780:	2f041700 	svccs	0x00041700
    4784:	0a000005 	beq	47a0 <CPSR_IRQ_INHIBIT+0x4720>
    4788:	00000dfd 	strdeq	r0, [r0], -sp
    478c:	07100304 	ldreq	r0, [r0, -r4, lsl #6]
    4790:	00000635 	andeq	r0, r0, r5, lsr r6
    4794:	00133e0c 	andseq	r3, r3, ip, lsl #28
    4798:	20130300 	andscs	r0, r3, r0, lsl #6
    479c:	00000571 	andeq	r0, r0, r1, ror r5
    47a0:	13800d00 	orrne	r0, r0, #0, 26
    47a4:	15030000 	strne	r0, [r3, #-0]
    47a8:	000d0a20 	andeq	r0, sp, r0, lsr #20
    47ac:	00057100 	andeq	r7, r5, r0, lsl #2
    47b0:	0005a900 	andeq	sl, r5, r0, lsl #18
    47b4:	0005af00 	andeq	sl, r5, r0, lsl #30
    47b8:	06350e00 	ldrteq	r0, [r5], -r0, lsl #28
    47bc:	12000000 	andne	r0, r0, #0
    47c0:	00000dfd 	strdeq	r0, [r0], -sp
    47c4:	20051803 	andcs	r1, r5, r3, lsl #16
    47c8:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
    47cc:	01000006 	tsteq	r0, r6
    47d0:	000005c8 	andeq	r0, r0, r8, asr #11
    47d4:	000005ce 	andeq	r0, r0, lr, asr #11
    47d8:	0006350e 	andeq	r3, r6, lr, lsl #10
    47dc:	d8120000 	ldmdale	r2, {}	; <UNPREDICTABLE>
    47e0:	0300000e 	movweq	r0, #14
    47e4:	11940b1a 	orrsne	r0, r4, sl, lsl fp
    47e8:	06400000 	strbeq	r0, [r0], -r0
    47ec:	e7010000 	str	r0, [r1, -r0]
    47f0:	f2000005 	vhadd.s8	d0, d0, d5
    47f4:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    47f8:	00000635 	andeq	r0, r0, r5, lsr r6
    47fc:	0000520f 	andeq	r5, r0, pc, lsl #4
    4800:	42130000 	andsmi	r0, r3, #0
    4804:	0300000f 	movweq	r0, #15
    4808:	10d30a1b 	sbcsne	r0, r3, fp, lsl sl
    480c:	07010000 	streq	r0, [r1, -r0]
    4810:	12000006 	andne	r0, r0, #6
    4814:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    4818:	00000635 	andeq	r0, r0, r5, lsr r6
    481c:	0006400f 	andeq	r4, r6, pc
    4820:	aa140000 	bge	504828 <_bss_end+0x4f37a8>
    4824:	0300001d 	movweq	r0, #29
    4828:	1bf0081e 	blne	ffc068a8 <_bss_end+0xffbf5828>
    482c:	02770000 	rsbseq	r0, r7, #0
    4830:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4834:	23000006 	movwcs	r0, #6
    4838:	00e40054 	rsceq	r0, r4, r4, asr r0
    483c:	350e0000 	strcc	r0, [lr, #-0]
    4840:	00000006 	andeq	r0, r0, r6
    4844:	77041700 	strvc	r1, [r4, -r0, lsl #14]
    4848:	03000005 	movweq	r0, #5
    484c:	00000635 	andeq	r0, r0, r5, lsr r6
    4850:	7e1a0424 	cfmuldvc	mvd0, mvd10, mvd4
    4854:	03000035 	movweq	r0, #53	; 0x35
    4858:	05771d24 	ldrbeq	r1, [r7, #-3364]!	; 0xfffff2dc
    485c:	b9250000 	stmdblt	r5!, {}	; <UNPREDICTABLE>
    4860:	02000002 	andeq	r0, r0, #2
    4864:	03050d08 	movweq	r0, #23816	; 0x5d08
    4868:	0000ffc4 	andeq	pc, r0, r4, asr #31
    486c:	001bd526 	andseq	sp, fp, r6, lsr #10
    4870:	00c1f800 	sbceq	pc, r1, r0, lsl #16
    4874:	00001c00 	andeq	r1, r0, r0, lsl #24
    4878:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
    487c:	0000023e 	andeq	r0, r0, lr, lsr r2
    4880:	0000c1ac 	andeq	ip, r0, ip, lsr #3
    4884:	0000004c 	andeq	r0, r0, ip, asr #32
    4888:	069d9c01 	ldreq	r9, [sp], r1, lsl #24
    488c:	38280000 	stmdacc	r8!, {}	; <UNPREDICTABLE>
    4890:	02000003 	andeq	r0, r0, #3
    4894:	003801b8 	ldrhteq	r0, [r8], -r8
    4898:	91020000 	mrsls	r0, (UNDEF: 2)
    489c:	07312874 			; <UNDEFINED> instruction: 0x07312874
    48a0:	b8020000 	stmdalt	r2, {}	; <UNPREDICTABLE>
    48a4:	00003801 	andeq	r3, r0, r1, lsl #16
    48a8:	70910200 	addsvc	r0, r1, r0, lsl #4
    48ac:	06122900 	ldreq	r2, [r2], -r0, lsl #18
    48b0:	06bb0000 	ldrteq	r0, [fp], r0
    48b4:	c2500000 	subsgt	r0, r0, #0
    48b8:	002c0000 	eoreq	r0, ip, r0
    48bc:	9c010000 	stcls	0, cr0, [r1], {-0}
    48c0:	000006c8 	andeq	r0, r0, r8, asr #13
    48c4:	e4005423 	str	r5, [r0], #-1059	; 0xfffffbdd
    48c8:	2a000000 	bcs	48d0 <CPSR_IRQ_INHIBIT+0x4850>
    48cc:	00000329 	andeq	r0, r0, r9, lsr #6
    48d0:	0000063b 	andeq	r0, r0, fp, lsr r6
    48d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    48d8:	00023a2b 	andeq	r3, r2, fp, lsr #20
    48dc:	088a0200 	stmeq	sl, {r9}
    48e0:	000006e2 	andeq	r0, r0, r2, ror #13
    48e4:	0000bf50 	andeq	fp, r0, r0, asr pc
    48e8:	0000025c 	andeq	r0, r0, ip, asr r2
    48ec:	07569c01 	ldrbeq	r9, [r6, -r1, lsl #24]
    48f0:	292a0000 	stmdbcs	sl!, {}	; <UNPREDICTABLE>
    48f4:	a9000003 	stmdbge	r0, {r0, r1}
    48f8:	02000002 	andeq	r0, r0, #2
    48fc:	11285491 			; <UNDEFINED> instruction: 0x11285491
    4900:	0200001e 	andeq	r0, r0, #30
    4904:	0282268a 	addeq	r2, r2, #144703488	; 0x8a00000
    4908:	91020000 	mrsls	r0, (UNDEF: 2)
    490c:	036b2850 	cmneq	fp, #80, 16	; 0x500000
    4910:	8a020000 	bhi	84918 <_bss_end+0x73898>
    4914:	0000b23c 	andeq	fp, r0, ip, lsr r2
    4918:	4c910200 	lfmmi	f0, 4, [r1], {0}
    491c:	001cc52c 	andseq	ip, ip, ip, lsr #10
    4920:	0a8c0200 	beq	fe305128 <_bss_end+0xfe2f40a8>
    4924:	00000260 	andeq	r0, r0, r0, ror #4
    4928:	2c589102 	ldfcsp	f1, [r8], {2}
    492c:	00001c57 	andeq	r1, r0, r7, asr ip
    4930:	82118d02 	andshi	r8, r1, #2, 26	; 0x80
    4934:	02000002 	andeq	r0, r0, #2
    4938:	6a2d7491 	bvs	b61b84 <_bss_end+0xb50b04>
    493c:	09900200 	ldmibeq	r0, {r9}
    4940:	00000038 	andeq	r0, r0, r8, lsr r0
    4944:	2c709102 	ldfcsp	f1, [r0], #-8
    4948:	0000383f 	andeq	r3, r0, pc, lsr r8
    494c:	77149402 	ldrvc	r9, [r4, -r2, lsl #8]
    4950:	02000002 	andeq	r0, r0, #2
    4954:	992c6c91 	stmdbls	ip!, {r0, r4, r7, sl, fp, sp, lr}
    4958:	0200001c 	andeq	r0, r0, #28
    495c:	02772494 	rsbseq	r2, r7, #148, 8	; 0x94000000
    4960:	91020000 	mrsls	r0, (UNDEF: 2)
    4964:	1f2b0068 	svcne	0x002b0068
    4968:	02000002 	andeq	r0, r0, #2
    496c:	0770063a 			; <UNDEFINED> instruction: 0x0770063a
    4970:	bbf40000 	bllt	ffd04978 <_bss_end+0xffcf38f8>
    4974:	035c0000 	cmpeq	ip, #0
    4978:	9c010000 	stcls	0, cr0, [r1], {-0}
    497c:	000007ec 	andeq	r0, r0, ip, ror #15
    4980:	0003292a 	andeq	r2, r3, sl, lsr #18
    4984:	0002a900 	andeq	sl, r2, r0, lsl #18
    4988:	4c910200 	lfmmi	f0, 4, [r1], {0}
    498c:	001cc52c 	andseq	ip, ip, ip, lsr #10
    4990:	0a3e0200 	beq	f85198 <_bss_end+0xf74118>
    4994:	00000260 	andeq	r0, r0, r0, ror #4
    4998:	2c509102 	ldfcsp	f1, [r0], {2}
    499c:	00001c57 	andeq	r1, r0, r7, asr ip
    49a0:	82113f02 	andshi	r3, r1, #2, 30
    49a4:	02000002 	andeq	r0, r0, #2
    49a8:	692d7491 	pushvs	{r0, r4, r7, sl, ip, sp, lr}
    49ac:	09410200 	stmdbeq	r1, {r9}^
    49b0:	00000038 	andeq	r0, r0, r8, lsr r0
    49b4:	2d709102 	ldfcsp	f1, [r0, #-8]!
    49b8:	4102006a 	tstmi	r2, sl, rrx
    49bc:	0000380c 	andeq	r3, r0, ip, lsl #16
    49c0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    49c4:	00bc2c2e 	adcseq	r2, ip, lr, lsr #24
    49c8:	0002c400 	andeq	ip, r2, r0, lsl #8
    49cc:	74702d00 	ldrbtvc	r2, [r0], #-3328	; 0xfffff300
    49d0:	45020072 	strmi	r0, [r2, #-114]	; 0xffffff8e
    49d4:	0007ec1b 	andeq	lr, r7, fp, lsl ip
    49d8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    49dc:	00383f2c 	eorseq	r3, r8, ip, lsr #30
    49e0:	184b0200 	stmdane	fp, {r9}^
    49e4:	00000277 	andeq	r0, r0, r7, ror r2
    49e8:	2c689102 	stfcsp	f1, [r8], #-8
    49ec:	00001c99 	muleq	r0, r9, ip
    49f0:	77284b02 	strvc	r4, [r8, -r2, lsl #22]!
    49f4:	02000002 	andeq	r0, r0, #2
    49f8:	00006091 	muleq	r0, r1, r0
    49fc:	01af0417 			; <UNDEFINED> instruction: 0x01af0417
    4a00:	3f2b0000 	svccc	0x002b0000
    4a04:	02000001 	andeq	r0, r0, #1
    4a08:	080c1d2b 	stmdaeq	ip, {r0, r1, r3, r5, r8, sl, fp, ip}
    4a0c:	bb700000 	bllt	1c04a14 <_bss_end+0x1bf3994>
    4a10:	00840000 	addeq	r0, r4, r0
    4a14:	9c010000 	stcls	0, cr0, [r1], {-0}
    4a18:	00000837 	andeq	r0, r0, r7, lsr r8
    4a1c:	0003292a 	andeq	r2, r3, sl, lsr #18
    4a20:	00027d00 	andeq	r7, r2, r0, lsl #26
    4a24:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4a28:	003af328 	eorseq	pc, sl, r8, lsr #6
    4a2c:	502b0200 	eorpl	r0, fp, r0, lsl #4
    4a30:	00000282 	andeq	r0, r0, r2, lsl #5
    4a34:	2c689102 	stfcsp	f1, [r8], #-8
    4a38:	00001da4 	andeq	r1, r0, r4, lsr #27
    4a3c:	77142d02 	ldrvc	r2, [r4, -r2, lsl #26]
    4a40:	02000002 	andeq	r0, r0, #2
    4a44:	2f007491 	svccs	0x00007491
    4a48:	00000200 	andeq	r0, r0, r0, lsl #4
    4a4c:	48010a02 	stmdami	r1, {r1, r9, fp}
    4a50:	00000008 	andeq	r0, r0, r8
    4a54:	00000852 	andeq	r0, r0, r2, asr r8
    4a58:	00032930 	andeq	r2, r3, r0, lsr r9
    4a5c:	0002a900 	andeq	sl, r2, r0, lsl #18
    4a60:	37310000 	ldrcc	r0, [r1, -r0]!
    4a64:	9e000008 	cdpls	0, 0, cr0, cr0, cr8, {0}
    4a68:	6d00001b 	stcvs	0, cr0, [r0, #-108]	; 0xffffff94
    4a6c:	b8000008 	stmdalt	r0, {r3}
    4a70:	b80000b9 	stmdalt	r0, {r0, r3, r4, r5, r7}
    4a74:	01000001 	tsteq	r0, r1
    4a78:	0008769c 	muleq	r8, ip, r6
    4a7c:	08483200 	stmdaeq	r8, {r9, ip, sp}^
    4a80:	91020000 	mrsls	r0, (UNDEF: 2)
    4a84:	622f0074 	eorvs	r0, pc, #116	; 0x74
    4a88:	01000001 	tsteq	r0, r1
    4a8c:	08870c50 	stmeq	r7, {r4, r6, sl, fp}
    4a90:	91020000 	mrsls	r0, (UNDEF: 2)
    4a94:	30000008 	andcc	r0, r0, r8
    4a98:	00000329 	andeq	r0, r0, r9, lsr #6
    4a9c:	0000027d 	andeq	r0, r0, sp, ror r2
    4aa0:	08763300 	ldmdaeq	r6!, {r8, r9, ip, sp}^
    4aa4:	1e160000 	cdpne	0, 1, cr0, cr6, cr0, {0}
    4aa8:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    4aac:	c2140000 	andsgt	r0, r4, #0
    4ab0:	003c0000 	eorseq	r0, ip, r0
    4ab4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4ab8:	00088732 	andeq	r8, r8, r2, lsr r7
    4abc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4ac0:	28c20000 	stmiacs	r2, {}^	; <UNPREDICTABLE>
    4ac4:	00040000 	andeq	r0, r4, r0
    4ac8:	00001967 	andeq	r1, r0, r7, ror #18
    4acc:	00610104 	rsbeq	r0, r1, r4, lsl #2
    4ad0:	d4040000 	strle	r0, [r4], #-0
    4ad4:	26000022 	strcs	r0, [r0], -r2, lsr #32
    4ad8:	e0000000 	and	r0, r0, r0
    4adc:	00000000 	andeq	r0, r0, r0
    4ae0:	c6000000 	strgt	r0, [r0], -r0
    4ae4:	02000020 	andeq	r0, r0, #32
    4ae8:	05700801 	ldrbeq	r0, [r0, #-2049]!	; 0xfffff7ff
    4aec:	25030000 	strcs	r0, [r3, #-0]
    4af0:	02000000 	andeq	r0, r0, #0
    4af4:	05960502 	ldreq	r0, [r6, #1282]	; 0x502
    4af8:	04040000 	streq	r0, [r4], #-0
    4afc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4b00:	00380300 	eorseq	r0, r8, r0, lsl #6
    4b04:	7f050000 	svcvc	0x00050000
    4b08:	08000009 	stmdaeq	r0, {r0, r3}
    4b0c:	00550707 	subseq	r0, r5, r7, lsl #14
    4b10:	44030000 	strmi	r0, [r3], #-0
    4b14:	02000000 	andeq	r0, r0, #0
    4b18:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
    4b1c:	55060000 	strpl	r0, [r6, #-0]
    4b20:	02000000 	andeq	r0, r0, #0
    4b24:	03d90702 	bicseq	r0, r9, #524288	; 0x80000
    4b28:	e1050000 	mrs	r0, (UNDEF: 5)
    4b2c:	08000005 	stmdaeq	r0, {r0, r2}
    4b30:	00790709 	rsbseq	r0, r9, r9, lsl #14
    4b34:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    4b38:	02000000 	andeq	r0, r0, #0
    4b3c:	40ee0704 	rscmi	r0, lr, r4, lsl #14
    4b40:	79030000 	stmdbvc	r3, {}	; <UNPREDICTABLE>
    4b44:	06000000 	streq	r0, [r0], -r0
    4b48:	00000079 	andeq	r0, r0, r9, ror r0
    4b4c:	00212207 	eoreq	r2, r1, r7, lsl #4
    4b50:	38040500 	stmdacc	r4, {r8, sl}
    4b54:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    4b58:	00a90c43 	adceq	r0, r9, r3, asr #24
    4b5c:	11080000 	mrsne	r0, (UNDEF: 8)
    4b60:	00000022 	andeq	r0, r0, r2, lsr #32
    4b64:	001fe608 	andseq	lr, pc, r8, lsl #12
    4b68:	09000100 	stmdbeq	r0, {r8}
    4b6c:	00001c41 	andeq	r1, r0, r1, asr #24
    4b70:	741a0601 	ldrvc	r0, [sl], #-1537	; 0xfffff9ff
    4b74:	05000000 	streq	r0, [r0, #-0]
    4b78:	00f9d403 	rscseq	sp, r9, r3, lsl #8
    4b7c:	1c720900 			; <UNDEFINED> instruction: 0x1c720900
    4b80:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    4b84:	0000741a 	andeq	r7, r0, sl, lsl r4
    4b88:	d8030500 	stmdale	r3, {r8, sl}
    4b8c:	090000f9 	stmdbeq	r0, {r0, r3, r4, r5, r6, r7}
    4b90:	00001d90 	muleq	r0, r0, sp
    4b94:	741a0a01 	ldrvc	r0, [sl], #-2561	; 0xfffff5ff
    4b98:	05000000 	streq	r0, [r0, #-0]
    4b9c:	00f9dc03 	rscseq	sp, r9, r3, lsl #24
    4ba0:	1b760900 	blne	1d86fa8 <_bss_end+0x1d75f28>
    4ba4:	0c010000 	stceq	0, cr0, [r1], {-0}
    4ba8:	0000741a 	andeq	r7, r0, sl, lsl r4
    4bac:	e0030500 	and	r0, r3, r0, lsl #10
    4bb0:	070000f9 			; <UNDEFINED> instruction: 0x070000f9
    4bb4:	0000235c 	andeq	r2, r0, ip, asr r3
    4bb8:	00380405 	eorseq	r0, r8, r5, lsl #8
    4bbc:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    4bc0:	0001160c 	andeq	r1, r1, ip, lsl #12
    4bc4:	1d340800 	ldcne	8, cr0, [r4, #-0]
    4bc8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4bcc:	00001e3a 	andeq	r1, r0, sl, lsr lr
    4bd0:	1cd80801 	ldclne	8, cr0, [r8], {1}
    4bd4:	00020000 	andeq	r0, r2, r0
    4bd8:	001c840a 	andseq	r8, ip, sl, lsl #8
    4bdc:	4c019000 	stcmi	0, cr9, [r1], {-0}
    4be0:	00028407 	andeq	r8, r2, r7, lsl #8
    4be4:	1c640b00 			; <UNDEFINED> instruction: 0x1c640b00
    4be8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    4bec:	019e0c50 	orrseq	r0, lr, r0, asr ip
    4bf0:	f30c0000 	vhadd.u8	d0, d12, d0
    4bf4:	0100003a 	tsteq	r0, sl, lsr r0
    4bf8:	02840e52 	addeq	r0, r4, #1312	; 0x520
    4bfc:	0c000000 	stceq	0, cr0, [r0], {-0}
    4c00:	00001c35 	andeq	r1, r0, r5, lsr ip
    4c04:	940e5401 	strls	r5, [lr], #-1025	; 0xfffffbff
    4c08:	10000002 	andne	r0, r0, r2
    4c0c:	001b890c 	andseq	r8, fp, ip, lsl #18
    4c10:	12560100 	subsne	r0, r6, #0, 2
    4c14:	00000068 	andeq	r0, r0, r8, rrx
    4c18:	1c5d0c14 	mrrcne	12, 1, r0, sp, cr4
    4c1c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    4c20:	00029b18 	andeq	r9, r2, r8, lsl fp
    4c24:	900c1800 	andls	r1, ip, r0, lsl #16
    4c28:	0100001c 	tsteq	r0, ip, lsl r0
    4c2c:	029b185b 	addseq	r1, fp, #5963776	; 0x5b0000
    4c30:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    4c34:	00000df8 	strdeq	r0, [r0], -r8
    4c38:	9b185e01 	blls	61c444 <_bss_end+0x60b3c4>
    4c3c:	20000002 	andcs	r0, r0, r2
    4c40:	001d0e0d 	andseq	r0, sp, sp, lsl #28
    4c44:	18600100 	stmdane	r0!, {r8}^
    4c48:	00001dcc 	andeq	r1, r0, ip, asr #27
    4c4c:	0000029b 	muleq	r0, fp, r2
    4c50:	00000192 	muleq	r0, r2, r1
    4c54:	00029b0e 	andeq	r9, r2, lr, lsl #22
    4c58:	02a10f00 	adceq	r0, r1, #0, 30
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	001ccd0b 	andseq	ip, ip, fp, lsl #26
    4c64:	64011800 	strvs	r1, [r1], #-2048	; 0xfffff800
    4c68:	0001d30c 	andeq	sp, r1, ip, lsl #6
    4c6c:	3af30c00 	bcc	ffcc7c74 <_bss_end+0xffcb6bf4>
    4c70:	67010000 	strvs	r0, [r1, -r0]
    4c74:	0002840e 	andeq	r8, r2, lr, lsl #8
    4c78:	b30c0000 	movwlt	r0, #49152	; 0xc000
    4c7c:	0100001b 	tsteq	r0, fp, lsl r0
    4c80:	02a11569 	adceq	r1, r1, #440401920	; 0x1a400000
    4c84:	0c100000 	ldceq	0, cr0, [r0], {-0}
    4c88:	00001d23 	andeq	r1, r0, r3, lsr #26
    4c8c:	9d1d6b01 	vldrls	d6, [sp, #-4]
    4c90:	14000003 	strne	r0, [r0], #-3
    4c94:	019e0300 	orrseq	r0, lr, r0, lsl #6
    4c98:	c9100000 	ldmdbgt	r0, {}	; <UNPREDICTABLE>
    4c9c:	0100001b 	tsteq	r0, fp, lsl r0
    4ca0:	03a31d6f 			; <UNDEFINED> instruction: 0x03a31d6f
    4ca4:	64100000 	ldrvs	r0, [r0], #-0
    4ca8:	0100001b 	tsteq	r0, fp, lsl r0
    4cac:	00741b71 	rsbseq	r1, r4, r1, ror fp
    4cb0:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
    4cb4:	0100001d 	tsteq	r0, sp, lsl r0
    4cb8:	01231374 			; <UNDEFINED> instruction: 0x01231374
    4cbc:	0c000000 	stceq	0, cr0, [r0], {-0}
    4cc0:	00001b94 	muleq	r0, r4, fp
    4cc4:	23137701 	tstcs	r3, #262144	; 0x40000
    4cc8:	24000001 	strcs	r0, [r0], #-1
    4ccc:	001d2a0c 	andseq	r2, sp, ip, lsl #20
    4cd0:	13780100 	cmnne	r8, #0, 2
    4cd4:	00000123 	andeq	r0, r0, r3, lsr #2
    4cd8:	1d190c48 	ldcne	12, cr0, [r9, #-288]	; 0xfffffee0
    4cdc:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    4ce0:	00012313 	andeq	r2, r1, r3, lsl r3
    4ce4:	84116c00 	ldrhi	r6, [r1], #-3072	; 0xfffff400
    4ce8:	0100001c 	tsteq	r0, ip, lsl r0
    4cec:	1dfc057c 	cfldr64ne	mvdx0, [ip, #496]!	; 0x1f0
    4cf0:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
    4cf4:	3d010000 	stccc	0, cr0, [r1, #-0]
    4cf8:	43000002 	movwmi	r0, #2
    4cfc:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    4d00:	000003ae 	andeq	r0, r0, lr, lsr #7
    4d04:	1bbe1200 	blne	fef8950c <_bss_end+0xfef7848c>
    4d08:	7f010000 	svcvc	0x00010000
    4d0c:	001e450a 	andseq	r4, lr, sl, lsl #10
    4d10:	02580100 	subseq	r0, r8, #0, 2
    4d14:	025e0000 	subseq	r0, lr, #0
    4d18:	ae0e0000 	cdpge	0, 0, cr0, cr14, cr0, {0}
    4d1c:	00000003 	andeq	r0, r0, r3
    4d20:	000a1d13 	andeq	r1, sl, r3, lsl sp
    4d24:	0c820100 	stfeqs	f0, [r2], {0}
    4d28:	00001ce3 	andeq	r1, r0, r3, ror #25
    4d2c:	000004f3 	strdeq	r0, [r0], -r3
    4d30:	00027301 	andeq	r7, r2, r1, lsl #6
    4d34:	03ae0e00 			; <UNDEFINED> instruction: 0x03ae0e00
    4d38:	a10f0000 	mrsge	r0, CPSR
    4d3c:	0f000002 	svceq	0x00000002
    4d40:	000000f1 	strdeq	r0, [r0], -r1
    4d44:	25140000 	ldrcs	r0, [r4, #-0]
    4d48:	94000000 	strls	r0, [r0], #-0
    4d4c:	15000002 	strne	r0, [r0, #-2]
    4d50:	00000079 	andeq	r0, r0, r9, ror r0
    4d54:	0102000f 	tsteq	r2, pc
    4d58:	0040a502 	subeq	sl, r0, r2, lsl #10
    4d5c:	23041600 	movwcs	r1, #17920	; 0x4600
    4d60:	16000001 	strne	r0, [r0], -r1
    4d64:	00002c04 	andeq	r2, r0, r4, lsl #24
    4d68:	02a10300 	adceq	r0, r1, #0, 6
    4d6c:	0f170000 	svceq	0x00170000
    4d70:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    4d74:	ac074301 	stcge	3, cr4, [r7], {1}
    4d78:	98000002 	stmdals	r0, {r1}
    4d7c:	18000003 	stmdane	r0, {r0, r1}
    4d80:	00002b5b 	andeq	r2, r0, fp, asr fp
    4d84:	00001fbc 			; <UNDEFINED> instruction: 0x00001fbc
    4d88:	00000963 	andeq	r0, r0, r3, ror #18
    4d8c:	0002d301 	andeq	sp, r2, r1, lsl #6
    4d90:	0002de00 	andeq	sp, r2, r0, lsl #28
    4d94:	039d0e00 	orrseq	r0, sp, #0, 28
    4d98:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    4d9c:	00000000 	andeq	r0, r0, r0
    4da0:	00280f18 	eoreq	r0, r8, r8, lsl pc
    4da4:	002bff00 	eoreq	pc, fp, r0, lsl #30
    4da8:	00039d00 	andeq	r9, r3, r0, lsl #26
    4dac:	02f40100 	rscseq	r0, r4, #0, 2
    4db0:	02ff0000 	rscseq	r0, pc, #0
    4db4:	9d0e0000 	stcls	0, cr0, [lr, #-0]
    4db8:	0f000003 	svceq	0x00000003
    4dbc:	00001b98 	muleq	r0, r8, fp
    4dc0:	280f1800 	stmdacs	pc, {fp, ip}	; <UNPREDICTABLE>
    4dc4:	21670000 	cmncs	r7, r0
    4dc8:	039d0000 	orrseq	r0, sp, #0
    4dcc:	15010000 	strne	r0, [r1, #-0]
    4dd0:	20000003 	andcs	r0, r0, r3
    4dd4:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    4dd8:	0000039d 	muleq	r0, sp, r3
    4ddc:	001b9e0f 	andseq	r9, fp, pc, lsl #28
    4de0:	0f180000 	svceq	0x00180000
    4de4:	87000028 	strhi	r0, [r0, -r8, lsr #32]
    4de8:	9d000026 	stcls	0, cr0, [r0, #-152]	; 0xffffff68
    4dec:	01000003 	tsteq	r0, r3
    4df0:	00000336 	andeq	r0, r0, r6, lsr r3
    4df4:	0000033c 	andeq	r0, r0, ip, lsr r3
    4df8:	00039d0e 	andeq	r9, r3, lr, lsl #26
    4dfc:	09190000 	ldmdbeq	r9, {}	; <UNPREDICTABLE>
    4e00:	af000028 	svcge	0x00000028
    4e04:	0000001b 	andeq	r0, r0, fp, lsl r0
    4e08:	24bd1a01 	ldrtcs	r1, [sp], #2561	; 0xa01
    4e0c:	47010000 	strmi	r0, [r1, -r0]
    4e10:	002c3b12 	eoreq	r3, ip, r2, lsl fp
    4e14:	10020100 	andne	r0, r2, r0, lsl #2
    4e18:	0002ac00 	andeq	sl, r2, r0, lsl #24
    4e1c:	03640100 	cmneq	r4, #0, 2
    4e20:	036a0000 	cmneq	sl, #0
    4e24:	9d0e0000 	stcls	0, cr0, [lr, #-0]
    4e28:	00000003 	andeq	r0, r0, r3
    4e2c:	00232e1b 	eoreq	r2, r3, fp, lsl lr
    4e30:	14490100 	strbne	r0, [r9], #-256	; 0xffffff00
    4e34:	000025b0 			; <UNDEFINED> instruction: 0x000025b0
    4e38:	000004f3 	strdeq	r0, [r0], -r3
    4e3c:	01100201 	tsteq	r0, r1, lsl #4
    4e40:	000002ac 	andeq	r0, r0, ip, lsr #5
    4e44:	00038701 	andeq	r8, r3, r1, lsl #14
    4e48:	039d0e00 	orrseq	r0, sp, #0, 28
    4e4c:	a10f0000 	mrsge	r0, CPSR
    4e50:	0f000002 	svceq	0x00000002
    4e54:	000000f1 	strdeq	r0, [r0], -r1
    4e58:	ac030000 	stcge	0, cr0, [r3], {-0}
    4e5c:	16000002 	strne	r0, [r0], -r2
    4e60:	0002ac04 	andeq	sl, r2, r4, lsl #24
    4e64:	01d31400 	bicseq	r1, r3, r0, lsl #8
    4e68:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
    4e6c:	001c0000 	andseq	r0, ip, r0
    4e70:	01160416 	tsteq	r6, r6, lsl r4
    4e74:	ea170000 	b	5c4e7c <_bss_end+0x5b3dfc>
    4e78:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    4e7c:	b4072401 	strlt	r2, [r7], #-1025	; 0xfffffbff
    4e80:	ee000003 	cdp	0, 0, cr0, cr0, cr3, {0}
    4e84:	18000004 	stmdane	r0, {r2}
    4e88:	000029ea 	andeq	r2, r0, sl, ror #19
    4e8c:	00002872 	andeq	r2, r0, r2, ror r8
    4e90:	000004f3 	strdeq	r0, [r0], -r3
    4e94:	0003db01 	andeq	sp, r3, r1, lsl #22
    4e98:	0003e600 	andeq	lr, r3, r0, lsl #12
    4e9c:	04f30e00 	ldrbteq	r0, [r3], #3584	; 0xe00
    4ea0:	bf0f0000 	svclt	0x000f0000
    4ea4:	0000001b 	andeq	r0, r0, fp, lsl r0
    4ea8:	0029ea18 	eoreq	lr, r9, r8, lsl sl
    4eac:	001eaa00 	andseq	sl, lr, r0, lsl #20
    4eb0:	0004f300 	andeq	pc, r4, r0, lsl #6
    4eb4:	03fc0100 	mvnseq	r0, #0, 2
    4eb8:	04020000 	streq	r0, [r2], #-0
    4ebc:	f30e0000 	vhadd.u8	d0, d14, d0
    4ec0:	00000004 	andeq	r0, r0, r4
    4ec4:	0029e419 	eoreq	lr, r9, r9, lsl r4
    4ec8:	001baf00 	andseq	sl, fp, r0, lsl #30
    4ecc:	1d010000 	stcne	0, cr0, [r1, #-0]
    4ed0:	00002786 	andeq	r2, r0, r6, lsl #15
    4ed4:	d80d2701 	stmdale	sp, {r0, r8, r9, sl, sp}
    4ed8:	6300001f 	movwvs	r0, #31
    4edc:	01000009 	tsteq	r0, r9
    4ee0:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
    4ee4:	042c0101 	strteq	r0, [ip], #-257	; 0xfffffeff
    4ee8:	04370000 	ldrteq	r0, [r7], #-0
    4eec:	f30e0000 	vhadd.u8	d0, d14, d0
    4ef0:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4ef4:	00000038 	andeq	r0, r0, r8, lsr r0
    4ef8:	02d01e00 	sbcseq	r1, r0, #0, 28
    4efc:	2b010000 	blcs	44f04 <_bss_end+0x33e84>
    4f00:	00239f16 	eoreq	r9, r3, r6, lsl pc
    4f04:	00006800 	andeq	r6, r0, r0, lsl #16
    4f08:	10020100 	andne	r0, r2, r0, lsl #2
    4f0c:	0003b402 	andeq	fp, r3, r2, lsl #8
    4f10:	04580100 	ldrbeq	r0, [r8], #-256	; 0xffffff00
    4f14:	04680000 	strbteq	r0, [r8], #-0
    4f18:	f30e0000 	vhadd.u8	d0, d14, d0
    4f1c:	0f000004 	svceq	0x00000004
    4f20:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    4f24:	0000680f 	andeq	r6, r0, pc, lsl #16
    4f28:	dd1e0000 	ldcle	0, cr0, [lr, #-0]
    4f2c:	0100001c 	tsteq	r0, ip, lsl r0
    4f30:	24d51631 	ldrbcs	r1, [r5], #1585	; 0x631
    4f34:	00680000 	rsbeq	r0, r8, r0
    4f38:	02010000 	andeq	r0, r1, #0
    4f3c:	03b40310 			; <UNDEFINED> instruction: 0x03b40310
    4f40:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    4f44:	99000004 	stmdbls	r0, {r2}
    4f48:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4f4c:	000004f3 	strdeq	r0, [r0], -r3
    4f50:	0002a10f 	andeq	sl, r2, pc, lsl #2
    4f54:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    4f58:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    4f5c:	000009aa 	andeq	r0, r0, sl, lsr #19
    4f60:	42123601 	andsmi	r3, r2, #1048576	; 0x100000
    4f64:	94000027 	strls	r0, [r0], #-39	; 0xffffffd9
    4f68:	01000002 	tsteq	r0, r2
    4f6c:	b4041002 	strlt	r1, [r4], #-2
    4f70:	01000003 	tsteq	r0, r3
    4f74:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    4f78:	000004c0 	andeq	r0, r0, r0, asr #9
    4f7c:	0004f30e 	andeq	pc, r4, lr, lsl #6
    4f80:	141b0000 	ldrne	r0, [fp], #-0
    4f84:	01000024 	tsteq	r0, r4, lsr #32
    4f88:	261f123b 			; <UNDEFINED> instruction: 0x261f123b
    4f8c:	02940000 	addseq	r0, r4, #0
    4f90:	02010000 	andeq	r0, r1, #0
    4f94:	03b40510 			; <UNDEFINED> instruction: 0x03b40510
    4f98:	dd010000 	stcle	0, cr0, [r1, #-0]
    4f9c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    4fa0:	000004f3 	strdeq	r0, [r0], -r3
    4fa4:	00008a0f 	andeq	r8, r0, pc, lsl #20
    4fa8:	09630f00 	stmdbeq	r3!, {r8, r9, sl, fp}^
    4fac:	00000000 	andeq	r0, r0, r0
    4fb0:	0003b403 	andeq	fp, r3, r3, lsl #8
    4fb4:	b4041600 	strlt	r1, [r4], #-1536	; 0xfffffa00
    4fb8:	03000003 	movweq	r0, #3
    4fbc:	000004f3 	strdeq	r0, [r0], -r3
    4fc0:	6c61681f 	stclvs	8, cr6, [r1], #-124	; 0xffffff84
    4fc4:	0b050a00 	bleq	1477cc <_bss_end+0x13674c>
    4fc8:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    4fcc:	00048420 	andeq	r8, r4, r0, lsr #8
    4fd0:	19070a00 	stmdbne	r7, {r9, fp}
    4fd4:	00000080 	andeq	r0, r0, r0, lsl #1
    4fd8:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    4fdc:	0005c920 	andeq	ip, r5, r0, lsr #18
    4fe0:	1a0a0a00 	bne	2877e8 <_bss_end+0x276768>
    4fe4:	000005c4 	andeq	r0, r0, r4, asr #11
    4fe8:	20000000 	andcs	r0, r0, r0
    4fec:	00044f20 	andeq	r4, r4, r0, lsr #30
    4ff0:	1a0d0a00 	bne	3477f8 <_bss_end+0x336778>
    4ff4:	000005c4 	andeq	r0, r0, r4, asr #11
    4ff8:	20200000 	eorcs	r0, r0, r0
    4ffc:	00058721 	andeq	r8, r5, r1, lsr #14
    5000:	15100a00 	ldrne	r0, [r0, #-2560]	; 0xfffff600
    5004:	00000074 	andeq	r0, r0, r4, ror r0
    5008:	03702036 	cmneq	r0, #54	; 0x36
    500c:	420a0000 	andmi	r0, sl, #0
    5010:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5014:	21500000 	cmpcs	r0, r0
    5018:	03472020 	movteq	r2, #28704	; 0x7020
    501c:	710a0000 	mrsvc	r0, (UNDEF: 10)
    5020:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5024:	00b20000 	adcseq	r0, r2, r0
    5028:	02b32020 	adcseq	r2, r3, #32
    502c:	a40a0000 	strge	r0, [sl], #-0
    5030:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5034:	00b40000 	adcseq	r0, r4, r0
    5038:	03612020 	cmneq	r1, #32
    503c:	b30a0000 	movwlt	r0, #40960	; 0xa000
    5040:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5044:	10400000 	subne	r0, r0, r0
    5048:	032e2020 			; <UNDEFINED> instruction: 0x032e2020
    504c:	be0a0000 	cdplt	0, 0, cr0, cr10, cr0, {0}
    5050:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5054:	20500000 	subscs	r0, r0, r0
    5058:	03ec2020 	mvneq	r2, #32
    505c:	bf0a0000 	svclt	0x000a0000
    5060:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5064:	80400000 	subhi	r0, r0, r0
    5068:	04592020 	ldrbeq	r2, [r9], #-32	; 0xffffffe0
    506c:	c00a0000 	andgt	r0, sl, r0
    5070:	0005c41a 	andeq	ip, r5, sl, lsl r4
    5074:	80500000 	subshi	r0, r0, r0
    5078:	0a220020 	beq	885100 <_bss_end+0x874080>
    507c:	02000005 	andeq	r0, r0, #5
    5080:	40e90704 	rscmi	r0, r9, r4, lsl #14
    5084:	bd030000 	stclt	0, cr0, [r3, #-0]
    5088:	22000005 	andcs	r0, r0, #5
    508c:	0000051a 	andeq	r0, r0, sl, lsl r5
    5090:	00052a22 	andeq	r2, r5, r2, lsr #20
    5094:	053a2200 	ldreq	r2, [sl, #-512]!	; 0xfffffe00
    5098:	47220000 	strmi	r0, [r2, -r0]!
    509c:	22000005 	andcs	r0, r0, #5
    50a0:	00000557 	andeq	r0, r0, r7, asr r5
    50a4:	00056722 	andeq	r6, r5, r2, lsr #14
    50a8:	05772200 	ldrbeq	r2, [r7, #-512]!	; 0xfffffe00
    50ac:	87220000 	strhi	r0, [r2, -r0]!
    50b0:	22000005 	andcs	r0, r0, #5
    50b4:	00000597 	muleq	r0, r7, r5
    50b8:	0005a722 	andeq	sl, r5, r2, lsr #14
    50bc:	054a0700 	strbeq	r0, [sl, #-1792]	; 0xfffff900
    50c0:	04070000 	streq	r0, [r7], #-0
    50c4:	00000079 	andeq	r0, r0, r9, ror r0
    50c8:	440c070b 	strmi	r0, [ip], #-1803	; 0xfffff8f5
    50cc:	08000006 	stmdaeq	r0, {r1, r2}
    50d0:	000002d9 	ldrdeq	r0, [r0], -r9
    50d4:	051a0800 	ldreq	r0, [sl, #-2048]	; 0xfffff800
    50d8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    50dc:	00000212 	andeq	r0, r0, r2, lsl r2
    50e0:	020c0802 	andeq	r0, ip, #131072	; 0x20000
    50e4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    50e8:	000001f4 	strdeq	r0, [r0], -r4
    50ec:	01fa0804 	mvnseq	r0, r4, lsl #16
    50f0:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    50f4:	00000200 	andeq	r0, r0, r0, lsl #4
    50f8:	02060806 	andeq	r0, r6, #393216	; 0x60000
    50fc:	08070000 	stmdaeq	r7, {}	; <UNPREDICTABLE>
    5100:	00000725 	andeq	r0, r0, r5, lsr #14
    5104:	170a0008 	strne	r0, [sl, -r8]
    5108:	14000007 	strne	r0, [r0], #-7
    510c:	3f071b0b 	svccc	0x00071b0b
    5110:	0c000008 	stceq	0, cr0, [r0], {8}
    5114:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5118:	4a221f0b 	bmi	88cd4c <_bss_end+0x87bccc>
    511c:	00000008 	andeq	r0, r0, r8
    5120:	0002be0c 	andeq	fp, r2, ip, lsl #28
    5124:	0e220b00 	vmuleq.f64	d0, d2, d0
    5128:	0000084f 	andeq	r0, r0, pc, asr #16
    512c:	04ee0c04 	strbteq	r0, [lr], #3076	; 0xc04
    5130:	240b0000 	strcs	r0, [fp], #-0
    5134:	00084f0e 	andeq	r4, r8, lr, lsl #30
    5138:	3b110c00 	blcc	448140 <_bss_end+0x4370c0>
    513c:	0b000004 	bleq	5154 <CPSR_IRQ_INHIBIT+0x50d4>
    5140:	03a90a28 			; <UNDEFINED> instruction: 0x03a90a28
    5144:	02940000 	addseq	r0, r4, #0
    5148:	91020000 	mrsls	r0, (UNDEF: 2)
    514c:	a6000006 	strge	r0, [r0], -r6
    5150:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    5154:	0000085f 	andeq	r0, r0, pc, asr r8
    5158:	0000680f 	andeq	r6, r0, pc, lsl #16
    515c:	08650f00 	stmdaeq	r5!, {r8, r9, sl, fp}^
    5160:	650f0000 	strvs	r0, [pc, #-0]	; 5168 <CPSR_IRQ_INHIBIT+0x50e8>
    5164:	00000008 	andeq	r0, r0, r8
    5168:	0004db11 	andeq	sp, r4, r1, lsl fp
    516c:	0a2a0b00 	beq	a87d74 <_bss_end+0xa76cf4>
    5170:	000004ac 	andeq	r0, r0, ip, lsr #9
    5174:	00000294 	muleq	r0, r4, r2
    5178:	0006bf02 	andeq	fp, r6, r2, lsl #30
    517c:	0006d400 	andeq	sp, r6, r0, lsl #8
    5180:	085f0e00 	ldmdaeq	pc, {r9, sl, fp}^	; <UNPREDICTABLE>
    5184:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    5188:	0f000000 	svceq	0x00000000
    518c:	00000865 	andeq	r0, r0, r5, ror #16
    5190:	0008650f 	andeq	r6, r8, pc, lsl #10
    5194:	2a110000 	bcs	44519c <_bss_end+0x43411c>
    5198:	0b000006 	bleq	51b8 <CPSR_IRQ_INHIBIT+0x5138>
    519c:	06aa0a2c 	strteq	r0, [sl], ip, lsr #20
    51a0:	02940000 	addseq	r0, r4, #0
    51a4:	ed020000 	stc	0, cr0, [r2, #-0]
    51a8:	02000006 	andeq	r0, r0, #6
    51ac:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    51b0:	0000085f 	andeq	r0, r0, pc, asr r8
    51b4:	0000680f 	andeq	r6, r0, pc, lsl #16
    51b8:	08650f00 	stmdaeq	r5!, {r8, r9, sl, fp}^
    51bc:	650f0000 	strvs	r0, [pc, #-0]	; 51c4 <CPSR_IRQ_INHIBIT+0x5144>
    51c0:	00000008 	andeq	r0, r0, r8
    51c4:	00046311 	andeq	r6, r4, r1, lsl r3
    51c8:	0a2e0b00 	beq	b87dd0 <_bss_end+0xb76d50>
    51cc:	000005fb 	strdeq	r0, [r0], -fp
    51d0:	00000294 	muleq	r0, r4, r2
    51d4:	00071b02 	andeq	r1, r7, r2, lsl #22
    51d8:	00073000 	andeq	r3, r7, r0
    51dc:	085f0e00 	ldmdaeq	pc, {r9, sl, fp}^	; <UNPREDICTABLE>
    51e0:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    51e4:	0f000000 	svceq	0x00000000
    51e8:	00000865 	andeq	r0, r0, r5, ror #16
    51ec:	0008650f 	andeq	r6, r8, pc, lsl #10
    51f0:	17110000 	ldrne	r0, [r1, -r0]
    51f4:	0b000007 	bleq	5218 <CPSR_IRQ_INHIBIT+0x5198>
    51f8:	05b20531 	ldreq	r0, [r2, #1329]!	; 0x531
    51fc:	086b0000 	stmdaeq	fp!, {}^	; <UNPREDICTABLE>
    5200:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    5204:	54000007 	strpl	r0, [r0], #-7
    5208:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    520c:	0000086b 	andeq	r0, r0, fp, ror #16
    5210:	0000790f 	andeq	r7, r0, pc, lsl #18
    5214:	87120000 	ldrhi	r0, [r2, -r0]
    5218:	0b000002 	bleq	5228 <CPSR_IRQ_INHIBIT+0x51a8>
    521c:	05210a34 	streq	r0, [r1, #-2612]!	; 0xfffff5cc
    5220:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    5224:	79000007 	stmdbvc	r0, {r0, r1, r2}
    5228:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    522c:	0000086b 	andeq	r0, r0, fp, ror #16
    5230:	0000680f 	andeq	r6, r0, pc, lsl #16
    5234:	05fb0f00 	ldrbeq	r0, [fp, #3840]!	; 0xf00
    5238:	11000000 	mrsne	r0, (UNDEF: 0)
    523c:	00000575 	andeq	r0, r0, r5, ror r5
    5240:	e914360b 	ldmdb	r4, {r0, r1, r3, r9, sl, ip, sp}
    5244:	fb000006 	blx	5266 <CPSR_IRQ_INHIBIT+0x51e6>
    5248:	01000005 	tsteq	r0, r5
    524c:	00000792 	muleq	r0, r2, r7
    5250:	0000079d 	muleq	r0, sp, r7
    5254:	00085f0e 	andeq	r5, r8, lr, lsl #30
    5258:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    525c:	12000000 	andne	r0, r0, #0
    5260:	00000516 	andeq	r0, r0, r6, lsl r5
    5264:	130a390b 	movwne	r3, #43275	; 0xa90b
    5268:	01000004 	tsteq	r0, r4
    526c:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    5270:	000007c2 	andeq	r0, r0, r2, asr #15
    5274:	00086b0e 	andeq	r6, r8, lr, lsl #22
    5278:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    527c:	940f0000 	strls	r0, [pc], #-0	; 5284 <CPSR_IRQ_INHIBIT+0x5204>
    5280:	00000002 	andeq	r0, r0, r2
    5284:	0002d511 	andeq	sp, r2, r1, lsl r5
    5288:	0a3c0b00 	beq	f07e90 <_bss_end+0xef6e10>
    528c:	00000268 	andeq	r0, r0, r8, ror #4
    5290:	00000294 	muleq	r0, r4, r2
    5294:	0007db01 	andeq	sp, r7, r1, lsl #22
    5298:	0007e600 	andeq	lr, r7, r0, lsl #12
    529c:	086b0e00 	stmdaeq	fp!, {r9, sl, fp}^
    52a0:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    52a4:	00000000 	andeq	r0, r0, r0
    52a8:	0005ea11 	andeq	lr, r5, r1, lsl sl
    52ac:	0a3f0b00 	beq	fc7eb4 <_bss_end+0xfb6e34>
    52b0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    52b4:	00000294 	muleq	r0, r4, r2
    52b8:	0007ff01 	andeq	pc, r7, r1, lsl #30
    52bc:	00081400 	andeq	r1, r8, r0, lsl #8
    52c0:	086b0e00 	stmdaeq	fp!, {r9, sl, fp}^
    52c4:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    52c8:	0f000000 	svceq	0x00000000
    52cc:	00000294 	muleq	r0, r4, r2
    52d0:	0002940f 	andeq	r9, r2, pc, lsl #8
    52d4:	a0130000 	andsge	r0, r3, r0
    52d8:	0b000005 	bleq	52f4 <CPSR_IRQ_INHIBIT+0x5274>
    52dc:	02fb0a41 	rscseq	r0, fp, #266240	; 0x41000
    52e0:	02940000 	addseq	r0, r4, #0
    52e4:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    52e8:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    52ec:	0000086b 	andeq	r0, r0, fp, ror #16
    52f0:	0000680f 	andeq	r6, r0, pc, lsl #16
    52f4:	02940f00 	addseq	r0, r4, #0, 30
    52f8:	940f0000 	strls	r0, [pc], #-0	; 5300 <CPSR_IRQ_INHIBIT+0x5280>
    52fc:	00000002 	andeq	r0, r0, r2
    5300:	06440300 	strbeq	r0, [r4], -r0, lsl #6
    5304:	04160000 	ldreq	r0, [r6], #-0
    5308:	00000085 	andeq	r0, r0, r5, lsl #1
    530c:	00084403 	andeq	r4, r8, r3, lsl #8
    5310:	00681400 	rsbeq	r1, r8, r0, lsl #8
    5314:	085f0000 	ldmdaeq	pc, {}^	; <UNPREDICTABLE>
    5318:	79150000 	ldmdbvc	r5, {}	; <UNPREDICTABLE>
    531c:	01000000 	mrseq	r0, (UNDEF: 0)
    5320:	3f041600 	svccc	0x00041600
    5324:	23000008 	movwcs	r0, #8
    5328:	00006804 	andeq	r6, r0, r4, lsl #16
    532c:	44041600 	strmi	r1, [r4], #-1536	; 0xfffffa00
    5330:	24000006 	strcs	r0, [r0], #-6
    5334:	000004a6 	andeq	r0, r0, r6, lsr #9
    5338:	4416450b 	ldrmi	r4, [r6], #-1291	; 0xfffffaf5
    533c:	0b000006 	bleq	535c <CPSR_IRQ_INHIBIT+0x52dc>
    5340:	000013bb 			; <UNDEFINED> instruction: 0x000013bb
    5344:	08080210 	stmdaeq	r8, {r4, r9}
    5348:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    534c:	000d050c 	andeq	r0, sp, ip, lsl #10
    5350:	200a0200 	andcs	r0, sl, r0, lsl #4
    5354:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    5358:	0df80c00 	ldcleq	12, cr0, [r8]
    535c:	0b020000 	bleq	85364 <_bss_end+0x742e4>
    5360:	0008bf20 	andeq	fp, r8, r0, lsr #30
    5364:	450c0400 	strmi	r0, [ip, #-1024]	; 0xfffffc00
    5368:	0200000e 	andeq	r0, r0, #14
    536c:	00680e0c 	rsbeq	r0, r8, ip, lsl #28
    5370:	0c080000 	stceq	0, cr0, [r8], {-0}
    5374:	00000e99 	muleq	r0, r9, lr
    5378:	940a0d02 	strls	r0, [sl], #-3330	; 0xfffff2fe
    537c:	0c000002 	stceq	0, cr0, [r0], {2}
    5380:	7d041600 	stcvc	6, cr1, [r4, #-0]
    5384:	0a000008 	beq	53ac <CPSR_IRQ_INHIBIT+0x532c>
    5388:	00000dfd 	strdeq	r0, [r0], -sp
    538c:	07100204 	ldreq	r0, [r0, -r4, lsl #4]
    5390:	0000095d 	andeq	r0, r0, sp, asr r9
    5394:	00133e0c 	andseq	r3, r3, ip, lsl #28
    5398:	20130200 	andscs	r0, r3, r0, lsl #4
    539c:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    53a0:	13802500 	orrne	r2, r0, #0, 10
    53a4:	15020000 	strne	r0, [r2, #-0]
    53a8:	000d0a20 	andeq	r0, sp, r0, lsr #20
    53ac:	0008bf00 	andeq	fp, r8, r0, lsl #30
    53b0:	0008f700 	andeq	pc, r8, r0, lsl #14
    53b4:	0008fd00 	andeq	pc, r8, r0, lsl #26
    53b8:	095d0e00 	ldmdbeq	sp, {r9, sl, fp}^
    53bc:	11000000 	mrsne	r0, (UNDEF: 0)
    53c0:	00000dfd 	strdeq	r0, [r0], -sp
    53c4:	20051802 	andcs	r1, r5, r2, lsl #16
    53c8:	5d000013 	stcpl	0, cr0, [r0, #-76]	; 0xffffffb4
    53cc:	01000009 	tsteq	r0, r9
    53d0:	00000916 	andeq	r0, r0, r6, lsl r9
    53d4:	0000091c 	andeq	r0, r0, ip, lsl r9
    53d8:	00095d0e 	andeq	r5, r9, lr, lsl #26
    53dc:	d8110000 	ldmdale	r1, {}	; <UNPREDICTABLE>
    53e0:	0200000e 	andeq	r0, r0, #14
    53e4:	11940b1a 	orrsne	r0, r4, sl, lsl fp
    53e8:	09630000 	stmdbeq	r3!, {}^	; <UNPREDICTABLE>
    53ec:	35010000 	strcc	r0, [r1, #-0]
    53f0:	40000009 	andmi	r0, r0, r9
    53f4:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    53f8:	0000095d 	andeq	r0, r0, sp, asr r9
    53fc:	0000680f 	andeq	r6, r0, pc, lsl #16
    5400:	42260000 	eormi	r0, r6, #0
    5404:	0200000f 	andeq	r0, r0, #15
    5408:	10d30a1b 	sbcsne	r0, r3, fp, lsl sl
    540c:	51010000 	mrspl	r0, (UNDEF: 1)
    5410:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    5414:	0000095d 	andeq	r0, r0, sp, asr r9
    5418:	0009630f 	andeq	r6, r9, pc, lsl #6
    541c:	16000000 	strne	r0, [r0], -r0
    5420:	0008c504 	andeq	ip, r8, r4, lsl #10
    5424:	24042700 	strcs	r2, [r4], #-1792	; 0xfffff900
    5428:	0000357e 	andeq	r3, r0, lr, ror r5
    542c:	c51d2402 	ldrgt	r2, [sp, #-1026]	; 0xfffffbfe
    5430:	17000008 	strne	r0, [r0, -r8]
    5434:	0000265e 	andeq	r2, r0, lr, asr r6
    5438:	074f0304 	strbeq	r0, [pc, -r4, lsl #6]
    543c:	000002ac 	andeq	r0, r0, ip, lsr #5
    5440:	00000a59 	andeq	r0, r0, r9, asr sl
    5444:	0002ac28 	andeq	sl, r2, r8, lsr #24
    5448:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    544c:	0000265d 	andeq	r2, r0, sp, asr r6
    5450:	0000214e 	andeq	r2, r0, lr, asr #2
    5454:	00000963 	andeq	r0, r0, r3, ror #18
    5458:	00099f01 	andeq	r9, r9, r1, lsl #30
    545c:	0009aa00 	andeq	sl, r9, r0, lsl #20
    5460:	19fd0e00 	ldmibne	sp!, {r9, sl, fp}^
    5464:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    5468:	00000000 	andeq	r0, r0, r0
    546c:	00265e18 	eoreq	r5, r6, r8, lsl lr
    5470:	00254200 	eoreq	r4, r5, r0, lsl #4
    5474:	0019fd00 	andseq	pc, r9, r0, lsl #26
    5478:	09c00100 	stmibeq	r0, {r8}^
    547c:	09cb0000 	stmibeq	fp, {}^	; <UNPREDICTABLE>
    5480:	fd0e0000 	stc2	0, cr0, [lr, #-0]
    5484:	0f000019 	svceq	0x00000019
    5488:	00001a08 	andeq	r1, r0, r8, lsl #20
    548c:	265e1800 	ldrbcs	r1, [lr], -r0, lsl #16
    5490:	21860000 	orrcs	r0, r6, r0
    5494:	19fd0000 	ldmibne	sp!, {}^	; <UNPREDICTABLE>
    5498:	e1010000 	mrs	r0, (UNDEF: 1)
    549c:	ec000009 	stc	0, cr0, [r0], {9}
    54a0:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    54a4:	000019fd 	strdeq	r1, [r0], -sp
    54a8:	001a0e0f 	andseq	r0, sl, pc, lsl #28
    54ac:	5e180000 	cdppl	0, 1, cr0, cr8, cr0, {0}
    54b0:	44000026 	strmi	r0, [r0], #-38	; 0xffffffda
    54b4:	fd000026 	stc2	0, cr0, [r0, #-152]	; 0xffffff68
    54b8:	01000019 	tsteq	r0, r9, lsl r0
    54bc:	00000a02 	andeq	r0, r0, r2, lsl #20
    54c0:	00000a08 	andeq	r0, r0, r8, lsl #20
    54c4:	0019fd0e 	andseq	pc, r9, lr, lsl #26
    54c8:	bd1a0000 	ldclt	0, cr0, [sl, #-0]
    54cc:	03000024 	movweq	r0, #36	; 0x24
    54d0:	23f01252 	mvnscs	r1, #536870917	; 0x20000005
    54d4:	02010000 	andeq	r0, r1, #0
    54d8:	09710010 	ldmdbeq	r1!, {r4}^
    54dc:	25010000 	strcs	r0, [r1, #-0]
    54e0:	2b00000a 	blcs	5510 <CPSR_IRQ_INHIBIT+0x5490>
    54e4:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    54e8:	000019fd 	strdeq	r1, [r0], -sp
    54ec:	232e1b00 			; <UNDEFINED> instruction: 0x232e1b00
    54f0:	57030000 	strpl	r0, [r3, -r0]
    54f4:	00243114 	eoreq	r3, r4, r4, lsl r1
    54f8:	0004f300 	andeq	pc, r4, r0, lsl #6
    54fc:	10020100 	andne	r0, r2, r0, lsl #2
    5500:	00097101 	andeq	r7, r9, r1, lsl #2
    5504:	0a480100 	beq	120590c <_bss_end+0x11f488c>
    5508:	fd0e0000 	stc2	0, cr0, [lr, #-0]
    550c:	0f000019 	svceq	0x00000019
    5510:	000002a1 	andeq	r0, r0, r1, lsr #5
    5514:	0000f10f 	andeq	pc, r0, pc, lsl #2
    5518:	03000000 	movweq	r0, #0
    551c:	00000971 	andeq	r0, r0, r1, ror r9
    5520:	001f7129 	andseq	r7, pc, r9, lsr #2
    5524:	11780300 	cmnne	r8, r0, lsl #6
    5528:	00000971 	andeq	r0, r0, r1, ror r9
    552c:	ff180305 			; <UNDEFINED> instruction: 0xff180305
    5530:	950a0000 	strls	r0, [sl, #-0]
    5534:	1800000b 	stmdane	r0, {r0, r1, r3}
    5538:	b107030c 	tstlt	r7, ip, lsl #6
    553c:	2a00000c 	bcs	5574 <CPSR_IRQ_INHIBIT+0x54f4>
    5540:	00000b13 	andeq	r0, r0, r3, lsl fp
    5544:	00790407 	rsbseq	r0, r9, r7, lsl #8
    5548:	060c0000 	streq	r0, [ip], -r0
    554c:	0a9d0110 	beq	fe745994 <_bss_end+0xfe734914>
    5550:	482b0000 	stmdami	fp!, {}	; <UNPREDICTABLE>
    5554:	10005845 	andne	r5, r0, r5, asr #16
    5558:	4345442b 	movtmi	r4, #21547	; 0x542b
    555c:	03000a00 	movweq	r0, #2560	; 0xa00
    5560:	00000a7d 	andeq	r0, r0, sp, ror sl
    5564:	000b200b 	andeq	r2, fp, fp
    5568:	240c0800 	strcs	r0, [ip], #-2048	; 0xfffff800
    556c:	000ac60c 	andeq	ip, sl, ip, lsl #12
    5570:	00792c00 	rsbseq	r2, r9, r0, lsl #24
    5574:	7916260c 	ldmdbvc	r6, {r2, r3, r9, sl, sp}
    5578:	00000000 	andeq	r0, r0, r0
    557c:	0c00782c 	stceq	8, cr7, [r0], {44}	; 0x2c
    5580:	00791627 	rsbseq	r1, r9, r7, lsr #12
    5584:	00040000 	andeq	r0, r4, r0
    5588:	000c722d 	andeq	r7, ip, sp, lsr #4
    558c:	1b0c0c00 	blne	308594 <_bss_end+0x2f7514>
    5590:	00000a9d 	muleq	r0, sp, sl
    5594:	e52e0a01 	str	r0, [lr, #-2561]!	; 0xfffff5ff
    5598:	0c00000b 	stceq	0, cr0, [r0], {11}
    559c:	02a7280d 	adceq	r2, r7, #851968	; 0xd0000
    55a0:	2f010000 	svccs	0x00010000
    55a4:	00000b95 	muleq	r0, r5, fp
    55a8:	5f0e100c 	svcpl	0x000e100c
    55ac:	b100000c 	tstlt	r0, ip
    55b0:	0100000c 	tsteq	r0, ip
    55b4:	00000afa 	strdeq	r0, [r0], -sl
    55b8:	00000b0f 	andeq	r0, r0, pc, lsl #22
    55bc:	000cb10e 	andeq	fp, ip, lr, lsl #2
    55c0:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    55c4:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    55c8:	0f000000 	svceq	0x00000000
    55cc:	00000079 	andeq	r0, r0, r9, ror r0
    55d0:	18961200 	ldmne	r6, {r9, ip}
    55d4:	120c0000 	andne	r0, ip, #0
    55d8:	000b800a 	andeq	r8, fp, sl
    55dc:	0b240100 	bleq	9059e4 <_bss_end+0x8f4964>
    55e0:	0b2a0000 	bleq	a855e8 <_bss_end+0xa74568>
    55e4:	b10e0000 	mrslt	r0, (UNDEF: 14)
    55e8:	0000000c 	andeq	r0, r0, ip
    55ec:	000b9e11 	andeq	r9, fp, r1, lsl lr
    55f0:	0f140c00 	svceq	0x00140c00
    55f4:	00000c02 	andeq	r0, r0, r2, lsl #24
    55f8:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    55fc:	000b4301 	andeq	r4, fp, r1, lsl #6
    5600:	000b4e00 	andeq	r4, fp, r0, lsl #28
    5604:	0cb10e00 	ldceq	14, cr0, [r1]
    5608:	250f0000 	strcs	r0, [pc, #-0]	; 5610 <CPSR_IRQ_INHIBIT+0x5590>
    560c:	00000000 	andeq	r0, r0, r0
    5610:	000b9e11 	andeq	r9, fp, r1, lsl lr
    5614:	0f150c00 	svceq	0x00150c00
    5618:	00000ba9 	andeq	r0, r0, r9, lsr #23
    561c:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    5620:	000b6701 	andeq	r6, fp, r1, lsl #14
    5624:	000b7200 	andeq	r7, fp, r0, lsl #4
    5628:	0cb10e00 	ldceq	14, cr0, [r1]
    562c:	a10f0000 	mrsge	r0, CPSR
    5630:	00000002 	andeq	r0, r0, r2
    5634:	000b9e11 	andeq	r9, fp, r1, lsl lr
    5638:	0f160c00 	svceq	0x00160c00
    563c:	00000c86 	andeq	r0, r0, r6, lsl #25
    5640:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    5644:	000b8b01 	andeq	r8, fp, r1, lsl #22
    5648:	000b9600 	andeq	r9, fp, r0, lsl #12
    564c:	0cb10e00 	ldceq	14, cr0, [r1]
    5650:	7d0f0000 	stcvc	0, cr0, [pc, #-0]	; 5658 <CPSR_IRQ_INHIBIT+0x55d8>
    5654:	0000000a 	andeq	r0, r0, sl
    5658:	000b9e11 	andeq	r9, fp, r1, lsl lr
    565c:	0f170c00 	svceq	0x00170c00
    5660:	00000c31 	andeq	r0, r0, r1, lsr ip
    5664:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    5668:	000baf01 	andeq	sl, fp, r1, lsl #30
    566c:	000bba00 	andeq	fp, fp, r0, lsl #20
    5670:	0cb10e00 	ldceq	14, cr0, [r1]
    5674:	790f0000 	stmdbvc	pc, {}	; <UNPREDICTABLE>
    5678:	00000000 	andeq	r0, r0, r0
    567c:	000b9e11 	andeq	r9, fp, r1, lsl lr
    5680:	0f180c00 	svceq	0x00180c00
    5684:	00000bf1 	strdeq	r0, [r0], -r1
    5688:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    568c:	000bd301 	andeq	sp, fp, r1, lsl #6
    5690:	000bde00 	andeq	sp, fp, r0, lsl #28
    5694:	0cb10e00 	ldceq	14, cr0, [r1]
    5698:	940f0000 	strls	r0, [pc], #-0	; 56a0 <CPSR_IRQ_INHIBIT+0x5620>
    569c:	00000002 	andeq	r0, r0, r2
    56a0:	000ab130 	andeq	fp, sl, r0, lsr r1
    56a4:	111b0c00 	tstne	fp, r0, lsl #24
    56a8:	00000a81 	andeq	r0, r0, r1, lsl #21
    56ac:	00000bf2 	strdeq	r0, [r0], -r2
    56b0:	00000bf8 	strdeq	r0, [r0], -r8
    56b4:	000cb10e 	andeq	fp, ip, lr, lsl #2
    56b8:	a4300000 	ldrtge	r0, [r0], #-0
    56bc:	0c00000a 	stceq	0, cr0, [r0], {10}
    56c0:	0c42111c 	stfeqe	f1, [r2], {28}
    56c4:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    56c8:	0c120000 	ldceq	0, cr0, [r2], {-0}
    56cc:	b10e0000 	mrslt	r0, (UNDEF: 14)
    56d0:	0000000c 	andeq	r0, r0, ip
    56d4:	000a5c30 	andeq	r5, sl, r0, lsr ip
    56d8:	111d0c00 	tstne	sp, r0, lsl #24
    56dc:	00000b2a 	andeq	r0, r0, sl, lsr #22
    56e0:	00000c26 	andeq	r0, r0, r6, lsr #24
    56e4:	00000c2c 	andeq	r0, r0, ip, lsr #24
    56e8:	000cb10e 	andeq	fp, ip, lr, lsl #2
    56ec:	de300000 	cdple	0, 3, cr0, cr0, cr0, {0}
    56f0:	0c000013 	stceq	0, cr0, [r0], {19}
    56f4:	0c1b0a1f 			; <UNDEFINED> instruction: 0x0c1b0a1f
    56f8:	0c400000 	mareq	acc0, r0, r0
    56fc:	0c460000 	mareq	acc0, r0, r6
    5700:	b10e0000 	mrslt	r0, (UNDEF: 14)
    5704:	0000000c 	andeq	r0, r0, ip
    5708:	000a9f30 	andeq	r9, sl, r0, lsr pc
    570c:	0a210c00 	beq	848714 <_bss_end+0x837694>
    5710:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    5714:	00000c5a 	andeq	r0, r0, sl, asr ip
    5718:	00000c6f 	andeq	r0, r0, pc, ror #24
    571c:	000cb10e 	andeq	fp, ip, lr, lsl #2
    5720:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    5724:	bd0f0000 	stclt	0, cr0, [pc, #-0]	; 572c <CPSR_IRQ_INHIBIT+0x56ac>
    5728:	0f00000c 	svceq	0x0000000c
    572c:	00000079 	andeq	r0, r0, r9, ror r0
    5730:	0b4c0c00 	bleq	1308738 <_bss_end+0x12f76b8>
    5734:	2b0c0000 	blcs	30573c <_bss_end+0x2f46bc>
    5738:	000cc923 	andeq	ip, ip, r3, lsr #18
    573c:	130c0000 	movwne	r0, #49152	; 0xc000
    5740:	0c00000c 	stceq	0, cr0, [r0], {12}
    5744:	0079122c 	rsbseq	r1, r9, ip, lsr #4
    5748:	0c040000 	stceq	0, cr0, [r4], {-0}
    574c:	00000bd3 	ldrdeq	r0, [r0], -r3
    5750:	79122d0c 	ldmdbvc	r2, {r2, r3, r8, sl, fp, sp}
    5754:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5758:	000bdc0c 	andeq	sp, fp, ip, lsl #24
    575c:	0f2e0c00 	svceq	0x002e0c00
    5760:	00000aa2 	andeq	r0, r0, r2, lsr #21
    5764:	0a4e0c0c 	beq	138879c <_bss_end+0x137771c>
    5768:	2f0c0000 	svccs	0x000c0000
    576c:	000a7d12 	andeq	r7, sl, r2, lsl sp
    5770:	16001400 	strne	r1, [r0], -r0, lsl #8
    5774:	000a7004 	andeq	r7, sl, r4
    5778:	70042300 	andvc	r2, r4, r0, lsl #6
    577c:	1600000a 	strne	r0, [r0], -sl
    5780:	00002504 	andeq	r2, r0, r4, lsl #10
    5784:	5c041600 	stcpl	6, cr1, [r4], {-0}
    5788:	03000000 	movweq	r0, #0
    578c:	00000cc3 	andeq	r0, r0, r3, asr #25
    5790:	000b6524 	andeq	r6, fp, r4, lsr #10
    5794:	11320c00 	teqne	r2, r0, lsl #24
    5798:	00000a70 	andeq	r0, r0, r0, ror sl
    579c:	001f5e17 	andseq	r5, pc, r7, lsl lr	; <UNPREDICTABLE>
    57a0:	45040400 	strmi	r0, [r4, #-1024]	; 0xfffffc00
    57a4:	0002ac07 	andeq	sl, r2, r7, lsl #24
    57a8:	000dc200 	andeq	ip, sp, r0, lsl #4
    57ac:	02ac2800 	adceq	r2, ip, #0, 16
    57b0:	01000000 	mrseq	r0, (UNDEF: 0)
    57b4:	001f5d18 	andseq	r5, pc, r8, lsl sp	; <UNPREDICTABLE>
    57b8:	0027e500 	eoreq	lr, r7, r0, lsl #10
    57bc:	00096300 	andeq	r6, r9, r0, lsl #6
    57c0:	0d080100 	stfeqs	f0, [r8, #-0]
    57c4:	0d130000 	ldceq	0, cr0, [r3, #-0]
    57c8:	860e0000 	strhi	r0, [lr], -r0
    57cc:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    57d0:	00000038 	andeq	r0, r0, r8, lsr r0
    57d4:	1f5e1800 	svcne	0x005e1800
    57d8:	20e20000 	rsccs	r0, r2, r0
    57dc:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    57e0:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    57e4:	3400000d 	strcc	r0, [r0], #-13
    57e8:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
    57ec:	00001886 	andeq	r1, r0, r6, lsl #17
    57f0:	0018910f 	andseq	r9, r8, pc, lsl #2
    57f4:	5e180000 	cdppl	0, 1, cr0, cr8, cr0, {0}
    57f8:	9f00001f 	svcls	0x0000001f
    57fc:	8600002b 	strhi	r0, [r0], -fp, lsr #32
    5800:	01000018 	tsteq	r0, r8, lsl r0
    5804:	00000d4a 	andeq	r0, r0, sl, asr #26
    5808:	00000d55 	andeq	r0, r0, r5, asr sp
    580c:	0018860e 	andseq	r8, r8, lr, lsl #12
    5810:	18970f00 	ldmne	r7, {r8, r9, sl, fp}
    5814:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5818:	00001f5e 	andeq	r1, r0, lr, asr pc
    581c:	00001f13 	andeq	r1, r0, r3, lsl pc
    5820:	00001886 	andeq	r1, r0, r6, lsl #17
    5824:	000d6b01 	andeq	r6, sp, r1, lsl #22
    5828:	000d7100 	andeq	r7, sp, r0, lsl #2
    582c:	18860e00 	stmne	r6, {r9, sl, fp}
    5830:	1a000000 	bne	5838 <CPSR_IRQ_INHIBIT+0x57b8>
    5834:	000024bd 			; <UNDEFINED> instruction: 0x000024bd
    5838:	3e124804 	cdpcc	8, 1, cr4, cr2, cr4, {0}
    583c:	01000020 	tsteq	r0, r0, lsr #32
    5840:	da001002 	ble	9850 <_ZN8CMonitor13Adjust_CursorEv+0x7c>
    5844:	0100000c 	tsteq	r0, ip
    5848:	00000d8e 	andeq	r0, r0, lr, lsl #27
    584c:	00000d94 	muleq	r0, r4, sp
    5850:	0018860e 	andseq	r8, r8, lr, lsl #12
    5854:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    5858:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    585c:	21da144c 	bicscs	r1, sl, ip, asr #8
    5860:	04f30000 	ldrbteq	r0, [r3], #0
    5864:	02010000 	andeq	r0, r1, #0
    5868:	0cda0110 	ldfeqe	f0, [sl], {16}
    586c:	b1010000 	mrslt	r0, (UNDEF: 1)
    5870:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
    5874:	00001886 	andeq	r1, r0, r6, lsl #17
    5878:	0002a10f 	andeq	sl, r2, pc, lsl #2
    587c:	00f10f00 	rscseq	r0, r1, r0, lsl #30
    5880:	00000000 	andeq	r0, r0, r0
    5884:	000cda03 	andeq	sp, ip, r3, lsl #20
    5888:	1f822900 	svcne	0x00822900
    588c:	58040000 	stmdapl	r4, {}	; <UNPREDICTABLE>
    5890:	000cda14 	andeq	sp, ip, r4, lsl sl
    5894:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    5898:	0a0000ff 	beq	5c9c <CPSR_IRQ_INHIBIT+0x5c1c>
    589c:	000014b4 			; <UNDEFINED> instruction: 0x000014b4
    58a0:	07070d10 	smladeq	r7, r0, sp, r0
    58a4:	00000ede 	ldrdeq	r0, [r0], -lr
    58a8:	00168d0c 	andseq	r8, r6, ip, lsl #26
    58ac:	0e0b0d00 	cdpeq	13, 0, cr0, cr11, cr0, {0}
    58b0:	00000068 	andeq	r0, r0, r8, rrx
    58b4:	15230c00 	strne	r0, [r3, #-3072]!	; 0xfffff400
    58b8:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    58bc:	0000680e 	andeq	r6, r0, lr, lsl #16
    58c0:	850c0400 	strhi	r0, [ip, #-1024]	; 0xfffffc00
    58c4:	0d000015 	stceq	0, cr0, [r0, #-84]	; 0xffffffac
    58c8:	00680e0f 	rsbeq	r0, r8, pc, lsl #28
    58cc:	0c080000 	stceq	0, cr0, [r8], {-0}
    58d0:	00000762 	andeq	r0, r0, r2, ror #14
    58d4:	940a120d 	strls	r1, [sl], #-525	; 0xfffffdf3
    58d8:	0c000002 	stceq	0, cr0, [r0], {2}
    58dc:	0014b411 	andseq	fp, r4, r1, lsl r4
    58e0:	05150d00 	ldreq	r0, [r5, #-3328]	; 0xfffff300
    58e4:	0000154d 	andeq	r1, r0, sp, asr #10
    58e8:	00000ee3 	andeq	r0, r0, r3, ror #29
    58ec:	000e3301 	andeq	r3, lr, r1, lsl #6
    58f0:	000e4800 	andeq	r4, lr, r0, lsl #16
    58f4:	0ee30e00 	cdpeq	14, 14, cr0, cr3, cr0, {0}
    58f8:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    58fc:	0f000000 	svceq	0x00000000
    5900:	00000068 	andeq	r0, r0, r8, rrx
    5904:	0000680f 	andeq	r6, r0, pc, lsl #16
    5908:	1d110000 	ldcne	0, cr0, [r1, #-0]
    590c:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    5910:	15fd0a18 	ldrbne	r0, [sp, #2584]!	; 0xa18
    5914:	02940000 	addseq	r0, r4, #0
    5918:	61010000 	mrsvs	r0, (UNDEF: 1)
    591c:	6700000e 	strvs	r0, [r0, -lr]
    5920:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    5924:	00000ee3 	andeq	r0, r0, r3, ror #29
    5928:	09aa1200 	stmibeq	sl!, {r9, ip}
    592c:	1a0d0000 	bne	345934 <_bss_end+0x3348b4>
    5930:	0015680a 	andseq	r6, r5, sl, lsl #16
    5934:	0e7c0100 	rpweqe	f0, f4, f0
    5938:	0e820000 	cdpeq	0, 8, cr0, cr2, cr0, {0}
    593c:	e30e0000 	movw	r0, #57344	; 0xe000
    5940:	0000000e 	andeq	r0, r0, lr
    5944:	00073c11 	andeq	r3, r7, r1, lsl ip
    5948:	0a1c0d00 	beq	708d50 <_bss_end+0x6f7cd0>
    594c:	00001437 	andeq	r1, r0, r7, lsr r4
    5950:	00000294 	muleq	r0, r4, r2
    5954:	000e9b01 	andeq	r9, lr, r1, lsl #22
    5958:	000ea100 	andeq	sl, lr, r0, lsl #2
    595c:	0ee90e00 	cdpeq	14, 14, cr0, cr9, cr0, {0}
    5960:	12000000 	andne	r0, r0, #0
    5964:	00001698 	muleq	r0, r8, r6
    5968:	2d0a1f0d 	stccs	15, cr1, [sl, #-52]	; 0xffffffcc
    596c:	01000015 	tsteq	r0, r5, lsl r0
    5970:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    5974:	00000ec1 	andeq	r0, r0, r1, asr #29
    5978:	000ee30e 	andeq	lr, lr, lr, lsl #6
    597c:	02940f00 	addseq	r0, r4, #0, 30
    5980:	26000000 	strcs	r0, [r0], -r0
    5984:	00001698 	muleq	r0, r8, r6
    5988:	900a210d 	andls	r2, sl, sp, lsl #2
    598c:	01000015 	tsteq	r0, r5, lsl r0
    5990:	00000ed2 	ldrdeq	r0, [r0], -r2
    5994:	000ee30e 	andeq	lr, lr, lr, lsl #6
    5998:	00440f00 	subeq	r0, r4, r0, lsl #30
    599c:	00000000 	andeq	r0, r0, r0
    59a0:	000dd903 	andeq	sp, sp, r3, lsl #18
    59a4:	d9041600 	stmdble	r4, {r9, sl, ip}
    59a8:	1600000d 	strne	r0, [r0], -sp
    59ac:	000ede04 	andeq	sp, lr, r4, lsl #28
    59b0:	16e82400 	strbtne	r2, [r8], r0, lsl #8
    59b4:	240d0000 	strcs	r0, [sp], #-0
    59b8:	000dd918 	andeq	sp, sp, r8, lsl r9
    59bc:	15d20a00 	ldrbne	r0, [r2, #2560]	; 0xa00
    59c0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    59c4:	0fe20707 	svceq	0x00e20707
    59c8:	620c0000 	andvs	r0, ip, #0
    59cc:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    59d0:	02940a0b 	addseq	r0, r4, #45056	; 0xb000
    59d4:	0c000000 	stceq	0, cr0, [r0], {-0}
    59d8:	000015ca 	andeq	r1, r0, sl, asr #11
    59dc:	250a0d0e 	strcs	r0, [sl, #-3342]	; 0xfffff2f2
    59e0:	01000000 	mrseq	r0, (UNDEF: 0)
    59e4:	00161910 	andseq	r1, r6, r0, lsl r9
    59e8:	1a100e00 	bne	4091f0 <_bss_end+0x3f8170>
    59ec:	00000ff7 	strdeq	r0, [r0], -r7
    59f0:	0015d211 	andseq	sp, r5, r1, lsl r2
    59f4:	05130e00 	ldreq	r0, [r3, #-3584]	; 0xfffff200
    59f8:	000015b0 			; <UNDEFINED> instruction: 0x000015b0
    59fc:	00000ffc 	strdeq	r0, [r0], -ip
    5a00:	000f4701 	andeq	r4, pc, r1, lsl #14
    5a04:	000f4d00 	andeq	r4, pc, r0, lsl #26
    5a08:	0ffc0e00 	svceq	0x00fc0e00
    5a0c:	11000000 	mrsne	r0, (UNDEF: 0)
    5a10:	00000a1d 	andeq	r0, r0, sp, lsl sl
    5a14:	a10a160e 	tstge	sl, lr, lsl #12
    5a18:	94000016 	strls	r0, [r0], #-22	; 0xffffffea
    5a1c:	01000002 	tsteq	r0, r2
    5a20:	00000f66 	andeq	r0, r0, r6, ror #30
    5a24:	00000f6c 	andeq	r0, r0, ip, ror #30
    5a28:	000ffc0e 	andeq	pc, pc, lr, lsl #24
    5a2c:	aa120000 	bge	485a34 <_bss_end+0x4749b4>
    5a30:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    5a34:	15050a18 	strne	r0, [r5, #-2584]	; 0xfffff5e8
    5a38:	81010000 	mrshi	r0, (UNDEF: 1)
    5a3c:	8700000f 	strhi	r0, [r0, -pc]
    5a40:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    5a44:	00000ffc 	strdeq	r0, [r0], -ip
    5a48:	073c1100 	ldreq	r1, [ip, -r0, lsl #2]!
    5a4c:	1a0e0000 	bne	385a54 <_bss_end+0x3749d4>
    5a50:	0014e20a 	andseq	lr, r4, sl, lsl #4
    5a54:	00029400 	andeq	r9, r2, r0, lsl #8
    5a58:	0fa00100 	svceq	0x00a00100
    5a5c:	0fa60000 	svceq	0x00a60000
    5a60:	020e0000 	andeq	r0, lr, #0
    5a64:	00000010 	andeq	r0, r0, r0, lsl r0
    5a68:	001cdd12 	andseq	sp, ip, r2, lsl sp
    5a6c:	0a1d0e00 	beq	749274 <_bss_end+0x7381f4>
    5a70:	00001648 	andeq	r1, r0, r8, asr #12
    5a74:	000fbb01 	andeq	fp, pc, r1, lsl #22
    5a78:	000fc600 	andeq	ip, pc, r0, lsl #12
    5a7c:	0ffc0e00 	svceq	0x00fc0e00
    5a80:	250f0000 	strcs	r0, [pc, #-0]	; 5a88 <CPSR_IRQ_INHIBIT+0x5a08>
    5a84:	00000000 	andeq	r0, r0, r0
    5a88:	0002d013 	andeq	sp, r2, r3, lsl r0
    5a8c:	0a1f0e00 	beq	7c9294 <_bss_end+0x7b8214>
    5a90:	000014c4 	andeq	r1, r0, r4, asr #9
    5a94:	00000025 	andeq	r0, r0, r5, lsr #32
    5a98:	000fdb01 	andeq	sp, pc, r1, lsl #22
    5a9c:	10020e00 	andne	r0, r2, r0, lsl #28
    5aa0:	00000000 	andeq	r0, r0, r0
    5aa4:	000efb03 	andeq	pc, lr, r3, lsl #22
    5aa8:	00501400 	subseq	r1, r0, r0, lsl #8
    5aac:	0ff70000 	svceq	0x00f70000
    5ab0:	79150000 	ldmdbvc	r5, {}	; <UNPREDICTABLE>
    5ab4:	5f000000 	svcpl	0x00000000
    5ab8:	0fe70300 	svceq	0x00e70300
    5abc:	04160000 	ldreq	r0, [r6], #-0
    5ac0:	00000efb 	strdeq	r0, [r0], -fp
    5ac4:	0fe20416 	svceq	0x00e20416
    5ac8:	37240000 	strcc	r0, [r4, -r0]!
    5acc:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    5ad0:	0efb1922 			; <UNDEFINED> instruction: 0x0efb1922
    5ad4:	88170000 	ldmdahi	r7, {}	; <UNPREDICTABLE>
    5ad8:	0400002c 	streq	r0, [r0], #-44	; 0xffffffd4
    5adc:	ac074105 	stfges	f4, [r7], {5}
    5ae0:	fc000002 	stc2	0, cr0, [r0], {2}
    5ae4:	28000010 	stmdacs	r0, {r4}
    5ae8:	000002ac 	andeq	r0, r0, ip, lsr #5
    5aec:	87180100 	ldrhi	r0, [r8, -r0, lsl #2]
    5af0:	b200002c 	andlt	r0, r0, #44	; 0x2c
    5af4:	63000023 	movwvs	r0, #35	; 0x23
    5af8:	01000009 	tsteq	r0, r9
    5afc:	00001042 	andeq	r1, r0, r2, asr #32
    5b00:	0000104d 	andeq	r1, r0, sp, asr #32
    5b04:	0017140e 	andseq	r1, r7, lr, lsl #8
    5b08:	00380e00 	eorseq	r0, r8, r0, lsl #28
    5b0c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5b10:	00002c88 	andeq	r2, r0, r8, lsl #25
    5b14:	000026aa 	andeq	r2, r0, sl, lsr #13
    5b18:	00001714 	andeq	r1, r0, r4, lsl r7
    5b1c:	00106301 	andseq	r6, r0, r1, lsl #6
    5b20:	00106e00 	andseq	r6, r0, r0, lsl #28
    5b24:	17140e00 	ldrne	r0, [r4, -r0, lsl #28]
    5b28:	1f0f0000 	svcne	0x000f0000
    5b2c:	00000017 	andeq	r0, r0, r7, lsl r0
    5b30:	002c8818 	eoreq	r8, ip, r8, lsl r8
    5b34:	002adf00 	eoreq	sp, sl, r0, lsl #30
    5b38:	00171400 	andseq	r1, r7, r0, lsl #8
    5b3c:	10840100 	addne	r0, r4, r0, lsl #2
    5b40:	108f0000 	addne	r0, pc, r0
    5b44:	140e0000 	strne	r0, [lr], #-0
    5b48:	0f000017 	svceq	0x00000017
    5b4c:	00001725 	andeq	r1, r0, r5, lsr #14
    5b50:	2c881800 	stccs	8, cr1, [r8], {0}
    5b54:	2a400000 	bcs	1005b5c <_bss_end+0xff4adc>
    5b58:	17140000 	ldrne	r0, [r4, -r0]
    5b5c:	a5010000 	strge	r0, [r1, #-0]
    5b60:	ab000010 	blge	5ba8 <CPSR_IRQ_INHIBIT+0x5b28>
    5b64:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    5b68:	00001714 	andeq	r1, r0, r4, lsl r7
    5b6c:	24bd1a00 	ldrtcs	r1, [sp], #2560	; 0xa00
    5b70:	44050000 	strmi	r0, [r5], #-0
    5b74:	0028e712 	eoreq	lr, r8, r2, lsl r7
    5b78:	10020100 	andne	r0, r2, r0, lsl #2
    5b7c:	00101400 	andseq	r1, r0, r0, lsl #8
    5b80:	10c80100 	sbcne	r0, r8, r0, lsl #2
    5b84:	10ce0000 	sbcne	r0, lr, r0
    5b88:	140e0000 	strne	r0, [lr], #-0
    5b8c:	00000017 	andeq	r0, r0, r7, lsl r0
    5b90:	00232e1b 	eoreq	r2, r3, fp, lsl lr
    5b94:	14490500 	strbne	r0, [r9], #-1280	; 0xfffffb00
    5b98:	00002883 	andeq	r2, r0, r3, lsl #17
    5b9c:	000004f3 	strdeq	r0, [r0], -r3
    5ba0:	01100201 	tsteq	r0, r1, lsl #4
    5ba4:	00001014 	andeq	r1, r0, r4, lsl r0
    5ba8:	0010eb01 	andseq	lr, r0, r1, lsl #22
    5bac:	17140e00 	ldrne	r0, [r4, -r0, lsl #28]
    5bb0:	a10f0000 	mrsge	r0, CPSR
    5bb4:	0f000002 	svceq	0x00000002
    5bb8:	000000f1 	strdeq	r0, [r0], -r1
    5bbc:	14030000 	strne	r0, [r3], #-0
    5bc0:	29000010 	stmdbcs	r0, {r4}
    5bc4:	00002281 	andeq	r2, r0, r1, lsl #5
    5bc8:	141c5605 	ldrne	r5, [ip], #-1541	; 0xfffff9fb
    5bcc:	05000010 	streq	r0, [r0, #-16]
    5bd0:	00ff2003 	rscseq	r2, pc, r3
    5bd4:	27b21700 	ldrcs	r1, [r2, r0, lsl #14]!
    5bd8:	06040000 	streq	r0, [r4], -r0
    5bdc:	02ac073d 	adceq	r0, ip, #15990784	; 0xf40000
    5be0:	11fb0000 	mvnsne	r0, r0
    5be4:	ac280000 	stcge	0, cr0, [r8], #-0
    5be8:	00000002 	andeq	r0, r0, r2
    5bec:	27b11801 	ldrcs	r1, [r1, r1, lsl #16]!
    5bf0:	229d0000 	addscs	r0, sp, #0
    5bf4:	09630000 	stmdbeq	r3!, {}^	; <UNPREDICTABLE>
    5bf8:	41010000 	mrsmi	r0, (UNDEF: 1)
    5bfc:	4c000011 	stcmi	0, cr0, [r0], {17}
    5c00:	0e000011 	mcreq	0, 0, r0, cr0, cr1, {0}
    5c04:	000015a2 	andeq	r1, r0, r2, lsr #11
    5c08:	0000380e 	andeq	r3, r0, lr, lsl #16
    5c0c:	b2180000 	andslt	r0, r8, #0
    5c10:	22000027 	andcs	r0, r0, #39	; 0x27
    5c14:	a2000028 	andge	r0, r0, #40	; 0x28
    5c18:	01000015 	tsteq	r0, r5, lsl r0
    5c1c:	00001162 	andeq	r1, r0, r2, ror #2
    5c20:	0000116d 	andeq	r1, r0, sp, ror #2
    5c24:	0015a20e 	andseq	sl, r5, lr, lsl #4
    5c28:	15ad0f00 	strne	r0, [sp, #3840]!	; 0xf00
    5c2c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5c30:	000027b2 			; <UNDEFINED> instruction: 0x000027b2
    5c34:	000024ea 	andeq	r2, r0, sl, ror #9
    5c38:	000015a2 	andeq	r1, r0, r2, lsr #11
    5c3c:	00118301 	andseq	r8, r1, r1, lsl #6
    5c40:	00118e00 	andseq	r8, r1, r0, lsl #28
    5c44:	15a20e00 	strne	r0, [r2, #3584]!	; 0xe00
    5c48:	b30f0000 	movwlt	r0, #61440	; 0xf000
    5c4c:	00000015 	andeq	r0, r0, r5, lsl r0
    5c50:	0027b218 	eoreq	fp, r7, r8, lsl r2
    5c54:	0029a100 	eoreq	sl, r9, r0, lsl #2
    5c58:	0015a200 	andseq	sl, r5, r0, lsl #4
    5c5c:	11a40100 			; <UNDEFINED> instruction: 0x11a40100
    5c60:	11aa0000 			; <UNDEFINED> instruction: 0x11aa0000
    5c64:	a20e0000 	andge	r0, lr, #0
    5c68:	00000015 	andeq	r0, r0, r5, lsl r0
    5c6c:	0024bd1a 	eoreq	fp, r4, sl, lsl sp
    5c70:	12400600 	subne	r0, r0, #0, 12
    5c74:	00001f2f 	andeq	r1, r0, pc, lsr #30
    5c78:	00100201 	andseq	r0, r0, r1, lsl #4
    5c7c:	00001113 	andeq	r1, r0, r3, lsl r1
    5c80:	0011c701 	andseq	ip, r1, r1, lsl #14
    5c84:	0011cd00 	andseq	ip, r1, r0, lsl #26
    5c88:	15a20e00 	strne	r0, [r2, #3584]!	; 0xe00
    5c8c:	1b000000 	blne	5c94 <CPSR_IRQ_INHIBIT+0x5c14>
    5c90:	0000232e 	andeq	r2, r0, lr, lsr #6
    5c94:	04144506 	ldreq	r4, [r4], #-1286	; 0xfffffafa
    5c98:	f3000027 	vhadd.u8	d0, d0, d23
    5c9c:	01000004 	tsteq	r0, r4
    5ca0:	13011002 	movwne	r1, #4098	; 0x1002
    5ca4:	01000011 	tsteq	r0, r1, lsl r0
    5ca8:	000011ea 	andeq	r1, r0, sl, ror #3
    5cac:	0015a20e 	andseq	sl, r5, lr, lsl #4
    5cb0:	02a10f00 	adceq	r0, r1, #0, 30
    5cb4:	f10f0000 			; <UNDEFINED> instruction: 0xf10f0000
    5cb8:	00000000 	andeq	r0, r0, r0
    5cbc:	11130300 	tstne	r3, r0, lsl #6
    5cc0:	65290000 	strvs	r0, [r9, #-0]!
    5cc4:	06000024 	streq	r0, [r0], -r4, lsr #32
    5cc8:	11131b52 	tstne	r3, r2, asr fp
    5ccc:	03050000 	movweq	r0, #20480	; 0x5000
    5cd0:	0000ff24 	andeq	pc, r0, r4, lsr #30
    5cd4:	001b400a 	andseq	r4, fp, sl
    5cd8:	060f0800 	streq	r0, [pc], -r0, lsl #16
    5cdc:	0012d707 	andseq	sp, r2, r7, lsl #14
    5ce0:	1a250c00 	bne	948ce8 <_bss_end+0x937c68>
    5ce4:	0a0f0000 	beq	3c5cec <_bss_end+0x3b4c6c>
    5ce8:	00084a22 	andeq	r4, r8, r2, lsr #20
    5cec:	620c0000 	andvs	r0, ip, #0
    5cf0:	0f000007 	svceq	0x00000007
    5cf4:	00680e0e 	rsbeq	r0, r8, lr, lsl #28
    5cf8:	11040000 	mrsne	r0, (UNDEF: 4)
    5cfc:	00001b40 	andeq	r1, r0, r0, asr #22
    5d00:	1205110f 	andne	r1, r5, #-1073741821	; 0xc0000003
    5d04:	dc00001b 	stcle	0, cr0, [r0], {27}
    5d08:	01000012 	tsteq	r0, r2, lsl r0
    5d0c:	00001252 	andeq	r1, r0, r2, asr r2
    5d10:	0000125d 	andeq	r1, r0, sp, asr r2
    5d14:	0012dc0e 	andseq	sp, r2, lr, lsl #24
    5d18:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    5d1c:	11000000 	mrsne	r0, (UNDEF: 0)
    5d20:	00000a1d 	andeq	r0, r0, sp, lsl sl
    5d24:	ca0a140f 	bgt	28ad68 <_bss_end+0x279ce8>
    5d28:	9400001a 	strls	r0, [r0], #-26	; 0xffffffe6
    5d2c:	01000002 	tsteq	r0, r2
    5d30:	00001276 	andeq	r1, r0, r6, ror r2
    5d34:	00001281 	andeq	r1, r0, r1, lsl #5
    5d38:	0012dc0e 	andseq	sp, r2, lr, lsl #24
    5d3c:	02940f00 	addseq	r0, r4, #0, 30
    5d40:	12000000 	andne	r0, r0, #0
    5d44:	000009aa 	andeq	r0, r0, sl, lsr #19
    5d48:	200a160f 	andcs	r1, sl, pc, lsl #12
    5d4c:	0100001b 	tsteq	r0, fp, lsl r0
    5d50:	00001296 	muleq	r0, r6, r2
    5d54:	0000129c 	muleq	r0, ip, r2
    5d58:	0012dc0e 	andseq	sp, r2, lr, lsl #24
    5d5c:	3c110000 	ldccc	0, cr0, [r1], {-0}
    5d60:	0f000007 	svceq	0x00000007
    5d64:	1adb0a18 	bne	ff6c85cc <_bss_end+0xff6b754c>
    5d68:	02940000 	addseq	r0, r4, #0
    5d6c:	b5010000 	strlt	r0, [r1, #-0]
    5d70:	bb000012 	bllt	5dc0 <CPSR_IRQ_INHIBIT+0x5d40>
    5d74:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    5d78:	000012e2 	andeq	r1, r0, r2, ror #5
    5d7c:	1b001300 	blne	a984 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x3a4>
    5d80:	1b0f0000 	blne	3c5d88 <_bss_end+0x3b4d08>
    5d84:	001a3a0e 	andseq	r3, sl, lr, lsl #20
    5d88:	00006800 	andeq	r6, r0, r0, lsl #16
    5d8c:	12d00100 	sbcsne	r0, r0, #0, 2
    5d90:	dc0e0000 	stcle	0, cr0, [lr], {-0}
    5d94:	00000012 	andeq	r0, r0, r2, lsl r0
    5d98:	12120300 	andsne	r0, r2, #0, 6
    5d9c:	04160000 	ldreq	r0, [r6], #-0
    5da0:	00001212 	andeq	r1, r0, r2, lsl r2
    5da4:	12d70416 	sbcsne	r0, r7, #369098752	; 0x16000000
    5da8:	55240000 	strpl	r0, [r4, #-0]!
    5dac:	0f00001b 	svceq	0x0000001b
    5db0:	12120e1e 	andsne	r0, r2, #480	; 0x1e0
    5db4:	07170000 	ldreq	r0, [r7, -r0]
    5db8:	04000026 	streq	r0, [r0], #-38	; 0xffffffda
    5dbc:	ac074407 	cfstrsge	mvf4, [r7], {7}
    5dc0:	dc000002 	stcle	0, cr0, [r0], {2}
    5dc4:	28000013 	stmdacs	r0, {r0, r1, r4}
    5dc8:	000002ac 	andeq	r0, r0, ip, lsr #5
    5dcc:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    5dd0:	cc000026 	stcgt	0, cr0, [r0], {38}	; 0x26
    5dd4:	63000027 	movwvs	r0, #39	; 0x27
    5dd8:	01000009 	tsteq	r0, r9
    5ddc:	00001322 	andeq	r1, r0, r2, lsr #6
    5de0:	0000132d 	andeq	r1, r0, sp, lsr #6
    5de4:	0014300e 	andseq	r3, r4, lr
    5de8:	00380e00 	eorseq	r0, r8, r0, lsl #28
    5dec:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5df0:	00002607 	andeq	r2, r0, r7, lsl #12
    5df4:	0000276b 	andeq	r2, r0, fp, ror #14
    5df8:	00001430 	andeq	r1, r0, r0, lsr r4
    5dfc:	00134301 	andseq	r4, r3, r1, lsl #6
    5e00:	00134e00 	andseq	r4, r3, r0, lsl #28
    5e04:	14300e00 	ldrtne	r0, [r0], #-3584	; 0xfffff200
    5e08:	3b0f0000 	blcc	3c5e10 <_bss_end+0x3b4d90>
    5e0c:	00000014 	andeq	r0, r0, r4, lsl r0
    5e10:	00260718 	eoreq	r0, r6, r8, lsl r7
    5e14:	0020c600 	eoreq	ip, r0, r0, lsl #12
    5e18:	00143000 	andseq	r3, r4, r0
    5e1c:	13640100 	cmnne	r4, #0, 2
    5e20:	136f0000 	cmnne	pc, #0
    5e24:	300e0000 	andcc	r0, lr, r0
    5e28:	0f000014 	svceq	0x00000014
    5e2c:	00001441 	andeq	r1, r0, r1, asr #8
    5e30:	26071800 	strcs	r1, [r7], -r0, lsl #16
    5e34:	1ebe0000 	cdpne	0, 11, cr0, cr14, cr0, {0}
    5e38:	14300000 	ldrtne	r0, [r0], #-0
    5e3c:	85010000 	strhi	r0, [r1, #-0]
    5e40:	8b000013 	blhi	5e94 <CPSR_IRQ_INHIBIT+0x5e14>
    5e44:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    5e48:	00001430 	andeq	r1, r0, r0, lsr r4
    5e4c:	24bd1a00 	ldrtcs	r1, [sp], #2560	; 0xa00
    5e50:	47070000 	strmi	r0, [r7, -r0]
    5e54:	0021a212 	eoreq	sl, r1, r2, lsl r2
    5e58:	10020100 	andne	r0, r2, r0, lsl #2
    5e5c:	0012f400 	andseq	pc, r2, r0, lsl #8
    5e60:	13a80100 			; <UNDEFINED> instruction: 0x13a80100
    5e64:	13ae0000 			; <UNDEFINED> instruction: 0x13ae0000
    5e68:	300e0000 	andcc	r0, lr, r0
    5e6c:	00000014 	andeq	r0, r0, r4, lsl r0
    5e70:	00232e1b 	eoreq	r2, r3, fp, lsl lr
    5e74:	144c0700 	strbne	r0, [ip], #-1792	; 0xfffff900
    5e78:	00002338 	andeq	r2, r0, r8, lsr r3
    5e7c:	000004f3 	strdeq	r0, [r0], -r3
    5e80:	01100201 	tsteq	r0, r1, lsl #4
    5e84:	000012f4 	strdeq	r1, [r0], -r4
    5e88:	0013cb01 	andseq	ip, r3, r1, lsl #22
    5e8c:	14300e00 	ldrtne	r0, [r0], #-3584	; 0xfffff200
    5e90:	a10f0000 	mrsge	r0, CPSR
    5e94:	0f000002 	svceq	0x00000002
    5e98:	000000f1 	strdeq	r0, [r0], -r1
    5e9c:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    5ea0:	29000012 	stmdbcs	r0, {r1, r4}
    5ea4:	00002c76 	andeq	r2, r0, r6, ror ip
    5ea8:	f4115907 			; <UNDEFINED> instruction: 0xf4115907
    5eac:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    5eb0:	00ff2803 	rscseq	r2, pc, r3, lsl #16
    5eb4:	01d31400 	bicseq	r1, r3, r0, lsl #8
    5eb8:	14030000 	strne	r0, [r3], #-0
    5ebc:	79150000 	ldmdbvc	r5, {}	; <UNPREDICTABLE>
    5ec0:	04000000 	streq	r0, [r0], #-0
    5ec4:	13f30300 	mvnsne	r0, #0, 6
    5ec8:	d8310000 	ldmdale	r1!, {}	; <UNPREDICTABLE>
    5ecc:	10000001 	andne	r0, r0, r1
    5ed0:	25e71f0c 	strbcs	r1, [r7, #3852]!	; 0xf0c
    5ed4:	14030000 	strne	r0, [r3], #-0
    5ed8:	03050000 	movweq	r0, #20480	; 0x5000
    5edc:	0000fa48 	andeq	pc, r0, r8, asr #20
    5ee0:	0001e432 	andeq	lr, r1, r2, lsr r4
    5ee4:	10151000 	andsne	r1, r5, r0
    5ee8:	00001eee 	andeq	r1, r0, lr, ror #29
    5eec:	fac00305 	blx	ff006b08 <_bss_end+0xfeff5a88>
    5ef0:	04160000 	ldreq	r0, [r6], #-0
    5ef4:	000012f4 	strdeq	r1, [r0], -r4
    5ef8:	00143003 	andseq	r3, r4, r3
    5efc:	f4043300 	vst2.8	{d3-d6}, [r4], r0
    5f00:	23000012 	movwcs	r0, #18
    5f04:	0013dc04 	andseq	sp, r3, r4, lsl #24
    5f08:	24ca1700 	strbcs	r1, [sl], #1792	; 0x700
    5f0c:	07080000 	streq	r0, [r8, -r0]
    5f10:	03b4070a 			; <UNDEFINED> instruction: 0x03b4070a
    5f14:	158c0000 	strne	r0, [ip]
    5f18:	b4280000 	strtlt	r0, [r8], #-0
    5f1c:	00000003 	andeq	r0, r0, r3
    5f20:	24ca1801 	strbcs	r1, [sl], #2049	; 0x801
    5f24:	27540000 	ldrbcs	r0, [r4, -r0]
    5f28:	15910000 	ldrne	r0, [r1]
    5f2c:	75010000 	strvc	r0, [r1, #-0]
    5f30:	80000014 	andhi	r0, r0, r4, lsl r0
    5f34:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    5f38:	00001591 	muleq	r0, r1, r5
    5f3c:	00159c0f 	andseq	r9, r5, pc, lsl #24
    5f40:	620c0000 	andvs	r0, ip, #0
    5f44:	07000007 	streq	r0, [r0, -r7]
    5f48:	02940a0d 	addseq	r0, r4, #53248	; 0xd000
    5f4c:	11040000 	mrsne	r0, (UNDEF: 4)
    5f50:	000024ca 	andeq	r2, r0, sl, asr #9
    5f54:	f0051007 			; <UNDEFINED> instruction: 0xf0051007
    5f58:	91000026 	tstls	r0, r6, lsr #32
    5f5c:	01000015 	tsteq	r0, r5, lsl r0
    5f60:	000014a6 	andeq	r1, r0, r6, lsr #9
    5f64:	000014ac 	andeq	r1, r0, ip, lsr #9
    5f68:	0015910e 	andseq	r9, r5, lr, lsl #2
    5f6c:	c9340000 	ldmdbgt	r4!, {}	; <UNPREDICTABLE>
    5f70:	07000024 	streq	r0, [r0, -r4, lsr #32]
    5f74:	21c60515 	biccs	r0, r6, r5, lsl r5
    5f78:	09630000 	stmdbeq	r3!, {}^	; <UNPREDICTABLE>
    5f7c:	47010000 	strmi	r0, [r1, -r0]
    5f80:	01000014 	tsteq	r0, r4, lsl r0
    5f84:	000014ca 	andeq	r1, r0, sl, asr #9
    5f88:	000014d5 	ldrdeq	r1, [r0], -r5
    5f8c:	0015910e 	andseq	r9, r5, lr, lsl #2
    5f90:	00380e00 	eorseq	r0, r8, r0, lsl #28
    5f94:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5f98:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    5f9c:	6e161a07 	vnmlsvs.f32	s2, s12, s14
    5fa0:	68000026 	stmdavs	r0, {r1, r2, r5}
    5fa4:	01000000 	mrseq	r0, (UNDEF: 0)
    5fa8:	47021002 	strmi	r1, [r2, -r2]
    5fac:	01000014 	tsteq	r0, r4, lsl r0
    5fb0:	000014f6 	strdeq	r1, [r0], -r6
    5fb4:	00001506 	andeq	r1, r0, r6, lsl #10
    5fb8:	0015910e 	andseq	r9, r5, lr, lsl #2
    5fbc:	0cbd0f00 	ldceq	15, cr0, [sp]
    5fc0:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    5fc4:	00000000 	andeq	r0, r0, r0
    5fc8:	001cdd1e 	andseq	sp, ip, lr, lsl sp
    5fcc:	162c0700 	strtne	r0, [ip], -r0, lsl #14
    5fd0:	00002133 	andeq	r2, r0, r3, lsr r1
    5fd4:	00000068 	andeq	r0, r0, r8, rrx
    5fd8:	03100201 	tsteq	r0, #268435456	; 0x10000000
    5fdc:	00001447 	andeq	r1, r0, r7, asr #8
    5fe0:	00152701 	andseq	r2, r5, r1, lsl #14
    5fe4:	00153700 	andseq	r3, r5, r0, lsl #14
    5fe8:	15910e00 	ldrne	r0, [r1, #3584]	; 0xe00
    5fec:	a10f0000 	mrsge	r0, CPSR
    5ff0:	0f000002 	svceq	0x00000002
    5ff4:	00000068 	andeq	r0, r0, r8, rrx
    5ff8:	09aa1e00 	stmibeq	sl!, {r9, sl, fp, ip}
    5ffc:	33070000 	movwcc	r0, #28672	; 0x7000
    6000:	00224612 	eoreq	r4, r2, r2, lsl r6
    6004:	00029400 	andeq	r9, r2, r0, lsl #8
    6008:	10020100 	andne	r0, r2, r0, lsl #2
    600c:	00144704 	andseq	r4, r4, r4, lsl #14
    6010:	15580100 	ldrbne	r0, [r8, #-256]	; 0xffffff00
    6014:	155e0000 	ldrbne	r0, [lr, #-0]
    6018:	910e0000 	mrsls	r0, (UNDEF: 14)
    601c:	00000015 	andeq	r0, r0, r5, lsl r0
    6020:	0024141b 	eoreq	r1, r4, fp, lsl r4
    6024:	123e0700 	eorsne	r0, lr, #0, 14
    6028:	00002510 	andeq	r2, r0, r0, lsl r5
    602c:	00000294 	muleq	r0, r4, r2
    6030:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    6034:	00001447 	andeq	r1, r0, r7, asr #8
    6038:	00157b01 	andseq	r7, r5, r1, lsl #22
    603c:	15910e00 	ldrne	r0, [r1, #3584]	; 0xe00
    6040:	8a0f0000 	bhi	3c6048 <_bss_end+0x3b4fc8>
    6044:	0f000000 	svceq	0x00000000
    6048:	00000963 	andeq	r0, r0, r3, ror #18
    604c:	47030000 	strmi	r0, [r3, -r0]
    6050:	16000014 			; <UNDEFINED> instruction: 0x16000014
    6054:	00144704 	andseq	r4, r4, r4, lsl #14
    6058:	15910300 	ldrne	r0, [r1, #768]	; 0x300
    605c:	04230000 	strteq	r0, [r3], #-0
    6060:	0000158c 	andeq	r1, r0, ip, lsl #11
    6064:	11130416 	tstne	r3, r6, lsl r4
    6068:	a2030000 	andge	r0, r3, #0
    606c:	33000015 	movwcc	r0, #21
    6070:	00111304 	andseq	r1, r1, r4, lsl #6
    6074:	fb042300 	blx	10ec7e <_bss_end+0xfdbfe>
    6078:	17000011 	smladne	r0, r1, r0, r0
    607c:	00002939 	andeq	r2, r0, r9, lsr r9
    6080:	070a0608 	streq	r0, [sl, -r8, lsl #12]
    6084:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
    6088:	000016fe 	strdeq	r1, [r0], -lr
    608c:	0003b428 	andeq	fp, r3, r8, lsr #8
    6090:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    6094:	00002939 	andeq	r2, r0, r9, lsr r9
    6098:	00001e64 	andeq	r1, r0, r4, ror #28
    609c:	00001703 	andeq	r1, r0, r3, lsl #14
    60a0:	0015e701 	andseq	lr, r5, r1, lsl #14
    60a4:	0015f200 	andseq	pc, r5, r0, lsl #4
    60a8:	17030e00 	strne	r0, [r3, -r0, lsl #28]
    60ac:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
    60b0:	00000017 	andeq	r0, r0, r7, lsl r0
    60b4:	0007620c 	andeq	r6, r7, ip, lsl #4
    60b8:	0a0d0600 	beq	3478c0 <_bss_end+0x336840>
    60bc:	00000294 	muleq	r0, r4, r2
    60c0:	29391104 	ldmdbcs	r9!, {r2, r8, ip}
    60c4:	10060000 	andne	r0, r6, r0
    60c8:	002b2105 	eoreq	r2, fp, r5, lsl #2
    60cc:	00170300 	andseq	r0, r7, r0, lsl #6
    60d0:	16180100 	ldrne	r0, [r8], -r0, lsl #2
    60d4:	161e0000 	ldrne	r0, [lr], -r0
    60d8:	030e0000 	movweq	r0, #57344	; 0xe000
    60dc:	00000017 	andeq	r0, r0, r7, lsl r0
    60e0:	00293834 	eoreq	r3, r9, r4, lsr r8
    60e4:	05160600 	ldreq	r0, [r6, #-1536]	; 0xfffffa00
    60e8:	00002592 	muleq	r0, r2, r5
    60ec:	00000963 	andeq	r0, r0, r3, ror #18
    60f0:	0015b901 	andseq	fp, r5, r1, lsl #18
    60f4:	163c0100 	ldrtne	r0, [ip], -r0, lsl #2
    60f8:	16470000 	strbne	r0, [r7], -r0
    60fc:	030e0000 	movweq	r0, #57344	; 0xe000
    6100:	0e000017 	mcreq	0, 0, r0, cr0, cr7, {0}
    6104:	00000038 	andeq	r0, r0, r8, lsr r0
    6108:	02d01e00 	sbcseq	r1, r0, #0, 28
    610c:	1b060000 	blne	186114 <_bss_end+0x175094>
    6110:	00221c16 	eoreq	r1, r2, r6, lsl ip
    6114:	00006800 	andeq	r6, r0, r0, lsl #16
    6118:	10020100 	andne	r0, r2, r0, lsl #2
    611c:	0015b902 	andseq	fp, r5, r2, lsl #18
    6120:	16680100 	strbtne	r0, [r8], -r0, lsl #2
    6124:	16780000 	ldrbtne	r0, [r8], -r0
    6128:	030e0000 	movweq	r0, #57344	; 0xe000
    612c:	0f000017 	svceq	0x00000017
    6130:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    6134:	0000680f 	andeq	r6, r0, pc, lsl #16
    6138:	dd1e0000 	ldcle	0, cr0, [lr, #-0]
    613c:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    6140:	28c21622 	stmiacs	r2, {r1, r5, r9, sl, ip}^
    6144:	00680000 	rsbeq	r0, r8, r0
    6148:	02010000 	andeq	r0, r1, #0
    614c:	15b90310 	ldrne	r0, [r9, #784]!	; 0x310
    6150:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    6154:	a9000016 	stmdbge	r0, {r1, r2, r4}
    6158:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    615c:	00001703 	andeq	r1, r0, r3, lsl #14
    6160:	0002a10f 	andeq	sl, r2, pc, lsl #2
    6164:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    6168:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    616c:	000009aa 	andeq	r0, r0, sl, lsr #19
    6170:	00122c06 	andseq	r2, r2, r6, lsl #24
    6174:	94000021 	strls	r0, [r0], #-33	; 0xffffffdf
    6178:	01000002 	tsteq	r0, r2
    617c:	b9041002 	stmdblt	r4, {r1, ip}
    6180:	01000015 	tsteq	r0, r5, lsl r0
    6184:	000016ca 	andeq	r1, r0, sl, asr #13
    6188:	000016d0 	ldrdeq	r1, [r0], -r0
    618c:	0017030e 	andseq	r0, r7, lr, lsl #6
    6190:	141b0000 	ldrne	r0, [fp], #-0
    6194:	06000024 	streq	r0, [r0], -r4, lsr #32
    6198:	255d1237 	ldrbcs	r1, [sp, #-567]	; 0xfffffdc9
    619c:	02940000 	addseq	r0, r4, #0
    61a0:	02010000 	andeq	r0, r1, #0
    61a4:	15b90510 	ldrne	r0, [r9, #1296]!	; 0x510
    61a8:	ed010000 	stc	0, cr0, [r1, #-0]
    61ac:	0e000016 	mcreq	0, 0, r0, cr0, cr6, {0}
    61b0:	00001703 	andeq	r1, r0, r3, lsl #14
    61b4:	00008a0f 	andeq	r8, r0, pc, lsl #20
    61b8:	09630f00 	stmdbeq	r3!, {r8, r9, sl, fp}^
    61bc:	00000000 	andeq	r0, r0, r0
    61c0:	0015b903 	andseq	fp, r5, r3, lsl #18
    61c4:	b9041600 	stmdblt	r4, {r9, sl, ip}
    61c8:	03000015 	movweq	r0, #21
    61cc:	00001703 	andeq	r1, r0, r3, lsl #14
    61d0:	16fe0423 	ldrbtne	r0, [lr], r3, lsr #8
    61d4:	04160000 	ldreq	r0, [r6], #-0
    61d8:	00001014 	andeq	r1, r0, r4, lsl r0
    61dc:	00171403 	andseq	r1, r7, r3, lsl #8
    61e0:	14043300 	strne	r3, [r4], #-768	; 0xfffffd00
    61e4:	23000010 	movwcs	r0, #16
    61e8:	0010fc04 	andseq	pc, r0, r4, lsl #24
    61ec:	2b891700 	blcs	fe24bdf4 <_bss_end+0xfe23ad74>
    61f0:	05080000 	streq	r0, [r8, #-0]
    61f4:	03b4070a 			; <UNDEFINED> instruction: 0x03b4070a
    61f8:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
    61fc:	b4280000 	strtlt	r0, [r8], #-0
    6200:	00000003 	andeq	r0, r0, r3
    6204:	2b891801 	blcs	fe24c210 <_bss_end+0xfe23b190>
    6208:	29160000 	ldmdbcs	r6, {}	; <UNPREDICTABLE>
    620c:	18750000 	ldmdane	r5!, {}^	; <UNPREDICTABLE>
    6210:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    6214:	64000017 	strvs	r0, [r0], #-23	; 0xffffffe9
    6218:	0e000017 	mcreq	0, 0, r0, cr0, cr7, {0}
    621c:	00001875 	andeq	r1, r0, r5, ror r8
    6220:	0018800f 	andseq	r8, r8, pc
    6224:	620c0000 	andvs	r0, ip, #0
    6228:	05000007 	streq	r0, [r0, #-7]
    622c:	02940a0d 	addseq	r0, r4, #53248	; 0xd000
    6230:	11040000 	mrsne	r0, (UNDEF: 4)
    6234:	00002b89 	andeq	r2, r0, r9, lsl #23
    6238:	65051005 	strvs	r1, [r5, #-5]
    623c:	75000020 	strvc	r0, [r0, #-32]	; 0xffffffe0
    6240:	01000018 	tsteq	r0, r8, lsl r0
    6244:	0000178a 	andeq	r1, r0, sl, lsl #15
    6248:	00001790 	muleq	r0, r0, r7
    624c:	0018750e 	andseq	r7, r8, lr, lsl #10
    6250:	88340000 	ldmdahi	r4!, {}	; <UNPREDICTABLE>
    6254:	0500002b 	streq	r0, [r0, #-43]	; 0xffffffd5
    6258:	29820516 	stmibcs	r2, {r1, r2, r4, r8, sl}
    625c:	09630000 	stmdbeq	r3!, {}^	; <UNPREDICTABLE>
    6260:	2b010000 	blcs	46268 <_bss_end+0x351e8>
    6264:	01000017 	tsteq	r0, r7, lsl r0
    6268:	000017ae 	andeq	r1, r0, lr, lsr #15
    626c:	000017b9 			; <UNDEFINED> instruction: 0x000017b9
    6270:	0018750e 	andseq	r7, r8, lr, lsl #10
    6274:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6278:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    627c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6280:	87161b05 	ldrhi	r1, [r6, -r5, lsl #22]
    6284:	6800002a 	stmdavs	r0, {r1, r3, r5}
    6288:	01000000 	mrseq	r0, (UNDEF: 0)
    628c:	2b021002 	blcs	8a29c <_bss_end+0x7921c>
    6290:	01000017 	tsteq	r0, r7, lsl r0
    6294:	000017da 	ldrdeq	r1, [r0], -sl
    6298:	000017ea 	andeq	r1, r0, sl, ror #15
    629c:	0018750e 	andseq	r7, r8, lr, lsl #10
    62a0:	0cbd0f00 	ldceq	15, cr0, [sp]
    62a4:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    62a8:	00000000 	andeq	r0, r0, r0
    62ac:	001cdd1e 	andseq	sp, ip, lr, lsl sp
    62b0:	16270500 	strtne	r0, [r7], -r0, lsl #10
    62b4:	00001f96 	muleq	r0, r6, pc	; <UNPREDICTABLE>
    62b8:	00000068 	andeq	r0, r0, r8, rrx
    62bc:	03100201 	tsteq	r0, #268435456	; 0x10000000
    62c0:	0000172b 	andeq	r1, r0, fp, lsr #14
    62c4:	00180b01 	andseq	r0, r8, r1, lsl #22
    62c8:	00181b00 	andseq	r1, r8, r0, lsl #22
    62cc:	18750e00 	ldmdane	r5!, {r9, sl, fp}^
    62d0:	a10f0000 	mrsge	r0, CPSR
    62d4:	0f000002 	svceq	0x00000002
    62d8:	00000068 	andeq	r0, r0, r8, rrx
    62dc:	09aa1e00 	stmibeq	sl!, {r9, sl, fp, ip}
    62e0:	30050000 	andcc	r0, r5, r0
    62e4:	00225e12 	eoreq	r5, r2, r2, lsl lr
    62e8:	00029400 	andeq	r9, r2, r0, lsl #8
    62ec:	10020100 	andne	r0, r2, r0, lsl #2
    62f0:	00172b04 	andseq	r2, r7, r4, lsl #22
    62f4:	183c0100 	ldmdane	ip!, {r8}
    62f8:	18420000 	stmdane	r2, {}^	; <UNPREDICTABLE>
    62fc:	750e0000 	strvc	r0, [lr, #-0]
    6300:	00000018 	andeq	r0, r0, r8, lsl r0
    6304:	0024141b 	eoreq	r1, r4, fp, lsl r4
    6308:	123b0500 	eorsne	r0, fp, #0, 10
    630c:	00002a0a 	andeq	r2, r0, sl, lsl #20
    6310:	00000294 	muleq	r0, r4, r2
    6314:	05100201 	ldreq	r0, [r0, #-513]	; 0xfffffdff
    6318:	0000172b 	andeq	r1, r0, fp, lsr #14
    631c:	00185f01 	andseq	r5, r8, r1, lsl #30
    6320:	18750e00 	ldmdane	r5!, {r9, sl, fp}^
    6324:	8a0f0000 	bhi	3c632c <_bss_end+0x3b52ac>
    6328:	0f000000 	svceq	0x00000000
    632c:	00000963 	andeq	r0, r0, r3, ror #18
    6330:	2b030000 	blcs	c6338 <_bss_end+0xb52b8>
    6334:	16000017 			; <UNDEFINED> instruction: 0x16000017
    6338:	00172b04 	andseq	r2, r7, r4, lsl #22
    633c:	18750300 	ldmdane	r5!, {r8, r9}^
    6340:	04230000 	strteq	r0, [r3], #-0
    6344:	00001870 	andeq	r1, r0, r0, ror r8
    6348:	0cda0416 	cfldrdeq	mvd0, [sl], {22}
    634c:	86030000 	strhi	r0, [r3], -r0
    6350:	33000018 	movwcc	r0, #24
    6354:	000cda04 	andeq	sp, ip, r4, lsl #20
    6358:	c2042300 	andgt	r2, r4, #0, 6
    635c:	1700000d 	strne	r0, [r0, -sp]
    6360:	00002ca4 	andeq	r2, r0, r4, lsr #25
    6364:	07090408 	streq	r0, [r9, -r8, lsl #8]
    6368:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
    636c:	000019e7 	andeq	r1, r0, r7, ror #19
    6370:	0003b428 	andeq	fp, r3, r8, lsr #8
    6374:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    6378:	00002ca4 	andeq	r2, r0, r4, lsr #25
    637c:	000023d6 	ldrdeq	r2, [r0], -r6
    6380:	000019ec 	andeq	r1, r0, ip, ror #19
    6384:	0018cb01 	andseq	ip, r8, r1, lsl #22
    6388:	0018d600 	andseq	sp, r8, r0, lsl #12
    638c:	19ec0e00 	stmibne	ip!, {r9, sl, fp}^
    6390:	f70f0000 			; <UNDEFINED> instruction: 0xf70f0000
    6394:	00000019 	andeq	r0, r0, r9, lsl r0
    6398:	0024ae0c 	eoreq	sl, r4, ip, lsl #28
    639c:	090c0400 	stmdbeq	ip, {sl}
    63a0:	00000038 	andeq	r0, r0, r8, lsr r0
    63a4:	2ca41104 	stfcss	f1, [r4], #16
    63a8:	0f040000 	svceq	0x00040000
    63ac:	00209805 	eoreq	r9, r0, r5, lsl #16
    63b0:	0019ec00 	andseq	lr, r9, r0, lsl #24
    63b4:	18fc0100 	ldmne	ip!, {r8}^
    63b8:	19070000 	stmdbne	r7, {}	; <UNPREDICTABLE>
    63bc:	ec0e0000 	stc	0, cr0, [lr], {-0}
    63c0:	0f000019 	svceq	0x00000019
    63c4:	00000038 	andeq	r0, r0, r8, lsr r0
    63c8:	2ca33400 	cfstrscs	mvf3, [r3]
    63cc:	14040000 	strne	r0, [r4], #-0
    63d0:	00279a05 	eoreq	r9, r7, r5, lsl #20
    63d4:	00096300 	andeq	r6, r9, r0, lsl #6
    63d8:	189d0100 	ldmne	sp, {r8}
    63dc:	25010000 	strcs	r0, [r1, #-0]
    63e0:	30000019 	andcc	r0, r0, r9, lsl r0
    63e4:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    63e8:	000019ec 	andeq	r1, r0, ip, ror #19
    63ec:	0000380e 	andeq	r3, r0, lr, lsl #16
    63f0:	d01e0000 	andsle	r0, lr, r0
    63f4:	04000002 	streq	r0, [r0], #-2
    63f8:	2b3f1619 	blcs	fcbc64 <_bss_end+0xfbabe4>
    63fc:	00680000 	rsbeq	r0, r8, r0
    6400:	02010000 	andeq	r0, r1, #0
    6404:	189d0210 	ldmne	sp, {r4, r9}
    6408:	51010000 	mrspl	r0, (UNDEF: 1)
    640c:	61000019 	tstvs	r0, r9, lsl r0
    6410:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    6414:	000019ec 	andeq	r1, r0, ip, ror #19
    6418:	000cbd0f 	andeq	fp, ip, pc, lsl #26
    641c:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    6420:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6424:	00001cdd 	ldrdeq	r1, [r0], -sp
    6428:	ab161e04 	blge	58dc40 <_bss_end+0x57cbc0>
    642c:	6800002a 	stmdavs	r0, {r1, r3, r5}
    6430:	01000000 	mrseq	r0, (UNDEF: 0)
    6434:	9d031002 	stcls	0, cr1, [r3, #-8]
    6438:	01000018 	tsteq	r0, r8, lsl r0
    643c:	00001982 	andeq	r1, r0, r2, lsl #19
    6440:	00001992 	muleq	r0, r2, r9
    6444:	0019ec0e 	andseq	lr, r9, lr, lsl #24
    6448:	02a10f00 	adceq	r0, r1, #0, 30
    644c:	680f0000 	stmdavs	pc, {}	; <UNPREDICTABLE>
    6450:	00000000 	andeq	r0, r0, r0
    6454:	0009aa1e 	andeq	sl, r9, lr, lsl sl
    6458:	122c0400 	eorne	r0, ip, #0, 8
    645c:	000029c9 	andeq	r2, r0, r9, asr #19
    6460:	00000294 	muleq	r0, r4, r2
    6464:	04100201 	ldreq	r0, [r0], #-513	; 0xfffffdff
    6468:	0000189d 	muleq	r0, sp, r8
    646c:	0019b301 	andseq	fp, r9, r1, lsl #6
    6470:	0019b900 	andseq	fp, r9, r0, lsl #18
    6474:	19ec0e00 	stmibne	ip!, {r9, sl, fp}^
    6478:	1b000000 	blne	6480 <CPSR_IRQ_INHIBIT+0x6400>
    647c:	00002414 	andeq	r2, r0, r4, lsl r4
    6480:	80123a04 	andshi	r3, r2, r4, lsl #20
    6484:	94000024 	strls	r0, [r0], #-36	; 0xffffffdc
    6488:	01000002 	tsteq	r0, r2
    648c:	9d051002 	stcls	0, cr1, [r5, #-8]
    6490:	01000018 	tsteq	r0, r8, lsl r0
    6494:	000019d6 	ldrdeq	r1, [r0], -r6
    6498:	0019ec0e 	andseq	lr, r9, lr, lsl #24
    649c:	008a0f00 	addeq	r0, sl, r0, lsl #30
    64a0:	630f0000 	movwvs	r0, #61440	; 0xf000
    64a4:	00000009 	andeq	r0, r0, r9
    64a8:	189d0300 	ldmne	sp, {r8, r9}
    64ac:	04160000 	ldreq	r0, [r6], #-0
    64b0:	0000189d 	muleq	r0, sp, r8
    64b4:	0019ec03 	andseq	lr, r9, r3, lsl #24
    64b8:	e7042300 	str	r2, [r4, -r0, lsl #6]
    64bc:	16000019 			; <UNDEFINED> instruction: 0x16000019
    64c0:	00097104 	andeq	r7, r9, r4, lsl #2
    64c4:	19fd0300 	ldmibne	sp!, {r8, r9}^
    64c8:	04330000 	ldrteq	r0, [r3], #-0
    64cc:	00000971 	andeq	r0, r0, r1, ror r9
    64d0:	0a590423 	beq	1647564 <_bss_end+0x16364e4>
    64d4:	e5170000 	ldr	r0, [r7, #-0]
    64d8:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    64dc:	b4070a03 	strlt	r0, [r7], #-2563	; 0xfffff5fd
    64e0:	82000003 	andhi	r0, r0, #3
    64e4:	2800001b 	stmdacs	r0, {r0, r1, r3, r4}
    64e8:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
    64ec:	e5180100 	ldr	r0, [r8, #-256]	; 0xffffff00
    64f0:	d7000026 	strle	r0, [r0, -r6, lsr #32]
    64f4:	8700001e 	smladhi	r0, lr, r0, r0
    64f8:	0100001b 	tsteq	r0, fp, lsl r0
    64fc:	00001a42 	andeq	r1, r0, r2, asr #20
    6500:	00001a4d 	andeq	r1, r0, sp, asr #20
    6504:	001b870e 	andseq	r8, fp, lr, lsl #14
    6508:	1b920f00 	blne	fe48a110 <_bss_end+0xfe479090>
    650c:	0c000000 	stceq	0, cr0, [r0], {-0}
    6510:	000026a3 	andeq	r2, r0, r3, lsr #13
    6514:	38090e03 	stmdacc	r9, {r0, r1, r9, sl, fp}
    6518:	04000000 	streq	r0, [r0], #-0
    651c:	002a040c 	eoreq	r0, sl, ip, lsl #8
    6520:	0a100300 	beq	407128 <_bss_end+0x3f60a8>
    6524:	00000294 	muleq	r0, r4, r2
    6528:	223f0c08 	eorscs	r0, pc, #8, 24	; 0x800
    652c:	12030000 	andne	r0, r3, #0
    6530:	0002940a 	andeq	r9, r2, sl, lsl #8
    6534:	e5110900 	ldr	r0, [r1, #-2304]	; 0xfffff700
    6538:	03000026 	movweq	r0, #38	; 0x26
    653c:	296c0515 	stmdbcs	ip!, {r0, r2, r4, r8, sl}^
    6540:	1b870000 	blne	fe1c6548 <_bss_end+0xfe1b54c8>
    6544:	8d010000 	stchi	0, cr0, [r1, #-0]
    6548:	a200001a 	andge	r0, r0, #26
    654c:	0e00001a 	mcreq	0, 0, r0, cr0, cr10, {0}
    6550:	00001b87 	andeq	r1, r0, r7, lsl #23
    6554:	0000380f 	andeq	r3, r0, pc, lsl #16
    6558:	02940f00 	addseq	r0, r4, #0, 30
    655c:	940f0000 	strls	r0, [pc], #-0	; 6564 <CPSR_IRQ_INHIBIT+0x64e4>
    6560:	00000002 	andeq	r0, r0, r2
    6564:	0026e434 	eoreq	lr, r6, r4, lsr r4
    6568:	051d0300 	ldreq	r0, [sp, #-768]	; 0xfffffd00
    656c:	000022c0 	andeq	r2, r0, r0, asr #5
    6570:	00000963 	andeq	r0, r0, r3, ror #18
    6574:	001a1401 	andseq	r1, sl, r1, lsl #8
    6578:	1ac00100 	bne	ff006980 <_bss_end+0xfeff5900>
    657c:	1acb0000 	bne	ff2c6584 <_bss_end+0xff2b5504>
    6580:	870e0000 	strhi	r0, [lr, -r0]
    6584:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    6588:	00000038 	andeq	r0, r0, r8, lsr r0
    658c:	02d01e00 	sbcseq	r1, r0, #0, 28
    6590:	23030000 	movwcs	r0, #12288	; 0x3000
    6594:	002b6f16 	eoreq	r6, fp, r6, lsl pc
    6598:	00006800 	andeq	r6, r0, r0, lsl #16
    659c:	10020100 	andne	r0, r2, r0, lsl #2
    65a0:	001a1402 	andseq	r1, sl, r2, lsl #8
    65a4:	1aec0100 	bne	ffb069ac <_bss_end+0xffaf592c>
    65a8:	1afc0000 	bne	fff065b0 <_bss_end+0xffef5530>
    65ac:	870e0000 	strhi	r0, [lr, -r0]
    65b0:	0f00001b 	svceq	0x0000001b
    65b4:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    65b8:	0000680f 	andeq	r6, r0, pc, lsl #16
    65bc:	dd1e0000 	ldcle	0, cr0, [lr, #-0]
    65c0:	0300001c 	movweq	r0, #28
    65c4:	2b06162f 	blcs	18be88 <_bss_end+0x17ae08>
    65c8:	00680000 	rsbeq	r0, r8, r0
    65cc:	02010000 	andeq	r0, r1, #0
    65d0:	1a140310 	bne	507218 <_bss_end+0x4f6198>
    65d4:	1d010000 	stcne	0, cr0, [r1, #-0]
    65d8:	2d00001b 	stccs	0, cr0, [r0, #-108]	; 0xffffff94
    65dc:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    65e0:	00001b87 	andeq	r1, r0, r7, lsl #23
    65e4:	0002a10f 	andeq	sl, r2, pc, lsl #2
    65e8:	00680f00 	rsbeq	r0, r8, r0, lsl #30
    65ec:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    65f0:	000009aa 	andeq	r0, r0, sl, lsr #19
    65f4:	be123b03 	vnmlslt.f64	d3, d2, d3
    65f8:	9400002b 	strls	r0, [r0], #-43	; 0xffffffd5
    65fc:	01000002 	tsteq	r0, r2
    6600:	14041002 	strne	r1, [r4], #-2
    6604:	0100001a 	tsteq	r0, sl, lsl r0
    6608:	00001b4e 	andeq	r1, r0, lr, asr #22
    660c:	00001b54 	andeq	r1, r0, r4, asr fp
    6610:	001b870e 	andseq	r8, fp, lr, lsl #14
    6614:	141b0000 	ldrne	r0, [fp], #-0
    6618:	03000024 	movweq	r0, #36	; 0x24
    661c:	28471247 	stmdacs	r7, {r0, r1, r2, r6, r9, ip}^
    6620:	02940000 	addseq	r0, r4, #0
    6624:	02010000 	andeq	r0, r1, #0
    6628:	1a140510 	bne	507a70 <_bss_end+0x4f69f0>
    662c:	71010000 	mrsvc	r0, (UNDEF: 1)
    6630:	0e00001b 	mcreq	0, 0, r0, cr0, cr11, {0}
    6634:	00001b87 	andeq	r1, r0, r7, lsl #23
    6638:	00008a0f 	andeq	r8, r0, pc, lsl #20
    663c:	09630f00 	stmdbeq	r3!, {r8, r9, sl, fp}^
    6640:	00000000 	andeq	r0, r0, r0
    6644:	001a1403 	andseq	r1, sl, r3, lsl #8
    6648:	14041600 	strne	r1, [r4], #-1536	; 0xfffffa00
    664c:	0300001a 	movweq	r0, #26
    6650:	00001b87 	andeq	r1, r0, r7, lsl #23
    6654:	1b820423 	blne	fe0876e8 <_bss_end+0xfe076668>
    6658:	04330000 	ldrteq	r0, [r3], #-0
    665c:	000002ac 	andeq	r0, r0, ip, lsr #5
    6660:	03980423 	orrseq	r0, r8, #587202560	; 0x23000000
    6664:	38350000 	ldmdacc	r5!, {}	; <UNPREDICTABLE>
    6668:	af000000 	svcge	0x00000000
    666c:	3600001b 			; <UNDEFINED> instruction: 0x3600001b
    6670:	b5041600 	strlt	r1, [r4, #-1536]	; 0xfffffa00
    6674:	3700001b 	smladcc	r0, fp, r0, r0
    6678:	001ff104 	andseq	pc, pc, r4, lsl #2
    667c:	001ba400 	andseq	sl, fp, r0, lsl #8
    6680:	ee042300 	cdp	3, 0, cr2, cr4, cr0, {0}
    6684:	38000004 	stmdacc	r0, {r2}
    6688:	000013ae 	andeq	r1, r0, lr, lsr #7
    668c:	00001bdc 	ldrdeq	r1, [r0], -ip
    6690:	0000d1fc 	strdeq	sp, [r0], -ip
    6694:	00000084 	andeq	r0, r0, r4, lsl #1
    6698:	1c149c01 	ldcne	12, cr9, [r4], {1}
    669c:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    66a0:	36000003 	strcc	r0, [r0], -r3
    66a4:	02000014 	andeq	r0, r0, #20
    66a8:	113a6491 	teqne	sl, r1	; <illegal shifter operand>
    66ac:	0700001e 	smladeq	r0, lr, r0, r0
    66b0:	02a12a4c 	adceq	r2, r1, #76, 20	; 0x4c000
    66b4:	91020000 	mrsls	r0, (UNDEF: 2)
    66b8:	036b3a60 	cmneq	fp, #96, 20	; 0x60000
    66bc:	4c070000 	stcmi	0, cr0, [r7], {-0}
    66c0:	0000f140 	andeq	pc, r0, r0, asr #2
    66c4:	5c910200 	lfmpl	f0, 4, [r1], {0}
    66c8:	0700663b 	smladxeq	r0, fp, r6, r6
    66cc:	15911553 	ldrne	r1, [r1, #1363]	; 0x553
    66d0:	91020000 	mrsls	r0, (UNDEF: 2)
    66d4:	8b3c006c 	blhi	f0688c <_bss_end+0xef580c>
    66d8:	2b000013 	blcs	672c <CPSR_IRQ_INHIBIT+0x66ac>
    66dc:	dc00001c 	stcle	0, cr0, [r0], {28}
    66e0:	200000d1 	ldrdcs	r0, [r0], -r1
    66e4:	01000000 	mrseq	r0, (UNDEF: 0)
    66e8:	001c389c 	mulseq	ip, ip, r8
    66ec:	03293900 			; <UNDEFINED> instruction: 0x03293900
    66f0:	14360000 	ldrtne	r0, [r6], #-0
    66f4:	91020000 	mrsls	r0, (UNDEF: 2)
    66f8:	5e3c0074 	mrcpl	0, 1, r0, cr12, cr4, {3}
    66fc:	4f000015 	svcmi	0x00000015
    6700:	b000001c 	andlt	r0, r0, ip, lsl r0
    6704:	2c0000d1 	stccs	0, cr0, [r0], {209}	; 0xd1
    6708:	01000000 	mrseq	r0, (UNDEF: 0)
    670c:	001c7a9c 	mulseq	ip, ip, sl
    6710:	03293900 			; <UNDEFINED> instruction: 0x03293900
    6714:	15970000 	ldrne	r0, [r7]
    6718:	91020000 	mrsls	r0, (UNDEF: 2)
    671c:	69643d74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, sl, fp, ip, sp}^
    6720:	3e070072 	mcrcc	0, 0, r0, cr7, cr2, {3}
    6724:	00008a29 	andeq	r8, r0, r9, lsr #20
    6728:	70910200 	addsvc	r0, r1, r0, lsl #4
    672c:	00253b3a 	eoreq	r3, r5, sl, lsr fp
    6730:	343e0700 	ldrtcc	r0, [lr], #-1792	; 0xfffff900
    6734:	00000963 	andeq	r0, r0, r3, ror #18
    6738:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    673c:	00153738 	andseq	r3, r5, r8, lsr r7
    6740:	001c9100 	andseq	r9, ip, r0, lsl #2
    6744:	00d15800 	sbcseq	r5, r1, r0, lsl #16
    6748:	00005800 	andeq	r5, r0, r0, lsl #16
    674c:	9e9c0100 	fmllse	f0, f4, f0
    6750:	3900001c 	stmdbcc	r0, {r2, r3, r4}
    6754:	00000329 	andeq	r0, r0, r9, lsr #6
    6758:	00001597 	muleq	r0, r7, r5
    675c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6760:	0015063c 	andseq	r0, r5, ip, lsr r6
    6764:	001cb500 	andseq	fp, ip, r0, lsl #10
    6768:	00d12c00 	sbcseq	r2, r1, r0, lsl #24
    676c:	00002c00 	andeq	r2, r0, r0, lsl #24
    6770:	e09c0100 	adds	r0, ip, r0, lsl #2
    6774:	3900001c 	stmdbcc	r0, {r2, r3, r4}
    6778:	00000329 	andeq	r0, r0, r9, lsr #6
    677c:	00001597 	muleq	r0, r7, r5
    6780:	3a749102 	bcc	1d2ab90 <_bss_end+0x1d19b10>
    6784:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    6788:	a1282c07 			; <UNDEFINED> instruction: 0xa1282c07
    678c:	02000002 	andeq	r0, r0, #2
    6790:	6e3d7091 	mrcvs	0, 1, r7, cr13, cr1, {4}
    6794:	07006d75 	smlsdxeq	r0, r5, sp, r6
    6798:	0068392c 	rsbeq	r3, r8, ip, lsr #18
    679c:	91020000 	mrsls	r0, (UNDEF: 2)
    67a0:	d538006c 	ldrle	r0, [r8, #-108]!	; 0xffffff94
    67a4:	f7000014 			; <UNDEFINED> instruction: 0xf7000014
    67a8:	4400001c 	strmi	r0, [r0], #-28	; 0xffffffe4
    67ac:	e80000d0 	stmda	r0, {r4, r6, r7}
    67b0:	01000000 	mrseq	r0, (UNDEF: 0)
    67b4:	001d729c 	mulseq	sp, ip, r2
    67b8:	03293900 			; <UNDEFINED> instruction: 0x03293900
    67bc:	15970000 	ldrne	r0, [r7]
    67c0:	91020000 	mrsls	r0, (UNDEF: 2)
    67c4:	0cb73a5c 	vldmiaeq	r7!, {s6-s97}
    67c8:	1a070000 	bne	1c67d0 <_bss_end+0x1b5750>
    67cc:	000cbd21 	andeq	fp, ip, r1, lsr #26
    67d0:	58910200 	ldmpl	r1, {r9}
    67d4:	6d756e3d 	ldclvs	14, cr6, [r5, #-244]!	; 0xffffff0c
    67d8:	321a0700 	andscc	r0, sl, #0, 14
    67dc:	00000068 	andeq	r0, r0, r8, rrx
    67e0:	3e549102 	logccs	f1, f2
    67e4:	00002a80 	andeq	r2, r0, r0, lsl #21
    67e8:	74181c07 	ldrvc	r1, [r8], #-3079	; 0xfffff3f9
    67ec:	02000000 	andeq	r0, r0, #0
    67f0:	c43e6491 	ldrtgt	r6, [lr], #-1169	; 0xfffffb6f
    67f4:	07000029 	streq	r0, [r0, -r9, lsr #32]
    67f8:	1d72131d 	ldclne	3, cr1, [r2, #-116]!	; 0xffffff8c
    67fc:	91020000 	mrsls	r0, (UNDEF: 2)
    6800:	d0703f60 	rsbsle	r3, r0, r0, ror #30
    6804:	00480000 	subeq	r0, r8, r0
    6808:	1d5a0000 	ldclne	0, cr0, [sl, #-0]
    680c:	693b0000 	ldmdbvs	fp!, {}	; <UNPREDICTABLE>
    6810:	121e0700 	andsne	r0, lr, #0, 14
    6814:	00000038 	andeq	r0, r0, r8, lsr r0
    6818:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    681c:	00d0cc40 	sbcseq	ip, r0, r0, asr #24
    6820:	00004c00 	andeq	r4, r0, r0, lsl #24
    6824:	00693b00 	rsbeq	r3, r9, r0, lsl #22
    6828:	38162507 	ldmdacc	r6, {r0, r1, r2, r8, sl, sp}
    682c:	02000000 	andeq	r0, r0, #0
    6830:	00006891 	muleq	r0, r1, r8
    6834:	00680416 	rsbeq	r0, r8, r6, lsl r4
    6838:	ac410000 	marge	acc0, r0, r1
    683c:	63000014 	movwvs	r0, #20
    6840:	8a000009 	bhi	686c <CPSR_IRQ_INHIBIT+0x67ec>
    6844:	0200001d 	andeq	r0, r0, #29
    6848:	00001d9d 	muleq	r0, sp, sp
    684c:	00032942 	andeq	r2, r3, r2, asr #18
    6850:	00159700 	andseq	r9, r5, r0, lsl #14
    6854:	2bf54200 	blcs	ffd5705c <_bss_end+0xffd45fdc>
    6858:	003f0000 	eorseq	r0, pc, r0
    685c:	43000000 	movwmi	r0, #0
    6860:	00001d78 	andeq	r1, r0, r8, ror sp
    6864:	000026d0 	ldrdeq	r2, [r0], -r0
    6868:	00001db8 			; <UNDEFINED> instruction: 0x00001db8
    686c:	0000d010 	andeq	sp, r0, r0, lsl r0
    6870:	00000034 	andeq	r0, r0, r4, lsr r0
    6874:	1dc19c01 	stclne	12, cr9, [r1, #4]
    6878:	8a440000 	bhi	1106880 <_bss_end+0x10f5800>
    687c:	0200001d 	andeq	r0, r0, #29
    6880:	43007491 	movwmi	r7, #1169	; 0x491
    6884:	00001d78 	andeq	r1, r0, r8, ror sp
    6888:	0000236c 	andeq	r2, r0, ip, ror #6
    688c:	00001ddc 	ldrdeq	r1, [r0], -ip
    6890:	0000cfcc 	andeq	ip, r0, ip, asr #31
    6894:	00000044 	andeq	r0, r0, r4, asr #32
    6898:	1de59c01 	stclne	12, cr9, [r5, #4]!
    689c:	8a440000 	bhi	11068a4 <_bss_end+0x10f5824>
    68a0:	0200001d 	andeq	r0, r0, #29
    68a4:	45007491 	strmi	r7, [r0, #-1169]	; 0xfffffb6f
    68a8:	0000148d 	andeq	r1, r0, sp, lsl #9
    68ac:	00001df3 	strdeq	r1, [r0], -r3
    68b0:	001dfd02 	andseq	pc, sp, r2, lsl #26
    68b4:	03294200 			; <UNDEFINED> instruction: 0x03294200
    68b8:	15970000 	ldrne	r0, [r7]
    68bc:	43000000 	movwmi	r0, #0
    68c0:	00001de5 	andeq	r1, r0, r5, ror #27
    68c4:	000029f0 	strdeq	r2, [r0], -r0
    68c8:	00001e18 	andeq	r1, r0, r8, lsl lr
    68cc:	0000cf90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    68d0:	0000003c 	andeq	r0, r0, ip, lsr r0
    68d4:	1e219c01 	cdpne	12, 2, cr9, cr1, cr1, {0}
    68d8:	f3440000 	vhadd.u8	d16, d4, d0
    68dc:	0200001d 	andeq	r0, r0, #29
    68e0:	38007491 	stmdacc	r0, {r0, r4, r7, sl, ip, sp, lr}
    68e4:	000011cd 	andeq	r1, r0, sp, asr #3
    68e8:	00001e38 	andeq	r1, r0, r8, lsr lr
    68ec:	0000cf24 	andeq	ip, r0, r4, lsr #30
    68f0:	0000006c 	andeq	r0, r0, ip, rrx
    68f4:	1e709c01 	cdpne	12, 7, cr9, cr0, cr1, {0}
    68f8:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    68fc:	a8000003 	stmdage	r0, {r0, r1}
    6900:	02000015 	andeq	r0, r0, #21
    6904:	113a6491 	teqne	sl, r1	; <illegal shifter operand>
    6908:	0600001e 			; <UNDEFINED> instruction: 0x0600001e
    690c:	02a12a45 	adceq	r2, r1, #282624	; 0x45000
    6910:	91020000 	mrsls	r0, (UNDEF: 2)
    6914:	036b3a60 	cmneq	fp, #96, 20	; 0x60000
    6918:	45060000 	strmi	r0, [r6, #-0]
    691c:	0000f140 	andeq	pc, r0, r0, asr #2
    6920:	5c910200 	lfmpl	f0, 4, [r1], {0}
    6924:	0600663b 			; <UNDEFINED> instruction: 0x0600663b
    6928:	17031f4c 	strne	r1, [r3, -ip, asr #30]
    692c:	91020000 	mrsls	r0, (UNDEF: 2)
    6930:	aa3c006c 	bge	f06ae8 <_bss_end+0xef5a68>
    6934:	87000011 	smladhi	r0, r1, r0, r0
    6938:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    693c:	200000cf 	andcs	r0, r0, pc, asr #1
    6940:	01000000 	mrseq	r0, (UNDEF: 0)
    6944:	001e949c 	mulseq	lr, ip, r4
    6948:	03293900 			; <UNDEFINED> instruction: 0x03293900
    694c:	15a80000 	strne	r0, [r8, #0]!
    6950:	91020000 	mrsls	r0, (UNDEF: 2)
    6954:	d03c0074 	eorsle	r0, ip, r4, ror r0
    6958:	ab000016 	blge	69b8 <CPSR_IRQ_INHIBIT+0x6938>
    695c:	d800001e 	stmdale	r0, {r1, r2, r3, r4}
    6960:	2c0000ce 	stccs	0, cr0, [r0], {206}	; 0xce
    6964:	01000000 	mrseq	r0, (UNDEF: 0)
    6968:	001ed69c 	mulseq	lr, ip, r6
    696c:	03293900 			; <UNDEFINED> instruction: 0x03293900
    6970:	17090000 	strne	r0, [r9, -r0]
    6974:	91020000 	mrsls	r0, (UNDEF: 2)
    6978:	69643d74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, sl, fp, ip, sp}^
    697c:	37060072 	smlsdxcc	r6, r2, r0, r0
    6980:	00008a29 	andeq	r8, r0, r9, lsr #20
    6984:	70910200 	addsvc	r0, r1, r0, lsl #4
    6988:	00253b3a 	eoreq	r3, r5, sl, lsr fp
    698c:	34370600 	ldrtcc	r0, [r7], #-1536	; 0xfffffa00
    6990:	00000963 	andeq	r0, r0, r3, ror #18
    6994:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    6998:	0016a938 	andseq	sl, r6, r8, lsr r9
    699c:	001eed00 	andseq	lr, lr, r0, lsl #26
    69a0:	00ce8000 	sbceq	r8, lr, r0
    69a4:	00005800 	andeq	r5, r0, r0, lsl #16
    69a8:	fa9c0100 	blx	fe706db0 <_bss_end+0xfe6f5d30>
    69ac:	3900001e 	stmdbcc	r0, {r1, r2, r3, r4}
    69b0:	00000329 	andeq	r0, r0, r9, lsr #6
    69b4:	00001709 	andeq	r1, r0, r9, lsl #14
    69b8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    69bc:	00167838 	andseq	r7, r6, r8, lsr r8
    69c0:	001f1100 	andseq	r1, pc, r0, lsl #2
    69c4:	00ce1000 	sbceq	r1, lr, r0
    69c8:	00007000 	andeq	r7, r0, r0
    69cc:	539c0100 	orrspl	r0, ip, #0, 2
    69d0:	3900001f 	stmdbcc	r0, {r0, r1, r2, r3, r4}
    69d4:	00000329 	andeq	r0, r0, r9, lsr #6
    69d8:	00001709 	andeq	r1, r0, r9, lsl #14
    69dc:	3a6c9102 	bcc	1b2adec <_bss_end+0x1b19d6c>
    69e0:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    69e4:	a1282206 			; <UNDEFINED> instruction: 0xa1282206
    69e8:	02000002 	andeq	r0, r0, #2
    69ec:	6e3d6891 	mrcvs	8, 1, r6, cr13, cr1, {4}
    69f0:	06006d75 			; <UNDEFINED> instruction: 0x06006d75
    69f4:	00683922 	rsbeq	r3, r8, r2, lsr #18
    69f8:	91020000 	mrsls	r0, (UNDEF: 2)
    69fc:	ce284064 	cdpgt	0, 2, cr4, cr8, cr4, {3}
    6a00:	00440000 	subeq	r0, r4, r0
    6a04:	693b0000 	ldmdbvs	fp!, {}	; <UNPREDICTABLE>
    6a08:	17260600 	strne	r0, [r6, -r0, lsl #12]!
    6a0c:	00000068 	andeq	r0, r0, r8, rrx
    6a10:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6a14:	16473c00 	strbne	r3, [r7], -r0, lsl #24
    6a18:	1f6a0000 	svcne	0x006a0000
    6a1c:	cde40000 	stclgt	0, cr0, [r4]
    6a20:	002c0000 	eoreq	r0, ip, r0
    6a24:	9c010000 	stcls	0, cr0, [r1], {-0}
    6a28:	00001f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    6a2c:	00032939 	andeq	r2, r3, r9, lsr r9
    6a30:	00170900 	andseq	r0, r7, r0, lsl #18
    6a34:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6a38:	000cb73a 	andeq	fp, ip, sl, lsr r7
    6a3c:	211b0600 	tstcs	fp, r0, lsl #12
    6a40:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    6a44:	3d709102 	ldfccp	f1, [r0, #-8]!
    6a48:	006d756e 	rsbeq	r7, sp, lr, ror #10
    6a4c:	68321b06 	ldmdavs	r2!, {r1, r2, r8, r9, fp, ip}
    6a50:	02000000 	andeq	r0, r0, #0
    6a54:	41006c91 			; <UNDEFINED> instruction: 0x41006c91
    6a58:	0000161e 	andeq	r1, r0, lr, lsl r6
    6a5c:	00000963 	andeq	r0, r0, r3, ror #18
    6a60:	00001fa7 	andeq	r1, r0, r7, lsr #31
    6a64:	001fba02 	andseq	fp, pc, r2, lsl #20
    6a68:	03294200 			; <UNDEFINED> instruction: 0x03294200
    6a6c:	17090000 	strne	r0, [r9, -r0]
    6a70:	f5420000 			; <UNDEFINED> instruction: 0xf5420000
    6a74:	3f00002b 	svccc	0x0000002b
    6a78:	00000000 	andeq	r0, r0, r0
    6a7c:	001f9543 	andseq	r9, pc, r3, asr #10
    6a80:	002c1d00 	eoreq	r1, ip, r0, lsl #26
    6a84:	001fd500 	andseq	sp, pc, r0, lsl #10
    6a88:	00cdb000 	sbceq	fp, sp, r0
    6a8c:	00003400 	andeq	r3, r0, r0, lsl #8
    6a90:	de9c0100 	fmllee	f0, f4, f0
    6a94:	4400001f 	strmi	r0, [r0], #-31	; 0xffffffe1
    6a98:	00001fa7 	andeq	r1, r0, r7, lsr #31
    6a9c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6aa0:	001f9543 	andseq	r9, pc, r3, asr #10
    6aa4:	00294e00 	eoreq	r4, r9, r0, lsl #28
    6aa8:	001ff900 	andseq	pc, pc, r0, lsl #18
    6aac:	00cd6c00 	sbceq	r6, sp, r0, lsl #24
    6ab0:	00004400 	andeq	r4, r0, r0, lsl #8
    6ab4:	029c0100 	addseq	r0, ip, #0, 2
    6ab8:	44000020 	strmi	r0, [r0], #-32	; 0xffffffe0
    6abc:	00001fa7 	andeq	r1, r0, r7, lsr #31
    6ac0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6ac4:	0015ff45 	andseq	pc, r5, r5, asr #30
    6ac8:	00201000 	eoreq	r1, r0, r0
    6acc:	201a0200 	andscs	r0, sl, r0, lsl #4
    6ad0:	29420000 	stmdbcs	r2, {}^	; <UNPREDICTABLE>
    6ad4:	09000003 	stmdbeq	r0, {r0, r1}
    6ad8:	00000017 	andeq	r0, r0, r7, lsl r0
    6adc:	00200243 	eoreq	r0, r0, r3, asr #4
    6ae0:	00200100 	eoreq	r0, r0, r0, lsl #2
    6ae4:	00203500 	eoreq	r3, r0, r0, lsl #10
    6ae8:	00cd2400 	sbceq	r2, sp, r0, lsl #8
    6aec:	00004800 	andeq	r4, r0, r0, lsl #16
    6af0:	3e9c0100 	fmlcce	f0, f4, f0
    6af4:	44000020 	strmi	r0, [r0], #-32	; 0xffffffe0
    6af8:	00002010 	andeq	r2, r0, r0, lsl r0
    6afc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6b00:	0010ce38 	andseq	ip, r0, r8, lsr lr
    6b04:	00205500 	eoreq	r5, r0, r0, lsl #10
    6b08:	00ccb800 	sbceq	fp, ip, r0, lsl #16
    6b0c:	00006c00 	andeq	r6, r0, r0, lsl #24
    6b10:	8d9c0100 	ldfhis	f0, [ip]
    6b14:	39000020 	stmdbcc	r0, {r5}
    6b18:	00000329 	andeq	r0, r0, r9, lsr #6
    6b1c:	0000171a 	andeq	r1, r0, sl, lsl r7
    6b20:	3a649102 	bcc	192af30 <_bss_end+0x1919eb0>
    6b24:	00001e11 	andeq	r1, r0, r1, lsl lr
    6b28:	a12a4905 			; <UNDEFINED> instruction: 0xa12a4905
    6b2c:	02000002 	andeq	r0, r0, #2
    6b30:	6b3a6091 	blvs	e9ed7c <_bss_end+0xe8dcfc>
    6b34:	05000003 	streq	r0, [r0, #-3]
    6b38:	00f14049 	rscseq	r4, r1, r9, asr #32
    6b3c:	91020000 	mrsls	r0, (UNDEF: 2)
    6b40:	00663b5c 	rsbeq	r3, r6, ip, asr fp
    6b44:	75205005 	strvc	r5, [r0, #-5]!
    6b48:	02000018 	andeq	r0, r0, #24
    6b4c:	3c006c91 	stccc	12, cr6, [r0], {145}	; 0x91
    6b50:	000010ab 	andeq	r1, r0, fp, lsr #1
    6b54:	000020a4 	andeq	r2, r0, r4, lsr #1
    6b58:	0000cc98 	muleq	r0, r8, ip
    6b5c:	00000020 	andeq	r0, r0, r0, lsr #32
    6b60:	20b19c01 	adcscs	r9, r1, r1, lsl #24
    6b64:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    6b68:	1a000003 	bne	6b7c <CPSR_IRQ_INHIBIT+0x6afc>
    6b6c:	02000017 	andeq	r0, r0, #23
    6b70:	3c007491 	cfstrscc	mvf7, [r0], {145}	; 0x91
    6b74:	00001842 	andeq	r1, r0, r2, asr #16
    6b78:	000020c8 	andeq	r2, r0, r8, asr #1
    6b7c:	0000cc6c 	andeq	ip, r0, ip, ror #24
    6b80:	0000002c 	andeq	r0, r0, ip, lsr #32
    6b84:	20f39c01 	rscscs	r9, r3, r1, lsl #24
    6b88:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    6b8c:	7b000003 	blvc	6ba0 <CPSR_IRQ_INHIBIT+0x6b20>
    6b90:	02000018 	andeq	r0, r0, #24
    6b94:	643d7491 	ldrtvs	r7, [sp], #-1169	; 0xfffffb6f
    6b98:	05007269 	streq	r7, [r0, #-617]	; 0xfffffd97
    6b9c:	008a293b 	addeq	r2, sl, fp, lsr r9
    6ba0:	91020000 	mrsls	r0, (UNDEF: 2)
    6ba4:	253b3a70 	ldrcs	r3, [fp, #-2672]!	; 0xfffff590
    6ba8:	3b050000 	blcc	146bb0 <_bss_end+0x135b30>
    6bac:	00096334 	andeq	r6, r9, r4, lsr r3
    6bb0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6bb4:	181b3800 	ldmdane	fp, {fp, ip, sp}
    6bb8:	210a0000 	mrscs	r0, (UNDEF: 10)
    6bbc:	cc140000 	ldcgt	0, cr0, [r4], {-0}
    6bc0:	00580000 	subseq	r0, r8, r0
    6bc4:	9c010000 	stcls	0, cr0, [r1], {-0}
    6bc8:	00002117 	andeq	r2, r0, r7, lsl r1
    6bcc:	00032939 	andeq	r2, r3, r9, lsr r9
    6bd0:	00187b00 	andseq	r7, r8, r0, lsl #22
    6bd4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6bd8:	17ea3800 	strbne	r3, [sl, r0, lsl #16]!
    6bdc:	212e0000 			; <UNDEFINED> instruction: 0x212e0000
    6be0:	cba40000 	blgt	fe906be8 <_bss_end+0xfe8f5b68>
    6be4:	00700000 	rsbseq	r0, r0, r0
    6be8:	9c010000 	stcls	0, cr0, [r1], {-0}
    6bec:	00002170 	andeq	r2, r0, r0, ror r1
    6bf0:	00032939 	andeq	r2, r3, r9, lsr r9
    6bf4:	00187b00 	andseq	r7, r8, r0, lsl #22
    6bf8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6bfc:	000cb73a 	andeq	fp, ip, sl, lsr r7
    6c00:	28270500 	stmdacs	r7!, {r8, sl}
    6c04:	000002a1 	andeq	r0, r0, r1, lsr #5
    6c08:	3d689102 	stfccp	f1, [r8, #-8]!
    6c0c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    6c10:	68392705 	ldmdavs	r9!, {r0, r2, r8, r9, sl, sp}
    6c14:	02000000 	andeq	r0, r0, #0
    6c18:	bc406491 	cfstrdlt	mvd6, [r0], {145}	; 0x91
    6c1c:	440000cb 	strmi	r0, [r0], #-203	; 0xffffff35
    6c20:	3b000000 	blcc	6c28 <CPSR_IRQ_INHIBIT+0x6ba8>
    6c24:	2a050069 	bcs	146dd0 <_bss_end+0x135d50>
    6c28:	00006817 	andeq	r6, r0, r7, lsl r8
    6c2c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6c30:	b9380000 	ldmdblt	r8!, {}	; <UNPREDICTABLE>
    6c34:	87000017 	smladhi	r0, r7, r0, r0
    6c38:	4c000021 	stcmi	0, cr0, [r0], {33}	; 0x21
    6c3c:	580000cb 	stmdapl	r0, {r0, r1, r3, r6, r7}
    6c40:	01000000 	mrseq	r0, (UNDEF: 0)
    6c44:	0021b29c 	mlaeq	r1, ip, r2, fp
    6c48:	03293900 			; <UNDEFINED> instruction: 0x03293900
    6c4c:	187b0000 	ldmdane	fp!, {}^	; <UNPREDICTABLE>
    6c50:	91020000 	mrsls	r0, (UNDEF: 2)
    6c54:	0cb73a74 	vldmiaeq	r7!, {s6-s121}
    6c58:	1b050000 	blne	146c60 <_bss_end+0x135be0>
    6c5c:	000cbd21 	andeq	fp, ip, r1, lsr #26
    6c60:	70910200 	addsvc	r0, r1, r0, lsl #4
    6c64:	6d756e3d 	ldclvs	14, cr6, [r5, #-244]!	; 0xffffff0c
    6c68:	321b0500 	andscc	r0, fp, #0, 10
    6c6c:	00000068 	andeq	r0, r0, r8, rrx
    6c70:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    6c74:	00179041 	andseq	r9, r7, r1, asr #32
    6c78:	00096300 	andeq	r6, r9, r0, lsl #6
    6c7c:	0021c400 	eoreq	ip, r1, r0, lsl #8
    6c80:	21d70200 	bicscs	r0, r7, r0, lsl #4
    6c84:	29420000 	stmdbcs	r2, {}^	; <UNPREDICTABLE>
    6c88:	7b000003 	blvc	6c9c <CPSR_IRQ_INHIBIT+0x6c1c>
    6c8c:	42000018 	andmi	r0, r0, #24
    6c90:	00002bf5 	strdeq	r2, [r0], -r5
    6c94:	0000003f 	andeq	r0, r0, pc, lsr r0
    6c98:	21b24300 			; <UNDEFINED> instruction: 0x21b24300
    6c9c:	201f0000 	andscs	r0, pc, r0
    6ca0:	21f20000 	mvnscs	r0, r0
    6ca4:	cb180000 	blgt	606cac <_bss_end+0x5f5c2c>
    6ca8:	00340000 	eorseq	r0, r4, r0
    6cac:	9c010000 	stcls	0, cr0, [r1], {-0}
    6cb0:	000021fb 	strdeq	r2, [r0], -fp
    6cb4:	0021c444 	eoreq	ip, r1, r4, asr #8
    6cb8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6cbc:	21b24300 			; <UNDEFINED> instruction: 0x21b24300
    6cc0:	2bd60000 	blcs	ff586cc8 <_bss_end+0xff575c48>
    6cc4:	22160000 	andscs	r0, r6, #0
    6cc8:	cad40000 	bgt	ff506cd0 <_bss_end+0xff4f5c50>
    6ccc:	00440000 	subeq	r0, r4, r0
    6cd0:	9c010000 	stcls	0, cr0, [r1], {-0}
    6cd4:	0000221f 	andeq	r2, r0, pc, lsl r2
    6cd8:	0021c444 	eoreq	ip, r1, r4, asr #8
    6cdc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6ce0:	17714500 	ldrbne	r4, [r1, -r0, lsl #10]!
    6ce4:	222d0000 	eorcs	r0, sp, #0
    6ce8:	37020000 	strcc	r0, [r2, -r0]
    6cec:	42000022 	andmi	r0, r0, #34	; 0x22
    6cf0:	00000329 	andeq	r0, r0, r9, lsr #6
    6cf4:	0000187b 	andeq	r1, r0, fp, ror r8
    6cf8:	221f4300 	andscs	r4, pc, #0, 6
    6cfc:	23800000 	orrcs	r0, r0, #0
    6d00:	22520000 	subscs	r0, r2, #0
    6d04:	ca8c0000 	bgt	fe306d0c <_bss_end+0xfe2f5c8c>
    6d08:	00480000 	subeq	r0, r8, r0
    6d0c:	9c010000 	stcls	0, cr0, [r1], {-0}
    6d10:	0000225b 	andeq	r2, r0, fp, asr r2
    6d14:	00222d44 	eoreq	r2, r2, r4, asr #26
    6d18:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6d1c:	0d943800 	ldceq	8, cr3, [r4]
    6d20:	22720000 	rsbscs	r0, r2, #0
    6d24:	ca240000 	bgt	906d2c <_bss_end+0x8f5cac>
    6d28:	00680000 	rsbeq	r0, r8, r0
    6d2c:	9c010000 	stcls	0, cr0, [r1], {-0}
    6d30:	000022b9 			; <UNDEFINED> instruction: 0x000022b9
    6d34:	00032939 	andeq	r2, r3, r9, lsr r9
    6d38:	00188c00 	andseq	r8, r8, r0, lsl #24
    6d3c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    6d40:	001e113a 	andseq	r1, lr, sl, lsr r1
    6d44:	2a4c0400 	bcs	1307d4c <_bss_end+0x12f6ccc>
    6d48:	000002a1 	andeq	r0, r0, r1, lsr #5
    6d4c:	3a609102 	bcc	182b15c <_bss_end+0x181a0dc>
    6d50:	0000036b 	andeq	r0, r0, fp, ror #6
    6d54:	f1404c04 			; <UNDEFINED> instruction: 0xf1404c04
    6d58:	02000000 	andeq	r0, r0, #0
    6d5c:	013e5c91 	teqeq	lr, r1	; <illegal shifter operand>
    6d60:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    6d64:	00380d4e 	eorseq	r0, r8, lr, asr #26
    6d68:	91020000 	mrsls	r0, (UNDEF: 2)
    6d6c:	00663b6c 	rsbeq	r3, r6, ip, ror #22
    6d70:	ec185204 	lfm	f5, 4, [r8], {4}
    6d74:	02000019 	andeq	r0, r0, #25
    6d78:	3c006891 	stccc	8, cr6, [r0], {145}	; 0x91
    6d7c:	00000d71 	andeq	r0, r0, r1, ror sp
    6d80:	000022d0 	ldrdeq	r2, [r0], -r0
    6d84:	0000ca04 	andeq	ip, r0, r4, lsl #20
    6d88:	00000020 	andeq	r0, r0, r0, lsr #32
    6d8c:	22dd9c01 	sbcscs	r9, sp, #256	; 0x100
    6d90:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    6d94:	8c000003 	stchi	0, cr0, [r0], {3}
    6d98:	02000018 	andeq	r0, r0, #24
    6d9c:	3c007491 	cfstrscc	mvf7, [r0], {145}	; 0x91
    6da0:	000019b9 			; <UNDEFINED> instruction: 0x000019b9
    6da4:	000022f4 	strdeq	r2, [r0], -r4
    6da8:	0000c9c0 	andeq	ip, r0, r0, asr #19
    6dac:	00000044 	andeq	r0, r0, r4, asr #32
    6db0:	231f9c01 	tstcs	pc, #256	; 0x100
    6db4:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    6db8:	f2000003 	vhadd.s8	d0, d0, d3
    6dbc:	02000019 	andeq	r0, r0, #25
    6dc0:	643d7491 	ldrtvs	r7, [sp], #-1169	; 0xfffffb6f
    6dc4:	04007269 	streq	r7, [r0], #-617	; 0xfffffd97
    6dc8:	008a293a 	addeq	r2, sl, sl, lsr r9
    6dcc:	91020000 	mrsls	r0, (UNDEF: 2)
    6dd0:	253b3a70 	ldrcs	r3, [fp, #-2672]!	; 0xfffff590
    6dd4:	3a040000 	bcc	106ddc <_bss_end+0xf5d5c>
    6dd8:	00096334 	andeq	r6, r9, r4, lsr r3
    6ddc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6de0:	19923c00 	ldmibne	r2, {sl, fp, ip, sp}
    6de4:	23360000 	teqcs	r6, #0
    6de8:	c9780000 	ldmdbgt	r8!, {}^	; <UNPREDICTABLE>
    6dec:	00480000 	subeq	r0, r8, r0
    6df0:	9c010000 	stcls	0, cr0, [r1], {-0}
    6df4:	00002343 	andeq	r2, r0, r3, asr #6
    6df8:	00032939 	andeq	r2, r3, r9, lsr r9
    6dfc:	0019f200 	andseq	pc, r9, r0, lsl #4
    6e00:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6e04:	19613800 	stmdbne	r1!, {fp, ip, sp}^
    6e08:	235a0000 	cmpcs	sl, #0
    6e0c:	c9100000 	ldmdbgt	r0, {}	; <UNPREDICTABLE>
    6e10:	00680000 	rsbeq	r0, r8, r0
    6e14:	9c010000 	stcls	0, cr0, [r1], {-0}
    6e18:	00002385 	andeq	r2, r0, r5, lsl #7
    6e1c:	00032939 	andeq	r2, r3, r9, lsr r9
    6e20:	0019f200 	andseq	pc, r9, r0, lsl #4
    6e24:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6e28:	000cb73a 	andeq	fp, ip, sl, lsr r7
    6e2c:	281e0400 	ldmdacs	lr, {sl}
    6e30:	000002a1 	andeq	r0, r0, r1, lsr #5
    6e34:	3d709102 	ldfccp	f1, [r0, #-8]!
    6e38:	006d756e 	rsbeq	r7, sp, lr, ror #10
    6e3c:	68391e04 	ldmdavs	r9!, {r2, r9, sl, fp, ip}
    6e40:	02000000 	andeq	r0, r0, #0
    6e44:	3c006c91 	stccc	12, cr6, [r0], {145}	; 0x91
    6e48:	00001930 	andeq	r1, r0, r0, lsr r9
    6e4c:	0000239c 	muleq	r0, ip, r3
    6e50:	0000c8e4 	andeq	ip, r0, r4, ror #17
    6e54:	0000002c 	andeq	r0, r0, ip, lsr #32
    6e58:	23c79c01 	biccs	r9, r7, #256	; 0x100
    6e5c:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    6e60:	f2000003 	vhadd.s8	d0, d0, d3
    6e64:	02000019 	andeq	r0, r0, #25
    6e68:	b73a7491 			; <UNDEFINED> instruction: 0xb73a7491
    6e6c:	0400000c 	streq	r0, [r0], #-12
    6e70:	0cbd2119 	ldfeqs	f2, [sp], #100	; 0x64
    6e74:	91020000 	mrsls	r0, (UNDEF: 2)
    6e78:	756e3d70 	strbvc	r3, [lr, #-3440]!	; 0xfffff290
    6e7c:	1904006d 	stmdbne	r4, {r0, r2, r3, r5, r6}
    6e80:	00006832 	andeq	r6, r0, r2, lsr r8
    6e84:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6e88:	19074100 	stmdbne	r7, {r8, lr}
    6e8c:	09630000 	stmdbeq	r3!, {}^	; <UNPREDICTABLE>
    6e90:	23d90000 	bicscs	r0, r9, #0
    6e94:	ec020000 	stc	0, cr0, [r2], {-0}
    6e98:	42000023 	andmi	r0, r0, #35	; 0x23
    6e9c:	00000329 	andeq	r0, r0, r9, lsr #6
    6ea0:	000019f2 	strdeq	r1, [r0], -r2
    6ea4:	002bf542 	eoreq	pc, fp, r2, asr #10
    6ea8:	00003f00 	andeq	r3, r0, r0, lsl #30
    6eac:	c7430000 	strbgt	r0, [r3, -r0]
    6eb0:	af000023 	svcge	0x00000023
    6eb4:	07000020 	streq	r0, [r0, -r0, lsr #32]
    6eb8:	b0000024 	andlt	r0, r0, r4, lsr #32
    6ebc:	340000c8 	strcc	r0, [r0], #-200	; 0xffffff38
    6ec0:	01000000 	mrseq	r0, (UNDEF: 0)
    6ec4:	0024109c 	mlaeq	r4, ip, r0, r1
    6ec8:	23d94400 	bicscs	r4, r9, #0, 8
    6ecc:	91020000 	mrsls	r0, (UNDEF: 2)
    6ed0:	c7430074 	smlsldxgt	r0, r3, r4, r0
    6ed4:	85000023 	strhi	r0, [r0, #-35]	; 0xffffffdd
    6ed8:	2b00001e 	blcs	6f58 <CPSR_IRQ_INHIBIT+0x6ed8>
    6edc:	6c000024 	stcvs	0, cr0, [r0], {36}	; 0x24
    6ee0:	440000c8 	strmi	r0, [r0], #-200	; 0xffffff38
    6ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    6ee8:	0024349c 	mlaeq	r4, ip, r4, r3
    6eec:	23d94400 	bicscs	r4, r9, #0, 8
    6ef0:	91020000 	mrsls	r0, (UNDEF: 2)
    6ef4:	e3450074 	movt	r0, #20596	; 0x5074
    6ef8:	42000018 	andmi	r0, r0, #24
    6efc:	02000024 	andeq	r0, r0, #36	; 0x24
    6f00:	00002458 	andeq	r2, r0, r8, asr r4
    6f04:	00032942 	andeq	r2, r3, r2, asr #18
    6f08:	0019f200 	andseq	pc, r9, r0, lsl #4
    6f0c:	28014600 	stmdacs	r1, {r9, sl, lr}
    6f10:	0f040000 	svceq	0x00040000
    6f14:	00003817 	andeq	r3, r0, r7, lsl r8
    6f18:	34430000 	strbcc	r0, [r3], #-0
    6f1c:	1a000024 	bne	6fb4 <CPSR_IRQ_INHIBIT+0x6f34>
    6f20:	73000024 	movwvc	r0, #36	; 0x24
    6f24:	20000024 	andcs	r0, r0, r4, lsr #32
    6f28:	4c0000c8 	stcmi	0, cr0, [r0], {200}	; 0xc8
    6f2c:	01000000 	mrseq	r0, (UNDEF: 0)
    6f30:	0024849c 	mlaeq	r4, ip, r4, r8
    6f34:	24424400 	strbcs	r4, [r2], #-1024	; 0xfffffc00
    6f38:	91020000 	mrsls	r0, (UNDEF: 2)
    6f3c:	244b4474 	strbcs	r4, [fp], #-1140	; 0xfffffb8c
    6f40:	91020000 	mrsls	r0, (UNDEF: 2)
    6f44:	2b380070 	blcs	e0710c <_bss_end+0xdf608c>
    6f48:	9b00000a 	blls	6f78 <CPSR_IRQ_INHIBIT+0x6ef8>
    6f4c:	c8000024 	stmdagt	r0, {r2, r5}
    6f50:	580000c6 	stmdapl	r0, {r1, r2, r6, r7}
    6f54:	01000001 	tsteq	r0, r1
    6f58:	0024e29c 	mlaeq	r4, ip, r2, lr
    6f5c:	03293900 			; <UNDEFINED> instruction: 0x03293900
    6f60:	1a030000 	bne	c6f68 <_bss_end+0xb5ee8>
    6f64:	91020000 	mrsls	r0, (UNDEF: 2)
    6f68:	1e113a64 	vnmlane.f32	s6, s2, s9
    6f6c:	57030000 	strpl	r0, [r3, -r0]
    6f70:	0002a12a 	andeq	sl, r2, sl, lsr #2
    6f74:	60910200 	addsvs	r0, r1, r0, lsl #4
    6f78:	00036b3a 	andeq	r6, r3, sl, lsr fp
    6f7c:	40570300 	subsmi	r0, r7, r0, lsl #6
    6f80:	000000f1 	strdeq	r0, [r0], -r1
    6f84:	3e5c9102 	logcce	f1, f2
    6f88:	00002617 	andeq	r2, r0, r7, lsl r6
    6f8c:	380d5e03 	stmdacc	sp, {r0, r1, r9, sl, fp, ip, lr}
    6f90:	02000000 	andeq	r0, r0, #0
    6f94:	663b6c91 			; <UNDEFINED> instruction: 0x663b6c91
    6f98:	15710300 	ldrbne	r0, [r1, #-768]!	; 0xfffffd00
    6f9c:	00001b87 	andeq	r1, r0, r7, lsl #23
    6fa0:	00689102 	rsbeq	r9, r8, r2, lsl #2
    6fa4:	000a083c 	andeq	r0, sl, ip, lsr r8
    6fa8:	0024f900 	eoreq	pc, r4, r0, lsl #18
    6fac:	00c6a800 	sbceq	sl, r6, r0, lsl #16
    6fb0:	00002000 	andeq	r2, r0, r0
    6fb4:	069c0100 	ldreq	r0, [ip], r0, lsl #2
    6fb8:	39000025 	stmdbcc	r0, {r0, r2, r5}
    6fbc:	00000329 	andeq	r0, r0, r9, lsr #6
    6fc0:	00001a03 	andeq	r1, r0, r3, lsl #20
    6fc4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6fc8:	001b543c 	andseq	r5, fp, ip, lsr r4
    6fcc:	00251d00 	eoreq	r1, r5, r0, lsl #26
    6fd0:	00c67c00 	sbceq	r7, r6, r0, lsl #24
    6fd4:	00002c00 	andeq	r2, r0, r0, lsl #24
    6fd8:	489c0100 	ldmmi	ip, {r8}
    6fdc:	39000025 	stmdbcc	r0, {r0, r2, r5}
    6fe0:	00000329 	andeq	r0, r0, r9, lsr #6
    6fe4:	00001b8d 	andeq	r1, r0, sp, lsl #23
    6fe8:	3d749102 	ldfccp	f1, [r4, #-8]!
    6fec:	00726964 	rsbseq	r6, r2, r4, ror #18
    6ff0:	8a294703 	bhi	a58c04 <_bss_end+0xa47b84>
    6ff4:	02000000 	andeq	r0, r0, #0
    6ff8:	3b3a7091 	blcc	ea3244 <_bss_end+0xe921c4>
    6ffc:	03000025 	movweq	r0, #37	; 0x25
    7000:	09633447 	stmdbeq	r3!, {r0, r1, r2, r6, sl, ip, sp}^
    7004:	91020000 	mrsls	r0, (UNDEF: 2)
    7008:	2d38006c 	ldccs	0, cr0, [r8, #-432]!	; 0xfffffe50
    700c:	5f00001b 	svcpl	0x0000001b
    7010:	e0000025 	and	r0, r0, r5, lsr #32
    7014:	9c0000c5 	stcls	0, cr0, [r0], {197}	; 0xc5
    7018:	01000000 	mrseq	r0, (UNDEF: 0)
    701c:	00256c9c 	mlaeq	r5, ip, ip, r6
    7020:	03293900 			; <UNDEFINED> instruction: 0x03293900
    7024:	1b8d0000 	blne	fe34702c <_bss_end+0xfe335fac>
    7028:	91020000 	mrsls	r0, (UNDEF: 2)
    702c:	fc380074 	ldc2	0, cr0, [r8], #-464	; 0xfffffe30
    7030:	8300001a 	movwhi	r0, #26
    7034:	64000025 	strvs	r0, [r0], #-37	; 0xffffffdb
    7038:	7c0000c5 	stcvc	0, cr0, [r0], {197}	; 0xc5
    703c:	01000000 	mrseq	r0, (UNDEF: 0)
    7040:	0025ae9c 	mlaeq	r5, ip, lr, sl
    7044:	03293900 			; <UNDEFINED> instruction: 0x03293900
    7048:	1b8d0000 	blne	fe347050 <_bss_end+0xfe335fd0>
    704c:	91020000 	mrsls	r0, (UNDEF: 2)
    7050:	0cb73a74 	vldmiaeq	r7!, {s6-s121}
    7054:	2f030000 	svccs	0x00030000
    7058:	0002a128 	andeq	sl, r2, r8, lsr #2
    705c:	70910200 	addsvc	r0, r1, r0, lsl #4
    7060:	6d756e3d 	ldclvs	14, cr6, [r5, #-244]!	; 0xffffff0c
    7064:	392f0300 	stmdbcc	pc!, {r8, r9}	; <UNPREDICTABLE>
    7068:	00000068 	andeq	r0, r0, r8, rrx
    706c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7070:	001acb38 	andseq	ip, sl, r8, lsr fp
    7074:	0025c500 	eoreq	ip, r5, r0, lsl #10
    7078:	00c4e400 	sbceq	lr, r4, r0, lsl #8
    707c:	00008000 	andeq	r8, r0, r0
    7080:	f09c0100 			; <UNDEFINED> instruction: 0xf09c0100
    7084:	39000025 	stmdbcc	r0, {r0, r2, r5}
    7088:	00000329 	andeq	r0, r0, r9, lsr #6
    708c:	00001b8d 	andeq	r1, r0, sp, lsl #23
    7090:	3a749102 	bcc	1d2b4a0 <_bss_end+0x1d1a420>
    7094:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    7098:	bd212303 	stclt	3, cr2, [r1, #-12]!
    709c:	0200000c 	andeq	r0, r0, #12
    70a0:	6e3d7091 	mrcvs	0, 1, r7, cr13, cr1, {4}
    70a4:	03006d75 	movweq	r6, #3445	; 0xd75
    70a8:	00683223 	rsbeq	r3, r8, r3, lsr #4
    70ac:	91020000 	mrsls	r0, (UNDEF: 2)
    70b0:	a241006c 	subge	r0, r1, #108	; 0x6c
    70b4:	6300001a 	movwvs	r0, #26
    70b8:	02000009 	andeq	r0, r0, #9
    70bc:	02000026 	andeq	r0, r0, #38	; 0x26
    70c0:	00002615 	andeq	r2, r0, r5, lsl r6
    70c4:	00032942 	andeq	r2, r3, r2, asr #18
    70c8:	001b8d00 	andseq	r8, fp, r0, lsl #26
    70cc:	2bf54200 	blcs	ffd578d4 <_bss_end+0xffd46854>
    70d0:	003f0000 	eorseq	r0, pc, r0
    70d4:	43000000 	movwmi	r0, #0
    70d8:	000025f0 	strdeq	r2, [r0], -r0
    70dc:	00002084 	andeq	r2, r0, r4, lsl #1
    70e0:	00002630 	andeq	r2, r0, r0, lsr r6
    70e4:	0000c4b0 			; <UNDEFINED> instruction: 0x0000c4b0
    70e8:	00000034 	andeq	r0, r0, r4, lsr r0
    70ec:	26399c01 	ldrtcs	r9, [r9], -r1, lsl #24
    70f0:	02440000 	subeq	r0, r4, #0
    70f4:	02000026 	andeq	r0, r0, #38	; 0x26
    70f8:	43007491 	movwmi	r7, #1169	; 0x491
    70fc:	000025f0 	strdeq	r2, [r0], -r0
    7100:	00002c62 	andeq	r2, r0, r2, ror #24
    7104:	00002654 	andeq	r2, r0, r4, asr r6
    7108:	0000c46c 	andeq	ip, r0, ip, ror #8
    710c:	00000044 	andeq	r0, r0, r4, asr #32
    7110:	265d9c01 	ldrbcs	r9, [sp], -r1, lsl #24
    7114:	02440000 	subeq	r0, r4, #0
    7118:	02000026 	andeq	r0, r0, #38	; 0x26
    711c:	45007491 	strmi	r7, [r0, #-1169]	; 0xfffffb6f
    7120:	00001a74 	andeq	r1, r0, r4, ror sl
    7124:	0000266b 	andeq	r2, r0, fp, ror #12
    7128:	00269902 	eoreq	r9, r6, r2, lsl #18
    712c:	03294200 			; <UNDEFINED> instruction: 0x03294200
    7130:	1b8d0000 	blne	fe347138 <_bss_end+0xfe3360b8>
    7134:	b8460000 	stmdalt	r6, {}^	; <UNPREDICTABLE>
    7138:	0300001e 	movweq	r0, #30
    713c:	00381415 	eorseq	r1, r8, r5, lsl r4
    7140:	12460000 	subne	r0, r6, #0
    7144:	03000007 	movweq	r0, #7
    7148:	02942015 	addseq	r2, r4, #21
    714c:	35460000 	strbcc	r0, [r6, #-0]
    7150:	03000004 	movweq	r0, #4
    7154:	02942b15 	addseq	r2, r4, #21504	; 0x5400
    7158:	43000000 	movwmi	r0, #0
    715c:	0000265d 	andeq	r2, r0, sp, asr r6
    7160:	00002ac9 	andeq	r2, r0, r9, asr #21
    7164:	000026b4 			; <UNDEFINED> instruction: 0x000026b4
    7168:	0000c3f0 	strdeq	ip, [r0], -r0
    716c:	0000007c 	andeq	r0, r0, ip, ror r0
    7170:	26d59c01 	ldrbcs	r9, [r5], r1, lsl #24
    7174:	6b440000 	blvs	110717c <_bss_end+0x10f60fc>
    7178:	02000026 	andeq	r0, r0, #38	; 0x26
    717c:	74447491 	strbvc	r7, [r4], #-1169	; 0xfffffb6f
    7180:	02000026 	andeq	r0, r0, #38	; 0x26
    7184:	80447091 	umaalhi	r7, r4, r1, r0
    7188:	02000026 	andeq	r0, r0, #38	; 0x26
    718c:	8c446f91 	mcrrhi	15, 9, r6, r4, cr1
    7190:	02000026 	andeq	r0, r0, #38	; 0x26
    7194:	41006e91 			; <UNDEFINED> instruction: 0x41006e91
    7198:	0000040d 	andeq	r0, r0, sp, lsl #8
    719c:	00000963 	andeq	r0, r0, r3, ror #18
    71a0:	000026e7 	andeq	r2, r0, r7, ror #13
    71a4:	0026fa02 	eoreq	pc, r6, r2, lsl #20
    71a8:	03294200 			; <UNDEFINED> instruction: 0x03294200
    71ac:	04f90000 	ldrbteq	r0, [r9], #0
    71b0:	f5420000 			; <UNDEFINED> instruction: 0xf5420000
    71b4:	3f00002b 	svccc	0x0000002b
    71b8:	00000000 	andeq	r0, r0, r0
    71bc:	0026d543 	eoreq	sp, r6, r3, asr #10
    71c0:	001e9c00 	andseq	r9, lr, r0, lsl #24
    71c4:	00271500 	eoreq	r1, r7, r0, lsl #10
    71c8:	00c3bc00 	sbceq	fp, r3, r0, lsl #24
    71cc:	00003400 	andeq	r3, r0, r0, lsl #8
    71d0:	1e9c0100 	fmlnee	f0, f4, f0
    71d4:	44000027 	strmi	r0, [r0], #-39	; 0xffffffd9
    71d8:	000026e7 	andeq	r2, r0, r7, ror #13
    71dc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    71e0:	0026d547 	eoreq	sp, r6, r7, asr #10
    71e4:	002a7200 	eoreq	r7, sl, r0, lsl #4
    71e8:	00273900 	eoreq	r3, r7, r0, lsl #18
    71ec:	00c38800 	sbceq	r8, r3, r0, lsl #16
    71f0:	00003400 	andeq	r3, r0, r0, lsl #8
    71f4:	429c0100 	addsmi	r0, ip, #0, 2
    71f8:	44000027 	strmi	r0, [r0], #-39	; 0xffffffd9
    71fc:	000026e7 	andeq	r2, r0, r7, ror #13
    7200:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7204:	0003e648 	andeq	lr, r3, r8, asr #12
    7208:	07240100 	streq	r0, [r4, -r0, lsl #2]!
    720c:	00002753 	andeq	r2, r0, r3, asr r7
    7210:	00275d02 	eoreq	r5, r7, r2, lsl #26
    7214:	03294200 			; <UNDEFINED> instruction: 0x03294200
    7218:	04f90000 	ldrbteq	r0, [r9], #0
    721c:	47000000 	strmi	r0, [r0, -r0]
    7220:	00002742 	andeq	r2, r0, r2, asr #14
    7224:	00002a64 	andeq	r2, r0, r4, ror #20
    7228:	00002778 	andeq	r2, r0, r8, ror r7
    722c:	0000c354 	andeq	ip, r0, r4, asr r3
    7230:	00000034 	andeq	r0, r0, r4, lsr r0
    7234:	27819c01 	strcs	r9, [r1, r1, lsl #24]
    7238:	53440000 	movtpl	r0, #16384	; 0x4000
    723c:	02000027 	andeq	r0, r0, #39	; 0x27
    7240:	49007491 	stmdbmi	r0, {r0, r4, r7, sl, ip, sp, lr}
    7244:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    7248:	8b0d3d02 	blhi	356658 <_bss_end+0x3455d8>
    724c:	0400000e 	streq	r0, [r0], #-14
    7250:	300000ab 	andcc	r0, r0, fp, lsr #1
    7254:	01000000 	mrseq	r0, (UNDEF: 0)
    7258:	0027b19c 	mlaeq	r7, ip, r1, fp
    725c:	00703d00 	rsbseq	r3, r0, r0, lsl #26
    7260:	63233d02 			; <UNDEFINED> instruction: 0x63233d02
    7264:	02000009 	andeq	r0, r0, #9
    7268:	684a7491 	stmdavs	sl, {r0, r4, r7, sl, ip, sp, lr}^
    726c:	02000000 	andeq	r0, r0, #0
    7270:	4b007091 	blmi	234bc <_bss_end+0x1243c>
    7274:	0000278d 	andeq	r2, r0, sp, lsl #15
    7278:	b70e2902 	strlt	r2, [lr, -r2, lsl #18]
    727c:	63000024 	movwvs	r0, #36	; 0x24
    7280:	24000009 	strcs	r0, [r0], #-9
    7284:	300000c3 	andcc	r0, r0, r3, asr #1
    7288:	01000000 	mrseq	r0, (UNDEF: 0)
    728c:	0027df9c 	mlaeq	r7, ip, pc, sp	; <UNPREDICTABLE>
    7290:	0e453a00 	vmlaeq.f32	s7, s10, s0
    7294:	29020000 	stmdbcs	r2, {}	; <UNPREDICTABLE>
    7298:	00006824 	andeq	r6, r0, r4, lsr #16
    729c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    72a0:	04c03c00 	strbeq	r3, [r0], #3072	; 0xc00
    72a4:	27f60000 	ldrbcs	r0, [r6, r0]!
    72a8:	c2f80000 	rscsgt	r0, r8, #0
    72ac:	002c0000 	eoreq	r0, ip, r0
    72b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    72b4:	00002821 	andeq	r2, r0, r1, lsr #16
    72b8:	00032939 	andeq	r2, r3, r9, lsr r9
    72bc:	0004f900 	andeq	pc, r4, r0, lsl #18
    72c0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    72c4:	7269643d 	rsbvc	r6, r9, #1023410176	; 0x3d000000
    72c8:	293b0100 	ldmdbcs	fp!, {r8}
    72cc:	0000008a 	andeq	r0, r0, sl, lsl #1
    72d0:	3a709102 	bcc	1c2b6e0 <_bss_end+0x1c1a660>
    72d4:	0000253b 	andeq	r2, r0, fp, lsr r5
    72d8:	63343b01 	teqvs	r4, #1024	; 0x400
    72dc:	02000009 	andeq	r0, r0, #9
    72e0:	3c006c91 	stccc	12, cr6, [r0], {145}	; 0x91
    72e4:	00000499 	muleq	r0, r9, r4
    72e8:	00002838 	andeq	r2, r0, r8, lsr r8
    72ec:	0000c2d4 	ldrdeq	ip, [r0], -r4
    72f0:	00000024 	andeq	r0, r0, r4, lsr #32
    72f4:	28459c01 	stmdacs	r5, {r0, sl, fp, ip, pc}^
    72f8:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    72fc:	f9000003 			; <UNDEFINED> instruction: 0xf9000003
    7300:	02000004 	andeq	r0, r0, #4
    7304:	3c007491 	cfstrscc	mvf7, [r0], {145}	; 0x91
    7308:	00000468 	andeq	r0, r0, r8, ror #8
    730c:	0000285c 	andeq	r2, r0, ip, asr r8
    7310:	0000c2a8 	andeq	ip, r0, r8, lsr #5
    7314:	0000002c 	andeq	r0, r0, ip, lsr #32
    7318:	28879c01 	stmcs	r7, {r0, sl, fp, ip, pc}
    731c:	29390000 	ldmdbcs	r9!, {}	; <UNPREDICTABLE>
    7320:	f9000003 			; <UNDEFINED> instruction: 0xf9000003
    7324:	02000004 	andeq	r0, r0, #4
    7328:	b73a7491 			; <UNDEFINED> instruction: 0xb73a7491
    732c:	0100000c 	tsteq	r0, ip
    7330:	02a12831 	adceq	r2, r1, #3211264	; 0x310000
    7334:	91020000 	mrsls	r0, (UNDEF: 2)
    7338:	756e3d70 	strbvc	r3, [lr, #-3440]!	; 0xfffff290
    733c:	3101006d 	tstcc	r1, sp, rrx
    7340:	00006839 	andeq	r6, r0, r9, lsr r8
    7344:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7348:	04374c00 	ldrteq	r4, [r7], #-3072	; 0xfffff400
    734c:	289a0000 	ldmcs	sl, {}	; <UNPREDICTABLE>
    7350:	c27c0000 	rsbsgt	r0, ip, #0
    7354:	002c0000 	eoreq	r0, ip, r0
    7358:	9c010000 	stcls	0, cr0, [r1], {-0}
    735c:	00032939 	andeq	r2, r3, r9, lsr r9
    7360:	0004f900 	andeq	pc, r4, r0, lsl #18
    7364:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7368:	000cb73a 	andeq	fp, ip, sl, lsr r7
    736c:	212b0100 			; <UNDEFINED> instruction: 0x212b0100
    7370:	00000cbd 			; <UNDEFINED> instruction: 0x00000cbd
    7374:	3d709102 	ldfccp	f1, [r0, #-8]!
    7378:	006d756e 	rsbeq	r7, sp, lr, ror #10
    737c:	68322b01 	ldmdavs	r2!, {r0, r8, r9, fp, sp}
    7380:	02000000 	andeq	r0, r0, #0
    7384:	00006c91 	muleq	r0, r1, ip
    7388:	00000b1f 	andeq	r0, r0, pc, lsl fp
    738c:	1e820004 	cdpne	0, 8, cr0, cr2, cr4, {0}
    7390:	01040000 	mrseq	r0, (UNDEF: 4)
    7394:	00000061 	andeq	r0, r0, r1, rrx
    7398:	0031cf04 	eorseq	ip, r1, r4, lsl #30
    739c:	00002600 	andeq	r2, r0, r0, lsl #12
    73a0:	00d28000 	sbcseq	r8, r2, r0
    73a4:	0002e400 	andeq	lr, r2, r0, lsl #8
    73a8:	002b2700 	eoreq	r2, fp, r0, lsl #14
    73ac:	08010200 	stmdaeq	r1, {r9}
    73b0:	00000570 	andeq	r0, r0, r0, ror r5
    73b4:	96050202 	strls	r0, [r5], -r2, lsl #4
    73b8:	03000005 	movweq	r0, #5
    73bc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    73c0:	7f040074 	svcvc	0x00040074
    73c4:	02000009 	andeq	r0, r0, #9
    73c8:	00460707 	subeq	r0, r6, r7, lsl #14
    73cc:	01020000 	mrseq	r0, (UNDEF: 2)
    73d0:	00056708 	andeq	r6, r5, r8, lsl #14
    73d4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    73d8:	000003d9 	ldrdeq	r0, [r0], -r9
    73dc:	0005e104 	andeq	lr, r5, r4, lsl #2
    73e0:	07090200 	streq	r0, [r9, -r0, lsl #4]
    73e4:	00000065 	andeq	r0, r0, r5, rrx
    73e8:	00005405 	andeq	r5, r0, r5, lsl #8
    73ec:	07040200 	streq	r0, [r4, -r0, lsl #4]
    73f0:	000040ee 	andeq	r4, r0, lr, ror #1
    73f4:	00006505 	andeq	r6, r0, r5, lsl #10
    73f8:	00650600 	rsbeq	r0, r5, r0, lsl #12
    73fc:	68070000 	stmdavs	r7, {}	; <UNPREDICTABLE>
    7400:	03006c61 	movweq	r6, #3169	; 0xc61
    7404:	026c0b05 	rsbeq	r0, ip, #5120	; 0x1400
    7408:	84080000 	strhi	r0, [r8], #-0
    740c:	03000004 	movweq	r0, #4
    7410:	006c1907 	rsbeq	r1, ip, r7, lsl #18
    7414:	b2800000 	addlt	r0, r0, #0
    7418:	c9080ee6 	stmdbgt	r8, {r1, r2, r5, r6, r7, r9, sl, fp}
    741c:	03000005 	movweq	r0, #5
    7420:	02781a0a 	rsbseq	r1, r8, #40960	; 0xa000
    7424:	00000000 	andeq	r0, r0, r0
    7428:	4f082000 	svcmi	0x00082000
    742c:	03000004 	movweq	r0, #4
    7430:	02781a0d 	rsbseq	r1, r8, #53248	; 0xd000
    7434:	00000000 	andeq	r0, r0, r0
    7438:	87092020 	strhi	r2, [r9, -r0, lsr #32]
    743c:	03000005 	movweq	r0, #5
    7440:	00601510 	rsbeq	r1, r0, r0, lsl r5
    7444:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    7448:	00000370 	andeq	r0, r0, r0, ror r3
    744c:	781a4203 	ldmdavc	sl, {r0, r1, r9, lr}
    7450:	00000002 	andeq	r0, r0, r2
    7454:	08202150 	stmdaeq	r0!, {r4, r6, r8, sp}
    7458:	00000347 	andeq	r0, r0, r7, asr #6
    745c:	781a7103 	ldmdavc	sl, {r0, r1, r8, ip, sp, lr}
    7460:	00000002 	andeq	r0, r0, r2
    7464:	0a2000b2 	beq	807734 <_bss_end+0x7f66b4>
    7468:	00002fb3 			; <UNDEFINED> instruction: 0x00002fb3
    746c:	00330405 	eorseq	r0, r3, r5, lsl #8
    7470:	73030000 	movwvc	r0, #12288	; 0x3000
    7474:	00012e0d 	andeq	r2, r1, sp, lsl #28
    7478:	30ea0b00 	rsccc	r0, sl, r0, lsl #22
    747c:	0b000000 	bleq	7484 <CPSR_IRQ_INHIBIT+0x7404>
    7480:	000033fb 	strdeq	r3, [r0], -fp
    7484:	34230b01 	strtcc	r0, [r3], #-2817	; 0xfffff4ff
    7488:	0b020000 	bleq	87490 <_bss_end+0x76410>
    748c:	0000330a 	andeq	r3, r0, sl, lsl #6
    7490:	2f4f0b03 	svccs	0x004f0b03
    7494:	0b040000 	bleq	10749c <_bss_end+0xf641c>
    7498:	00002f5c 	andeq	r2, r0, ip, asr pc
    749c:	33620b05 	cmncc	r2, #5120	; 0x1400
    74a0:	0b060000 	bleq	1874a8 <_bss_end+0x176428>
    74a4:	0000348c 	andeq	r3, r0, ip, lsl #9
    74a8:	349a0b07 	ldrcc	r0, [sl], #2823	; 0xb07
    74ac:	0b080000 	bleq	2074b4 <_bss_end+0x1f6434>
    74b0:	0000316e 	andeq	r3, r0, lr, ror #2
    74b4:	320a0009 	andcc	r0, sl, #9
    74b8:	05000030 	streq	r0, [r0, #-48]	; 0xffffffd0
    74bc:	00003304 	andeq	r3, r0, r4, lsl #6
    74c0:	0d810300 	stceq	3, cr0, [r1]
    74c4:	00000171 	andeq	r0, r0, r1, ror r1
    74c8:	0019a60b 	andseq	sl, r9, fp, lsl #12
    74cc:	db0b0000 	blle	2c74d4 <_bss_end+0x2b6454>
    74d0:	0100002d 	tsteq	r0, sp, lsr #32
    74d4:	0031b90b 	eorseq	fp, r1, fp, lsl #18
    74d8:	c40b0200 	strgt	r0, [fp], #-512	; 0xfffffe00
    74dc:	03000031 	movweq	r0, #49	; 0x31
    74e0:	0032310b 	eorseq	r3, r2, fp, lsl #2
    74e4:	d10b0400 	tstle	fp, r0, lsl #8
    74e8:	0500002d 	streq	r0, [r0, #-45]	; 0xffffffd3
    74ec:	0030100b 	eorseq	r1, r0, fp
    74f0:	210b0600 	tstcs	fp, r0, lsl #12
    74f4:	07000030 	smladxeq	r0, r0, r0, r0
    74f8:	34090a00 	strcc	r0, [r9], #-2560	; 0xfffff600
    74fc:	04050000 	streq	r0, [r5], #-0
    7500:	00000033 	andeq	r0, r0, r3, lsr r0
    7504:	d20d8d03 	andle	r8, sp, #3, 26	; 0xc0
    7508:	0c000001 	stceq	0, cr0, [r0], {1}
    750c:	00585541 	subseq	r5, r8, r1, asr #10
    7510:	32cd0b1d 	sbccc	r0, sp, #29696	; 0x7400
    7514:	0b2b0000 	bleq	ac751c <_bss_end+0xab649c>
    7518:	000034a8 	andeq	r3, r0, r8, lsr #9
    751c:	34ae0b2d 	strtcc	r0, [lr], #2861	; 0xb2d
    7520:	0c2e0000 	stceq	0, cr0, [lr], #-0
    7524:	00494d53 	subeq	r4, r9, r3, asr sp
    7528:	34310b30 	ldrtcc	r0, [r1], #-2864	; 0xfffff4d0
    752c:	0b310000 	bleq	c47534 <_bss_end+0xc364b4>
    7530:	00003438 	andeq	r3, r0, r8, lsr r4
    7534:	343f0b32 	ldrtcc	r0, [pc], #-2866	; 753c <CPSR_IRQ_INHIBIT+0x74bc>
    7538:	0b330000 	bleq	cc7540 <_bss_end+0xcb64c0>
    753c:	00003446 	andeq	r3, r0, r6, asr #8
    7540:	32490c34 	subcc	r0, r9, #52, 24	; 0x3400
    7544:	0c350043 	ldceq	0, cr0, [r5], #-268	; 0xfffffef4
    7548:	00495053 	subeq	r5, r9, r3, asr r0
    754c:	43500c36 	cmpmi	r0, #13824	; 0x3600
    7550:	0b37004d 	bleq	dc768c <_bss_end+0xdb660c>
    7554:	00002fae 	andeq	r2, r0, lr, lsr #31
    7558:	b3080039 	movwlt	r0, #32825	; 0x8039
    755c:	03000002 	movweq	r0, #2
    7560:	02781aa4 	rsbseq	r1, r8, #164, 20	; 0xa4000
    7564:	b4000000 	strlt	r0, [r0], #-0
    7568:	d60a2000 	strle	r2, [sl], -r0
    756c:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    7570:	00003304 	andeq	r3, r0, r4, lsl #6
    7574:	0da60300 	stceq	3, cr0, [r6]
    7578:	0000022b 	andeq	r0, r0, fp, lsr #4
    757c:	0019750b 	andseq	r7, r9, fp, lsl #10
    7580:	a90b0000 	stmdbge	fp, {}	; <UNPREDICTABLE>
    7584:	01000018 	tsteq	r0, r8, lsl r0
    7588:	00330e0b 	eorseq	r0, r3, fp, lsl #28
    758c:	920b0200 	andls	r0, fp, #0, 4
    7590:	03000018 	movweq	r0, #24
    7594:	0019f90b 	andseq	pc, r9, fp, lsl #18
    7598:	ed0b0400 	cfstrs	mvf0, [fp, #-0]
    759c:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    75a0:	0017d90b 	andseq	sp, r7, fp, lsl #18
    75a4:	ca0b0600 	bgt	2c8dac <_bss_end+0x2b7d2c>
    75a8:	07000018 	smladeq	r0, r8, r0, r0
    75ac:	0019bb0b 	andseq	fp, r9, fp, lsl #22
    75b0:	08000800 	stmdaeq	r0, {fp}
    75b4:	00000361 	andeq	r0, r0, r1, ror #6
    75b8:	781ab303 	ldmdavc	sl, {r0, r1, r8, r9, ip, sp, pc}
    75bc:	00000002 	andeq	r0, r0, r2
    75c0:	08201040 	stmdaeq	r0!, {r6, ip}
    75c4:	0000032e 	andeq	r0, r0, lr, lsr #6
    75c8:	781abe03 	ldmdavc	sl, {r0, r1, r9, sl, fp, ip, sp, pc}
    75cc:	00000002 	andeq	r0, r0, r2
    75d0:	08202050 	stmdaeq	r0!, {r4, r6, sp}
    75d4:	000003ec 	andeq	r0, r0, ip, ror #7
    75d8:	781abf03 	ldmdavc	sl, {r0, r1, r8, r9, sl, fp, ip, sp, pc}
    75dc:	00000002 	andeq	r0, r0, r2
    75e0:	08208040 	stmdaeq	r0!, {r6, pc}
    75e4:	00000459 	andeq	r0, r0, r9, asr r4
    75e8:	781ac003 	ldmdavc	sl, {r0, r1, lr, pc}
    75ec:	00000002 	andeq	r0, r0, r2
    75f0:	00208050 	eoreq	r8, r0, r0, asr r0
    75f4:	0000820d 	andeq	r8, r0, sp, lsl #4
    75f8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    75fc:	000040e9 	andeq	r4, r0, r9, ror #1
    7600:	00027105 	andeq	r7, r2, r5, lsl #2
    7604:	00920d00 	addseq	r0, r2, r0, lsl #26
    7608:	a20d0000 	andge	r0, sp, #0
    760c:	0d000000 	stceq	0, cr0, [r0, #-0]
    7610:	000000b2 	strheq	r0, [r0], -r2
    7614:	0000bf0d 	andeq	fp, r0, sp, lsl #30
    7618:	00cf0d00 	sbceq	r0, pc, r0, lsl #26
    761c:	d20d0000 	andle	r0, sp, #0
    7620:	0d000001 	stceq	0, cr0, [r0, #-4]
    7624:	0000022b 	andeq	r0, r0, fp, lsr #4
    7628:	00023b0d 	andeq	r3, r2, sp, lsl #22
    762c:	024b0d00 	subeq	r0, fp, #0, 26
    7630:	5b0d0000 	blpl	347638 <_bss_end+0x3365b8>
    7634:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    7638:	00003158 	andeq	r3, r0, r8, asr r1
    763c:	07050404 	streq	r0, [r5, -r4, lsl #8]
    7640:	0000038e 	andeq	r0, r0, lr, lsl #7
    7644:	0030640f 	eorseq	r6, r0, pc, lsl #8
    7648:	1c090400 	cfstrsne	mvf0, [r9], {-0}
    764c:	0000038e 	andeq	r0, r0, lr, lsl #7
    7650:	1a2b1000 	bne	acb658 <_bss_end+0xaba5d8>
    7654:	0c040000 	stceq	0, cr0, [r4], {-0}
    7658:	002d7d1c 	eoreq	r7, sp, ip, lsl sp
    765c:	00039400 	andeq	r9, r3, r0, lsl #8
    7660:	02e20200 	rsceq	r0, r2, #0, 4
    7664:	02ed0000 	rsceq	r0, sp, #0
    7668:	9a110000 	bls	447670 <_bss_end+0x4365f0>
    766c:	12000003 	andne	r0, r0, #3
    7670:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    7674:	31581000 	cmpcc	r8, r0
    7678:	0f040000 	svceq	0x00040000
    767c:	0032a205 	eorseq	sl, r2, r5, lsl #4
    7680:	00039a00 	andeq	r9, r3, r0, lsl #20
    7684:	03060100 	movweq	r0, #24832	; 0x6100
    7688:	03110000 	tsteq	r1, #0
    768c:	9a110000 	bls	447694 <_bss_end+0x436614>
    7690:	12000003 	andne	r0, r0, #3
    7694:	00000271 	andeq	r0, r0, r1, ror r2
    7698:	31871300 	orrcc	r1, r7, r0, lsl #6
    769c:	12040000 	andne	r0, r4, #0
    76a0:	00325c0a 	eorseq	r5, r2, sl, lsl #24
    76a4:	03260100 			; <UNDEFINED> instruction: 0x03260100
    76a8:	03310000 	teqeq	r1, #0
    76ac:	9a110000 	bls	4476b4 <_bss_end+0x436634>
    76b0:	12000003 	andne	r0, r0, #3
    76b4:	0000012e 	andeq	r0, r0, lr, lsr #2
    76b8:	34551300 	ldrbcc	r1, [r5], #-768	; 0xfffffd00
    76bc:	14040000 	strne	r0, [r4], #-0
    76c0:	002cec0a 	eoreq	lr, ip, sl, lsl #24
    76c4:	03460100 	movteq	r0, #24832	; 0x6100
    76c8:	03510000 	cmpeq	r1, #0
    76cc:	9a110000 	bls	4476d4 <_bss_end+0x436654>
    76d0:	12000003 	andne	r0, r0, #3
    76d4:	0000012e 	andeq	r0, r0, lr, lsr #2
    76d8:	2e3a1300 	cdpcs	3, 3, cr1, cr10, cr0, {0}
    76dc:	17040000 	strne	r0, [r4, -r0]
    76e0:	002cb20a 	eoreq	fp, ip, sl, lsl #4
    76e4:	03660100 	cmneq	r6, #0, 2
    76e8:	03710000 	cmneq	r1, #0
    76ec:	9a110000 	bls	4476f4 <_bss_end+0x436674>
    76f0:	12000003 	andne	r0, r0, #3
    76f4:	00000171 	andeq	r0, r0, r1, ror r1
    76f8:	30fc1400 	rscscc	r1, ip, r0, lsl #8
    76fc:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    7700:	0030980a 	eorseq	r9, r0, sl, lsl #16
    7704:	03820100 	orreq	r0, r2, #0, 2
    7708:	9a110000 	bls	447710 <_bss_end+0x436690>
    770c:	12000003 	andne	r0, r0, #3
    7710:	00000171 	andeq	r0, r0, r1, ror r1
    7714:	04150000 	ldreq	r0, [r5], #-0
    7718:	00000071 	andeq	r0, r0, r1, ror r0
    771c:	00710416 	rsbseq	r0, r1, r6, lsl r4
    7720:	04150000 	ldreq	r0, [r5], #-0
    7724:	000002af 	andeq	r0, r0, pc, lsr #5
    7728:	00039a05 	andeq	r9, r3, r5, lsl #20
    772c:	2d6f1700 	stclcs	7, cr1, [pc, #-0]	; 7734 <CPSR_IRQ_INHIBIT+0x76b4>
    7730:	1c040000 	stcne	0, cr0, [r4], {-0}
    7734:	0002af1e 	andeq	sl, r2, lr, lsl pc
    7738:	18560a00 	ldmdane	r6, {r9, fp}^
    773c:	01070000 	mrseq	r0, (UNDEF: 7)
    7740:	0000003a 	andeq	r0, r0, sl, lsr r0
    7744:	d60c0605 	strle	r0, [ip], -r5, lsl #12
    7748:	0b000003 	bleq	775c <CPSR_IRQ_INHIBIT+0x76dc>
    774c:	000019c8 	andeq	r1, r0, r8, asr #19
    7750:	189c0b00 	ldmne	ip, {r8, r9, fp}
    7754:	0b010000 	bleq	4775c <_bss_end+0x366dc>
    7758:	0000182e 	andeq	r1, r0, lr, lsr #16
    775c:	a50e0002 	strge	r0, [lr, #-2]
    7760:	08000019 	stmdaeq	r0, {r0, r3, r4}
    7764:	ce070d05 	cdpgt	13, 0, cr0, cr7, cr5, {0}
    7768:	0f000004 	svceq	0x00000004
    776c:	00001771 	andeq	r1, r0, r1, ror r7
    7770:	8e1c1505 	cfmul32hi	mvfx1, mvfx12, mvfx5
    7774:	00000003 	andeq	r0, r0, r3
    7778:	0019e918 	andseq	lr, r9, r8, lsl r9
    777c:	0b110500 	bleq	448b84 <_bss_end+0x437b04>
    7780:	000004ce 	andeq	r0, r0, lr, asr #9
    7784:	197a0f01 	ldmdbne	sl!, {r0, r8, r9, sl, fp}^
    7788:	18050000 	stmdane	r5, {}	; <UNPREDICTABLE>
    778c:	0003f015 	andeq	pc, r3, r5, lsl r0	; <UNPREDICTABLE>
    7790:	2b100400 	blcs	408798 <_bss_end+0x3f7718>
    7794:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    7798:	19841c1b 	stmibne	r4, {r0, r1, r3, r4, sl, fp, ip}
    779c:	03940000 	orrseq	r0, r4, #0
    77a0:	23020000 	movwcs	r0, #8192	; 0x2000
    77a4:	2e000004 	cdpcs	0, 0, cr0, cr0, cr4, {0}
    77a8:	11000004 	tstne	r0, r4
    77ac:	000004d5 	ldrdeq	r0, [r0], -r5
    77b0:	0001e212 	andeq	lr, r1, r2, lsl r2
    77b4:	a5100000 	ldrge	r0, [r0, #-0]
    77b8:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    77bc:	19ac051e 	stmibne	ip!, {r1, r2, r3, r4, r8, sl}
    77c0:	04d50000 	ldrbeq	r0, [r5], #0
    77c4:	47010000 	strmi	r0, [r1, -r0]
    77c8:	52000004 	andpl	r0, r0, #4
    77cc:	11000004 	tstne	r0, r4
    77d0:	000004d5 	ldrdeq	r0, [r0], -r5
    77d4:	00027112 	andeq	r7, r2, r2, lsl r1
    77d8:	6c130000 	ldcvs	0, cr0, [r3], {-0}
    77dc:	05000033 	streq	r0, [r0, #-51]	; 0xffffffcd
    77e0:	183c0522 	ldmdane	ip!, {r1, r5, r8, sl}
    77e4:	67010000 	strvs	r0, [r1, -r0]
    77e8:	7c000004 	stcvc	0, cr0, [r0], {4}
    77ec:	11000004 	tstne	r0, r4
    77f0:	000004d5 	ldrdeq	r0, [r0], -r5
    77f4:	0003f012 	andeq	pc, r3, r2, lsl r0	; <UNPREDICTABLE>
    77f8:	00651200 	rsbeq	r1, r5, r0, lsl #4
    77fc:	b1120000 	tstlt	r2, r0
    7800:	00000003 	andeq	r0, r0, r3
    7804:	00317813 	eorseq	r7, r1, r3, lsl r8
    7808:	0a240500 	beq	908c10 <_bss_end+0x8f7b90>
    780c:	000018e0 	andeq	r1, r0, r0, ror #17
    7810:	00049101 	andeq	r9, r4, r1, lsl #2
    7814:	00049700 	andeq	r9, r4, r0, lsl #14
    7818:	04d51100 	ldrbeq	r1, [r5], #256	; 0x100
    781c:	13000000 	movwne	r0, #0
    7820:	000017e0 	andeq	r1, r0, r0, ror #15
    7824:	010a2705 	tsteq	sl, r5, lsl #14
    7828:	0100001a 	tsteq	r0, sl, lsl r0
    782c:	000004ac 	andeq	r0, r0, ip, lsr #9
    7830:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
    7834:	0004d511 	andeq	sp, r4, r1, lsl r5
    7838:	d4190000 	ldrle	r0, [r9], #-0
    783c:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    7840:	17930a29 	ldrne	r0, [r3, r9, lsr #20]
    7844:	04db0000 	ldrbeq	r0, [fp], #0
    7848:	c7010000 	strgt	r0, [r1, -r0]
    784c:	11000004 	tstne	r0, r4
    7850:	000004d5 	ldrdeq	r0, [r0], -r5
    7854:	04150000 	ldreq	r0, [r5], #-0
    7858:	000004d4 	ldrdeq	r0, [r0], -r4
    785c:	d604151a 			; <UNDEFINED> instruction: 0xd604151a
    7860:	02000003 	andeq	r0, r0, #3
    7864:	40a50201 	adcmi	r0, r5, r1, lsl #4
    7868:	8c170000 	ldchi	0, cr0, [r7], {-0}
    786c:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    7870:	03d60f2c 	bicseq	r0, r6, #44, 30	; 0xb0
    7874:	691b0000 	ldmdbvs	fp, {}	; <UNPREDICTABLE>
    7878:	0600002f 	streq	r0, [r0], -pc, lsr #32
    787c:	00601404 	rsbeq	r1, r0, r4, lsl #8
    7880:	03050000 	movweq	r0, #20480	; 0x5000
    7884:	0000faf0 	strdeq	pc, [r0], -r0
    7888:	0030580a 	eorseq	r5, r0, sl, lsl #16
    788c:	33040500 	movwcc	r0, #17664	; 0x4500
    7890:	06000000 	streq	r0, [r0], -r0
    7894:	052b0c07 	streq	r0, [fp, #-3079]!	; 0xfffff3f9
    7898:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
    789c:	00007765 	andeq	r7, r0, r5, ror #14
    78a0:	00304f0b 	eorseq	r4, r0, fp, lsl #30
    78a4:	c00b0100 	andgt	r0, fp, r0, lsl #2
    78a8:	02000019 	andeq	r0, r0, #25
    78ac:	0031800b 	eorseq	r8, r1, fp
    78b0:	1c000300 	stcne	3, cr0, [r0], {-0}
    78b4:	00002f2c 	andeq	r2, r0, ip, lsr #30
    78b8:	0816060c 	ldmdaeq	r6, {r2, r3, r9, sl}
    78bc:	0000055d 	andeq	r0, r0, sp, asr r5
    78c0:	00726c1d 	rsbseq	r6, r2, sp, lsl ip
    78c4:	71131806 	tstvc	r3, r6, lsl #16
    78c8:	00000002 	andeq	r0, r0, r2
    78cc:	0070731d 	rsbseq	r7, r0, sp, lsl r3
    78d0:	71131906 	tstvc	r3, r6, lsl #18
    78d4:	04000002 	streq	r0, [r0], #-2
    78d8:	0063701d 	rsbeq	r7, r3, sp, lsl r0
    78dc:	71131a06 	tstvc	r3, r6, lsl #20
    78e0:	08000002 	stmdaeq	r0, {r1}
    78e4:	33161c00 	tstcc	r6, #0, 24
    78e8:	065c0000 	ldrbeq	r0, [ip], -r0
    78ec:	05b90822 	ldreq	r0, [r9, #2082]!	; 0x822
    78f0:	c10f0000 	mrsgt	r0, CPSR
    78f4:	06000032 			; <UNDEFINED> instruction: 0x06000032
    78f8:	052b1224 	streq	r1, [fp, #-548]!	; 0xfffffddc
    78fc:	1d000000 	stcne	0, cr0, [r0, #-0]
    7900:	00646970 	rsbeq	r6, r4, r0, ror r9
    7904:	65122506 	ldrvs	r2, [r2, #-1286]	; 0xfffffafa
    7908:	0c000000 	stceq	0, cr0, [r0], {-0}
    790c:	002eb00f 	eoreq	fp, lr, pc
    7910:	11260600 			; <UNDEFINED> instruction: 0x11260600
    7914:	00000500 	andeq	r0, r0, r0, lsl #10
    7918:	30740f10 	rsbscc	r0, r4, r0, lsl pc
    791c:	27060000 	strcs	r0, [r6, -r0]
    7920:	00006512 	andeq	r6, r0, r2, lsl r5
    7924:	820f1400 	andhi	r1, pc, #0, 8
    7928:	06000030 			; <UNDEFINED> instruction: 0x06000030
    792c:	00651229 	rsbeq	r1, r5, r9, lsr #4
    7930:	0f180000 	svceq	0x00180000
    7934:	00002f1f 	andeq	r2, r0, pc, lsl pc
    7938:	b90c2a06 	stmdblt	ip, {r1, r2, r9, fp, sp}
    793c:	1c000005 	stcne	0, cr0, [r0], {5}
    7940:	05c91e00 	strbeq	r1, [r9, #3584]	; 0xe00
    7944:	05c90000 	strbeq	r0, [r9]
    7948:	651f0000 	ldrvs	r0, [pc, #-0]	; 7950 <CPSR_IRQ_INHIBIT+0x78d0>
    794c:	0f000000 	svceq	0x00000000
    7950:	cf041500 	svcgt	0x00041500
    7954:	20000005 	andcs	r0, r0, r5
    7958:	000029ea 	andeq	r2, r0, sl, ror #19
    795c:	002f131c 	eoreq	r1, pc, ip, lsl r3	; <UNPREDICTABLE>
    7960:	06070800 	streq	r0, [r7], -r0, lsl #16
    7964:	0005fa08 	andeq	pc, r5, r8, lsl #20
    7968:	30721d00 	rsbscc	r1, r2, r0, lsl #26
    796c:	0e080700 	cdpeq	7, 0, cr0, cr8, cr0, {0}
    7970:	00000054 	andeq	r0, r0, r4, asr r0
    7974:	31721d00 	cmncc	r2, r0, lsl #26
    7978:	0e090700 	cdpeq	7, 0, cr0, cr9, cr0, {0}
    797c:	00000054 	andeq	r0, r0, r4, asr r0
    7980:	3b0a0004 	blcc	287998 <_bss_end+0x276918>
    7984:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
    7988:	00003304 	andeq	r3, r0, r4, lsl #6
    798c:	0c160700 	ldceq	7, cr0, [r6], {-0}
    7990:	00000619 	andeq	r0, r0, r9, lsl r6
    7994:	002ea80b 	eoreq	sl, lr, fp, lsl #16
    7998:	850b0000 	strhi	r0, [fp, #-0]
    799c:	0100001c 	tsteq	r0, ip, lsl r0
    79a0:	2e8c0a00 	vdivcs.f32	s0, s24, s0
    79a4:	04050000 	streq	r0, [r5], #-0
    79a8:	00000033 	andeq	r0, r0, r3, lsr r0
    79ac:	320c1e07 	andcc	r1, ip, #7, 28	; 0x70
    79b0:	0b000006 	bleq	79d0 <CPSR_IRQ_INHIBIT+0x7950>
    79b4:	0000344d 	andeq	r3, r0, sp, asr #8
    79b8:	e30a0000 	movw	r0, #40960	; 0xa000
    79bc:	05000033 	streq	r0, [r0, #-51]	; 0xffffffcd
    79c0:	00003304 	andeq	r3, r0, r4, lsl #6
    79c4:	0c260700 	stceq	7, cr0, [r6], #-0
    79c8:	00000663 	andeq	r0, r0, r3, ror #12
    79cc:	000a1d0b 	andeq	r1, sl, fp, lsl #26
    79d0:	d00b0000 	andle	r0, fp, r0
    79d4:	01000002 	tsteq	r0, r2
    79d8:	001cdd0b 	andseq	sp, ip, fp, lsl #26
    79dc:	aa0b0200 	bge	2c81e4 <_bss_end+0x2b7164>
    79e0:	03000009 	movweq	r0, #9
    79e4:	0024140b 	eoreq	r1, r4, fp, lsl #8
    79e8:	1b000400 	blne	89f0 <_Z41__static_initialization_and_destruction_0ii+0x50>
    79ec:	00001c41 	andeq	r1, r0, r1, asr #24
    79f0:	601a0608 	andsvs	r0, sl, r8, lsl #12
    79f4:	05000000 	streq	r0, [r0, #-0]
    79f8:	00faf403 	rscseq	pc, sl, r3, lsl #8
    79fc:	1c721b00 			; <UNDEFINED> instruction: 0x1c721b00
    7a00:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    7a04:	0000601a 	andeq	r6, r0, sl, lsl r0
    7a08:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    7a0c:	1b0000fa 	blne	7dfc <CPSR_IRQ_INHIBIT+0x7d7c>
    7a10:	00001d90 	muleq	r0, r0, sp
    7a14:	601a0a08 	andsvs	r0, sl, r8, lsl #20
    7a18:	05000000 	streq	r0, [r0, #-0]
    7a1c:	00fafc03 	rscseq	pc, sl, r3, lsl #24
    7a20:	1b761b00 	blne	1d8e628 <_bss_end+0x1d7d5a8>
    7a24:	0c080000 	stceq	0, cr0, [r8], {-0}
    7a28:	0000601a 	andeq	r6, r0, sl, lsl r0
    7a2c:	00030500 	andeq	r0, r3, r0, lsl #10
    7a30:	1b0000fb 	blne	7e24 <CPSR_IRQ_INHIBIT+0x7da4>
    7a34:	00003414 	andeq	r3, r0, r4, lsl r4
    7a38:	60140a09 	andsvs	r0, r4, r9, lsl #20
    7a3c:	05000000 	streq	r0, [r0, #-0]
    7a40:	00fb0403 	rscseq	r0, fp, r3, lsl #8
    7a44:	334f1c00 	movtcc	r1, #64512	; 0xfc00
    7a48:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    7a4c:	06f2080d 	ldrbteq	r0, [r2], sp, lsl #16
    7a50:	050f0000 	streq	r0, [pc, #-0]	; 7a58 <CPSR_IRQ_INHIBIT+0x79d8>
    7a54:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    7a58:	06f2190f 	ldrbteq	r1, [r2], pc, lsl #18
    7a5c:	0f000000 	svceq	0x00000000
    7a60:	00000df8 	strdeq	r0, [r0], -r8
    7a64:	f2191009 	vhadd.s16	d1, d9, d9
    7a68:	04000006 	streq	r0, [r0], #-6
    7a6c:	0033050f 	eorseq	r0, r3, pc, lsl #10
    7a70:	13110900 	tstne	r1, #0, 18
    7a74:	000006f8 	strdeq	r0, [r0], -r8
    7a78:	04150008 	ldreq	r0, [r5], #-8
    7a7c:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    7a80:	055d0415 	ldrbeq	r0, [sp, #-1045]	; 0xfffffbeb
    7a84:	b60e0000 	strlt	r0, [lr], -r0
    7a88:	0c00002e 	stceq	0, cr0, [r0], {46}	; 0x2e
    7a8c:	96071409 	strls	r1, [r7], -r9, lsl #8
    7a90:	0f000008 	svceq	0x00000008
    7a94:	0000314e 	andeq	r3, r0, lr, asr #2
    7a98:	540e1809 	strpl	r1, [lr], #-2057	; 0xfffff7f7
    7a9c:	00000000 	andeq	r0, r0, r0
    7aa0:	002de30f 	eoreq	lr, sp, pc, lsl #6
    7aa4:	191b0900 	ldmdbne	fp, {r8, fp}
    7aa8:	000006f2 	strdeq	r0, [r0], -r2
    7aac:	32490f04 	subcc	r0, r9, #4, 30
    7ab0:	1e090000 	cdpne	0, 0, cr0, cr9, cr0, {0}
    7ab4:	0006f219 	andeq	pc, r6, r9, lsl r2	; <UNPREDICTABLE>
    7ab8:	d9210800 	stmdble	r1!, {fp}
    7abc:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
    7ac0:	332c0a21 			; <UNDEFINED> instruction: 0x332c0a21
    7ac4:	07460000 	strbeq	r0, [r6, -r0]
    7ac8:	07510000 	ldrbeq	r0, [r1, -r0]
    7acc:	9b110000 	blls	447ad4 <_bss_end+0x436a54>
    7ad0:	12000008 	andne	r0, r0, #8
    7ad4:	000006f2 	strdeq	r0, [r0], -r2
    7ad8:	2eb61000 	cdpcs	0, 11, cr1, cr6, cr0, {0}
    7adc:	24090000 	strcs	r0, [r9], #-0
    7ae0:	00346705 	eorseq	r6, r4, r5, lsl #14
    7ae4:	00089b00 	andeq	r9, r8, r0, lsl #22
    7ae8:	076a0100 	strbeq	r0, [sl, -r0, lsl #2]!
    7aec:	07700000 	ldrbeq	r0, [r0, -r0]!
    7af0:	9b110000 	blls	447af8 <_bss_end+0x436a78>
    7af4:	00000008 	andeq	r0, r0, r8
    7af8:	0033c513 	eorseq	ip, r3, r3, lsl r5
    7afc:	0a270900 	beq	9c9f04 <_bss_end+0x9b8e84>
    7b00:	00002d33 	andeq	r2, r0, r3, lsr sp
    7b04:	00078501 	andeq	r8, r7, r1, lsl #10
    7b08:	00078b00 	andeq	r8, r7, r0, lsl #22
    7b0c:	089b1100 	ldmeq	fp, {r8, ip}
    7b10:	10000000 	andne	r0, r0, r0
    7b14:	00002ea1 	andeq	r2, r0, r1, lsr #29
    7b18:	640e2a09 	strvs	r2, [lr], #-2569	; 0xfffff5f7
    7b1c:	5400002e 	strpl	r0, [r0], #-46	; 0xffffffd2
    7b20:	01000000 	mrseq	r0, (UNDEF: 0)
    7b24:	000007a4 	andeq	r0, r0, r4, lsr #15
    7b28:	000007af 	andeq	r0, r0, pc, lsr #15
    7b2c:	00089b11 	andeq	r9, r8, r1, lsl fp
    7b30:	02711200 	rsbseq	r1, r1, #0, 4
    7b34:	13000000 	movwne	r0, #0
    7b38:	00003323 	andeq	r3, r0, r3, lsr #6
    7b3c:	980a2e09 	stmdals	sl, {r0, r3, r9, sl, fp, sp}
    7b40:	01000031 	tsteq	r0, r1, lsr r0
    7b44:	000007c4 	andeq	r0, r0, r4, asr #15
    7b48:	000007ca 	andeq	r0, r0, sl, asr #15
    7b4c:	00089b11 	andeq	r9, r8, r1, lsl fp
    7b50:	cc100000 	ldcgt	0, cr0, [r0], {-0}
    7b54:	0900002f 	stmdbeq	r0, {r0, r1, r2, r3, r5}
    7b58:	2df61331 	ldclcs	3, cr1, [r6, #196]!	; 0xc4
    7b5c:	06f80000 	ldrbteq	r0, [r8], r0
    7b60:	e3010000 	movw	r0, #4096	; 0x1000
    7b64:	e9000007 	stmdb	r0, {r0, r1, r2}
    7b68:	11000007 	tstne	r0, r7
    7b6c:	000008a1 	andeq	r0, r0, r1, lsr #17
    7b70:	2fe01000 	svccs	0x00e01000
    7b74:	34090000 	strcc	r0, [r9], #-0
    7b78:	0031080e 	eorseq	r0, r1, lr, lsl #16
    7b7c:	00005400 	andeq	r5, r0, r0, lsl #8
    7b80:	08020100 	stmdaeq	r2, {r8}
    7b84:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    7b88:	9b110000 	blls	447b90 <_bss_end+0x436b10>
    7b8c:	12000008 	andne	r0, r0, #8
    7b90:	000005c9 	andeq	r0, r0, r9, asr #11
    7b94:	2dbe1000 	ldccs	0, cr1, [lr]
    7b98:	37090000 	strcc	r0, [r9, -r0]
    7b9c:	002f820a 	eoreq	r8, pc, sl, lsl #4
    7ba0:	0004db00 	andeq	sp, r4, r0, lsl #22
    7ba4:	08260100 	stmdaeq	r6!, {r8}
    7ba8:	08310000 	ldmdaeq	r1!, {}	; <UNPREDICTABLE>
    7bac:	9b110000 	blls	447bb4 <_bss_end+0x436b34>
    7bb0:	12000008 	andne	r0, r0, #8
    7bb4:	00000054 	andeq	r0, r0, r4, asr r0
    7bb8:	2ffd1300 	svccs	0x00fd1300
    7bbc:	3a090000 	bcc	247bc4 <_bss_end+0x236b44>
    7bc0:	0033730a 	eorseq	r7, r3, sl, lsl #6
    7bc4:	08460100 	stmdaeq	r6, {r8}^
    7bc8:	08650000 	stmdaeq	r5!, {}^	; <UNPREDICTABLE>
    7bcc:	9b110000 	blls	447bd4 <_bss_end+0x436b54>
    7bd0:	12000008 	andne	r0, r0, #8
    7bd4:	00000619 	andeq	r0, r0, r9, lsl r6
    7bd8:	00005412 	andeq	r5, r0, r2, lsl r4
    7bdc:	00541200 	subseq	r1, r4, r0, lsl #4
    7be0:	54120000 	ldrpl	r0, [r2], #-0
    7be4:	12000000 	andne	r0, r0, #0
    7be8:	000008a7 	andeq	r0, r0, r7, lsr #17
    7bec:	2e241400 	cdpcs	4, 2, cr1, cr4, cr0, {0}
    7bf0:	3d090000 	stccc	0, cr0, [r9, #-0]
    7bf4:	002ec705 	eoreq	ip, lr, r5, lsl #14
    7bf8:	08760100 	ldmdaeq	r6!, {r8}^
    7bfc:	9b110000 	blls	447c04 <_bss_end+0x436b84>
    7c00:	12000008 	andne	r0, r0, #8
    7c04:	00000632 	andeq	r0, r0, r2, lsr r6
    7c08:	00005412 	andeq	r5, r0, r2, lsl r4
    7c0c:	00541200 	subseq	r1, r4, r0, lsl #4
    7c10:	54120000 	ldrpl	r0, [r2], #-0
    7c14:	12000000 	andne	r0, r0, #0
    7c18:	000008a7 	andeq	r0, r0, r7, lsr #17
    7c1c:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    7c20:	15000006 	strne	r0, [r0, #-6]
    7c24:	0006fe04 	andeq	pc, r6, r4, lsl #28
    7c28:	96041500 	strls	r1, [r4], -r0, lsl #10
    7c2c:	16000008 	strne	r0, [r0], -r8
    7c30:	0005d404 	andeq	sp, r5, r4, lsl #8
    7c34:	37a51700 	strcc	r1, [r5, r0, lsl #14]!
    7c38:	40090000 	andmi	r0, r9, r0
    7c3c:	0006fe19 	andeq	pc, r6, r9, lsl lr	; <UNPREDICTABLE>
    7c40:	03a52200 			; <UNDEFINED> instruction: 0x03a52200
    7c44:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    7c48:	54030517 	strpl	r0, [r3], #-1303	; 0xfffffae9
    7c4c:	23000100 	movwcs	r0, #256	; 0x100
    7c50:	00003043 	andeq	r3, r0, r3, asr #32
    7c54:	d4140d01 	ldrle	r0, [r4], #-3329	; 0xfffff2ff
    7c58:	05000005 	streq	r0, [r0, #-5]
    7c5c:	01005803 	tsteq	r0, r3, lsl #16
    7c60:	2d602400 	cfstrdcs	mvd2, [r0, #-0]
    7c64:	d5480000 	strble	r0, [r8, #-0]
    7c68:	001c0000 	andseq	r0, ip, r0
    7c6c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7c70:	00023e25 	andeq	r3, r2, r5, lsr #28
    7c74:	00d4f400 	sbcseq	pc, r4, r0, lsl #8
    7c78:	00005400 	andeq	r5, r0, r0, lsl #8
    7c7c:	1a9c0100 	bne	fe708084 <_bss_end+0xfe6f7004>
    7c80:	26000009 	strcs	r0, [r0], -r9
    7c84:	00000338 	andeq	r0, r0, r8, lsr r3
    7c88:	33016001 	movwcc	r6, #4097	; 0x1001
    7c8c:	02000000 	andeq	r0, r0, #0
    7c90:	31267491 			; <UNDEFINED> instruction: 0x31267491
    7c94:	01000007 	tsteq	r0, r7
    7c98:	00330160 	eorseq	r0, r3, r0, ror #2
    7c9c:	91020000 	mrsls	r0, (UNDEF: 2)
    7ca0:	71270070 			; <UNDEFINED> instruction: 0x71270070
    7ca4:	01000003 	tsteq	r0, r3
    7ca8:	0934065a 	ldmdbeq	r4!, {r1, r3, r4, r6, r9, sl}
    7cac:	d4a40000 	strtle	r0, [r4], #0
    7cb0:	00500000 	subseq	r0, r0, r0
    7cb4:	9c010000 	stcls	0, cr0, [r1], {-0}
    7cb8:	0000095f 	andeq	r0, r0, pc, asr r9
    7cbc:	00032928 	andeq	r2, r3, r8, lsr #18
    7cc0:	0003a000 	andeq	sl, r3, r0
    7cc4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7cc8:	00348126 	eorseq	r8, r4, r6, lsr #2
    7ccc:	395a0100 	ldmdbcc	sl, {r8}^
    7cd0:	00000171 	andeq	r0, r0, r1, ror r1
    7cd4:	23609102 	cmncs	r0, #-2147483648	; 0x80000000
    7cd8:	00002ff4 	strdeq	r2, [r0], -r4
    7cdc:	6c185c01 	ldcvs	12, cr5, [r8], {1}
    7ce0:	02000000 	andeq	r0, r0, #0
    7ce4:	27006c91 			; <UNDEFINED> instruction: 0x27006c91
    7ce8:	00000351 	andeq	r0, r0, r1, asr r3
    7cec:	79065201 	stmdbvc	r6, {r0, r9, ip, lr}
    7cf0:	54000009 	strpl	r0, [r0], #-9
    7cf4:	500000d4 	ldrdpl	r0, [r0], -r4
    7cf8:	01000000 	mrseq	r0, (UNDEF: 0)
    7cfc:	0009a49c 	muleq	r9, ip, r4
    7d00:	03292800 			; <UNDEFINED> instruction: 0x03292800
    7d04:	03a00000 	moveq	r0, #0
    7d08:	91020000 	mrsls	r0, (UNDEF: 2)
    7d0c:	34812664 	strcc	r2, [r1], #1636	; 0x664
    7d10:	52010000 	andpl	r0, r1, #0
    7d14:	00017138 	andeq	r7, r1, r8, lsr r1
    7d18:	60910200 	addsvs	r0, r1, r0, lsl #4
    7d1c:	002ff423 	eoreq	pc, pc, r3, lsr #8
    7d20:	18540100 	ldmdane	r4, {r8}^
    7d24:	0000006c 	andeq	r0, r0, ip, rrx
    7d28:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    7d2c:	00033127 	andeq	r3, r3, r7, lsr #2
    7d30:	064d0100 	strbeq	r0, [sp], -r0, lsl #2
    7d34:	000009be 			; <UNDEFINED> instruction: 0x000009be
    7d38:	0000d410 	andeq	sp, r0, r0, lsl r4
    7d3c:	00000044 	andeq	r0, r0, r4, asr #32
    7d40:	09da9c01 	ldmibeq	sl, {r0, sl, fp, ip, pc}^
    7d44:	29280000 	stmdbcs	r8!, {}	; <UNPREDICTABLE>
    7d48:	a0000003 	andge	r0, r0, r3
    7d4c:	02000003 	andeq	r0, r0, #3
    7d50:	81266c91 			; <UNDEFINED> instruction: 0x81266c91
    7d54:	01000034 	tsteq	r0, r4, lsr r0
    7d58:	012e454d 			; <UNDEFINED> instruction: 0x012e454d
    7d5c:	91020000 	mrsls	r0, (UNDEF: 2)
    7d60:	11270068 			; <UNDEFINED> instruction: 0x11270068
    7d64:	01000003 	tsteq	r0, r3
    7d68:	09f40648 	ldmibeq	r4!, {r3, r6, r9, sl}^
    7d6c:	d3cc0000 	bicle	r0, ip, #0
    7d70:	00440000 	subeq	r0, r4, r0
    7d74:	9c010000 	stcls	0, cr0, [r1], {-0}
    7d78:	00000a10 	andeq	r0, r0, r0, lsl sl
    7d7c:	00032928 	andeq	r2, r3, r8, lsr #18
    7d80:	0003a000 	andeq	sl, r3, r0
    7d84:	6c910200 	lfmvs	f0, 4, [r1], {0}
    7d88:	00348126 	eorseq	r8, r4, r6, lsr #2
    7d8c:	44480100 	strbmi	r0, [r8], #-256	; 0xffffff00
    7d90:	0000012e 	andeq	r0, r0, lr, lsr #2
    7d94:	00689102 	rsbeq	r9, r8, r2, lsl #2
    7d98:	0002c929 	andeq	ip, r2, r9, lsr #18
    7d9c:	18430100 	stmdane	r3, {r8}^
    7da0:	00000a2a 	andeq	r0, r0, sl, lsr #20
    7da4:	0000d394 	muleq	r0, r4, r3
    7da8:	00000038 	andeq	r0, r0, r8, lsr r0
    7dac:	0a469c01 	beq	11aedb8 <_bss_end+0x119dd38>
    7db0:	29280000 	stmdbcs	r8!, {}	; <UNPREDICTABLE>
    7db4:	a0000003 	andge	r0, r0, r3
    7db8:	02000003 	andeq	r0, r0, #3
    7dbc:	722a7491 	eorvc	r7, sl, #-1862270976	; 0x91000000
    7dc0:	01006765 	tsteq	r0, r5, ror #14
    7dc4:	00df5243 	sbcseq	r5, pc, r3, asr #4
    7dc8:	91020000 	mrsls	r0, (UNDEF: 2)
    7dcc:	ed2b0070 	stc	0, cr0, [fp, #-448]!	; 0xfffffe40
    7dd0:	01000002 	tsteq	r0, r2
    7dd4:	0a57013d 	beq	15c82d0 <_bss_end+0x15b7250>
    7dd8:	6d000000 	stcvs	0, cr0, [r0, #-0]
    7ddc:	2c00000a 	stccs	0, cr0, [r0], {10}
    7de0:	00000329 	andeq	r0, r0, r9, lsr #6
    7de4:	000003a0 	andeq	r0, r0, r0, lsr #7
    7de8:	001afb2d 	andseq	pc, sl, sp, lsr #22
    7dec:	3c3d0100 	ldfccs	f0, [sp], #-0
    7df0:	00000271 	andeq	r0, r0, r1, ror r2
    7df4:	0a462e00 	beq	11935fc <_bss_end+0x118257c>
    7df8:	2e450000 	cdpcs	0, 4, cr0, cr5, cr0, {0}
    7dfc:	0a880000 	beq	fe207e04 <_bss_end+0xfe1f6d84>
    7e00:	d3600000 	cmnle	r0, #0
    7e04:	00340000 	eorseq	r0, r4, r0
    7e08:	9c010000 	stcls	0, cr0, [r1], {-0}
    7e0c:	00000a99 	muleq	r0, r9, sl
    7e10:	000a572f 	andeq	r5, sl, pc, lsr #14
    7e14:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7e18:	000a602f 	andeq	r6, sl, pc, lsr #32
    7e1c:	70910200 	addsvc	r0, r1, r0, lsl #4
    7e20:	30d33000 	sbcscc	r3, r3, r0
    7e24:	36010000 	strcc	r0, [r1], -r0
    7e28:	00d35033 	sbcseq	r5, r3, r3, lsr r0
    7e2c:	00001000 	andeq	r1, r0, r0
    7e30:	319c0100 	orrscc	r0, ip, r0, lsl #2
    7e34:	00002f39 	andeq	r2, r0, r9, lsr pc
    7e38:	20112c01 	andscs	r2, r1, r1, lsl #24
    7e3c:	300000d3 	ldrdcc	r0, [r0], -r3
    7e40:	01000000 	mrseq	r0, (UNDEF: 0)
    7e44:	32e0329c 	rsccc	r3, r0, #156, 4	; 0xc0000009
    7e48:	0f010000 	svceq	0x00010000
    7e4c:	000b1c19 	andeq	r1, fp, r9, lsl ip
    7e50:	00d28000 	sbcseq	r8, r2, r0
    7e54:	0000a000 	andeq	sl, r0, r0
    7e58:	1c9c0100 	ldfnes	f0, [ip], {0}
    7e5c:	2a00000b 	bcs	7e90 <CPSR_IRQ_INHIBIT+0x7e10>
    7e60:	01003072 	tsteq	r0, r2, ror r0
    7e64:	0054500f 	subseq	r5, r4, pc
    7e68:	50010000 	andpl	r0, r1, r0
    7e6c:	0031722a 	eorseq	r7, r1, sl, lsr #4
    7e70:	54501001 	ldrbpl	r1, [r0], #-1
    7e74:	01000000 	mrseq	r0, (UNDEF: 0)
    7e78:	32722a51 	rsbscc	r2, r2, #331776	; 0x51000
    7e7c:	50110100 	andspl	r0, r1, r0, lsl #2
    7e80:	00000054 	andeq	r0, r0, r4, asr r0
    7e84:	3b265201 	blcc	99c690 <_bss_end+0x98b610>
    7e88:	01000031 	tsteq	r0, r1, lsr r0
    7e8c:	00545712 	subseq	r5, r4, r2, lsl r7
    7e90:	53010000 	movwpl	r0, #4096	; 0x1000
    7e94:	00322823 	eorseq	r2, r2, r3, lsr #16
    7e98:	13150100 	tstne	r5, #0, 2
    7e9c:	000005fa 	strdeq	r0, [r0], -sl
    7ea0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7ea4:	05d40415 	ldrbeq	r0, [r4, #1045]	; 0x415
    7ea8:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    7eac:	0400000f 	streq	r0, [r0], #-15
    7eb0:	0021ab00 	eoreq	sl, r1, r0, lsl #22
    7eb4:	61010400 	tstvs	r1, r0, lsl #8
    7eb8:	04000000 	streq	r0, [r0], #-0
    7ebc:	000034b4 			; <UNDEFINED> instruction: 0x000034b4
    7ec0:	00000026 	andeq	r0, r0, r6, lsr #32
    7ec4:	0000d564 	andeq	sp, r0, r4, ror #10
    7ec8:	00000058 	andeq	r0, r0, r8, asr r0
    7ecc:	00002e54 	andeq	r2, r0, r4, asr lr
    7ed0:	70080102 	andvc	r0, r8, r2, lsl #2
    7ed4:	03000005 	movweq	r0, #5
    7ed8:	00000025 	andeq	r0, r0, r5, lsr #32
    7edc:	96050202 	strls	r0, [r5], -r2, lsl #4
    7ee0:	04000005 	streq	r0, [r0], #-5
    7ee4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    7ee8:	7f050074 	svcvc	0x00050074
    7eec:	02000009 	andeq	r0, r0, #9
    7ef0:	004b0707 	subeq	r0, fp, r7, lsl #14
    7ef4:	01020000 	mrseq	r0, (UNDEF: 2)
    7ef8:	00056708 	andeq	r6, r5, r8, lsl #14
    7efc:	004b0600 	subeq	r0, fp, r0, lsl #12
    7f00:	95050000 	strls	r0, [r5, #-0]
    7f04:	02000007 	andeq	r0, r0, #7
    7f08:	00680708 	rsbeq	r0, r8, r8, lsl #14
    7f0c:	57030000 	strpl	r0, [r3, -r0]
    7f10:	02000000 	andeq	r0, r0, #0
    7f14:	03d90702 	bicseq	r0, r9, #524288	; 0x80000
    7f18:	e1050000 	mrs	r0, (UNDEF: 5)
    7f1c:	02000005 	andeq	r0, r0, #5
    7f20:	00850709 	addeq	r0, r5, r9, lsl #14
    7f24:	6f030000 	svcvs	0x00030000
    7f28:	06000000 	streq	r0, [r0], -r0
    7f2c:	0000006f 	andeq	r0, r0, pc, rrx
    7f30:	ee070402 	cdp	4, 0, cr0, cr7, cr2, {0}
    7f34:	03000040 	movweq	r0, #64	; 0x40
    7f38:	00000085 	andeq	r0, r0, r5, lsl #1
    7f3c:	00008506 	andeq	r8, r0, r6, lsl #10
    7f40:	61680700 	cmnvs	r8, r0, lsl #14
    7f44:	0503006c 	streq	r0, [r3, #-108]	; 0xffffff94
    7f48:	0002820b 	andeq	r8, r2, fp, lsl #4
    7f4c:	04840800 	streq	r0, [r4], #2048	; 0x800
    7f50:	07030000 	streq	r0, [r3, -r0]
    7f54:	00008c19 	andeq	r8, r0, r9, lsl ip
    7f58:	e6b28000 	ldrt	r8, [r2], r0
    7f5c:	05c9080e 	strbeq	r0, [r9, #2062]	; 0x80e
    7f60:	0a030000 	beq	c7f68 <_bss_end+0xb6ee8>
    7f64:	00028e1a 	andeq	r8, r2, sl, lsl lr
    7f68:	00000000 	andeq	r0, r0, r0
    7f6c:	044f0820 	strbeq	r0, [pc], #-2080	; 7f74 <CPSR_IRQ_INHIBIT+0x7ef4>
    7f70:	0d030000 	stceq	0, cr0, [r3, #-0]
    7f74:	00028e1a 	andeq	r8, r2, sl, lsl lr
    7f78:	20000000 	andcs	r0, r0, r0
    7f7c:	05870920 	streq	r0, [r7, #2336]	; 0x920
    7f80:	10030000 	andne	r0, r3, r0
    7f84:	00007b15 	andeq	r7, r0, r5, lsl fp
    7f88:	70083600 	andvc	r3, r8, r0, lsl #12
    7f8c:	03000003 	movweq	r0, #3
    7f90:	028e1a42 	addeq	r1, lr, #270336	; 0x42000
    7f94:	50000000 	andpl	r0, r0, r0
    7f98:	47082021 	strmi	r2, [r8, -r1, lsr #32]
    7f9c:	03000003 	movweq	r0, #3
    7fa0:	028e1a71 	addeq	r1, lr, #462848	; 0x71000
    7fa4:	b2000000 	andlt	r0, r0, #0
    7fa8:	b30a2000 	movwlt	r2, #40960	; 0xa000
    7fac:	0500002f 	streq	r0, [r0, #-47]	; 0xffffffd1
    7fb0:	00003804 	andeq	r3, r0, r4, lsl #16
    7fb4:	0d730300 	ldcleq	3, cr0, [r3, #-0]
    7fb8:	0000014e 	andeq	r0, r0, lr, asr #2
    7fbc:	0030ea0b 	eorseq	lr, r0, fp, lsl #20
    7fc0:	fb0b0000 	blx	2c7fca <_bss_end+0x2b6f4a>
    7fc4:	01000033 	tsteq	r0, r3, lsr r0
    7fc8:	0034230b 	eorseq	r2, r4, fp, lsl #6
    7fcc:	0a0b0200 	beq	2c87d4 <_bss_end+0x2b7754>
    7fd0:	03000033 	movweq	r0, #51	; 0x33
    7fd4:	002f4f0b 	eoreq	r4, pc, fp, lsl #30
    7fd8:	5c0b0400 	cfstrspl	mvf0, [fp], {-0}
    7fdc:	0500002f 	streq	r0, [r0, #-47]	; 0xffffffd1
    7fe0:	0033620b 	eorseq	r6, r3, fp, lsl #4
    7fe4:	8c0b0600 	stchi	6, cr0, [fp], {-0}
    7fe8:	07000034 	smladxeq	r0, r4, r0, r0
    7fec:	00349a0b 	eorseq	r9, r4, fp, lsl #20
    7ff0:	6e0b0800 	cdpvs	8, 0, cr0, cr11, cr0, {0}
    7ff4:	09000031 	stmdbeq	r0, {r0, r4, r5}
    7ff8:	30320a00 	eorscc	r0, r2, r0, lsl #20
    7ffc:	04050000 	streq	r0, [r5], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:14
	ldr pc, _reset_ptr						;@ 0x00 - reset - vyvolano pri resetu procesoru
    8000:	00000038 	andeq	r0, r0, r8, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:15
	ldr pc, _undefined_instruction_ptr		;@ 0x04 - undefined instruction - vyjimka, vyvolana pri dekodovani nezname instrukce
    8004:	910d8103 	tstls	sp, r3, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:16
	ldr pc, _software_interrupt_ptr			;@ 0x08 - software interrupt - vyvolano, kdyz procesor provede instrukci swi
    8008:	0b000001 	bleq	8014 <_start+0x14>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:17
	ldr pc, _prefetch_abort_ptr				;@ 0x0C - prefetch abort - vyvolano, kdyz se procesor snazi napr. nacist instrukci z mista, odkud nacist nejde
    800c:	000019a6 	andeq	r1, r0, r6, lsr #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:18
	ldr pc, _data_abort_ptr					;@ 0x10 - data abort - vyvolano, kdyz se procesor snazi napr. nacist data z mista, odkud nacist nejdou
    8010:	2ddb0b00 	vldrcs	d16, [fp]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:19
	ldr pc, _unused_handler_ptr				;@ 0x14 - unused - ve specifikaci ARM neni uvedeno zadne vyuziti
    8014:	0b010000 	bleq	4801c <_bss_end+0x36f9c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:20
	ldr pc, _irq_ptr						;@ 0x18 - IRQ - hardwarove preruseni (general purpose)
    8018:	000031b9 			; <UNDEFINED> instruction: 0x000031b9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:21
	ldr pc, _fast_interrupt_ptr				;@ 0x1C - fast interrupt request - prioritni IRQ pro vysokorychlostni zalezitosti
    801c:	31c40b02 	biccc	r0, r4, r2, lsl #22
    8020:	0b030000 	bleq	c8028 <_bss_end+0xb6fa8>
    8024:	00003231 	andeq	r3, r0, r1, lsr r2
    8028:	2dd10b04 	vldrcs	d16, [r1, #16]
    802c:	0b050000 	bleq	148034 <_bss_end+0x136fb4>
    8030:	00003010 	andeq	r3, r0, r0, lsl r0
    8034:	30210b06 	eorcc	r0, r1, r6, lsl #22
    8038:	00070000 	andeq	r0, r7, r0
    803c:	0034090a 	eorseq	r0, r4, sl, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:52
	mov r0, #0x8000			;@ adresa 0x8000 (_start) do r0
    8040:	38040500 	stmdacc	r4, {r8, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:53
    mov r1, #0x0000			;@ adresa 0x0000 (pocatek RAM) do r1 - tam budeme vkladat tabulku vektoru preruseni
    8044:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:57
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8048:	01f20d8d 	mvnseq	r0, sp, lsl #27
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:58
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	410c0000 	mrsmi	r0, (UNDEF: 12)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:59
    ldmia r0!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	1d005855 	stcne	8, cr5, [r0, #-340]	; 0xfffffeac
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:60
    stmia r1!,{r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	0032cd0b 	eorseq	ip, r2, fp, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:63
	mov r4, #0x0
    8058:	a80b2b00 	stmdage	fp, {r8, r9, fp, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:66
    mov r0, #(CPSR_MODE_SVR | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    805c:	2d000034 	stccs	0, cr0, [r0, #-208]	; 0xffffff30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:67
    msr cpsr_c, r0
    8060:	0034ae0b 	eorseq	sl, r4, fp, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:68
	add sp, r4, #0x8000
    8064:	530c2e00 	movwpl	r2, #52736	; 0xce00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:71
	mov r0, #(CPSR_MODE_IRQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8068:	3000494d 	andcc	r4, r0, sp, asr #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:72
    msr cpsr_c, r0
    806c:	0034310b 	eorseq	r3, r4, fp, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:73
	add sp, r4, #0x7000
    8070:	380b3100 	stmdacc	fp, {r8, ip, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:76
	mov r0, #(CPSR_MODE_FIQ | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8074:	32000034 	andcc	r0, r0, #52	; 0x34
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:77
    msr cpsr_c, r0
    8078:	00343f0b 	eorseq	r3, r4, fp, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:78
	add sp, r4, #0x6000
    807c:	460b3300 	strmi	r3, [fp], -r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:81
    mov r0, #(CPSR_MODE_SYS | CPSR_IRQ_INHIBIT | CPSR_FIQ_INHIBIT)
    8080:	34000034 	strcc	r0, [r0], #-52	; 0xffffffcc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:82
    msr cpsr_c, r0
    8084:	4332490c 	teqmi	r2, #12, 18	; 0x30000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:83
	add sp, r4, #0x5000
    8088:	530c3500 	movwpl	r3, #50432	; 0xc500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:86
	mrc p15, #0, r4, c1, c0, #0
    808c:	36004950 			; <UNDEFINED> instruction: 0x36004950
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:87
	orr r4, #0x400000
    8090:	4d43500c 	stclmi	0, cr5, [r3, #-48]	; 0xffffffd0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:88
	mcr p15, #0, r4, c1, c0, #0
    8094:	ae0b3700 	cdpge	7, 0, cr3, cr11, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:90
	bl _c_startup			;@ C startup kod (inicializace prostredi)
    8098:	3900002f 	stmdbcc	r0, {r0, r1, r2, r3, r5}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:91
	bl _cpp_startup			;@ C++ startup kod (volani globalnich konstruktoru, ...)
    809c:	02b30800 	adcseq	r0, r3, #0, 16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:92
	bl _kernel_main			;@ skocime do hlavniho kodu jadra (v C)
    80a0:	a4030000 	strge	r0, [r3], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:93
	bl _cpp_shutdown		;@ C++ shutdown kod (volani globalnich destruktoru, ...)
    80a4:	00028e1a 	andeq	r8, r2, sl, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/start.s:95
	b hang
    80a8:	00b40000 	adcseq	r0, r4, r0
__cxa_guard_acquire():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:11
    {
    80ac:	03610820 	cmneq	r1, #32, 16	; 0x200000
    80b0:	b3030000 	movwlt	r0, #12288	; 0x3000
    80b4:	00028e1a 	andeq	r8, r2, sl, lsl lr
    80b8:	10400000 	subne	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:12
        return !*(char*)(g);
    80bc:	032e0820 			; <UNDEFINED> instruction: 0x032e0820
    80c0:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    80c4:	00028e1a 	andeq	r8, r2, sl, lsl lr
    80c8:	20500000 	subscs	r0, r0, r0
    80cc:	03ec0820 	mvneq	r0, #32, 16	; 0x200000
    80d0:	bf030000 	svclt	0x00030000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:13
    }
    80d4:	00028e1a 	andeq	r8, r2, sl, lsl lr
    80d8:	80400000 	subhi	r0, r0, r0
    80dc:	04590820 	ldrbeq	r0, [r9], #-2080	; 0xfffff7e0
    80e0:	c0030000 	andgt	r0, r3, r0
__cxa_guard_release():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:16
    {
    80e4:	00028e1a 	andeq	r8, r2, sl, lsl lr
    80e8:	80500000 	subshi	r0, r0, r0
    80ec:	079e0d20 	ldreq	r0, [lr, r0, lsr #26]
    80f0:	04050000 	streq	r0, [r5], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:17
        *(char*)g = 1;
    80f4:	00000038 	andeq	r0, r0, r8, lsr r0
    80f8:	0b0dc203 	bleq	37890c <_bss_end+0x36788c>
    80fc:	0000330e 	andeq	r3, r0, lr, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:18
    }
    8100:	0a090b00 	beq	24ad08 <_bss_end+0x239c88>
    8104:	0b010000 	bleq	4810c <_bss_end+0x3708c>
    8108:	00000947 	andeq	r0, r0, r7, asr #18
    810c:	12850b02 	addne	r0, r5, #2048	; 0x800
__cxa_guard_abort():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:21
    {
    8110:	0b030000 	bleq	c8118 <_bss_end+0xb7098>
    8114:	00000865 	andeq	r0, r0, r5, ror #16
    8118:	08000b04 	stmdaeq	r0, {r2, r8, r9, fp}
    811c:	0b050000 	bleq	148124 <_bss_end+0x1370a4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:22
    }
    8120:	00000746 	andeq	r0, r0, r6, asr #14
    8124:	07e10b06 	strbeq	r0, [r1, r6, lsl #22]!
    8128:	00070000 	andeq	r0, r7, r0
    812c:	00a20e00 	adceq	r0, r2, r0, lsl #28
__dso_handle():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:26
{
    8130:	04020000 	streq	r0, [r2], #-0
    8134:	0040e907 	subeq	lr, r0, r7, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:28
}
    8138:	02870300 	addeq	r0, r7, #0, 6
    813c:	b20e0000 	andlt	r0, lr, #0
    8140:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8144:	000000c2 	andeq	r0, r0, r2, asr #1
__cxa_atexit():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:31
{
    8148:	0000d20e 	andeq	sp, r0, lr, lsl #4
    814c:	00df0e00 	sbcseq	r0, pc, r0, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:33
}
    8150:	ef0e0000 	svc	0x000e0000
    8154:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8158:	000001f2 	strdeq	r0, [r0], -r2
    815c:	0002020e 	andeq	r0, r2, lr, lsl #4
__cxa_pure_virtual():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:36
{
    8160:	02120e00 	andseq	r0, r2, #0, 28
    8164:	220e0000 	andcs	r0, lr, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:38
}
    8168:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    816c:	00000232 	andeq	r0, r0, r2, lsr r2
    8170:	0091040f 	addseq	r0, r1, pc, lsl #8
    8174:	01020000 	mrseq	r0, (UNDEF: 2)
__aeabi_unwind_cpp_pr1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:41
{
    8178:	0040a502 	subeq	sl, r0, r2, lsl #10
    817c:	91041000 	mrsls	r1, (UNDEF: 4)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/cxx.cpp:42 (discriminator 1)
    while (true)
    8180:	11000000 	mrsne	r0, (UNDEF: 0)
_ZN13CGPIO_HandlerC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:8
CGPIO_Handler::CGPIO_Handler(unsigned int gpio_base_addr)
    8184:	00000b95 	muleq	r0, r5, fp
    8188:	07030418 	smladeq	r3, r8, r4, r0
    818c:	00000519 	andeq	r0, r0, r9, lsl r5
    8190:	000b1312 	andeq	r1, fp, r2, lsl r3
    8194:	85040700 	strhi	r0, [r4, #-1792]	; 0xfffff900
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:9
: mGPIO(reinterpret_cast<unsigned int*>(gpio_base_addr))
    8198:	04000000 	streq	r0, [r0], #-0
    819c:	05011006 	streq	r1, [r1, #-6]
    81a0:	0c000003 	stceq	0, cr0, [r0], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:11
    bzero(&mPin_Reservations_Read, sizeof(mPin_Reservations_Read));
    81a4:	00584548 	subseq	r4, r8, r8, asr #10
    81a8:	45440c10 	strbmi	r0, [r4, #-3088]	; 0xfffff3f0
    81ac:	000a0043 	andeq	r0, sl, r3, asr #32
    81b0:	0002e503 	andeq	lr, r2, r3, lsl #10
    81b4:	0b201300 	bleq	80cdbc <_bss_end+0x7fbd3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:12
    bzero(&mPin_Reservations_Write, sizeof(mPin_Reservations_Write));
    81b8:	04080000 	streq	r0, [r8], #-0
    81bc:	032e0c24 			; <UNDEFINED> instruction: 0x032e0c24
    81c0:	79140000 	ldmdbvc	r4, {}	; <UNPREDICTABLE>
    81c4:	16260400 	strtne	r0, [r6], -r0, lsl #8
    81c8:	00000085 	andeq	r0, r0, r5, lsl #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:13
}
    81cc:	00781400 	rsbseq	r1, r8, r0, lsl #8
    81d0:	85162704 	ldrhi	r2, [r6, #-1796]	; 0xfffff8fc
    81d4:	04000000 	streq	r0, [r0], #-0
    81d8:	0c721500 	cfldr64eq	mvdx1, [r2], #-0
_ZNK13CGPIO_Handler19Get_GPFSEL_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:16
{
    81dc:	0c040000 	stceq	0, cr0, [r4], {-0}
    81e0:	0003051b 	andeq	r0, r3, fp, lsl r5
    81e4:	160a0100 	strne	r0, [sl], -r0, lsl #2
    81e8:	00000be5 	andeq	r0, r0, r5, ror #23
    81ec:	1f280d04 	svcne	0x00280d04
    81f0:	01000005 	tsteq	r0, r5
    81f4:	000b9517 	andeq	r9, fp, r7, lsl r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:17
    if (pin > hal::GPIO_Pin_Count)
    81f8:	0e100400 	cfmulseq	mvf0, mvf0, mvf0
    81fc:	00000c5f 	andeq	r0, r0, pc, asr ip
    8200:	00000524 	andeq	r0, r0, r4, lsr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:18
        return false;
    8204:	00036201 	andeq	r6, r3, r1, lsl #4
    8208:	00037700 	andeq	r7, r3, r0, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:20
    reg = pin / 10;
    820c:	05241800 	streq	r1, [r4, #-2048]!	; 0xfffff800
    8210:	85190000 	ldrhi	r0, [r9, #-0]
    8214:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    8218:	00000085 	andeq	r0, r0, r5, lsl #1
    821c:	00008519 	andeq	r8, r0, r9, lsl r5
    8220:	961a0000 	ldrls	r0, [sl], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:31
    bit_idx = (pin % 10) * 3;
    8224:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    8228:	0b800a12 	bleq	fe00aa78 <_bss_end+0xfdff99f8>
    822c:	8c010000 	stchi	0, cr0, [r1], {-0}
    8230:	92000003 	andls	r0, r0, #3
    8234:	18000003 	stmdane	r0, {r0, r1}
    8238:	00000524 	andeq	r0, r0, r4, lsr #10
    823c:	0b9e1b00 	bleq	fe78ee44 <_bss_end+0xfe77ddc4>
    8240:	14040000 	strne	r0, [r4], #-0
    8244:	000c020f 	andeq	r0, ip, pc, lsl #4
    8248:	00052a00 	andeq	r2, r5, r0, lsl #20
    824c:	03ab0100 			; <UNDEFINED> instruction: 0x03ab0100
    8250:	03b60000 			; <UNDEFINED> instruction: 0x03b60000
    8254:	24180000 	ldrcs	r0, [r8], #-0
    8258:	19000005 	stmdbne	r0, {r0, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:33
    return true;
    825c:	00000025 	andeq	r0, r0, r5, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:34
}
    8260:	0b9e1b00 	bleq	fe78ee68 <_bss_end+0xfe77dde8>
    8264:	15040000 	strne	r0, [r4, #-0]
    8268:	000ba90f 	andeq	sl, fp, pc, lsl #18
    826c:	00052a00 	andeq	r2, r5, r0, lsl #20
    8270:	03cf0100 	biceq	r0, pc, #0, 2
_ZNK13CGPIO_Handler18Get_GPCLR_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:37
{
    8274:	03da0000 	bicseq	r0, sl, #0
    8278:	24180000 	ldrcs	r0, [r8], #-0
    827c:	19000005 	stmdbne	r0, {r0, r2}
    8280:	00000519 	andeq	r0, r0, r9, lsl r5
    8284:	0b9e1b00 	bleq	fe78ee8c <_bss_end+0xfe77de0c>
    8288:	16040000 	strne	r0, [r4], -r0
    828c:	000c860f 	andeq	r8, ip, pc, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:38
    if (pin > hal::GPIO_Pin_Count)
    8290:	00052a00 	andeq	r2, r5, r0, lsl #20
    8294:	03f30100 	mvnseq	r0, #0, 2
    8298:	03fe0000 	mvnseq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:39
        return false;
    829c:	24180000 	ldrcs	r0, [r8], #-0
    82a0:	19000005 	stmdbne	r0, {r0, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPCLR0 : hal::GPIO_Reg::GPCLR1);
    82a4:	000002e5 	andeq	r0, r0, r5, ror #5
    82a8:	0b9e1b00 	bleq	fe78eeb0 <_bss_end+0xfe77de30>
    82ac:	17040000 	strne	r0, [r4, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 1)
    82b0:	000c310f 	andeq	r3, ip, pc, lsl #2
    82b4:	00052a00 	andeq	r2, r5, r0, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 2)
    82b8:	04170100 	ldreq	r0, [r7], #-256	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:41 (discriminator 4)
    82bc:	04220000 	strteq	r0, [r2], #-0
    82c0:	24180000 	ldrcs	r0, [r8], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:42 (discriminator 4)
    bit_idx = pin % 32;
    82c4:	19000005 	stmdbne	r0, {r0, r2}
    82c8:	00000085 	andeq	r0, r0, r5, lsl #1
    82cc:	0b9e1b00 	bleq	fe78eed4 <_bss_end+0xfe77de54>
    82d0:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:44 (discriminator 4)
    return true;
    82d4:	000bf10f 	andeq	pc, fp, pc, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:45
}
    82d8:	00052a00 	andeq	r2, r5, r0, lsl #20
    82dc:	043b0100 	ldrteq	r0, [fp], #-256	; 0xffffff00
    82e0:	04460000 	strbeq	r0, [r6], #-0
    82e4:	24180000 	ldrcs	r0, [r8], #-0
_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:48
{
    82e8:	19000005 	stmdbne	r0, {r0, r2}
    82ec:	000002cb 	andeq	r0, r0, fp, asr #5
    82f0:	0ab11c00 	beq	fec4f2f8 <_bss_end+0xfec3e278>
    82f4:	1b040000 	blne	1082fc <_bss_end+0xf727c>
    82f8:	000a8111 	andeq	r8, sl, r1, lsl r1
    82fc:	00045a00 	andeq	r5, r4, r0, lsl #20
    8300:	00046000 	andeq	r6, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:49
    if (pin > hal::GPIO_Pin_Count)
    8304:	05241800 	streq	r1, [r4, #-2048]!	; 0xfffff800
    8308:	1c000000 	stcne	0, cr0, [r0], {-0}
    830c:	00000aa4 	andeq	r0, r0, r4, lsr #21
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:50
        return false;
    8310:	42111c04 	andsmi	r1, r1, #4, 24	; 0x400
    8314:	7400000c 	strvc	r0, [r0], #-12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPSET0 : hal::GPIO_Reg::GPSET1);
    8318:	7a000004 	bvc	8330 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x48>
    831c:	18000004 	stmdane	r0, {r2}
    8320:	00000524 	andeq	r0, r0, r4, lsr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 1)
    8324:	0a5c1c00 	beq	170f32c <_bss_end+0x16fe2ac>
    8328:	1d040000 	stcne	0, cr0, [r4, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 2)
    832c:	000b2a11 	andeq	r2, fp, r1, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:52 (discriminator 4)
    8330:	00048e00 	andeq	r8, r4, r0, lsl #28
    8334:	00049400 	andeq	r9, r4, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:53 (discriminator 4)
    bit_idx = pin % 32;
    8338:	05241800 	streq	r1, [r4, #-2048]!	; 0xfffff800
    833c:	1c000000 	stcne	0, cr0, [r0], {-0}
    8340:	000013de 	ldrdeq	r1, [r0], -lr
    8344:	1b0a1f04 	blne	28ff5c <_bss_end+0x27eedc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:55 (discriminator 4)
    return true;
    8348:	a800000c 	stmdage	r0, {r2, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:56
}
    834c:	ae000004 	cdpge	0, 0, cr0, cr0, cr4, {0}
    8350:	18000004 	stmdane	r0, {r2}
    8354:	00000524 	andeq	r0, r0, r4, lsr #10
    8358:	0a9f1c00 	beq	fe7cf360 <_bss_end+0xfe7be2e0>
_ZNK13CGPIO_Handler18Get_GPLEV_LocationEjRjS0_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:59
{
    835c:	21040000 	mrscs	r0, (UNDEF: 4)
    8360:	000bbc0a 	andeq	fp, fp, sl, lsl #24
    8364:	0004c200 	andeq	ip, r4, r0, lsl #4
    8368:	0004d700 	andeq	sp, r4, r0, lsl #14
    836c:	05241800 	streq	r1, [r4, #-2048]!	; 0xfffff800
    8370:	85190000 	ldrhi	r0, [r9, #-0]
    8374:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:60
    if (pin > hal::GPIO_Pin_Count)
    8378:	00000530 	andeq	r0, r0, r0, lsr r5
    837c:	00008519 	andeq	r8, r0, r9, lsl r5
    8380:	4c1d0000 	ldcmi	0, cr0, [sp], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:61
        return false;
    8384:	0400000b 	streq	r0, [r0], #-11
    8388:	053c232b 	ldreq	r2, [ip, #-811]!	; 0xfffffcd5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63
    reg = static_cast<uint32_t>((pin < 32) ? hal::GPIO_Reg::GPLEV0 : hal::GPIO_Reg::GPLEV1);
    838c:	1d000000 	stcne	0, cr0, [r0, #-0]
    8390:	00000c13 	andeq	r0, r0, r3, lsl ip
    8394:	85122c04 	ldrhi	r2, [r2, #-3076]	; 0xfffff3fc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 1)
    8398:	04000000 	streq	r0, [r0], #-0
    839c:	000bd31d 	andeq	sp, fp, sp, lsl r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 2)
    83a0:	122d0400 	eorne	r0, sp, #0, 8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:63 (discriminator 4)
    83a4:	00000085 	andeq	r0, r0, r5, lsl #1
    83a8:	0bdc1d08 	bleq	ff70f7d0 <_bss_end+0xff6fe750>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:64 (discriminator 4)
    bit_idx = pin % 32;
    83ac:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    83b0:	00030a0f 	andeq	r0, r3, pc, lsl #20
    83b4:	4e1d0c00 	cdpmi	12, 1, cr0, cr13, cr0, {0}
    83b8:	0400000a 	streq	r0, [r0], #-10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:66 (discriminator 4)
    return true;
    83bc:	02e5122f 	rsceq	r1, r5, #-268435454	; 0xf0000002
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:67
}
    83c0:	00140000 	andseq	r0, r4, r0
    83c4:	002c040f 	eoreq	r0, ip, pc, lsl #8
    83c8:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
    83cc:	0f000005 	svceq	0x00000005
_ZN13CGPIO_Handler17Set_GPIO_FunctionEj14NGPIO_Function():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:70
{
    83d0:	0002d804 	andeq	sp, r2, r4, lsl #16
    83d4:	d8041000 	stmdale	r4, {ip}
    83d8:	0f000002 	svceq	0x00000002
    83dc:	00002504 	andeq	r2, r0, r4, lsl #10
    83e0:	52040f00 	andpl	r0, r4, #0, 30
    83e4:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:72
    if (!Get_GPFSEL_Location(pin, reg, bit))
    83e8:	00000536 	andeq	r0, r0, r6, lsr r5
    83ec:	000b651e 	andeq	r6, fp, lr, lsl r5
    83f0:	11320400 	teqne	r2, r0, lsl #8
    83f4:	000002d8 	ldrdeq	r0, [r0], -r8
    83f8:	0009871f 	andeq	r8, r9, pc, lsl r7
    83fc:	14060500 	strne	r0, [r6], #-1280	; 0xfffffb00
    8400:	0000007b 	andeq	r0, r0, fp, ror r0
    8404:	fb340305 	blx	d09022 <_bss_end+0xcf7fa2>
    8408:	51110000 	tstpl	r1, r0
    840c:	14000007 	strne	r0, [r0], #-7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:75
    unsigned int mode = static_cast<unsigned int>(func);
    8410:	dd070b05 	vstrle	d0, [r7, #-20]	; 0xffffffec
    8414:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:77
    unsigned int rd = mGPIO[reg];
    8418:	000007d4 	ldrdeq	r0, [r0], -r4
    841c:	cb0e0f05 	blgt	38c038 <_bss_end+0x37afb8>
    8420:	00000002 	andeq	r0, r0, r2
    8424:	00085d1d 	andeq	r5, r8, sp, lsl sp
    8428:	11110500 	tstne	r1, r0, lsl #10
    842c:	000005dd 	ldrdeq	r0, [r0], -sp
    8430:	093f1d01 	ldmdbeq	pc!, {r0, r8, sl, fp, ip}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:78
    rd &= ~(7 << bit);
    8434:	13050000 	movwne	r0, #20480	; 0x5000
    8438:	00006f12 	andeq	r6, r0, r2, lsl pc
    843c:	ef1d0c00 	svc	0x001d0c00
    8440:	05000008 	streq	r0, [r0, #-8]
    8444:	00571215 	subseq	r1, r7, r5, lsl r2
    8448:	20100000 	andscs	r0, r0, r0
    844c:	00000751 	andeq	r0, r0, r1, asr r7
    8450:	e6091805 	str	r1, [r9], -r5, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:79
    rd |= (mode << bit);
    8454:	ed000007 	stc	0, cr0, [r0, #-28]	; 0xffffffe4
    8458:	01000005 	tsteq	r0, r5
    845c:	0005ba01 	andeq	fp, r5, r1, lsl #20
    8460:	0005c000 	andeq	ip, r5, r0
    8464:	05ed1800 	strbeq	r1, [sp, #2048]!	; 0x800
    8468:	21000000 	mrscs	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:81
    mGPIO[reg] = rd;
    846c:	00000953 	andeq	r0, r0, r3, asr r9
    8470:	6f0e1a05 	svcvs	0x000e1a05
    8474:	01000008 	tsteq	r0, r8
    8478:	000005d1 	ldrdeq	r0, [r0], -r1
    847c:	0005ed18 	andeq	lr, r5, r8, lsl sp
    8480:	00571900 	subseq	r1, r7, r0, lsl #18
    8484:	00000000 	andeq	r0, r0, r0
    8488:	00003f22 	andeq	r3, r0, r2, lsr #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:73
        return;
    848c:	0005ed00 	andeq	lr, r5, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:82
}
    8490:	00852300 	addeq	r2, r5, r0, lsl #6
    8494:	00070000 	andeq	r0, r7, r0
_ZNK13CGPIO_Handler17Get_GPIO_FunctionEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:85
{
    8498:	055f040f 	ldrbeq	r0, [pc, #-1039]	; 8091 <_reset+0x51>
    849c:	6f110000 	svcvs	0x00110000
    84a0:	2400000f 	strcs	r0, [r0], #-15
    84a4:	a1072c05 	tstge	r7, r5, lsl #24
    84a8:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:87
    if (!Get_GPFSEL_Location(pin, reg, bit))
    84ac:	000009a0 	andeq	r0, r0, r0, lsr #19
    84b0:	ac223005 	stcge	0, cr3, [r2], #-20	; 0xffffffec
    84b4:	00000007 	andeq	r0, r0, r7
    84b8:	0007621d 	andeq	r6, r7, sp, lsl r2
    84bc:	0e320500 	cfabs32eq	mvfx0, mvfx2
    84c0:	000002cb 	andeq	r0, r0, fp, asr #5
    84c4:	09b01d04 	ldmibeq	r0!, {r2, r8, sl, fp, ip}
    84c8:	35050000 	strcc	r0, [r5, #-0]
    84cc:	00006f12 	andeq	r6, r0, r2, lsl pc
    84d0:	e61d0800 	ldr	r0, [sp], -r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:88
        return NGPIO_Function::Unspecified;
    84d4:	05000008 	streq	r0, [r0, #-8]
    84d8:	006f1237 	rsbeq	r1, pc, r7, lsr r2	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:90
    return static_cast<NGPIO_Function>((mGPIO[reg] >> bit) & 7);
    84dc:	1d0c0000 	stcne	0, cr0, [ip, #-0]
    84e0:	00000a10 	andeq	r0, r0, r0, lsl sl
    84e4:	5f1a3a05 	svcpl	0x001a3a05
    84e8:	10000005 	andne	r0, r0, r5
    84ec:	67655224 	strbvs	r5, [r5, -r4, lsr #4]!
    84f0:	1c3d0500 	cfldr32ne	mvfx0, [sp], #-0
    84f4:	00000779 	andeq	r0, r0, r9, ror r7
    84f8:	000007b1 			; <UNDEFINED> instruction: 0x000007b1
    84fc:	00065a02 	andeq	r5, r6, r2, lsl #20
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:91 (discriminator 1)
}
    8500:	00066500 	andeq	r6, r6, r0, lsl #10
    8504:	07b71800 	ldreq	r1, [r7, r0, lsl #16]!
    8508:	42190000 	andsmi	r0, r9, #0
_ZN13CGPIO_Handler10Set_OutputEjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:94
{
    850c:	00000002 	andeq	r0, r0, r2
    8510:	00095f1a 	andeq	r5, r9, sl, lsl pc
    8514:	0e400500 	cdpeq	5, 4, cr0, cr0, cr0, {0}
    8518:	000007a6 	andeq	r0, r0, r6, lsr #15
    851c:	00067a02 	andeq	r7, r6, r2, lsl #20
    8520:	00068000 	andeq	r8, r6, r0
    8524:	07b71800 	ldreq	r1, [r7, r0, lsl #16]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96
    if (!(set && Get_GPSET_Location(pin, reg, bit)) && !(!set && Get_GPCLR_Location(pin, reg, bit)))
    8528:	1b000000 	blne	8530 <_ZN13CGPIO_Handler10Set_OutputEjb+0x24>
    852c:	00000f6f 	andeq	r0, r0, pc, ror #30
    8530:	bd094305 	stclt	3, cr4, [r9, #-20]	; 0xffffffec
    8534:	b7000007 	strlt	r0, [r0, -r7]
    8538:	01000007 	tsteq	r0, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 2)
    853c:	00000699 	muleq	r0, r9, r6
    8540:	000006ae 	andeq	r0, r0, lr, lsr #13
    8544:	0007b718 	andeq	fp, r7, r8, lsl r7
    8548:	02871900 	addeq	r1, r7, #0, 18
    854c:	6f190000 	svcvs	0x00190000
    8550:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    8554:	0000006f 	andeq	r0, r0, pc, rrx
    8558:	0a1d1b00 	beq	74f160 <_bss_end+0x73e0e0>
    855c:	46050000 	strmi	r0, [r5], -r0
    8560:	000a380e 	andeq	r3, sl, lr, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 3)
    8564:	0002cb00 	andeq	ip, r2, r0, lsl #22
    8568:	06c70100 	strbeq	r0, [r7], r0, lsl #2
    856c:	06cd0000 	strbeq	r0, [sp], r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 6)
    8570:	b7180000 	ldrlt	r0, [r8, -r0]
    8574:	00000007 	andeq	r0, r0, r7
    8578:	0009aa1a 	andeq	sl, r9, sl, lsl sl
    857c:	0e480500 	cdpeq	5, 4, cr0, cr8, cr0, {0}
    8580:	0000089c 	muleq	r0, ip, r8
    8584:	0006e201 	andeq	lr, r6, r1, lsl #4
    8588:	0006e800 	andeq	lr, r6, r0, lsl #16
    858c:	07b71800 	ldreq	r1, [r7, r0, lsl #16]!
    8590:	1b000000 	blne	8598 <_ZN13CGPIO_Handler10Set_OutputEjb+0x8c>
    8594:	0000073c 	andeq	r0, r0, ip, lsr r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 7)
    8598:	f80e4a05 			; <UNDEFINED> instruction: 0xf80e4a05
    859c:	cb000008 	blgt	85c4 <_ZN13CGPIO_Handler10Set_OutputEjb+0xb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 8)
    85a0:	01000002 	tsteq	r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:96 (discriminator 10)
    85a4:	00000701 	andeq	r0, r0, r1, lsl #14
    85a8:	00000707 	andeq	r0, r0, r7, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:99
    mGPIO[reg] = (1 << bit);
    85ac:	0007bd18 	andeq	fp, r7, r8, lsl sp
    85b0:	201a0000 	andscs	r0, sl, r0
    85b4:	05000009 	streq	r0, [r0, #-9]
    85b8:	08ad0e4d 	stmiaeq	sp!, {r0, r2, r3, r6, r9, sl, fp}
    85bc:	1c010000 	stcne	0, cr0, [r1], {-0}
    85c0:	31000007 	tstcc	r0, r7
    85c4:	18000007 	stmdane	r0, {r0, r1, r2}
    85c8:	000007b7 			; <UNDEFINED> instruction: 0x000007b7
    85cc:	00005719 	andeq	r5, r0, r9, lsl r7
    85d0:	05191900 	ldreq	r1, [r9, #-2304]	; 0xfffff700
    85d4:	6f190000 	svcvs	0x00190000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:97
        return;
    85d8:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:100
}
    85dc:	0007cc1a 	andeq	ip, r7, sl, lsl ip
    85e0:	0e4f0500 	cdpeq	5, 4, cr0, cr15, cr0, {0}
_ZN13CGPIO_Handler9Get_InputEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:103
{
    85e4:	00000a22 	andeq	r0, r0, r2, lsr #20
    85e8:	00074601 	andeq	r4, r7, r1, lsl #12
    85ec:	00075b00 	andeq	r5, r7, r0, lsl #22
    85f0:	07b71800 	ldreq	r1, [r7, r0, lsl #16]!
    85f4:	57190000 	ldrpl	r0, [r9, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:105
    if (!Get_GPLEV_Location(pin, reg, bit))
    85f8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    85fc:	00000530 	andeq	r0, r0, r0, lsr r5
    8600:	00006f19 	andeq	r6, r0, r9, lsl pc
    8604:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    8608:	05000009 	streq	r0, [r0, #-9]
    860c:	08c11b52 	stmiaeq	r1, {r1, r4, r6, r8, r9, fp, ip}^
    8610:	07c30000 	strbeq	r0, [r3, r0]
    8614:	74010000 	strvc	r0, [r1], #-0
    8618:	7f000007 	svcvc	0x00000007
    861c:	18000007 	stmdane	r0, {r0, r1, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:106
        return false;
    8620:	000007b7 			; <UNDEFINED> instruction: 0x000007b7
    8624:	00005719 	andeq	r5, r0, r9, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:108
    return (mGPIO[reg] >> bit) & 0x1;
    8628:	39210000 	stmdbcc	r1!, {}	; <UNPREDICTABLE>
    862c:	05000008 	streq	r0, [r0, #-8]
    8630:	080a0e54 	stmdaeq	sl, {r2, r4, r6, r9, sl, fp}
    8634:	90010000 	andls	r0, r1, r0
    8638:	18000007 	stmdane	r0, {r0, r1, r2}
    863c:	000007b7 			; <UNDEFINED> instruction: 0x000007b7
    8640:	0007c319 	andeq	ip, r7, r9, lsl r3
    8644:	02cb1900 	sbceq	r1, fp, #0, 18
    8648:	00000000 	andeq	r0, r0, r0
    864c:	0005f303 	andeq	pc, r5, r3, lsl #6
    8650:	80040f00 	andhi	r0, r4, r0, lsl #30
    8654:	03000000 	movweq	r0, #0
    8658:	000007a6 	andeq	r0, r0, r6, lsr #15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:109 (discriminator 1)
}
    865c:	00800410 	addeq	r0, r0, r0, lsl r4
    8660:	040f0000 	streq	r0, [pc], #-0	; 8668 <_ZN13CGPIO_Handler11Reserve_PinEjbb>
    8664:	000005f3 	strdeq	r0, [r0], -r3
_ZN13CGPIO_Handler11Reserve_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:112
{
    8668:	07a1040f 	streq	r0, [r1, pc, lsl #8]!
    866c:	04100000 	ldreq	r0, [r0], #-0
    8670:	0000055f 	andeq	r0, r0, pc, asr r5
    8674:	00127d1f 	andseq	r7, r2, pc, lsl sp
    8678:	14060600 	strne	r0, [r6], #-1536	; 0xfffffa00
    867c:	00000063 	andeq	r0, r0, r3, rrx
    8680:	fb380305 	blx	e0929e <_bss_end+0xdf821e>
    8684:	ec0a0000 	stc	0, cr0, [sl], {-0}
    8688:	0500000d 	streq	r0, [r0, #-13]
    868c:	00003804 	andeq	r3, r0, r4, lsl #16
    8690:	0c090600 	stceq	6, cr0, [r9], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:115
    uint32_t bank_idx = pin / 32;
    8694:	000008ba 			; <UNDEFINED> instruction: 0x000008ba
    8698:	000f470b 	andeq	r4, pc, fp, lsl #14
    869c:	d20b0000 	andle	r0, fp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:116
    uint32_t bit_idx = pin % 32;
    86a0:	c000000c 	andgt	r0, r0, ip
    86a4:	0012f50b 	andseq	pc, r2, fp, lsl #10
    86a8:	a70b4000 	strge	r4, [fp, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118
    if (read && (mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1)
    86ac:	81000013 	tsthi	r0, r3, lsl r0
    86b0:	00115d0b 	andseq	r5, r1, fp, lsl #26
    86b4:	280ba400 	stmdacs	fp, {sl, sp, pc}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:118 (discriminator 1)
    86b8:	a5000010 	strge	r0, [r0, #-16]
    86bc:	0011c20b 	andseq	ip, r1, fp, lsl #4
    86c0:	6c0ba600 	stcvs	6, cr10, [fp], {-0}
    86c4:	a7000012 	smladge	r0, r2, r0, r0
    86c8:	0013140b 	andseq	r1, r3, fp, lsl #8
    86cc:	a70bae00 	strge	sl, [fp, -r0, lsl #28]
    86d0:	af00000f 	svcge	0x0000000f
    86d4:	706f4e0c 	rsbvc	r4, pc, ip, lsl #28
    86d8:	f00be300 			; <UNDEFINED> instruction: 0xf00be300
    86dc:	26000011 			; <UNDEFINED> instruction: 0x26000011
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:119
        return false;
    86e0:	0013900b 	andseq	r9, r3, fp
    86e4:	290b2700 	stmdbcs	fp, {r8, r9, sl, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121
    if (write && (mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1)
    86e8:	2900000e 	stmdbcs	r0, {r1, r2, r3}
    86ec:	0013e50b 	andseq	lr, r3, fp, lsl #10
    86f0:	ae0b2a00 	vmlage.f32	s4, s22, s0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:121 (discriminator 1)
    86f4:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    86f8:	0013d50b 	andseq	sp, r3, fp, lsl #10
    86fc:	730b2f00 	movwvc	r2, #48896	; 0xbf00
    8700:	a3000010 	movwge	r0, #16
    8704:	000d900b 	andeq	r9, sp, fp
    8708:	a90b0000 	stmdbge	fp, {}	; <UNPREDICTABLE>
    870c:	10000010 	andne	r0, r0, r0, lsl r0
    8710:	000e510b 	andeq	r5, lr, fp, lsl #2
    8714:	b20b2000 	andlt	r2, fp, #0
    8718:	2100000f 	tstcs	r0, pc
    871c:	0010870b 	andseq	r8, r0, fp, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:122
        return false;
    8720:	360b2200 	strcc	r2, [fp], -r0, lsl #4
    8724:	40000011 	andmi	r0, r0, r1, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:124
    if (read)
    8728:	0012da0b 	andseq	sp, r2, fp, lsl #20
    872c:	170ba000 	strne	sl, [fp, -r0]
    8730:	a8000011 	stmdage	r0, {r0, r4}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:125
        mPin_Reservations_Read[bank_idx] |= 1ULL << bit_idx;
    8734:	00129a0b 	andseq	r9, r2, fp, lsl #20
    8738:	f50bc000 			; <UNDEFINED> instruction: 0xf50bc000
    873c:	c8000010 	stmdagt	r0, {r4}
    8740:	0012280b 	andseq	r2, r2, fp, lsl #16
    8744:	a10bd300 	mrsge	sp, (UNDEF: 59)
    8748:	da00000e 	ble	8788 <_ZN13CGPIO_Handler11Reserve_PinEjbb+0x120>
    874c:	0011b60b 	andseq	fp, r1, fp, lsl #12
    8750:	de0b8d00 	cdple	13, 0, cr8, cr11, cr0, {0}
    8754:	d500000e 	strle	r0, [r0, #-14]
    8758:	000efa0b 	andeq	pc, lr, fp, lsl #20
    875c:	0f0bd900 	svceq	0x000bd900
    8760:	d800000f 	stmdale	r0, {r0, r1, r2, r3}
    8764:	10171100 	andsne	r1, r7, r0, lsl #2
    8768:	06140000 	ldreq	r0, [r4], -r0
    876c:	0a3b0736 	beq	eca44c <_bss_end+0xeb93cc>
    8770:	371d0000 	ldrcc	r0, [sp, -r0]
    8774:	06000010 			; <UNDEFINED> instruction: 0x06000010
    8778:	0a400f3a 	beq	100c468 <_bss_end+0xffb3e8>
    877c:	1d000000 	stcne	0, cr0, [r0, #-0]
    8780:	00000762 	andeq	r0, r0, r2, ror #14
    8784:	cb0e3c06 	blgt	3977a4 <_bss_end+0x386724>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:127
    if (write)
    8788:	04000002 	streq	r0, [r0], #-2
    878c:	00085d1d 	andeq	r5, r8, sp, lsl sp
    8790:	123e0600 	eorsne	r0, lr, #0, 12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:128
        mPin_Reservations_Write[bank_idx] |= 1ULL << bit_idx;
    8794:	00000a46 	andeq	r0, r0, r6, asr #20
    8798:	0e4a1d08 	cdpeq	13, 4, cr1, cr10, cr8, {0}
    879c:	40060000 	andmi	r0, r6, r0
    87a0:	0000380d 	andeq	r3, r0, sp, lsl #16
    87a4:	ca1d0c00 	bgt	74b7ac <_bss_end+0x73a72c>
    87a8:	0600000c 	streq	r0, [r0], -ip
    87ac:	00381540 	eorseq	r1, r8, r0, asr #10
    87b0:	1a100000 	bne	4087b8 <_bss_end+0x3f7738>
    87b4:	0000123b 	andeq	r1, r0, fp, lsr r2
    87b8:	450e4406 	strmi	r4, [lr, #-1030]	; 0xfffffbfa
    87bc:	02000013 	andeq	r0, r0, #19
    87c0:	0000091d 	andeq	r0, r0, sp, lsl r9
    87c4:	0000092d 	andeq	r0, r0, sp, lsr #18
    87c8:	000a4c18 	andeq	r4, sl, r8, lsl ip
    87cc:	07db1900 	ldrbeq	r1, [fp, r0, lsl #18]
    87d0:	3f190000 	svccc	0x00190000
    87d4:	00000000 	andeq	r0, r0, r0
    87d8:	0010171b 	andseq	r1, r0, fp, lsl r7
    87dc:	09470600 	stmdbeq	r7, {r9, sl}^
    87e0:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    87e4:	00000a4c 	andeq	r0, r0, ip, asr #20
    87e8:	00094601 	andeq	r4, r9, r1, lsl #12
    87ec:	00095100 	andeq	r5, r9, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:130
    return true;
    87f0:	0a4c1800 	beq	130e7f8 <_bss_end+0x12fd778>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:131
}
    87f4:	40190000 	andsmi	r0, r9, r0
    87f8:	0000000a 	andeq	r0, r0, sl
    87fc:	000a1d1b 	andeq	r1, sl, fp, lsl sp
_ZN13CGPIO_Handler8Free_PinEjbb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:134
{
    8800:	0e4a0600 	cdpeq	6, 4, cr0, cr10, cr0, {0}
    8804:	00000f1f 	andeq	r0, r0, pc, lsl pc
    8808:	000002cb 	andeq	r0, r0, fp, asr #5
    880c:	00096a01 	andeq	r6, r9, r1, lsl #20
    8810:	00097a00 	andeq	r7, r9, r0, lsl #20
    8814:	0a4c1800 	beq	130e81c <_bss_end+0x12fd79c>
    8818:	38190000 	ldmdacc	r9, {}	; <UNPREDICTABLE>
    881c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    8820:	00000038 	andeq	r0, r0, r8, lsr r0
    8824:	09aa1a00 	stmibeq	sl!, {r9, fp, ip}
    8828:	4c060000 	stcmi	0, cr0, [r6], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:135
    uint32_t bank_idx = pin / 32;
    882c:	0014190e 	andseq	r1, r4, lr, lsl #18
    8830:	098f0100 	stmibeq	pc, {r8}	; <UNPREDICTABLE>
    8834:	09950000 	ldmibeq	r5, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:136
    uint32_t bit_idx = pin % 32;
    8838:	4c180000 	ldcmi	0, cr0, [r8], {-0}
    883c:	0000000a 	andeq	r0, r0, sl
    8840:	00073c1b 	andeq	r3, r7, fp, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138
    if (read && !((mPin_Reservations_Read[bank_idx] >> bit_idx) & 0x1))
    8844:	0e4e0600 	cdpeq	6, 4, cr0, cr14, cr0, {0}
    8848:	00000e68 	andeq	r0, r0, r8, ror #28
    884c:	000002cb 	andeq	r0, r0, fp, asr #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:138 (discriminator 1)
    8850:	0009ae01 	andeq	sl, r9, r1, lsl #28
    8854:	0009b400 	andeq	fp, r9, r0, lsl #8
    8858:	0a521800 	beq	148e860 <_bss_end+0x147d7e0>
    885c:	1a000000 	bne	8864 <_ZN13CGPIO_Handler8Free_PinEjbb+0x64>
    8860:	00001896 	muleq	r0, r6, r8
    8864:	550e5106 	strpl	r5, [lr, #-262]	; 0xfffffefa
    8868:	01000010 	tsteq	r0, r0, lsl r0
    886c:	000009c9 	andeq	r0, r0, r9, asr #19
    8870:	000009d4 	ldrdeq	r0, [r0], -r4
    8874:	000a4c18 	andeq	r4, sl, r8, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:139
        return false;
    8878:	02cb1900 	sbceq	r1, fp, #0, 18
    887c:	1a000000 	bne	8884 <_ZN13CGPIO_Handler8Free_PinEjbb+0x84>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141
    if (write && !((mPin_Reservations_Write[bank_idx] >> bit_idx) & 0x1))
    8880:	00000fc2 	andeq	r0, r0, r2, asr #31
    8884:	480e5306 	stmdami	lr, {r1, r2, r8, r9, ip, lr}
    8888:	01000012 	tsteq	r0, r2, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:141 (discriminator 1)
    888c:	000009e9 	andeq	r0, r0, r9, ror #19
    8890:	000009fe 	strdeq	r0, [r0], -lr
    8894:	000a4c18 	andeq	r4, sl, r8, lsl ip
    8898:	006f1900 	rsbeq	r1, pc, r0, lsl #18
    889c:	6f190000 	svcvs	0x00190000
    88a0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    88a4:	000002cb 	andeq	r0, r0, fp, asr #5
    88a8:	0f3d1a00 	svceq	0x003d1a00
    88ac:	55060000 	strpl	r0, [r6, #-0]
    88b0:	000cdd0e 	andeq	sp, ip, lr, lsl #26
    88b4:	0a130100 	beq	4c8cbc <_bss_end+0x4b7c3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:142
        return false;
    88b8:	0a190000 	beq	6488c0 <_bss_end+0x637840>
    88bc:	4c180000 	ldcmi	0, cr0, [r8], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:144
    if (read)
    88c0:	0000000a 	andeq	r0, r0, sl
    88c4:	0010ba21 	andseq	fp, r0, r1, lsr #20
    88c8:	0e580600 	cdpeq	6, 5, cr0, cr8, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:145
        mPin_Reservations_Read[bank_idx] &= ~(1ULL << bit_idx);
    88cc:	00000da1 	andeq	r0, r0, r1, lsr #27
    88d0:	000a2a01 	andeq	r2, sl, r1, lsl #20
    88d4:	0a4c1800 	beq	130e8dc <_bss_end+0x12fd85c>
    88d8:	19190000 	ldmdbne	r9, {}	; <UNPREDICTABLE>
    88dc:	19000005 	stmdbne	r0, {r0, r2}
    88e0:	0000006f 	andeq	r0, r0, pc, rrx
    88e4:	ba030000 	blt	c88ec <_bss_end+0xb786c>
    88e8:	10000008 	andne	r0, r0, r8
    88ec:	0005f304 	andeq	pc, r5, r4, lsl #6
    88f0:	3f040f00 	svccc	0x00040f00
    88f4:	0f000000 	svceq	0x00000000
    88f8:	0008ba04 	andeq	fp, r8, r4, lsl #20
    88fc:	3b040f00 	blcc	10c504 <_bss_end+0xfb484>
    8900:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    8904:	00001217 	andeq	r1, r0, r7, lsl r2
    8908:	ba195b06 	blt	65f528 <_bss_end+0x64e4a8>
    890c:	11000008 	tstne	r0, r8
    8910:	00003158 	andeq	r3, r0, r8, asr r1
    8914:	07050704 	streq	r0, [r5, -r4, lsl #14]
    8918:	00000b43 	andeq	r0, r0, r3, asr #22
    891c:	0030641d 	eorseq	r6, r0, sp, lsl r4
    8920:	1c090700 	stcne	7, cr0, [r9], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:147
    if (write)
    8924:	000002c5 	andeq	r0, r0, r5, asr #5
    8928:	1a2b1b00 	bne	acf530 <_bss_end+0xabe4b0>
    892c:	0c070000 	stceq	0, cr0, [r7], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:148
        mPin_Reservations_Write[bank_idx] &= ~(1ULL << bit_idx);
    8930:	002d7d1c 	eoreq	r7, sp, ip, lsl sp
    8934:	0002d200 	andeq	sp, r2, r0, lsl #4
    8938:	0a970200 	beq	fe5c9140 <_bss_end+0xfe5b80c0>
    893c:	0aa20000 	beq	fe888944 <_bss_end+0xfe8778c4>
    8940:	43180000 	tstmi	r8, #0
    8944:	1900000b 	stmdbne	r0, {r0, r1, r3}
    8948:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    894c:	31581b00 	cmpcc	r8, r0, lsl #22
    8950:	0f070000 	svceq	0x00070000
    8954:	0032a205 	eorseq	sl, r2, r5, lsl #4
    8958:	000b4300 	andeq	r4, fp, r0, lsl #6
    895c:	0abb0100 	beq	feec8d64 <_bss_end+0xfeeb7ce4>
    8960:	0ac60000 	beq	ff188968 <_bss_end+0xff1778e8>
    8964:	43180000 	tstmi	r8, #0
    8968:	1900000b 	stmdbne	r0, {r0, r1, r3}
    896c:	00000287 	andeq	r0, r0, r7, lsl #5
    8970:	31871a00 	orrcc	r1, r7, r0, lsl #20
    8974:	12070000 	andne	r0, r7, #0
    8978:	00325c0a 	eorseq	r5, r2, sl, lsl #24
    897c:	0adb0100 	beq	ff6c8d84 <_bss_end+0xff6b7d04>
    8980:	0ae60000 	beq	ff988988 <_bss_end+0xff977908>
    8984:	43180000 	tstmi	r8, #0
    8988:	1900000b 	stmdbne	r0, {r0, r1, r3}
    898c:	0000014e 	andeq	r0, r0, lr, asr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:150
    return true;
    8990:	34551a00 	ldrbcc	r1, [r5], #-2560	; 0xfffff600
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    8994:	14070000 	strne	r0, [r7], #-0
    8998:	002cec0a 	eoreq	lr, ip, sl, lsl #24
    899c:	0afb0100 	beq	ffec8da4 <_bss_end+0xffeb7d24>
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89a0:	0b060000 	bleq	1889a8 <_bss_end+0x177928>
    89a4:	43180000 	tstmi	r8, #0
    89a8:	1900000b 	stmdbne	r0, {r0, r1, r3}
    89ac:	0000014e 	andeq	r0, r0, lr, asr #2
    89b0:	2e3a1a00 	vaddcs.f32	s2, s20, s0
    89b4:	17070000 	strne	r0, [r7, -r0]
    89b8:	002cb20a 	eoreq	fp, ip, sl, lsl #4
    89bc:	0b1b0100 	bleq	6c8dc4 <_bss_end+0x6b7d44>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151 (discriminator 1)
    89c0:	0b260000 	bleq	9889c8 <_bss_end+0x977948>
    89c4:	43180000 	tstmi	r8, #0
    89c8:	1900000b 	stmdbne	r0, {r0, r1, r3}
    89cc:	00000191 	muleq	r0, r1, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:6
CGPIO_Handler sGPIO(hal::GPIO_Base);
    89d0:	30fc2100 	rscscc	r2, ip, r0, lsl #2
    89d4:	19070000 	stmdbne	r7, {}	; <UNPREDICTABLE>
    89d8:	0030980a 	eorseq	r9, r0, sl, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
}
    89dc:	0b370100 	bleq	dc8de4 <_bss_end+0xdb7d64>
    89e0:	43180000 	tstmi	r8, #0
    89e4:	1900000b 	stmdbne	r0, {r0, r1, r3}
    89e8:	00000191 	muleq	r0, r1, r1
    89ec:	040f0000 	streq	r0, [pc], #-0	; 89f4 <_GLOBAL__sub_I_sGPIO>
    89f0:	00000a64 	andeq	r0, r0, r4, ror #20
_GLOBAL__sub_I_sGPIO():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/gpio.cpp:151
    89f4:	002d6f1e 	eoreq	r6, sp, lr, lsl pc
    89f8:	1e1c0700 	cdpne	7, 1, cr0, cr12, cr0, {0}
    89fc:	00000a64 	andeq	r0, r0, r4, ror #20
    8a00:	6d656d07 	stclvs	13, cr6, [r5, #-28]!	; 0xffffffe4
    8a04:	0b060800 	bleq	18aa0c <_bss_end+0x17998c>
    8a08:	00000bae 	andeq	r0, r0, lr, lsr #23
    8a0c:	00352e08 	eorseq	r2, r5, r8, lsl #28
_ZN4CI2CC2Emjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:7
CI2C::CI2C(unsigned long base, uint32_t pin_sda, uint32_t pin_scl)
    8a10:	180a0800 	stmdane	sl, {fp}
    8a14:	0000007b 	andeq	r0, r0, fp, ror r0
    8a18:	00020000 	andeq	r0, r2, r0
    8a1c:	00353808 	eorseq	r3, r5, r8, lsl #16
    8a20:	180e0800 	stmdane	lr, {fp}
    8a24:	0000007b 	andeq	r0, r0, fp, ror r0
    8a28:	20000000 	andcs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:8
    : mBSC_Base(reinterpret_cast<volatile uint32_t*>(base)), mOpened(false), mSDA_Pin(pin_sda), mSCL_Pin(pin_scl)
    8a2c:	00351825 	eorseq	r1, r5, r5, lsr #16
    8a30:	18110800 	ldmdane	r1, {fp}
    8a34:	0000007b 	andeq	r0, r0, fp, ror r0
    8a38:	07084000 	streq	r4, [r8, -r0]
    8a3c:	08000035 	stmdaeq	r0, {r0, r2, r4, r5}
    8a40:	007b1814 	rsbseq	r1, fp, r4, lsl r8
    8a44:	00000000 	andeq	r0, r0, r0
    8a48:	fd251ffe 	stc2	15, cr1, [r5, #-1016]!	; 0xfffffc08
    8a4c:	08000034 	stmdaeq	r0, {r2, r4, r5}
    8a50:	007b1817 	rsbseq	r1, fp, r7, lsl r8
    8a54:	7ff80000 	svcvc	0x00f80000
    8a58:	0b610e00 	bleq	184c260 <_bss_end+0x183b1e0>
    8a5c:	710e0000 	mrsvc	r0, (UNDEF: 14)
    8a60:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    8a64:	00000b81 	andeq	r0, r0, r1, lsl #23
    8a68:	000b8f0e 	andeq	r8, fp, lr, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:11
}
    8a6c:	0b9f0e00 	bleq	fe7cc274 <_bss_end+0xfe7bb1f4>
    8a70:	691f0000 	ldmdbvs	pc, {}	; <UNPREDICTABLE>
    8a74:	0900002f 	stmdbeq	r0, {r0, r1, r2, r3, r5}
    8a78:	007b1404 	rsbseq	r1, fp, r4, lsl #8
_ZN4CI2C3RegEN3hal7BSC_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:14
{
    8a7c:	03050000 	movweq	r0, #20480	; 0x5000
    8a80:	0000fb50 	andeq	pc, r0, r0, asr fp	; <UNPREDICTABLE>
    8a84:	0030580a 	eorseq	r5, r0, sl, lsl #16
    8a88:	38040500 	stmdacc	r4, {r8, sl}
    8a8c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:15
    return mBSC_Base[static_cast<uint32_t>(reg)];
    8a90:	0c040c07 	stceq	12, cr0, [r4], {7}
    8a94:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
    8a98:	00007765 	andeq	r7, r0, r5, ror #14
    8a9c:	00304f0b 	eorseq	r4, r0, fp, lsl #30
    8aa0:	c00b0100 	andgt	r0, fp, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:16
}
    8aa4:	02000019 	andeq	r0, r0, #25
    8aa8:	0031800b 	eorseq	r8, r1, fp
    8aac:	13000300 	movwne	r0, #768	; 0x300
    8ab0:	00002f2c 	andeq	r2, r0, ip, lsr #30
_ZN4CI2C10Wait_ReadyEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:19
{
    8ab4:	0816090c 	ldmdaeq	r6, {r2, r3, r8, fp}
    8ab8:	00000c36 	andeq	r0, r0, r6, lsr ip
    8abc:	00726c14 	rsbseq	r6, r2, r4, lsl ip
    8ac0:	87131809 	ldrhi	r1, [r3, -r9, lsl #16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:20
    volatile uint32_t& s = Reg(hal::BSC_Reg::Status);
    8ac4:	00000002 	andeq	r0, r0, r2
    8ac8:	00707314 	rsbseq	r7, r0, r4, lsl r3
    8acc:	87131909 	ldrhi	r1, [r3, -r9, lsl #18]
    8ad0:	04000002 	streq	r0, [r0], #-2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:23
    while( !(s & (1 << 1)) )
    8ad4:	00637014 	rsbeq	r7, r3, r4, lsl r0
    8ad8:	87131a09 	ldrhi	r1, [r3, -r9, lsl #20]
    8adc:	08000002 	stmdaeq	r0, {r1}
    8ae0:	33161300 	tstcc	r6, #0, 6
    8ae4:	095c0000 	ldmdbeq	ip, {}^	; <UNPREDICTABLE>
    8ae8:	0c920822 	ldceq	8, cr0, [r2], {34}	; 0x22
    8aec:	c11d0000 	tstgt	sp, r0
    8af0:	09000032 	stmdbeq	r0, {r1, r4, r5}
    8af4:	0c041224 	sfmeq	f1, 4, [r4], {36}	; 0x24
    8af8:	14000000 	strne	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:25
}
    8afc:	00646970 	rsbeq	r6, r4, r0, ror r9
    8b00:	85122509 	ldrhi	r2, [r2, #-1289]	; 0xfffffaf7
    8b04:	0c000000 	stceq	0, cr0, [r0], {-0}
_ZN4CI2C4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:28
{
    8b08:	002eb01d 	eoreq	fp, lr, sp, lsl r0
    8b0c:	11260900 			; <UNDEFINED> instruction: 0x11260900
    8b10:	00000bd9 	ldrdeq	r0, [r0], -r9
    8b14:	30741d10 	rsbscc	r1, r4, r0, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:29
    if (!sGPIO.Reserve_Pin(mSDA_Pin, true, true))
    8b18:	27090000 	strcs	r0, [r9, -r0]
    8b1c:	00008512 	andeq	r8, r0, r2, lsl r5
    8b20:	821d1400 	andshi	r1, sp, #0, 8
    8b24:	09000030 	stmdbeq	r0, {r4, r5}
    8b28:	00851229 	addeq	r1, r5, r9, lsr #4
    8b2c:	1d180000 	ldcne	0, cr0, [r8, #-0]
    8b30:	00002f1f 	andeq	r2, r0, pc, lsl pc
    8b34:	920c2a09 	andls	r2, ip, #36864	; 0x9000
    8b38:	1c00000c 	stcne	0, cr0, [r0], {12}
    8b3c:	0ca22200 	sfmeq	f2, 4, [r2]
    8b40:	0ca20000 	stceq	0, cr0, [r2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:30
        return false;
    8b44:	85230000 	strhi	r0, [r3, #-0]!
    8b48:	0f000000 	svceq	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:32
    if (!sGPIO.Reserve_Pin(mSCL_Pin, true, true))
    8b4c:	a8040f00 	stmdage	r4, {r8, r9, sl, fp}
    8b50:	2600000c 	strcs	r0, [r0], -ip
    8b54:	000029ea 	andeq	r2, r0, sl, ror #19
    8b58:	002f1313 	eoreq	r1, pc, r3, lsl r3	; <UNPREDICTABLE>
    8b5c:	060a0800 	streq	r0, [sl], -r0, lsl #16
    8b60:	000cd308 	andeq	sp, ip, r8, lsl #6
    8b64:	30721400 	rsbscc	r1, r2, r0, lsl #8
    8b68:	0e080a00 	vmlaeq.f32	s0, s16, s0
    8b6c:	0000006f 	andeq	r0, r0, pc, rrx
    8b70:	31721400 	cmncc	r2, r0, lsl #8
    8b74:	0e090a00 	vmlaeq.f32	s0, s18, s0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:34
        sGPIO.Free_Pin(mSDA_Pin, true, true);
    8b78:	0000006f 	andeq	r0, r0, pc, rrx
    8b7c:	8c0a0004 	stchi	0, cr0, [sl], {4}
    8b80:	0500002e 	streq	r0, [r0, #-46]	; 0xffffffd2
    8b84:	00003804 	andeq	r3, r0, r4, lsl #16
    8b88:	0c1e0a00 			; <UNDEFINED> instruction: 0x0c1e0a00
    8b8c:	00000cec 	andeq	r0, r0, ip, ror #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:35
        return false;
    8b90:	00344d0b 	eorseq	r4, r4, fp, lsl #26
    8b94:	0a000000 	beq	8b9c <_ZN4CI2C4OpenEv+0x94>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:40
    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Alt_0);
    8b98:	000033e3 	andeq	r3, r0, r3, ror #7
    8b9c:	00380405 	eorseq	r0, r8, r5, lsl #8
    8ba0:	260a0000 	strcs	r0, [sl], -r0
    8ba4:	000d1d0c 	andeq	r1, sp, ip, lsl #26
    8ba8:	0a1d0b00 	beq	74b7b0 <_bss_end+0x73a730>
    8bac:	0b000000 	bleq	8bb4 <_ZN4CI2C4OpenEv+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:41
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Alt_0);
    8bb0:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8bb4:	1cdd0b01 	fldmiaxne	sp, {d16-d15}	;@ Deprecated
    8bb8:	0b020000 	bleq	88bc0 <_bss_end+0x77b40>
    8bbc:	000009aa 	andeq	r0, r0, sl, lsr #19
    8bc0:	24140b03 	ldrcs	r0, [r4], #-2819	; 0xfffff4fd
    8bc4:	00040000 	andeq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:43
    mOpened = true;
    8bc8:	001c411f 	andseq	r4, ip, pc, lsl r1
    8bcc:	1a060b00 	bne	18b7d4 <_bss_end+0x17a754>
    8bd0:	0000007b 	andeq	r0, r0, fp, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:45
    return true;
    8bd4:	fb540305 	blx	15097f2 <_bss_end+0x14f8772>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:46
}
    8bd8:	721f0000 	andsvc	r0, pc, #0
    8bdc:	0b00001c 	bleq	8c54 <_ZN4CI2C5CloseEv+0x6c>
    8be0:	007b1a08 	rsbseq	r1, fp, r8, lsl #20
    8be4:	03050000 	movweq	r0, #20480	; 0x5000
_ZN4CI2C5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:49
{
    8be8:	0000fb58 	andeq	pc, r0, r8, asr fp	; <UNPREDICTABLE>
    8bec:	001d901f 	andseq	r9, sp, pc, lsl r0
    8bf0:	1a0a0b00 	bne	28b7f8 <_bss_end+0x27a778>
    8bf4:	0000007b 	andeq	r0, r0, fp, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:50
    Reg(hal::BSC_Reg::Control) = 0;
    8bf8:	fb5c0305 	blx	1709816 <_bss_end+0x16f8796>
    8bfc:	761f0000 	ldrvc	r0, [pc], -r0
    8c00:	0b00001b 	bleq	8c74 <_ZN4CI2C5CloseEv+0x8c>
    8c04:	007b1a0c 	rsbseq	r1, fp, ip, lsl #20
    8c08:	03050000 	movweq	r0, #20480	; 0x5000
    8c0c:	0000fb60 	andeq	pc, r0, r0, ror #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:52
    sGPIO.Set_GPIO_Function(mSDA_Pin, NGPIO_Function::Input);
    8c10:	0034141f 	eorseq	r1, r4, pc, lsl r4
    8c14:	140a0c00 	strne	r0, [sl], #-3072	; 0xfffff400
    8c18:	0000007b 	andeq	r0, r0, fp, ror r0
    8c1c:	fb640305 	blx	190983a <_bss_end+0x18f87ba>
    8c20:	4f130000 	svcmi	0x00130000
    8c24:	0c000033 	stceq	0, cr0, [r0], {51}	; 0x33
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:53
    sGPIO.Set_GPIO_Function(mSCL_Pin, NGPIO_Function::Input);
    8c28:	ac080d0c 	stcge	13, cr0, [r8], {12}
    8c2c:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    8c30:	00000d05 	andeq	r0, r0, r5, lsl #26
    8c34:	ac190f0c 	ldcge	15, cr0, [r9], {12}
    8c38:	0000000d 	andeq	r0, r0, sp
    8c3c:	000df81d 	andeq	pc, sp, sp, lsl r8	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:55
    sGPIO.Free_Pin(mSDA_Pin, true, true);
    8c40:	19100c00 	ldmdbne	r0, {sl, fp}
    8c44:	00000dac 	andeq	r0, r0, ip, lsr #27
    8c48:	33051d04 	movwcc	r1, #23812	; 0x5d04
    8c4c:	110c0000 	mrsne	r0, (UNDEF: 12)
    8c50:	000db213 	andeq	fp, sp, r3, lsl r2
    8c54:	0f000800 	svceq	0x00000800
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:56
    sGPIO.Free_Pin(mSCL_Pin, true, true);
    8c58:	000d7704 	andeq	r7, sp, r4, lsl #14
    8c5c:	36040f00 	strcc	r0, [r4], -r0, lsl #30
    8c60:	1100000c 	tstne	r0, ip
    8c64:	00002eb6 			; <UNDEFINED> instruction: 0x00002eb6
    8c68:	07140c0c 	ldreq	r0, [r4, -ip, lsl #24]
    8c6c:	00000f50 	andeq	r0, r0, r0, asr pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:58
    mOpened = false;
    8c70:	00314e1d 	eorseq	r4, r1, sp, lsl lr
    8c74:	0e180c00 	cdpeq	12, 1, cr0, cr8, cr0, {0}
    8c78:	0000006f 	andeq	r0, r0, pc, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:59
}
    8c7c:	2de31d00 	stclcs	13, cr1, [r3]
    8c80:	1b0c0000 	blne	308c88 <_bss_end+0x2f7c08>
    8c84:	000dac19 	andeq	sl, sp, r9, lsl ip
    8c88:	491d0400 	ldmdbmi	sp, {sl}
_ZNK4CI2C9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:62
{
    8c8c:	0c000032 	stceq	0, cr0, [r0], {50}	; 0x32
    8c90:	0dac191e 			; <UNDEFINED> instruction: 0x0dac191e
    8c94:	1c080000 	stcne	0, cr0, [r8], {-0}
    8c98:	000033d9 	ldrdeq	r3, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:63
    return mOpened;
    8c9c:	2c0a210c 	stfcss	f2, [sl], {12}
    8ca0:	00000033 	andeq	r0, r0, r3, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:64
}
    8ca4:	0b00000e 	bleq	8ce4 <_ZN4CI2C4SendEtPKcj+0x30>
    8ca8:	1800000e 	stmdane	r0, {r1, r2, r3}
    8cac:	00000f55 	andeq	r0, r0, r5, asr pc
    8cb0:	000dac19 	andeq	sl, sp, r9, lsl ip
_ZN4CI2C4SendEtPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:67
{
    8cb4:	b61b0000 	ldrlt	r0, [fp], -r0
    8cb8:	0c00002e 	stceq	0, cr0, [r0], {46}	; 0x2e
    8cbc:	34670524 	strbtcc	r0, [r7], #-1316	; 0xfffffadc
    8cc0:	0f550000 	svceq	0x00550000
    8cc4:	24010000 	strcs	r0, [r1], #-0
    8cc8:	2a00000e 	bcs	8d08 <_ZN4CI2C4SendEtPKcj+0x54>
    8ccc:	1800000e 	stmdane	r0, {r1, r2, r3}
    8cd0:	00000f55 	andeq	r0, r0, r5, asr pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:68
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8cd4:	33c51a00 	biccc	r1, r5, #0, 20
    8cd8:	270c0000 	strcs	r0, [ip, -r0]
    8cdc:	002d330a 	eoreq	r3, sp, sl, lsl #6
    8ce0:	0e3f0100 	rsfeqe	f0, f7, f0
    8ce4:	0e450000 	cdpeq	0, 4, cr0, cr5, cr0, {0}
    8ce8:	55180000 	ldrpl	r0, [r8, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:69
    Reg(hal::BSC_Reg::Data_Length) = len;
    8cec:	0000000f 	andeq	r0, r0, pc
    8cf0:	002ea11b 	eoreq	sl, lr, fp, lsl r1
    8cf4:	0e2a0c00 	cdpeq	12, 2, cr0, cr10, cr0, {0}
    8cf8:	00002e64 	andeq	r2, r0, r4, ror #28
    8cfc:	0000006f 	andeq	r0, r0, pc, rrx
    8d00:	000e5e01 	andeq	r5, lr, r1, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71
    for (uint32_t i = 0; i < len; i++)
    8d04:	000e6900 	andeq	r6, lr, r0, lsl #18
    8d08:	0f551800 	svceq	0x00551800
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 3)
    8d0c:	87190000 	ldrhi	r0, [r9, -r0]
    8d10:	00000002 	andeq	r0, r0, r2
    8d14:	0033231a 	eorseq	r2, r3, sl, lsl r3
    8d18:	0a2e0c00 	beq	b8bd20 <_bss_end+0xb7aca0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:72 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = buffer[i];
    8d1c:	00003198 	muleq	r0, r8, r1
    8d20:	000e7e01 	andeq	r7, lr, r1, lsl #28
    8d24:	000e8400 	andeq	r8, lr, r0, lsl #8
    8d28:	0f551800 	svceq	0x00551800
    8d2c:	1b000000 	blne	8d34 <_ZN4CI2C4SendEtPKcj+0x80>
    8d30:	00002fcc 	andeq	r2, r0, ip, asr #31
    8d34:	f613310c 			; <UNDEFINED> instruction: 0xf613310c
    8d38:	b200002d 	andlt	r0, r0, #45	; 0x2d
    8d3c:	0100000d 	tsteq	r0, sp
    8d40:	00000e9d 	muleq	r0, sp, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:71 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8d44:	00000ea3 	andeq	r0, r0, r3, lsr #29
    8d48:	000f5b18 	andeq	r5, pc, r8, lsl fp	; <UNPREDICTABLE>
    8d4c:	e01b0000 	ands	r0, fp, r0
    8d50:	0c00002f 	stceq	0, cr0, [r0], {47}	; 0x2f
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:74
    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8d54:	31080e34 	tstcc	r8, r4, lsr lr
    8d58:	006f0000 	rsbeq	r0, pc, r0
    8d5c:	bc010000 	stclt	0, cr0, [r1], {-0}
    8d60:	c700000e 	strgt	r0, [r0, -lr]
    8d64:	1800000e 	stmdane	r0, {r1, r2, r3}
    8d68:	00000f55 	andeq	r0, r0, r5, asr pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:75
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    8d6c:	000ca219 	andeq	sl, ip, r9, lsl r2
    8d70:	be1b0000 	cdplt	0, 1, cr0, cr11, cr0, {0}
    8d74:	0c00002d 	stceq	0, cr0, [r0], {45}	; 0x2d
    8d78:	2f820a37 	svccs	0x00820a37
    8d7c:	02cb0000 	sbceq	r0, fp, #0
    8d80:	e0010000 	and	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:77
    Wait_Ready();
    8d84:	eb00000e 	bl	8dc4 <_ZN4CI2C7ReceiveEtPcj+0x24>
    8d88:	1800000e 	stmdane	r0, {r1, r2, r3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:78
}
    8d8c:	00000f55 	andeq	r0, r0, r5, asr pc
    8d90:	00006f19 	andeq	r6, r0, r9, lsl pc
    8d94:	fd1a0000 	ldc2	0, cr0, [sl, #-0]
    8d98:	0c00002f 	stceq	0, cr0, [r0], {47}	; 0x2f
    8d9c:	33730a3a 	cmncc	r3, #237568	; 0x3a000
_ZN4CI2C7ReceiveEtPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:81
{
    8da0:	00010000 	andeq	r0, r1, r0
    8da4:	1f00000f 	svcne	0x0000000f
    8da8:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    8dac:	00000f55 	andeq	r0, r0, r5, asr pc
    8db0:	000cd319 	andeq	sp, ip, r9, lsl r3
    8db4:	006f1900 	rsbeq	r1, pc, r0, lsl #18
    8db8:	6f190000 	svcvs	0x00190000
    8dbc:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:82
    Reg(hal::BSC_Reg::Slave_Address) = addr;
    8dc0:	0000006f 	andeq	r0, r0, pc, rrx
    8dc4:	000f6119 	andeq	r6, pc, r9, lsl r1	; <UNPREDICTABLE>
    8dc8:	24210000 	strtcs	r0, [r1], #-0
    8dcc:	0c00002e 	stceq	0, cr0, [r0], {46}	; 0x2e
    8dd0:	2ec7053d 	mcrcs	5, 6, r0, cr7, cr13, {1}
    8dd4:	30010000 	andcc	r0, r1, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:83
    Reg(hal::BSC_Reg::Data_Length) = len;
    8dd8:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    8ddc:	00000f55 	andeq	r0, r0, r5, asr pc
    8de0:	000cec19 	andeq	lr, ip, r9, lsl ip
    8de4:	006f1900 	rsbeq	r1, pc, r0, lsl #18
    8de8:	6f190000 	svcvs	0x00190000
    8dec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:85
    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    8df0:	0000006f 	andeq	r0, r0, pc, rrx
    8df4:	000f6119 	andeq	r6, pc, r9, lsl r1	; <UNPREDICTABLE>
    8df8:	03000000 	movweq	r0, #0
    8dfc:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
    8e00:	0db8040f 	cfldrseq	mvf0, [r8, #60]!	; 0x3c
    8e04:	040f0000 	streq	r0, [pc], #-0	; 8e0c <_ZN4CI2C7ReceiveEtPcj+0x6c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:86
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7) | (1 << 4) | (1 << 0); // zapoceti cteni (enable bsc + clear fifo + start transfer + read)
    8e08:	00000f50 	andeq	r0, r0, r0, asr pc
    8e0c:	0cad0410 	cfstrseq	mvf0, [sp], #64	; 0x40
    8e10:	a51e0000 	ldrge	r0, [lr, #-0]
    8e14:	0c000037 	stceq	0, cr0, [r0], {55}	; 0x37
    8e18:	0db81940 			; <UNDEFINED> instruction: 0x0db81940
    8e1c:	21270000 			; <UNDEFINED> instruction: 0x21270000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:88
    Wait_Ready();
    8e20:	01000035 	tsteq	r0, r5, lsr r0
    8e24:	00381022 	eorseq	r1, r8, r2, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90
    for (uint32_t i = 0; i < len; i++)
    8e28:	d5800000 	strle	r0, [r0]
    8e2c:	003c0000 	eorseq	r0, ip, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 3)
    8e30:	9c010000 	stcls	0, cr0, [r1], {-0}
    8e34:	0019ea28 	andseq	lr, r9, r8, lsr #20
    8e38:	11160100 	tstne	r6, r0, lsl #2
    8e3c:	0000d564 	andeq	sp, r0, r4, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:91 (discriminator 2)
        buffer[i] = Reg(hal::BSC_Reg::Data_FIFO);
    8e40:	0000001c 	andeq	r0, r0, ip, lsl r0
    8e44:	f7009c01 			; <UNDEFINED> instruction: 0xf7009c01
    8e48:	04000004 	streq	r0, [r0], #-4
    8e4c:	00245f00 	eoreq	r5, r4, r0, lsl #30
    8e50:	61010400 	tstvs	r1, r0, lsl #8
    8e54:	04000000 	streq	r0, [r0], #-0
    8e58:	00003600 	andeq	r3, r0, r0, lsl #12
    8e5c:	00000026 	andeq	r0, r0, r6, lsr #32
    8e60:	0000d5bc 			; <UNDEFINED> instruction: 0x0000d5bc
    8e64:	0000036c 	andeq	r0, r0, ip, ror #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:90 (discriminator 2)
    for (uint32_t i = 0; i < len; i++)
    8e68:	00003154 	andeq	r3, r0, r4, asr r1
    8e6c:	70080102 	andvc	r0, r8, r2, lsl #2
    8e70:	02000005 	andeq	r0, r0, #5
    8e74:	05960502 	ldreq	r0, [r6, #1282]	; 0x502
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:92
}
    8e78:	04030000 	streq	r0, [r3], #-0
    8e7c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    8e80:	097f0400 	ldmdbeq	pc!, {sl}^	; <UNPREDICTABLE>
    8e84:	07020000 	streq	r0, [r2, -r0]
    8e88:	00004607 	andeq	r4, r0, r7, lsl #12
_ZN4CI2C17Begin_TransactionEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:95
{
    8e8c:	08010200 	stmdaeq	r1, {r9}
    8e90:	00000567 	andeq	r0, r0, r7, ror #10
    8e94:	d9070202 	stmdble	r7, {r1, r9}
    8e98:	04000003 	streq	r0, [r0], #-3
    8e9c:	000005e1 	andeq	r0, r0, r1, ror #11
    8ea0:	65070902 	strvs	r0, [r7, #-2306]	; 0xfffff6fe
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:96
    if (mTransaction.mIn_Progress)
    8ea4:	05000000 	streq	r0, [r0, #-0]
    8ea8:	00000054 	andeq	r0, r0, r4, asr r0
    8eac:	ee070402 	cdp	4, 0, cr0, cr7, cr2, {0}
    8eb0:	05000040 	streq	r0, [r0, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:97
        return mTransaction;
    8eb4:	00000065 	andeq	r0, r0, r5, rrx
    8eb8:	0013bb06 	andseq	fp, r3, r6, lsl #22
    8ebc:	08031000 	stmdaeq	r3, {ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:99
    mTransaction.mIn_Progress = true;
    8ec0:	0000b308 	andeq	fp, r0, r8, lsl #6
    8ec4:	0d050700 	stceq	7, cr0, [r5, #-0]
    8ec8:	0a030000 	beq	c8ed0 <_bss_end+0xb7e50>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:100
    mTransaction.mLength = 0;
    8ecc:	0000b320 	andeq	fp, r0, r0, lsr #6
    8ed0:	f8070000 			; <UNDEFINED> instruction: 0xf8070000
    8ed4:	0300000d 	movweq	r0, #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:101
    mTransaction.Set_Address(addr);
    8ed8:	00b3200b 	adcseq	r2, r3, fp
    8edc:	07040000 	streq	r0, [r4, -r0]
    8ee0:	00000e45 	andeq	r0, r0, r5, asr #28
    8ee4:	540e0c03 	strpl	r0, [lr], #-3075	; 0xfffff3fd
    8ee8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8eec:	000e9907 	andeq	r9, lr, r7, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:103
    return mTransaction;
    8ef0:	0a0d0300 	beq	349af8 <_bss_end+0x338a78>
    8ef4:	000000b9 	strheq	r0, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:104
}
    8ef8:	0408000c 	streq	r0, [r8], #-12
    8efc:	00000071 	andeq	r0, r0, r1, ror r0
    8f00:	a5020102 	strge	r0, [r2, #-258]	; 0xfffffefe
_ZN4CI2C15End_TransactionER16CI2C_Transactionb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:107
{
    8f04:	09000040 	stmdbeq	r0, {r6}
    8f08:	00000dfd 	strdeq	r0, [r0], -sp
    8f0c:	07100304 	ldreq	r0, [r0, -r4, lsl #6]
    8f10:	00000158 	andeq	r0, r0, r8, asr r1
    8f14:	00133e07 	andseq	r3, r3, r7, lsl #28
    8f18:	20130300 	andscs	r0, r3, r0, lsl #6
    8f1c:	000000b3 	strheq	r0, [r0], -r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:108
    if (!transaction.mIn_Progress)
    8f20:	13800a00 	orrne	r0, r0, #0, 20
    8f24:	15030000 	strne	r0, [r3, #-0]
    8f28:	000d0a20 	andeq	r0, sp, r0, lsr #20
    8f2c:	0000b300 	andeq	fp, r0, r0, lsl #6
    8f30:	0000f200 	andeq	pc, r0, r0, lsl #4
    8f34:	0000f800 	andeq	pc, r0, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:111
    transaction.mIn_Progress = false;
    8f38:	01580b00 	cmpeq	r8, r0, lsl #22
    8f3c:	0c000000 	stceq	0, cr0, [r0], {-0}
    8f40:	00000dfd 	strdeq	r0, [r0], -sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113
    if (!commit || transaction.mLength == 0)
    8f44:	20051803 	andcs	r1, r5, r3, lsl #16
    8f48:	58000013 	stmdapl	r0, {r0, r1, r4}
    8f4c:	01000001 	tsteq	r0, r1
    8f50:	00000111 	andeq	r0, r0, r1, lsl r1
    8f54:	00000117 	andeq	r0, r0, r7, lsl r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:113 (discriminator 1)
    8f58:	0001580b 	andeq	r5, r1, fp, lsl #16
    8f5c:	d80c0000 	stmdale	ip, {}	; <UNPREDICTABLE>
    8f60:	0300000e 	movweq	r0, #14
    8f64:	11940b1a 	orrsne	r0, r4, sl, lsl fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:116
    Reg(hal::BSC_Reg::Slave_Address) = transaction.mAddress;
    8f68:	01630000 	cmneq	r3, r0
    8f6c:	30010000 	andcc	r0, r1, r0
    8f70:	3b000001 	blcc	8f7c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x78>
    8f74:	0b000001 	bleq	8f80 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x7c>
    8f78:	00000158 	andeq	r0, r0, r8, asr r1
    8f7c:	0000540d 	andeq	r5, r0, sp, lsl #8
    8f80:	420e0000 	andmi	r0, lr, #0
    8f84:	0300000f 	movweq	r0, #15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:117
    Reg(hal::BSC_Reg::Data_Length) = transaction.mLength;
    8f88:	10d30a1b 	sbcsne	r0, r3, fp, lsl sl
    8f8c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    8f90:	0b000001 	bleq	8f9c <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0x98>
    8f94:	00000158 	andeq	r0, r0, r8, asr r1
    8f98:	0001630d 	andeq	r6, r1, sp, lsl #6
    8f9c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8fa0:	0000c004 	andeq	ip, r0, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123
    for (volatile int i = 0; i < transaction.mLength; i++)
    8fa4:	01580500 	cmpeq	r8, r0, lsl #10
    8fa8:	040f0000 	streq	r0, [pc], #-0	; 8fb0 <_ZN4CI2C15End_TransactionER16CI2C_Transactionb+0xac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123 (discriminator 3)
    8fac:	00357e10 	eorseq	r7, r5, r0, lsl lr
    8fb0:	1d240300 	stcne	3, cr0, [r4, #-0]
    8fb4:	000000c0 	andeq	r0, r0, r0, asr #1
    8fb8:	6c616811 	stclvs	8, cr6, [r1], #-68	; 0xffffffbc
    8fbc:	0b050400 	bleq	149fc4 <_bss_end+0x138f44>
    8fc0:	0000022b 	andeq	r0, r0, fp, lsr #4
    8fc4:	00048412 	andeq	r8, r4, r2, lsl r4
    8fc8:	19070400 	stmdbne	r7, {sl}
    8fcc:	0000006c 	andeq	r0, r0, ip, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:125 (discriminator 2)
        Reg(hal::BSC_Reg::Data_FIFO) = transaction.mBuffer[i];
    8fd0:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    8fd4:	0005c912 	andeq	ip, r5, r2, lsl r9
    8fd8:	1a0a0400 	bne	289fe0 <_bss_end+0x278f60>
    8fdc:	00000237 	andeq	r0, r0, r7, lsr r2
    8fe0:	20000000 	andcs	r0, r0, r0
    8fe4:	00044f12 	andeq	r4, r4, r2, lsl pc
    8fe8:	1a0d0400 	bne	349ff0 <_bss_end+0x338f70>
    8fec:	00000237 	andeq	r0, r0, r7, lsr r2
    8ff0:	20200000 	eorcs	r0, r0, r0
    8ff4:	00058713 	andeq	r8, r5, r3, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:123 (discriminator 2)
    for (volatile int i = 0; i < transaction.mLength; i++)
    8ff8:	15100400 	ldrne	r0, [r0, #-1024]	; 0xfffffc00
    8ffc:	00000060 	andeq	r0, r0, r0, rrx
    9000:	03701236 	cmneq	r0, #1610612739	; 0x60000003
    9004:	42040000 	andmi	r0, r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:131
    Reg(hal::BSC_Reg::Status) = (1 << 9) | (1 << 8) | (1 << 1); // reset "slave clock hold", "slave fail" a "status" bitu
    9008:	0002371a 	andeq	r3, r2, sl, lsl r7
    900c:	21500000 	cmpcs	r0, r0
    9010:	03471220 	movteq	r1, #29216	; 0x7220
    9014:	71040000 	mrsvc	r0, (UNDEF: 4)
    9018:	0002371a 	andeq	r3, r2, sl, lsl r7
    901c:	00b20000 	adcseq	r0, r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:132
    Reg(hal::BSC_Reg::Control) = (1 << 15) | (1 << 7); // zapoceti noveho prenosu (enable bsc + start transfer)
    9020:	02b31220 	adcseq	r1, r3, #32, 4
    9024:	a4040000 	strge	r0, [r4], #-0
    9028:	0002371a 	andeq	r3, r2, sl, lsl r7
    902c:	00b40000 	adcseq	r0, r4, r0
    9030:	03611220 	cmneq	r1, #32, 4
    9034:	b3040000 	movwlt	r0, #16384	; 0x4000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:134
    Wait_Ready();
    9038:	0002371a 	andeq	r3, r2, sl, lsl r7
    903c:	10400000 	subne	r0, r0, r0
    9040:	032e1220 			; <UNDEFINED> instruction: 0x032e1220
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:109
        return;
    9044:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
    9048:	0002371a 	andeq	r3, r2, sl, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:114
        return;
    904c:	20500000 	subscs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
}
    9050:	03ec1220 	mvneq	r1, #32, 4
    9054:	bf040000 	svclt	0x00040000
    9058:	0002371a 	andeq	r3, r2, sl, lsl r7
    905c:	80400000 	subhi	r0, r0, r0
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
    9060:	04591220 	ldrbeq	r1, [r9], #-544	; 0xfffffde0
    9064:	c0040000 	andgt	r0, r4, r0
    9068:	0002371a 	andeq	r3, r2, sl, lsl r7
    906c:	80500000 	subshi	r0, r0, r0
    9070:	7d140020 	ldcvc	0, cr0, [r4, #-128]	; 0xffffff80
    9074:	02000001 	andeq	r0, r0, #1
    9078:	40e90704 	rscmi	r0, r9, r4, lsl #14
    907c:	30050000 	andcc	r0, r5, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135 (discriminator 1)
    9080:	14000002 	strne	r0, [r0], #-2
    9084:	0000018d 	andeq	r0, r0, sp, lsl #3
    9088:	00019d14 	andeq	r9, r1, r4, lsl sp
    908c:	01ad1400 			; <UNDEFINED> instruction: 0x01ad1400
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:5
CI2C sI2C1(hal::BSC1_Base, 2, 3);
    9090:	ba140000 	blt	509098 <_bss_end+0x4f8018>
    9094:	14000001 	strne	r0, [r0], #-1
    9098:	000001ca 	andeq	r0, r0, sl, asr #3
    909c:	0001da14 	andeq	sp, r1, r4, lsl sl
    90a0:	01ea1400 	mvneq	r1, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
}
    90a4:	fa140000 	blx	5090ac <_bss_end+0x4f802c>
    90a8:	14000001 	strne	r0, [r0], #-1
    90ac:	0000020a 	andeq	r0, r0, sl, lsl #4
    90b0:	00021a14 	andeq	r1, r2, r4, lsl sl
    90b4:	656d1100 	strbvs	r1, [sp, #-256]!	; 0xffffff00
    90b8:	0605006d 	streq	r0, [r5], -sp, rrx
_GLOBAL__sub_I_sI2C1():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/i2c.cpp:135
    90bc:	0002c70b 	andeq	ip, r2, fp, lsl #14
    90c0:	352e1200 	strcc	r1, [lr, #-512]!	; 0xfffffe00
    90c4:	0a050000 	beq	1490cc <_bss_end+0x13804c>
    90c8:	00006018 	andeq	r6, r0, r8, lsl r0
    90cc:	02000000 	andeq	r0, r0, #0
    90d0:	35381200 	ldrcc	r1, [r8, #-512]!	; 0xfffffe00
    90d4:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
_ZN16CI2C_Transaction11Set_AddressEt():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:26
        void Set_Address(uint16_t addr)
    90d8:	00006018 	andeq	r6, r0, r8, lsl r0
    90dc:	00000000 	andeq	r0, r0, r0
    90e0:	35181520 	ldrcc	r1, [r8, #-1312]	; 0xfffffae0
    90e4:	11050000 	mrsne	r0, (UNDEF: 5)
    90e8:	00006018 	andeq	r6, r0, r8, lsl r0
    90ec:	12400000 	subne	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:28
            mAddress = addr;
    90f0:	00003507 	andeq	r3, r0, r7, lsl #10
    90f4:	60181405 	andsvs	r1, r8, r5, lsl #8
    90f8:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:29
        } 
    90fc:	151ffe00 	ldrne	pc, [pc, #-3584]	; 8304 <_ZNK13CGPIO_Handler18Get_GPSET_LocationEjRjS0_+0x1c>
    9100:	000034fd 	strdeq	r3, [r0], -sp
    9104:	60181705 	andsvs	r1, r8, r5, lsl #14
    9108:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
_ZN16CI2C_TransactionC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:24
        CI2C_Transaction() = default;
    910c:	7a14007f 	bvc	509310 <_bss_end+0x4f8290>
    9110:	14000002 	strne	r0, [r0], #-2
    9114:	0000028a 	andeq	r0, r0, sl, lsl #5
    9118:	00029a14 	andeq	r9, r2, r4, lsl sl
    911c:	02a81400 	adceq	r1, r8, #0, 8
    9120:	b8140000 	ldmdalt	r4, {}	; <UNPREDICTABLE>
    9124:	16000002 	strne	r0, [r0], -r2
    9128:	00003676 	andeq	r3, r0, r6, ror r6
    912c:	09060fff 	stmdbeq	r6, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    9130:	00037a07 	andeq	r7, r3, r7, lsl #20
    9134:	35620700 	strbcc	r0, [r2, #-1792]!	; 0xfffff900
    9138:	0c060000 	stceq	0, cr0, [r6], {-0}
    913c:	00037a0d 	andeq	r7, r3, sp, lsl #20
    9140:	5d170000 	ldcpl	0, cr0, [r7, #-0]
    9144:	06000035 			; <UNDEFINED> instruction: 0x06000035
    9148:	35ce0a0e 	strbcc	r0, [lr, #2574]	; 0xa0e
    914c:	030f0000 	movweq	r0, #61440	; 0xf000
    9150:	031f0000 	tsteq	pc, #0
_ZN8CMonitorC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:5
CMonitor::CMonitor(unsigned int monitor_base_addr, unsigned int width, unsigned int height)
    9154:	8b0b0000 	blhi	2c915c <_bss_end+0x2b80dc>
    9158:	0d000003 	stceq	0, cr0, [r0, #-12]
    915c:	00000054 	andeq	r0, r0, r4, asr r0
    9160:	0000b90d 	andeq	fp, r0, sp, lsl #18
    9164:	760c0000 	strvc	r0, [ip], -r0
    9168:	06000036 			; <UNDEFINED> instruction: 0x06000036
    916c:	35e90511 	strbcc	r0, [r9, #1297]!	; 0x511
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:6
: m_monitor{ reinterpret_cast<unsigned char*>(monitor_base_addr) }
    9170:	038b0000 	orreq	r0, fp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:10
, m_number_base{ DEFAULT_NUMBER_BASE }
    9174:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    9178:	3e000003 	cdpcc	0, 0, cr0, cr0, cr3, {0}
    917c:	0b000003 	bleq	9190 <_ZN8CMonitorC1Ejjj+0x3c>
    9180:	0000038b 	andeq	r0, r0, fp, lsl #7
    9184:	35480c00 	strbcc	r0, [r8, #-3072]	; 0xfffff400
    9188:	14060000 	strne	r0, [r6], #-0
    918c:	00358f0e 	eorseq	r8, r5, lr, lsl #30
    9190:	00005400 	andeq	r5, r0, r0, lsl #8
    9194:	03570100 	cmpeq	r7, #0, 2
    9198:	035d0000 	cmpeq	sp, #0
    919c:	8b0b0000 	blhi	2c91a4 <_bss_end+0x2b8124>
    91a0:	00000003 	andeq	r0, r0, r3
    91a4:	0035530e 	eorseq	r5, r5, lr, lsl #6
    91a8:	0a160600 	beq	58a9b0 <_bss_end+0x579930>
    91ac:	00003657 	andeq	r3, r0, r7, asr r6
    91b0:	00036e01 	andeq	r6, r3, r1, lsl #28
    91b4:	038b0b00 	orreq	r0, fp, #0, 22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:12
}
    91b8:	540d0000 	strpl	r0, [sp], #-0
    91bc:	00000000 	andeq	r0, r0, r0
    91c0:	003a1800 	eorseq	r1, sl, r0, lsl #16
    91c4:	038b0000 	orreq	r0, fp, #0
    91c8:	65190000 	ldrvs	r0, [r9, #-0]
_ZN8CMonitor5ClearEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:21
{
    91cc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    91d0:	0408000f 	streq	r0, [r8], #-15
    91d4:	000002e0 	andeq	r0, r0, r0, ror #5
    91d8:	00369c10 	eorseq	r9, r6, r0, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:22
    Reset_Cursor();
    91dc:	16190600 	ldrne	r0, [r9], -r0, lsl #12
    91e0:	000002e0 	andeq	r0, r0, r0, ror #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24
    for (unsigned int y = 0; y < m_height; ++y)
    91e4:	0001651a 	andeq	r6, r1, sl, lsl r5
    91e8:	16040100 	strne	r0, [r4], -r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 1)
    91ec:	00600305 	rsbeq	r0, r0, r5, lsl #6
    91f0:	6f1b0001 	svcvs	0x001b0001
    91f4:	0c000035 	stceq	0, cr0, [r0], {53}	; 0x35
    91f8:	1c0000d9 	stcne	0, cr0, [r0], {217}	; 0xd9
    91fc:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26
        for (unsigned int x = 0; x < m_width; ++x)
    9200:	023e1c9c 	eorseq	r1, lr, #156, 24	; 0x9c00
    9204:	d8c00000 	stmiale	r0, {}^	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 3)
    9208:	004c0000 	subeq	r0, ip, r0
    920c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9210:	000003ec 	andeq	r0, r0, ip, ror #7
    9214:	0003381d 	andeq	r3, r3, sp, lsl r8
    9218:	015f0100 	cmpeq	pc, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:28 (discriminator 2)
            m_monitor[(y * m_width) + x] = ' ';
    921c:	00000033 	andeq	r0, r0, r3, lsr r0
    9220:	1d749102 	ldfnep	f1, [r4, #-8]!
    9224:	00000731 	andeq	r0, r0, r1, lsr r7
    9228:	33015f01 	movwcc	r5, #7937	; 0x1f01
    922c:	02000000 	andeq	r0, r0, #0
    9230:	1e007091 	mcrne	0, 0, r7, cr0, cr1, {4}
    9234:	0000013b 	andeq	r0, r0, fp, lsr r1
    9238:	06064901 	streq	r4, [r6], -r1, lsl #18
    923c:	a4000004 	strge	r0, [r0], #-4
    9240:	1c0000d7 	stcne	0, cr0, [r0], {215}	; 0xd7
    9244:	01000001 	tsteq	r0, r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:26 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9248:	0004319c 	muleq	r4, ip, r1
    924c:	03291f00 			; <UNDEFINED> instruction: 0x03291f00
    9250:	015e0000 	cmpeq	lr, r0
    9254:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:24 (discriminator 2)
    for (unsigned int y = 0; y < m_height; ++y)
    9258:	656d206c 	strbvs	r2, [sp, #-108]!	; 0xffffff94
    925c:	4901006d 	stmdbmi	r1, {r0, r2, r3, r5, r6}
    9260:	00016327 	andeq	r6, r1, r7, lsr #6
    9264:	68910200 	ldmvs	r1, {r9}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:31
}
    9268:	00358921 	eorseq	r8, r5, r1, lsr #18
    926c:	204b0100 	subcs	r0, fp, r0, lsl #2
    9270:	000000b3 	strheq	r0, [r0], -r3
_ZN8CMonitor6ScrollEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:49
{
    9274:	00749102 	rsbseq	r9, r4, r2, lsl #2
    9278:	00011722 	andeq	r1, r1, r2, lsr #14
    927c:	07190100 	ldreq	r0, [r9, -r0, lsl #2]
    9280:	00000163 	andeq	r0, r0, r3, ror #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50
    for (unsigned int y = 1; y < m_height; ++y)
    9284:	0000044f 	andeq	r0, r0, pc, asr #8
    9288:	0000d658 	andeq	sp, r0, r8, asr r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 1)
    928c:	0000014c 	andeq	r0, r0, ip, asr #2
    9290:	04899c01 	streq	r9, [r9], #3073	; 0xc01
    9294:	291f0000 	ldmdbcs	pc, {}	; <UNPREDICTABLE>
    9298:	5e000003 	cdppl	0, 0, cr0, cr0, cr3, {0}
    929c:	02000001 	andeq	r0, r0, #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52
        for (unsigned int x = 0; x < m_width; ++x)
    92a0:	451d6c91 	ldrmi	r6, [sp, #-3217]	; 0xfffff36f
    92a4:	0100000e 	tsteq	r0, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 3)
    92a8:	00542c19 	subseq	r2, r4, r9, lsl ip
    92ac:	91020000 	mrsls	r0, (UNDEF: 2)
    92b0:	35892168 	strcc	r2, [r9, #360]	; 0x168
    92b4:	1b010000 	blne	492bc <_bss_end+0x3823c>
    92b8:	0000b320 	andeq	fp, r0, r0, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:54 (discriminator 2)
            m_monitor[((y - 1) * m_width) + x] = m_monitor[(y * m_width) + x];
    92bc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    92c0:	00354321 	eorseq	r4, r5, r1, lsr #6
    92c4:	20380100 	eorscs	r0, r8, r0, lsl #2
    92c8:	000000b3 	strheq	r0, [r0], -r3
    92cc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    92d0:	0000da23 	andeq	sp, r0, r3, lsr #20
    92d4:	1c0d0100 	stfnes	f0, [sp], {-0}
    92d8:	000004a3 	andeq	r0, r0, r3, lsr #9
    92dc:	0000d5f0 	strdeq	sp, [r0], -r0
    92e0:	00000068 	andeq	r0, r0, r8, rrx
    92e4:	04bf9c01 	ldrteq	r9, [pc], #3073	; 92ec <_ZN8CMonitor6ScrollEv+0x78>
    92e8:	291f0000 	ldmdbcs	pc, {}	; <UNPREDICTABLE>
    92ec:	5e000003 	cdppl	0, 0, cr0, cr0, cr3, {0}
    92f0:	02000001 	andeq	r0, r0, #1
    92f4:	89216c91 	stmdbhi	r1!, {r0, r4, r7, sl, fp, sp, lr}
    92f8:	01000035 	tsteq	r0, r5, lsr r0
    92fc:	00b3200f 	adcseq	r2, r3, pc
    9300:	91020000 	mrsls	r0, (UNDEF: 2)
    9304:	f8240074 			; <UNDEFINED> instruction: 0xf8240074
    9308:	01000000 	mrseq	r0, (UNDEF: 0)
    930c:	04d00106 	ldrbeq	r0, [r0], #262	; 0x106
    9310:	da000000 	ble	9318 <_ZN8CMonitor6ScrollEv+0xa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:52 (discriminator 2)
        for (unsigned int x = 0; x < m_width; ++x)
    9314:	25000004 	strcs	r0, [r0, #-4]
    9318:	00000329 	andeq	r0, r0, r9, lsr #6
    931c:	0000015e 	andeq	r0, r0, lr, asr r1
    9320:	04bf2600 	ldrteq	r2, [pc], #1536	; 9328 <_ZN8CMonitor6ScrollEv+0xb4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:50 (discriminator 2)
    for (unsigned int y = 1; y < m_height; ++y)
    9324:	35b00000 	ldrcc	r0, [r0, #0]!
    9328:	04f10000 	ldrbteq	r0, [r1], #0
    932c:	d5bc0000 	ldrle	r0, [ip, #0]!
    9330:	00340000 	eorseq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58
    for (unsigned int x = 0; x < m_width; ++x)
    9334:	9c010000 	stcls	0, cr0, [r1], {-0}
    9338:	0004d027 	andeq	sp, r4, r7, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 3)
    933c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    9340:	04340000 	ldrteq	r0, [r4], #-0
    9344:	00040000 	andeq	r0, r4, r0
    9348:	000026df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    934c:	00610104 	rsbeq	r0, r1, r4, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:60 (discriminator 2)
        m_monitor[((m_height - 1) * m_width) + x] = ' ';
    9350:	aa040000 	bge	109358 <_bss_end+0xf82d8>
    9354:	26000036 			; <UNDEFINED> instruction: 0x26000036
    9358:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    935c:	a40000d9 	strge	r0, [r0], #-217	; 0xffffff27
    9360:	e4000002 	str	r0, [r0], #-2
    9364:	02000033 	andeq	r0, r0, #51	; 0x33
    9368:	05700801 	ldrbeq	r0, [r0, #-2049]!	; 0xfffff7ff
    936c:	02020000 	andeq	r0, r2, #0
    9370:	00059605 	andeq	r9, r5, r5, lsl #12
    9374:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    9378:	00746e69 	rsbseq	r6, r4, r9, ror #28
    937c:	00097f04 	andeq	r7, r9, r4, lsl #30
    9380:	07070200 	streq	r0, [r7, -r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:58 (discriminator 2)
    for (unsigned int x = 0; x < m_width; ++x)
    9384:	00000046 	andeq	r0, r0, r6, asr #32
    9388:	67080102 	strvs	r0, [r8, -r2, lsl #2]
    938c:	02000005 	andeq	r0, r0, #5
    9390:	03d90702 	bicseq	r0, r9, #524288	; 0x80000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:62
}
    9394:	e1040000 	mrs	r0, (UNDEF: 4)
    9398:	02000005 	andeq	r0, r0, #5
    939c:	00650709 	rsbeq	r0, r5, r9, lsl #14
    93a0:	54050000 	strpl	r0, [r5], #-0
_ZN8CMonitorlsEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:70
{
    93a4:	02000000 	andeq	r0, r0, #0
    93a8:	40ee0704 	rscmi	r0, lr, r4, lsl #14
    93ac:	65050000 	strvs	r0, [r5, #-0]
    93b0:	06000000 	streq	r0, [r0], -r0
    93b4:	006c6168 	rsbeq	r6, ip, r8, ror #2
    93b8:	2b0b0503 	blcs	2ca7cc <_bss_end+0x2b974c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:71
    if (c != '\n')
    93bc:	07000001 	streq	r0, [r0, -r1]
    93c0:	00000484 	andeq	r0, r0, r4, lsl #9
    93c4:	6c190703 	ldcvs	7, cr0, [r9], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:73
        m_monitor[(m_cursor.y * m_width) + m_cursor.x] = static_cast<unsigned char>(c);
    93c8:	80000000 	andhi	r0, r0, r0
    93cc:	070ee6b2 			; <UNDEFINED> instruction: 0x070ee6b2
    93d0:	000005c9 	andeq	r0, r0, r9, asr #11
    93d4:	371a0a03 	ldrcc	r0, [sl, -r3, lsl #20]
    93d8:	00000001 	andeq	r0, r0, r1
    93dc:	07200000 	streq	r0, [r0, -r0]!
    93e0:	0000044f 	andeq	r0, r0, pc, asr #8
    93e4:	371a0d03 	ldrcc	r0, [sl, -r3, lsl #26]
    93e8:	00000001 	andeq	r0, r0, r1
    93ec:	08202000 	stmdaeq	r0!, {sp}
    93f0:	00000587 	andeq	r0, r0, r7, lsl #11
    93f4:	60151003 	andsvs	r1, r5, r3
    93f8:	36000000 	strcc	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:74
        ++m_cursor.x;
    93fc:	00037007 	andeq	r7, r3, r7
    9400:	1a420300 	bne	108a008 <_bss_end+0x1078f88>
    9404:	00000137 	andeq	r0, r0, r7, lsr r1
    9408:	20215000 	eorcs	r5, r1, r0
    940c:	00034707 	andeq	r4, r3, r7, lsl #14
    9410:	1a710300 	bne	1c4a018 <_bss_end+0x1c38f98>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:78
        m_cursor.x = 0;
    9414:	00000137 	andeq	r0, r0, r7, lsr r1
    9418:	2000b200 	andcs	fp, r0, r0, lsl #4
    941c:	0002b307 	andeq	fp, r2, r7, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:79
        ++m_cursor.y;
    9420:	1aa40300 	bne	fe90a028 <_bss_end+0xfe8f8fa8>
    9424:	00000137 	andeq	r0, r0, r7, lsr r1
    9428:	2000b400 	andcs	fp, r0, r0, lsl #8
    942c:	00036107 	andeq	r6, r3, r7, lsl #2
    9430:	1ab30300 	bne	fecca038 <_bss_end+0xfecb8fb8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:82
    Adjust_Cursor();
    9434:	00000137 	andeq	r0, r0, r7, lsr r1
    9438:	20104000 	andscs	r4, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:84
    return *this;
    943c:	00032e07 	andeq	r2, r3, r7, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:85
}
    9440:	1abe0300 	bne	fef8a048 <_bss_end+0xfef78fc8>
    9444:	00000137 	andeq	r0, r0, r7, lsr r1
    9448:	20205000 	eorcs	r5, r0, r0
_ZN8CMonitorlsEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:88
{
    944c:	0003ec07 	andeq	lr, r3, r7, lsl #24
    9450:	1abf0300 	bne	fefca058 <_bss_end+0xfefb8fd8>
    9454:	00000137 	andeq	r0, r0, r7, lsr r1
    9458:	20804000 	addcs	r4, r0, r0
    945c:	00045907 	andeq	r5, r4, r7, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    9460:	1ac00300 	bne	ff00a068 <_bss_end+0xfeff8fe8>
    9464:	00000137 	andeq	r0, r0, r7, lsr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 3)
    9468:	20805000 	addcs	r5, r0, r0
    946c:	007d0900 	rsbseq	r0, sp, r0, lsl #18
    9470:	04020000 	streq	r0, [r2], #-0
    9474:	0040e907 	subeq	lr, r0, r7, lsl #18
    9478:	01300500 	teqeq	r0, r0, lsl #10
    947c:	8d090000 	stchi	0, cr0, [r9, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:91 (discriminator 2)
        *this << str[i];
    9480:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9484:	0000009d 	muleq	r0, sp, r0
    9488:	0000ad09 	andeq	sl, r0, r9, lsl #26
    948c:	00ba0900 	adcseq	r0, sl, r0, lsl #18
    9490:	ca090000 	bgt	249498 <_bss_end+0x238418>
    9494:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9498:	000000da 	ldrdeq	r0, [r0], -sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:89 (discriminator 2)
    for (unsigned int i = 0; str[i] != '\0'; ++i)
    949c:	0000ea09 	andeq	lr, r0, r9, lsl #20
    94a0:	00fa0900 	rscseq	r0, sl, r0, lsl #18
    94a4:	0a090000 	beq	2494ac <_bss_end+0x23842c>
    94a8:	09000001 	stmdbeq	r0, {r0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:94
    Reset_Number_Base();
    94ac:	0000011a 	andeq	r0, r0, sl, lsl r1
    94b0:	6d656d06 	stclvs	13, cr6, [r5, #-24]!	; 0xffffffe8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:96
    return *this;
    94b4:	0b060400 	bleq	18a4bc <_bss_end+0x17943c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:97
}
    94b8:	000001c7 	andeq	r0, r0, r7, asr #3
    94bc:	00352e07 	eorseq	r2, r5, r7, lsl #28
    94c0:	180a0400 	stmdane	sl, {sl}
_ZN8CMonitorlsENS_12NNumber_BaseE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:100
{
    94c4:	00000060 	andeq	r0, r0, r0, rrx
    94c8:	00020000 	andeq	r0, r2, r0
    94cc:	00353807 	eorseq	r3, r5, r7, lsl #16
    94d0:	180e0400 	stmdane	lr, {sl}
    94d4:	00000060 	andeq	r0, r0, r0, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:101
    m_number_base = number_base;
    94d8:	20000000 	andcs	r0, r0, r0
    94dc:	0035180a 	eorseq	r1, r5, sl, lsl #16
    94e0:	18110400 	ldmdane	r1, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:103
    return *this;
    94e4:	00000060 	andeq	r0, r0, r0, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:104
}
    94e8:	07074000 	streq	r4, [r7, -r0]
    94ec:	04000035 	streq	r0, [r0], #-53	; 0xffffffcb
    94f0:	00601814 	rsbeq	r1, r0, r4, lsl r8
    94f4:	00000000 	andeq	r0, r0, r0
_ZN8CMonitorlsEj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:107
{
    94f8:	fd0a1ffe 	stc2	15, cr1, [sl, #-1016]	; 0xfffffc08
    94fc:	04000034 	streq	r0, [r0], #-52	; 0xffffffcc
    9500:	00601817 	rsbeq	r1, r0, r7, lsl r8
    9504:	7ff80000 	svcvc	0x00f80000
    9508:	017a0900 	cmneq	sl, r0, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:112
    itoa(num, s_buffer, static_cast<unsigned int>(m_number_base));
    950c:	8a090000 	bhi	249514 <_bss_end+0x238494>
    9510:	09000001 	stmdbeq	r0, {r0}
    9514:	0000019a 	muleq	r0, sl, r1
    9518:	0001a809 	andeq	sl, r1, r9, lsl #16
    951c:	01b80900 			; <UNDEFINED> instruction: 0x01b80900
    9520:	760b0000 	strvc	r0, [fp], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:113
    *this << s_buffer;
    9524:	ff000036 			; <UNDEFINED> instruction: 0xff000036
    9528:	0709050f 	streq	r0, [r9, -pc, lsl #10]
    952c:	0000027a 	andeq	r0, r0, sl, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:114
    Reset_Number_Base();
    9530:	0035620c 	eorseq	r6, r5, ip, lsl #4
    9534:	0d0c0500 	cfstr32eq	mvfx0, [ip, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:116
    return *this;
    9538:	0000027a 	andeq	r0, r0, sl, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:117
}
    953c:	355d0d00 	ldrbcc	r0, [sp, #-3328]	; 0xfffff300
    9540:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    9544:	0035ce0a 	eorseq	ip, r5, sl, lsl #28
    9548:	00020f00 	andeq	r0, r2, r0, lsl #30
_ZN8CMonitorlsEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:120
{
    954c:	00021f00 	andeq	r1, r2, r0, lsl #30
    9550:	028b0e00 	addeq	r0, fp, #0, 28
    9554:	540f0000 	strpl	r0, [pc], #-0	; 955c <_ZN8CMonitorlsEb+0x10>
    9558:	0f000000 	svceq	0x00000000
    955c:	00000296 	muleq	r0, r6, r2
    9560:	36761000 	ldrbtcc	r1, [r6], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:121
    if (value)
    9564:	11050000 	mrsne	r0, (UNDEF: 5)
    9568:	0035e905 	eorseq	lr, r5, r5, lsl #18
    956c:	00028b00 	andeq	r8, r2, r0, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:123
        *this << "true";
    9570:	02380100 	eorseq	r0, r8, #0, 2
    9574:	023e0000 	eorseq	r0, lr, #0
    9578:	8b0e0000 	blhi	389580 <_bss_end+0x378500>
    957c:	00000002 	andeq	r0, r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:127
        *this << "false";
    9580:	00354810 	eorseq	r4, r5, r0, lsl r8
    9584:	0e140500 	cfmul32eq	mvfx0, mvfx4, mvfx0
    9588:	0000358f 	andeq	r3, r0, pc, lsl #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:130
    Reset_Number_Base();
    958c:	00000054 	andeq	r0, r0, r4, asr r0
    9590:	00025701 	andeq	r5, r2, r1, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:132
    return *this;
    9594:	00025d00 	andeq	r5, r2, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:133
}
    9598:	028b0e00 	addeq	r0, fp, #0, 28
    959c:	11000000 	mrsne	r0, (UNDEF: 0)
    95a0:	00003553 	andeq	r3, r0, r3, asr r5
    95a4:	570a1605 	strpl	r1, [sl, -r5, lsl #12]
    95a8:	01000036 	tsteq	r0, r6, lsr r0
_ZN8CMonitor4itoaEjPcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:136
{
    95ac:	0000026e 	andeq	r0, r0, lr, ror #4
    95b0:	00028b0e 	andeq	r8, r2, lr, lsl #22
    95b4:	00540f00 	subseq	r0, r4, r0, lsl #30
    95b8:	00000000 	andeq	r0, r0, r0
    95bc:	00003a12 	andeq	r3, r0, r2, lsl sl
    95c0:	00028b00 	andeq	r8, r2, r0, lsl #22
    95c4:	00651300 	rsbeq	r1, r5, r0, lsl #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:137
    int i = 0;
    95c8:	0ffe0000 	svceq	0x00fe0000
    95cc:	e0041400 	and	r1, r4, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    95d0:	05000001 	streq	r0, [r0, #-1]
    95d4:	0000028b 	andeq	r0, r0, fp, lsl #5
    95d8:	a5020102 	strge	r0, [r2, #-258]	; 0xfffffefe
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:141
        output[i] = CharConvArr[input % base];
    95dc:	15000040 	strne	r0, [r0, #-64]	; 0xffffffc0
    95e0:	0000369c 	muleq	r0, ip, r6
    95e4:	e0161905 	ands	r1, r6, r5, lsl #18
    95e8:	16000001 	strne	r0, [r0], -r1
    95ec:	0000029d 	muleq	r0, sp, r2
    95f0:	050f0301 	streq	r0, [pc, #-769]	; 92f7 <_ZN8CMonitor6ScrollEv+0x83>
    95f4:	01006403 	tsteq	r0, r3, lsl #8
    95f8:	368d1700 	strcc	r1, [sp], r0, lsl #14
    95fc:	dbb00000 	blle	fec09604 <_bss_end+0xfebf8584>
    9600:	001c0000 	andseq	r0, ip, r0
    9604:	9c010000 	stcls	0, cr0, [r1], {-0}
    9608:	00023e18 	andeq	r3, r2, r8, lsl lr
    960c:	00db6400 	sbcseq	r6, fp, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:142
        input /= base;
    9610:	00004c00 	andeq	r4, r0, r0, lsl #24
    9614:	f89c0100 			; <UNDEFINED> instruction: 0xf89c0100
    9618:	19000002 	stmdbne	r0, {r1}
    961c:	00000338 	andeq	r0, r0, r8, lsr r3
    9620:	33013901 	movwcc	r3, #6401	; 0x1901
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:144
        i++;
    9624:	02000000 	andeq	r0, r0, #0
    9628:	31197491 			; <UNDEFINED> instruction: 0x31197491
    962c:	01000007 	tsteq	r0, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:139
    while (input > 0)
    9630:	00330139 	eorseq	r0, r3, r9, lsr r1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:147
    if (i == 0)
    9634:	91020000 	mrsls	r0, (UNDEF: 2)
    9638:	5d1a0070 	ldcpl	0, cr0, [sl, #-448]	; 0xfffffe40
    963c:	01000002 	tsteq	r0, r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:149
        output[i] = CharConvArr[0];
    9640:	03120634 	tsteq	r2, #52, 12	; 0x3400000
    9644:	db2c0000 	blle	b0964c <_bss_end+0xaf85cc>
    9648:	00380000 	eorseq	r0, r8, r0
    964c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9650:	0000032d 	andeq	r0, r0, sp, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:150
        i++;
    9654:	0003291b 	andeq	r2, r3, fp, lsl r9
    9658:	00029100 	andeq	r9, r2, r0, lsl #2
    965c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:153
    output[i] = '\0';
    9660:	0061661c 	rsbeq	r6, r1, ip, lsl r6
    9664:	54283401 	strtpl	r3, [r8], #-1025	; 0xfffffbff
    9668:	02000000 	andeq	r0, r0, #0
    966c:	1a007091 	bne	258b8 <_bss_end+0x14838>
    9670:	0000023e 	andeq	r0, r0, lr, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:154
    i--;
    9674:	470a1601 	strmi	r1, [sl, -r1, lsl #12]
    9678:	48000003 	stmdami	r0, {r0, r1}
    967c:	e40000da 	str	r0, [r0], #-218	; 0xffffff26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156
    for (int j = 0; j <= (i / 2); j++)
    9680:	01000000 	mrseq	r0, (UNDEF: 0)
    9684:	0003879c 	muleq	r3, ip, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 3)
    9688:	03291b00 			; <UNDEFINED> instruction: 0x03291b00
    968c:	02910000 	addseq	r0, r1, #0
    9690:	91020000 	mrsls	r0, (UNDEF: 2)
    9694:	00691d64 	rsbeq	r1, r9, r4, ror #26
    9698:	540e1b01 	strpl	r1, [lr], #-2817	; 0xfffff4ff
    969c:	02000000 	andeq	r0, r0, #0
    96a0:	6a1d7491 	bvs	7668ec <_bss_end+0x75586c>
    96a4:	111b0100 	tstne	fp, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:158 (discriminator 2)
        char c = output[i - j];
    96a8:	00000054 	andeq	r0, r0, r4, asr r0
    96ac:	1e709102 	expnes	f1, f2
    96b0:	0000dac4 	andeq	sp, r0, r4, asr #21
    96b4:	00000034 	andeq	r0, r0, r4, lsr r0
    96b8:	0036841f 	eorseq	r8, r6, pc, lsl r4
    96bc:	24290100 	strtcs	r0, [r9], #-256	; 0xffffff00
    96c0:	00000060 	andeq	r0, r0, r0, rrx
    96c4:	006c9102 	rsbeq	r9, ip, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:159 (discriminator 2)
        output[i - j] = output[j];
    96c8:	01fb2000 	mvnseq	r2, r0
    96cc:	06010000 	streq	r0, [r1], -r0
    96d0:	000003a0 	andeq	r0, r0, r0, lsr #7
    96d4:	0000d98c 	andeq	sp, r0, ip, lsl #19
    96d8:	000000bc 	strheq	r0, [r0], -ip
    96dc:	03cb9c01 	biceq	r9, fp, #256	; 0x100
    96e0:	291b0000 	ldmdbcs	fp, {}	; <UNPREDICTABLE>
    96e4:	91000003 	tstls	r0, r3
    96e8:	02000002 	andeq	r0, r0, #2
    96ec:	84197491 	ldrhi	r7, [r9], #-1169	; 0xfffffb6f
    96f0:	01000036 	tsteq	r0, r6, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:160 (discriminator 2)
        output[j] = c;
    96f4:	0054230e 	subseq	r2, r4, lr, lsl #6
    96f8:	91020000 	mrsls	r0, (UNDEF: 2)
    96fc:	36fb1970 			; <UNDEFINED> instruction: 0x36fb1970
    9700:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    9704:	00029632 	andeq	r9, r2, r2, lsr r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:156 (discriminator 2)
    for (int j = 0; j <= (i / 2); j++)
    9708:	6f910200 	svcvs	0x00910200
    970c:	021f2100 	andseq	r2, pc, #0, 2
    9710:	05010000 	streq	r0, [r1, #-0]
    9714:	0003dc01 	andeq	sp, r3, r1, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    9718:	03f20000 	mvnseq	r0, #0
    971c:	29220000 	stmdbcs	r2!, {}	; <UNPREDICTABLE>
    9720:	91000003 	tstls	r0, r3
    9724:	23000002 	movwcs	r0, #2
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9728:	01006924 	tsteq	r0, r4, lsr #18
    972c:	00330e08 	eorseq	r0, r3, r8, lsl #28
    9730:	00000000 	andeq	r0, r0, r0
    9734:	0003cb25 	andeq	ip, r3, r5, lsr #22
    9738:	00370000 	eorseq	r0, r7, r0
    973c:	00040900 	andeq	r0, r4, r0, lsl #18
    9740:	00d92800 	sbcseq	r2, r9, r0, lsl #16
    9744:	00006400 	andeq	r6, r0, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162 (discriminator 1)
    9748:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
    974c:	000003dc 	ldrdeq	r0, [r0], -ip
    9750:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    9754:	000003e5 	andeq	r0, r0, r5, ror #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:3
CMonitor sMonitor{ 0x30000000, 80, 25 };
    9758:	00000420 	andeq	r0, r0, r0, lsr #8
    975c:	0003e628 	andeq	lr, r3, r8, lsr #12
    9760:	e5290000 	str	r0, [r9, #-0]!
    9764:	38000003 	stmdacc	r0, {r0, r1}
    9768:	3c0000d9 	stccc	0, cr0, [r0], {217}	; 0xd9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
}
    976c:	2a000000 	bcs	9774 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    9770:	000003e6 	andeq	r0, r0, r6, ror #7
    9774:	00749102 	rsbseq	r9, r4, r2, lsl #2
    9778:	11100000 	tstne	r0, r0
    977c:	00040000 	andeq	r0, r4, r0
_GLOBAL__sub_I_sMonitor():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:162
    9780:	00002951 	andeq	r2, r0, r1, asr r9
    9784:	00610104 	rsbeq	r0, r1, r4, lsl #2
    9788:	b8040000 	stmdalt	r4, {}	; <UNPREDICTABLE>
    978c:	26000037 			; <UNDEFINED> instruction: 0x26000037
    9790:	b0000000 	andlt	r0, r0, r0
    9794:	00000002 	andeq	r0, r0, r2
    9798:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
_ZN8CMonitor12Reset_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:15
{
    979c:	02000035 	andeq	r0, r0, #53	; 0x35
    97a0:	05700801 	ldrbeq	r0, [r0, #-2049]!	; 0xfffff7ff
    97a4:	25030000 	strcs	r0, [r3, #-0]
    97a8:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:16
    m_cursor.y = 0;
    97ac:	05960502 	ldreq	r0, [r6, #1282]	; 0x502
    97b0:	04040000 	streq	r0, [r4], #-0
    97b4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:17
    m_cursor.y = 0;
    97b8:	097f0500 	ldmdbeq	pc!, {r8, sl}^	; <UNPREDICTABLE>
    97bc:	07030000 	streq	r0, [r3, -r0]
    97c0:	00004b07 	andeq	r4, r0, r7, lsl #22
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:18
}
    97c4:	08010200 	stmdaeq	r1, {r9}
    97c8:	00000567 	andeq	r0, r0, r7, ror #10
    97cc:	00004b06 	andeq	r4, r0, r6, lsl #22
    97d0:	07020200 	streq	r0, [r2, -r0, lsl #4]
_ZN8CMonitor13Adjust_CursorEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:34
{
    97d4:	000003d9 	ldrdeq	r0, [r0], -r9
    97d8:	0005e105 	andeq	lr, r5, r5, lsl #2
    97dc:	07090300 	streq	r0, [r9, -r0, lsl #6]
    97e0:	0000006f 	andeq	r0, r0, pc, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:35
    if (m_cursor.x >= m_width)
    97e4:	00005e03 	andeq	r5, r0, r3, lsl #28
    97e8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    97ec:	000040ee 	andeq	r4, r0, lr, ror #1
    97f0:	00006f03 	andeq	r6, r0, r3, lsl #30
    97f4:	2f690700 	svccs	0x00690700
    97f8:	04040000 	streq	r0, [r4], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:37
        m_cursor.x = 0;
    97fc:	00006a14 	andeq	r6, r0, r4, lsl sl
    9800:	e8030500 	stmda	r3, {r8, sl}
    9804:	080000fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:38
        ++m_cursor.y;
    9808:	00003058 	andeq	r3, r0, r8, asr r0
    980c:	00380405 	eorseq	r0, r8, r5, lsl #8
    9810:	07040000 	streq	r0, [r4, -r0]
    9814:	0000b80c 	andeq	fp, r0, ip, lsl #16
    9818:	654e0900 	strbvs	r0, [lr, #-2304]	; 0xfffff700
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:41
    if (m_cursor.y >= m_height)
    981c:	0a000077 	beq	9a00 <_ZN16CDisplay_SSD13064OpenEii+0x114>
    9820:	0000304f 	andeq	r3, r0, pc, asr #32
    9824:	19c00a01 	stmibne	r0, {r0, r9, fp}^
    9828:	0a020000 	beq	89830 <_bss_end+0x787b0>
    982c:	00003180 	andeq	r3, r0, r0, lsl #3
    9830:	2c0b0003 	stccs	0, cr0, [fp], {3}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:43
        Scroll();
    9834:	0c00002f 	stceq	0, cr0, [r0], {47}	; 0x2f
    9838:	ea081604 	b	20f050 <_bss_end+0x1fdfd0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:44
        m_cursor.y = m_height - 1;
    983c:	0c000000 	stceq	0, cr0, [r0], {-0}
    9840:	0400726c 	streq	r7, [r0], #-620	; 0xfffffd94
    9844:	00ea1318 	rsceq	r1, sl, r8, lsl r3
    9848:	0c000000 	stceq	0, cr0, [r0], {-0}
    984c:	04007073 	streq	r7, [r0], #-115	; 0xffffff8d
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:46
}
    9850:	00ea1319 	rsceq	r1, sl, r9, lsl r3
    9854:	0c040000 	stceq	0, cr0, [r4], {-0}
    9858:	04006370 	streq	r6, [r0], #-880	; 0xfffffc90
_ZN8CMonitor17Reset_Number_BaseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:65
{
    985c:	00ea131a 	rsceq	r1, sl, sl, lsl r3
    9860:	00080000 	andeq	r0, r8, r0
    9864:	e9070402 	stmdb	r7, {r1, sl}
    9868:	03000040 	movweq	r0, #64	; 0x40
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:66
    m_number_base = DEFAULT_NUMBER_BASE;
    986c:	000000ea 	andeq	r0, r0, sl, ror #1
    9870:	0033160b 	eorseq	r1, r3, fp, lsl #12
    9874:	22045c00 	andcs	r5, r4, #0, 24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/monitor.cpp:67
}
    9878:	00015208 	andeq	r5, r1, r8, lsl #4
    987c:	32c10d00 	sbccc	r0, r1, #0, 26
    9880:	24040000 	strcs	r0, [r4], #-0
    9884:	0000b812 	andeq	fp, r0, r2, lsl r8
_ZN16CDisplay_SSD1306C2ER4CI2C():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:9
CDisplay_SSD1306::CDisplay_SSD1306(CI2C& i2c)
    9888:	700c0000 	andvc	r0, ip, r0
    988c:	04006469 	streq	r6, [r0], #-1129	; 0xfffffb97
    9890:	006f1225 	rsbeq	r1, pc, r5, lsr #4
    9894:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    9898:	00002eb0 			; <UNDEFINED> instruction: 0x00002eb0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:10
    : mI2C(i2c), mOpened(false), mBuffer(nullptr), mWidth(0), mHeight(0)
    989c:	8d112604 	ldchi	6, cr2, [r1, #-16]
    98a0:	10000000 	andne	r0, r0, r0
    98a4:	0030740d 	eorseq	r7, r0, sp, lsl #8
    98a8:	12270400 	eorne	r0, r7, #0, 8
    98ac:	0000006f 	andeq	r0, r0, pc, rrx
    98b0:	30820d14 	addcc	r0, r2, r4, lsl sp
    98b4:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    98b8:	00006f12 	andeq	r6, r0, r2, lsl pc
    98bc:	1f0d1800 	svcne	0x000d1800
    98c0:	0400002f 	streq	r0, [r0], #-47	; 0xffffffd1
    98c4:	01520c2a 	cmpeq	r2, sl, lsr #24
    98c8:	001c0000 	andseq	r0, ip, r0
    98cc:	0001620e 	andeq	r6, r1, lr, lsl #4
    98d0:	00016200 	andeq	r6, r1, r0, lsl #4
    98d4:	006f0f00 	rsbeq	r0, pc, r0, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:13
}
    98d8:	000f0000 	andeq	r0, pc, r0
    98dc:	01680410 	cmneq	r8, r0, lsl r4
    98e0:	ea110000 	b	4498e8 <_bss_end+0x438868>
    98e4:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    98e8:	68072405 	stmdavs	r7, {r0, r2, sl, sp}
_ZN16CDisplay_SSD13064OpenEii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:16
{
    98ec:	65000001 	strvs	r0, [r0, #-1]
    98f0:	12000002 	andne	r0, r0, #2
    98f4:	000029e4 	andeq	r2, r0, r4, ror #19
    98f8:	00000d1f 	andeq	r0, r0, pc, lsl sp
    98fc:	86130100 	ldrhi	r0, [r3], -r0, lsl #2
    9900:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:17
    if (!mI2C.Open())
    9904:	1fd80d27 	svcne	0x00d80d27
    9908:	0ad80000 	beq	ff609910 <_bss_end+0xff5f8890>
    990c:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    9910:	01000001 	tsteq	r0, r1
    9914:	0001a301 	andeq	sl, r1, r1, lsl #6
    9918:	0001ae00 	andeq	sl, r1, r0, lsl #28
    991c:	01621400 	cmneq	r2, r0, lsl #8
    9920:	38140000 	ldmdacc	r4, {}	; <UNPREDICTABLE>
    9924:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:18
        return false;
    9928:	0002d015 	andeq	sp, r2, r5, lsl r0
    992c:	162b0500 	strtne	r0, [fp], -r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:20
    mOpened = true;
    9930:	0000239f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    9934:	0000005e 	andeq	r0, r0, lr, asr r0
    9938:	02100201 	andseq	r0, r0, #268435456	; 0x10000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:23
    if (height % 8 != 0)
    993c:	00000168 	andeq	r0, r0, r8, ror #2
    9940:	0001cf01 	andeq	ip, r1, r1, lsl #30
    9944:	0001df00 	andeq	sp, r1, r0, lsl #30
    9948:	01621400 	cmneq	r2, r0, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:24
        height += 8 - (height % 8);
    994c:	84160000 	ldrhi	r0, [r6], #-0
    9950:	16000009 	strne	r0, [r0], -r9
    9954:	0000005e 	andeq	r0, r0, lr, asr r0
    9958:	1cdd1500 	cfldr64ne	mvdx1, [sp], {0}
    995c:	31050000 	mrscc	r0, (UNDEF: 5)
    9960:	0024d516 	eoreq	sp, r4, r6, lsl r5
    9964:	00005e00 	andeq	r5, r0, r0, lsl #28
    9968:	10020100 	andne	r0, r2, r0, lsl #2
    996c:	00016803 	andeq	r6, r1, r3, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:26
    mWidth = width;
    9970:	02000100 	andeq	r0, r0, #0, 2
    9974:	02100000 	andseq	r0, r0, #0
    9978:	62140000 	andsvs	r0, r4, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:27
    mHeight = height;
    997c:	16000001 	strne	r0, [r0], -r1
    9980:	000004ec 	andeq	r0, r0, ip, ror #9
    9984:	00005e16 	andeq	r5, r0, r6, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:32
    mBuffer = new uint8_t[mWidth * mHeight / 8];
    9988:	aa150000 	bge	549990 <_bss_end+0x538910>
    998c:	05000009 	streq	r0, [r0, #-9]
    9990:	27421236 	smlaldxcs	r1, r2, r6, r2
    9994:	04df0000 	ldrbeq	r0, [pc], #0	; 999c <_ZN16CDisplay_SSD13064OpenEii+0xb0>
    9998:	02010000 	andeq	r0, r1, #0
    999c:	01680410 	cmneq	r8, r0, lsl r4
    99a0:	31010000 	mrscc	r0, (UNDEF: 1)
    99a4:	37000002 	strcc	r0, [r0, -r2]
    99a8:	14000002 	strne	r0, [r0], #-2
    99ac:	00000162 	andeq	r0, r0, r2, ror #2
    99b0:	24141700 	ldrcs	r1, [r4], #-1792	; 0xfffff900
    99b4:	3b050000 	blcc	1499bc <_bss_end+0x13893c>
    99b8:	00261f12 	eoreq	r1, r6, r2, lsl pc
    99bc:	0004df00 	andeq	sp, r4, r0, lsl #30
    99c0:	10020100 	andne	r0, r2, r0, lsl #2
    99c4:	00016805 	andeq	r6, r1, r5, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:36
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    99c8:	02540100 	subseq	r0, r4, #0, 2
    99cc:	62140000 	andsvs	r0, r4, #0
    99d0:	16000001 	strne	r0, [r0], -r1
    99d4:	000002d5 	ldrdeq	r0, [r0], -r5
    99d8:	000ad816 	andeq	sp, sl, r6, lsl r8
    99dc:	0b000000 	bleq	99e4 <_ZN16CDisplay_SSD13064OpenEii+0xf8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:38
        ta << SSD1306_Cmd::Command_Start
    99e0:	00002f13 	andeq	r2, r0, r3, lsl pc
    99e4:	08060608 	stmdaeq	r6, {r3, r9, sl}
    99e8:	0000028b 	andeq	r0, r0, fp, lsl #5
    99ec:	0030720c 	eorseq	r7, r0, ip, lsl #4
    99f0:	5e0e0806 	cdppl	8, 0, cr0, cr14, cr6, {0}
    99f4:	00000000 	andeq	r0, r0, r0
    99f8:	0031720c 	eorseq	r7, r1, ip, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:39
            << SSD1306_Cmd::Display_Off
    99fc:	5e0e0906 	vmlapl.f16	s0, s28, s12	; <UNPREDICTABLE>
    9a00:	04000000 	streq	r0, [r0], #-0
    9a04:	2e8c0800 	cdpcs	8, 8, cr0, cr12, cr0, {0}
    9a08:	04050000 	streq	r0, [r5], #-0
    9a0c:	00000038 	andeq	r0, r0, r8, lsr r0
    9a10:	a40c1e06 	strge	r1, [ip], #-3590	; 0xfffff1fa
    9a14:	0a000002 	beq	9a24 <_ZN16CDisplay_SSD13064OpenEii+0x138>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:40
            << SSD1306_Cmd::Set_Display_Clock_Div_Ratio
    9a18:	0000344d 	andeq	r3, r0, sp, asr #8
    9a1c:	e3080000 	movw	r0, #32768	; 0x8000
    9a20:	05000033 	streq	r0, [r0, #-51]	; 0xffffffcd
    9a24:	00003804 	andeq	r3, r0, r4, lsl #16
    9a28:	0c260600 	stceq	6, cr0, [r6], #-0
    9a2c:	000002d5 	ldrdeq	r0, [r0], -r5
    9a30:	000a1d0a 	andeq	r1, sl, sl, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:41
            << 0x80
    9a34:	d00a0000 	andle	r0, sl, r0
    9a38:	01000002 	tsteq	r0, r2
    9a3c:	001cdd0a 	andseq	sp, ip, sl, lsl #26
    9a40:	aa0a0200 	bge	28a248 <_bss_end+0x2791c8>
    9a44:	03000009 	movweq	r0, #9
    9a48:	0024140a 	eoreq	r1, r4, sl, lsl #8
    9a4c:	08000400 	stmdaeq	r0, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:42
            << SSD1306_Cmd::Set_Multiplex_Ratio;
    9a50:	00002122 	andeq	r2, r0, r2, lsr #2
    9a54:	00380405 	eorseq	r0, r8, r5, lsl #8
    9a58:	43060000 	movwmi	r0, #24576	; 0x6000
    9a5c:	0002f40c 	andeq	pc, r2, ip, lsl #8
    9a60:	22110a00 	andscs	r0, r1, #0, 20
    9a64:	0a000000 	beq	9a6c <_ZN16CDisplay_SSD13064OpenEii+0x180>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:44
        mI2C.End_Transaction(ta);
    9a68:	00001fe6 	andeq	r1, r0, r6, ror #31
    9a6c:	41070001 	tstmi	r7, r1
    9a70:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    9a74:	006a1a06 	rsbeq	r1, sl, r6, lsl #20
    9a78:	03050000 	movweq	r0, #20480	; 0x5000
    9a7c:	0000fbec 	andeq	pc, r0, ip, ror #23
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:49
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9a80:	001c7207 	andseq	r7, ip, r7, lsl #4
    9a84:	1a080500 	bne	20ae8c <_bss_end+0x1f9e0c>
    9a88:	0000006a 	andeq	r0, r0, sl, rrx
    9a8c:	fbf00305 	blx	ffc0a6aa <_bss_end+0xffbf962a>
    9a90:	90070000 	andls	r0, r7, r0
    9a94:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:51
        ta << SSD1306_Cmd::Command_Start
    9a98:	006a1a0a 	rsbeq	r1, sl, sl, lsl #20
    9a9c:	03050000 	movweq	r0, #20480	; 0x5000
    9aa0:	0000fbf4 	strdeq	pc, [r0], -r4
    9aa4:	001b7607 	andseq	r7, fp, r7, lsl #12
    9aa8:	1a0c0500 	bne	30aeb0 <_bss_end+0x2f9e30>
    9aac:	0000006a 	andeq	r0, r0, sl, rrx
    9ab0:	fbf80305 	blx	ffe0a6ce <_bss_end+0xffdf964e>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:52
            << height - 1;
    9ab4:	5c080000 	stcpl	0, cr0, [r8], {-0}
    9ab8:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    9abc:	00003804 	andeq	r3, r0, r4, lsl #16
    9ac0:	0c0e0500 	cfstr32eq	mvfx0, [lr], {-0}
    9ac4:	00000361 	andeq	r0, r0, r1, ror #6
    9ac8:	001d340a 	andseq	r3, sp, sl, lsl #8
    9acc:	3a0a0000 	bcc	289ad4 <_bss_end+0x278a54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:54
        mI2C.End_Transaction(ta);
    9ad0:	0100001e 	tsteq	r0, lr, lsl r0
    9ad4:	001cd80a 	andseq	sp, ip, sl, lsl #16
    9ad8:	18000200 	stmdane	r0, {r9}
    9adc:	00001c84 	andeq	r1, r0, r4, lsl #25
    9ae0:	074c0590 			; <UNDEFINED> instruction: 0x074c0590
    9ae4:	000004cf 	andeq	r0, r0, pc, asr #9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:59
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ae8:	001c640b 	andseq	r6, ip, fp, lsl #8
    9aec:	50052400 	andpl	r2, r5, r0, lsl #8
    9af0:	0003e90c 	andeq	lr, r3, ip, lsl #18
    9af4:	3af30d00 	bcc	ffcccefc <_bss_end+0xffcbbe7c>
    9af8:	52050000 	andpl	r0, r5, #0
    9afc:	0004cf0e 	andeq	ip, r4, lr, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:61
        ta << SSD1306_Cmd::Command_Start
    9b00:	350d0000 	strcc	r0, [sp, #-0]
    9b04:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    9b08:	04df0e54 	ldrbeq	r0, [pc], #3668	; 9b10 <_ZN16CDisplay_SSD13064OpenEii+0x224>
    9b0c:	0d100000 	ldceq	0, cr0, [r0, #-0]
    9b10:	00001b89 	andeq	r1, r0, r9, lsl #23
    9b14:	5e125605 	cfmsub32pl	mvax0, mvfx5, mvfx2, mvfx5
    9b18:	14000000 	strne	r0, [r0], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:62
            << SSD1306_Cmd::Set_Display_Offset
    9b1c:	001c5d0d 	andseq	r5, ip, sp, lsl #26
    9b20:	18590500 	ldmdane	r9, {r8, sl}^
    9b24:	000004e6 	andeq	r0, r0, r6, ror #9
    9b28:	1c900d18 	ldcne	13, cr0, [r0], {24}
    9b2c:	5b050000 	blpl	149b34 <_bss_end+0x138ab4>
    9b30:	0004e618 	andeq	lr, r4, r8, lsl r6
    9b34:	f80d1c00 			; <UNDEFINED> instruction: 0xf80d1c00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:63
            << 0x00
    9b38:	0500000d 	streq	r0, [r0, #-13]
    9b3c:	04e6185e 	strbteq	r1, [r6], #2142	; 0x85e
    9b40:	19200000 	stmdbne	r0!, {}	; <UNPREDICTABLE>
    9b44:	00001d0e 	andeq	r1, r0, lr, lsl #26
    9b48:	cc186005 	ldcgt	0, cr6, [r8], {5}
    9b4c:	e600001d 			; <UNDEFINED> instruction: 0xe600001d
    9b50:	dd000004 	stcle	0, cr0, [r0, #-16]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:64
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Start_Line) | 0x00) // zacatek na radce 0
    9b54:	14000003 	strne	r0, [r0], #-3
    9b58:	000004e6 	andeq	r0, r0, r6, ror #9
    9b5c:	0004ec16 	andeq	lr, r4, r6, lsl ip
    9b60:	0b000000 	bleq	9b68 <_ZN16CDisplay_SSD13064OpenEii+0x27c>
    9b64:	00001ccd 	andeq	r1, r0, sp, asr #25
    9b68:	0c640518 	cfstr64eq	mvdx0, [r4], #-96	; 0xffffffa0
    9b6c:	0000041e 	andeq	r0, r0, lr, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:65
            << SSD1306_Cmd::Charge_Pump;
    9b70:	003af30d 	eorseq	pc, sl, sp, lsl #6
    9b74:	0e670500 	cdpeq	5, 6, cr0, cr7, cr0, {0}
    9b78:	000004cf 	andeq	r0, r0, pc, asr #9
    9b7c:	1bb30d00 	blne	fecccf84 <_bss_end+0xfecbbf04>
    9b80:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
    9b84:	0004ec15 	andeq	lr, r4, r5, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:67
        mI2C.End_Transaction(ta);
    9b88:	230d1000 	movwcs	r1, #53248	; 0xd000
    9b8c:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    9b90:	04fc1d6b 	ldrbteq	r1, [ip], #3435	; 0xd6b
    9b94:	00140000 	andseq	r0, r4, r0
    9b98:	0003e903 	andeq	lr, r3, r3, lsl #18
    9b9c:	1bc91a00 	blne	ff2503a4 <_bss_end+0xff23f324>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:72
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9ba0:	6f050000 	svcvs	0x00050000
    9ba4:	0005021d 	andeq	r0, r5, sp, lsl r2
    9ba8:	1b641a00 	blne	19103b0 <_bss_end+0x18ff330>
    9bac:	71050000 	mrsvc	r0, (UNDEF: 5)
    9bb0:	00006a1b 	andeq	r6, r0, fp, lsl sl
    9bb4:	1d9e0d00 	ldcne	13, cr0, [lr]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:74
        ta << SSD1306_Cmd::Command_Start
    9bb8:	74050000 	strvc	r0, [r5], #-0
    9bbc:	00036e13 	andeq	r6, r3, r3, lsl lr
    9bc0:	940d0000 	strls	r0, [sp], #-0
    9bc4:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    9bc8:	036e1377 	cmneq	lr, #-603979775	; 0xdc000001
    9bcc:	0d240000 	stceq	0, cr0, [r4, #-0]
    9bd0:	00001d2a 	andeq	r1, r0, sl, lsr #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:75
            << 0x14;
    9bd4:	6e137805 	cdpvs	8, 1, cr7, cr3, cr5, {0}
    9bd8:	48000003 	stmdami	r0, {r0, r1}
    9bdc:	001d190d 	andseq	r1, sp, sp, lsl #18
    9be0:	13790500 	cmnne	r9, #0, 10
    9be4:	0000036e 	andeq	r0, r0, lr, ror #6
    9be8:	1c841b6c 	vstmiane	r4, {d1-<overflow reg d54>}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:77
        mI2C.End_Transaction(ta);
    9bec:	7c050000 	stcvc	0, cr0, [r5], {-0}
    9bf0:	001dfc05 	andseq	pc, sp, r5, lsl #24
    9bf4:	00050d00 	andeq	r0, r5, r0, lsl #26
    9bf8:	04880100 	streq	r0, [r8], #256	; 0x100
    9bfc:	048e0000 	streq	r0, [lr], #0
    9c00:	0d140000 	ldceq	0, cr0, [r4, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:83
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9c04:	00000005 	andeq	r0, r0, r5
    9c08:	001bbe1c 	andseq	fp, fp, ip, lsl lr
    9c0c:	0a7f0500 	beq	1fcb014 <_bss_end+0x1fb9f94>
    9c10:	00001e45 	andeq	r1, r0, r5, asr #28
    9c14:	0004a301 	andeq	sl, r4, r1, lsl #6
    9c18:	0004a900 	andeq	sl, r4, r0, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:85
        ta << SSD1306_Cmd::Command_Start
    9c1c:	050d1400 	streq	r1, [sp, #-1024]	; 0xfffffc00
    9c20:	1d000000 	stcne	0, cr0, [r0, #-0]
    9c24:	00000a1d 	andeq	r0, r0, sp, lsl sl
    9c28:	e30c8205 	movw	r8, #49669	; 0xc205
    9c2c:	6200001c 	andvs	r0, r0, #28
    9c30:	01000001 	tsteq	r0, r1
    9c34:	000004be 			; <UNDEFINED> instruction: 0x000004be
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:86
            << SSD1306_Cmd::Memory_Addr_Mode
    9c38:	00050d14 	andeq	r0, r5, r4, lsl sp
    9c3c:	04ec1600 	strbteq	r1, [ip], #1536	; 0x600
    9c40:	3c160000 	ldccc	0, cr0, [r6], {-0}
    9c44:	00000003 	andeq	r0, r0, r3
    9c48:	00250e00 	eoreq	r0, r5, r0, lsl #28
    9c4c:	04df0000 	ldrbeq	r0, [pc], #0	; 9c54 <_ZN16CDisplay_SSD13064OpenEii+0x368>
    9c50:	6f0f0000 	svcvs	0x000f0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:87
            << 0x00
    9c54:	0f000000 	svceq	0x00000000
    9c58:	02010200 	andeq	r0, r1, #0, 4
    9c5c:	000040a5 	andeq	r4, r0, r5, lsr #1
    9c60:	036e0410 	cmneq	lr, #16, 8	; 0x10000000
    9c64:	04100000 	ldreq	r0, [r0], #-0
    9c68:	0000002c 	andeq	r0, r0, ip, lsr #32
    9c6c:	0004ec03 	andeq	lr, r4, r3, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:88
            << (static_cast<uint8_t>(SSD1306_Cmd::Set_Segment_Remap) | 0x01)
    9c70:	280f1e00 	stmdacs	pc, {r9, sl, fp, ip}	; <UNPREDICTABLE>
    9c74:	04100000 	ldreq	r0, [r0], #-0
    9c78:	000004f7 	strdeq	r0, [r0], -r7
    9c7c:	00041e0e 	andeq	r1, r4, lr, lsl #28
    9c80:	00050d00 	andeq	r0, r5, r0, lsl #26
    9c84:	10001f00 	andne	r1, r0, r0, lsl #30
    9c88:	00036104 	andeq	r6, r3, r4, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:89
            << SSD1306_Cmd::Com_Scan_Dir_Dec;
    9c8c:	1be42000 	blne	ff911c94 <_bss_end+0xff900c14>
    9c90:	85050000 	strhi	r0, [r5, #-0]
    9c94:	00036114 	andeq	r6, r3, r4, lsl r1
    9c98:	34140700 	ldrcc	r0, [r4], #-1792	; 0xfffff900
    9c9c:	0a070000 	beq	1c9ca4 <_bss_end+0x1b8c24>
    9ca0:	00006a14 	andeq	r6, r0, r4, lsl sl
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:91
        mI2C.End_Transaction(ta);
    9ca4:	fc030500 	stc2	5, cr0, [r3], {-0}
    9ca8:	0b0000fb 	bleq	a09c <_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh+0x7c>
    9cac:	0000334f 	andeq	r3, r0, pc, asr #6
    9cb0:	080d070c 	stmdaeq	sp, {r2, r3, r8, r9, sl}
    9cb4:	00000566 	andeq	r0, r0, r6, ror #10
    9cb8:	000d050d 	andeq	r0, sp, sp, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:96
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9cbc:	190f0700 	stmdbne	pc, {r8, r9, sl}	; <UNPREDICTABLE>
    9cc0:	00000566 	andeq	r0, r0, r6, ror #10
    9cc4:	0df80d00 	ldcleq	13, cr0, [r8]
    9cc8:	10070000 	andne	r0, r7, r0
    9ccc:	00056619 	andeq	r6, r5, r9, lsl r6
    9cd0:	050d0400 	streq	r0, [sp, #-1024]	; 0xfffffc00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:98
        ta << SSD1306_Cmd::Command_Start
    9cd4:	07000033 	smladxeq	r0, r3, r0, r0
    9cd8:	056c1311 	strbeq	r1, [ip, #-785]!	; 0xfffffcef
    9cdc:	00080000 	andeq	r0, r8, r0
    9ce0:	05310410 	ldreq	r0, [r1, #-1040]!	; 0xfffffbf0
    9ce4:	04100000 	ldreq	r0, [r0], #-0
    9ce8:	000000f6 	strdeq	r0, [r0], -r6
    9cec:	002eb618 	eoreq	fp, lr, r8, lsl r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:99
            << SSD1306_Cmd::Set_Com_Pins;
    9cf0:	14070c00 	strne	r0, [r7], #-3072	; 0xfffff400
    9cf4:	00070a07 	andeq	r0, r7, r7, lsl #20
    9cf8:	314e0d00 	cmpcc	lr, r0, lsl #26
    9cfc:	18070000 	stmdane	r7, {}	; <UNPREDICTABLE>
    9d00:	00005e0e 	andeq	r5, r0, lr, lsl #28
    9d04:	e30d0000 	movw	r0, #53248	; 0xd000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:101
        mI2C.End_Transaction(ta);
    9d08:	0700002d 	streq	r0, [r0, -sp, lsr #32]
    9d0c:	0566191b 	strbeq	r1, [r6, #-2331]!	; 0xfffff6e5
    9d10:	0d040000 	stceq	0, cr0, [r4, #-0]
    9d14:	00003249 	andeq	r3, r0, r9, asr #4
    9d18:	66191e07 	ldrvs	r1, [r9], -r7, lsl #28
    9d1c:	08000005 	stmdaeq	r0, {r0, r2}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:106
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d20:	0033d921 	eorseq	sp, r3, r1, lsr #18
    9d24:	0a210700 	beq	84b92c <_bss_end+0x83a8ac>
    9d28:	0000332c 	andeq	r3, r0, ip, lsr #6
    9d2c:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    9d30:	000005c5 	andeq	r0, r0, r5, asr #11
    9d34:	00070f14 	andeq	r0, r7, r4, lsl pc
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:108
        ta << SSD1306_Cmd::Command_Start
    9d38:	05661600 	strbeq	r1, [r6, #-1536]!	; 0xfffffa00
    9d3c:	1b000000 	blne	9d44 <_ZN16CDisplay_SSD13064OpenEii+0x458>
    9d40:	00002eb6 			; <UNDEFINED> instruction: 0x00002eb6
    9d44:	67052407 	strvs	r2, [r5, -r7, lsl #8]
    9d48:	0f000034 	svceq	0x00000034
    9d4c:	01000007 	tsteq	r0, r7
    9d50:	000005de 	ldrdeq	r0, [r0], -lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:109
            << 0x02;
    9d54:	000005e4 	andeq	r0, r0, r4, ror #11
    9d58:	00070f14 	andeq	r0, r7, r4, lsl pc
    9d5c:	c51c0000 	ldrgt	r0, [ip, #-0]
    9d60:	07000033 	smladxeq	r0, r3, r0, r0
    9d64:	2d330a27 	vldmdbcs	r3!, {s0-s38}
    9d68:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:111
        mI2C.End_Transaction(ta);
    9d6c:	ff000005 			; <UNDEFINED> instruction: 0xff000005
    9d70:	14000005 	strne	r0, [r0], #-5
    9d74:	0000070f 	andeq	r0, r0, pc, lsl #14
    9d78:	2ea11b00 	vfmacs.f64	d1, d1, d0
    9d7c:	2a070000 	bcs	1c9d84 <_bss_end+0x1b8d04>
    9d80:	002e640e 	eoreq	r6, lr, lr, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:116
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9d84:	00005e00 	andeq	r5, r0, r0, lsl #28
    9d88:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    9d8c:	06230000 	strteq	r0, [r3], -r0
    9d90:	0f140000 	svceq	0x00140000
    9d94:	16000007 	strne	r0, [r0], -r7
    9d98:	000000ea 	andeq	r0, r0, sl, ror #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:118
        ta << SSD1306_Cmd::Command_Start
    9d9c:	33231c00 			; <UNDEFINED> instruction: 0x33231c00
    9da0:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    9da4:	0031980a 	eorseq	r9, r1, sl, lsl #16
    9da8:	06380100 	ldrteq	r0, [r8], -r0, lsl #2
    9dac:	063e0000 	ldrteq	r0, [lr], -r0
    9db0:	0f140000 	svceq	0x00140000
    9db4:	00000007 	andeq	r0, r0, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:119
            << SSD1306_Cmd::Set_Contrast;
    9db8:	002fcc1b 	eoreq	ip, pc, fp, lsl ip	; <UNPREDICTABLE>
    9dbc:	13310700 	teqne	r1, #0, 14
    9dc0:	00002df6 	strdeq	r2, [r0], -r6
    9dc4:	0000056c 	andeq	r0, r0, ip, ror #10
    9dc8:	00065701 	andeq	r5, r6, r1, lsl #14
    9dcc:	00065d00 	andeq	r5, r6, r0, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:121
        mI2C.End_Transaction(ta);
    9dd0:	071a1400 	ldreq	r1, [sl, -r0, lsl #8]
    9dd4:	1b000000 	blne	9ddc <_ZN16CDisplay_SSD13064OpenEii+0x4f0>
    9dd8:	00002fe0 	andeq	r2, r0, r0, ror #31
    9ddc:	080e3407 	stmdaeq	lr, {r0, r1, r2, sl, ip, sp}
    9de0:	5e000031 	mcrpl	0, 0, r0, cr0, cr1, {1}
    9de4:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:126
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9de8:	00000676 	andeq	r0, r0, r6, ror r6
    9dec:	00000681 	andeq	r0, r0, r1, lsl #13
    9df0:	00070f14 	andeq	r0, r7, r4, lsl pc
    9df4:	01621600 	cmneq	r2, r0, lsl #12
    9df8:	1b000000 	blne	9e00 <_ZN16CDisplay_SSD13064OpenEii+0x514>
    9dfc:	00002dbe 			; <UNDEFINED> instruction: 0x00002dbe
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:128
        ta << SSD1306_Cmd::Command_Start
    9e00:	820a3707 	andhi	r3, sl, #1835008	; 0x1c0000
    9e04:	df00002f 	svcle	0x0000002f
    9e08:	01000004 	tsteq	r0, r4
    9e0c:	0000069a 	muleq	r0, sl, r6
    9e10:	000006a5 	andeq	r0, r0, r5, lsr #13
    9e14:	00070f14 	andeq	r0, r7, r4, lsl pc
    9e18:	005e1600 	subseq	r1, lr, r0, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:129
            << 0x8F;
    9e1c:	1c000000 	stcne	0, cr0, [r0], {-0}
    9e20:	00002ffd 	strdeq	r2, [r0], -sp
    9e24:	730a3a07 	movwvc	r3, #43527	; 0xaa07
    9e28:	01000033 	tsteq	r0, r3, lsr r0
    9e2c:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    9e30:	000006d9 	ldrdeq	r0, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:131
        mI2C.End_Transaction(ta);
    9e34:	00070f14 	andeq	r0, r7, r4, lsl pc
    9e38:	028b1600 	addeq	r1, fp, #0, 12
    9e3c:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    9e40:	16000000 	strne	r0, [r0], -r0
    9e44:	0000005e 	andeq	r0, r0, lr, asr r0
    9e48:	00005e16 	andeq	r5, r0, r6, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:136
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9e4c:	07251600 	streq	r1, [r5, -r0, lsl #12]!
    9e50:	22000000 	andcs	r0, r0, #0
    9e54:	00002e24 	andeq	r2, r0, r4, lsr #28
    9e58:	c7053d07 	strgt	r3, [r5, -r7, lsl #26]
    9e5c:	0100002e 	tsteq	r0, lr, lsr #32
    9e60:	000006ea 	andeq	r0, r0, sl, ror #13
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:138
        ta << SSD1306_Cmd::Command_Start
    9e64:	00070f14 	andeq	r0, r7, r4, lsl pc
    9e68:	02a41600 	adceq	r1, r4, #0, 12
    9e6c:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    9e70:	16000000 	strne	r0, [r0], -r0
    9e74:	0000005e 	andeq	r0, r0, lr, asr r0
    9e78:	00005e16 	andeq	r5, r0, r6, lsl lr
    9e7c:	07251600 	streq	r1, [r5, -r0, lsl #12]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:139
            << SSD1306_Cmd::Set_Precharge_Period;
    9e80:	00000000 	andeq	r0, r0, r0
    9e84:	00057203 	andeq	r7, r5, r3, lsl #4
    9e88:	72041000 	andvc	r1, r4, #0
    9e8c:	03000005 	movweq	r0, #5
    9e90:	0000070f 	andeq	r0, r0, pc, lsl #14
    9e94:	070a0410 	smladeq	sl, r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:141
        mI2C.End_Transaction(ta);
    9e98:	1a030000 	bne	c9ea0 <_bss_end+0xb8e20>
    9e9c:	23000007 	movwcs	r0, #7
    9ea0:	00026504 	andeq	r6, r2, r4, lsl #10
    9ea4:	37a52000 	strcc	r2, [r5, r0]!
    9ea8:	40070000 	andmi	r0, r7, r0
    9eac:	00057219 	andeq	r7, r5, r9, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:146
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9eb0:	0b951800 	bleq	fe54feb8 <_bss_end+0xfe53ee38>
    9eb4:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
    9eb8:	09780703 	ldmdbeq	r8!, {r0, r1, r8, r9, sl}^
    9ebc:	13240000 			; <UNDEFINED> instruction: 0x13240000
    9ec0:	0700000b 	streq	r0, [r0, -fp]
    9ec4:	00006f04 	andeq	r6, r0, r4, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:148
        ta << SSD1306_Cmd::Command_Start
    9ec8:	10060800 	andne	r0, r6, r0, lsl #16
    9ecc:	00076401 	andeq	r6, r7, r1, lsl #8
    9ed0:	45480900 	strbmi	r0, [r8, #-2304]	; 0xfffff700
    9ed4:	09100058 	ldmdbeq	r0, {r3, r4, r6}
    9ed8:	00434544 	subeq	r4, r3, r4, asr #10
    9edc:	4403000a 	strmi	r0, [r3], #-10
    9ee0:	0b000007 	bleq	9f04 <_ZN16CDisplay_SSD13064OpenEii+0x618>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:149
            << 0xF1;
    9ee4:	00000b20 	andeq	r0, r0, r0, lsr #22
    9ee8:	0c240808 	stceq	8, cr0, [r4], #-32	; 0xffffffe0
    9eec:	0000078d 	andeq	r0, r0, sp, lsl #15
    9ef0:	0800790c 	stmdaeq	r0, {r2, r3, r8, fp, ip, sp, lr}
    9ef4:	006f1626 	rsbeq	r1, pc, r6, lsr #12
    9ef8:	0c000000 	stceq	0, cr0, [r0], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:151
        mI2C.End_Transaction(ta);
    9efc:	27080078 	smlsdxcs	r8, r8, r0, r0
    9f00:	00006f16 	andeq	r6, r0, r6, lsl pc
    9f04:	25000400 	strcs	r0, [r0, #-1024]	; 0xfffffc00
    9f08:	00000c72 	andeq	r0, r0, r2, ror ip
    9f0c:	641b0c08 	ldrvs	r0, [fp], #-3080	; 0xfffff3f8
    9f10:	01000007 	tsteq	r0, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:156
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    9f14:	0be5260a 	bleq	ff953744 <_bss_end+0xff9426c4>
    9f18:	0d080000 	stceq	0, cr0, [r8, #-0]
    9f1c:	0004f228 	andeq	pc, r4, r8, lsr #4
    9f20:	95270100 	strls	r0, [r7, #-256]!	; 0xffffff00
    9f24:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    9f28:	0c5f0e10 	mrrceq	14, 1, r0, pc, cr0	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:158
        ta << SSD1306_Cmd::Command_Start
    9f2c:	09780000 	ldmdbeq	r8!, {}^	; <UNPREDICTABLE>
    9f30:	c1010000 	mrsgt	r0, (UNDEF: 1)
    9f34:	d6000007 	strle	r0, [r0], -r7
    9f38:	14000007 	strne	r0, [r0], #-7
    9f3c:	00000978 	andeq	r0, r0, r8, ror r9
    9f40:	00006f16 	andeq	r6, r0, r6, lsl pc
    9f44:	006f1600 	rsbeq	r1, pc, r0, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:159
            << SSD1306_Cmd::Set_VCOM_Detect
    9f48:	6f160000 	svcvs	0x00160000
    9f4c:	00000000 	andeq	r0, r0, r0
    9f50:	0018961c 	andseq	r9, r8, ip, lsl r6
    9f54:	0a120800 	beq	48bf5c <_bss_end+0x47aedc>
    9f58:	00000b80 	andeq	r0, r0, r0, lsl #23
    9f5c:	0007eb01 	andeq	lr, r7, r1, lsl #22
    9f60:	0007f100 	andeq	pc, r7, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:160
            << 0x40
    9f64:	09781400 	ldmdbeq	r8!, {sl, ip}^
    9f68:	1b000000 	blne	9f70 <_ZN16CDisplay_SSD13064OpenEii+0x684>
    9f6c:	00000b9e 	muleq	r0, lr, fp
    9f70:	020f1408 	andeq	r1, pc, #8, 8	; 0x8000000
    9f74:	7e00000c 	cdpvc	0, 0, cr0, cr0, cr12, {0}
    9f78:	01000009 	tsteq	r0, r9
    9f7c:	0000080a 	andeq	r0, r0, sl, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:161
            << SSD1306_Cmd::Display_All_On_Resume
    9f80:	00000815 	andeq	r0, r0, r5, lsl r8
    9f84:	00097814 	andeq	r7, r9, r4, lsl r8
    9f88:	00251600 	eoreq	r1, r5, r0, lsl #12
    9f8c:	1b000000 	blne	9f94 <_ZN16CDisplay_SSD13064OpenEii+0x6a8>
    9f90:	00000b9e 	muleq	r0, lr, fp
    9f94:	a90f1508 	stmdbge	pc, {r3, r8, sl, ip}	; <UNPREDICTABLE>
    9f98:	7e00000b 	cdpvc	0, 0, cr0, cr0, cr11, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:162
            << SSD1306_Cmd::Normal_Display
    9f9c:	01000009 	tsteq	r0, r9
    9fa0:	0000082e 	andeq	r0, r0, lr, lsr #16
    9fa4:	00000839 	andeq	r0, r0, r9, lsr r8
    9fa8:	00097814 	andeq	r7, r9, r4, lsl r8
    9fac:	04ec1600 	strbteq	r1, [ip], #1536	; 0x600
    9fb0:	1b000000 	blne	9fb8 <_ZN16CDisplay_SSD13064OpenEii+0x6cc>
    9fb4:	00000b9e 	muleq	r0, lr, fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:163
            << SSD1306_Cmd::Deactivate_Scroll
    9fb8:	860f1608 	strhi	r1, [pc], -r8, lsl #12
    9fbc:	7e00000c 	cdpvc	0, 0, cr0, cr0, cr12, {0}
    9fc0:	01000009 	tsteq	r0, r9
    9fc4:	00000852 	andeq	r0, r0, r2, asr r8
    9fc8:	0000085d 	andeq	r0, r0, sp, asr r8
    9fcc:	00097814 	andeq	r7, r9, r4, lsl r8
    9fd0:	07441600 	strbeq	r1, [r4, -r0, lsl #12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:164
            << SSD1306_Cmd::Display_On;
    9fd4:	1b000000 	blne	9fdc <_ZN16CDisplay_SSD13064OpenEii+0x6f0>
    9fd8:	00000b9e 	muleq	r0, lr, fp
    9fdc:	310f1708 	tstcc	pc, r8, lsl #14
    9fe0:	7e00000c 	cdpvc	0, 0, cr0, cr0, cr12, {0}
    9fe4:	01000009 	tsteq	r0, r9
    9fe8:	00000876 	andeq	r0, r0, r6, ror r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:166
        mI2C.End_Transaction(ta);
    9fec:	00000881 	andeq	r0, r0, r1, lsl #17
    9ff0:	00097814 	andeq	r7, r9, r4, lsl r8
    9ff4:	006f1600 	rsbeq	r1, pc, r0, lsl #12
    9ff8:	1b000000 	blne	a000 <_ZN16CDisplay_SSD13064OpenEii+0x714>
    9ffc:	00000b9e 	muleq	r0, lr, fp
    a000:	f10f1808 			; <UNDEFINED> instruction: 0xf10f1808
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:169
    Clear();
    a004:	7e00000b 	cdpvc	0, 0, cr0, cr0, cr11, {0}
    a008:	01000009 	tsteq	r0, r9
    a00c:	0000089a 	muleq	r0, sl, r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:171
    return true;
    a010:	000008a5 	andeq	r0, r0, r5, lsr #17
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:172
}
    a014:	00097814 	andeq	r7, r9, r4, lsl r8
    a018:	04df1600 	ldrbeq	r1, [pc], #1536	; a020 <_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh>
    a01c:	21000000 	mrscs	r0, (UNDEF: 0)
_ZN16CDisplay_SSD130612Send_CommandE11SSD1306_Cmdh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:175
{
    a020:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    a024:	81111b08 	tsthi	r1, r8, lsl #22
    a028:	b900000a 	stmdblt	r0, {r1, r3}
    a02c:	bf000008 	svclt	0x00000008
    a030:	14000008 	strne	r0, [r0], #-8
    a034:	00000978 	andeq	r0, r0, r8, ror r9
    a038:	0aa42100 	beq	fe912440 <_bss_end+0xfe9013c0>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:176
    auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a03c:	1c080000 	stcne	0, cr0, [r8], {-0}
    a040:	000c4211 	andeq	r4, ip, r1, lsl r2
    a044:	0008d300 	andeq	sp, r8, r0, lsl #6
    a048:	0008d900 	andeq	sp, r8, r0, lsl #18
    a04c:	09781400 	ldmdbeq	r8!, {sl, ip}^
    a050:	21000000 	mrscs	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:178
    ta << SSD1306_Cmd::Command_Start
    a054:	00000a5c 	andeq	r0, r0, ip, asr sl
    a058:	2a111d08 	bcs	451480 <_bss_end+0x440400>
    a05c:	ed00000b 	stc	0, cr0, [r0, #-44]	; 0xffffffd4
    a060:	f3000008 	vhadd.u8	d0, d0, d8
    a064:	14000008 	strne	r0, [r0], #-8
    a068:	00000978 	andeq	r0, r0, r8, ror r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:179
       << (static_cast<uint8_t>(cmd) | lowPart);
    a06c:	13de2100 	bicsne	r2, lr, #0, 2
    a070:	1f080000 	svcne	0x00080000
    a074:	000c1b0a 	andeq	r1, ip, sl, lsl #22
    a078:	00090700 	andeq	r0, r9, r0, lsl #14
    a07c:	00090d00 	andeq	r0, r9, r0, lsl #26
    a080:	09781400 	ldmdbeq	r8!, {sl, ip}^
    a084:	21000000 	mrscs	r0, (UNDEF: 0)
    a088:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    a08c:	bc0a2108 	stflts	f2, [sl], {8}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:181
    mI2C.End_Transaction(ta);
    a090:	2100000b 	tstcs	r0, fp
    a094:	36000009 	strcc	r0, [r0], -r9
    a098:	14000009 	strne	r0, [r0], #-9
    a09c:	00000978 	andeq	r0, r0, r8, ror r9
    a0a0:	00006f16 	andeq	r6, r0, r6, lsl pc
    a0a4:	09841600 	stmibeq	r4, {r9, sl, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:182
}
    a0a8:	6f160000 	svcvs	0x00160000
    a0ac:	00000000 	andeq	r0, r0, r0
    a0b0:	000b4c0d 	andeq	r4, fp, sp, lsl #24
_ZN16CDisplay_SSD13065CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:185
{
    a0b4:	232b0800 			; <UNDEFINED> instruction: 0x232b0800
    a0b8:	00000990 	muleq	r0, r0, r9
    a0bc:	0c130d00 	ldceq	13, cr0, [r3], {-0}
    a0c0:	2c080000 	stccs	0, cr0, [r8], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:186
    if (!mOpened)
    a0c4:	00006f12 	andeq	r6, r0, r2, lsl pc
    a0c8:	d30d0400 	movwle	r0, #54272	; 0xd400
    a0cc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    a0d0:	006f122d 	rsbeq	r1, pc, sp, lsr #4
    a0d4:	0d080000 	stceq	0, cr0, [r8, #-0]
    a0d8:	00000bdc 	ldrdeq	r0, [r0], -ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:191
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a0dc:	690f2e08 	stmdbvs	pc, {r3, r9, sl, fp, sp}	; <UNPREDICTABLE>
    a0e0:	0c000007 	stceq	0, cr0, [r0], {7}
    a0e4:	000a4e0d 	andeq	r4, sl, sp, lsl #28
    a0e8:	122f0800 	eorne	r0, pc, #0, 16
    a0ec:	00000744 	andeq	r0, r0, r4, asr #14
    a0f0:	04100014 	ldreq	r0, [r0], #-20	; 0xffffffec
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:193
        ta << SSD1306_Cmd::Command_Start
    a0f4:	00000737 	andeq	r0, r0, r7, lsr r7
    a0f8:	07370423 	ldreq	r0, [r7, -r3, lsr #8]!
    a0fc:	04100000 	ldreq	r0, [r0], #-0
    a100:	00000025 	andeq	r0, r0, r5, lsr #32
    a104:	00520410 	subseq	r0, r2, r0, lsl r4
    a108:	8a030000 	bhi	ca110 <_bss_end+0xb9090>
    a10c:	20000009 	andcs	r0, r0, r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:194
            << SSD1306_Cmd::Display_Off;
    a110:	00000b65 	andeq	r0, r0, r5, ror #22
    a114:	37113208 	ldrcc	r3, [r1, -r8, lsl #4]
    a118:	0b000007 	bleq	a13c <_ZN16CDisplay_SSD13065CloseEv+0x88>
    a11c:	000013bb 			; <UNDEFINED> instruction: 0x000013bb
    a120:	08080210 	stmdaeq	r8, {r4, r9}
    a124:	000009e3 	andeq	r0, r0, r3, ror #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:196
        mI2C.End_Transaction(ta);
    a128:	000d050d 	andeq	r0, sp, sp, lsl #10
    a12c:	200a0200 	andcs	r0, sl, r0, lsl #4
    a130:	000009e3 	andeq	r0, r0, r3, ror #19
    a134:	0df80d00 	ldcleq	13, cr0, [r8]
    a138:	0b020000 	bleq	8a140 <_bss_end+0x790c0>
    a13c:	0009e320 	andeq	lr, r9, r0, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:199
    mI2C.Close();
    a140:	450d0400 	strmi	r0, [sp, #-1024]	; 0xfffffc00
    a144:	0200000e 	andeq	r0, r0, #14
    a148:	005e0e0c 	subseq	r0, lr, ip, lsl #28
    a14c:	0d080000 	stceq	0, cr0, [r8, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201
    delete mBuffer;
    a150:	00000e99 	muleq	r0, r9, lr
    a154:	df0a0d02 	svcle	0x000a0d02
    a158:	0c000004 	stceq	0, cr0, [r0], {4}
    a15c:	a1041000 	mrsge	r1, (UNDEF: 4)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:201 (discriminator 1)
    a160:	18000009 	stmdane	r0, {r0, r3}
    a164:	00000dfd 	strdeq	r0, [r0], -sp
    a168:	07100204 	ldreq	r0, [r0, -r4, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:203
    mOpened = false;
    a16c:	00000acd 	andeq	r0, r0, sp, asr #21
    a170:	00133e0d 	andseq	r3, r3, sp, lsl #28
    a174:	20130200 	andscs	r0, r3, r0, lsl #4
    a178:	000009e3 	andeq	r0, r0, r3, ror #19
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:187
        return;
    a17c:	13802800 	orrne	r2, r0, #0, 16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:204
}
    a180:	15020000 	strne	r0, [r2, #-0]
    a184:	000d0a20 	andeq	r0, sp, r0, lsr #20
_ZNK16CDisplay_SSD13069Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:207
{
    a188:	0009e300 	andeq	lr, r9, r0, lsl #6
    a18c:	000a1b00 	andeq	r1, sl, r0, lsl #22
    a190:	000a2100 	andeq	r2, sl, r0, lsl #2
    a194:	0acd1400 	beq	ff34f19c <_bss_end+0xff33e11c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:208
    return mOpened;
    a198:	1b000000 	blne	a1a0 <_ZNK16CDisplay_SSD13069Is_OpenedEv+0x18>
    a19c:	00000dfd 	strdeq	r0, [r0], -sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:209
}
    a1a0:	20051802 	andcs	r1, r5, r2, lsl #16
    a1a4:	cd000013 	stcgt	0, cr0, [r0, #-76]	; 0xffffffb4
    a1a8:	0100000a 	tsteq	r0, sl
    a1ac:	00000a3a 	andeq	r0, r0, sl, lsr sl
_ZN16CDisplay_SSD13065ClearEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:212
{
    a1b0:	00000a40 	andeq	r0, r0, r0, asr #20
    a1b4:	000acd14 	andeq	ip, sl, r4, lsl sp
    a1b8:	d81b0000 	ldmdale	fp, {}	; <UNPREDICTABLE>
    a1bc:	0200000e 	andeq	r0, r0, #14
    a1c0:	11940b1a 	orrsne	r0, r4, sl, lsl fp
    a1c4:	0ad80000 	beq	ff60a1cc <_bss_end+0xff5f914c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:213
    if (!mOpened)
    a1c8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    a1cc:	6400000a 	strvs	r0, [r0], #-10
    a1d0:	1400000a 	strne	r0, [r0], #-10
    a1d4:	00000acd 	andeq	r0, r0, sp, asr #21
    a1d8:	00005e16 	andeq	r5, r0, r6, lsl lr
    a1dc:	421c0000 	andsmi	r0, ip, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216
    const uint8_t clearColor = clearWhite ? 0xFF : 0x00;
    a1e0:	0200000f 	andeq	r0, r0, #15
    a1e4:	10d30a1b 	sbcsne	r0, r3, fp, lsl sl
    a1e8:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 1)
    a1ec:	8400000a 	strhi	r0, [r0], #-10
    a1f0:	1400000a 	strne	r0, [r0], #-10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 2)
    a1f4:	00000acd 	andeq	r0, r0, sp, asr #21
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:216 (discriminator 4)
    a1f8:	000ad816 	andeq	sp, sl, r6, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:218 (discriminator 4)
    const int maxIdx = mWidth * (mHeight / 8);
    a1fc:	2d1b0000 	ldccs	0, cr0, [fp, #-0]
    a200:	02000037 	andeq	r0, r0, #55	; 0x37
    a204:	3844081e 	stmdacc	r4, {r1, r2, r3, r4, fp}^
    a208:	056c0000 	strbeq	r0, [ip, #-0]!
    a20c:	a4010000 	strge	r0, [r1], #-0
    a210:	aa00000a 	bge	a240 <_ZN16CDisplay_SSD13065ClearEb+0x90>
    a214:	2900000a 	stmdbcs	r0, {r1, r3}
    a218:	00f60054 	rscseq	r0, r6, r4, asr r0
    a21c:	cd140000 	ldcgt	0, cr0, [r4, #-0]
    a220:	0000000a 	andeq	r0, r0, sl
    a224:	00381c1d 	eorseq	r1, r8, sp, lsl ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 4)
    for (int i = 0; i < maxIdx; i++)
    a228:	081e0200 	ldmdaeq	lr, {r9}
    a22c:	0000375b 	andeq	r3, r0, fp, asr r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 3)
    a230:	00000566 	andeq	r0, r0, r6, ror #10
    a234:	000ac601 	andeq	ip, sl, r1, lsl #12
    a238:	00542900 	subseq	r2, r4, r0, lsl #18
    a23c:	00000531 	andeq	r0, r0, r1, lsr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:221 (discriminator 2)
        mBuffer[i] = clearColor;
    a240:	000acd14 	andeq	ip, sl, r4, lsl sp
    a244:	10000000 	andne	r0, r0, r0
    a248:	0009e904 	andeq	lr, r9, r4, lsl #18
    a24c:	0acd0300 	beq	ff34ae54 <_bss_end+0xff339dd4>
    a250:	042a0000 	strteq	r0, [sl], #-0
    a254:	00357e20 	eorseq	r7, r5, r0, lsr #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:220 (discriminator 2)
    for (int i = 0; i < maxIdx; i++)
    a258:	1d240200 	sfmne	f0, 4, [r4, #-0]
    a25c:	000009e9 	andeq	r0, r0, r9, ror #19
    a260:	6c61682b 	stclvs	8, cr6, [r1], #-172	; 0xffffff54
    a264:	0b050900 	bleq	14c66c <_bss_end+0x13b5ec>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:223
    Flip();
    a268:	00000ba0 	andeq	r0, r0, r0, lsr #23
    a26c:	0004842c 	andeq	r8, r4, ip, lsr #8
    a270:	19070900 	stmdbne	r7, {r8, fp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:214
        return;
    a274:	00000076 	andeq	r0, r0, r6, ror r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:224
}
    a278:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
    a27c:	0005c92c 	andeq	ip, r5, ip, lsr #18
_ZN16CDisplay_SSD13069Set_PixelEjjb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:227
{
    a280:	1a0a0900 	bne	28c688 <_bss_end+0x27b608>
    a284:	000000f1 	strdeq	r0, [r0], -r1
    a288:	20000000 	andcs	r0, r0, r0
    a28c:	00044f2c 	andeq	r4, r4, ip, lsr #30
    a290:	1a0d0900 	bne	34c698 <_bss_end+0x33b618>
    a294:	000000f1 	strdeq	r0, [r0], -r1
    a298:	20200000 	eorcs	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:228
    if (!mOpened)
    a29c:	0005872d 	andeq	r8, r5, sp, lsr #14
    a2a0:	15100900 	ldrne	r0, [r0, #-2304]	; 0xfffff700
    a2a4:	0000006a 	andeq	r0, r0, sl, rrx
    a2a8:	03702c36 	cmneq	r0, #13824	; 0x3600
    a2ac:	42090000 	andmi	r0, r9, #0
    a2b0:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:231
    if (set)
    a2b4:	21500000 	cmpcs	r0, r0
    a2b8:	03472c20 	movteq	r2, #31776	; 0x7c20
    a2bc:	71090000 	mrsvc	r0, (UNDEF: 9)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:232
        mBuffer[x + (y / 8) * mWidth] |= (1 << (y & 7));
    a2c0:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
    a2c4:	00b20000 	adcseq	r0, r2, r0
    a2c8:	02b32c20 	adcseq	r2, r3, #32, 24	; 0x2000
    a2cc:	a4090000 	strge	r0, [r9], #-0
    a2d0:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
    a2d4:	00b40000 	adcseq	r0, r4, r0
    a2d8:	03612c20 	cmneq	r1, #32, 24	; 0x2000
    a2dc:	b3090000 	movwlt	r0, #36864	; 0x9000
    a2e0:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
    a2e4:	10400000 	subne	r0, r0, r0
    a2e8:	032e2c20 			; <UNDEFINED> instruction: 0x032e2c20
    a2ec:	be090000 	cdplt	0, 0, cr0, cr9, cr0, {0}
    a2f0:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
    a2f4:	20500000 	subscs	r0, r0, r0
    a2f8:	03ec2c20 	mvneq	r2, #32, 24	; 0x2000
    a2fc:	bf090000 	svclt	0x00090000
    a300:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
    a304:	80400000 	subhi	r0, r0, r0
    a308:	04592c20 	ldrbeq	r2, [r9], #-3104	; 0xfffff3e0
    a30c:	c0090000 	andgt	r0, r9, r0
    a310:	0000f11a 	andeq	pc, r0, sl, lsl r1	; <UNPREDICTABLE>
    a314:	80500000 	subshi	r0, r0, r0
    a318:	f22e0020 	vhadd.s32	d0, d14, d16
    a31c:	2e00000a 	cdpcs	0, 0, cr0, cr0, cr10, {0}
    a320:	00000b02 	andeq	r0, r0, r2, lsl #22
    a324:	000b122e 	andeq	r1, fp, lr, lsr #4
    a328:	0b222e00 	bleq	895b30 <_bss_end+0x884ab0>
    a32c:	2f2e0000 	svccs	0x002e0000
    a330:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    a334:	00000b3f 	andeq	r0, r0, pc, lsr fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:234
        mBuffer[x + (y / 8) * mWidth] &= ~(1 << (y & 7));
    a338:	000b4f2e 	andeq	r4, fp, lr, lsr #30
    a33c:	0b5f2e00 	bleq	17d5b44 <_bss_end+0x17c4ac4>
    a340:	6f2e0000 	svcvs	0x002e0000
    a344:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    a348:	00000b7f 	andeq	r0, r0, pc, ror fp
    a34c:	000b8f2e 	andeq	r8, fp, lr, lsr #30
    a350:	656d2b00 	strbvs	r2, [sp, #-2816]!	; 0xfffff500
    a354:	060a006d 	streq	r0, [sl], -sp, rrx
    a358:	000c300b 	andeq	r3, ip, fp
    a35c:	352e2c00 	strcc	r2, [lr, #-3072]!	; 0xfffff400
    a360:	0a0a0000 	beq	28a368 <_bss_end+0x2792e8>
    a364:	00006a18 	andeq	r6, r0, r8, lsl sl
    a368:	02000000 	andeq	r0, r0, #0
    a36c:	35382c00 	ldrcc	r2, [r8, #-3072]!	; 0xfffff400
    a370:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    a374:	00006a18 	andeq	r6, r0, r8, lsl sl
    a378:	00000000 	andeq	r0, r0, r0
    a37c:	35182f20 	ldrcc	r2, [r8, #-3872]	; 0xfffff0e0
    a380:	110a0000 	mrsne	r0, (UNDEF: 10)
    a384:	00006a18 	andeq	r6, r0, r8, lsl sl
    a388:	2c400000 	marcs	acc0, r0, r0
    a38c:	00003507 	andeq	r3, r0, r7, lsl #10
    a390:	6a18140a 	bvs	60f3c0 <_bss_end+0x5fe340>
    a394:	00000000 	andeq	r0, r0, r0
    a398:	2f1ffe00 	svccs	0x001ffe00
    a39c:	000034fd 	strdeq	r3, [r0], -sp
    a3a0:	6a18170a 	bvs	60ffd0 <_bss_end+0x5fef50>
    a3a4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    a3a8:	e32e007f 			; <UNDEFINED> instruction: 0xe32e007f
    a3ac:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    a3b0:	00000bf3 	strdeq	r0, [r0], -r3
    a3b4:	000c032e 	andeq	r0, ip, lr, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:229
        return;
    a3b8:	0c112e00 	ldceq	14, cr2, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:235
}
    a3bc:	212e0000 			; <UNDEFINED> instruction: 0x212e0000
    a3c0:	3000000c 	andcc	r0, r0, ip
    a3c4:	00003676 	andeq	r3, r0, r6, ror r6
_ZN16CDisplay_SSD13064FlipEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:238
{
    a3c8:	090b0fff 	stmdbeq	fp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    a3cc:	000ce307 	andeq	lr, ip, r7, lsl #6
    a3d0:	35620d00 	strbcc	r0, [r2, #-3328]!	; 0xfffff300
    a3d4:	0c0b0000 	stceq	0, cr0, [fp], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:239
    if (!mOpened)
    a3d8:	000ce30d 	andeq	lr, ip, sp, lsl #6
    a3dc:	5d210000 	stcpl	0, cr0, [r1, #-0]
    a3e0:	0b000035 	bleq	a4bc <_ZN16CDisplay_SSD13064FlipEv+0xf4>
    a3e4:	35ce0a0e 	strbcc	r0, [lr, #2574]	; 0xa0e
    a3e8:	0c780000 	ldcleq	0, cr0, [r8], #-0
    a3ec:	0c880000 	stceq	0, cr0, [r8], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:246
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a3f0:	f4140000 			; <UNDEFINED> instruction: 0xf4140000
    a3f4:	1600000c 	strne	r0, [r0], -ip
    a3f8:	0000005e 	andeq	r0, r0, lr, asr r0
    a3fc:	0004df16 	andeq	sp, r4, r6, lsl pc
    a400:	761b0000 	ldrvc	r0, [fp], -r0
    a404:	0b000036 	bleq	a4e4 <_ZN16CDisplay_SSD13064FlipEv+0x11c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:248
        ta << SSD1306_Cmd::Command_Start
    a408:	35e90511 	strbcc	r0, [r9, #1297]!	; 0x511
    a40c:	0cf40000 	ldcleq	0, cr0, [r4]
    a410:	a1010000 	mrsge	r0, (UNDEF: 1)
    a414:	a700000c 	strge	r0, [r0, -ip]
    a418:	1400000c 	strne	r0, [r0], #-12
    a41c:	00000cf4 	strdeq	r0, [r0], -r4
    a420:	35481b00 	strbcc	r1, [r8, #-2816]	; 0xfffff500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:249
            << SSD1306_Cmd::Set_Page_Addr
    a424:	140b0000 	strne	r0, [fp], #-0
    a428:	00358f0e 	eorseq	r8, r5, lr, lsl #30
    a42c:	00005e00 	andeq	r5, r0, r0, lsl #28
    a430:	0cc00100 	stfeqe	f0, [r0], {0}
    a434:	0cc60000 	stcleq	0, cr0, [r6], {0}
    a438:	f4140000 			; <UNDEFINED> instruction: 0xf4140000
    a43c:	0000000c 	andeq	r0, r0, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:250
            << 0x00
    a440:	00355322 	eorseq	r5, r5, r2, lsr #6
    a444:	0a160b00 	beq	58d04c <_bss_end+0x57bfcc>
    a448:	00003657 	andeq	r3, r0, r7, asr r6
    a44c:	000cd701 	andeq	sp, ip, r1, lsl #14
    a450:	0cf41400 	cfldrdeq	mvd1, [r4]
    a454:	5e160000 	cdppl	0, 1, cr0, cr6, cr0, {0}
    a458:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:251
            << 0xFF
    a45c:	003f0e00 	eorseq	r0, pc, r0, lsl #28
    a460:	0cf40000 	ldcleq	0, cr0, [r4]
    a464:	6f310000 	svcvs	0x00310000
    a468:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    a46c:	0410000f 	ldreq	r0, [r0], #-15
    a470:	00000c49 	andeq	r0, r0, r9, asr #24
    a474:	00369c20 	eorseq	r9, r6, r0, lsr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:252
            << SSD1306_Cmd::Set_Column_Addr
    a478:	16190b00 	ldrne	r0, [r9], -r0, lsl #22
    a47c:	00000c49 	andeq	r0, r0, r9, asr #24
    a480:	00072b32 	andeq	r2, r7, r2, lsr fp
    a484:	12110100 	andsne	r0, r1, #0, 2
    a488:	10640305 	rsbne	r0, r4, r5, lsl #6
    a48c:	38330001 	ldmdacc	r3!, {r0}
    a490:	1f000000 	svcne	0x00000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:253
            << 0x00
    a494:	3400000d 	strcc	r0, [r0], #-13
    a498:	25041000 	strcs	r1, [r4, #-0]
    a49c:	3500000d 	strcc	r0, [r0, #-13]
    a4a0:	001ff104 	andseq	pc, pc, r4, lsl #2
    a4a4:	000d1400 	andeq	r1, sp, r0, lsl #8
    a4a8:	37963600 	ldrcc	r3, [r6, r0, lsl #12]
    a4ac:	e7840000 	str	r0, [r4, r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:254
            << mWidth - 1;
    a4b0:	001c0000 	andseq	r0, ip, r0
    a4b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    a4b8:	00023e37 	andeq	r3, r2, r7, lsr lr
    a4bc:	00e73800 	rsceq	r3, r7, r0, lsl #16
    a4c0:	00004c00 	andeq	r4, r0, r0, lsl #24
    a4c4:	729c0100 	addsvc	r0, ip, #0, 2
    a4c8:	3800000d 	stmdacc	r0, {r0, r2, r3}
    a4cc:	00000338 	andeq	r0, r0, r8, lsr r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:256
        mI2C.End_Transaction(ta);
    a4d0:	01011401 	tsteq	r1, r1, lsl #8
    a4d4:	00000038 	andeq	r0, r0, r8, lsr r0
    a4d8:	38749102 	ldmdacc	r4!, {r1, r8, ip, pc}^
    a4dc:	00000731 	andeq	r0, r0, r1, lsr r7
    a4e0:	01011401 	tsteq	r1, r1, lsl #8
    a4e4:	00000038 	andeq	r0, r0, r8, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:260
    constexpr int PktSize = 4;
    a4e8:	00709102 	rsbseq	r9, r0, r2, lsl #2
    a4ec:	000a8439 	andeq	r8, sl, r9, lsr r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:262
    const int maxIdx = mWidth * (mHeight / 8);
    a4f0:	000d9000 	andeq	r9, sp, r0
    a4f4:	00e7cc00 	rsceq	ip, r7, r0, lsl #24
    a4f8:	00002c00 	andeq	r2, r0, r0, lsl #24
    a4fc:	9d9c0100 	ldflss	f0, [ip]
    a500:	2900000d 	stmdbcs	r0, {r0, r2, r3}
    a504:	00f60054 	rscseq	r0, r6, r4, asr r0
    a508:	293a0000 	ldmdbcs	sl!, {}	; <UNPREDICTABLE>
    a50c:	d3000003 	movwle	r0, #3
    a510:	0200000a 	andeq	r0, r0, #10
    a514:	39007491 	stmdbcc	r0, {r0, r4, r7, sl, ip, sp, lr}
    a518:	00000aaa 	andeq	r0, r0, sl, lsr #21
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266
    for (int i = 0; i < maxIdx; i += PktSize)
    a51c:	00000dbb 			; <UNDEFINED> instruction: 0x00000dbb
    a520:	0000e7a0 	andeq	lr, r0, r0, lsr #15
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266 (discriminator 1)
    a524:	0000002c 	andeq	r0, r0, ip, lsr #32
    a528:	0dc89c01 	stcleq	12, cr9, [r8, #4]
    a52c:	54290000 	strtpl	r0, [r9], #-0
    a530:	00053100 	andeq	r3, r5, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:268
        auto& ta = mI2C.Begin_Transaction(SSD1306_Slave_Address);
    a534:	03293a00 			; <UNDEFINED> instruction: 0x03293a00
    a538:	0ad30000 	beq	ff4ca540 <_bss_end+0xff4b94c0>
    a53c:	91020000 	mrsls	r0, (UNDEF: 2)
    a540:	d93b0074 	ldmdble	fp!, {r2, r4, r5, r6}
    a544:	01000006 	tsteq	r0, r6
    a548:	0de206d6 	stcleq	6, cr0, [r2, #856]!	; 0x358
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:270
        ta << SSD1306_Cmd::Data_Continue;
    a54c:	e37c0000 	cmn	ip, #0
    a550:	03bc0000 			; <UNDEFINED> instruction: 0x03bc0000
    a554:	9c010000 	stcls	0, cr0, [r1], {-0}
    a558:	00000e4a 	andeq	r0, r0, sl, asr #28
    a55c:	0003293a 	andeq	r2, r3, sl, lsr r9
    a560:	00071500 	andeq	r1, r7, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271
        for (int j = 0; j < PktSize; j++)
    a564:	6c910200 	lfmvs	f0, 4, [r1], {0}
    a568:	0038793c 	eorseq	r7, r8, ip, lsr r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271 (discriminator 3)
    a56c:	19d70100 	ldmibne	r7, {r8}^
    a570:	000002a4 	andeq	r0, r0, r4, lsr #5
    a574:	3d689102 	stfccp	f1, [r8, #-8]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:272 (discriminator 2)
            ta << mBuffer[i + j];
    a578:	01003072 	tsteq	r0, r2, ror r0
    a57c:	005e2bd7 	ldrsbeq	r2, [lr], #-183	; 0xffffff49
    a580:	91020000 	mrsls	r0, (UNDEF: 2)
    a584:	31723d64 	cmncc	r2, r4, ror #26
    a588:	38d70100 	ldmcc	r7, {r8}^
    a58c:	0000005e 	andeq	r0, r0, lr, asr r0
    a590:	3d609102 	stfccp	f1, [r0, #-8]!
    a594:	01003272 	tsteq	r0, r2, ror r2
    a598:	005e45d7 	ldrsbeq	r4, [lr], #-87	; 0xffffffa9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:271 (discriminator 2)
        for (int j = 0; j < PktSize; j++)
    a59c:	91020000 	mrsls	r0, (UNDEF: 2)
    a5a0:	37b13c00 	ldrcc	r3, [r1, r0, lsl #24]!
    a5a4:	d7010000 	strle	r0, [r1, -r0]
    a5a8:	00072556 	andeq	r2, r7, r6, asr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:274 (discriminator 2)
        mI2C.End_Transaction(ta);
    a5ac:	04910200 	ldreq	r0, [r1], #512	; 0x200
    a5b0:	0002983e 	andeq	r9, r2, lr, lsr r8
    a5b4:	00663f00 	rsbeq	r3, r6, r0, lsl #30
    a5b8:	6214e201 	andsvs	lr, r4, #268435456	; 0x10000000
    a5bc:	02000001 	andeq	r0, r0, #1
    a5c0:	00007491 	muleq	r0, r1, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:266 (discriminator 2)
    for (int i = 0; i < maxIdx; i += PktSize)
    a5c4:	0006a540 	andeq	sl, r6, r0, asr #10
    a5c8:	06c70100 	strbeq	r0, [r7], r0, lsl #2
    a5cc:	00000e64 	andeq	r0, r0, r4, ror #28
    a5d0:	0000e318 	andeq	lr, r0, r8, lsl r3
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:240
        return;
    a5d4:	00000064 	andeq	r0, r0, r4, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:276
}
    a5d8:	0eb99c01 	cdpeq	12, 11, cr9, cr9, cr1, {0}
    a5dc:	293a0000 	ldmdbcs	sl!, {}	; <UNPREDICTABLE>
_ZN16CDisplay_SSD130624Process_External_CommandEPKcj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:279
{
    a5e0:	15000003 	strne	r0, [r0, #-3]
    a5e4:	02000007 	andeq	r0, r0, #7
    a5e8:	793c7491 	ldmdbvc	ip!, {r0, r4, r7, sl, ip, sp, lr}
    a5ec:	01000038 	tsteq	r0, r8, lsr r0
    a5f0:	028b16c8 	addeq	r1, fp, #200, 12	; 0xc800000
    a5f4:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:280
    if (length <= 0)
    a5f8:	30723d70 	rsbscc	r3, r2, r0, ror sp
    a5fc:	28c80100 	stmiacs	r8, {r8}^
    a600:	0000005e 	andeq	r0, r0, lr, asr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:283
    NDisplay_Command cmd = static_cast<NDisplay_Command>(input[0]);
    a604:	3d6c9102 	stfccp	f1, [ip, #-8]!
    a608:	01003172 	tsteq	r0, r2, ror r1
    a60c:	005e35c8 	subseq	r3, lr, r8, asr #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:285
    switch (cmd)
    a610:	91020000 	mrsls	r0, (UNDEF: 2)
    a614:	32723d68 	rsbscc	r3, r2, #104, 26	; 0x1a00
    a618:	42c80100 	sbcmi	r0, r8, #0, 2
    a61c:	0000005e 	andeq	r0, r0, lr, asr r0
    a620:	3c009102 	stfccd	f1, [r0], {2}
    a624:	000037b1 			; <UNDEFINED> instruction: 0x000037b1
    a628:	2553c801 	ldrbcs	ip, [r3, #-2049]	; 0xfffff7ff
    a62c:	02000007 	andeq	r0, r0, #7
    a630:	3b000491 	blcc	b87c <_ZN5CTRNG5CloseEv+0x1c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:291
            Flip();
    a634:	00000681 	andeq	r0, r0, r1, lsl #13
    a638:	d306ba01 	movwle	fp, #27137	; 0x6a01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:292
            break;
    a63c:	8400000e 	strhi	r0, [r0], #-14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:296
            if (length != sizeof(TDisplay_Clear_Packet))
    a640:	940000e2 	strls	r0, [r0], #-226	; 0xffffff1e
    a644:	01000000 	mrseq	r0, (UNDEF: 0)
    a648:	000efe9c 	muleq	lr, ip, lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:299
            const TDisplay_Clear_Packet* pkt = reinterpret_cast<const TDisplay_Clear_Packet*>(input);
    a64c:	03293a00 			; <UNDEFINED> instruction: 0x03293a00
    a650:	07150000 	ldreq	r0, [r5, -r0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:301
            Clear((pkt->clearSet != 0));
    a654:	91020000 	mrsls	r0, (UNDEF: 2)
    a658:	015d3c6c 	cmpeq	sp, ip, ror #24
    a65c:	ba010000 	blt	4a664 <_bss_end+0x395e4>
    a660:	00005e34 	andeq	r5, r0, r4, lsr lr
    a664:	68910200 	ldmvs	r1, {r9}
    a668:	00381441 	eorseq	r1, r8, r1, asr #8
    a66c:	13bc0100 			; <UNDEFINED> instruction: 0x13bc0100
    a670:	0000056c 	andeq	r0, r0, ip, ror #10
    a674:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:303
            break;
    a678:	00065d3b 	andeq	r5, r6, fp, lsr sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:308
            if (length < sizeof(TDisplay_Draw_Pixel_Array_Packet))
    a67c:	0aa30100 	beq	fe8caa84 <_bss_end+0xfe8b9a04>
    a680:	00000f18 	andeq	r0, r0, r8, lsl pc
    a684:	0000e1d8 	ldrdeq	lr, [r0], -r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:311
            const TDisplay_Draw_Pixel_Array_Packet* pkt = reinterpret_cast<const TDisplay_Draw_Pixel_Array_Packet*>(input);
    a688:	000000ac 	andeq	r0, r0, ip, lsr #1
    a68c:	0f5a9c01 	svceq	0x005a9c01
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:313
            const TDisplay_Pixel_Spec* ptr = &pkt->first;
    a690:	293a0000 	ldmdbcs	sl!, {}	; <UNPREDICTABLE>
    a694:	15000003 	strne	r0, [r0, #-3]
    a698:	02000007 	andeq	r0, r0, #7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315
            for (uint16_t i = 0; i < pkt->count; i++)
    a69c:	363c6c91 			; <UNDEFINED> instruction: 0x363c6c91
    a6a0:	01000038 	tsteq	r0, r8, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315 (discriminator 3)
    a6a4:	016237a3 	cmneq	r2, r3, lsr #15
    a6a8:	91020000 	mrsls	r0, (UNDEF: 2)
    a6ac:	38144168 	ldmdacc	r4, {r3, r5, r6, r8, lr}
    a6b0:	a7010000 	strge	r0, [r1, -r0]
    a6b4:	00056c13 	andeq	r6, r5, r3, lsl ip
    a6b8:	70910200 	addsvc	r0, r1, r0, lsl #4
    a6bc:	00e20c42 	rsceq	r0, r2, r2, asr #24
    a6c0:	00006800 	andeq	r6, r0, r0, lsl #16
    a6c4:	00693f00 	rsbeq	r3, r9, r0, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:316 (discriminator 2)
                Set_Pixel(ptr->x, ptr->y, (ptr->set != 0));
    a6c8:	5e13ac01 	cdppl	12, 1, cr10, cr3, cr1, {0}
    a6cc:	02000000 	andeq	r0, r0, #0
    a6d0:	00007491 	muleq	r0, r1, r4
    a6d4:	0005a63b 	andeq	sl, r5, fp, lsr r6
    a6d8:	068a0100 	streq	r0, [sl], r0, lsl #2
    a6dc:	00000f74 	andeq	r0, r0, r4, ror pc
    a6e0:	0000e0d4 	ldrdeq	lr, [r0], -r4
    a6e4:	00000104 	andeq	r0, r0, r4, lsl #2
    a6e8:	0fae9c01 	svceq	0x00ae9c01
    a6ec:	293a0000 	ldmdbcs	sl!, {}	; <UNPREDICTABLE>
    a6f0:	15000003 	strne	r0, [r0, #-3]
    a6f4:	02000007 	andeq	r0, r0, #7
    a6f8:	3f3c6c91 	svccc	0x003c6c91
    a6fc:	01000038 	tsteq	r0, r8, lsr r0
    a700:	0566368a 	strbeq	r3, [r6, #-1674]!	; 0xfffff976
    a704:	91020000 	mrsls	r0, (UNDEF: 2)
    a708:	6c6f3f68 	stclvs	15, cr3, [pc], #-416	; a570 <_ZN16CDisplay_SSD13064FlipEv+0x1a8>
    a70c:	94010064 	strls	r0, [r1], #-100	; 0xffffff9c
    a710:	000fae13 	andeq	sl, pc, r3, lsl lr	; <UNPREDICTABLE>
    a714:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a718:	00371f41 	eorseq	r1, r7, r1, asr #30
    a71c:	0a950100 	beq	fe54ab24 <_bss_end+0xfe539aa4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:315 (discriminator 2)
            for (uint16_t i = 0; i < pkt->count; i++)
    a720:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a724:	00739102 	rsbseq	r9, r3, r2, lsl #2
    a728:	00b80410 	adcseq	r0, r8, r0, lsl r4
    a72c:	233b0000 	teqcs	fp, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:323
            if (length < sizeof(TDisplay_Pixels_To_Rect))
    a730:	01000006 	tsteq	r0, r6
    a734:	0fce065d 	svceq	0x00ce065d
    a738:	df6c0000 	svcle	0x006c0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:326
            const TDisplay_Pixels_To_Rect* pkt = reinterpret_cast<const TDisplay_Pixels_To_Rect*>(input);
    a73c:	01680000 	cmneq	r8, r0
    a740:	9c010000 	stcls	0, cr0, [r1], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:328
            const uint8_t* data = &pkt->first;
    a744:	00000fea 	andeq	r0, r0, sl, ror #31
    a748:	0003293a 	andeq	r2, r3, sl, lsr r9
    a74c:	00071500 	andeq	r1, r7, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:330
            if (pkt->vflip == 0)
    a750:	6c910200 	lfmvs	f0, 4, [r1], {0}
    a754:	000df841 	andeq	pc, sp, r1, asr #16
    a758:	196d0100 	stmdbne	sp!, {r8}^
    a75c:	00000566 	andeq	r0, r0, r6, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a760:	00749102 	rsbseq	r9, r4, r2, lsl #2
    a764:	0005ff3b 	andeq	pc, r5, fp, lsr pc	; <UNPREDICTABLE>
    a768:	0a380100 	beq	e0ab70 <_bss_end+0xdf9af0>
    a76c:	00001004 	andeq	r1, r0, r4
    a770:	0000dd6c 	andeq	sp, r0, ip, ror #26
    a774:	00000200 	andeq	r0, r0, r0, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332 (discriminator 1)
    a778:	10559c01 	subsne	r9, r5, r1, lsl #24
    a77c:	293a0000 	ldmdbcs	sl!, {}	; <UNPREDICTABLE>
    a780:	15000003 	strne	r0, [r0, #-3]
    a784:	02000007 	andeq	r0, r0, #7
    a788:	173c6491 			; <UNDEFINED> instruction: 0x173c6491
    a78c:	01000037 	tsteq	r0, r7, lsr r0
    a790:	00ea3938 	rsceq	r3, sl, r8, lsr r9
    a794:	91020000 	mrsls	r0, (UNDEF: 2)
    a798:	383b4160 	ldmdacc	fp!, {r5, r6, r8, lr}
    a79c:	3a010000 	bcc	4a7a4 <_bss_end+0x39724>
    a7a0:	00056619 	andeq	r6, r5, r9, lsl r6
    a7a4:	70910200 	addsvc	r0, r1, r0, lsl #4
    a7a8:	00330541 	eorseq	r0, r3, r1, asr #10
    a7ac:	0b480100 	bleq	120abb4 <_bss_end+0x11f9b34>
    a7b0:	0000056c 	andeq	r0, r0, ip, ror #10
    a7b4:	426c9102 	rsbmi	r9, ip, #-2147483648	; 0x80000000
    a7b8:	0000de7c 	andeq	sp, r0, ip, ror lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:334
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a7bc:	00000040 	andeq	r0, r0, r0, asr #32
    a7c0:	0100693f 	tsteq	r0, pc, lsr r9
    a7c4:	005e1354 	subseq	r1, lr, r4, asr r3
    a7c8:	91020000 	mrsls	r0, (UNDEF: 2)
    a7cc:	3b000074 	blcc	a9a4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x3c4>
    a7d0:	000005e4 	andeq	r0, r0, r4, ror #11
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:334 (discriminator 3)
    a7d4:	6f062001 	svcvs	0x00062001
    a7d8:	58000010 	stmdapl	r0, {r4}
    a7dc:	140000dc 	strne	r0, [r0], #-220	; 0xffffff24
    a7e0:	01000001 	tsteq	r0, r1
    a7e4:	0010b19c 	mulseq	r0, ip, r1
    a7e8:	03293a00 			; <UNDEFINED> instruction: 0x03293a00
    a7ec:	07150000 	ldreq	r0, [r5, -r0]
    a7f0:	91020000 	mrsls	r0, (UNDEF: 2)
    a7f4:	383b4164 	ldmdacc	fp!, {r2, r5, r6, r8, lr}
    a7f8:	22010000 	andcs	r0, r1, #0
    a7fc:	00056619 	andeq	r6, r5, r9, lsl r6
    a800:	70910200 	addsvc	r0, r1, r0, lsl #4
    a804:	00330541 	eorseq	r0, r3, r1, asr #10
    a808:	0b2a0100 	bleq	a8ac10 <_bss_end+0xa79b90>
    a80c:	0000056c 	andeq	r0, r0, ip, ror #10
    a810:	426c9102 	rsbmi	r9, ip, #-2147483648	; 0x80000000
    a814:	0000dd0c 	andeq	sp, r0, ip, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:336 (discriminator 2)
                        const uint16_t pos = ((y - pkt->y1) * pkt->w + (x - pkt->x1));
    a818:	00000040 	andeq	r0, r0, r0, asr #32
    a81c:	0100693f 	tsteq	r0, pc, lsr r9
    a820:	005e1332 	subseq	r1, lr, r2, lsr r3
    a824:	91020000 	mrsls	r0, (UNDEF: 2)
    a828:	40000074 	andmi	r0, r0, r4, ror r0
    a82c:	0000063e 	andeq	r0, r0, lr, lsr r6
    a830:	cb0f1b01 	blgt	3d143c <_bss_end+0x3c03bc>
    a834:	14000010 	strne	r0, [r0], #-16
    a838:	440000dc 	strmi	r0, [r0], #-220	; 0xffffff24
    a83c:	01000000 	mrseq	r0, (UNDEF: 0)
    a840:	0010d89c 	mulseq	r0, ip, r8
    a844:	03293a00 			; <UNDEFINED> instruction: 0x03293a00
    a848:	07200000 	streq	r0, [r0, -r0]!
    a84c:	91020000 	mrsls	r0, (UNDEF: 2)
    a850:	c5430074 	strbgt	r0, [r3, #-116]	; 0xffffff8c
    a854:	01000005 	tsteq	r0, r5
    a858:	10e90113 	rscne	r0, r9, r3, lsl r1
    a85c:	f3000000 	vhadd.u8	d0, d0, d0
    a860:	44000010 	strmi	r0, [r0], #-16
    a864:	00000329 	andeq	r0, r0, r9, lsr #6
    a868:	00000715 	andeq	r0, r0, r5, lsl r7
    a86c:	10d84500 	sbcsne	r4, r8, r0, lsl #10
    a870:	37410000 	strbcc	r0, [r1, -r0]
    a874:	110a0000 	mrsne	r0, (UNDEF: 10)
    a878:	dbcc0000 	blle	ff30a880 <_bss_end+0xff2f9800>
    a87c:	00480000 	subeq	r0, r8, r0
    a880:	9c010000 	stcls	0, cr0, [r1], {-0}
    a884:	0010e946 	andseq	lr, r0, r6, asr #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:338 (discriminator 2)
                        Set_Pixel(x, y, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a888:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a88c:	00220000 	eoreq	r0, r2, r0
    a890:	00020000 	andeq	r0, r2, r0
    a894:	00002dd7 	ldrdeq	r2, [r0], -r7
    a898:	3cc70104 	stfcce	f0, [r7], {4}
    a89c:	e7f80000 	ldrb	r0, [r8, r0]!
    a8a0:	e8540000 	ldmda	r4, {}^	; <UNPREDICTABLE>
    a8a4:	38810000 	stmcc	r1, {}	; <UNPREDICTABLE>
    a8a8:	00260000 	eoreq	r0, r6, r0
    a8ac:	38d20000 	ldmcc	r2, {}^	; <UNPREDICTABLE>
    a8b0:	80010000 	andhi	r0, r1, r0
    a8b4:	0000001e 	andeq	r0, r0, lr, lsl r0
    a8b8:	2deb0002 	stclcs	0, cr0, [fp, #8]!
    a8bc:	01040000 	mrseq	r0, (UNDEF: 4)
    a8c0:	00003d5b 	andeq	r3, r0, fp, asr sp
    a8c4:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a8c8:	000038de 	ldrdeq	r3, [r0], -lr
    a8cc:	00000026 	andeq	r0, r0, r6, lsr #32
    a8d0:	000038d2 	ldrdeq	r3, [r0], -r2
    a8d4:	014b8001 	cmpeq	fp, r1
    a8d8:	00040000 	andeq	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:334 (discriminator 2)
                    for (uint16_t y = pkt->y1; y < pkt->y1 + pkt->h; y++)
    a8dc:	00002dfd 	strdeq	r2, [r0], -sp
    a8e0:	00610104 	rsbeq	r0, r1, r4, lsl #2
    a8e4:	90040000 	andls	r0, r4, r0
    a8e8:	26000039 			; <UNDEFINED> instruction: 0x26000039
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:332 (discriminator 2)
                for (uint16_t x = pkt->x1; x < pkt->x1 + pkt->w; x++)
    a8ec:	c4000000 	strgt	r0, [r0], #-0
    a8f0:	180000e8 	stmdane	r0, {r3, r5, r6, r7}
    a8f4:	22000001 	andcs	r0, r0, #1
    a8f8:	0200003e 	andeq	r0, r0, #62	; 0x3e
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:344
                for (uint16_t x = 0; x < pkt->w; x++)
    a8fc:	00003926 	andeq	r3, r0, r6, lsr #18
    a900:	31070201 	tstcc	r7, r1, lsl #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:344 (discriminator 1)
    a904:	03000000 	movweq	r0, #0
    a908:	00003704 	andeq	r3, r0, r4, lsl #14
    a90c:	87020400 	strhi	r0, [r2, -r0, lsl #8]
    a910:	01000039 	tsteq	r0, r9, lsr r0
    a914:	00310703 	eorseq	r0, r1, r3, lsl #14
    a918:	2f050000 	svccs	0x00050000
    a91c:	01000039 	tsteq	r0, r9, lsr r0
    a920:	00501006 	subseq	r1, r0, r6
    a924:	04060000 	streq	r0, [r6], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:346
                    for (uint16_t y = 0; y < pkt->h; y++)
    a928:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    a92c:	39700500 	ldmdbcc	r0!, {r8, sl}^
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:346 (discriminator 3)
    a930:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    a934:	00005010 	andeq	r5, r0, r0, lsl r0
    a938:	00250700 	eoreq	r0, r5, r0, lsl #14
    a93c:	00760000 	rsbseq	r0, r6, r0
    a940:	76080000 	strvc	r0, [r8], -r0
    a944:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    a948:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
    a94c:	ee070409 	cdp	4, 0, cr0, cr7, cr9, {0}
    a950:	05000040 	streq	r0, [r0, #-64]	; 0xffffffc0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:348 (discriminator 2)
                        const uint16_t pos = (x * pkt->h + y);
    a954:	00003947 	andeq	r3, r0, r7, asr #18
    a958:	63150b01 	tstvs	r5, #1024	; 0x400
    a95c:	05000000 	streq	r0, [r0, #-0]
    a960:	0000393a 	andeq	r3, r0, sl, lsr r9
    a964:	63150d01 	tstvs	r5, #1, 26	; 0x40
    a968:	07000000 	streq	r0, [r0, -r0]
    a96c:	00000038 	andeq	r0, r0, r8, lsr r0
    a970:	000000a8 	andeq	r0, r0, r8, lsr #1
    a974:	00007608 	andeq	r7, r0, r8, lsl #12
    a978:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
    a97c:	790500ff 	stmdbvc	r5, {r0, r1, r2, r3, r4, r5, r6, r7}
    a980:	01000039 	tsteq	r0, r9, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:350 (discriminator 2)
                        Set_Pixel(x + pkt->x1, (pkt->h - y) + pkt->y1, ((data[pos / 8] >> (7 - (pos % 8))) & 0x1) != 0);
    a984:	00951510 	addseq	r1, r5, r0, lsl r5
    a988:	55050000 	strpl	r0, [r5, #-0]
    a98c:	01000039 	tsteq	r0, r9, lsr r0
    a990:	00951512 	addseq	r1, r5, r2, lsl r5
    a994:	620a0000 	andvs	r0, sl, #0
    a998:	01000039 	tsteq	r0, r9, lsr r0
    a99c:	0050102b 	subseq	r1, r0, fp, lsr #32
    a9a0:	e9840000 	stmib	r4, {}	; <UNPREDICTABLE>
    a9a4:	00580000 	subseq	r0, r8, r0
    a9a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    a9ac:	000000ea 	andeq	r0, r0, sl, ror #1
    a9b0:	0039f40b 	eorseq	pc, r9, fp, lsl #8
    a9b4:	0f2d0100 	svceq	0x002d0100
    a9b8:	000000ea 	andeq	r0, r0, sl, ror #1
    a9bc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    a9c0:	00380403 	eorseq	r0, r8, r3, lsl #8
    a9c4:	e70a0000 	str	r0, [sl, -r0]
    a9c8:	01000039 	tsteq	r0, r9, lsr r0
    a9cc:	0050101f 	subseq	r1, r0, pc, lsl r0
    a9d0:	e92c0000 	stmdb	ip!, {}	; <UNPREDICTABLE>
    a9d4:	00580000 	subseq	r0, r8, r0
    a9d8:	9c010000 	stcls	0, cr0, [r1], {-0}
    a9dc:	0000011a 	andeq	r0, r0, sl, lsl r1
    a9e0:	0039f40b 	eorseq	pc, r9, fp, lsl #8
    a9e4:	0f210100 	svceq	0x00210100
    a9e8:	0000011a 	andeq	r0, r0, sl, lsl r1
    a9ec:	00749102 	rsbseq	r9, r4, r2, lsl #2
    a9f0:	00250403 	eoreq	r0, r5, r3, lsl #8
    a9f4:	dc0c0000 	stcle	0, cr0, [ip], {-0}
    a9f8:	01000039 	tsteq	r0, r9, lsr r0
    a9fc:	00501014 	subseq	r1, r0, r4, lsl r0
    aa00:	e8c40000 	stmia	r4, {}^	; <UNPREDICTABLE>
    aa04:	00680000 	rsbeq	r0, r8, r0
    aa08:	9c010000 	stcls	0, cr0, [r1], {-0}
    aa0c:	00000148 	andeq	r0, r0, r8, asr #2
    aa10:	0100690d 	tsteq	r0, sp, lsl #18
    aa14:	01480a16 	cmpeq	r8, r6, lsl sl
    aa18:	91020000 	mrsls	r0, (UNDEF: 2)
    aa1c:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
    aa20:	00000050 	andeq	r0, r0, r0, asr r0
    aa24:	0004c500 	andeq	ip, r4, r0, lsl #10
    aa28:	c3000400 	movwgt	r0, #1024	; 0x400
    aa2c:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
    aa30:	00006101 	andeq	r6, r0, r1, lsl #2
    aa34:	3a140400 	bcc	50ba3c <_bss_end+0x4fa9bc>
    aa38:	00260000 	eoreq	r0, r6, r0
    aa3c:	e9dc0000 	ldmib	ip, {}^	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:346 (discriminator 2)
                    for (uint16_t y = 0; y < pkt->h; y++)
    aa40:	04fc0000 	ldrbteq	r0, [ip], #0
    aa44:	3f090000 	svccc	0x00090000
    aa48:	01020000 	mrseq	r0, (UNDEF: 2)
    aa4c:	00057008 	andeq	r7, r5, r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:344 (discriminator 2)
                for (uint16_t x = 0; x < pkt->w; x++)
    aa50:	00250300 	eoreq	r0, r5, r0, lsl #6
    aa54:	02020000 	andeq	r0, r2, #0
    aa58:	00059605 	andeq	r9, r5, r5, lsl #12
    aa5c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:281
        return;
    aa60:	00746e69 	rsbseq	r6, r4, r9, ror #28
    aa64:	00003805 	andeq	r3, r0, r5, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:297
                return;
    aa68:	08010200 	stmdaeq	r1, {r9}
    aa6c:	00000567 	andeq	r0, r0, r7, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:309
                return;
    aa70:	00004405 	andeq	r4, r0, r5, lsl #8
    aa74:	07020200 	streq	r0, [r2, -r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:318
            break;
    aa78:	000003d9 	ldrdeq	r0, [r0], -r9
    aa7c:	0005e106 	andeq	lr, r5, r6, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:324
                return;
    aa80:	07090400 	streq	r0, [r9, -r0, lsl #8]
    aa84:	00000068 	andeq	r0, r0, r8, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:355
            break;
    aa88:	00005703 	andeq	r5, r0, r3, lsl #14
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
}
    aa8c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    aa90:	000040ee 	andeq	r4, r0, lr, ror #1
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
    aa94:	001c4107 	andseq	r4, ip, r7, lsl #2
    aa98:	1a060200 	bne	18b2a0 <_bss_end+0x17a220>
    aa9c:	00000063 	andeq	r0, r0, r3, rrx
    aaa0:	fc6c0305 	stc2l	3, cr0, [ip], #-20	; 0xffffffec
    aaa4:	72070000 	andvc	r0, r7, #0
    aaa8:	0200001c 	andeq	r0, r0, #28
    aaac:	00631a08 	rsbeq	r1, r3, r8, lsl #20
    aab0:	03050000 	movweq	r0, #20480	; 0x5000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358 (discriminator 1)
    aab4:	0000fc70 	andeq	pc, r0, r0, ror ip	; <UNPREDICTABLE>
    aab8:	001d9007 	andseq	r9, sp, r7
    aabc:	1a0a0200 	bne	28b2c4 <_bss_end+0x27a244>
    aac0:	00000063 	andeq	r0, r0, r3, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:7
CDisplay_SSD1306 sDisplay_SSD1306(sI2C1);
    aac4:	fc740305 	ldc2l	3, cr0, [r4], #-20	; 0xffffffec
    aac8:	76070000 	strvc	r0, [r7], -r0
    aacc:	0200001b 	andeq	r0, r0, #27
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
}
    aad0:	00631a0c 	rsbeq	r1, r3, ip, lsl #20
    aad4:	03050000 	movweq	r0, #20480	; 0x5000
    aad8:	0000fc78 	andeq	pc, r0, r8, ror ip	; <UNPREDICTABLE>
    aadc:	00235c08 	eoreq	r5, r3, r8, lsl #24
    aae0:	38040500 	stmdacc	r4, {r8, sl}
    aae4:	02000000 	andeq	r0, r0, #0
_GLOBAL__sub_I_sDisplay_SSD1306():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/oled_ssd1306.cpp:358
    aae8:	00dc0c0e 	sbcseq	r0, ip, lr, lsl #24
    aaec:	34090000 	strcc	r0, [r9], #-0
    aaf0:	0000001d 	andeq	r0, r0, sp, lsl r0
    aaf4:	001e3a09 	andseq	r3, lr, r9, lsl #20
    aaf8:	d8090100 	stmdale	r9, {r8}
    aafc:	0200001c 	andeq	r0, r0, #28
    ab00:	00250a00 	eoreq	r0, r5, r0, lsl #20
_ZdlPvj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:62
{
    ab04:	00ec0000 	rsceq	r0, ip, r0
    ab08:	680b0000 	stmdavs	fp, {}	; <UNPREDICTABLE>
    ab0c:	0f000000 	svceq	0x00000000
    ab10:	02010200 	andeq	r0, r1, #0, 4
    ab14:	000040a5 	andeq	r4, r0, r5, lsr #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:63
    sKernelMem.Free(p);
    ab18:	002c040c 	eoreq	r0, ip, ip, lsl #8
    ab1c:	f3030000 	vhadd.u8	d0, d3, d0
    ab20:	0d000000 	stceq	0, cr0, [r0, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/memory/kernel_heap.h:64
}
    ab24:	00000b95 	muleq	r0, r5, fp
    ab28:	07030318 	smladeq	r3, r8, r3, r0
    ab2c:	0000033f 	andeq	r0, r0, pc, lsr r3
    ab30:	000b130e 	andeq	r1, fp, lr, lsl #6
_ZN16CI2C_TransactionlsI11SSD1306_CmdEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    ab34:	68040700 	stmdavs	r4, {r8, r9, sl}
    ab38:	03000000 	movweq	r0, #0
    ab3c:	2b011006 	blcs	4eb5c <_bss_end+0x3dadc>
    ab40:	0f000001 	svceq	0x00000001
    ab44:	00584548 	subseq	r4, r8, r8, asr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    ab48:	45440f10 	strbmi	r0, [r4, #-3856]	; 0xfffff0f0
    ab4c:	000a0043 	andeq	r0, sl, r3, asr #32
    ab50:	00010b03 	andeq	r0, r1, r3, lsl #22
    ab54:	0b201000 	bleq	80eb5c <_bss_end+0x7fdadc>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    ab58:	03080000 	movweq	r0, #32768	; 0x8000
    ab5c:	01540c24 	cmpeq	r4, r4, lsr #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ab60:	79110000 	ldmdbvc	r1, {}	; <UNPREDICTABLE>
    ab64:	16260300 	strtne	r0, [r6], -r0, lsl #6
    ab68:	00000068 	andeq	r0, r0, r8, rrx
    ab6c:	00781100 	rsbseq	r1, r8, r0, lsl #2
    ab70:	68162703 	ldmdavs	r6, {r0, r1, r8, r9, sl, sp}
    ab74:	04000000 	streq	r0, [r0], #-0
    ab78:	0c721200 	lfmeq	f1, 2, [r2], #-0
    ab7c:	0c030000 	stceq	0, cr0, [r3], {-0}
    ab80:	00012b1b 	andeq	r2, r1, fp, lsl fp
    ab84:	130a0100 	movwne	r0, #41216	; 0xa100
    ab88:	00000be5 	andeq	r0, r0, r5, ror #23
    ab8c:	f9280d03 			; <UNDEFINED> instruction: 0xf9280d03
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ab90:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ab94:	000b9514 	andeq	r9, fp, r4, lsl r5
    ab98:	0e100300 	cdpeq	3, 1, cr0, cr0, cr0, {0}
    ab9c:	00000c5f 	andeq	r0, r0, pc, asr ip
    aba0:	0000033f 	andeq	r0, r0, pc, lsr r3
_ZN16CI2C_TransactionlsIiEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    aba4:	00018801 	andeq	r8, r1, r1, lsl #16
    aba8:	00019d00 	andeq	r9, r1, r0, lsl #26
    abac:	033f1500 	teqeq	pc, #0, 10
    abb0:	68160000 	ldmdavs	r6, {}	; <UNPREDICTABLE>
    abb4:	16000000 	strne	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    abb8:	00000068 	andeq	r0, r0, r8, rrx
    abbc:	00006816 	andeq	r6, r0, r6, lsl r8
    abc0:	96170000 	ldrls	r0, [r7], -r0
    abc4:	03000018 	movweq	r0, #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    abc8:	0b800a12 	bleq	fe00d418 <_bss_end+0xfdffc398>
    abcc:	b2010000 	andlt	r0, r1, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    abd0:	b8000001 	stmdalt	r0, {r0}
    abd4:	15000001 	strne	r0, [r0, #-1]
    abd8:	0000033f 	andeq	r0, r0, pc, lsr r3
    abdc:	0b9e1800 	bleq	fe790be4 <_bss_end+0xfe77fb64>
    abe0:	14030000 	strne	r0, [r3], #-0
    abe4:	000c020f 	andeq	r0, ip, pc, lsl #4
    abe8:	00034500 	andeq	r4, r3, r0, lsl #10
    abec:	01d10100 	bicseq	r0, r1, r0, lsl #2
    abf0:	01dc0000 	bicseq	r0, ip, r0
    abf4:	3f150000 	svccc	0x00150000
    abf8:	16000003 	strne	r0, [r0], -r3
    abfc:	00000025 	andeq	r0, r0, r5, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac00:	0b9e1800 	bleq	fe790c08 <_bss_end+0xfe77fb88>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ac04:	15030000 	strne	r0, [r3, #-0]
    ac08:	000ba90f 	andeq	sl, fp, pc, lsl #18
    ac0c:	00034500 	andeq	r4, r3, r0, lsl #10
    ac10:	01f50100 	mvnseq	r0, r0, lsl #2
_ZN16CI2C_TransactionlsIhEERS_RKT_():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:33
        CI2C_Transaction& operator<<(const T& chr)
    ac14:	02000000 	andeq	r0, r0, #0
    ac18:	3f150000 	svccc	0x00150000
    ac1c:	16000003 	strne	r0, [r0], -r3
    ac20:	000000f3 	strdeq	r0, [r0], -r3
    ac24:	0b9e1800 	bleq	fe790c2c <_bss_end+0xfe77fbac>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:35
            if (mLength >= I2C_Transaction_Max_Size)
    ac28:	16030000 	strne	r0, [r3], -r0
    ac2c:	000c860f 	andeq	r8, ip, pc, lsl #12
    ac30:	00034500 	andeq	r4, r3, r0, lsl #10
    ac34:	02190100 	andseq	r0, r9, #0, 2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:36
                return *this;
    ac38:	02240000 	eoreq	r0, r4, #0
    ac3c:	3f150000 	svccc	0x00150000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:38
            mBuffer[mLength++] = static_cast<uint8_t>(chr);
    ac40:	16000003 	strne	r0, [r0], -r3
    ac44:	0000010b 	andeq	r0, r0, fp, lsl #2
    ac48:	0b9e1800 	bleq	fe790c50 <_bss_end+0xfe77fbd0>
    ac4c:	17030000 	strne	r0, [r3, -r0]
    ac50:	000c310f 	andeq	r3, ip, pc, lsl #2
    ac54:	00034500 	andeq	r4, r3, r0, lsl #10
    ac58:	023d0100 	eorseq	r0, sp, #0, 2
    ac5c:	02480000 	subeq	r0, r8, #0
    ac60:	3f150000 	svccc	0x00150000
    ac64:	16000003 	strne	r0, [r0], -r3
    ac68:	00000068 	andeq	r0, r0, r8, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:40
            return *this;
    ac6c:	0b9e1800 	bleq	fe790c74 <_bss_end+0xfe77fbf4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/include/drivers/i2c.h:41
        }
    ac70:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    ac74:	000bf10f 	andeq	pc, fp, pc, lsl #2
    ac78:	00034500 	andeq	r4, r3, r0, lsl #10
    ac7c:	02610100 	rsbeq	r0, r1, #0, 2
_ZN16CSegment_DisplayC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:124
CSegment_Display::CSegment_Display()
    ac80:	026c0000 	rsbeq	r0, ip, #0
    ac84:	3f150000 	svccc	0x00150000
    ac88:	16000003 	strne	r0, [r0], -r3
    ac8c:	000000ec 	andeq	r0, r0, ip, ror #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:126
, mOutput('\0')
    ac90:	0ab11900 	beq	fec51098 <_bss_end+0xfec40018>
    ac94:	1b030000 	blne	cac9c <_bss_end+0xb9c1c>
    ac98:	000a8111 	andeq	r8, sl, r1, lsl r1
    ac9c:	00028000 	andeq	r8, r2, r0
    aca0:	00028600 	andeq	r8, r2, r0, lsl #12
    aca4:	033f1500 	teqeq	pc, #0, 10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:129
}
    aca8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    acac:	00000aa4 	andeq	r0, r0, r4, lsr #21
    acb0:	42111c03 	andsmi	r1, r1, #768	; 0x300
    acb4:	9a00000c 	bls	acec <_ZN16CSegment_Display4OpenEv+0x30>
    acb8:	a0000002 	andge	r0, r0, r2
_ZN16CSegment_Display4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:132
{
    acbc:	15000002 	strne	r0, [r0, #-2]
    acc0:	0000033f 	andeq	r0, r0, pc, lsr r3
    acc4:	0a5c1900 	beq	17110cc <_bss_end+0x170004c>
    acc8:	1d030000 	stcne	0, cr0, [r3, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:133
    if (mOpened)
    accc:	000b2a11 	andeq	r2, fp, r1, lsl sl
    acd0:	0002b400 	andeq	fp, r2, r0, lsl #8
    acd4:	0002ba00 	andeq	fp, r2, r0, lsl #20
    acd8:	033f1500 	teqeq	pc, #0, 10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:134
        return false;
    acdc:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ace0:	000013de 	ldrdeq	r1, [r0], -lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:136
    if (!sShift_Register.Open())
    ace4:	1b0a1f03 	blne	2928f8 <_bss_end+0x281878>
    ace8:	ce00000c 	cdpgt	0, 0, cr0, cr0, cr12, {0}
    acec:	d4000002 	strle	r0, [r0], #-2
    acf0:	15000002 	strne	r0, [r0, #-2]
    acf4:	0000033f 	andeq	r0, r0, pc, lsr r3
    acf8:	0a9f1900 	beq	fe7d1100 <_bss_end+0xfe7c0080>
    acfc:	21030000 	mrscs	r0, (UNDEF: 3)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:137
        return false;
    ad00:	000bbc0a 	andeq	fp, fp, sl, lsl #24
    ad04:	0002e800 	andeq	lr, r2, r0, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:139
    mOpened = true;
    ad08:	0002fd00 	andeq	pc, r2, r0, lsl #26
    ad0c:	033f1500 	teqeq	pc, #0, 10
    ad10:	68160000 	ldmdavs	r6, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:141
    return true;
    ad14:	16000000 	strne	r0, [r0], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:142
}
    ad18:	0000034b 	andeq	r0, r0, fp, asr #6
    ad1c:	00006816 	andeq	r6, r0, r6, lsl r8
    ad20:	4c1a0000 	ldcmi	0, cr0, [sl], {-0}
    ad24:	0300000b 	movweq	r0, #11
_ZN16CSegment_Display5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:145
{
    ad28:	0357232b 	cmpeq	r7, #-1409286144	; 0xac000000
    ad2c:	1a000000 	bne	ad34 <_ZN16CSegment_Display5CloseEv+0xc>
    ad30:	00000c13 	andeq	r0, r0, r3, lsl ip
    ad34:	68122c03 	ldmdavs	r2, {r0, r1, sl, fp, sp}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:146
    if (!mOpened)
    ad38:	04000000 	streq	r0, [r0], #-0
    ad3c:	000bd31a 	andeq	sp, fp, sl, lsl r3
    ad40:	122d0300 	eorne	r0, sp, #0, 6
    ad44:	00000068 	andeq	r0, r0, r8, rrx
    ad48:	0bdc1a08 	bleq	ff711570 <_bss_end+0xff7004f0>
    ad4c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:149
    sShift_Register.Close();
    ad50:	0001300f 	andeq	r3, r1, pc
    ad54:	4e1a0c00 	cdpmi	12, 1, cr0, cr10, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:151
    mOpened = false;
    ad58:	0300000a 	movweq	r0, #10
    ad5c:	010b122f 	tsteq	fp, pc, lsr #4
    ad60:	00140000 	andseq	r0, r4, r0
    ad64:	00fe040c 	rscseq	r0, lr, ip, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:147
        return;
    ad68:	041b0000 	ldreq	r0, [fp], #-0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:152
}
    ad6c:	000000fe 	strdeq	r0, [r0], -lr
    ad70:	0025040c 	eoreq	r0, r5, ip, lsl #8
    ad74:	040c0000 	streq	r0, [ip], #-0
_ZNK16CSegment_Display9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:155
{
    ad78:	0000004b 	andeq	r0, r0, fp, asr #32
    ad7c:	00035103 	andeq	r5, r3, r3, lsl #2
    ad80:	0b651c00 	bleq	1951d88 <_bss_end+0x1940d08>
    ad84:	32030000 	andcc	r0, r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:156
    return mOpened;
    ad88:	0000fe11 	andeq	pc, r0, r1, lsl lr	; <UNPREDICTABLE>
    ad8c:	3aa11d00 	bcc	fe852194 <_bss_end+0xfe841114>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:157
}
    ad90:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    ad94:	003aab06 	eorseq	sl, sl, r6, lsl #22
    ad98:	00edec00 	rsceq	lr, sp, r0, lsl #24
    ad9c:	0000ec00 	andeq	lr, r0, r0, lsl #24
_ZN16CSegment_Display5WriteEc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:160
{
    ada0:	ac9c0100 	ldfges	f0, [ip], {0}
    ada4:	1e000003 	cdpne	0, 0, cr0, cr0, cr3, {0}
    ada8:	7b010069 	blvc	4af54 <_bss_end+0x39ed4>
    adac:	00003f12 	andeq	r3, r0, r2, lsl pc
    adb0:	70910200 	addsvc	r0, r1, r0, lsl #4
    adb4:	0100661e 	tsteq	r0, lr, lsl r6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:161
    if (!mOpened)
    adb8:	00570e7d 	subseq	r0, r7, sp, ror lr
    adbc:	91020000 	mrsls	r0, (UNDEF: 2)
    adc0:	3abf1f74 	bcc	fefd2b98 <_bss_end+0xfefc1b18>
    adc4:	84010000 	strhi	r0, [r1], #-0
    adc8:	0003ac0a 	andeq	sl, r3, sl, lsl #24
    adcc:	6c910200 	lfmvs	f0, 4, [r1], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:164
    uint8_t idx = static_cast<uint8_t>(c);
    add0:	00250a00 	eoreq	r0, r5, r0, lsl #20
    add4:	03bc0000 			; <UNDEFINED> instruction: 0x03bc0000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167
    if (idx < 32 || idx >= 128)
    add8:	680b0000 	stmdavs	fp, {}	; <UNPREDICTABLE>
    addc:	01000000 	mrseq	r0, (UNDEF: 0)
    ade0:	3ad51d00 	bcc	ff5521e8 <_bss_end+0xff541168>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:167 (discriminator 1)
    ade4:	5f010000 	svcpl	0x00010000
    ade8:	003a6706 	eorseq	r6, sl, r6, lsl #14
    adec:	00ecfc00 	rsceq	pc, ip, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:171
    sShift_Register.Shift_In(static_cast<uint8_t>(~(mCharacter_Map[idx - 32])));
    adf0:	0000f000 	andeq	pc, r0, r0
    adf4:	f19c0100 			; <UNDEFINED> instruction: 0xf19c0100
    adf8:	1e000003 	cdpne	0, 0, cr0, cr0, cr3, {0}
    adfc:	61010069 	tstvs	r1, r9, rrx
    ae00:	00003f12 	andeq	r3, r0, r2, lsl pc
    ae04:	70910200 	addsvc	r0, r1, r0, lsl #4
    ae08:	0100661e 	tsteq	r0, lr, lsl r6
    ae0c:	00570e63 	subseq	r0, r7, r3, ror #28
    ae10:	91020000 	mrsls	r0, (UNDEF: 2)
    ae14:	971d0074 			; <UNDEFINED> instruction: 0x971d0074
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:162
        return;
    ae18:	0100003a 	tsteq	r0, sl, lsr r0
    ae1c:	3a060645 	bcc	18c738 <_bss_end+0x17b6b8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:168
        return;
    ae20:	ec0c0000 	stc	0, cr0, [ip], {-0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:172
}
    ae24:	00f00000 	rscseq	r0, r0, r0
    ae28:	9c010000 	stcls	0, cr0, [r1], {-0}
    ae2c:	00000426 	andeq	r0, r0, r6, lsr #8
    ae30:	0100691e 	tsteq	r0, lr, lsl r9
_ZNK16CSegment_Display4ReadEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:175
{
    ae34:	003f1247 	eorseq	r1, pc, r7, asr #4
    ae38:	91020000 	mrsls	r0, (UNDEF: 2)
    ae3c:	00661e70 	rsbeq	r1, r6, r0, ror lr
    ae40:	570e4901 	strpl	r4, [lr, -r1, lsl #18]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:176
    if (!mOpened)
    ae44:	02000000 	andeq	r0, r0, #0
    ae48:	1d007491 	cfstrsne	mvf7, [r0, #-580]	; 0xfffffdbc
    ae4c:	00003a8d 	andeq	r3, r0, sp, lsl #21
    ae50:	c7062301 	strgt	r2, [r6, -r1, lsl #6]
    ae54:	cc00003a 	stcgt	0, cr0, [r0], {58}	; 0x3a
    ae58:	400000ea 	andmi	r0, r0, sl, ror #1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:177
        return '\0';
    ae5c:	01000001 	tsteq	r0, r1
    ae60:	0004979c 	muleq	r4, ip, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:179
    return mOutput;
    ae64:	00691e00 	rsbeq	r1, r9, r0, lsl #28
    ae68:	3f122501 	svccc	0x00122501
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae6c:	02000000 	andeq	r0, r0, #0
    ae70:	6d1e6891 	ldcvs	8, cr6, [lr, #-580]	; 0xfffffdbc
    ae74:	01006773 	tsteq	r0, r3, ror r7
    ae78:	00f31127 	rscseq	r1, r3, r7, lsr #2
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    ae7c:	91020000 	mrsls	r0, (UNDEF: 2)
    ae80:	00661e74 	rsbeq	r1, r6, r4, ror lr
    ae84:	570e2901 	strpl	r2, [lr, -r1, lsl #18]
    ae88:	02000000 	andeq	r0, r0, #0
    ae8c:	fa1f7091 	blx	7e70d8 <_bss_end+0x7d6058>
    ae90:	01000039 	tsteq	r0, r9, lsr r0
    ae94:	00570e2a 	subseq	r0, r7, sl, lsr #28
    ae98:	91020000 	mrsls	r0, (UNDEF: 2)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180 (discriminator 1)
    ae9c:	3ab91f6c 	bcc	fee52c54 <_bss_end+0xfee41bd4>
    aea0:	31010000 	mrscc	r0, (UNDEF: 1)
    aea4:	0000570e 	andeq	r5, r0, lr, lsl #14
    aea8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:3
CSegment_Display sSegment_Display;
    aeac:	0039ff1f 	eorseq	pc, r9, pc, lsl pc	; <UNPREDICTABLE>
    aeb0:	0a320100 	beq	c8b2b8 <_bss_end+0xc7a238>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aeb4:	000000dc 	ldrdeq	r0, [r0], -ip
    aeb8:	00549102 	subseq	r9, r4, r2, lsl #2
    aebc:	003a8320 	eorseq	r8, sl, r0, lsr #6
    aec0:	06090100 	streq	r0, [r9], -r0, lsl #2
    aec4:	00003a75 	andeq	r3, r0, r5, ror sl
_GLOBAL__sub_I_sSegment_Display():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/segmentdisplay.cpp:180
    aec8:	0000e9dc 	ldrdeq	lr, [r0], -ip
    aecc:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aed0:	691e9c01 	ldmdbvs	lr, {r0, sl, fp, ip, pc}
    aed4:	120b0100 	andne	r0, fp, #0, 2
    aed8:	0000003f 	andeq	r0, r0, pc, lsr r0
    aedc:	1e709102 	expnes	f1, f2
    aee0:	0d010066 	stceq	0, cr0, [r1, #-408]	; 0xfffffe68
_ZN15CShift_RegisterC2Ejjj():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:7
CShift_Register::CShift_Register(uint32_t latchPin, uint32_t dataPin, uint32_t clockPin)
    aee4:	0000570e 	andeq	r5, r0, lr, lsl #14
    aee8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    aeec:	02b90000 	adcseq	r0, r9, #0
    aef0:	00040000 	andeq	r0, r4, r0
    aef4:	000030da 	ldrdeq	r3, [r0], -sl
    aef8:	00610104 	rsbeq	r0, r1, r4, lsl #2
    aefc:	70040000 	andvc	r0, r4, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:10
, mClock_Pin(clockPin)
    af00:	2600003b 			; <UNDEFINED> instruction: 0x2600003b
    af04:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    af08:	8c0000ee 	stchi	0, cr0, [r0], {238}	; 0xee
    af0c:	eb000001 	bl	af18 <_ZN15CShift_RegisterC1Ejjj+0x34>
    af10:	02000041 	andeq	r0, r0, #65	; 0x41
    af14:	05700801 	ldrbeq	r0, [r0, #-2049]!	; 0xfffff7ff
    af18:	25030000 	strcs	r0, [r3, #-0]
    af1c:	02000000 	andeq	r0, r0, #0
    af20:	05960502 	ldreq	r0, [r6, #1282]	; 0x502
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:13
}
    af24:	04040000 	streq	r0, [r4], #-0
    af28:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    af2c:	08010200 	stmdaeq	r1, {r9}
    af30:	00000567 	andeq	r0, r0, r7, ror #10
    af34:	d9070202 	stmdble	r7, {r1, r9}
_ZN15CShift_Register4OpenEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:16
{
    af38:	05000003 	streq	r0, [r0, #-3]
    af3c:	000005e1 	andeq	r0, r0, r1, ror #11
    af40:	5e070904 	vmlapl.f16	s0, s14, s8	; <UNPREDICTABLE>
    af44:	03000000 	movweq	r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:17
    if (mOpened)
    af48:	0000004d 	andeq	r0, r0, sp, asr #32
    af4c:	ee070402 	cdp	4, 0, cr0, cr7, cr2, {0}
    af50:	06000040 	streq	r0, [r0], -r0, asr #32
    af54:	00002122 	andeq	r2, r0, r2, lsr #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:18
        return false;
    af58:	00380405 	eorseq	r0, r8, r5, lsl #8
    af5c:	43030000 	movwmi	r0, #12288	; 0x3000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:22
    if (!sGPIO.Reserve_Pin(mLatch_Pin, true, true))
    af60:	0000840c 	andeq	r8, r0, ip, lsl #8
    af64:	22110700 	andscs	r0, r1, #0, 14
    af68:	07000000 	streq	r0, [r0, -r0]
    af6c:	00001fe6 	andeq	r1, r0, r6, ror #31
    af70:	41080001 	tstmi	r8, r1
    af74:	0200001c 	andeq	r0, r0, #28
    af78:	00591a06 	subseq	r1, r9, r6, lsl #20
    af7c:	03050000 	movweq	r0, #20480	; 0x5000
    af80:	0000fda8 	andeq	pc, r0, r8, lsr #27
    af84:	001c7208 	andseq	r7, ip, r8, lsl #4
    af88:	1a080200 	bne	20b790 <_bss_end+0x1fa710>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:23
        return false;
    af8c:	00000059 	andeq	r0, r0, r9, asr r0
    af90:	fdac0305 	stc2	3, cr0, [ip, #20]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:25
    if (!sGPIO.Reserve_Pin(mData_Pin, true, true))
    af94:	90080000 	andls	r0, r8, r0
    af98:	0200001d 	andeq	r0, r0, #29
    af9c:	00591a0a 	subseq	r1, r9, sl, lsl #20
    afa0:	03050000 	movweq	r0, #20480	; 0x5000
    afa4:	0000fdb0 			; <UNDEFINED> instruction: 0x0000fdb0
    afa8:	001b7608 	andseq	r7, fp, r8, lsl #12
    afac:	1a0c0200 	bne	30b7b4 <_bss_end+0x2fa734>
    afb0:	00000059 	andeq	r0, r0, r9, asr r0
    afb4:	fdb40305 	ldc2	3, cr0, [r4, #20]!
    afb8:	5c060000 	stcpl	0, cr0, [r6], {-0}
    afbc:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:27
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    afc0:	00003804 	andeq	r3, r0, r4, lsl #16
    afc4:	0c0e0200 	sfmeq	f0, 4, [lr], {-0}
    afc8:	000000f1 	strdeq	r0, [r0], -r1
    afcc:	001d3407 	andseq	r3, sp, r7, lsl #8
    afd0:	3a070000 	bcc	1cafd8 <_bss_end+0x1b9f58>
    afd4:	0100001e 	tsteq	r0, lr, lsl r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:28
        return false;
    afd8:	001cd807 	andseq	sp, ip, r7, lsl #16
    afdc:	02000200 	andeq	r0, r0, #0, 4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:31
    if (!sGPIO.Reserve_Pin(mClock_Pin, true, true))
    afe0:	40a50201 	adcmi	r0, r5, r1, lsl #4
    afe4:	04090000 	streq	r0, [r9], #-0
    afe8:	0000002c 	andeq	r0, r0, ip, lsr #32
    afec:	003b500a 	eorseq	r5, fp, sl
    aff0:	0a390100 	beq	e4b3f8 <_bss_end+0xe3a378>
    aff4:	00003af8 	strdeq	r3, [r0], -r8
    aff8:	0000004d 	andeq	r0, r0, sp, asr #32
    affc:	0000f014 	andeq	pc, r0, r4, lsl r0	; <UNPREDICTABLE>
    b000:	00000050 	andeq	r0, r0, r0, asr r0
    b004:	01599c01 	cmpeq	r9, r1, lsl #24
    b008:	360b0000 	strcc	r0, [fp], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:33
        sGPIO.Free_Pin(mLatch_Pin, true, true);
    b00c:	01000038 	tsteq	r0, r8, lsr r0
    b010:	004d1939 	subeq	r1, sp, r9, lsr r9
    b014:	91020000 	mrsls	r0, (UNDEF: 2)
    b018:	3bc30b6c 	blcc	ff0cddd0 <_bss_end+0xff0bcd50>
    b01c:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    b020:	00006530 	andeq	r6, r0, r0, lsr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:34
        sGPIO.Free_Pin(mData_Pin, true, true);
    b024:	68910200 	ldmvs	r1, {r9}
    b028:	003b400b 	eorseq	r4, fp, fp
    b02c:	41390100 	teqmi	r9, r0, lsl #2
    b030:	00000159 	andeq	r0, r0, r9, asr r1
    b034:	0c649102 	stfeqp	f1, [r4], #-8
    b038:	00003b56 	andeq	r3, r0, r6, asr fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:35
        return false;
    b03c:	4d0e3b01 	vstrmi	d3, [lr, #-4]
    b040:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:39
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Output);
    b044:	0d007491 	cfstrseq	mvf7, [r0, #-580]	; 0xfffffdbc
    b048:	3bd30e04 	blcc	ff4ce860 <_bss_end+0xff4bd7e0>
    b04c:	33010000 	movwcc	r0, #4096	; 0x1000
    b050:	003b4606 	eorseq	r4, fp, r6, lsl #12
    b054:	00efe800 	rsceq	lr, pc, r0, lsl #16
    b058:	00002c00 	andeq	r2, r0, r0, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:40
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Output);
    b05c:	859c0100 	ldrhi	r0, [ip, #256]	; 0x100
    b060:	0b000001 	bleq	b06c <_ZN15CShift_Register4OpenEv+0x134>
    b064:	00003836 	andeq	r3, r0, r6, lsr r8
    b068:	4d153301 	ldcmi	3, cr3, [r5, #-4]
    b06c:	02000000 	andeq	r0, r0, #0
    b070:	0a007491 	beq	282bc <_bss_end+0x1723c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:41
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Output);
    b074:	00000435 	andeq	r0, r0, r5, lsr r4
    b078:	320a2601 	andcc	r2, sl, #1048576	; 0x100000
    b07c:	4d00003b 	stcmi	0, cr0, [r0, #-236]	; 0xffffff14
    b080:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    b084:	500000ef 	andpl	r0, r0, pc, ror #1
    b088:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:43
    mOpened = true;
    b08c:	0001e09c 	muleq	r1, ip, r0
    b090:	38360b00 	ldmdacc	r6!, {r8, r9, fp}
    b094:	26010000 	strcs	r0, [r1], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:45
    return true;
    b098:	00004d19 	andeq	r4, r0, r9, lsl sp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:46
}
    b09c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b0a0:	000cb70b 	andeq	fp, ip, fp, lsl #14
    b0a4:	2b260100 	blcs	98b4ac <_bss_end+0x97a42c>
    b0a8:	000000f8 	strdeq	r0, [r0], -r8
_ZN15CShift_Register5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:49
{
    b0ac:	0b689102 	bleq	1a2f4bc <_bss_end+0x1a1e43c>
    b0b0:	00000e45 	andeq	r0, r0, r5, asr #28
    b0b4:	4d3c2601 	ldcmi	6, cr2, [ip, #-4]!
    b0b8:	02000000 	andeq	r0, r0, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:50
    if (!mOpened)
    b0bc:	cd0c6491 	cfstrsgt	mvf6, [ip, #-580]	; 0xfffffdbc
    b0c0:	0100003b 	tsteq	r0, fp, lsr r0
    b0c4:	004d0e28 	subeq	r0, sp, r8, lsr #28
    b0c8:	91020000 	mrsls	r0, (UNDEF: 2)
    b0cc:	120a0074 	andne	r0, sl, #116	; 0x74
    b0d0:	01000007 	tsteq	r0, r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:54
    sGPIO.Set_GPIO_Function(mLatch_Pin, NGPIO_Function::Input);
    b0d4:	3b5e0a19 	blcc	178d940 <_bss_end+0x177c8c0>
    b0d8:	004d0000 	subeq	r0, sp, r0
    b0dc:	ef480000 	svc	0x00480000
    b0e0:	00500000 	subseq	r0, r0, r0
    b0e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    b0e8:	0000023b 	andeq	r0, r0, fp, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:55
    sGPIO.Set_GPIO_Function(mData_Pin, NGPIO_Function::Input);
    b0ec:	0038360b 	eorseq	r3, r8, fp, lsl #12
    b0f0:	18190100 	ldmdane	r9, {r8}
    b0f4:	0000004d 	andeq	r0, r0, sp, asr #32
    b0f8:	0b6c9102 	bleq	1b2f508 <_bss_end+0x1b1e488>
    b0fc:	00000cb7 			; <UNDEFINED> instruction: 0x00000cb7
    b100:	412a1901 			; <UNDEFINED> instruction: 0x412a1901
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:56
    sGPIO.Set_GPIO_Function(mClock_Pin, NGPIO_Function::Input);
    b104:	02000002 	andeq	r0, r0, #2
    b108:	450b6891 	strmi	r6, [fp, #-2193]	; 0xfffff76f
    b10c:	0100000e 	tsteq	r0, lr
    b110:	004d3b19 	subeq	r3, sp, r9, lsl fp
    b114:	91020000 	mrsls	r0, (UNDEF: 2)
    b118:	3b6a0c64 	blcc	1a8e2b0 <_bss_end+0x1a7d230>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:59
    sGPIO.Free_Pin(mLatch_Pin, true, true);
    b11c:	1b010000 	blne	4b124 <_bss_end+0x3a0a4>
    b120:	00004d0e 	andeq	r4, r0, lr, lsl #26
    b124:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b128:	25040900 	strcs	r0, [r4, #-2304]	; 0xfffff700
    b12c:	03000000 	movweq	r0, #0
    b130:	0000023b 	andeq	r0, r0, fp, lsr r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:60
    sGPIO.Free_Pin(mData_Pin, true, true);
    b134:	003adf0a 	eorseq	sp, sl, sl, lsl #30
    b138:	0a0d0100 	beq	34b540 <_bss_end+0x33a4c0>
    b13c:	00003b16 	andeq	r3, r0, r6, lsl fp
    b140:	0000004d 	andeq	r0, r0, sp, asr #32
    b144:	0000ef04 	andeq	lr, r0, r4, lsl #30
    b148:	00000044 	andeq	r0, r0, r4, asr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:61
    sGPIO.Free_Pin(mClock_Pin, true, true);
    b14c:	02929c01 	addseq	r9, r2, #256	; 0x100
    b150:	ef0b0000 	svc	0x000b0000
    b154:	0100003a 	tsteq	r0, sl, lsr r0
    b158:	00f81b0d 	rscseq	r1, r8, sp, lsl #22
    b15c:	91020000 	mrsls	r0, (UNDEF: 2)
    b160:	036b0b6c 	cmneq	fp, #108, 22	; 0x1b000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:63
    mOpened = false;
    b164:	0d010000 	stceq	0, cr0, [r1, #-0]
    b168:	0000cc35 	andeq	ip, r0, r5, lsr ip
    b16c:	68910200 	ldmvs	r1, {r9}
    b170:	0038360c 	eorseq	r3, r8, ip, lsl #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:51
        return;
    b174:	0e0f0100 	adfeqe	f0, f7, f0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:64
}
    b178:	0000004d 	andeq	r0, r0, sp, asr #32
    b17c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b180:	003bbc0f 	eorseq	fp, fp, pc, lsl #24
_ZNK15CShift_Register9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:67
{
    b184:	0a030100 	beq	cb58c <_bss_end+0xba50c>
    b188:	00003ae4 	andeq	r3, r0, r4, ror #21
    b18c:	0000004d 	andeq	r0, r0, sp, asr #32
    b190:	0000eed8 	ldrdeq	lr, [r0], -r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:68
    return mOpened;
    b194:	0000002c 	andeq	r0, r0, ip, lsr #32
    b198:	70109c01 	andsvc	r9, r0, r1, lsl #24
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:69
}
    b19c:	01006469 	tsteq	r0, r9, ror #8
    b1a0:	004d0e05 	subeq	r0, sp, r5, lsl #28
    b1a4:	91020000 	mrsls	r0, (UNDEF: 2)
    b1a8:	2e000074 	mcrcs	0, 0, r0, cr0, cr4, {3}
_ZN15CShift_Register8Shift_InEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:72
{
    b1ac:	04000003 	streq	r0, [r0], #-3
    b1b0:	0031e600 	eorseq	lr, r1, r0, lsl #12
    b1b4:	61010400 	tstvs	r1, r0, lsl #8
    b1b8:	04000000 	streq	r0, [r0], #-0
    b1bc:	00003bec 	andeq	r3, r0, ip, ror #23
    b1c0:	00000026 	andeq	r0, r0, r6, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:73
    if (!mOpened)
    b1c4:	0000f064 	andeq	pc, r0, r4, rrx
    b1c8:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
    b1cc:	000043ba 			; <UNDEFINED> instruction: 0x000043ba
    b1d0:	00004902 	andeq	r4, r0, r2, lsl #18
    b1d4:	0be50300 	bleq	ff94bddc <_bss_end+0xff93ad5c>
    b1d8:	05010000 	streq	r0, [r1, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:79
    sGPIO.Set_Output(mLatch_Pin, false);
    b1dc:	00006110 	andeq	r6, r0, r0, lsl r1
    b1e0:	31301100 	teqcc	r0, r0, lsl #2
    b1e4:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
    b1e8:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
    b1ec:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
    b1f0:	00004645 	andeq	r4, r0, r5, asr #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:82
    sGPIO.Set_Output(mData_Pin, bit);
    b1f4:	01030104 	tsteq	r3, r4, lsl #2
    b1f8:	00000025 	andeq	r0, r0, r5, lsr #32
    b1fc:	00007405 	andeq	r7, r0, r5, lsl #8
    b200:	00006100 	andeq	r6, r0, r0, lsl #2
    b204:	00660600 	rsbeq	r0, r6, r0, lsl #12
    b208:	00100000 	andseq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:84
    sGPIO.Set_Output(mClock_Pin, true);
    b20c:	00005107 	andeq	r5, r0, r7, lsl #2
    b210:	07040800 	streq	r0, [r4, -r0, lsl #16]
    b214:	000040ee 	andeq	r4, r0, lr, ror #1
    b218:	70080108 	andvc	r0, r8, r8, lsl #2
    b21c:	07000005 	streq	r0, [r0, -r5]
    b220:	0000006d 	andeq	r0, r0, sp, rrx
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87
    for (i = 0; i < 0x10; i++)
    b224:	00002a09 	andeq	r2, r0, r9, lsl #20
    b228:	3c680a00 			; <UNDEFINED> instruction: 0x3c680a00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 3)
    b22c:	64010000 	strvs	r0, [r1], #-0
    b230:	003c5806 	eorseq	r5, ip, r6, lsl #16
    b234:	00f49c00 	rscseq	r9, r4, r0, lsl #24
    b238:	00008000 	andeq	r8, r0, r0
    b23c:	fb9c0100 	blx	fe70b646 <_bss_end+0xfe6fa5c6>
    b240:	0b000000 	bleq	b248 <_ZN15CShift_Register8Shift_InEb+0x9c>
    b244:	00637273 	rsbeq	r7, r3, r3, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:87 (discriminator 2)
    b248:	fb196401 	blx	664256 <_bss_end+0x6531d6>
    b24c:	02000000 	andeq	r0, r0, #0
    b250:	640b6491 	strvs	r6, [fp], #-1169	; 0xfffffb6f
    b254:	01007473 	tsteq	r0, r3, ror r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:91
    sGPIO.Set_Output(mClock_Pin, false);
    b258:	01022464 	tsteq	r2, r4, ror #8
    b25c:	91020000 	mrsls	r0, (UNDEF: 2)
    b260:	756e0b60 	strbvc	r0, [lr, #-2912]!	; 0xfffff4a0
    b264:	6401006d 	strvs	r0, [r1], #-109	; 0xffffff93
    b268:	0001042d 	andeq	r0, r1, sp, lsr #8
    b26c:	5c910200 	lfmpl	f0, 4, [r1], {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94
    for (i = 0; i < 0x10; i++)
    b270:	003cba0c 	eorseq	fp, ip, ip, lsl #20
    b274:	11660100 	cmnne	r6, r0, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 3)
    b278:	0000010b 	andeq	r0, r0, fp, lsl #2
    b27c:	0c709102 	ldfeqp	f1, [r0], #-8
    b280:	00003c51 	andeq	r3, r0, r1, asr ip
    b284:	110b6701 	tstne	fp, r1, lsl #14
    b288:	02000001 	andeq	r0, r0, #1
    b28c:	c40d6c91 	strgt	r6, [sp], #-3217	; 0xfffff36f
    b290:	480000f4 	stmdami	r0, {r2, r4, r5, r6, r7}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:94 (discriminator 2)
    b294:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    b298:	69010069 	stmdbvs	r1, {r0, r3, r5, r6}
    b29c:	0001040e 	andeq	r0, r1, lr, lsl #8
    b2a0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:98
    sGPIO.Set_Output(mLatch_Pin, true);
    b2a4:	040f0000 	streq	r0, [pc], #-0	; b2ac <_ZN15CShift_Register8Shift_InEb+0x100>
    b2a8:	00000101 	andeq	r0, r0, r1, lsl #2
    b2ac:	12041110 	andne	r1, r4, #16, 2
    b2b0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    b2b4:	040f0074 	streq	r0, [pc], #-116	; b2bc <_ZN15CShift_Register8Shift_InEb+0x110>
    b2b8:	00000074 	andeq	r0, r0, r4, ror r0
    b2bc:	006d040f 	rsbeq	r0, sp, pc, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:74
        return;
    b2c0:	e60a0000 	str	r0, [sl], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:99
}
    b2c4:	0100003b 	tsteq	r0, fp, lsr r0
    b2c8:	3c3a065c 	ldccc	6, cr0, [sl], #-368	; 0xfffffe90
    b2cc:	f4340000 			; <UNDEFINED> instruction: 0xf4340000
_ZN15CShift_Register8Shift_InEh():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:102
{
    b2d0:	00680000 	rsbeq	r0, r8, r0
    b2d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    b2d8:	00000176 	andeq	r0, r0, r6, ror r1
    b2dc:	003cae13 	eorseq	sl, ip, r3, lsl lr
    b2e0:	125c0100 	subsne	r0, ip, #0, 2
    b2e4:	00000102 	andeq	r0, r0, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:103
    if (!mOpened)
    b2e8:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
    b2ec:	00001293 	muleq	r0, r3, r2
    b2f0:	041e5c01 	ldreq	r5, [lr], #-3073	; 0xfffff3ff
    b2f4:	02000001 	andeq	r0, r0, #1
    b2f8:	6d0e6891 	stcvs	8, cr6, [lr, #-580]	; 0xfffffdbc
    b2fc:	01006d65 	tsteq	r0, r5, ror #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:109
    sGPIO.Set_Output(mLatch_Pin, false);
    b300:	01110b5e 	tsteq	r1, lr, asr fp
    b304:	91020000 	mrsls	r0, (UNDEF: 2)
    b308:	f4500d70 			; <UNDEFINED> instruction: 0xf4500d70
    b30c:	003c0000 	eorseq	r0, ip, r0
    b310:	690e0000 	stmdbvs	lr, {}	; <UNPREDICTABLE>
    b314:	0e600100 	poweqs	f0, f0, f0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112
    for (int j = 7; j >= 0; j--)
    b318:	00000104 	andeq	r0, r0, r4, lsl #2
    b31c:	00749102 	rsbseq	r9, r4, r2, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 1)
    b320:	3c6f1400 	cfstrdcc	mvd1, [pc], #-0	; b328 <_ZN15CShift_Register8Shift_InEh+0x58>
    b324:	52010000 	andpl	r0, r1, #0
    b328:	003bd905 	eorseq	sp, fp, r5, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:114
        sGPIO.Set_Output(mData_Pin, ((byte >> j) & 0x1));
    b32c:	00010400 	andeq	r0, r1, r0, lsl #8
    b330:	00f3e000 	rscseq	lr, r3, r0
    b334:	00005400 	andeq	r5, r0, r0, lsl #8
    b338:	af9c0100 	svcge	0x009c0100
    b33c:	0b000001 	bleq	b348 <_ZN15CShift_Register8Shift_InEh+0x78>
    b340:	52010073 	andpl	r0, r1, #115	; 0x73
    b344:	00010b18 	andeq	r0, r1, r8, lsl fp
    b348:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b34c:	0100690e 	tsteq	r0, lr, lsl #18
    b350:	01040954 	tsteq	r4, r4, asr r9
    b354:	91020000 	mrsls	r0, (UNDEF: 2)
    b358:	9e140074 	mrcls	0, 0, r0, cr4, cr4, {3}
    b35c:	0100003c 	tsteq	r0, ip, lsr r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:115
        sGPIO.Set_Output(mClock_Pin, true);
    b360:	3c760542 	cfldr64cc	mvdx0, [r6], #-264	; 0xfffffef8
    b364:	01040000 	mrseq	r0, (UNDEF: 4)
    b368:	f3340000 	vhadd.u<illegal width 64>	d0, d4, d0
    b36c:	00ac0000 	adceq	r0, ip, r0
    b370:	9c010000 	stcls	0, cr0, [r1], {-0}
    b374:	00000215 	andeq	r0, r0, r5, lsl r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117
        for (i = 0; i < 0x10; i++)
    b378:	0031730b 	eorseq	r7, r1, fp, lsl #6
    b37c:	0b194201 	bleq	65bb88 <_bss_end+0x64ab08>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 3)
    b380:	02000001 	andeq	r0, r0, #1
    b384:	730b6c91 	movwvc	r6, #48273	; 0xbc91
    b388:	42010032 	andmi	r0, r1, #50	; 0x32
    b38c:	00010b29 	andeq	r0, r1, r9, lsr #22
    b390:	68910200 	ldmvs	r1, {r9}
    b394:	6d756e0b 	ldclvs	14, cr6, [r5, #-44]!	; 0xffffffd4
    b398:	31420100 	mrscc	r0, (UNDEF: 82)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:117 (discriminator 2)
    b39c:	00000104 	andeq	r0, r0, r4, lsl #2
    b3a0:	0e649102 	lgneqs	f1, f2
    b3a4:	01003175 	tsteq	r0, r5, ror r1
    b3a8:	02151344 	andseq	r1, r5, #68, 6	; 0x10000001
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:120
        sGPIO.Set_Output(mClock_Pin, false);
    b3ac:	91020000 	mrsls	r0, (UNDEF: 2)
    b3b0:	32750e77 	rsbscc	r0, r5, #1904	; 0x770
    b3b4:	17440100 	strbne	r0, [r4, -r0, lsl #2]
    b3b8:	00000215 	andeq	r0, r0, r5, lsl r2
    b3bc:	00769102 	rsbseq	r9, r6, r2, lsl #2
    b3c0:	67080108 	strvs	r0, [r8, -r8, lsl #2]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122
        for (i = 0; i < 0x10; i++)
    b3c4:	14000005 	strne	r0, [r0], #-5
    b3c8:	00003ca6 	andeq	r3, r0, r6, lsr #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 3)
    b3cc:	8d073601 	stchi	6, cr3, [r7, #-4]
    b3d0:	1100003c 	tstne	r0, ip, lsr r0
    b3d4:	74000001 	strvc	r0, [r0], #-1
    b3d8:	c00000f2 	strdgt	r0, [r0], -r2
    b3dc:	01000000 	mrseq	r0, (UNDEF: 0)
    b3e0:	0002759c 	muleq	r2, ip, r5
    b3e4:	3cb51300 	ldccc	3, cr1, [r5]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:122 (discriminator 2)
    b3e8:	36010000 	strcc	r0, [r1], -r0
    b3ec:	00011115 	andeq	r1, r1, r5, lsl r1
    b3f0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b3f4:	6372730b 	cmnvs	r2, #738197504	; 0x2c000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:112 (discriminator 2)
    for (int j = 7; j >= 0; j--)
    b3f8:	27360100 	ldrcs	r0, [r6, -r0, lsl #2]!
    b3fc:	0000010b 	andeq	r0, r0, fp, lsl #2
    b400:	0b689102 	bleq	1a2f810 <_bss_end+0x1a1e790>
    b404:	006d756e 	rsbeq	r7, sp, lr, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:127
    sGPIO.Set_Output(mLatch_Pin, true);
    b408:	04303601 	ldrteq	r3, [r0], #-1537	; 0xfffff9ff
    b40c:	02000001 	andeq	r0, r0, #1
    b410:	690e6491 	stmdbvs	lr, {r0, r4, r7, sl, sp, lr}
    b414:	09380100 	ldmdbeq	r8!, {r8}
    b418:	00000104 	andeq	r0, r0, r4, lsl #2
    b41c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b420:	003c8814 	eorseq	r8, ip, r4, lsl r8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:104
        return;
    b424:	05240100 	streq	r0, [r4, #-256]!	; 0xffffff00
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b428:	00003c46 	andeq	r3, r0, r6, asr #24
    b42c:	00000104 	andeq	r0, r0, r4, lsl #2
    b430:	0000f1d8 	ldrdeq	pc, [r0], -r8
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b434:	0000009c 	muleq	r0, ip, r0
    b438:	02b29c01 	adcseq	r9, r2, #256	; 0x100
    b43c:	af130000 	svcge	0x00130000
    b440:	0100000c 	tsteq	r0, ip
    b444:	010b1624 	tsteq	fp, r4, lsr #12
    b448:	91020000 	mrsls	r0, (UNDEF: 2)
    b44c:	0ca80c6c 	stceq	12, cr0, [r8], #432	; 0x1b0
    b450:	26010000 	strcs	r0, [r1], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128 (discriminator 1)
    b454:	00010409 	andeq	r0, r1, r9, lsl #8
    b458:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b45c:	0a9f1500 	beq	fe7d0864 <_bss_end+0xfe7bf7e4>
    b460:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:5
CShift_Register sShift_Register(2, 3, 4);
    b464:	003cc106 	eorseq	ip, ip, r6, lsl #2
    b468:	00f06400 	rscseq	r6, r0, r0, lsl #8
    b46c:	00017400 	andeq	r7, r1, r0, lsl #8
    b470:	139c0100 	orrsne	r0, ip, #0, 2
    b474:	00000caf 	andeq	r0, r0, pc, lsr #25
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
}
    b478:	66180801 	ldrvs	r0, [r8], -r1, lsl #16
    b47c:	02000000 	andeq	r0, r0, #0
    b480:	a8136491 	ldmdage	r3, {r0, r4, r7, sl, sp, lr}
    b484:	0100000c 	tsteq	r0, ip
    b488:	01112508 	tsteq	r1, r8, lsl #10
_GLOBAL__sub_I_sShift_Register():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/shiftregister.cpp:128
    b48c:	91020000 	mrsls	r0, (UNDEF: 2)
    b490:	1afb1360 	bne	ffed0218 <_bss_end+0xffebf198>
    b494:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    b498:	0000663a 	andeq	r6, r0, sl, lsr r6
    b49c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    b4a0:	0100690e 	tsteq	r0, lr, lsl #18
    b4a4:	0104090a 	tsteq	r4, sl, lsl #18
_ZN6CTimerC2Em():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:26
CTimer::CTimer(unsigned long timer_reg_base)
    b4a8:	91020000 	mrsls	r0, (UNDEF: 2)
    b4ac:	f1300d74 			; <UNDEFINED> instruction: 0xf1300d74
    b4b0:	00980000 	addseq	r0, r8, r0
    b4b4:	6a0e0000 	bvs	38b4bc <_bss_end+0x37a43c>
    b4b8:	0e1c0100 	mufeqe	f0, f4, f0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:27
: mTimer_Regs(reinterpret_cast<unsigned int*>(timer_reg_base))
    b4bc:	00000104 	andeq	r0, r0, r4, lsl #2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:28
, mCallback(nullptr)
    b4c0:	0d709102 	ldfeqp	f1, [r0, #-8]!
    b4c4:	0000f158 	andeq	pc, r0, r8, asr r1	; <UNPREDICTABLE>
    b4c8:	00000060 	andeq	r0, r0, r0, rrx
    b4cc:	0100630e 	tsteq	r0, lr, lsl #6
    b4d0:	006d0e1e 	rsbeq	r0, sp, lr, lsl lr
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:31
}
    b4d4:	91020000 	mrsls	r0, (UNDEF: 2)
    b4d8:	0000006f 	andeq	r0, r0, pc, rrx
    b4dc:	00039900 	andeq	r9, r3, r0, lsl #18
    b4e0:	0d000400 	cfstrseq	mvf0, [r0, #-0]
    b4e4:	04000033 	streq	r0, [r0], #-51	; 0xffffffcd
_ZN6CTimer4RegsEN3hal9Timer_RegE():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:34
{
    b4e8:	003eee01 	eorseq	lr, lr, r1, lsl #28
    b4ec:	41140400 	tstmi	r4, r0, lsl #8
    b4f0:	3e3b0000 	cdpcc	0, 3, cr0, cr11, cr0, {0}
    b4f4:	02f00000 	rscseq	r0, r0, #0
    b4f8:	00000000 	andeq	r0, r0, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:35
    return mTimer_Regs[static_cast<unsigned int>(reg)];
    b4fc:	46450000 	strbmi	r0, [r5], -r0
    b500:	73020000 	movwvc	r0, #8192	; 0x2000
    b504:	05006474 	streq	r6, [r0, #-1140]	; 0xfffffb8c
    b508:	00029200 	andeq	r9, r2, r0, lsl #4
    b50c:	3d0e0300 	stccc	3, cr0, [lr, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:36
}
    b510:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    b514:	03044101 	movweq	r4, #16641	; 0x4101
    b518:	3041011e 	subcc	r0, r1, lr, lsl r1
    b51c:	05000000 	streq	r0, [r0, #-0]
_ZN6CTimer6EnableEPFvvEj16NTimer_Prescaler():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:39
{
    b520:	00004104 	andeq	r4, r0, r4, lsl #2
    b524:	3d0d3502 	cfstr32cc	mvfx3, [sp, #-8]
    b528:	06000002 	streq	r0, [r0], -r2
    b52c:	00004106 	andeq	r4, r0, r6, lsl #2
    b530:	0b500204 	bleq	140bd48 <_bss_end+0x13facc8>
    b534:	0000022f 	andeq	r0, r0, pc, lsr #4
    b538:	00418507 	subeq	r8, r1, r7, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:40
    Regs(hal::Timer_Reg::Load) = delay;
    b53c:	0d520200 	lfmeq	f0, 2, [r2, #-0]
    b540:	000002d3 	ldrdeq	r0, [r0], -r3
    b544:	41060800 	tstmi	r6, r0, lsl #16
    b548:	54020000 	strpl	r0, [r2], #-0
    b54c:	003dfe10 	eorseq	pc, sp, r0, lsl lr	; <UNPREDICTABLE>
    b550:	0002d500 	andeq	sp, r2, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:43
    reg.counter_32b = 1;
    b554:	00008000 	andeq	r8, r0, r0
    b558:	00008b00 	andeq	r8, r0, r0, lsl #22
    b55c:	02d50900 	sbcseq	r0, r5, #0, 18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:44
    reg.interrupt_enabled = 1;
    b560:	d30a0000 	movwle	r0, #40960	; 0xa000
    b564:	00000002 	andeq	r0, r0, r2
    b568:	003ede0b 	eorseq	sp, lr, fp, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:45
    reg.timer_enabled = 1;
    b56c:	0c560200 	lfmeq	f0, 2, [r6], {-0}
    b570:	00004013 	andeq	r4, r0, r3, lsl r0
    b574:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:46
    reg.prescaler = static_cast<uint8_t>(prescaler);
    b578:	000000a5 	andeq	r0, r0, r5, lsr #1
    b57c:	0002d509 	andeq	sp, r2, r9, lsl #10
    b580:	fb0b0000 	blx	2cb58a <_bss_end+0x2ba50a>
    b584:	0200003c 	andeq	r0, r0, #60	; 0x3c
    b588:	3d470c57 	stclcc	12, cr0, [r7, #-348]	; 0xfffffea4
    b58c:	00b90000 	adcseq	r0, r9, r0
    b590:	00bf0000 	adcseq	r0, pc, r0
    b594:	d5090000 	strle	r0, [r9, #-0]
    b598:	00000002 	andeq	r0, r0, r2
    b59c:	0042400c 	subeq	r4, r2, ip
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:48
    Regs(hal::Timer_Reg::Control) = *reinterpret_cast<unsigned int*>(&reg);
    b5a0:	0d590200 	lfmeq	f0, 2, [r9, #-0]
    b5a4:	000040b4 	strheq	r4, [r0], -r4	; <UNPREDICTABLE>
    b5a8:	000002d3 	ldrdeq	r0, [r0], -r3
    b5ac:	000000d7 	ldrdeq	r0, [r0], -r7
    b5b0:	000000dd 	ldrdeq	r0, [r0], -sp
    b5b4:	0002db09 	andeq	sp, r2, r9, lsl #22
    b5b8:	060d0000 	streq	r0, [sp], -r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:50
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b5bc:	02000041 	andeq	r0, r0, #65	; 0x41
    b5c0:	3d1d0761 	ldccc	7, cr0, [sp, #-388]	; 0xfffffe7c
    b5c4:	02d50000 	sbcseq	r0, r5, #0
    b5c8:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    b5cc:	fc000000 	stc2	0, cr0, [r0], {-0}
    b5d0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:52
    mCallback = callback;
    b5d4:	000002d5 	ldrdeq	r0, [r0], -r5
    b5d8:	41060d00 	tstmi	r6, r0, lsl #26
    b5dc:	63020000 	movwvs	r0, #8192	; 0x2000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:53
}
    b5e0:	003ccd07 	eorseq	ip, ip, r7, lsl #26
    b5e4:	0002d500 	andeq	sp, r2, r0, lsl #10
    b5e8:	01150100 	tsteq	r5, r0, lsl #2
_ZN6CTimer7DisableEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:56
{
    b5ec:	01200000 			; <UNDEFINED> instruction: 0x01200000
    b5f0:	d5090000 	strle	r0, [r9, #-0]
    b5f4:	0a000002 	beq	b604 <_ZN6CTimer7DisableEv+0x18>
    b5f8:	000002e1 	andeq	r0, r0, r1, ror #5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:57
    volatile TTimer_Ctl_Flags& reg = reinterpret_cast<volatile TTimer_Ctl_Flags&>(Regs(hal::Timer_Reg::Control));
    b5fc:	41060d00 	tstmi	r6, r0, lsl #26
    b600:	66020000 	strvs	r0, [r2], -r0
    b604:	00415a07 	subeq	r5, r1, r7, lsl #20
    b608:	0002d500 	andeq	sp, r2, r0, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:59
    reg.interrupt_enabled = 0;
    b60c:	01390100 	teqeq	r9, r0, lsl #2
    b610:	01440000 	mrseq	r0, (UNDEF: 68)
    b614:	d5090000 	strle	r0, [r9, #-0]
    b618:	0a000002 	beq	b628 <_ZN6CTimer7DisableEv+0x3c>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:60
    reg.timer_enabled = 0;
    b61c:	0000025b 	andeq	r0, r0, fp, asr r2
    b620:	41060d00 	tstmi	r6, r0, lsl #26
    b624:	6a020000 	bvs	8b62c <_bss_end+0x7a5ac>
    b628:	00406f07 	subeq	r6, r0, r7, lsl #30
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:61
}
    b62c:	0002d500 	andeq	sp, r2, r0, lsl #10
    b630:	015d0100 	cmpeq	sp, r0, lsl #2
    b634:	01680000 	cmneq	r8, r0
_ZN6CTimer12IRQ_CallbackEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:64
{
    b638:	d5090000 	strle	r0, [r9, #-0]
    b63c:	0a000002 	beq	b64c <_ZN6CTimer12IRQ_CallbackEv+0x14>
    b640:	000002e7 	andeq	r0, r0, r7, ror #5
    b644:	3ed40d00 	cdpcc	13, 13, cr0, cr4, cr0, {0}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:65
    Regs(hal::Timer_Reg::IRQ_Clear) = 1;
    b648:	77020000 	strvc	r0, [r2, -r0]
    b64c:	003d7b07 	eorseq	r7, sp, r7, lsl #22
    b650:	0002ed00 	andeq	lr, r2, r0, lsl #26
    b654:	01810100 	orreq	r0, r1, r0, lsl #2
    b658:	018c0000 	orreq	r0, ip, r0
    b65c:	d5090000 	strle	r0, [r9, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:67
    if (mCallback)
    b660:	0a000002 	beq	b670 <_ZN6CTimer12IRQ_CallbackEv+0x38>
    b664:	000002e1 	andeq	r0, r0, r1, ror #5
    b668:	3ed40d00 	cdpcc	13, 13, cr0, cr4, cr0, {0}
    b66c:	7b020000 	blvc	8b674 <_bss_end+0x7a5f4>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:68
        mCallback();
    b670:	0041c407 	subeq	ip, r1, r7, lsl #8
    b674:	0002ed00 	andeq	lr, r2, r0, lsl #26
    b678:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:69
}
    b67c:	01b00000 	movseq	r0, r0
    b680:	d5090000 	strle	r0, [r9, #-0]
    b684:	0a000002 	beq	b694 <_ZN6CTimer20Is_Timer_IRQ_PendingEv+0xc>
_ZN6CTimer20Is_Timer_IRQ_PendingEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:72
{
    b688:	000002e7 	andeq	r0, r0, r7, ror #5
    b68c:	3fa80d00 	svccc	0x00a80d00
    b690:	82020000 	andhi	r0, r2, #0
    b694:	00404507 	subeq	r4, r0, r7, lsl #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:73
    return Regs(hal::Timer_Reg::IRQ_Masked);
    b698:	0002d300 	andeq	sp, r2, r0, lsl #6
    b69c:	01c90100 	biceq	r0, r9, r0, lsl #2
    b6a0:	01d40000 	bicseq	r0, r4, r0
    b6a4:	d5090000 	strle	r0, [r9, #-0]
    b6a8:	09000002 	stmdbeq	r0, {r1}
    b6ac:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b6b0:	414c0e00 	cmpmi	ip, r0, lsl #28
    b6b4:	85020000 	strhi	r0, [r2, #-0]
    b6b8:	003ea407 	eorseq	sl, lr, r7, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b6bc:	01e90100 	mvneq	r0, r0, lsl #2
    b6c0:	01f40000 	mvnseq	r0, r0
    b6c4:	d5090000 	strle	r0, [r9, #-0]
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b6c8:	0a000002 	beq	b6d8 <_Z41__static_initialization_and_destruction_0ii+0x10>
    b6cc:	000002ed 	andeq	r0, r0, sp, ror #5
    b6d0:	409c0f00 	addsmi	r0, ip, r0, lsl #30
    b6d4:	91020000 	mrsls	r0, (UNDEF: 2)
    b6d8:	003fd310 	eorseq	sp, pc, r0, lsl r3	; <UNPREDICTABLE>
    b6dc:	0002f300 	andeq	pc, r2, r0, lsl #6
    b6e0:	020d0100 	andeq	r0, sp, #0, 2
    b6e4:	02130000 	andseq	r0, r3, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74 (discriminator 1)
    b6e8:	db090000 	blle	24b6f0 <_bss_end+0x23a670>
    b6ec:	00000002 	andeq	r0, r0, r2
    b6f0:	00419910 	subeq	r9, r1, r0, lsl r9
    b6f4:	079a0200 	ldreq	r0, [sl, r0, lsl #4]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:4
CTimer sTimer(hal::Timer_Base);
    b6f8:	00004201 	andeq	r4, r0, r1, lsl #4
    b6fc:	000002fa 	strdeq	r0, [r0], -sl
    b700:	00022801 	andeq	r2, r2, r1, lsl #16
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
}
    b704:	02db0900 	sbcseq	r0, fp, #0, 18
    b708:	00000000 	andeq	r0, r0, r0
    b70c:	00004e11 	andeq	r4, r0, r1, lsl lr
    b710:	4a021200 	bmi	8ff18 <_bss_end+0x7ee98>
    b714:	00024510 	andeq	r4, r2, r0, lsl r5
    b718:	02120000 	andseq	r0, r2, #0
_GLOBAL__sub_I_sTimer():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/timer.cpp:74
    b71c:	004e1a3a 	subeq	r1, lr, sl, lsr sl
    b720:	29130000 	ldmdbcs	r3, {}	; <UNPREDICTABLE>
    b724:	0200003e 	andeq	r0, r0, #62	; 0x3e
    b728:	3dc20846 	stclcc	8, cr0, [r2, #280]	; 0x118
    b72c:	025b0000 	subseq	r0, fp, #0
    b730:	4e0a0000 	cdpmi	0, 0, cr0, cr10, cr0, {0}
    b734:	00000000 	andeq	r0, r0, r0
_ZN5CTRNGC2Ej():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:8
CTRNG::CTRNG(uint32_t trng_reg_base)
    b738:	003fc914 	eorseq	ip, pc, r4, lsl r9	; <UNPREDICTABLE>
    b73c:	010c0300 	mrseq	r0, LR_mon
    b740:	0002ce1d 	andeq	ip, r2, sp, lsl lr
    b744:	41ae1500 			; <UNDEFINED> instruction: 0x41ae1500
    b748:	68110000 	ldmdavs	r1, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:10
, mOpened(0)
    b74c:	14000002 	strne	r0, [r0], #-2
    b750:	00003d16 	andeq	r3, r0, r6, lsl sp
    b754:	1a010803 	bne	4d768 <_bss_end+0x3c6e8>
    b758:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
    b75c:	003fff16 	eorseq	pc, pc, r6, lsl pc	; <UNPREDICTABLE>
    b760:	0a680400 	beq	1a0c768 <_bss_end+0x19fb6e8>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:13
}
    b764:	3da9160d 	stccc	6, cr1, [r9, #52]!	; 0x34
    b768:	bc040000 	stclt	0, cr0, [r4], {-0}
    b76c:	17000d0a 	strne	r0, [r0, -sl, lsl #26]
    b770:	000040aa 	andeq	r4, r0, sl, lsr #1
    b774:	0b012003 	bleq	53788 <_bss_end+0x42708>
_ZN5CTRNG4OpenEb():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:16
{
    b778:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b77c:	003d0e03 	eorseq	r0, sp, r3, lsl #28
    b780:	01220300 			; <UNDEFINED> instruction: 0x01220300
    b784:	22030441 	andcs	r0, r3, #1090519040	; 0x41000000
    b788:	029f4101 	addseq	r4, pc, #1073741824	; 0x40000000
    b78c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19
    if (mOpened && exclusive)
    b790:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    b794:	04190074 	ldreq	r0, [r9], #-116	; 0xffffff8c
    b798:	0040ee07 	subeq	lr, r0, r7, lsl #28
    b79c:	05081900 	streq	r1, [r8, #-2304]	; 0xfffff700
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:19 (discriminator 1)
    b7a0:	000001c2 	andeq	r0, r0, r2, asr #3
    b7a4:	b8040819 	stmdalt	r4, {r0, r3, r4, fp}
    b7a8:	1a000041 	bne	b8b4 <_ZN5CTRNG5CloseEv+0x54>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:20
        return false;
    b7ac:	00003fb7 			; <UNDEFINED> instruction: 0x00003fb7
    b7b0:	041c041b 	ldreq	r0, [ip], #-1051	; 0xfffffbe5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:22
    mOpened++;
    b7b4:	0000004e 	andeq	r0, r0, lr, asr #32
    b7b8:	022f041c 	eoreq	r0, pc, #28, 8	; 0x1c000000
    b7bc:	041d0000 	ldreq	r0, [sp], #-0
    b7c0:	0000022f 	andeq	r0, r0, pc, lsr #4
    b7c4:	004e041e 	subeq	r0, lr, lr, lsl r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:24
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] = TRNG_Warmup_Count;
    b7c8:	041d0000 	ldreq	r0, [sp], #-0
    b7cc:	0000004e 	andeq	r0, r0, lr, asr #32
    b7d0:	a5020119 	strge	r0, [r2, #-281]	; 0xfffffee7
    b7d4:	1c000040 	stcne	0, cr0, [r0], {64}	; 0x40
    b7d8:	00026d04 	andeq	r6, r2, r4, lsl #26
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:25
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Int_Mask)] |=
    b7dc:	08011900 	stmdaeq	r1, {r8, fp, ip}
    b7e0:	00000567 	andeq	r0, r0, r7, ror #10
    b7e4:	d9070219 	stmdble	r7, {r0, r3, r4, r9}
    b7e8:	19000003 	stmdbne	r0, {r0, r1}
    b7ec:	40e90704 	rscmi	r0, r9, r4, lsl #14
    b7f0:	08190000 	ldmdaeq	r9, {}	; <UNPREDICTABLE>
    b7f4:	0040e407 	subeq	lr, r0, r7, lsl #8
    b7f8:	06011900 	streq	r1, [r1], -r0, lsl #18
    b7fc:	00000569 	andeq	r0, r0, r9, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:27
    mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] |= 1; // zapneme TRNG
    b800:	96050219 			; <UNDEFINED> instruction: 0x96050219
    b804:	19000005 	stmdbne	r0, {r0, r2}
    b808:	01c70504 	biceq	r0, r7, r4, lsl #10
    b80c:	04190000 	ldreq	r0, [r9], #-0
    b810:	003d0607 	eorseq	r0, sp, r7, lsl #12
    b814:	10021900 	andne	r1, r2, r0, lsl #18
    b818:	000040fb 	strdeq	r4, [r0], -fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:30
    while (!(mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Status)] >> 24))
    b81c:	51100419 	tstpl	r0, r9, lsl r4
    b820:	1f000041 	svcne	0x00000041
    b824:	000041f1 	strdeq	r4, [r0], -r1
    b828:	e8011e01 	stmda	r1, {r0, r9, sl, fp, ip}
    b82c:	d300003e 	movwle	r0, #62	; 0x3e
    b830:	1c000002 	stcne	0, cr0, [r0], {2}
    b834:	040000f5 	streq	r0, [r0], #-245	; 0xffffff0b
    b838:	01000000 	mrseq	r0, (UNDEF: 0)
    b83c:	0003899c 	muleq	r3, ip, r9
    b840:	7a732000 	bvc	1cd3848 <_bss_end+0x1cc27c8>
    b844:	1d1e0100 	ldfnes	f0, [lr, #-0]
    b848:	00000272 	andeq	r0, r0, r2, ror r2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:33
    return true;
    b84c:	00000004 	andeq	r0, r0, r4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:34
}
    b850:	00000000 	andeq	r0, r0, r0
    b854:	00f52021 	rscseq	r2, r5, r1, lsr #32
    b858:	00039000 	andeq	r9, r3, r0
    b85c:	50012200 	andpl	r2, r1, r0, lsl #4
_ZN5CTRNG5CloseEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:37
{
    b860:	5001f303 	andpl	pc, r1, r3, lsl #6
    b864:	01190000 	tsteq	r9, r0
    b868:	00057008 	andeq	r7, r5, r8
    b86c:	24b72300 	ldrtcs	r2, [r7], #768	; 0x300
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:38
    if (!mOpened)
    b870:	278d0000 	strcs	r0, [sp, r0]
    b874:	7e060000 	cdpvc	0, 0, cr0, cr6, cr0, {0}
    b878:	0022001a 	eoreq	r0, r2, sl, lsl r0
    b87c:	00020000 	andeq	r0, r2, r0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:41
    mOpened--;
    b880:	0000353f 	andeq	r3, r0, pc, lsr r5
    b884:	48470104 	stmdami	r7, {r2, r8}^
    b888:	f5200000 			; <UNDEFINED> instruction: 0xf5200000
    b88c:	f72c0000 			; <UNDEFINED> instruction: 0xf72c0000
    b890:	42470000 	submi	r0, r7, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:43
    if (mOpened == 0)
    b894:	42770000 	rsbsmi	r0, r7, #0
    b898:	42df0000 	sbcsmi	r0, pc, #0
    b89c:	80010000 	andhi	r0, r1, r0
    b8a0:	00000022 	andeq	r0, r0, r2, lsr #32
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:44
        mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Control)] = 0;
    b8a4:	35530002 	ldrbcc	r0, [r3, #-2]
    b8a8:	01040000 	mrseq	r0, (UNDEF: 4)
    b8ac:	000048c4 	andeq	r4, r0, r4, asr #17
    b8b0:	0000f72c 	andeq	pc, r0, ip, lsr #14
    b8b4:	0000f730 	andeq	pc, r0, r0, lsr r7	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:39
        return;
    b8b8:	00004247 	andeq	r4, r0, r7, asr #4
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:45
}
    b8bc:	00004277 	andeq	r4, r0, r7, ror r2
    b8c0:	000042df 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    b8c4:	032a8001 			; <UNDEFINED> instruction: 0x032a8001
_ZNK5CTRNG9Is_OpenedEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:48
{
    b8c8:	00040000 	andeq	r0, r4, r0
    b8cc:	00003567 	andeq	r3, r0, r7, ror #10
    b8d0:	440b0104 	strmi	r0, [fp], #-260	; 0xfffffefc
    b8d4:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:49
    return (mOpened > 0);
    b8d8:	77000045 	strvc	r0, [r0, -r5, asr #32]
    b8dc:	24000042 	strcs	r0, [r0], #-66	; 0xffffffbe
    b8e0:	02000049 	andeq	r0, r0, #73	; 0x49
    b8e4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    b8e8:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
    b8ec:	0040ee07 	subeq	lr, r0, r7, lsl #28
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:50
}
    b8f0:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    b8f4:	000001c2 	andeq	r0, r0, r2, asr #3
    b8f8:	b8040803 	stmdalt	r4, {r0, r1, fp}
    b8fc:	03000041 	movweq	r0, #65	; 0x41
_ZN5CTRNG17Get_Random_NumberEv():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:53
{
    b900:	05670801 	strbeq	r0, [r7, #-2049]!	; 0xfffff7ff
    b904:	01030000 	mrseq	r0, (UNDEF: 3)
    b908:	00056906 	andeq	r6, r5, r6, lsl #18
    b90c:	476d0400 	strbmi	r0, [sp, -r0, lsl #8]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:54
    if (mOpened == 0)
    b910:	01070000 	mrseq	r0, (UNDEF: 7)
    b914:	00000039 	andeq	r0, r0, r9, lsr r0
    b918:	d4061701 	strle	r1, [r6], #-1793	; 0xfffff8ff
    b91c:	05000001 	streq	r0, [r0, #-1]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:55
        return 4; // https://xkcd.com/221/
    b920:	0000431a 	andeq	r4, r0, sl, lsl r3
    b924:	481c0500 	ldmdami	ip, {r8, sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:61
    return mTrng_Regs[static_cast<uint32_t>(hal::TRNG_Reg::Data)];
    b928:	05010000 	streq	r0, [r1, #-0]
    b92c:	000044ed 	andeq	r4, r0, sp, ror #9
    b930:	45ab0502 	strmi	r0, [fp, #1282]!	; 0x502
    b934:	05030000 	streq	r0, [r3, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b938:	00004786 	andeq	r4, r0, r6, lsl #15
    b93c:	482c0504 	stmdami	ip!, {r2, r8, sl}
    b940:	05050000 	streq	r0, [r5, #-0]
    b944:	0000479c 	muleq	r0, ip, r7
_Z41__static_initialization_and_destruction_0ii():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b948:	45e80506 	strbmi	r0, [r8, #1286]!	; 0x506
    b94c:	05070000 	streq	r0, [r7, #-0]
    b950:	00004717 	andeq	r4, r0, r7, lsl r7
    b954:	47250508 	strmi	r0, [r5, -r8, lsl #10]!
    b958:	05090000 	streq	r0, [r9, #-0]
    b95c:	00004733 	andeq	r4, r0, r3, lsr r7
    b960:	463a050a 	ldrtmi	r0, [sl], -sl, lsl #10
    b964:	050b0000 	streq	r0, [fp, #-0]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62 (discriminator 1)
    b968:	0000462a 	andeq	r4, r0, sl, lsr #12
    b96c:	4336050c 	teqmi	r6, #12, 10	; 0x3000000
    b970:	050d0000 	streq	r0, [sp, #-0]
    b974:	0000434f 	andeq	r4, r0, pc, asr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:3
CTRNG sTRNG(hal::TRNG_Base);
    b978:	461b050e 	ldrmi	r0, [fp], -lr, lsl #10
    b97c:	050f0000 	streq	r0, [pc, #-0]	; b984 <_Z41__static_initialization_and_destruction_0ii+0x3c>
    b980:	000047df 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
}
    b984:	475c0510 	smmlami	ip, r0, r5, r0
    b988:	05110000 	ldreq	r0, [r1, #-0]
    b98c:	000047d0 	ldrdeq	r4, [r0], -r0
    b990:	43fc0512 	mvnsmi	r0, #75497472	; 0x4800000
    b994:	05130000 	ldreq	r0, [r3, #-0]
    b998:	00004379 	andeq	r4, r0, r9, ror r3
_GLOBAL__sub_I_sTRNG():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/drivers/trng.cpp:62
    b99c:	43430514 	movtmi	r0, #13588	; 0x3514
    b9a0:	05150000 	ldreq	r0, [r5, #-0]
    b9a4:	000046b9 			; <UNDEFINED> instruction: 0x000046b9
    b9a8:	43b00516 	movsmi	r0, #92274688	; 0x5800000
    b9ac:	05170000 	ldreq	r0, [r7, #-0]
    b9b0:	000042eb 	andeq	r4, r0, fp, ror #5
    b9b4:	47c20518 	bfimi	r0, r8, (invalid: 10:2)
_ZN11CFilesystemC2Ev():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:10
CFilesystem::CFilesystem()
    b9b8:	05190000 	ldreq	r0, [r9, #-0]
    b9bc:	000045f7 	strdeq	r4, [r0], -r7
    b9c0:	46d1051a 			; <UNDEFINED> instruction: 0x46d1051a
    b9c4:	051b0000 	ldreq	r0, [fp, #-0]
    b9c8:	00004384 	andeq	r4, r0, r4, lsl #7
    b9cc:	4590051c 	ldrmi	r0, [r0, #1308]	; 0x51c
    b9d0:	051d0000 	ldreq	r0, [sp, #-0]
    b9d4:	000044df 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    b9d8:	474e051e 	smlaldmi	r0, lr, lr, r5
    b9dc:	051f0000 	ldreq	r0, [pc, #-0]	; b9e4 <_ZN11CFilesystemC1Ev+0x2c>
    b9e0:	000047aa 	andeq	r4, r0, sl, lsr #15
    b9e4:	47eb0520 	strbmi	r0, [fp, r0, lsr #10]!
    b9e8:	05210000 	streq	r0, [r1, #-0]!
    b9ec:	000047f9 	strdeq	r4, [r0], -r9
    b9f0:	460e0522 	strmi	r0, [lr], -r2, lsr #10
    b9f4:	05230000 	streq	r0, [r3, #-0]!
    b9f8:	00004554 	andeq	r4, r0, r4, asr r5
    b9fc:	43930524 	orrsmi	r0, r3, #36, 10	; 0x9000000
    ba00:	05250000 	streq	r0, [r5, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:14
    mRoot.parent = nullptr;
    ba04:	000045db 	ldrdeq	r4, [r0], -fp
    ba08:	44f90526 	ldrbtmi	r0, [r9], #1318	; 0x526
    ba0c:	05270000 	streq	r0, [r7, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:15
    mRoot.next = nullptr;
    ba10:	00004779 	andeq	r4, r0, r9, ror r7
    ba14:	45090528 	strmi	r0, [r9, #-1320]	; 0xfffffad8
    ba18:	05290000 	streq	r0, [r9, #-0]!
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:16
    mRoot.children = &mRoot_Dev;
    ba1c:	00004518 	andeq	r4, r0, r8, lsl r5
    ba20:	4527052a 	strmi	r0, [r7, #-1322]!	; 0xfffffad6
    ba24:	052b0000 	streq	r0, [fp, #-0]!
    ba28:	00004536 	andeq	r4, r0, r6, lsr r5
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:17
    mRoot.isDirectory = true;
    ba2c:	44c4052c 	strbmi	r0, [r4], #1324	; 0x52c
    ba30:	052d0000 	streq	r0, [sp, #-0]!
    ba34:	00004545 	andeq	r4, r0, r5, asr #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:18
    mRoot.driver_idx = NoFilesystemDriver;
    ba38:	4708052e 	strmi	r0, [r8, -lr, lsr #10]
    ba3c:	052f0000 	streq	r0, [pc, #-0]!	; ba44 <_ZN11CFilesystemC1Ev+0x8c>
    ba40:	00004563 	andeq	r4, r0, r3, ror #10
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:19
    mRoot.name[0] = '\0';
    ba44:	45720530 	ldrbmi	r0, [r2, #-1328]!	; 0xfffffad0
    ba48:	05310000 	ldreq	r0, [r1, #-0]!
    ba4c:	00004324 	andeq	r4, r0, r4, lsr #6
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:21
    mRoot_Dev.parent = &mRoot;
    ba50:	46590532 			; <UNDEFINED> instruction: 0x46590532
    ba54:	05330000 	ldreq	r0, [r3, #-0]!
    ba58:	00004669 	andeq	r4, r0, r9, ror #12
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:22
    mRoot_Dev.children = nullptr;
    ba5c:	46790534 			; <UNDEFINED> instruction: 0x46790534
    ba60:	05350000 	ldreq	r0, [r5, #-0]!
    ba64:	000044b2 			; <UNDEFINED> instruction: 0x000044b2
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:23
    mRoot_Dev.next = &mRoot_Sys;
    ba68:	46890536 			; <UNDEFINED> instruction: 0x46890536
    ba6c:	05370000 	ldreq	r0, [r7, #-0]!
    ba70:	00004699 	muleq	r0, r9, r6
    ba74:	46a90538 			; <UNDEFINED> instruction: 0x46a90538
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:24
    mRoot_Dev.isDirectory = true;
    ba78:	05390000 	ldreq	r0, [r9, #-0]!
    ba7c:	000043a3 	andeq	r4, r0, r3, lsr #7
    ba80:	435c053a 	cmpmi	ip, #243269632	; 0xe800000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:25
    mRoot_Dev.driver_idx = NoFilesystemDriver;
    ba84:	053b0000 	ldreq	r0, [fp, #-0]!
    ba88:	00004581 	andeq	r4, r0, r1, lsl #11
    ba8c:	42fb053c 	rscsmi	r0, fp, #60, 10	; 0xf000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:26
    strncpy(mRoot_Dev.name, "DEV", 4);
    ba90:	053d0000 	ldreq	r0, [sp, #-0]!
    ba94:	000046c4 	andeq	r4, r0, r4, asr #13
    ba98:	e306003e 	movw	r0, #24638	; 0x603e
    ba9c:	02000043 	andeq	r0, r0, #67	; 0x43
    baa0:	08026b01 	stmdaeq	r2, {r0, r8, r9, fp, sp, lr}
    baa4:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:28
    mRoot_Sys.parent = &mRoot;
    baa8:	0045a607 	subeq	sl, r5, r7, lsl #12
    baac:	02700100 	rsbseq	r0, r0, #0, 2
    bab0:	00004714 	andeq	r4, r0, r4, lsl r7
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:29
    mRoot_Sys.children = nullptr;
    bab4:	bf070000 	svclt	0x00070000
    bab8:	01000044 	tsteq	r0, r4, asr #32
    babc:	47140271 			; <UNDEFINED> instruction: 0x47140271
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:30
    mRoot_Sys.next = &mRoot_Mnt;
    bac0:	01000000 	mrseq	r0, (UNDEF: 0)
    bac4:	01d40800 	bicseq	r0, r4, r0, lsl #16
    bac8:	ff090000 			; <UNDEFINED> instruction: 0xff090000
    bacc:	14000001 	strne	r0, [r0], #-1
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:31
    mRoot_Sys.isDirectory = true;
    bad0:	0a000002 	beq	bae0 <_ZN11CFilesystemC1Ev+0x128>
    bad4:	00000024 	andeq	r0, r0, r4, lsr #32
    bad8:	04080011 	streq	r0, [r8], #-17	; 0xffffffef
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:32
    mRoot_Sys.driver_idx = NoFilesystemDriver;
    badc:	0b000002 	bleq	baec <_ZN11CFilesystemC1Ev+0x134>
    bae0:	00004647 	andeq	r4, r0, r7, asr #12
    bae4:	26027401 	strcs	r7, [r2], -r1, lsl #8
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:33
    strncpy(mRoot_Sys.name, "SYS", 4);
    bae8:	00000214 	andeq	r0, r0, r4, lsl r2
    baec:	0a3d3a24 	beq	f5a384 <_bss_end+0xf49304>
    baf0:	243d0f3d 	ldrtcs	r0, [sp], #-3901	; 0xfffff0c3
    baf4:	023d323d 	eorseq	r3, sp, #-805306365	; 0xd0000003
    baf8:	133d053d 	teqne	sp, #255852544	; 0xf400000
    bafc:	0c3d0d3d 	ldceq	13, cr0, [sp], #-244	; 0xffffff0c
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:35
    mRoot_Mnt.parent = &mRoot;
    bb00:	113d233d 	teqne	sp, sp, lsr r3
    bb04:	013d263d 	teqeq	sp, sp, lsr r6
    bb08:	083d173d 	ldmdaeq	sp!, {r0, r2, r3, r4, r5, r8, r9, sl, ip}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:36
    mRoot_Mnt.children = nullptr;
    bb0c:	003d093d 	eorseq	r0, sp, sp, lsr r9
    bb10:	07020300 	streq	r0, [r2, -r0, lsl #6]
    bb14:	000003d9 	ldrdeq	r0, [r0], -r9
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:37
    mRoot_Mnt.next = nullptr;
    bb18:	70080103 	andvc	r0, r8, r3, lsl #2
    bb1c:	0c000005 	stceq	0, cr0, [r0], {5}
    bb20:	0259040d 	subseq	r0, r9, #218103808	; 0xd000000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:38
    mRoot_Mnt.isDirectory = true;
    bb24:	070e0000 	streq	r0, [lr, -r0]
    bb28:	07000048 	streq	r0, [r0, -r8, asr #32]
    bb2c:	00003901 	andeq	r3, r0, r1, lsl #18
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:39
    mRoot_Mnt.driver_idx = NoFilesystemDriver;
    bb30:	04f70200 	ldrbteq	r0, [r7], #512	; 0x200
    bb34:	00029e06 	andeq	r9, r2, r6, lsl #28
    bb38:	43bd0500 			; <UNDEFINED> instruction: 0x43bd0500
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:40
    strncpy(mRoot_Mnt.name, "MNT", 4);
    bb3c:	05000000 	streq	r0, [r0, #-0]
    bb40:	000043c8 	andeq	r4, r0, r8, asr #7
    bb44:	43da0501 	bicsmi	r0, sl, #4194304	; 0x400000
    bb48:	05020000 	streq	r0, [r2, #-0]
    bb4c:	000043f4 	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    bb50:	47410503 	strbmi	r0, [r1, -r3, lsl #10]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:41
}
    bb54:	05040000 	streq	r0, [r4, #-0]
    bb58:	000044d3 	ldrdeq	r4, [r0], -r3
    bb5c:	46fa0505 	ldrbtmi	r0, [sl], r5, lsl #10
    bb60:	00060000 	andeq	r0, r6, r0
    bb64:	96050203 	strls	r0, [r5], -r3, lsl #4
    bb68:	03000005 	movweq	r0, #5
    bb6c:	40e40708 	rscmi	r0, r4, r8, lsl #14
_ZN11CFilesystem13TFS_Tree_Node10Find_ChildEPKc():
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:44
{
    bb70:	04030000 	streq	r0, [r3], #-0
    bb74:	00431404 	subeq	r1, r3, r4, lsl #8
    bb78:	03080300 	movweq	r0, #33536	; 0x8300
    bb7c:	0000430c 	andeq	r4, r0, ip, lsl #6
    bb80:	bd040803 	stclt	8, cr0, [r4, #-12]
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:45
    TFS_Tree_Node* child = children;
    bb84:	03000041 	movweq	r0, #65	; 0x41
    bb88:	46eb0310 	usatmi	r0, #11, r0, lsl #6
    bb8c:	e20f0000 	and	r0, pc, #0
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bb90:	03000046 	movweq	r0, #70	; 0x46
    bb94:	025a102a 	subseq	r1, sl, #42	; 0x2a
    bb98:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:49
        if (strncmp(child->name, name, MaxFilenameLength) == 0)
    bb9c:	df000002 	svcle	0x00000002
    bba0:	10000002 	andne	r0, r0, r2
    bba4:	39471100 	stmdbcc	r7, {r8, ip}^
    bba8:	2f030000 	svccs	0x00030000
    bbac:	0002d411 	andeq	sp, r2, r1, lsl r4
    bbb0:	39791100 	ldmdbcc	r9!, {r8, ip}^
    bbb4:	30030000 	andcc	r0, r3, r0
    bbb8:	0002d411 	andeq	sp, r2, r1, lsl r4
    bbbc:	02c80900 	sbceq	r0, r8, #0, 18
    bbc0:	03070000 	movweq	r0, #28672	; 0x7000
    bbc4:	240a0000 	strcs	r0, [sl], #-0
    bbc8:	01000000 	mrseq	r0, (UNDEF: 0)
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:50
            return child;
    bbcc:	02df1200 	sbcseq	r1, pc, #0, 4
    bbd0:	33040000 	movwcc	r0, #16384	; 0x4000
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:52
        child = child->next;
    bbd4:	02f70a09 	rscseq	r0, r7, #36864	; 0x9000
    bbd8:	03050000 	movweq	r0, #20480	; 0x5000
    bbdc:	0000fee4 	andeq	pc, r0, r4, ror #29
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:47
    while (child != nullptr)
    bbe0:	0002eb12 	andeq	lr, r2, r2, lsl fp
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:55
    return nullptr;
    bbe4:	09340400 	ldmdbeq	r4!, {sl}
/mnt/c/Users/Kuba/Documents/ZeroMate/examples/19-I2C/kernel/src/fs/filesystem.cpp:56
}
    bbe8:	0002f70a 	andeq	pc, r2, sl, lsl #14
    bbec:	18030500 	stmdane	r3, {r8, sl}
    bbf0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	110e1b0e 	tstne	lr, lr, lsl #22
       c:	10061201 	andne	r1, r6, r1, lsl #4
      10:	02000017 	andeq	r0, r0, #23
      14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
      18:	0b3a0e03 	bleq	e8382c <_bss_end+0xe727ac>
      1c:	0b390b3b 	bleq	e42d10 <_bss_end+0xe31c90>
      20:	06120111 			; <UNDEFINED> instruction: 0x06120111
      24:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      28:	03000019 	movweq	r0, #25
      2c:	0e030139 	mcreq	1, 0, r0, cr3, cr9, {1}
      30:	0b3b0b3a 	bleq	ec2d20 <_bss_end+0xeb1ca0>
      34:	00001301 	andeq	r1, r0, r1, lsl #6
      38:	3f012e04 	svccc	0x00012e04
      3c:	3a0e0319 	bcc	380ca8 <_bss_end+0x36fc28>
      40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      44:	01193c0b 	tsteq	r9, fp, lsl #24
      48:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
      4c:	13490005 	movtne	r0, #36869	; 0x9005
      50:	16060000 	strne	r0, [r6], -r0
      54:	3a0e0300 	bcc	380c5c <_bss_end+0x36fbdc>
      58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      5c:	0013490b 	andseq	r4, r3, fp, lsl #18
      60:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
      64:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
      68:	0b3b0b3a 	bleq	ec2d58 <_bss_end+0xeb1cd8>
      6c:	13490b39 	movtne	r0, #39737	; 0x9b39
      70:	0000193c 	andeq	r1, r0, ip, lsr r9
      74:	0b000f08 	bleq	3c9c <CPSR_IRQ_INHIBIT+0x3c1c>
      78:	0013490b 	andseq	r4, r3, fp, lsl #18
      7c:	00240900 	eoreq	r0, r4, r0, lsl #18
      80:	0b3e0b0b 	bleq	f82cb4 <_bss_end+0xf71c34>
      84:	00000e03 	andeq	r0, r0, r3, lsl #28
      88:	47012e0a 	strmi	r2, [r1, -sl, lsl #28]
      8c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      90:	97184006 	ldrls	r4, [r8, -r6]
      94:	13011942 	movwne	r1, #6466	; 0x1942
      98:	050b0000 	streq	r0, [fp, #-0]
      9c:	02134900 	andseq	r4, r3, #0, 18
      a0:	0c000018 	stceq	0, cr0, [r0], {24}
      a4:	08030005 	stmdaeq	r3, {r0, r2}
      a8:	0b3b0b3a 	bleq	ec2d98 <_bss_end+0xeb1d18>
      ac:	13490b39 	movtne	r0, #39737	; 0x9b39
      b0:	00001802 	andeq	r1, r0, r2, lsl #16
      b4:	0b00240d 	bleq	90f0 <_ZN16CI2C_Transaction11Set_AddressEt+0x18>
      b8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      bc:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
      c0:	1347012e 	movtne	r0, #28974	; 0x712e
      c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
      c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      cc:	00000019 	andeq	r0, r0, r9, lsl r0
      d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
      d4:	030b130e 	movweq	r1, #45838	; 0xb30e
      d8:	110e1b0e 	tstne	lr, lr, lsl #22
      dc:	10061201 	andne	r1, r6, r1, lsl #4
      e0:	02000017 	andeq	r0, r0, #23
      e4:	0b0b0024 	bleq	2c017c <_bss_end+0x2af0fc>
      e8:	0e030b3e 	vmoveq.16	d3[0], r0
      ec:	24030000 	strcs	r0, [r3], #-0
      f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      f4:	0008030b 	andeq	r0, r8, fp, lsl #6
      f8:	00160400 	andseq	r0, r6, r0, lsl #8
      fc:	0b3a0e03 	bleq	e83910 <_bss_end+0xe72890>
     100:	0b390b3b 	bleq	e42df4 <_bss_end+0xe31d74>
     104:	00001349 	andeq	r1, r0, r9, asr #6
     108:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     10c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     110:	13490035 	movtne	r0, #36917	; 0x9035
     114:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
     118:	3a080301 	bcc	200d24 <_bss_end+0x1efca4>
     11c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     120:	0013010b 	andseq	r0, r3, fp, lsl #2
     124:	00340800 	eorseq	r0, r4, r0, lsl #16
     128:	0b3a0e03 	bleq	e8393c <_bss_end+0xe728bc>
     12c:	0b390b3b 	bleq	e42e20 <_bss_end+0xe31da0>
     130:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     134:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
     138:	34090000 	strcc	r0, [r9], #-0
     13c:	3a0e0300 	bcc	380d44 <_bss_end+0x36fcc4>
     140:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     144:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     148:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
     14c:	0a000019 	beq	1b8 <CPSR_IRQ_INHIBIT+0x138>
     150:	0e030104 	adfeqs	f0, f3, f4
     154:	0b3e196d 	bleq	f86710 <_bss_end+0xf75690>
     158:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     15c:	0b3b0b3a 	bleq	ec2e4c <_bss_end+0xeb1dcc>
     160:	13010b39 	movwne	r0, #6969	; 0x1b39
     164:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     168:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     16c:	0c00000b 	stceq	0, cr0, [r0], {11}
     170:	13470034 	movtne	r0, #28724	; 0x7034
     174:	020d0000 	andeq	r0, sp, #0
     178:	0b0e0301 	bleq	380d84 <_bss_end+0x36fd04>
     17c:	3b0b3a0b 	blcc	2ce9b0 <_bss_end+0x2bd930>
     180:	010b390b 	tsteq	fp, fp, lsl #18
     184:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     188:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     18c:	0b3b0b3a 	bleq	ec2e7c <_bss_end+0xeb1dfc>
     190:	13490b39 	movtne	r0, #39737	; 0x9b39
     194:	00000b38 	andeq	r0, r0, r8, lsr fp
     198:	3f012e0f 	svccc	0x00012e0f
     19c:	3a0e0319 	bcc	380e08 <_bss_end+0x36fd88>
     1a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1a4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     1a8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     1ac:	01136419 	tsteq	r3, r9, lsl r4
     1b0:	10000013 	andne	r0, r0, r3, lsl r0
     1b4:	13490005 	movtne	r0, #36869	; 0x9005
     1b8:	00001934 	andeq	r1, r0, r4, lsr r9
     1bc:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     1c0:	12000013 	andne	r0, r0, #19
     1c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     1c8:	0b3a0e03 	bleq	e839dc <_bss_end+0xe7295c>
     1cc:	0b390b3b 	bleq	e42ec0 <_bss_end+0xe31e40>
     1d0:	0b320e6e 	bleq	c83b90 <_bss_end+0xc72b10>
     1d4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     1d8:	00001301 	andeq	r1, r0, r1, lsl #6
     1dc:	3f012e13 	svccc	0x00012e13
     1e0:	3a0e0319 	bcc	380e4c <_bss_end+0x36fdcc>
     1e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1e8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     1ec:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     1f0:	00136419 	andseq	r6, r3, r9, lsl r4
     1f4:	000f1400 	andeq	r1, pc, r0, lsl #8
     1f8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     1fc:	01150000 	tsteq	r5, r0
     200:	01134901 	tsteq	r3, r1, lsl #18
     204:	16000013 			; <UNDEFINED> instruction: 0x16000013
     208:	13490021 	movtne	r0, #36897	; 0x9021
     20c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     210:	0b001017 	bleq	4274 <CPSR_IRQ_INHIBIT+0x41f4>
     214:	0013490b 	andseq	r4, r3, fp, lsl #18
     218:	00341800 	eorseq	r1, r4, r0, lsl #16
     21c:	0b3a0e03 	bleq	e83a30 <_bss_end+0xe729b0>
     220:	0b390b3b 	bleq	e42f14 <_bss_end+0xe31e94>
     224:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     228:	0000193c 	andeq	r1, r0, ip, lsr r9
     22c:	47003419 	smladmi	r0, r9, r4, r3
     230:	3b0b3a13 	blcc	2cea84 <_bss_end+0x2bda04>
     234:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     238:	1a000018 	bne	2a0 <CPSR_IRQ_INHIBIT+0x220>
     23c:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     240:	01111934 	tsteq	r1, r4, lsr r9
     244:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     248:	00194296 	mulseq	r9, r6, r2
     24c:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     250:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     254:	06120111 			; <UNDEFINED> instruction: 0x06120111
     258:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     25c:	00130119 	andseq	r0, r3, r9, lsl r1
     260:	00051c00 	andeq	r1, r5, r0, lsl #24
     264:	0b3a0e03 	bleq	e83a78 <_bss_end+0xe729f8>
     268:	0b390b3b 	bleq	e42f5c <_bss_end+0xe31edc>
     26c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     270:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     274:	3a134701 	bcc	4d1e80 <_bss_end+0x4c0e00>
     278:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     27c:	1113640b 	tstne	r3, fp, lsl #8
     280:	40061201 	andmi	r1, r6, r1, lsl #4
     284:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     288:	00001301 	andeq	r1, r0, r1, lsl #6
     28c:	0300051e 	movweq	r0, #1310	; 0x51e
     290:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     294:	00180219 	andseq	r0, r8, r9, lsl r2
     298:	00051f00 	andeq	r1, r5, r0, lsl #30
     29c:	0b3a0803 	bleq	e822b0 <_bss_end+0xe71230>
     2a0:	0b390b3b 	bleq	e42f94 <_bss_end+0xe31f14>
     2a4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     2a8:	34200000 	strtcc	r0, [r0], #-0
     2ac:	3a0e0300 	bcc	380eb4 <_bss_end+0x36fe34>
     2b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     2b8:	21000018 	tstcs	r0, r8, lsl r0
     2bc:	1347012e 	movtne	r0, #28974	; 0x712e
     2c0:	0b3b0b3a 	bleq	ec2fb0 <_bss_end+0xeb1f30>
     2c4:	13640b39 	cmnne	r4, #58368	; 0xe400
     2c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     2cc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     2d0:	00130119 	andseq	r0, r3, r9, lsl r1
     2d4:	00342200 	eorseq	r2, r4, r0, lsl #4
     2d8:	0b3a0803 	bleq	e822ec <_bss_end+0xe7126c>
     2dc:	0b390b3b 	bleq	e42fd0 <_bss_end+0xe31f50>
     2e0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     2e4:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     2e8:	3a134701 	bcc	4d1ef4 <_bss_end+0x4c0e74>
     2ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2f0:	2013640b 	andscs	r6, r3, fp, lsl #8
     2f4:	0013010b 	andseq	r0, r3, fp, lsl #2
     2f8:	00052400 	andeq	r2, r5, r0, lsl #8
     2fc:	13490e03 	movtne	r0, #40451	; 0x9e03
     300:	00001934 	andeq	r1, r0, r4, lsr r9
     304:	03000525 	movweq	r0, #1317	; 0x525
     308:	3b0b3a0e 	blcc	2ceb48 <_bss_end+0x2bdac8>
     30c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     310:	26000013 			; <UNDEFINED> instruction: 0x26000013
     314:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     318:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     31c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     320:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     324:	27000019 	smladcs	r0, r9, r0, r0
     328:	13310005 	teqne	r1, #5
     32c:	00001802 	andeq	r1, r0, r2, lsl #16
     330:	01110100 	tsteq	r1, r0, lsl #2
     334:	0b130e25 	bleq	4c3bd0 <_bss_end+0x4b2b50>
     338:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     33c:	01111755 	tsteq	r1, r5, asr r7
     340:	00001710 	andeq	r1, r0, r0, lsl r7
     344:	0b002402 	bleq	9354 <_ZN8CMonitor6ScrollEv+0xe0>
     348:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     34c:	0300000e 	movweq	r0, #14
     350:	13490026 	movtne	r0, #36902	; 0x9026
     354:	24040000 	strcs	r0, [r4], #-0
     358:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     35c:	0008030b 	andeq	r0, r8, fp, lsl #6
     360:	00350500 	eorseq	r0, r5, r0, lsl #10
     364:	00001349 	andeq	r1, r0, r9, asr #6
     368:	03001606 	movweq	r1, #1542	; 0x606
     36c:	3b0b3a0e 	blcc	2cebac <_bss_end+0x2bdb2c>
     370:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     374:	07000013 	smladeq	r0, r3, r0, r0
     378:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
     37c:	0b3b0b3a 	bleq	ec306c <_bss_end+0xeb1fec>
     380:	13010b39 	movwne	r0, #6969	; 0x1b39
     384:	34080000 	strcc	r0, [r8], #-0
     388:	3a0e0300 	bcc	380f90 <_bss_end+0x36ff10>
     38c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     390:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     394:	6c061c19 	stcvs	12, cr1, [r6], {25}
     398:	09000019 	stmdbeq	r0, {r0, r3, r4}
     39c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3a0:	0b3b0b3a 	bleq	ec3090 <_bss_end+0xeb2010>
     3a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     3a8:	0b1c193c 	bleq	7068a0 <_bss_end+0x6f5820>
     3ac:	0000196c 	andeq	r1, r0, ip, ror #18
     3b0:	0301040a 	movweq	r0, #5130	; 0x140a
     3b4:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     3b8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     3bc:	3b0b3a13 	blcc	2cec10 <_bss_end+0x2bdb90>
     3c0:	000b390b 	andeq	r3, fp, fp, lsl #18
     3c4:	00280b00 	eoreq	r0, r8, r0, lsl #22
     3c8:	0b1c0e03 	bleq	703bdc <_bss_end+0x6f2b5c>
     3cc:	340c0000 	strcc	r0, [ip], #-0
     3d0:	00134700 	andseq	r4, r3, r0, lsl #14
     3d4:	00340d00 	eorseq	r0, r4, r0, lsl #26
     3d8:	0b3a0e03 	bleq	e83bec <_bss_end+0xe72b6c>
     3dc:	0b390b3b 	bleq	e430d0 <_bss_end+0xe32050>
     3e0:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
     3e4:	00001802 	andeq	r1, r0, r2, lsl #16
     3e8:	0301020e 	movweq	r0, #4622	; 0x120e
     3ec:	3a0b0b0e 	bcc	2c302c <_bss_end+0x2b1fac>
     3f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3f4:	0013010b 	andseq	r0, r3, fp, lsl #2
     3f8:	000d0f00 	andeq	r0, sp, r0, lsl #30
     3fc:	0b3a0e03 	bleq	e83c10 <_bss_end+0xe72b90>
     400:	0b390b3b 	bleq	e430f4 <_bss_end+0xe32074>
     404:	0b381349 	bleq	e05130 <_bss_end+0xdf40b0>
     408:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     40c:	03193f01 	tsteq	r9, #1, 30
     410:	3b0b3a0e 	blcc	2cec50 <_bss_end+0x2bdbd0>
     414:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     418:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     41c:	8b193c0b 	blhi	64f450 <_bss_end+0x63e3d0>
     420:	13640b01 	cmnne	r4, #1024	; 0x400
     424:	00001301 	andeq	r1, r0, r1, lsl #6
     428:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     42c:	00193413 	andseq	r3, r9, r3, lsl r4
     430:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     434:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     438:	0b3b0b3a 	bleq	ec3128 <_bss_end+0xeb20a8>
     43c:	0e6e0b39 	vmoveq.8	d14[5], r0
     440:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     444:	00001364 	andeq	r1, r0, r4, ror #6
     448:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
     44c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     450:	13490101 	movtne	r0, #37121	; 0x9101
     454:	00001301 	andeq	r1, r0, r1, lsl #6
     458:	49002115 	stmdbmi	r0, {r0, r2, r4, r8, sp}
     45c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     460:	000f1600 	andeq	r1, pc, r0, lsl #12
     464:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     468:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     46c:	03193f01 	tsteq	r9, #1, 30
     470:	3b0b3a08 	blcc	2cec98 <_bss_end+0x2bdc18>
     474:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     478:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     47c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     480:	00130113 	andseq	r0, r3, r3, lsl r1
     484:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     488:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     48c:	0b3b0b3a 	bleq	ec317c <_bss_end+0xeb20fc>
     490:	0e6e0b39 	vmoveq.8	d14[5], r0
     494:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     498:	13011364 	movwne	r1, #4964	; 0x1364
     49c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     4a0:	03193f01 	tsteq	r9, #1, 30
     4a4:	3b0b3a0e 	blcc	2cece4 <_bss_end+0x2bdc64>
     4a8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     4ac:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     4b0:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     4b4:	00130113 	andseq	r0, r3, r3, lsl r1
     4b8:	00101a00 	andseq	r1, r0, r0, lsl #20
     4bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     4c0:	341b0000 	ldrcc	r0, [fp], #-0
     4c4:	3a0e0300 	bcc	3810cc <_bss_end+0x37004c>
     4c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4cc:	3f13490b 	svccc	0x0013490b
     4d0:	00193c19 	andseq	r3, r9, r9, lsl ip
     4d4:	01041c00 	tsteq	r4, r0, lsl #24
     4d8:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     4dc:	0b0b0b3e 	bleq	2c31dc <_bss_end+0x2b215c>
     4e0:	0b3a1349 	bleq	e8520c <_bss_end+0xe7418c>
     4e4:	0b390b3b 	bleq	e431d8 <_bss_end+0xe32158>
     4e8:	00001301 	andeq	r1, r0, r1, lsl #6
     4ec:	3f012e1d 	svccc	0x00012e1d
     4f0:	3a0e0319 	bcc	38115c <_bss_end+0x3700dc>
     4f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4f8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     4fc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     500:	00136419 	andseq	r6, r3, r9, lsl r4
     504:	00341e00 	eorseq	r1, r4, r0, lsl #28
     508:	0b3a1347 	bleq	e8522c <_bss_end+0xe741ac>
     50c:	0b390b3b 	bleq	e43200 <_bss_end+0xe32180>
     510:	00001802 	andeq	r1, r0, r2, lsl #16
     514:	03002e1f 	movweq	r2, #3615	; 0xe1f
     518:	1119340e 	tstne	r9, lr, lsl #8
     51c:	40061201 	andmi	r1, r6, r1, lsl #4
     520:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     524:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     528:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
     52c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     530:	96184006 	ldrls	r4, [r8], -r6
     534:	13011942 	movwne	r1, #6466	; 0x1942
     538:	05210000 	streq	r0, [r1, #-0]!
     53c:	3a0e0300 	bcc	381144 <_bss_end+0x3700c4>
     540:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     544:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     548:	22000018 	andcs	r0, r0, #24
     54c:	1347012e 	movtne	r0, #28974	; 0x712e
     550:	0b3b0b3a 	bleq	ec3240 <_bss_end+0xeb21c0>
     554:	13640b39 	cmnne	r4, #58368	; 0xe400
     558:	06120111 			; <UNDEFINED> instruction: 0x06120111
     55c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     560:	00130119 	andseq	r0, r3, r9, lsl r1
     564:	00052300 	andeq	r2, r5, r0, lsl #6
     568:	13490e03 	movtne	r0, #40451	; 0x9e03
     56c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
     570:	0b240000 	bleq	900578 <_bss_end+0x8ef4f8>
     574:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     578:	25000006 	strcs	r0, [r0, #-6]
     57c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     580:	0b3b0b3a 	bleq	ec3270 <_bss_end+0xeb21f0>
     584:	13490b39 	movtne	r0, #39737	; 0x9b39
     588:	00001802 	andeq	r1, r0, r2, lsl #16
     58c:	03000526 	movweq	r0, #1318	; 0x526
     590:	3b0b3a08 	blcc	2cedb8 <_bss_end+0x2bdd38>
     594:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     598:	00180213 	andseq	r0, r8, r3, lsl r2
     59c:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
     5a0:	0b3a1347 	bleq	e852c4 <_bss_end+0xe74244>
     5a4:	0b390b3b 	bleq	e43298 <_bss_end+0xe32218>
     5a8:	01111364 	tsteq	r1, r4, ror #6
     5ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     5b0:	01194297 			; <UNDEFINED> instruction: 0x01194297
     5b4:	28000013 	stmdacs	r0, {r0, r1, r4}
     5b8:	1347012e 	movtne	r0, #28974	; 0x712e
     5bc:	0b3b0b3a 	bleq	ec32ac <_bss_end+0xeb222c>
     5c0:	13640b39 	cmnne	r4, #58368	; 0xe400
     5c4:	13010b20 	movwne	r0, #6944	; 0x1b20
     5c8:	05290000 	streq	r0, [r9, #-0]!
     5cc:	490e0300 	stmdbmi	lr, {r8, r9}
     5d0:	00193413 	andseq	r3, r9, r3, lsl r4
     5d4:	00052a00 	andeq	r2, r5, r0, lsl #20
     5d8:	0b3a0e03 	bleq	e83dec <_bss_end+0xe72d6c>
     5dc:	0b390b3b 	bleq	e432d0 <_bss_end+0xe32250>
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	31012e2b 	tstcc	r1, fp, lsr #28
     5e8:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     5ec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     5f0:	96184006 	ldrls	r4, [r8], -r6
     5f4:	13011942 	movwne	r1, #6466	; 0x1942
     5f8:	052c0000 	streq	r0, [ip, #-0]!
     5fc:	02133100 	andseq	r3, r3, #0, 2
     600:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
     604:	1347012e 	movtne	r0, #28974	; 0x712e
     608:	0b201364 	bleq	8053a0 <_bss_end+0x7f4320>
     60c:	00001301 	andeq	r1, r0, r1, lsl #6
     610:	31012e2e 	tstcc	r1, lr, lsr #28
     614:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     618:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     61c:	97184006 	ldrls	r4, [r8, -r6]
     620:	13011942 	movwne	r1, #6466	; 0x1942
     624:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     628:	64134701 	ldrvs	r4, [r3], #-1793	; 0xfffff8ff
     62c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     630:	97184006 	ldrls	r4, [r8, -r6]
     634:	00001942 	andeq	r1, r0, r2, asr #18
     638:	01110100 	tsteq	r1, r0, lsl #2
     63c:	0b130e25 	bleq	4c3ed8 <_bss_end+0x4b2e58>
     640:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     644:	01111755 	tsteq	r1, r5, asr r7
     648:	00001710 	andeq	r1, r0, r0, lsl r7
     64c:	03010202 	movweq	r0, #4610	; 0x1202
     650:	3a0b0b0e 	bcc	2c3290 <_bss_end+0x2b2210>
     654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     658:	0013010b 	andseq	r0, r3, fp, lsl #2
     65c:	01040300 	mrseq	r0, LR_abt
     660:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
     664:	0b0b0b3e 	bleq	2c3364 <_bss_end+0x2b22e4>
     668:	0b3a1349 	bleq	e85394 <_bss_end+0xe74314>
     66c:	0b390b3b 	bleq	e43360 <_bss_end+0xe322e0>
     670:	13010b32 	movwne	r0, #6962	; 0x1b32
     674:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     678:	1c080300 	stcne	3, cr0, [r8], {-0}
     67c:	0500000b 	streq	r0, [r0, #-11]
     680:	13490026 	movtne	r0, #36902	; 0x9026
     684:	13060000 	movwne	r0, #24576	; 0x6000
     688:	0b0e0301 	bleq	381294 <_bss_end+0x370214>
     68c:	3b0b3a0b 	blcc	2ceec0 <_bss_end+0x2bde40>
     690:	010b390b 	tsteq	fp, fp, lsl #18
     694:	07000013 	smladeq	r0, r3, r0, r0
     698:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     69c:	0b3b0b3a 	bleq	ec338c <_bss_end+0xeb230c>
     6a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6a4:	00000b38 	andeq	r0, r0, r8, lsr fp
     6a8:	03000d08 	movweq	r0, #3336	; 0xd08
     6ac:	3b0b3a0e 	blcc	2ceeec <_bss_end+0x2bde6c>
     6b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6b4:	32193f13 	andscc	r3, r9, #19, 30	; 0x4c
     6b8:	1c193c0b 	ldcne	12, cr3, [r9], {11}
     6bc:	00196c0b 	andseq	r6, r9, fp, lsl #24
     6c0:	000d0900 	andeq	r0, sp, r0, lsl #18
     6c4:	0b3a0e03 	bleq	e83ed8 <_bss_end+0xe72e58>
     6c8:	0b390b3b 	bleq	e433bc <_bss_end+0xe3233c>
     6cc:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     6d0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     6d4:	0000196c 	andeq	r1, r0, ip, ror #18
     6d8:	3f012e0a 	svccc	0x00012e0a
     6dc:	3a0e0319 	bcc	381348 <_bss_end+0x3702c8>
     6e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6e4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     6e8:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
     6ec:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
     6f0:	00130113 	andseq	r0, r3, r3, lsl r1
     6f4:	00050b00 	andeq	r0, r5, r0, lsl #22
     6f8:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     6fc:	050c0000 	streq	r0, [ip, #-0]
     700:	00134900 	andseq	r4, r3, r0, lsl #18
     704:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     708:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     70c:	0b3b0b3a 	bleq	ec33fc <_bss_end+0xeb237c>
     710:	0e6e0b39 	vmoveq.8	d14[5], r0
     714:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     718:	13011364 	movwne	r1, #4964	; 0x1364
     71c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     720:	03193f01 	tsteq	r9, #1, 30
     724:	3b0b3a0e 	blcc	2cef64 <_bss_end+0x2bdee4>
     728:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     72c:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     730:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     734:	00130113 	andseq	r0, r3, r3, lsl r1
     738:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
     73c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     740:	0b3b0b3a 	bleq	ec3430 <_bss_end+0xeb23b0>
     744:	0e6e0b39 	vmoveq.8	d14[5], r0
     748:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     74c:	00001301 	andeq	r1, r0, r1, lsl #6
     750:	03000d10 	movweq	r0, #3344	; 0xd10
     754:	3b0b3a0e 	blcc	2cef94 <_bss_end+0x2bdf14>
     758:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     75c:	000b3813 	andeq	r3, fp, r3, lsl r8
     760:	00241100 	eoreq	r1, r4, r0, lsl #2
     764:	0b3e0b0b 	bleq	f83398 <_bss_end+0xf72318>
     768:	00000e03 	andeq	r0, r0, r3, lsl #28
     76c:	0b000f12 	bleq	43bc <CPSR_IRQ_INHIBIT+0x433c>
     770:	0013490b 	andseq	r4, r3, fp, lsl #18
     774:	00101300 	andseq	r1, r0, r0, lsl #6
     778:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     77c:	35140000 	ldrcc	r0, [r4, #-0]
     780:	00134900 	andseq	r4, r3, r0, lsl #18
     784:	00341500 	eorseq	r1, r4, r0, lsl #10
     788:	0b3a0e03 	bleq	e83f9c <_bss_end+0xe72f1c>
     78c:	0b390b3b 	bleq	e43480 <_bss_end+0xe32400>
     790:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     794:	0000193c 	andeq	r1, r0, ip, lsr r9
     798:	47003416 	smladmi	r0, r6, r4, r3
     79c:	3b0b3a13 	blcc	2ceff0 <_bss_end+0x2bdf70>
     7a0:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     7a4:	17000018 	smladne	r0, r8, r0, r0
     7a8:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     7ac:	01111934 	tsteq	r1, r4, lsr r9
     7b0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7b4:	00194296 	mulseq	r9, r6, r2
     7b8:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     7bc:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
     7c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     7c4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     7c8:	00130119 	andseq	r0, r3, r9, lsl r1
     7cc:	00051900 	andeq	r1, r5, r0, lsl #18
     7d0:	0b3a0e03 	bleq	e83fe4 <_bss_end+0xe72f64>
     7d4:	0b390b3b 	bleq	e434c8 <_bss_end+0xe32448>
     7d8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     7dc:	241a0000 	ldrcs	r0, [sl], #-0
     7e0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7e4:	0008030b 	andeq	r0, r8, fp, lsl #6
     7e8:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     7ec:	0b3a1347 	bleq	e85510 <_bss_end+0xe74490>
     7f0:	0b390b3b 	bleq	e434e4 <_bss_end+0xe32464>
     7f4:	01111364 	tsteq	r1, r4, ror #6
     7f8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7fc:	01194296 			; <UNDEFINED> instruction: 0x01194296
     800:	1c000013 	stcne	0, cr0, [r0], {19}
     804:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     808:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     80c:	00001802 	andeq	r1, r0, r2, lsl #16
     810:	0300341d 	movweq	r3, #1053	; 0x41d
     814:	3b0b3a08 	blcc	2cf03c <_bss_end+0x2bdfbc>
     818:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     81c:	00180213 	andseq	r0, r8, r3, lsl r2
     820:	010b1e00 	tsteq	fp, r0, lsl #28
     824:	06120111 			; <UNDEFINED> instruction: 0x06120111
     828:	051f0000 	ldreq	r0, [pc, #-0]	; 830 <CPSR_IRQ_INHIBIT+0x7b0>
     82c:	3a080300 	bcc	201434 <_bss_end+0x1f03b4>
     830:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     834:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     838:	20000018 	andcs	r0, r0, r8, lsl r0
     83c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     840:	0b3b0b3a 	bleq	ec3530 <_bss_end+0xeb24b0>
     844:	13490b39 	movtne	r0, #39737	; 0x9b39
     848:	1802196c 	stmdane	r2, {r2, r3, r5, r6, r8, fp, ip}
     84c:	34210000 	strtcc	r0, [r1], #-0
     850:	3a0e0300 	bcc	381458 <_bss_end+0x3703d8>
     854:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     858:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     85c:	22000018 	andcs	r0, r0, #24
     860:	13490101 	movtne	r0, #37121	; 0x9101
     864:	00001301 	andeq	r1, r0, r1, lsl #6
     868:	49002123 	stmdbmi	r0, {r0, r1, r5, r8, sp}
     86c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     870:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     874:	0b3a1347 	bleq	e85598 <_bss_end+0xe74518>
     878:	0b390b3b 	bleq	e4356c <_bss_end+0xe324ec>
     87c:	01111364 	tsteq	r1, r4, ror #6
     880:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     884:	01194297 			; <UNDEFINED> instruction: 0x01194297
     888:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     88c:	0111010b 	tsteq	r1, fp, lsl #2
     890:	13010612 	movwne	r0, #5650	; 0x1612
     894:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
     898:	3a134701 	bcc	4d24a4 <_bss_end+0x4c1424>
     89c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8a0:	2013640b 	andscs	r6, r3, fp, lsl #8
     8a4:	0013010b 	andseq	r0, r3, fp, lsl #2
     8a8:	00052700 	andeq	r2, r5, r0, lsl #14
     8ac:	13490e03 	movtne	r0, #40451	; 0x9e03
     8b0:	00001934 	andeq	r1, r0, r4, lsr r9
     8b4:	03000528 	movweq	r0, #1320	; 0x528
     8b8:	3b0b3a0e 	blcc	2cf0f8 <_bss_end+0x2be078>
     8bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8c0:	29000013 	stmdbcs	r0, {r0, r1, r4}
     8c4:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     8c8:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     8cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     8d0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     8d4:	2a000019 	bcs	940 <CPSR_IRQ_INHIBIT+0x8c0>
     8d8:	13310005 	teqne	r1, #5
     8dc:	00001802 	andeq	r1, r0, r2, lsl #16
     8e0:	01110100 	tsteq	r1, r0, lsl #2
     8e4:	0b130e25 	bleq	4c4180 <_bss_end+0x4b3100>
     8e8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     8ec:	01111755 	tsteq	r1, r5, asr r7
     8f0:	00001710 	andeq	r1, r0, r0, lsl r7
     8f4:	0b002402 	bleq	9904 <_ZN16CDisplay_SSD13064OpenEii+0x18>
     8f8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     8fc:	0300000e 	movweq	r0, #14
     900:	13490026 	movtne	r0, #36902	; 0x9026
     904:	24040000 	strcs	r0, [r4], #-0
     908:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     90c:	0008030b 	andeq	r0, r8, fp, lsl #6
     910:	00160500 	andseq	r0, r6, r0, lsl #10
     914:	0b3a0e03 	bleq	e84128 <_bss_end+0xe730a8>
     918:	0b390b3b 	bleq	e4360c <_bss_end+0xe3258c>
     91c:	00001349 	andeq	r1, r0, r9, asr #6
     920:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     924:	07000013 	smladeq	r0, r3, r0, r0
     928:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
     92c:	0b3b0b3a 	bleq	ec361c <_bss_end+0xeb259c>
     930:	13010b39 	movwne	r0, #6969	; 0x1b39
     934:	34080000 	strcc	r0, [r8], #-0
     938:	3a0e0300 	bcc	381540 <_bss_end+0x3704c0>
     93c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     940:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
     944:	6c061c19 	stcvs	12, cr1, [r6], {25}
     948:	09000019 	stmdbeq	r0, {r0, r3, r4}
     94c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     950:	0b3b0b3a 	bleq	ec3640 <_bss_end+0xeb25c0>
     954:	13490b39 	movtne	r0, #39737	; 0x9b39
     958:	0b1c193c 	bleq	706e50 <_bss_end+0x6f5dd0>
     95c:	0000196c 	andeq	r1, r0, ip, ror #18
     960:	0301040a 	movweq	r0, #5130	; 0x140a
     964:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     968:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     96c:	3b0b3a13 	blcc	2cf1c0 <_bss_end+0x2be140>
     970:	000b390b 	andeq	r3, fp, fp, lsl #18
     974:	00280b00 	eoreq	r0, r8, r0, lsl #22
     978:	0b1c0e03 	bleq	70418c <_bss_end+0x6f310c>
     97c:	340c0000 	strcc	r0, [ip], #-0
     980:	00134700 	andseq	r4, r3, r0, lsl #14
     984:	00340d00 	eorseq	r0, r4, r0, lsl #26
     988:	0b3a0e03 	bleq	e8419c <_bss_end+0xe7311c>
     98c:	0b390b3b 	bleq	e43680 <_bss_end+0xe32600>
     990:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
     994:	00001802 	andeq	r1, r0, r2, lsl #16
     998:	0301020e 	movweq	r0, #4622	; 0x120e
     99c:	3a0b0b0e 	bcc	2c35dc <_bss_end+0x2b255c>
     9a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9a4:	0013010b 	andseq	r0, r3, fp, lsl #2
     9a8:	000d0f00 	andeq	r0, sp, r0, lsl #30
     9ac:	0b3a0e03 	bleq	e841c0 <_bss_end+0xe73140>
     9b0:	0b390b3b 	bleq	e436a4 <_bss_end+0xe32624>
     9b4:	0b381349 	bleq	e056e0 <_bss_end+0xdf4660>
     9b8:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     9bc:	03193f01 	tsteq	r9, #1, 30
     9c0:	3b0b3a0e 	blcc	2cf200 <_bss_end+0x2be180>
     9c4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     9c8:	3213490e 	andscc	r4, r3, #229376	; 0x38000
     9cc:	8b193c0b 	blhi	64fa00 <_bss_end+0x63e980>
     9d0:	13640b01 	cmnne	r4, #1024	; 0x400
     9d4:	00001301 	andeq	r1, r0, r1, lsl #6
     9d8:	49000511 	stmdbmi	r0, {r0, r4, r8, sl}
     9dc:	00193413 	andseq	r3, r9, r3, lsl r4
     9e0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     9e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     9e8:	0b3b0b3a 	bleq	ec36d8 <_bss_end+0xeb2658>
     9ec:	0e6e0b39 	vmoveq.8	d14[5], r0
     9f0:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     9f4:	13011364 	movwne	r1, #4964	; 0x1364
     9f8:	05130000 	ldreq	r0, [r3, #-0]
     9fc:	00134900 	andseq	r4, r3, r0, lsl #18
     a00:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     a04:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a08:	0b3b0b3a 	bleq	ec36f8 <_bss_end+0xeb2678>
     a0c:	0e6e0b39 	vmoveq.8	d14[5], r0
     a10:	0b321349 	bleq	c8573c <_bss_end+0xc746bc>
     a14:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a18:	00001301 	andeq	r1, r0, r1, lsl #6
     a1c:	03002f15 	movweq	r2, #3861	; 0xf15
     a20:	00134908 	andseq	r4, r3, r8, lsl #18
     a24:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
     a28:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a2c:	0b3b0b3a 	bleq	ec371c <_bss_end+0xeb269c>
     a30:	0e6e0b39 	vmoveq.8	d14[5], r0
     a34:	0b321349 	bleq	c85760 <_bss_end+0xc746e0>
     a38:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a3c:	01170000 	tsteq	r7, r0
     a40:	01134901 	tsteq	r3, r1, lsl #18
     a44:	18000013 	stmdane	r0, {r0, r1, r4}
     a48:	13490021 	movtne	r0, #36897	; 0x9021
     a4c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     a50:	0b000f19 	bleq	46bc <CPSR_IRQ_INHIBIT+0x463c>
     a54:	0013490b 	andseq	r4, r3, fp, lsl #18
     a58:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     a5c:	0803193f 	stmdaeq	r3, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     a60:	0b3b0b3a 	bleq	ec3750 <_bss_end+0xeb26d0>
     a64:	0e6e0b39 	vmoveq.8	d14[5], r0
     a68:	0b321349 	bleq	c85794 <_bss_end+0xc74714>
     a6c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     a70:	00001301 	andeq	r1, r0, r1, lsl #6
     a74:	3f012e1b 	svccc	0x00012e1b
     a78:	3a0e0319 	bcc	3816e4 <_bss_end+0x370664>
     a7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a80:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
     a84:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
     a88:	1c000013 	stcne	0, cr0, [r0], {19}
     a8c:	0b0b0010 	bleq	2c0ad4 <_bss_end+0x2afa54>
     a90:	00001349 	andeq	r1, r0, r9, asr #6
     a94:	0300341d 	movweq	r3, #1053	; 0x41d
     a98:	3b0b3a0e 	blcc	2cf2d8 <_bss_end+0x2be258>
     a9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     aa0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     aa4:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
     aa8:	0e030104 	adfeqs	f0, f3, f4
     aac:	0b3e196d 	bleq	f87068 <_bss_end+0xf75fe8>
     ab0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ab4:	0b3b0b3a 	bleq	ec37a4 <_bss_end+0xeb2724>
     ab8:	13010b39 	movwne	r0, #6969	; 0x1b39
     abc:	281f0000 	ldmdacs	pc, {}	; <UNPREDICTABLE>
     ac0:	1c080300 	stcne	3, cr0, [r8], {-0}
     ac4:	2000000b 	andcs	r0, r0, fp
     ac8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     acc:	0b3a0b0b 	bleq	e83700 <_bss_end+0xe72680>
     ad0:	0b390b3b 	bleq	e437c4 <_bss_end+0xe32744>
     ad4:	00001301 	andeq	r1, r0, r1, lsl #6
     ad8:	3f012e21 	svccc	0x00012e21
     adc:	3a0e0319 	bcc	381748 <_bss_end+0x3706c8>
     ae0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ae4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
     ae8:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
     aec:	00130113 	andseq	r0, r3, r3, lsl r1
     af0:	000f2200 	andeq	r2, pc, r0, lsl #4
     af4:	00000b0b 	andeq	r0, r0, fp, lsl #22
     af8:	03000d23 	movweq	r0, #3363	; 0xd23
     afc:	3b0b3a08 	blcc	2cf324 <_bss_end+0x2be2a4>
     b00:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b04:	000b3813 	andeq	r3, fp, r3, lsl r8
     b08:	00342400 	eorseq	r2, r4, r0, lsl #8
     b0c:	0b3a1347 	bleq	e85830 <_bss_end+0xe747b0>
     b10:	0b390b3b 	bleq	e43804 <_bss_end+0xe32784>
     b14:	00001802 	andeq	r1, r0, r2, lsl #16
     b18:	03002e25 	movweq	r2, #3621	; 0xe25
     b1c:	1119340e 	tstne	r9, lr, lsl #8
     b20:	40061201 	andmi	r1, r6, r1, lsl #4
     b24:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     b28:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
     b2c:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
     b30:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     b34:	96184006 	ldrls	r4, [r8], -r6
     b38:	13011942 	movwne	r1, #6466	; 0x1942
     b3c:	05270000 	streq	r0, [r7, #-0]!
     b40:	3a0e0300 	bcc	381748 <_bss_end+0x3706c8>
     b44:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b48:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b4c:	28000018 	stmdacs	r0, {r3, r4}
     b50:	1347012e 	movtne	r0, #28974	; 0x712e
     b54:	01111364 	tsteq	r1, r4, ror #6
     b58:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b5c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     b60:	29000013 	stmdbcs	r0, {r0, r1, r4}
     b64:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     b68:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
     b6c:	00001802 	andeq	r1, r0, r2, lsl #16
     b70:	0300052a 	movweq	r0, #1322	; 0x52a
     b74:	3b0b3a08 	blcc	2cf39c <_bss_end+0x2be31c>
     b78:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b7c:	00180213 	andseq	r0, r8, r3, lsl r2
     b80:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
     b84:	0b3a1347 	bleq	e858a8 <_bss_end+0xe74828>
     b88:	0b39053b 	bleq	e4207c <_bss_end+0xe30ffc>
     b8c:	01111364 	tsteq	r1, r4, ror #6
     b90:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b94:	01194296 			; <UNDEFINED> instruction: 0x01194296
     b98:	2c000013 	stccs	0, cr0, [r0], {19}
     b9c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     ba0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ba4:	13490b39 	movtne	r0, #39737	; 0x9b39
     ba8:	00001802 	andeq	r1, r0, r2, lsl #16
     bac:	55010b2d 	strpl	r0, [r1, #-2861]	; 0xfffff4d3
     bb0:	00130117 	andseq	r0, r3, r7, lsl r1
     bb4:	010b2e00 	tsteq	fp, r0, lsl #28
     bb8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     bbc:	0b2f0000 	bleq	bc0bc4 <_bss_end+0xbafb44>
     bc0:	00175501 	andseq	r5, r7, r1, lsl #10
     bc4:	00343000 	eorseq	r3, r4, r0
     bc8:	0b3a0e03 	bleq	e843dc <_bss_end+0xe7335c>
     bcc:	0b39053b 	bleq	e420c0 <_bss_end+0xe31040>
     bd0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     bd4:	0b310000 	bleq	c40bdc <_bss_end+0xc2fb5c>
     bd8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     bdc:	00130106 	andseq	r0, r3, r6, lsl #2
     be0:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
     be4:	0b3a1347 	bleq	e85908 <_bss_end+0xe74888>
     be8:	0b390b3b 	bleq	e438dc <_bss_end+0xe3285c>
     bec:	01111364 	tsteq	r1, r4, ror #6
     bf0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     bf4:	01194296 			; <UNDEFINED> instruction: 0x01194296
     bf8:	33000013 	movwcc	r0, #19
     bfc:	08030034 	stmdaeq	r3, {r2, r4, r5}
     c00:	0b3b0b3a 	bleq	ec38f0 <_bss_end+0xeb2870>
     c04:	13490b39 	movtne	r0, #39737	; 0x9b39
     c08:	34340000 	ldrtcc	r0, [r4], #-0
     c0c:	3a0e0300 	bcc	381814 <_bss_end+0x370794>
     c10:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c14:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
     c18:	00180219 	andseq	r0, r8, r9, lsl r2
     c1c:	00343500 	eorseq	r3, r4, r0, lsl #10
     c20:	0b3a0803 	bleq	e82c34 <_bss_end+0xe71bb4>
     c24:	0b390b3b 	bleq	e43918 <_bss_end+0xe32898>
     c28:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c2c:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
     c30:	3a134701 	bcc	4d283c <_bss_end+0x4c17bc>
     c34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c38:	1113640b 	tstne	r3, fp, lsl #8
     c3c:	40061201 	andmi	r1, r6, r1, lsl #4
     c40:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     c44:	00001301 	andeq	r1, r0, r1, lsl #6
     c48:	03000537 	movweq	r0, #1335	; 0x537
     c4c:	3b0b3a0e 	blcc	2cf48c <_bss_end+0x2be40c>
     c50:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c54:	00180213 	andseq	r0, r8, r3, lsl r2
     c58:	00343800 	eorseq	r3, r4, r0, lsl #16
     c5c:	0b3a0e03 	bleq	e84470 <_bss_end+0xe733f0>
     c60:	0b390b3b 	bleq	e43954 <_bss_end+0xe328d4>
     c64:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c68:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
     c6c:	3a134701 	bcc	4d2878 <_bss_end+0x4c17f8>
     c70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c74:	2013640b 	andscs	r6, r3, fp, lsl #8
     c78:	0013010b 	andseq	r0, r3, fp, lsl #2
     c7c:	00053a00 	andeq	r3, r5, r0, lsl #20
     c80:	13490e03 	movtne	r0, #40451	; 0x9e03
     c84:	00001934 	andeq	r1, r0, r4, lsr r9
     c88:	0300053b 	movweq	r0, #1339	; 0x53b
     c8c:	3b0b3a08 	blcc	2cf4b4 <_bss_end+0x2be434>
     c90:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c94:	3c000013 	stccc	0, cr0, [r0], {19}
     c98:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     c9c:	13640e6e 	cmnne	r4, #1760	; 0x6e0
     ca0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ca4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     ca8:	00130119 	andseq	r0, r3, r9, lsl r1
     cac:	00053d00 	andeq	r3, r5, r0, lsl #26
     cb0:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     cb4:	2e3e0000 	cdpcs	0, 3, cr0, cr14, cr0, {0}
     cb8:	03193f01 	tsteq	r9, #1, 30
     cbc:	3b0b3a0e 	blcc	2cf4fc <_bss_end+0x2be47c>
     cc0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     cc4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     cc8:	96184006 	ldrls	r4, [r8], -r6
     ccc:	00001942 	andeq	r1, r0, r2, asr #18
     cd0:	4900053f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r5, r8, sl}
     cd4:	00180213 	andseq	r0, r8, r3, lsl r2
     cd8:	11010000 	mrsne	r0, (UNDEF: 1)
     cdc:	130e2501 	movwne	r2, #58625	; 0xe501
     ce0:	1b0e030b 	blne	381914 <_bss_end+0x370894>
     ce4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     ce8:	00171006 	andseq	r1, r7, r6
     cec:	00240200 	eoreq	r0, r4, r0, lsl #4
     cf0:	0b3e0b0b 	bleq	f83924 <_bss_end+0xf728a4>
     cf4:	00000e03 	andeq	r0, r0, r3, lsl #28
     cf8:	0b002403 	bleq	9d0c <_ZN16CDisplay_SSD13064OpenEii+0x420>
     cfc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d00:	04000008 	streq	r0, [r0], #-8
     d04:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     d08:	0b3b0b3a 	bleq	ec39f8 <_bss_end+0xeb2978>
     d0c:	13490b39 	movtne	r0, #39737	; 0x9b39
     d10:	26050000 	strcs	r0, [r5], -r0
     d14:	00134900 	andseq	r4, r3, r0, lsl #18
     d18:	01390600 	teqeq	r9, r0, lsl #12
     d1c:	0b3a0803 	bleq	e82d30 <_bss_end+0xe71cb0>
     d20:	0b390b3b 	bleq	e43a14 <_bss_end+0xe32994>
     d24:	00001301 	andeq	r1, r0, r1, lsl #6
     d28:	03003407 	movweq	r3, #1031	; 0x407
     d2c:	3b0b3a0e 	blcc	2cf56c <_bss_end+0x2be4ec>
     d30:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d34:	1c193c13 	ldcne	12, cr3, [r9], {19}
     d38:	00196c06 	andseq	r6, r9, r6, lsl #24
     d3c:	00340800 	eorseq	r0, r4, r0, lsl #16
     d40:	0b3a0e03 	bleq	e84554 <_bss_end+0xe734d4>
     d44:	0b390b3b 	bleq	e43a38 <_bss_end+0xe329b8>
     d48:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     d4c:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
     d50:	34090000 	strcc	r0, [r9], #-0
     d54:	00134700 	andseq	r4, r3, r0, lsl #14
     d58:	01020a00 	tsteq	r2, r0, lsl #20
     d5c:	0b0b0e03 	bleq	2c4570 <_bss_end+0x2b34f0>
     d60:	0b3b0b3a 	bleq	ec3a50 <_bss_end+0xeb29d0>
     d64:	13010b39 	movwne	r0, #6969	; 0x1b39
     d68:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     d6c:	3a0e0300 	bcc	381974 <_bss_end+0x3708f4>
     d70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d74:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     d78:	0c00000b 	stceq	0, cr0, [r0], {11}
     d7c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     d80:	0b3a0e03 	bleq	e84594 <_bss_end+0xe73514>
     d84:	0b390b3b 	bleq	e43a78 <_bss_end+0xe329f8>
     d88:	13490e6e 	movtne	r0, #40558	; 0x9e6e
     d8c:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
     d90:	13011364 	movwne	r1, #4964	; 0x1364
     d94:	050d0000 	streq	r0, [sp, #-0]
     d98:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
     d9c:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     da0:	13490005 	movtne	r0, #36869	; 0x9005
     da4:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     da8:	03193f01 	tsteq	r9, #1, 30
     dac:	3b0b3a0e 	blcc	2cf5ec <_bss_end+0x2be56c>
     db0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     db4:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
     db8:	01136419 	tsteq	r3, r9, lsl r4
     dbc:	10000013 	andne	r0, r0, r3, lsl r0
     dc0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     dc4:	0b3a0e03 	bleq	e845d8 <_bss_end+0xe73558>
     dc8:	0b390b3b 	bleq	e43abc <_bss_end+0xe32a3c>
     dcc:	0b320e6e 	bleq	c8478c <_bss_end+0xc7370c>
     dd0:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     dd4:	0f110000 	svceq	0x00110000
     dd8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     ddc:	12000013 	andne	r0, r0, #19
     de0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     de4:	0b3b0b3a 	bleq	ec3ad4 <_bss_end+0xeb2a54>
     de8:	13490b39 	movtne	r0, #39737	; 0x9b39
     dec:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     df0:	0d130000 	ldceq	0, cr0, [r3, #-0]
     df4:	3a0e0300 	bcc	3819fc <_bss_end+0x37097c>
     df8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     dfc:	3f13490b 	svccc	0x0013490b
     e00:	00193c19 	andseq	r3, r9, r9, lsl ip
     e04:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     e08:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     e0c:	0b3b0b3a 	bleq	ec3afc <_bss_end+0xeb2a7c>
     e10:	0e6e0b39 	vmoveq.8	d14[5], r0
     e14:	0b321349 	bleq	c85b40 <_bss_end+0xc74ac0>
     e18:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
     e1c:	01150000 	tsteq	r5, r0
     e20:	01134901 	tsteq	r3, r1, lsl #18
     e24:	16000013 			; <UNDEFINED> instruction: 0x16000013
     e28:	13490021 	movtne	r0, #36897	; 0x9021
     e2c:	00000b2f 	andeq	r0, r0, pc, lsr #22
     e30:	47003417 	smladmi	r0, r7, r4, r3
     e34:	3b0b3a13 	blcc	2cf688 <_bss_end+0x2be608>
     e38:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     e3c:	18000018 	stmdane	r0, {r3, r4}
     e40:	13470034 	movtne	r0, #28724	; 0x7034
     e44:	0b3b0b3a 	bleq	ec3b34 <_bss_end+0xeb2ab4>
     e48:	0e6e0b39 	vmoveq.8	d14[5], r0
     e4c:	00001802 	andeq	r1, r0, r2, lsl #16
     e50:	03002e19 	movweq	r2, #3609	; 0xe19
     e54:	1119340e 	tstne	r9, lr, lsl #8
     e58:	40061201 	andmi	r1, r6, r1, lsl #4
     e5c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     e60:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     e64:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
     e68:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     e6c:	96184006 	ldrls	r4, [r8], -r6
     e70:	13011942 	movwne	r1, #6466	; 0x1942
     e74:	051b0000 	ldreq	r0, [fp, #-0]
     e78:	3a0e0300 	bcc	381a80 <_bss_end+0x370a00>
     e7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e80:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e84:	1c000018 	stcne	0, cr0, [r0], {24}
     e88:	1347012e 	movtne	r0, #28974	; 0x712e
     e8c:	0b3b0b3a 	bleq	ec3b7c <_bss_end+0xeb2afc>
     e90:	13640b39 	cmnne	r4, #58368	; 0xe400
     e94:	06120111 			; <UNDEFINED> instruction: 0x06120111
     e98:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     e9c:	00130119 	andseq	r0, r3, r9, lsl r1
     ea0:	00051d00 	andeq	r1, r5, r0, lsl #26
     ea4:	13490e03 	movtne	r0, #40451	; 0x9e03
     ea8:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
     eac:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
     eb0:	3a134701 	bcc	4d2abc <_bss_end+0x4c1a3c>
     eb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     eb8:	1113640b 	tstne	r3, fp, lsl #8
     ebc:	40061201 	andmi	r1, r6, r1, lsl #4
     ec0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     ec4:	00001301 	andeq	r1, r0, r1, lsl #6
     ec8:	0300051f 	movweq	r0, #1311	; 0x51f
     ecc:	3b0b3a08 	blcc	2cf6f4 <_bss_end+0x2be674>
     ed0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ed4:	00180213 	andseq	r0, r8, r3, lsl r2
     ed8:	00342000 	eorseq	r2, r4, r0
     edc:	0b3a0803 	bleq	e82ef0 <_bss_end+0xe71e70>
     ee0:	0b390b3b 	bleq	e43bd4 <_bss_end+0xe32b54>
     ee4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     ee8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     eec:	3a134701 	bcc	4d2af8 <_bss_end+0x4c1a78>
     ef0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ef4:	2013640b 	andscs	r6, r3, fp, lsl #8
     ef8:	0013010b 	andseq	r0, r3, fp, lsl #2
     efc:	00052200 	andeq	r2, r5, r0, lsl #4
     f00:	13490e03 	movtne	r0, #40451	; 0x9e03
     f04:	00001934 	andeq	r1, r0, r4, lsr r9
     f08:	31012e23 	tstcc	r1, r3, lsr #28
     f0c:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
     f10:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     f14:	97184006 	ldrls	r4, [r8, -r6]
     f18:	00001942 	andeq	r1, r0, r2, asr #18
     f1c:	31000524 	tstcc	r0, r4, lsr #10
     f20:	00180213 	andseq	r0, r8, r3, lsl r2
     f24:	11010000 	mrsne	r0, (UNDEF: 1)
     f28:	130e2501 	movwne	r2, #58625	; 0xe501
     f2c:	1b0e030b 	blne	381b60 <_bss_end+0x370ae0>
     f30:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     f34:	00171006 	andseq	r1, r7, r6
     f38:	00240200 	eoreq	r0, r4, r0, lsl #4
     f3c:	0b3e0b0b 	bleq	f83b70 <_bss_end+0xf72af0>
     f40:	00000e03 	andeq	r0, r0, r3, lsl #28
     f44:	0b002403 	bleq	9f58 <_ZN16CDisplay_SSD13064OpenEii+0x66c>
     f48:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     f4c:	04000008 	streq	r0, [r0], #-8
     f50:	13490035 	movtne	r0, #36917	; 0x9035
     f54:	16050000 	strne	r0, [r5], -r0
     f58:	3a0e0300 	bcc	381b60 <_bss_end+0x370ae0>
     f5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f60:	0013490b 	andseq	r4, r3, fp, lsl #18
     f64:	00260600 	eoreq	r0, r6, r0, lsl #12
     f68:	00001349 	andeq	r1, r0, r9, asr #6
     f6c:	03013907 	movweq	r3, #6407	; 0x1907
     f70:	3b0b3a08 	blcc	2cf798 <_bss_end+0x2be718>
     f74:	010b390b 	tsteq	fp, fp, lsl #18
     f78:	08000013 	stmdaeq	r0, {r0, r1, r4}
     f7c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     f80:	0b3b0b3a 	bleq	ec3c70 <_bss_end+0xeb2bf0>
     f84:	13490b39 	movtne	r0, #39737	; 0x9b39
     f88:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
     f8c:	0000196c 	andeq	r1, r0, ip, ror #18
     f90:	03003409 	movweq	r3, #1033	; 0x409
     f94:	3b0b3a0e 	blcc	2cf7d4 <_bss_end+0x2be754>
     f98:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f9c:	1c193c13 	ldcne	12, cr3, [r9], {19}
     fa0:	00196c0b 	andseq	r6, r9, fp, lsl #24
     fa4:	00340a00 	eorseq	r0, r4, r0, lsl #20
     fa8:	00001347 	andeq	r1, r0, r7, asr #6
     fac:	0301040b 	movweq	r0, #5131	; 0x140b
     fb0:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
     fb4:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     fb8:	3b0b3a13 	blcc	2cf80c <_bss_end+0x2be78c>
     fbc:	010b390b 	tsteq	fp, fp, lsl #18
     fc0:	0c000013 	stceq	0, cr0, [r0], {19}
     fc4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     fc8:	00000b1c 	andeq	r0, r0, ip, lsl fp
     fcc:	0301020d 	movweq	r0, #4621	; 0x120d
     fd0:	3a0b0b0e 	bcc	2c3c10 <_bss_end+0x2b2b90>
     fd4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fd8:	0013010b 	andseq	r0, r3, fp, lsl #2
     fdc:	000d0e00 	andeq	r0, sp, r0, lsl #28
     fe0:	0b3a0e03 	bleq	e847f4 <_bss_end+0xe73774>
     fe4:	0b390b3b 	bleq	e43cd8 <_bss_end+0xe32c58>
     fe8:	0b381349 	bleq	e05d14 <_bss_end+0xdf4c94>
     fec:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     ff0:	03193f01 	tsteq	r9, #1, 30
     ff4:	3b0b3a0e 	blcc	2cf834 <_bss_end+0x2be7b4>
     ff8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
     ffc:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1000:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1004:	00130113 	andseq	r0, r3, r3, lsl r1
    1008:	00051000 	andeq	r1, r5, r0
    100c:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1010:	05110000 	ldreq	r0, [r1, #-0]
    1014:	00134900 	andseq	r4, r3, r0, lsl #18
    1018:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    101c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1020:	0b3b0b3a 	bleq	ec3d10 <_bss_end+0xeb2c90>
    1024:	0e6e0b39 	vmoveq.8	d14[5], r0
    1028:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    102c:	13011364 	movwne	r1, #4964	; 0x1364
    1030:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1034:	03193f01 	tsteq	r9, #1, 30
    1038:	3b0b3a0e 	blcc	2cf878 <_bss_end+0x2be7f8>
    103c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1040:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    1044:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1048:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    104c:	0b0b000f 	bleq	2c1090 <_bss_end+0x2b0010>
    1050:	00001349 	andeq	r1, r0, r9, asr #6
    1054:	49010115 	stmdbmi	r1, {r0, r2, r4, r8}
    1058:	00130113 	andseq	r0, r3, r3, lsl r1
    105c:	00211600 	eoreq	r1, r1, r0, lsl #12
    1060:	0b2f1349 	bleq	bc5d8c <_bss_end+0xbb4d0c>
    1064:	10170000 	andsne	r0, r7, r0
    1068:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    106c:	18000013 	stmdane	r0, {r0, r1, r4}
    1070:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1074:	0b3b0b3a 	bleq	ec3d64 <_bss_end+0xeb2ce4>
    1078:	13490b39 	movtne	r0, #39737	; 0x9b39
    107c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1080:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    1084:	03193f01 	tsteq	r9, #1, 30
    1088:	3b0b3a0e 	blcc	2cf8c8 <_bss_end+0x2be848>
    108c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1090:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    1094:	00136419 	andseq	r6, r3, r9, lsl r4
    1098:	00341a00 	eorseq	r1, r4, r0, lsl #20
    109c:	0b3a1347 	bleq	e85dc0 <_bss_end+0xe74d40>
    10a0:	0b390b3b 	bleq	e43d94 <_bss_end+0xe32d14>
    10a4:	00001802 	andeq	r1, r0, r2, lsl #16
    10a8:	03002e1b 	movweq	r2, #3611	; 0xe1b
    10ac:	1119340e 	tstne	r9, lr, lsl #8
    10b0:	40061201 	andmi	r1, r6, r1, lsl #4
    10b4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    10b8:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    10bc:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    10c0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    10c4:	96184006 	ldrls	r4, [r8], -r6
    10c8:	13011942 	movwne	r1, #6466	; 0x1942
    10cc:	051d0000 	ldreq	r0, [sp, #-0]
    10d0:	3a0e0300 	bcc	381cd8 <_bss_end+0x370c58>
    10d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10d8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10dc:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    10e0:	1347012e 	movtne	r0, #28974	; 0x712e
    10e4:	0b3b0b3a 	bleq	ec3dd4 <_bss_end+0xeb2d54>
    10e8:	13640b39 	cmnne	r4, #58368	; 0xe400
    10ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10f0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    10f4:	00130119 	andseq	r0, r3, r9, lsl r1
    10f8:	00051f00 	andeq	r1, r5, r0, lsl #30
    10fc:	13490e03 	movtne	r0, #40451	; 0x9e03
    1100:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    1104:	34200000 	strtcc	r0, [r0], #-0
    1108:	3a080300 	bcc	201d10 <_bss_end+0x1f0c90>
    110c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1110:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1114:	21000018 	tstcs	r0, r8, lsl r0
    1118:	0111010b 	tsteq	r1, fp, lsl #2
    111c:	00000612 	andeq	r0, r0, r2, lsl r6
    1120:	03000522 	movweq	r0, #1314	; 0x522
    1124:	3b0b3a08 	blcc	2cf94c <_bss_end+0x2be8cc>
    1128:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    112c:	00180213 	andseq	r0, r8, r3, lsl r2
    1130:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
    1134:	0b3a1347 	bleq	e85e58 <_bss_end+0xe74dd8>
    1138:	0b390b3b 	bleq	e43e2c <_bss_end+0xe32dac>
    113c:	01111364 	tsteq	r1, r4, ror #6
    1140:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1144:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1148:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    114c:	1347012e 	movtne	r0, #28974	; 0x712e
    1150:	0b3b0b3a 	bleq	ec3e40 <_bss_end+0xeb2dc0>
    1154:	13640b39 	cmnne	r4, #58368	; 0xe400
    1158:	13010b20 	movwne	r0, #6944	; 0x1b20
    115c:	05250000 	streq	r0, [r5, #-0]!
    1160:	490e0300 	stmdbmi	lr, {r8, r9}
    1164:	00193413 	andseq	r3, r9, r3, lsl r4
    1168:	00052600 	andeq	r2, r5, r0, lsl #12
    116c:	0b3a0e03 	bleq	e84980 <_bss_end+0xe73900>
    1170:	0b390b3b 	bleq	e43e64 <_bss_end+0xe32de4>
    1174:	00001349 	andeq	r1, r0, r9, asr #6
    1178:	31012e27 	tstcc	r1, r7, lsr #28
    117c:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    1180:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1184:	97184006 	ldrls	r4, [r8, -r6]
    1188:	00001942 	andeq	r1, r0, r2, asr #18
    118c:	31000528 	tstcc	r0, r8, lsr #10
    1190:	00180213 	andseq	r0, r8, r3, lsl r2
    1194:	11010000 	mrsne	r0, (UNDEF: 1)
    1198:	130e2501 	movwne	r2, #58625	; 0xe501
    119c:	1b0e030b 	blne	381dd0 <_bss_end+0x370d50>
    11a0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    11a4:	00171006 	andseq	r1, r7, r6
    11a8:	00240200 	eoreq	r0, r4, r0, lsl #4
    11ac:	0b3e0b0b 	bleq	f83de0 <_bss_end+0xf72d60>
    11b0:	00000e03 	andeq	r0, r0, r3, lsl #28
    11b4:	0b002403 	bleq	a1c8 <_ZN16CDisplay_SSD13065ClearEb+0x18>
    11b8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    11bc:	04000008 	streq	r0, [r0], #-8
    11c0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    11c4:	0b3b0b3a 	bleq	ec3eb4 <_bss_end+0xeb2e34>
    11c8:	13490b39 	movtne	r0, #39737	; 0x9b39
    11cc:	26050000 	strcs	r0, [r5], -r0
    11d0:	00134900 	andseq	r4, r3, r0, lsl #18
    11d4:	00350600 	eorseq	r0, r5, r0, lsl #12
    11d8:	00001349 	andeq	r1, r0, r9, asr #6
    11dc:	03013907 	movweq	r3, #6407	; 0x1907
    11e0:	3b0b3a08 	blcc	2cfa08 <_bss_end+0x2be988>
    11e4:	010b390b 	tsteq	fp, fp, lsl #18
    11e8:	08000013 	stmdaeq	r0, {r0, r1, r4}
    11ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    11f0:	0b3b0b3a 	bleq	ec3ee0 <_bss_end+0xeb2e60>
    11f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    11f8:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    11fc:	0000196c 	andeq	r1, r0, ip, ror #18
    1200:	03003409 	movweq	r3, #1033	; 0x409
    1204:	3b0b3a0e 	blcc	2cfa44 <_bss_end+0x2be9c4>
    1208:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    120c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1210:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1214:	01040a00 	tsteq	r4, r0, lsl #20
    1218:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    121c:	0b0b0b3e 	bleq	2c3f1c <_bss_end+0x2b2e9c>
    1220:	0b3a1349 	bleq	e85f4c <_bss_end+0xe74ecc>
    1224:	0b390b3b 	bleq	e43f18 <_bss_end+0xe32e98>
    1228:	00001301 	andeq	r1, r0, r1, lsl #6
    122c:	0300280b 	movweq	r2, #2059	; 0x80b
    1230:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1234:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1238:	00001347 	andeq	r1, r0, r7, asr #6
    123c:	0301020d 	movweq	r0, #4621	; 0x120d
    1240:	3a0b0b0e 	bcc	2c3e80 <_bss_end+0x2b2e00>
    1244:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1248:	0013010b 	andseq	r0, r3, fp, lsl #2
    124c:	000d0e00 	andeq	r0, sp, r0, lsl #28
    1250:	0b3a0e03 	bleq	e84a64 <_bss_end+0xe739e4>
    1254:	0b390b3b 	bleq	e43f48 <_bss_end+0xe32ec8>
    1258:	0b381349 	bleq	e05f84 <_bss_end+0xdf4f04>
    125c:	160f0000 	strne	r0, [pc], -r0
    1260:	3a0e0300 	bcc	381e68 <_bss_end+0x370de8>
    1264:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1268:	3213490b 	andscc	r4, r3, #180224	; 0x2c000
    126c:	1000000b 	andne	r0, r0, fp
    1270:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1274:	0b3a0e03 	bleq	e84a88 <_bss_end+0xe73a08>
    1278:	0b390b3b 	bleq	e43f6c <_bss_end+0xe32eec>
    127c:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1280:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1284:	13011364 	movwne	r1, #4964	; 0x1364
    1288:	05110000 	ldreq	r0, [r1, #-0]
    128c:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    1290:	12000019 	andne	r0, r0, #25
    1294:	13490005 	movtne	r0, #36869	; 0x9005
    1298:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    129c:	03193f01 	tsteq	r9, #1, 30
    12a0:	3b0b3a0e 	blcc	2cfae0 <_bss_end+0x2bea60>
    12a4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    12a8:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    12ac:	01136419 	tsteq	r3, r9, lsl r4
    12b0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    12b4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    12b8:	0b3a0e03 	bleq	e84acc <_bss_end+0xe73a4c>
    12bc:	0b390b3b 	bleq	e43fb0 <_bss_end+0xe32f30>
    12c0:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    12c4:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    12c8:	00001364 	andeq	r1, r0, r4, ror #6
    12cc:	0b000f15 	bleq	4f28 <CPSR_IRQ_INHIBIT+0x4ea8>
    12d0:	0013490b 	andseq	r4, r3, fp, lsl #18
    12d4:	00151600 	andseq	r1, r5, r0, lsl #12
    12d8:	10170000 	andsne	r0, r7, r0
    12dc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    12e0:	18000013 	stmdane	r0, {r0, r1, r4}
    12e4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    12e8:	0b3b0b3a 	bleq	ec3fd8 <_bss_end+0xeb2f58>
    12ec:	13490b39 	movtne	r0, #39737	; 0x9b39
    12f0:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    12f4:	34190000 	ldrcc	r0, [r9], #-0
    12f8:	3a134700 	bcc	4d2f00 <_bss_end+0x4c1e80>
    12fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1300:	0018020b 	andseq	r0, r8, fp, lsl #4
    1304:	01131a00 	tsteq	r3, r0, lsl #20
    1308:	0b0b0e03 	bleq	2c4b1c <_bss_end+0x2b3a9c>
    130c:	0b3b0b3a 	bleq	ec3ffc <_bss_end+0xeb2f7c>
    1310:	13010b39 	movwne	r0, #6969	; 0x1b39
    1314:	0d1b0000 	ldceq	0, cr0, [fp, #-0]
    1318:	3a0e0300 	bcc	381f20 <_bss_end+0x370ea0>
    131c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1320:	0b13490b 	bleq	4d3754 <_bss_end+0x4c26d4>
    1324:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
    1328:	000b380b 	andeq	r3, fp, fp, lsl #16
    132c:	000d1c00 	andeq	r1, sp, r0, lsl #24
    1330:	0b3a0e03 	bleq	e84b44 <_bss_end+0xe73ac4>
    1334:	0b390b3b 	bleq	e44028 <_bss_end+0xe32fa8>
    1338:	0b0b1349 	bleq	2c6064 <_bss_end+0x2b4fe4>
    133c:	0d0c0b0d 	vstreq	d0, [ip, #-52]	; 0xffffffcc
    1340:	00000b38 	andeq	r0, r0, r8, lsr fp
    1344:	03002e1d 	movweq	r2, #3613	; 0xe1d
    1348:	1119340e 	tstne	r9, lr, lsl #8
    134c:	40061201 	andmi	r1, r6, r1, lsl #4
    1350:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1354:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    1358:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    135c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1360:	96184006 	ldrls	r4, [r8], -r6
    1364:	13011942 	movwne	r1, #6466	; 0x1942
    1368:	051f0000 	ldreq	r0, [pc, #-0]	; 1370 <CPSR_IRQ_INHIBIT+0x12f0>
    136c:	3a0e0300 	bcc	381f74 <_bss_end+0x370ef4>
    1370:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1374:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1378:	20000018 	andcs	r0, r0, r8, lsl r0
    137c:	1347012e 	movtne	r0, #28974	; 0x712e
    1380:	0b3b0b3a 	bleq	ec4070 <_bss_end+0xeb2ff0>
    1384:	13640b39 	cmnne	r4, #58368	; 0xe400
    1388:	06120111 			; <UNDEFINED> instruction: 0x06120111
    138c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1390:	00130119 	andseq	r0, r3, r9, lsl r1
    1394:	00052100 	andeq	r2, r5, r0, lsl #2
    1398:	13490e03 	movtne	r0, #40451	; 0x9e03
    139c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    13a0:	34220000 	strtcc	r0, [r2], #-0
    13a4:	3a080300 	bcc	201fac <_bss_end+0x1f0f2c>
    13a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    13b0:	23000018 	movwcs	r0, #24
    13b4:	1347012e 	movtne	r0, #28974	; 0x712e
    13b8:	0b3b0b3a 	bleq	ec40a8 <_bss_end+0xeb3028>
    13bc:	13640b39 	cmnne	r4, #58368	; 0xe400
    13c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    13c4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    13c8:	00130119 	andseq	r0, r3, r9, lsl r1
    13cc:	00052400 	andeq	r2, r5, r0, lsl #8
    13d0:	0b3a0803 	bleq	e833e4 <_bss_end+0xe72364>
    13d4:	0b390b3b 	bleq	e440c8 <_bss_end+0xe33048>
    13d8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    13dc:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    13e0:	3a134701 	bcc	4d2fec <_bss_end+0x4c1f6c>
    13e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13e8:	2013640b 	andscs	r6, r3, fp, lsl #8
    13ec:	0013010b 	andseq	r0, r3, fp, lsl #2
    13f0:	00052600 	andeq	r2, r5, r0, lsl #12
    13f4:	13490e03 	movtne	r0, #40451	; 0x9e03
    13f8:	00001934 	andeq	r1, r0, r4, lsr r9
    13fc:	03000527 	movweq	r0, #1319	; 0x527
    1400:	3b0b3a0e 	blcc	2cfc40 <_bss_end+0x2bebc0>
    1404:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1408:	28000013 	stmdacs	r0, {r0, r1, r4}
    140c:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    1410:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    1414:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1418:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    141c:	29000019 	stmdbcs	r0, {r0, r3, r4}
    1420:	13310005 	teqne	r1, #5
    1424:	00001802 	andeq	r1, r0, r2, lsl #16
    1428:	01110100 	tsteq	r1, r0, lsl #2
    142c:	0b130e25 	bleq	4c4cc8 <_bss_end+0x4b3c48>
    1430:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1434:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1438:	00001710 	andeq	r1, r0, r0, lsl r7
    143c:	0b002402 	bleq	a44c <_ZN16CDisplay_SSD13064FlipEv+0x84>
    1440:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1444:	0300000e 	movweq	r0, #14
    1448:	0b0b0024 	bleq	2c14e0 <_bss_end+0x2b0460>
    144c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1450:	16040000 	strne	r0, [r4], -r0
    1454:	3a0e0300 	bcc	38205c <_bss_end+0x370fdc>
    1458:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    145c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1460:	00260500 	eoreq	r0, r6, r0, lsl #10
    1464:	00001349 	andeq	r1, r0, r9, asr #6
    1468:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    146c:	07000013 	smladeq	r0, r3, r0, r0
    1470:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    1474:	0b3b0b3a 	bleq	ec4164 <_bss_end+0xeb30e4>
    1478:	13010b39 	movwne	r0, #6969	; 0x1b39
    147c:	34080000 	strcc	r0, [r8], #-0
    1480:	3a0e0300 	bcc	382088 <_bss_end+0x371008>
    1484:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1488:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    148c:	6c061c19 	stcvs	12, cr1, [r6], {25}
    1490:	09000019 	stmdbeq	r0, {r0, r3, r4}
    1494:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1498:	0b3b0b3a 	bleq	ec4188 <_bss_end+0xeb3108>
    149c:	13490b39 	movtne	r0, #39737	; 0x9b39
    14a0:	0b1c193c 	bleq	707998 <_bss_end+0x6f6918>
    14a4:	0000196c 	andeq	r1, r0, ip, ror #18
    14a8:	0301040a 	movweq	r0, #5130	; 0x140a
    14ac:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    14b0:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    14b4:	3b0b3a13 	blcc	2cfd08 <_bss_end+0x2bec88>
    14b8:	010b390b 	tsteq	fp, fp, lsl #18
    14bc:	0b000013 	bleq	1510 <CPSR_IRQ_INHIBIT+0x1490>
    14c0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    14c4:	00000b1c 	andeq	r0, r0, ip, lsl fp
    14c8:	4700340c 	strmi	r3, [r0, -ip, lsl #8]
    14cc:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    14d0:	0e030102 	adfeqs	f0, f3, f2
    14d4:	0b3a0b0b 	bleq	e84108 <_bss_end+0xe73088>
    14d8:	0b390b3b 	bleq	e441cc <_bss_end+0xe3314c>
    14dc:	00001301 	andeq	r1, r0, r1, lsl #6
    14e0:	03000d0e 	movweq	r0, #3342	; 0xd0e
    14e4:	3b0b3a0e 	blcc	2cfd24 <_bss_end+0x2beca4>
    14e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    14ec:	000b3813 	andeq	r3, fp, r3, lsl r8
    14f0:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    14f4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    14f8:	0b3b0b3a 	bleq	ec41e8 <_bss_end+0xeb3168>
    14fc:	0e6e0b39 	vmoveq.8	d14[5], r0
    1500:	0b321349 	bleq	c8622c <_bss_end+0xc751ac>
    1504:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1508:	00001301 	andeq	r1, r0, r1, lsl #6
    150c:	49000510 	stmdbmi	r0, {r4, r8, sl}
    1510:	00193413 	andseq	r3, r9, r3, lsl r4
    1514:	00051100 	andeq	r1, r5, r0, lsl #2
    1518:	00001349 	andeq	r1, r0, r9, asr #6
    151c:	3f012e12 	svccc	0x00012e12
    1520:	3a0e0319 	bcc	38218c <_bss_end+0x37110c>
    1524:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1528:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    152c:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1530:	00130113 	andseq	r0, r3, r3, lsl r1
    1534:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
    1538:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    153c:	0b3b0b3a 	bleq	ec422c <_bss_end+0xeb31ac>
    1540:	0e6e0b39 	vmoveq.8	d14[5], r0
    1544:	0b321349 	bleq	c86270 <_bss_end+0xc751f0>
    1548:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    154c:	0f140000 	svceq	0x00140000
    1550:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1554:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1558:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    155c:	0b3b0b3a 	bleq	ec424c <_bss_end+0xeb31cc>
    1560:	13490b39 	movtne	r0, #39737	; 0x9b39
    1564:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1568:	34160000 	ldrcc	r0, [r6], #-0
    156c:	3a134700 	bcc	4d3174 <_bss_end+0x4c20f4>
    1570:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1574:	0018020b 	andseq	r0, r8, fp, lsl #4
    1578:	00341700 	eorseq	r1, r4, r0, lsl #14
    157c:	0b3a0e03 	bleq	e84d90 <_bss_end+0xe73d10>
    1580:	0b390b3b 	bleq	e44274 <_bss_end+0xe331f4>
    1584:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    1588:	00001802 	andeq	r1, r0, r2, lsl #16
    158c:	03002e18 	movweq	r2, #3608	; 0xe18
    1590:	1119340e 	tstne	r9, lr, lsl #8
    1594:	40061201 	andmi	r1, r6, r1, lsl #4
    1598:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    159c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    15a0:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    15a4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    15a8:	96184006 	ldrls	r4, [r8], -r6
    15ac:	13011942 	movwne	r1, #6466	; 0x1942
    15b0:	051a0000 	ldreq	r0, [sl, #-0]
    15b4:	3a0e0300 	bcc	3821bc <_bss_end+0x37113c>
    15b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15bc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    15c0:	1b000018 	blne	1628 <CPSR_IRQ_INHIBIT+0x15a8>
    15c4:	1347012e 	movtne	r0, #28974	; 0x712e
    15c8:	0b3b0b3a 	bleq	ec42b8 <_bss_end+0xeb3238>
    15cc:	13640b39 	cmnne	r4, #58368	; 0xe400
    15d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    15d4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    15d8:	00130119 	andseq	r0, r3, r9, lsl r1
    15dc:	00051c00 	andeq	r1, r5, r0, lsl #24
    15e0:	13490e03 	movtne	r0, #40451	; 0x9e03
    15e4:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    15e8:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    15ec:	3a134701 	bcc	4d31f8 <_bss_end+0x4c2178>
    15f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15f4:	2013640b 	andscs	r6, r3, fp, lsl #8
    15f8:	0013010b 	andseq	r0, r3, fp, lsl #2
    15fc:	00051e00 	andeq	r1, r5, r0, lsl #28
    1600:	13490e03 	movtne	r0, #40451	; 0x9e03
    1604:	00001934 	andeq	r1, r0, r4, lsr r9
    1608:	0300051f 	movweq	r0, #1311	; 0x51f
    160c:	3b0b3a0e 	blcc	2cfe4c <_bss_end+0x2bedcc>
    1610:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1614:	20000013 	andcs	r0, r0, r3, lsl r0
    1618:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    161c:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    1620:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1624:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1628:	21000019 	tstcs	r0, r9, lsl r0
    162c:	13310005 	teqne	r1, #5
    1630:	00001802 	andeq	r1, r0, r2, lsl #16
    1634:	01110100 	tsteq	r1, r0, lsl #2
    1638:	0b130e25 	bleq	4c4ed4 <_bss_end+0x4b3e54>
    163c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1640:	01111755 	tsteq	r1, r5, asr r7
    1644:	00001710 	andeq	r1, r0, r0, lsl r7
    1648:	0b002402 	bleq	a658 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x78>
    164c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1650:	0300000e 	movweq	r0, #14
    1654:	13490026 	movtne	r0, #36902	; 0x9026
    1658:	24040000 	strcs	r0, [r4], #-0
    165c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1660:	0008030b 	andeq	r0, r8, fp, lsl #6
    1664:	00350500 	eorseq	r0, r5, r0, lsl #10
    1668:	00001349 	andeq	r1, r0, r9, asr #6
    166c:	03001606 	movweq	r1, #1542	; 0x606
    1670:	3b0b3a0e 	blcc	2cfeb0 <_bss_end+0x2bee30>
    1674:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1678:	07000013 	smladeq	r0, r3, r0, r0
    167c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1680:	0b3b0b3a 	bleq	ec4370 <_bss_end+0xeb32f0>
    1684:	13490b39 	movtne	r0, #39737	; 0x9b39
    1688:	1802196c 	stmdane	r2, {r2, r3, r5, r6, r8, fp, ip}
    168c:	04080000 	streq	r0, [r8], #-0
    1690:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    1694:	0b0b3e19 	bleq	2d0f00 <_bss_end+0x2bfe80>
    1698:	3a13490b 	bcc	4d3acc <_bss_end+0x4c2a4c>
    169c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16a0:	0013010b 	andseq	r0, r3, fp, lsl #2
    16a4:	00280900 	eoreq	r0, r8, r0, lsl #18
    16a8:	0b1c0e03 	bleq	704ebc <_bss_end+0x6f3e3c>
    16ac:	020a0000 	andeq	r0, sl, #0
    16b0:	0b0e0301 	bleq	3822bc <_bss_end+0x37123c>
    16b4:	3b0b3a0b 	blcc	2cfee8 <_bss_end+0x2bee68>
    16b8:	010b390b 	tsteq	fp, fp, lsl #18
    16bc:	0b000013 	bleq	1710 <CPSR_IRQ_INHIBIT+0x1690>
    16c0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    16c4:	0b3a0b0b 	bleq	e842f8 <_bss_end+0xe73278>
    16c8:	0b390b3b 	bleq	e443bc <_bss_end+0xe3333c>
    16cc:	00001301 	andeq	r1, r0, r1, lsl #6
    16d0:	03000d0c 	movweq	r0, #3340	; 0xd0c
    16d4:	3b0b3a0e 	blcc	2cff14 <_bss_end+0x2bee94>
    16d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    16dc:	000b3813 	andeq	r3, fp, r3, lsl r8
    16e0:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    16e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    16e8:	0b3b0b3a 	bleq	ec43d8 <_bss_end+0xeb3358>
    16ec:	0e6e0b39 	vmoveq.8	d14[5], r0
    16f0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    16f4:	13011364 	movwne	r1, #4964	; 0x1364
    16f8:	050e0000 	streq	r0, [lr, #-0]
    16fc:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    1700:	0f000019 	svceq	0x00000019
    1704:	13490005 	movtne	r0, #36869	; 0x9005
    1708:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    170c:	03193f01 	tsteq	r9, #1, 30
    1710:	490e6e0e 	stmdbmi	lr, {r1, r2, r3, r9, sl, fp, sp, lr}
    1714:	3c193413 	cfldrscc	mvf3, [r9], {19}
    1718:	00136419 	andseq	r6, r3, r9, lsl r4
    171c:	000d1100 	andeq	r1, sp, r0, lsl #2
    1720:	0b3a0e03 	bleq	e84f34 <_bss_end+0xe73eb4>
    1724:	0b390b3b 	bleq	e44418 <_bss_end+0xe33398>
    1728:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    172c:	0000193c 	andeq	r1, r0, ip, lsr r9
    1730:	3f012e12 	svccc	0x00012e12
    1734:	3a0e0319 	bcc	3823a0 <_bss_end+0x371320>
    1738:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    173c:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1740:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1744:	01136419 	tsteq	r3, r9, lsl r4
    1748:	13000013 	movwne	r0, #19
    174c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1750:	0b3a0e03 	bleq	e84f64 <_bss_end+0xe73ee4>
    1754:	0b390b3b 	bleq	e44448 <_bss_end+0xe333c8>
    1758:	0b320e6e 	bleq	c85118 <_bss_end+0xc74098>
    175c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1760:	00001301 	andeq	r1, r0, r1, lsl #6
    1764:	3f012e14 	svccc	0x00012e14
    1768:	3a0e0319 	bcc	3823d4 <_bss_end+0x371354>
    176c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1770:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1774:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1778:	00136419 	andseq	r6, r3, r9, lsl r4
    177c:	01011500 	tsteq	r1, r0, lsl #10
    1780:	13011349 	movwne	r1, #4937	; 0x1349
    1784:	21160000 	tstcs	r6, r0
    1788:	2f134900 	svccs	0x00134900
    178c:	1700000b 	strne	r0, [r0, -fp]
    1790:	0b0b000f 	bleq	2c17d4 <_bss_end+0x2b0754>
    1794:	00001349 	andeq	r1, r0, r9, asr #6
    1798:	03000218 	movweq	r0, #536	; 0x218
    179c:	00193c0e 	andseq	r3, r9, lr, lsl #24
    17a0:	00211900 	eoreq	r1, r1, r0, lsl #18
    17a4:	341a0000 	ldrcc	r0, [sl], #-0
    17a8:	3a0e0300 	bcc	3823b0 <_bss_end+0x371330>
    17ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17b0:	3f13490b 	svccc	0x0013490b
    17b4:	00193c19 	andseq	r3, r9, r9, lsl ip
    17b8:	01041b00 	tsteq	r4, r0, lsl #22
    17bc:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    17c0:	0b0b0b3e 	bleq	2c44c0 <_bss_end+0x2b3440>
    17c4:	0b3a1349 	bleq	e864f0 <_bss_end+0xe75470>
    17c8:	0b390b3b 	bleq	e444bc <_bss_end+0xe3343c>
    17cc:	13010b32 	movwne	r0, #6962	; 0x1b32
    17d0:	281c0000 	ldmdacs	ip, {}	; <UNPREDICTABLE>
    17d4:	1c080300 	stcne	3, cr0, [r8], {-0}
    17d8:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    17dc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    17e0:	0b3b0b3a 	bleq	ec44d0 <_bss_end+0xeb3450>
    17e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    17e8:	00000b38 	andeq	r0, r0, r8, lsr fp
    17ec:	03000d1e 	movweq	r0, #3358	; 0xd1e
    17f0:	3b0b3a0e 	blcc	2d0030 <_bss_end+0x2befb0>
    17f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    17f8:	32193f13 	andscc	r3, r9, #19, 30	; 0x4c
    17fc:	1c193c0b 	ldcne	12, cr3, [r9], {11}
    1800:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1804:	000d1f00 	andeq	r1, sp, r0, lsl #30
    1808:	0b3a0e03 	bleq	e8501c <_bss_end+0xe73f9c>
    180c:	0b390b3b 	bleq	e44500 <_bss_end+0xe33480>
    1810:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1814:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1818:	0000196c 	andeq	r1, r0, ip, ror #18
    181c:	3f012e20 	svccc	0x00012e20
    1820:	3a0e0319 	bcc	38248c <_bss_end+0x37140c>
    1824:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1828:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    182c:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1830:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
    1834:	00130113 	andseq	r0, r3, r3, lsl r1
    1838:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    183c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1840:	0b3b0b3a 	bleq	ec4530 <_bss_end+0xeb34b0>
    1844:	0e6e0b39 	vmoveq.8	d14[5], r0
    1848:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    184c:	00001301 	andeq	r1, r0, r1, lsl #6
    1850:	0b001022 	bleq	58e0 <CPSR_IRQ_INHIBIT+0x5860>
    1854:	0013490b 	andseq	r4, r3, fp, lsl #18
    1858:	002f2300 	eoreq	r2, pc, r0, lsl #6
    185c:	13490803 	movtne	r0, #38915	; 0x9803
    1860:	0f240000 	svceq	0x00240000
    1864:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1868:	00342500 	eorseq	r2, r4, r0, lsl #10
    186c:	0b3a1347 	bleq	e86590 <_bss_end+0xe75510>
    1870:	0b390b3b 	bleq	e44564 <_bss_end+0xe334e4>
    1874:	00001802 	andeq	r1, r0, r2, lsl #16
    1878:	03002e26 	movweq	r2, #3622	; 0xe26
    187c:	1119340e 	tstne	r9, lr, lsl #8
    1880:	40061201 	andmi	r1, r6, r1, lsl #4
    1884:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1888:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    188c:	340e0301 	strcc	r0, [lr], #-769	; 0xfffffcff
    1890:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1894:	96184006 	ldrls	r4, [r8], -r6
    1898:	13011942 	movwne	r1, #6466	; 0x1942
    189c:	05280000 	streq	r0, [r8, #-0]!
    18a0:	3a0e0300 	bcc	3824a8 <_bss_end+0x371428>
    18a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18a8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    18ac:	29000018 	stmdbcs	r0, {r3, r4}
    18b0:	1347012e 	movtne	r0, #28974	; 0x712e
    18b4:	01111364 	tsteq	r1, r4, ror #6
    18b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    18bc:	01194296 			; <UNDEFINED> instruction: 0x01194296
    18c0:	2a000013 	bcs	1914 <CPSR_IRQ_INHIBIT+0x1894>
    18c4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    18c8:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    18cc:	00001802 	andeq	r1, r0, r2, lsl #16
    18d0:	47012e2b 	strmi	r2, [r1, -fp, lsr #28]
    18d4:	3b0b3a13 	blcc	2d0128 <_bss_end+0x2bf0a8>
    18d8:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    18dc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    18e0:	96184006 	ldrls	r4, [r8], -r6
    18e4:	13011942 	movwne	r1, #6466	; 0x1942
    18e8:	342c0000 	strtcc	r0, [ip], #-0
    18ec:	3a0e0300 	bcc	3824f4 <_bss_end+0x371474>
    18f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    18f8:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    18fc:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1900:	0b3b0b3a 	bleq	ec45f0 <_bss_end+0xeb3570>
    1904:	13490b39 	movtne	r0, #39737	; 0x9b39
    1908:	00001802 	andeq	r1, r0, r2, lsl #16
    190c:	11010b2e 	tstne	r1, lr, lsr #22
    1910:	00061201 	andeq	r1, r6, r1, lsl #4
    1914:	012e2f00 			; <UNDEFINED> instruction: 0x012e2f00
    1918:	0b3a1347 	bleq	e8663c <_bss_end+0xe755bc>
    191c:	0b390b3b 	bleq	e44610 <_bss_end+0xe33590>
    1920:	0b201364 	bleq	8066b8 <_bss_end+0x7f5638>
    1924:	00001301 	andeq	r1, r0, r1, lsl #6
    1928:	03000530 	movweq	r0, #1328	; 0x530
    192c:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    1930:	31000019 	tstcc	r0, r9, lsl r0
    1934:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    1938:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    193c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1940:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1944:	00130119 	andseq	r0, r3, r9, lsl r1
    1948:	00053200 	andeq	r3, r5, r0, lsl #4
    194c:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    1950:	2e330000 	cdpcs	0, 3, cr0, cr3, cr0, {0}
    1954:	6e133101 	mufvss	f3, f3, f1
    1958:	1113640e 	tstne	r3, lr, lsl #8
    195c:	40061201 	andmi	r1, r6, r1, lsl #4
    1960:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1964:	01000000 	mrseq	r0, (UNDEF: 0)
    1968:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    196c:	0e030b13 	vmoveq.32	d3[0], r0
    1970:	17550e1b 	smmlane	r5, fp, lr, r0
    1974:	17100111 			; <UNDEFINED> instruction: 0x17100111
    1978:	24020000 	strcs	r0, [r2], #-0
    197c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1980:	000e030b 	andeq	r0, lr, fp, lsl #6
    1984:	00260300 	eoreq	r0, r6, r0, lsl #6
    1988:	00001349 	andeq	r1, r0, r9, asr #6
    198c:	0b002404 	bleq	a9a4 <_ZN16CDisplay_SSD130624Process_External_CommandEPKcj+0x3c4>
    1990:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1994:	05000008 	streq	r0, [r0, #-8]
    1998:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    199c:	0b3b0b3a 	bleq	ec468c <_bss_end+0xeb360c>
    19a0:	13490b39 	movtne	r0, #39737	; 0x9b39
    19a4:	35060000 	strcc	r0, [r6, #-0]
    19a8:	00134900 	andseq	r4, r3, r0, lsl #18
    19ac:	01040700 	tsteq	r4, r0, lsl #14
    19b0:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    19b4:	0b0b0b3e 	bleq	2c46b4 <_bss_end+0x2b3634>
    19b8:	0b3a1349 	bleq	e866e4 <_bss_end+0xe75664>
    19bc:	0b390b3b 	bleq	e446b0 <_bss_end+0xe33630>
    19c0:	00001301 	andeq	r1, r0, r1, lsl #6
    19c4:	03002808 	movweq	r2, #2056	; 0x808
    19c8:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    19cc:	00340900 	eorseq	r0, r4, r0, lsl #18
    19d0:	0b3a0e03 	bleq	e851e4 <_bss_end+0xe74164>
    19d4:	0b390b3b 	bleq	e446c8 <_bss_end+0xe33648>
    19d8:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    19dc:	00001802 	andeq	r1, r0, r2, lsl #16
    19e0:	0301020a 	movweq	r0, #4618	; 0x120a
    19e4:	3a0b0b0e 	bcc	2c4624 <_bss_end+0x2b35a4>
    19e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19ec:	0013010b 	andseq	r0, r3, fp, lsl #2
    19f0:	01130b00 	tsteq	r3, r0, lsl #22
    19f4:	0b0b0e03 	bleq	2c5208 <_bss_end+0x2b4188>
    19f8:	0b3b0b3a 	bleq	ec46e8 <_bss_end+0xeb3668>
    19fc:	13010b39 	movwne	r0, #6969	; 0x1b39
    1a00:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1a04:	3a0e0300 	bcc	38260c <_bss_end+0x37158c>
    1a08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a0c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1a10:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    1a14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1a18:	0b3a0e03 	bleq	e8522c <_bss_end+0xe741ac>
    1a1c:	0b390b3b 	bleq	e44710 <_bss_end+0xe33690>
    1a20:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1a24:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1a28:	050e0000 	streq	r0, [lr, #-0]
    1a2c:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    1a30:	0f000019 	svceq	0x00000019
    1a34:	13490005 	movtne	r0, #36869	; 0x9005
    1a38:	0d100000 	ldceq	0, cr0, [r0, #-0]
    1a3c:	3a0e0300 	bcc	382644 <_bss_end+0x3715c4>
    1a40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a44:	3f13490b 	svccc	0x0013490b
    1a48:	00193c19 	andseq	r3, r9, r9, lsl ip
    1a4c:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
    1a50:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1a54:	0b3b0b3a 	bleq	ec4744 <_bss_end+0xeb36c4>
    1a58:	0e6e0b39 	vmoveq.8	d14[5], r0
    1a5c:	0b321349 	bleq	c86788 <_bss_end+0xc75708>
    1a60:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1a64:	00001301 	andeq	r1, r0, r1, lsl #6
    1a68:	3f012e12 	svccc	0x00012e12
    1a6c:	3a0e0319 	bcc	3826d8 <_bss_end+0x371658>
    1a70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a74:	320e6e0b 	andcc	r6, lr, #11, 28	; 0xb0
    1a78:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1a7c:	00130113 	andseq	r0, r3, r3, lsl r1
    1a80:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
    1a84:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1a88:	0b3b0b3a 	bleq	ec4778 <_bss_end+0xeb36f8>
    1a8c:	0e6e0b39 	vmoveq.8	d14[5], r0
    1a90:	0b321349 	bleq	c867bc <_bss_end+0xc7573c>
    1a94:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1a98:	01140000 	tsteq	r4, r0
    1a9c:	01134901 	tsteq	r3, r1, lsl #18
    1aa0:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1aa4:	13490021 	movtne	r0, #36897	; 0x9021
    1aa8:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1aac:	0b000f16 	bleq	570c <CPSR_IRQ_INHIBIT+0x568c>
    1ab0:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ab4:	01021700 	tsteq	r2, r0, lsl #14
    1ab8:	0b0b0e03 	bleq	2c52cc <_bss_end+0x2b424c>
    1abc:	0b3b0b3a 	bleq	ec47ac <_bss_end+0xeb372c>
    1ac0:	131d0b39 	tstne	sp, #58368	; 0xe400
    1ac4:	00001301 	andeq	r1, r0, r1, lsl #6
    1ac8:	3f012e18 	svccc	0x00012e18
    1acc:	6e0e0319 	mcrvs	3, 0, r0, cr14, cr9, {0}
    1ad0:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    1ad4:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    1ad8:	01136419 	tsteq	r3, r9, lsl r4
    1adc:	19000013 	stmdbne	r0, {r0, r1, r4}
    1ae0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1ae4:	0b381349 	bleq	e06810 <_bss_end+0xdf5790>
    1ae8:	0b321934 	bleq	c87fc0 <_bss_end+0xc76f40>
    1aec:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1af0:	03193f01 	tsteq	r9, #1, 30
    1af4:	3b0b3a0e 	blcc	2d0334 <_bss_end+0x2bf2b4>
    1af8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1afc:	4d0b4c0e 	stcmi	12, cr4, [fp, #-56]	; 0xffffffc8
    1b00:	32131d18 	andscc	r1, r3, #24, 26	; 0x600
    1b04:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    1b08:	00130113 	andseq	r0, r3, r3, lsl r1
    1b0c:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    1b10:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1b14:	0b3b0b3a 	bleq	ec4804 <_bss_end+0xeb3784>
    1b18:	0e6e0b39 	vmoveq.8	d14[5], r0
    1b1c:	0b4c1349 	bleq	1306848 <_bss_end+0x12f57c8>
    1b20:	131d184d 	tstne	sp, #5046272	; 0x4d0000
    1b24:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1b28:	00001364 	andeq	r1, r0, r4, ror #6
    1b2c:	0000211c 	andeq	r2, r0, ip, lsl r1
    1b30:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    1b34:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1b38:	0b3b0b3a 	bleq	ec4828 <_bss_end+0xeb37a8>
    1b3c:	0e6e0b39 	vmoveq.8	d14[5], r0
    1b40:	0b4c1349 	bleq	130686c <_bss_end+0x12f57ec>
    1b44:	0b32131d 	bleq	c867c0 <_bss_end+0xc75740>
    1b48:	018b193c 	orreq	r1, fp, ip, lsr r9
    1b4c:	0113640b 	tsteq	r3, fp, lsl #8
    1b50:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1b54:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1b58:	0b3a0e03 	bleq	e8536c <_bss_end+0xe742ec>
    1b5c:	0b390b3b 	bleq	e44850 <_bss_end+0xe337d0>
    1b60:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1b64:	184d0b4c 	stmdane	sp, {r2, r3, r6, r8, r9, fp}^
    1b68:	0b32131d 	bleq	c867e4 <_bss_end+0xc75764>
    1b6c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1b70:	00001301 	andeq	r1, r0, r1, lsl #6
    1b74:	0301391f 	movweq	r3, #6431	; 0x191f
    1b78:	3b0b3a08 	blcc	2d03a0 <_bss_end+0x2bf320>
    1b7c:	010b390b 	tsteq	fp, fp, lsl #18
    1b80:	20000013 	andcs	r0, r0, r3, lsl r0
    1b84:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1b88:	0b3b0b3a 	bleq	ec4878 <_bss_end+0xeb37f8>
    1b8c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b90:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    1b94:	0000196c 	andeq	r1, r0, ip, ror #18
    1b98:	03003421 	movweq	r3, #1057	; 0x421
    1b9c:	3b0b3a0e 	blcc	2d03dc <_bss_end+0x2bf35c>
    1ba0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ba4:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1ba8:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1bac:	00342200 	eorseq	r2, r4, r0, lsl #4
    1bb0:	00001347 	andeq	r1, r0, r7, asr #6
    1bb4:	0b001023 	bleq	5c48 <CPSR_IRQ_INHIBIT+0x5bc8>
    1bb8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1bbc:	00342400 	eorseq	r2, r4, r0, lsl #8
    1bc0:	0b3a0e03 	bleq	e853d4 <_bss_end+0xe74354>
    1bc4:	0b390b3b 	bleq	e448b8 <_bss_end+0xe33838>
    1bc8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1bcc:	0000193c 	andeq	r1, r0, ip, lsr r9
    1bd0:	3f012e25 	svccc	0x00012e25
    1bd4:	3a0e0319 	bcc	382840 <_bss_end+0x3717c0>
    1bd8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bdc:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1be0:	64193c13 	ldrvs	r3, [r9], #-3091	; 0xfffff3ed
    1be4:	00130113 	andseq	r0, r3, r3, lsl r1
    1be8:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    1bec:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1bf0:	0b3b0b3a 	bleq	ec48e0 <_bss_end+0xeb3860>
    1bf4:	0e6e0b39 	vmoveq.8	d14[5], r0
    1bf8:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1bfc:	00001364 	andeq	r1, r0, r4, ror #6
    1c00:	0b000f27 	bleq	58a4 <CPSR_IRQ_INHIBIT+0x5824>
    1c04:	2800000b 	stmdacs	r0, {r0, r1, r3}
    1c08:	1349001c 	movtne	r0, #36892	; 0x901c
    1c0c:	0b320b38 	bleq	c848f4 <_bss_end+0xc73874>
    1c10:	34290000 	strtcc	r0, [r9], #-0
    1c14:	3a0e0300 	bcc	38281c <_bss_end+0x37179c>
    1c18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c1c:	3f13490b 	svccc	0x0013490b
    1c20:	00180219 	andseq	r0, r8, r9, lsl r2
    1c24:	01042a00 	tsteq	r4, r0, lsl #20
    1c28:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    1c2c:	0b0b0b3e 	bleq	2c492c <_bss_end+0x2b38ac>
    1c30:	0b3a1349 	bleq	e8695c <_bss_end+0xe758dc>
    1c34:	0b390b3b 	bleq	e44928 <_bss_end+0xe338a8>
    1c38:	13010b32 	movwne	r0, #6962	; 0x1b32
    1c3c:	282b0000 	stmdacs	fp!, {}	; <UNPREDICTABLE>
    1c40:	1c080300 	stcne	3, cr0, [r8], {-0}
    1c44:	2c00000b 	stccs	0, cr0, [r0], {11}
    1c48:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1c4c:	0b3b0b3a 	bleq	ec493c <_bss_end+0xeb38bc>
    1c50:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c54:	00000b38 	andeq	r0, r0, r8, lsr fp
    1c58:	03000d2d 	movweq	r0, #3373	; 0xd2d
    1c5c:	3b0b3a0e 	blcc	2d049c <_bss_end+0x2bf41c>
    1c60:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c64:	32193f13 	andscc	r3, r9, #19, 30	; 0x4c
    1c68:	1c193c0b 	ldcne	12, cr3, [r9], {11}
    1c6c:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1c70:	000d2e00 	andeq	r2, sp, r0, lsl #28
    1c74:	0b3a0e03 	bleq	e85488 <_bss_end+0xe74408>
    1c78:	0b390b3b 	bleq	e4496c <_bss_end+0xe338ec>
    1c7c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1c80:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1c84:	0000196c 	andeq	r1, r0, ip, ror #18
    1c88:	3f012e2f 	svccc	0x00012e2f
    1c8c:	3a0e0319 	bcc	3828f8 <_bss_end+0x371878>
    1c90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c94:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1c98:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1c9c:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
    1ca0:	00130113 	andseq	r0, r3, r3, lsl r1
    1ca4:	012e3000 			; <UNDEFINED> instruction: 0x012e3000
    1ca8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1cac:	0b3b0b3a 	bleq	ec499c <_bss_end+0xeb391c>
    1cb0:	0e6e0b39 	vmoveq.8	d14[5], r0
    1cb4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1cb8:	00001301 	andeq	r1, r0, r1, lsl #6
    1cbc:	47003431 	smladxmi	r0, r1, r4, r3
    1cc0:	3b0b3a13 	blcc	2d0514 <_bss_end+0x2bf494>
    1cc4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1cc8:	0213490e 	andseq	r4, r3, #229376	; 0x38000
    1ccc:	32000018 	andcc	r0, r0, #24
    1cd0:	13470034 	movtne	r0, #28724	; 0x7034
    1cd4:	0b3b0b3a 	bleq	ec49c4 <_bss_end+0xeb3944>
    1cd8:	0e6e0b39 	vmoveq.8	d14[5], r0
    1cdc:	00001802 	andeq	r1, r0, r2, lsl #16
    1ce0:	0b004233 	bleq	125b4 <_bss_end+0x1534>
    1ce4:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ce8:	012e3400 			; <UNDEFINED> instruction: 0x012e3400
    1cec:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1cf0:	0b3b0b3a 	bleq	ec49e0 <_bss_end+0xeb3960>
    1cf4:	0e6e0b39 	vmoveq.8	d14[5], r0
    1cf8:	0b4c1349 	bleq	1306a24 <_bss_end+0x12f59a4>
    1cfc:	0b32131d 	bleq	c86978 <_bss_end+0xc758f8>
    1d00:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1d04:	00001301 	andeq	r1, r0, r1, lsl #6
    1d08:	49011535 	stmdbmi	r1, {r0, r2, r4, r5, r8, sl, ip}
    1d0c:	00130113 	andseq	r0, r3, r3, lsl r1
    1d10:	00183600 	andseq	r3, r8, r0, lsl #12
    1d14:	0f370000 	svceq	0x00370000
    1d18:	030b0b00 	movweq	r0, #47872	; 0xbb00
    1d1c:	0013490e 	andseq	r4, r3, lr, lsl #18
    1d20:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
    1d24:	13641347 	cmnne	r4, #469762049	; 0x1c000001
    1d28:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1d2c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1d30:	00130119 	andseq	r0, r3, r9, lsl r1
    1d34:	00053900 	andeq	r3, r5, r0, lsl #18
    1d38:	13490e03 	movtne	r0, #40451	; 0x9e03
    1d3c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    1d40:	053a0000 	ldreq	r0, [sl, #-0]!
    1d44:	3a0e0300 	bcc	38294c <_bss_end+0x3718cc>
    1d48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d4c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1d50:	3b000018 	blcc	1db8 <CPSR_IRQ_INHIBIT+0x1d38>
    1d54:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1d58:	0b3b0b3a 	bleq	ec4a48 <_bss_end+0xeb39c8>
    1d5c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d60:	00001802 	andeq	r1, r0, r2, lsl #16
    1d64:	47012e3c 	smladxmi	r1, ip, lr, r2
    1d68:	11136413 	tstne	r3, r3, lsl r4
    1d6c:	40061201 	andmi	r1, r6, r1, lsl #4
    1d70:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1d74:	00001301 	andeq	r1, r0, r1, lsl #6
    1d78:	0300053d 	movweq	r0, #1341	; 0x53d
    1d7c:	3b0b3a08 	blcc	2d05a4 <_bss_end+0x2bf524>
    1d80:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d84:	00180213 	andseq	r0, r8, r3, lsl r2
    1d88:	00343e00 	eorseq	r3, r4, r0, lsl #28
    1d8c:	0b3a0e03 	bleq	e855a0 <_bss_end+0xe74520>
    1d90:	0b390b3b 	bleq	e44a84 <_bss_end+0xe33a04>
    1d94:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1d98:	0b3f0000 	bleq	fc1da0 <_bss_end+0xfb0d20>
    1d9c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1da0:	00130106 	andseq	r0, r3, r6, lsl #2
    1da4:	010b4000 	mrseq	r4, (UNDEF: 11)
    1da8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1dac:	2e410000 	cdpcs	0, 4, cr0, cr1, cr0, {0}
    1db0:	49134701 	ldmdbmi	r3, {r0, r8, r9, sl, lr}
    1db4:	20136413 	andscs	r6, r3, r3, lsl r4
    1db8:	0013010b 	andseq	r0, r3, fp, lsl #2
    1dbc:	00054200 	andeq	r4, r5, r0, lsl #4
    1dc0:	13490e03 	movtne	r0, #40451	; 0x9e03
    1dc4:	00001934 	andeq	r1, r0, r4, lsr r9
    1dc8:	31012e43 	tstcc	r1, r3, asr #28
    1dcc:	640e6e13 	strvs	r6, [lr], #-3603	; 0xfffff1ed
    1dd0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1dd4:	96184006 	ldrls	r4, [r8], -r6
    1dd8:	13011942 	movwne	r1, #6466	; 0x1942
    1ddc:	05440000 	strbeq	r0, [r4, #-0]
    1de0:	02133100 	andseq	r3, r3, #0, 2
    1de4:	45000018 	strmi	r0, [r0, #-24]	; 0xffffffe8
    1de8:	1347012e 	movtne	r0, #28974	; 0x712e
    1dec:	0b201364 	bleq	806b84 <_bss_end+0x7f5b04>
    1df0:	00001301 	andeq	r1, r0, r1, lsl #6
    1df4:	03000546 	movweq	r0, #1350	; 0x546
    1df8:	3b0b3a0e 	blcc	2d0638 <_bss_end+0x2bf5b8>
    1dfc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1e00:	47000013 	smladmi	r0, r3, r0, r0
    1e04:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    1e08:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    1e0c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1e10:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1e14:	00130119 	andseq	r0, r3, r9, lsl r1
    1e18:	012e4800 			; <UNDEFINED> instruction: 0x012e4800
    1e1c:	0b3a1347 	bleq	e86b40 <_bss_end+0xe75ac0>
    1e20:	0b390b3b 	bleq	e44b14 <_bss_end+0xe33a94>
    1e24:	0b201364 	bleq	806bbc <_bss_end+0x7f5b3c>
    1e28:	00001301 	andeq	r1, r0, r1, lsl #6
    1e2c:	3f012e49 	svccc	0x00012e49
    1e30:	3a0e0319 	bcc	382a9c <_bss_end+0x371a1c>
    1e34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e38:	110e6e0b 	tstne	lr, fp, lsl #28
    1e3c:	40061201 	andmi	r1, r6, r1, lsl #4
    1e40:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1e44:	00001301 	andeq	r1, r0, r1, lsl #6
    1e48:	4900054a 	stmdbmi	r0, {r1, r3, r6, r8, sl}
    1e4c:	00180213 	andseq	r0, r8, r3, lsl r2
    1e50:	012e4b00 			; <UNDEFINED> instruction: 0x012e4b00
    1e54:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1e58:	0b3b0b3a 	bleq	ec4b48 <_bss_end+0xeb3ac8>
    1e5c:	0e6e0b39 	vmoveq.8	d14[5], r0
    1e60:	01111349 	tsteq	r1, r9, asr #6
    1e64:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1e68:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1e6c:	4c000013 	stcmi	0, cr0, [r0], {19}
    1e70:	1347012e 	movtne	r0, #28974	; 0x712e
    1e74:	01111364 	tsteq	r1, r4, ror #6
    1e78:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1e7c:	00194297 	mulseq	r9, r7, r2
    1e80:	11010000 	mrsne	r0, (UNDEF: 1)
    1e84:	130e2501 	movwne	r2, #58625	; 0xe501
    1e88:	1b0e030b 	blne	382abc <_bss_end+0x371a3c>
    1e8c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    1e90:	00171006 	andseq	r1, r7, r6
    1e94:	00240200 	eoreq	r0, r4, r0, lsl #4
    1e98:	0b3e0b0b 	bleq	f84acc <_bss_end+0xf73a4c>
    1e9c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1ea0:	0b002403 	bleq	aeb4 <_Z41__static_initialization_and_destruction_0ii+0x38>
    1ea4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1ea8:	04000008 	streq	r0, [r0], #-8
    1eac:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1eb0:	0b3b0b3a 	bleq	ec4ba0 <_bss_end+0xeb3b20>
    1eb4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1eb8:	26050000 	strcs	r0, [r5], -r0
    1ebc:	00134900 	andseq	r4, r3, r0, lsl #18
    1ec0:	00350600 	eorseq	r0, r5, r0, lsl #12
    1ec4:	00001349 	andeq	r1, r0, r9, asr #6
    1ec8:	03013907 	movweq	r3, #6407	; 0x1907
    1ecc:	3b0b3a08 	blcc	2d06f4 <_bss_end+0x2bf674>
    1ed0:	010b390b 	tsteq	fp, fp, lsl #18
    1ed4:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1ed8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1edc:	0b3b0b3a 	bleq	ec4bcc <_bss_end+0xeb3b4c>
    1ee0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ee4:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    1ee8:	0000196c 	andeq	r1, r0, ip, ror #18
    1eec:	03003409 	movweq	r3, #1033	; 0x409
    1ef0:	3b0b3a0e 	blcc	2d0730 <_bss_end+0x2bf6b0>
    1ef4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ef8:	1c193c13 	ldcne	12, cr3, [r9], {19}
    1efc:	00196c0b 	andseq	r6, r9, fp, lsl #24
    1f00:	01040a00 	tsteq	r4, r0, lsl #20
    1f04:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    1f08:	0b0b0b3e 	bleq	2c4c08 <_bss_end+0x2b3b88>
    1f0c:	0b3a1349 	bleq	e86c38 <_bss_end+0xe75bb8>
    1f10:	0b390b3b 	bleq	e44c04 <_bss_end+0xe33b84>
    1f14:	00001301 	andeq	r1, r0, r1, lsl #6
    1f18:	0300280b 	movweq	r2, #2059	; 0x80b
    1f1c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1f20:	00280c00 	eoreq	r0, r8, r0, lsl #24
    1f24:	0b1c0803 	bleq	703f38 <_bss_end+0x6f2eb8>
    1f28:	340d0000 	strcc	r0, [sp], #-0
    1f2c:	00134700 	andseq	r4, r3, r0, lsl #14
    1f30:	01020e00 	tsteq	r2, r0, lsl #28
    1f34:	0b0b0e03 	bleq	2c5748 <_bss_end+0x2b46c8>
    1f38:	0b3b0b3a 	bleq	ec4c28 <_bss_end+0xeb3ba8>
    1f3c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1f40:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 1f48 <CPSR_IRQ_INHIBIT+0x1ec8>
    1f44:	3a0e0300 	bcc	382b4c <_bss_end+0x371acc>
    1f48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f4c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1f50:	1000000b 	andne	r0, r0, fp
    1f54:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1f58:	0b3a0e03 	bleq	e8576c <_bss_end+0xe746ec>
    1f5c:	0b390b3b 	bleq	e44c50 <_bss_end+0xe33bd0>
    1f60:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    1f64:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    1f68:	13011364 	movwne	r1, #4964	; 0x1364
    1f6c:	05110000 	ldreq	r0, [r1, #-0]
    1f70:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    1f74:	12000019 	andne	r0, r0, #25
    1f78:	13490005 	movtne	r0, #36869	; 0x9005
    1f7c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1f80:	03193f01 	tsteq	r9, #1, 30
    1f84:	3b0b3a0e 	blcc	2d07c4 <_bss_end+0x2bf744>
    1f88:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    1f8c:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    1f90:	01136419 	tsteq	r3, r9, lsl r4
    1f94:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1f98:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1f9c:	0b3a0e03 	bleq	e857b0 <_bss_end+0xe74730>
    1fa0:	0b390b3b 	bleq	e44c94 <_bss_end+0xe33c14>
    1fa4:	0b320e6e 	bleq	c85964 <_bss_end+0xc748e4>
    1fa8:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    1fac:	0f150000 	svceq	0x00150000
    1fb0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1fb4:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1fb8:	0b0b0010 	bleq	2c2000 <_bss_end+0x2b0f80>
    1fbc:	00001349 	andeq	r1, r0, r9, asr #6
    1fc0:	03003417 	movweq	r3, #1047	; 0x417
    1fc4:	3b0b3a0e 	blcc	2d0804 <_bss_end+0x2bf784>
    1fc8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1fcc:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1fd0:	18000019 	stmdane	r0, {r0, r3, r4}
    1fd4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1fd8:	0b3b0b3a 	bleq	ec4cc8 <_bss_end+0xeb3c48>
    1fdc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1fe0:	00000b32 	andeq	r0, r0, r2, lsr fp
    1fe4:	3f012e19 	svccc	0x00012e19
    1fe8:	3a0e0319 	bcc	382c54 <_bss_end+0x371bd4>
    1fec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ff0:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    1ff4:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    1ff8:	00136419 	andseq	r6, r3, r9, lsl r4
    1ffc:	00151a00 	andseq	r1, r5, r0, lsl #20
    2000:	341b0000 	ldrcc	r0, [fp], #-0
    2004:	3a0e0300 	bcc	382c0c <_bss_end+0x371b8c>
    2008:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    200c:	6c13490b 			; <UNDEFINED> instruction: 0x6c13490b
    2010:	00180219 	andseq	r0, r8, r9, lsl r2
    2014:	01131c00 	tsteq	r3, r0, lsl #24
    2018:	0b0b0e03 	bleq	2c582c <_bss_end+0x2b47ac>
    201c:	0b3b0b3a 	bleq	ec4d0c <_bss_end+0xeb3c8c>
    2020:	13010b39 	movwne	r0, #6969	; 0x1b39
    2024:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
    2028:	3a080300 	bcc	202c30 <_bss_end+0x1f1bb0>
    202c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2030:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2034:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    2038:	13490101 	movtne	r0, #37121	; 0x9101
    203c:	00001301 	andeq	r1, r0, r1, lsl #6
    2040:	4900211f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r8, sp}
    2044:	000b2f13 	andeq	r2, fp, r3, lsl pc
    2048:	00022000 	andeq	r2, r2, r0
    204c:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    2050:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    2054:	03193f01 	tsteq	r9, #1, 30
    2058:	3b0b3a0e 	blcc	2d0898 <_bss_end+0x2bf818>
    205c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2060:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    2064:	00130113 	andseq	r0, r3, r3, lsl r1
    2068:	00342200 	eorseq	r2, r4, r0, lsl #4
    206c:	0b3a1347 	bleq	e86d90 <_bss_end+0xe75d10>
    2070:	0b390b3b 	bleq	e44d64 <_bss_end+0xe33ce4>
    2074:	00001802 	andeq	r1, r0, r2, lsl #16
    2078:	03003423 	movweq	r3, #1059	; 0x423
    207c:	3b0b3a0e 	blcc	2d08bc <_bss_end+0x2bf83c>
    2080:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2084:	00180213 	andseq	r0, r8, r3, lsl r2
    2088:	002e2400 	eoreq	r2, lr, r0, lsl #8
    208c:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    2090:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2094:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2098:	25000019 	strcs	r0, [r0, #-25]	; 0xffffffe7
    209c:	0e03012e 	adfeqsp	f0, f3, #0.5
    20a0:	01111934 	tsteq	r1, r4, lsr r9
    20a4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    20a8:	01194296 			; <UNDEFINED> instruction: 0x01194296
    20ac:	26000013 			; <UNDEFINED> instruction: 0x26000013
    20b0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    20b4:	0b3b0b3a 	bleq	ec4da4 <_bss_end+0xeb3d24>
    20b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    20bc:	00001802 	andeq	r1, r0, r2, lsl #16
    20c0:	47012e27 	strmi	r2, [r1, -r7, lsr #28]
    20c4:	3b0b3a13 	blcc	2d0918 <_bss_end+0x2bf898>
    20c8:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    20cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    20d0:	96184006 	ldrls	r4, [r8], -r6
    20d4:	13011942 	movwne	r1, #6466	; 0x1942
    20d8:	05280000 	streq	r0, [r8, #-0]!
    20dc:	490e0300 	stmdbmi	lr, {r8, r9}
    20e0:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    20e4:	29000018 	stmdbcs	r0, {r3, r4}
    20e8:	1347012e 	movtne	r0, #28974	; 0x712e
    20ec:	0b3b0b3a 	bleq	ec4ddc <_bss_end+0xeb3d5c>
    20f0:	13640b39 	cmnne	r4, #58368	; 0xe400
    20f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    20f8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    20fc:	00130119 	andseq	r0, r3, r9, lsl r1
    2100:	00052a00 	andeq	r2, r5, r0, lsl #20
    2104:	0b3a0803 	bleq	e84118 <_bss_end+0xe73098>
    2108:	0b390b3b 	bleq	e44dfc <_bss_end+0xe33d7c>
    210c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2110:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
    2114:	3a134701 	bcc	4d3d20 <_bss_end+0x4c2ca0>
    2118:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    211c:	2013640b 	andscs	r6, r3, fp, lsl #8
    2120:	0013010b 	andseq	r0, r3, fp, lsl #2
    2124:	00052c00 	andeq	r2, r5, r0, lsl #24
    2128:	13490e03 	movtne	r0, #40451	; 0x9e03
    212c:	00001934 	andeq	r1, r0, r4, lsr r9
    2130:	0300052d 	movweq	r0, #1325	; 0x52d
    2134:	3b0b3a0e 	blcc	2d0974 <_bss_end+0x2bf8f4>
    2138:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    213c:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    2140:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    2144:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    2148:	06120111 			; <UNDEFINED> instruction: 0x06120111
    214c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2150:	00130119 	andseq	r0, r3, r9, lsl r1
    2154:	00052f00 	andeq	r2, r5, r0, lsl #30
    2158:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    215c:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    2160:	03193f00 	tsteq	r9, #0, 30
    2164:	3b0b3a0e 	blcc	2d09a4 <_bss_end+0x2bf924>
    2168:	110b390b 	tstne	fp, fp, lsl #18
    216c:	40061201 	andmi	r1, r6, r1, lsl #4
    2170:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2174:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
    2178:	03193f00 	tsteq	r9, #0, 30
    217c:	3b0b3a0e 	blcc	2d09bc <_bss_end+0x2bf93c>
    2180:	110b390b 	tstne	fp, fp, lsl #18
    2184:	40061201 	andmi	r1, r6, r1, lsl #4
    2188:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    218c:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
    2190:	03193f01 	tsteq	r9, #1, 30
    2194:	3b0b3a0e 	blcc	2d09d4 <_bss_end+0x2bf954>
    2198:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    219c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    21a0:	96184006 	ldrls	r4, [r8], -r6
    21a4:	13011942 	movwne	r1, #6466	; 0x1942
    21a8:	01000000 	mrseq	r0, (UNDEF: 0)
    21ac:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    21b0:	0e030b13 	vmoveq.32	d3[0], r0
    21b4:	01110e1b 	tsteq	r1, fp, lsl lr
    21b8:	17100612 			; <UNDEFINED> instruction: 0x17100612
    21bc:	24020000 	strcs	r0, [r2], #-0
    21c0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    21c4:	000e030b 	andeq	r0, lr, fp, lsl #6
    21c8:	00260300 	eoreq	r0, r6, r0, lsl #6
    21cc:	00001349 	andeq	r1, r0, r9, asr #6
    21d0:	0b002404 	bleq	b1e8 <_ZN15CShift_Register8Shift_InEb+0x3c>
    21d4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    21d8:	05000008 	streq	r0, [r0, #-8]
    21dc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    21e0:	0b3b0b3a 	bleq	ec4ed0 <_bss_end+0xeb3e50>
    21e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    21e8:	35060000 	strcc	r0, [r6, #-0]
    21ec:	00134900 	andseq	r4, r3, r0, lsl #18
    21f0:	01390700 	teqeq	r9, r0, lsl #14
    21f4:	0b3a0803 	bleq	e84208 <_bss_end+0xe73188>
    21f8:	0b390b3b 	bleq	e44eec <_bss_end+0xe33e6c>
    21fc:	00001301 	andeq	r1, r0, r1, lsl #6
    2200:	03003408 	movweq	r3, #1032	; 0x408
    2204:	3b0b3a0e 	blcc	2d0a44 <_bss_end+0x2bf9c4>
    2208:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    220c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    2210:	00196c06 	andseq	r6, r9, r6, lsl #24
    2214:	00340900 	eorseq	r0, r4, r0, lsl #18
    2218:	0b3a0e03 	bleq	e85a2c <_bss_end+0xe749ac>
    221c:	0b390b3b 	bleq	e44f10 <_bss_end+0xe33e90>
    2220:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    2224:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    2228:	040a0000 	streq	r0, [sl], #-0
    222c:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    2230:	0b0b3e19 	bleq	2d1a9c <_bss_end+0x2c0a1c>
    2234:	3a13490b 	bcc	4d4668 <_bss_end+0x4c35e8>
    2238:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    223c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2240:	00280b00 	eoreq	r0, r8, r0, lsl #22
    2244:	0b1c0e03 	bleq	705a58 <_bss_end+0x6f49d8>
    2248:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    224c:	1c080300 	stcne	3, cr0, [r8], {-0}
    2250:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    2254:	0e030104 	adfeqs	f0, f3, f4
    2258:	0b3e196d 	bleq	f88814 <_bss_end+0xf77794>
    225c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2260:	0b3b0b3a 	bleq	ec4f50 <_bss_end+0xeb3ed0>
    2264:	00000b39 	andeq	r0, r0, r9, lsr fp
    2268:	4700340e 	strmi	r3, [r0, -lr, lsl #8]
    226c:	0f000013 	svceq	0x00000013
    2270:	0b0b000f 	bleq	2c22b4 <_bss_end+0x2b1234>
    2274:	00001349 	andeq	r1, r0, r9, asr #6
    2278:	0b001010 	bleq	62c0 <CPSR_IRQ_INHIBIT+0x6240>
    227c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2280:	01021100 	mrseq	r1, (UNDEF: 18)
    2284:	0b0b0e03 	bleq	2c5a98 <_bss_end+0x2b4a18>
    2288:	0b3b0b3a 	bleq	ec4f78 <_bss_end+0xeb3ef8>
    228c:	13010b39 	movwne	r0, #6969	; 0x1b39
    2290:	04120000 	ldreq	r0, [r2], #-0
    2294:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    2298:	0b0b3e19 	bleq	2d1b04 <_bss_end+0x2c0a84>
    229c:	3a13490b 	bcc	4d46d0 <_bss_end+0x4c3650>
    22a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    22a4:	010b320b 	tsteq	fp, fp, lsl #4
    22a8:	13000013 	movwne	r0, #19
    22ac:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    22b0:	0b3a0b0b 	bleq	e84ee4 <_bss_end+0xe73e64>
    22b4:	0b390b3b 	bleq	e44fa8 <_bss_end+0xe33f28>
    22b8:	00001301 	andeq	r1, r0, r1, lsl #6
    22bc:	03000d14 	movweq	r0, #3348	; 0xd14
    22c0:	3b0b3a08 	blcc	2d0ae8 <_bss_end+0x2bfa68>
    22c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    22c8:	000b3813 	andeq	r3, fp, r3, lsl r8
    22cc:	000d1500 	andeq	r1, sp, r0, lsl #10
    22d0:	0b3a0e03 	bleq	e85ae4 <_bss_end+0xe74a64>
    22d4:	0b390b3b 	bleq	e44fc8 <_bss_end+0xe33f48>
    22d8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    22dc:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    22e0:	196c0b1c 	stmdbne	ip!, {r2, r3, r4, r8, r9, fp}^
    22e4:	0d160000 	ldceq	0, cr0, [r6, #-0]
    22e8:	3a0e0300 	bcc	382ef0 <_bss_end+0x371e70>
    22ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    22f0:	3f13490b 	svccc	0x0013490b
    22f4:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    22f8:	00196c19 	andseq	r6, r9, r9, lsl ip
    22fc:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    2300:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2304:	0b3b0b3a 	bleq	ec4ff4 <_bss_end+0xeb3f74>
    2308:	0e6e0b39 	vmoveq.8	d14[5], r0
    230c:	0b321349 	bleq	c87038 <_bss_end+0xc75fb8>
    2310:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    2314:	13011364 	movwne	r1, #4964	; 0x1364
    2318:	05180000 	ldreq	r0, [r8, #-0]
    231c:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    2320:	19000019 	stmdbne	r0, {r0, r3, r4}
    2324:	13490005 	movtne	r0, #36869	; 0x9005
    2328:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    232c:	03193f01 	tsteq	r9, #1, 30
    2330:	3b0b3a0e 	blcc	2d0b70 <_bss_end+0x2bfaf0>
    2334:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2338:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    233c:	01136419 	tsteq	r3, r9, lsl r4
    2340:	1b000013 	blne	2394 <CPSR_IRQ_INHIBIT+0x2314>
    2344:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2348:	0b3a0e03 	bleq	e85b5c <_bss_end+0xe74adc>
    234c:	0b390b3b 	bleq	e45040 <_bss_end+0xe33fc0>
    2350:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2354:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2358:	13011364 	movwne	r1, #4964	; 0x1364
    235c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    2360:	03193f01 	tsteq	r9, #1, 30
    2364:	3b0b3a0e 	blcc	2d0ba4 <_bss_end+0x2bfb24>
    2368:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    236c:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    2370:	00130113 	andseq	r0, r3, r3, lsl r1
    2374:	000d1d00 	andeq	r1, sp, r0, lsl #26
    2378:	0b3a0e03 	bleq	e85b8c <_bss_end+0xe74b0c>
    237c:	0b390b3b 	bleq	e45070 <_bss_end+0xe33ff0>
    2380:	0b381349 	bleq	e070ac <_bss_end+0xdf602c>
    2384:	341e0000 	ldrcc	r0, [lr], #-0
    2388:	3a0e0300 	bcc	382f90 <_bss_end+0x371f10>
    238c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2390:	3f13490b 	svccc	0x0013490b
    2394:	00193c19 	andseq	r3, r9, r9, lsl ip
    2398:	00341f00 	eorseq	r1, r4, r0, lsl #30
    239c:	0b3a0e03 	bleq	e85bb0 <_bss_end+0xe74b30>
    23a0:	0b390b3b 	bleq	e45094 <_bss_end+0xe34014>
    23a4:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    23a8:	00001802 	andeq	r1, r0, r2, lsl #16
    23ac:	3f012e20 	svccc	0x00012e20
    23b0:	3a0e0319 	bcc	38301c <_bss_end+0x371f9c>
    23b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23b8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    23bc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    23c0:	0b018b19 	bleq	6502c <_bss_end+0x53fac>
    23c4:	13011364 	movwne	r1, #4964	; 0x1364
    23c8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    23cc:	03193f01 	tsteq	r9, #1, 30
    23d0:	3b0b3a0e 	blcc	2d0c10 <_bss_end+0x2bfb90>
    23d4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    23d8:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    23dc:	00136419 	andseq	r6, r3, r9, lsl r4
    23e0:	01012200 	mrseq	r2, R9_usr
    23e4:	13011349 	movwne	r1, #4937	; 0x1349
    23e8:	21230000 			; <UNDEFINED> instruction: 0x21230000
    23ec:	2f134900 	svccs	0x00134900
    23f0:	2400000b 	strcs	r0, [r0], #-11
    23f4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    23f8:	0b3a0803 	bleq	e8440c <_bss_end+0xe7338c>
    23fc:	0b390b3b 	bleq	e450f0 <_bss_end+0xe34070>
    2400:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2404:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2408:	13011364 	movwne	r1, #4964	; 0x1364
    240c:	34250000 	strtcc	r0, [r5], #-0
    2410:	3a0e0300 	bcc	383018 <_bss_end+0x371f98>
    2414:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2418:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    241c:	6c051c19 	stcvs	12, cr1, [r5], {25}
    2420:	26000019 			; <UNDEFINED> instruction: 0x26000019
    2424:	0e030002 	cdpeq	0, 0, cr0, cr3, cr2, {0}
    2428:	0000193c 	andeq	r1, r0, ip, lsr r9
    242c:	3f002e27 	svccc	0x00002e27
    2430:	3a0e0319 	bcc	38309c <_bss_end+0x37201c>
    2434:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2438:	1113490b 	tstne	r3, fp, lsl #18
    243c:	40061201 	andmi	r1, r6, r1, lsl #4
    2440:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2444:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    2448:	03193f00 	tsteq	r9, #0, 30
    244c:	3b0b3a0e 	blcc	2d0c8c <_bss_end+0x2bfc0c>
    2450:	110b390b 	tstne	fp, fp, lsl #18
    2454:	40061201 	andmi	r1, r6, r1, lsl #4
    2458:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    245c:	01000000 	mrseq	r0, (UNDEF: 0)
    2460:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2464:	0e030b13 	vmoveq.32	d3[0], r0
    2468:	01110e1b 	tsteq	r1, fp, lsl lr
    246c:	17100612 			; <UNDEFINED> instruction: 0x17100612
    2470:	24020000 	strcs	r0, [r2], #-0
    2474:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2478:	000e030b 	andeq	r0, lr, fp, lsl #6
    247c:	00240300 	eoreq	r0, r4, r0, lsl #6
    2480:	0b3e0b0b 	bleq	f850b4 <_bss_end+0xf74034>
    2484:	00000803 	andeq	r0, r0, r3, lsl #16
    2488:	03001604 	movweq	r1, #1540	; 0x604
    248c:	3b0b3a0e 	blcc	2d0ccc <_bss_end+0x2bfc4c>
    2490:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2494:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2498:	13490026 	movtne	r0, #36902	; 0x9026
    249c:	13060000 	movwne	r0, #24576	; 0x6000
    24a0:	0b0e0301 	bleq	3830ac <_bss_end+0x37202c>
    24a4:	3b0b3a0b 	blcc	2d0cd8 <_bss_end+0x2bfc58>
    24a8:	010b390b 	tsteq	fp, fp, lsl #18
    24ac:	07000013 	smladeq	r0, r3, r0, r0
    24b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    24b4:	0b3b0b3a 	bleq	ec51a4 <_bss_end+0xeb4124>
    24b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    24bc:	00000b38 	andeq	r0, r0, r8, lsr fp
    24c0:	0b000f08 	bleq	60e8 <CPSR_IRQ_INHIBIT+0x6068>
    24c4:	0013490b 	andseq	r4, r3, fp, lsl #18
    24c8:	01020900 	tsteq	r2, r0, lsl #18
    24cc:	0b0b0e03 	bleq	2c5ce0 <_bss_end+0x2b4c60>
    24d0:	0b3b0b3a 	bleq	ec51c0 <_bss_end+0xeb4140>
    24d4:	13010b39 	movwne	r0, #6969	; 0x1b39
    24d8:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    24dc:	03193f01 	tsteq	r9, #1, 30
    24e0:	3b0b3a0e 	blcc	2d0d20 <_bss_end+0x2bfca0>
    24e4:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    24e8:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    24ec:	01136419 	tsteq	r3, r9, lsl r4
    24f0:	0b000013 	bleq	2544 <CPSR_IRQ_INHIBIT+0x24c4>
    24f4:	13490005 	movtne	r0, #36869	; 0x9005
    24f8:	00001934 	andeq	r1, r0, r4, lsr r9
    24fc:	3f012e0c 	svccc	0x00012e0c
    2500:	3a0e0319 	bcc	38316c <_bss_end+0x3720ec>
    2504:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2508:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    250c:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    2510:	01136419 	tsteq	r3, r9, lsl r4
    2514:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2518:	13490005 	movtne	r0, #36869	; 0x9005
    251c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
    2520:	03193f01 	tsteq	r9, #1, 30
    2524:	3b0b3a0e 	blcc	2d0d64 <_bss_end+0x2bfce4>
    2528:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    252c:	3c0b320e 	sfmcc	f3, 4, [fp], {14}
    2530:	00136419 	andseq	r6, r3, r9, lsl r4
    2534:	000f0f00 	andeq	r0, pc, r0, lsl #30
    2538:	00000b0b 	andeq	r0, r0, fp, lsl #22
    253c:	03003410 	movweq	r3, #1040	; 0x410
    2540:	3b0b3a0e 	blcc	2d0d80 <_bss_end+0x2bfd00>
    2544:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2548:	3c193f13 	ldccc	15, cr3, [r9], {19}
    254c:	11000019 	tstne	r0, r9, lsl r0
    2550:	08030139 	stmdaeq	r3, {r0, r3, r4, r5, r8}
    2554:	0b3b0b3a 	bleq	ec5244 <_bss_end+0xeb41c4>
    2558:	13010b39 	movwne	r0, #6969	; 0x1b39
    255c:	34120000 	ldrcc	r0, [r2], #-0
    2560:	3a0e0300 	bcc	383168 <_bss_end+0x3720e8>
    2564:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2568:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    256c:	6c061c19 	stcvs	12, cr1, [r6], {25}
    2570:	13000019 	movwne	r0, #25
    2574:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2578:	0b3b0b3a 	bleq	ec5268 <_bss_end+0xeb41e8>
    257c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2580:	0b1c193c 	bleq	708a78 <_bss_end+0x6f79f8>
    2584:	0000196c 	andeq	r1, r0, ip, ror #18
    2588:	47003414 	smladmi	r0, r4, r4, r3
    258c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    2590:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2594:	0b3b0b3a 	bleq	ec5284 <_bss_end+0xeb4204>
    2598:	13490b39 	movtne	r0, #39737	; 0x9b39
    259c:	051c193c 	ldreq	r1, [ip, #-2364]	; 0xfffff6c4
    25a0:	0000196c 	andeq	r1, r0, ip, ror #18
    25a4:	03010216 	movweq	r0, #4630	; 0x1216
    25a8:	3a050b0e 	bcc	1451e8 <_bss_end+0x134168>
    25ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25b0:	0013010b 	andseq	r0, r3, fp, lsl #2
    25b4:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    25b8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    25bc:	0b3b0b3a 	bleq	ec52ac <_bss_end+0xeb422c>
    25c0:	0e6e0b39 	vmoveq.8	d14[5], r0
    25c4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    25c8:	00001301 	andeq	r1, r0, r1, lsl #6
    25cc:	49010118 	stmdbmi	r1, {r3, r4, r8}
    25d0:	00130113 	andseq	r0, r3, r3, lsl r1
    25d4:	00211900 	eoreq	r1, r1, r0, lsl #18
    25d8:	052f1349 	streq	r1, [pc, #-841]!	; 2297 <CPSR_IRQ_INHIBIT+0x2217>
    25dc:	341a0000 	ldrcc	r0, [sl], #-0
    25e0:	3a134700 	bcc	4d41e8 <_bss_end+0x4c3168>
    25e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25e8:	0018020b 	andseq	r0, r8, fp, lsl #4
    25ec:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    25f0:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    25f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    25f8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    25fc:	1c000019 	stcne	0, cr0, [r0], {25}
    2600:	0e03012e 	adfeqsp	f0, f3, #0.5
    2604:	01111934 	tsteq	r1, r4, lsr r9
    2608:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    260c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2610:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    2614:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2618:	0b3b0b3a 	bleq	ec5308 <_bss_end+0xeb4288>
    261c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2620:	00001802 	andeq	r1, r0, r2, lsl #16
    2624:	47012e1e 	smladmi	r1, lr, lr, r2
    2628:	3b0b3a13 	blcc	2d0e7c <_bss_end+0x2bfdfc>
    262c:	640b390b 	strvs	r3, [fp], #-2315	; 0xfffff6f5
    2630:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2634:	97184006 	ldrls	r4, [r8, -r6]
    2638:	13011942 	movwne	r1, #6466	; 0x1942
    263c:	051f0000 	ldreq	r0, [pc, #-0]	; 2644 <CPSR_IRQ_INHIBIT+0x25c4>
    2640:	490e0300 	stmdbmi	lr, {r8, r9}
    2644:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    2648:	20000018 	andcs	r0, r0, r8, lsl r0
    264c:	08030005 	stmdaeq	r3, {r0, r2}
    2650:	0b3b0b3a 	bleq	ec5340 <_bss_end+0xeb42c0>
    2654:	13490b39 	movtne	r0, #39737	; 0x9b39
    2658:	00001802 	andeq	r1, r0, r2, lsl #16
    265c:	03003421 	movweq	r3, #1057	; 0x421
    2660:	3b0b3a0e 	blcc	2d0ea0 <_bss_end+0x2bfe20>
    2664:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2668:	00180213 	andseq	r0, r8, r3, lsl r2
    266c:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    2670:	0b3a1347 	bleq	e87394 <_bss_end+0xe76314>
    2674:	0b390b3b 	bleq	e45368 <_bss_end+0xe342e8>
    2678:	13641349 	cmnne	r4, #603979777	; 0x24000001
    267c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2680:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2684:	00130119 	andseq	r0, r3, r9, lsl r1
    2688:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
    268c:	0b3a1347 	bleq	e873b0 <_bss_end+0xe76330>
    2690:	0b390b3b 	bleq	e45384 <_bss_end+0xe34304>
    2694:	01111364 	tsteq	r1, r4, ror #6
    2698:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    269c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    26a0:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    26a4:	1347012e 	movtne	r0, #28974	; 0x712e
    26a8:	0b3b0b3a 	bleq	ec5398 <_bss_end+0xeb4318>
    26ac:	13640b39 	cmnne	r4, #58368	; 0xe400
    26b0:	13010b20 	movwne	r0, #6944	; 0x1b20
    26b4:	05250000 	streq	r0, [r5, #-0]!
    26b8:	490e0300 	stmdbmi	lr, {r8, r9}
    26bc:	00193413 	andseq	r3, r9, r3, lsl r4
    26c0:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    26c4:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
    26c8:	01111364 	tsteq	r1, r4, ror #6
    26cc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    26d0:	00194296 	mulseq	r9, r6, r2
    26d4:	00052700 	andeq	r2, r5, r0, lsl #14
    26d8:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    26dc:	01000000 	mrseq	r0, (UNDEF: 0)
    26e0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    26e4:	0e030b13 	vmoveq.32	d3[0], r0
    26e8:	01110e1b 	tsteq	r1, fp, lsl lr
    26ec:	17100612 			; <UNDEFINED> instruction: 0x17100612
    26f0:	24020000 	strcs	r0, [r2], #-0
    26f4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    26f8:	000e030b 	andeq	r0, lr, fp, lsl #6
    26fc:	00240300 	eoreq	r0, r4, r0, lsl #6
    2700:	0b3e0b0b 	bleq	f85334 <_bss_end+0xf742b4>
    2704:	00000803 	andeq	r0, r0, r3, lsl #16
    2708:	03001604 	movweq	r1, #1540	; 0x604
    270c:	3b0b3a0e 	blcc	2d0f4c <_bss_end+0x2bfecc>
    2710:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2714:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2718:	13490026 	movtne	r0, #36902	; 0x9026
    271c:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
    2720:	3a080301 	bcc	20332c <_bss_end+0x1f22ac>
    2724:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2728:	0013010b 	andseq	r0, r3, fp, lsl #2
    272c:	00340700 	eorseq	r0, r4, r0, lsl #14
    2730:	0b3a0e03 	bleq	e85f44 <_bss_end+0xe74ec4>
    2734:	0b390b3b 	bleq	e45428 <_bss_end+0xe343a8>
    2738:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    273c:	196c061c 	stmdbne	ip!, {r2, r3, r4, r9, sl}^
    2740:	34080000 	strcc	r0, [r8], #-0
    2744:	3a0e0300 	bcc	38334c <_bss_end+0x3722cc>
    2748:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    274c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    2750:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    2754:	09000019 	stmdbeq	r0, {r0, r3, r4}
    2758:	13470034 	movtne	r0, #28724	; 0x7034
    275c:	340a0000 	strcc	r0, [sl], #-0
    2760:	3a0e0300 	bcc	383368 <_bss_end+0x3722e8>
    2764:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2768:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
    276c:	6c051c19 	stcvs	12, cr1, [r5], {25}
    2770:	0b000019 	bleq	27dc <CPSR_IRQ_INHIBIT+0x275c>
    2774:	0e030102 	adfeqs	f0, f3, f2
    2778:	0b3a050b 	bleq	e83bac <_bss_end+0xe72b2c>
    277c:	0b390b3b 	bleq	e45470 <_bss_end+0xe343f0>
    2780:	00001301 	andeq	r1, r0, r1, lsl #6
    2784:	03000d0c 	movweq	r0, #3340	; 0xd0c
    2788:	3b0b3a0e 	blcc	2d0fc8 <_bss_end+0x2bff48>
    278c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2790:	000b3813 	andeq	r3, fp, r3, lsl r8
    2794:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    2798:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    279c:	0b3b0b3a 	bleq	ec548c <_bss_end+0xeb440c>
    27a0:	0e6e0b39 	vmoveq.8	d14[5], r0
    27a4:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    27a8:	00001301 	andeq	r1, r0, r1, lsl #6
    27ac:	4900050e 	stmdbmi	r0, {r1, r2, r3, r8, sl}
    27b0:	00193413 	andseq	r3, r9, r3, lsl r4
    27b4:	00050f00 	andeq	r0, r5, r0, lsl #30
    27b8:	00001349 	andeq	r1, r0, r9, asr #6
    27bc:	3f012e10 	svccc	0x00012e10
    27c0:	3a0e0319 	bcc	38342c <_bss_end+0x3723ac>
    27c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    27c8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    27cc:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    27d0:	01136419 	tsteq	r3, r9, lsl r4
    27d4:	11000013 	tstne	r0, r3, lsl r0
    27d8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    27dc:	0b3a0e03 	bleq	e85ff0 <_bss_end+0xe74f70>
    27e0:	0b390b3b 	bleq	e454d4 <_bss_end+0xe34454>
    27e4:	0b320e6e 	bleq	c861a4 <_bss_end+0xc75124>
    27e8:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    27ec:	01120000 	tsteq	r2, r0
    27f0:	01134901 	tsteq	r3, r1, lsl #18
    27f4:	13000013 	movwne	r0, #19
    27f8:	13490021 	movtne	r0, #36897	; 0x9021
    27fc:	0000052f 	andeq	r0, r0, pc, lsr #10
    2800:	0b000f14 	bleq	6458 <CPSR_IRQ_INHIBIT+0x63d8>
    2804:	0013490b 	andseq	r4, r3, fp, lsl #18
    2808:	00341500 	eorseq	r1, r4, r0, lsl #10
    280c:	0b3a0e03 	bleq	e86020 <_bss_end+0xe74fa0>
    2810:	0b390b3b 	bleq	e45504 <_bss_end+0xe34484>
    2814:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2818:	0000193c 	andeq	r1, r0, ip, lsr r9
    281c:	47003416 	smladmi	r0, r6, r4, r3
    2820:	3b0b3a13 	blcc	2d1074 <_bss_end+0x2bfff4>
    2824:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    2828:	17000018 	smladne	r0, r8, r0, r0
    282c:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    2830:	01111934 	tsteq	r1, r4, lsr r9
    2834:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2838:	00194296 	mulseq	r9, r6, r2
    283c:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
    2840:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    2844:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2848:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    284c:	00130119 	andseq	r0, r3, r9, lsl r1
    2850:	00051900 	andeq	r1, r5, r0, lsl #18
    2854:	0b3a0e03 	bleq	e86068 <_bss_end+0xe74fe8>
    2858:	0b390b3b 	bleq	e4554c <_bss_end+0xe344cc>
    285c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2860:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    2864:	3a134701 	bcc	4d4470 <_bss_end+0x4c33f0>
    2868:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    286c:	1113640b 	tstne	r3, fp, lsl #8
    2870:	40061201 	andmi	r1, r6, r1, lsl #4
    2874:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2878:	00001301 	andeq	r1, r0, r1, lsl #6
    287c:	0300051b 	movweq	r0, #1307	; 0x51b
    2880:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    2884:	00180219 	andseq	r0, r8, r9, lsl r2
    2888:	00051c00 	andeq	r1, r5, r0, lsl #24
    288c:	0b3a0803 	bleq	e848a0 <_bss_end+0xe73820>
    2890:	0b390b3b 	bleq	e45584 <_bss_end+0xe34504>
    2894:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2898:	341d0000 	ldrcc	r0, [sp], #-0
    289c:	3a080300 	bcc	2034a4 <_bss_end+0x1f2424>
    28a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    28a4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    28a8:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    28ac:	0111010b 	tsteq	r1, fp, lsl #2
    28b0:	00000612 	andeq	r0, r0, r2, lsl r6
    28b4:	0300341f 	movweq	r3, #1055	; 0x41f
    28b8:	3b0b3a0e 	blcc	2d10f8 <_bss_end+0x2c0078>
    28bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    28c0:	00180213 	andseq	r0, r8, r3, lsl r2
    28c4:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
    28c8:	0b3a1347 	bleq	e875ec <_bss_end+0xe7656c>
    28cc:	13640b39 	cmnne	r4, #58368	; 0xe400
    28d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    28d4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    28d8:	00130119 	andseq	r0, r3, r9, lsl r1
    28dc:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    28e0:	0b3a1347 	bleq	e87604 <_bss_end+0xe76584>
    28e4:	0b390b3b 	bleq	e455d8 <_bss_end+0xe34558>
    28e8:	0b201364 	bleq	807680 <_bss_end+0x7f6600>
    28ec:	00001301 	andeq	r1, r0, r1, lsl #6
    28f0:	03000522 	movweq	r0, #1314	; 0x522
    28f4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    28f8:	23000019 	movwcs	r0, #25
    28fc:	0000010b 	andeq	r0, r0, fp, lsl #2
    2900:	03003424 	movweq	r3, #1060	; 0x424
    2904:	3b0b3a08 	blcc	2d112c <_bss_end+0x2c00ac>
    2908:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    290c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    2910:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    2914:	13640e6e 	cmnne	r4, #1760	; 0x6e0
    2918:	06120111 			; <UNDEFINED> instruction: 0x06120111
    291c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2920:	26000019 			; <UNDEFINED> instruction: 0x26000019
    2924:	13310005 	teqne	r1, #5
    2928:	00001802 	andeq	r1, r0, r2, lsl #16
    292c:	31010b27 	tstcc	r1, r7, lsr #22
    2930:	00130113 	andseq	r0, r3, r3, lsl r1
    2934:	00342800 	eorseq	r2, r4, r0, lsl #16
    2938:	00001331 	andeq	r1, r0, r1, lsr r3
    293c:	31010b29 	tstcc	r1, r9, lsr #22
    2940:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2944:	2a000006 	bcs	2964 <CPSR_IRQ_INHIBIT+0x28e4>
    2948:	13310034 	teqne	r1, #52	; 0x34
    294c:	00001802 	andeq	r1, r0, r2, lsl #16
    2950:	01110100 	tsteq	r1, r0, lsl #2
    2954:	0b130e25 	bleq	4c61f0 <_bss_end+0x4b5170>
    2958:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    295c:	01111755 	tsteq	r1, r5, asr r7
    2960:	00001710 	andeq	r1, r0, r0, lsl r7
    2964:	0b002402 	bleq	b974 <_Z41__static_initialization_and_destruction_0ii+0x2c>
    2968:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    296c:	0300000e 	movweq	r0, #14
    2970:	13490026 	movtne	r0, #36902	; 0x9026
    2974:	24040000 	strcs	r0, [r4], #-0
    2978:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    297c:	0008030b 	andeq	r0, r8, fp, lsl #6
    2980:	00160500 	andseq	r0, r6, r0, lsl #10
    2984:	0b3a0e03 	bleq	e86198 <_bss_end+0xe75118>
    2988:	0b390b3b 	bleq	e4567c <_bss_end+0xe345fc>
    298c:	00001349 	andeq	r1, r0, r9, asr #6
    2990:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    2994:	07000013 	smladeq	r0, r3, r0, r0
    2998:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    299c:	0b3b0b3a 	bleq	ec568c <_bss_end+0xeb460c>
    29a0:	13490b39 	movtne	r0, #39737	; 0x9b39
    29a4:	1802196c 	stmdane	r2, {r2, r3, r5, r6, r8, fp, ip}
    29a8:	04080000 	streq	r0, [r8], #-0
    29ac:	6d0e0301 	stcvs	3, cr0, [lr, #-4]
    29b0:	0b0b3e19 	bleq	2d221c <_bss_end+0x2c119c>
    29b4:	3a13490b 	bcc	4d4de8 <_bss_end+0x4c3d68>
    29b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    29bc:	0013010b 	andseq	r0, r3, fp, lsl #2
    29c0:	00280900 	eoreq	r0, r8, r0, lsl #18
    29c4:	0b1c0803 	bleq	7049d8 <_bss_end+0x6f3958>
    29c8:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    29cc:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    29d0:	0b00000b 	bleq	2a04 <CPSR_IRQ_INHIBIT+0x2984>
    29d4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    29d8:	0b3a0b0b 	bleq	e8560c <_bss_end+0xe7458c>
    29dc:	0b390b3b 	bleq	e456d0 <_bss_end+0xe34650>
    29e0:	00001301 	andeq	r1, r0, r1, lsl #6
    29e4:	03000d0c 	movweq	r0, #3340	; 0xd0c
    29e8:	3b0b3a08 	blcc	2d1210 <_bss_end+0x2c0190>
    29ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    29f0:	000b3813 	andeq	r3, fp, r3, lsl r8
    29f4:	000d0d00 	andeq	r0, sp, r0, lsl #26
    29f8:	0b3a0e03 	bleq	e8620c <_bss_end+0xe7518c>
    29fc:	0b390b3b 	bleq	e456f0 <_bss_end+0xe34670>
    2a00:	0b381349 	bleq	e0772c <_bss_end+0xdf66ac>
    2a04:	010e0000 	mrseq	r0, (UNDEF: 14)
    2a08:	01134901 	tsteq	r3, r1, lsl #18
    2a0c:	0f000013 	svceq	0x00000013
    2a10:	13490021 	movtne	r0, #36897	; 0x9021
    2a14:	00000b2f 	andeq	r0, r0, pc, lsr #22
    2a18:	0b000f10 	bleq	6660 <CPSR_IRQ_INHIBIT+0x65e0>
    2a1c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2a20:	01021100 	mrseq	r1, (UNDEF: 18)
    2a24:	0b0b0e03 	bleq	2c6238 <_bss_end+0x2b51b8>
    2a28:	0b3b0b3a 	bleq	ec5718 <_bss_end+0xeb4698>
    2a2c:	131d0b39 	tstne	sp, #58368	; 0xe400
    2a30:	00001301 	andeq	r1, r0, r1, lsl #6
    2a34:	03000d12 	movweq	r0, #3346	; 0xd12
    2a38:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
    2a3c:	3219340b 	andscc	r3, r9, #184549376	; 0xb000000
    2a40:	1300000b 	movwne	r0, #11
    2a44:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2a48:	0b3a0e03 	bleq	e8625c <_bss_end+0xe751dc>
    2a4c:	0b390b3b 	bleq	e45740 <_bss_end+0xe346c0>
    2a50:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2a54:	131d0b4c 	tstne	sp, #76, 22	; 0x13000
    2a58:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2a5c:	640b018b 	strvs	r0, [fp], #-395	; 0xfffffe75
    2a60:	00130113 	andseq	r0, r3, r3, lsl r1
    2a64:	00051400 	andeq	r1, r5, r0, lsl #8
    2a68:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    2a6c:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    2a70:	03193f01 	tsteq	r9, #1, 30
    2a74:	3b0b3a0e 	blcc	2d12b4 <_bss_end+0x2c0234>
    2a78:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2a7c:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    2a80:	1d184d0b 	ldcne	13, cr4, [r8, #-44]	; 0xffffffd4
    2a84:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    2a88:	01136419 	tsteq	r3, r9, lsl r4
    2a8c:	16000013 			; <UNDEFINED> instruction: 0x16000013
    2a90:	13490005 	movtne	r0, #36869	; 0x9005
    2a94:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    2a98:	03193f01 	tsteq	r9, #1, 30
    2a9c:	3b0b3a0e 	blcc	2d12dc <_bss_end+0x2c025c>
    2aa0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2aa4:	4c13490e 			; <UNDEFINED> instruction: 0x4c13490e
    2aa8:	1d184d0b 	ldcne	13, cr4, [r8, #-44]	; 0xffffffd4
    2aac:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    2ab0:	00136419 	andseq	r6, r3, r9, lsl r4
    2ab4:	01021800 	tsteq	r2, r0, lsl #16
    2ab8:	0b0b0e03 	bleq	2c62cc <_bss_end+0x2b524c>
    2abc:	0b3b0b3a 	bleq	ec57ac <_bss_end+0xeb472c>
    2ac0:	13010b39 	movwne	r0, #6969	; 0x1b39
    2ac4:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    2ac8:	03193f01 	tsteq	r9, #1, 30
    2acc:	3b0b3a0e 	blcc	2d130c <_bss_end+0x2c028c>
    2ad0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2ad4:	3c13490e 			; <UNDEFINED> instruction: 0x3c13490e
    2ad8:	00136419 	andseq	r6, r3, r9, lsl r4
    2adc:	000d1a00 	andeq	r1, sp, r0, lsl #20
    2ae0:	0b3a0e03 	bleq	e862f4 <_bss_end+0xe75274>
    2ae4:	0b390b3b 	bleq	e457d8 <_bss_end+0xe34758>
    2ae8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2aec:	0000193c 	andeq	r1, r0, ip, lsr r9
    2af0:	3f012e1b 	svccc	0x00012e1b
    2af4:	3a0e0319 	bcc	383760 <_bss_end+0x3726e0>
    2af8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2afc:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    2b00:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    2b04:	01136419 	tsteq	r3, r9, lsl r4
    2b08:	1c000013 	stcne	0, cr0, [r0], {19}
    2b0c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2b10:	0b3a0e03 	bleq	e86324 <_bss_end+0xe752a4>
    2b14:	0b390b3b 	bleq	e45808 <_bss_end+0xe34788>
    2b18:	0b320e6e 	bleq	c864d8 <_bss_end+0xc75458>
    2b1c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    2b20:	00001301 	andeq	r1, r0, r1, lsl #6
    2b24:	3f012e1d 	svccc	0x00012e1d
    2b28:	3a0e0319 	bcc	383794 <_bss_end+0x372714>
    2b2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b30:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    2b34:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    2b38:	00136419 	andseq	r6, r3, r9, lsl r4
    2b3c:	00021e00 	andeq	r1, r2, r0, lsl #28
    2b40:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    2b44:	211f0000 	tstcs	pc, r0
    2b48:	20000000 	andcs	r0, r0, r0
    2b4c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2b50:	0b3b0b3a 	bleq	ec5840 <_bss_end+0xeb47c0>
    2b54:	13490b39 	movtne	r0, #39737	; 0x9b39
    2b58:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2b5c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    2b60:	03193f01 	tsteq	r9, #1, 30
    2b64:	3b0b3a0e 	blcc	2d13a4 <_bss_end+0x2c0324>
    2b68:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2b6c:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    2b70:	00130113 	andseq	r0, r3, r3, lsl r1
    2b74:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    2b78:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2b7c:	0b3b0b3a 	bleq	ec586c <_bss_end+0xeb47ec>
    2b80:	0e6e0b39 	vmoveq.8	d14[5], r0
    2b84:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2b88:	00001364 	andeq	r1, r0, r4, ror #6
    2b8c:	0b001023 	bleq	6c20 <CPSR_IRQ_INHIBIT+0x6ba0>
    2b90:	0013490b 	andseq	r4, r3, fp, lsl #18
    2b94:	01042400 	tsteq	r4, r0, lsl #8
    2b98:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    2b9c:	0b0b0b3e 	bleq	2c589c <_bss_end+0x2b481c>
    2ba0:	0b3a1349 	bleq	e878cc <_bss_end+0xe7684c>
    2ba4:	0b390b3b 	bleq	e45898 <_bss_end+0xe34818>
    2ba8:	13010b32 	movwne	r0, #6962	; 0x1b32
    2bac:	0d250000 	stceq	0, cr0, [r5, #-0]
    2bb0:	3a0e0300 	bcc	3837b8 <_bss_end+0x372738>
    2bb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2bb8:	3f13490b 	svccc	0x0013490b
    2bbc:	3c0b3219 	sfmcc	f3, 4, [fp], {25}
    2bc0:	6c0b1c19 	stcvs	12, cr1, [fp], {25}
    2bc4:	26000019 			; <UNDEFINED> instruction: 0x26000019
    2bc8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2bcc:	0b3b0b3a 	bleq	ec58bc <_bss_end+0xeb483c>
    2bd0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2bd4:	0b32193f 	bleq	c890d8 <_bss_end+0xc78058>
    2bd8:	196c193c 	stmdbne	ip!, {r2, r3, r4, r5, r8, fp, ip}^
    2bdc:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    2be0:	03193f01 	tsteq	r9, #1, 30
    2be4:	3b0b3a0e 	blcc	2d1424 <_bss_end+0x2c03a4>
    2be8:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    2bec:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    2bf0:	63193c0b 	tstvs	r9, #2816	; 0xb00
    2bf4:	01136419 	tsteq	r3, r9, lsl r4
    2bf8:	28000013 	stmdacs	r0, {r0, r1, r4}
    2bfc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2c00:	0b3a0e03 	bleq	e86414 <_bss_end+0xe75394>
    2c04:	0b390b3b 	bleq	e458f8 <_bss_end+0xe34878>
    2c08:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    2c0c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    2c10:	00001301 	andeq	r1, r0, r1, lsl #6
    2c14:	03002f29 	movweq	r2, #3881	; 0xf29
    2c18:	00134908 	andseq	r4, r3, r8, lsl #18
    2c1c:	000f2a00 	andeq	r2, pc, r0, lsl #20
    2c20:	00000b0b 	andeq	r0, r0, fp, lsl #22
    2c24:	0301392b 	movweq	r3, #6443	; 0x192b
    2c28:	3b0b3a08 	blcc	2d1450 <_bss_end+0x2c03d0>
    2c2c:	010b390b 	tsteq	fp, fp, lsl #18
    2c30:	2c000013 	stccs	0, cr0, [r0], {19}
    2c34:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2c38:	0b3b0b3a 	bleq	ec5928 <_bss_end+0xeb48a8>
    2c3c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2c40:	061c193c 			; <UNDEFINED> instruction: 0x061c193c
    2c44:	0000196c 	andeq	r1, r0, ip, ror #18
    2c48:	0300342d 	movweq	r3, #1069	; 0x42d
    2c4c:	3b0b3a0e 	blcc	2d148c <_bss_end+0x2c040c>
    2c50:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2c54:	1c193c13 	ldcne	12, cr3, [r9], {19}
    2c58:	00196c0b 	andseq	r6, r9, fp, lsl #24
    2c5c:	00342e00 	eorseq	r2, r4, r0, lsl #28
    2c60:	00001347 	andeq	r1, r0, r7, asr #6
    2c64:	0300342f 	movweq	r3, #1071	; 0x42f
    2c68:	3b0b3a0e 	blcc	2d14a8 <_bss_end+0x2c0428>
    2c6c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2c70:	1c193c13 	ldcne	12, cr3, [r9], {19}
    2c74:	00196c05 	andseq	r6, r9, r5, lsl #24
    2c78:	01023000 	mrseq	r3, (UNDEF: 2)
    2c7c:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    2c80:	0b3b0b3a 	bleq	ec5970 <_bss_end+0xeb48f0>
    2c84:	13010b39 	movwne	r0, #6969	; 0x1b39
    2c88:	21310000 	teqcs	r1, r0
    2c8c:	2f134900 	svccs	0x00134900
    2c90:	32000005 	andcc	r0, r0, #5
    2c94:	13470034 	movtne	r0, #28724	; 0x7034
    2c98:	0b3b0b3a 	bleq	ec5988 <_bss_end+0xeb4908>
    2c9c:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    2ca0:	15330000 	ldrne	r0, [r3, #-0]!
    2ca4:	01134901 	tsteq	r3, r1, lsl #18
    2ca8:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    2cac:	00000018 	andeq	r0, r0, r8, lsl r0
    2cb0:	0b000f35 	bleq	698c <CPSR_IRQ_INHIBIT+0x690c>
    2cb4:	490e030b 	stmdbmi	lr, {r0, r1, r3, r8, r9}
    2cb8:	36000013 			; <UNDEFINED> instruction: 0x36000013
    2cbc:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    2cc0:	01111934 	tsteq	r1, r4, lsr r9
    2cc4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2cc8:	00194296 	mulseq	r9, r6, r2
    2ccc:	012e3700 			; <UNDEFINED> instruction: 0x012e3700
    2cd0:	19340e03 	ldmdbne	r4!, {r0, r1, r9, sl, fp}
    2cd4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2cd8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2cdc:	00130119 	andseq	r0, r3, r9, lsl r1
    2ce0:	00053800 	andeq	r3, r5, r0, lsl #16
    2ce4:	0b3a0e03 	bleq	e864f8 <_bss_end+0xe75478>
    2ce8:	0b39053b 	bleq	e441dc <_bss_end+0xe3315c>
    2cec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2cf0:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
    2cf4:	64134701 	ldrvs	r4, [r3], #-1793	; 0xfffff8ff
    2cf8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2cfc:	96184006 	ldrls	r4, [r8], -r6
    2d00:	13011942 	movwne	r1, #6466	; 0x1942
    2d04:	053a0000 	ldreq	r0, [sl, #-0]!
    2d08:	490e0300 	stmdbmi	lr, {r8, r9}
    2d0c:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    2d10:	3b000018 	blcc	2d78 <CPSR_IRQ_INHIBIT+0x2cf8>
    2d14:	1347012e 	movtne	r0, #28974	; 0x712e
    2d18:	0b3b0b3a 	bleq	ec5a08 <_bss_end+0xeb4988>
    2d1c:	13640b39 	cmnne	r4, #58368	; 0xe400
    2d20:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2d24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2d28:	00130119 	andseq	r0, r3, r9, lsl r1
    2d2c:	00053c00 	andeq	r3, r5, r0, lsl #24
    2d30:	0b3a0e03 	bleq	e86544 <_bss_end+0xe754c4>
    2d34:	0b390b3b 	bleq	e45a28 <_bss_end+0xe349a8>
    2d38:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2d3c:	053d0000 	ldreq	r0, [sp, #-0]!
    2d40:	3a080300 	bcc	203948 <_bss_end+0x1f28c8>
    2d44:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d48:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2d4c:	3e000018 	mcrcc	0, 0, r0, cr0, cr8, {0}
    2d50:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    2d54:	343f0000 	ldrtcc	r0, [pc], #-0	; 2d5c <CPSR_IRQ_INHIBIT+0x2cdc>
    2d58:	3a080300 	bcc	203960 <_bss_end+0x1f28e0>
    2d5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d60:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2d64:	40000018 	andmi	r0, r0, r8, lsl r0
    2d68:	1347012e 	movtne	r0, #28974	; 0x712e
    2d6c:	0b3b0b3a 	bleq	ec5a5c <_bss_end+0xeb49dc>
    2d70:	13640b39 	cmnne	r4, #58368	; 0xe400
    2d74:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2d78:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2d7c:	00130119 	andseq	r0, r3, r9, lsl r1
    2d80:	00344100 	eorseq	r4, r4, r0, lsl #2
    2d84:	0b3a0e03 	bleq	e86598 <_bss_end+0xe75518>
    2d88:	0b390b3b 	bleq	e45a7c <_bss_end+0xe349fc>
    2d8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2d90:	0b420000 	bleq	1082d98 <_bss_end+0x1071d18>
    2d94:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    2d98:	43000006 	movwmi	r0, #6
    2d9c:	1347012e 	movtne	r0, #28974	; 0x712e
    2da0:	0b3b0b3a 	bleq	ec5a90 <_bss_end+0xeb4a10>
    2da4:	13640b39 	cmnne	r4, #58368	; 0xe400
    2da8:	13010b20 	movwne	r0, #6944	; 0x1b20
    2dac:	05440000 	strbeq	r0, [r4, #-0]
    2db0:	490e0300 	stmdbmi	lr, {r8, r9}
    2db4:	00193413 	andseq	r3, r9, r3, lsl r4
    2db8:	012e4500 			; <UNDEFINED> instruction: 0x012e4500
    2dbc:	0e6e1331 	mcreq	3, 3, r1, cr14, cr1, {1}
    2dc0:	01111364 	tsteq	r1, r4, ror #6
    2dc4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2dc8:	00194297 	mulseq	r9, r7, r2
    2dcc:	00054600 	andeq	r4, r5, r0, lsl #12
    2dd0:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    2dd4:	01000000 	mrseq	r0, (UNDEF: 0)
    2dd8:	06100011 			; <UNDEFINED> instruction: 0x06100011
    2ddc:	01120111 	tsteq	r2, r1, lsl r1
    2de0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2de4:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    2de8:	01000000 	mrseq	r0, (UNDEF: 0)
    2dec:	06100011 			; <UNDEFINED> instruction: 0x06100011
    2df0:	0e030655 	mcreq	6, 0, r0, cr3, cr5, {2}
    2df4:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
    2df8:	00000513 	andeq	r0, r0, r3, lsl r5
    2dfc:	01110100 	tsteq	r1, r0, lsl #2
    2e00:	0b130e25 	bleq	4c669c <_bss_end+0x4b561c>
    2e04:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2e08:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2e0c:	00001710 	andeq	r1, r0, r0, lsl r7
    2e10:	03001602 	movweq	r1, #1538	; 0x602
    2e14:	3b0b3a0e 	blcc	2d1654 <_bss_end+0x2c05d4>
    2e18:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e1c:	03000013 	movweq	r0, #19
    2e20:	0b0b000f 	bleq	2c2e64 <_bss_end+0x2b1de4>
    2e24:	00001349 	andeq	r1, r0, r9, asr #6
    2e28:	00001504 	andeq	r1, r0, r4, lsl #10
    2e2c:	00340500 	eorseq	r0, r4, r0, lsl #10
    2e30:	0b3a0e03 	bleq	e86644 <_bss_end+0xe755c4>
    2e34:	0b390b3b 	bleq	e45b28 <_bss_end+0xe34aa8>
    2e38:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2e3c:	0000193c 	andeq	r1, r0, ip, lsr r9
    2e40:	0b002406 	bleq	be60 <_ZN11CFilesystem10InitializeEv+0x26c>
    2e44:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2e48:	07000008 	streq	r0, [r0, -r8]
    2e4c:	13490101 	movtne	r0, #37121	; 0x9101
    2e50:	00001301 	andeq	r1, r0, r1, lsl #6
    2e54:	49002108 	stmdbmi	r0, {r3, r8, sp}
    2e58:	00062f13 	andeq	r2, r6, r3, lsl pc
    2e5c:	00240900 	eoreq	r0, r4, r0, lsl #18
    2e60:	0b3e0b0b 	bleq	f85a94 <_bss_end+0xf74a14>
    2e64:	00000e03 	andeq	r0, r0, r3, lsl #28
    2e68:	3f012e0a 	svccc	0x00012e0a
    2e6c:	3a0e0319 	bcc	383ad8 <_bss_end+0x372a58>
    2e70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2e74:	1113490b 	tstne	r3, fp, lsl #18
    2e78:	40061201 	andmi	r1, r6, r1, lsl #4
    2e7c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2e80:	00001301 	andeq	r1, r0, r1, lsl #6
    2e84:	0300340b 	movweq	r3, #1035	; 0x40b
    2e88:	3b0b3a0e 	blcc	2d16c8 <_bss_end+0x2c0648>
    2e8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e90:	00180213 	andseq	r0, r8, r3, lsl r2
    2e94:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    2e98:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2e9c:	0b3b0b3a 	bleq	ec5b8c <_bss_end+0xeb4b0c>
    2ea0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ea4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2ea8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2eac:	00130119 	andseq	r0, r3, r9, lsl r1
    2eb0:	00340d00 	eorseq	r0, r4, r0, lsl #26
    2eb4:	0b3a0803 	bleq	e84ec8 <_bss_end+0xe73e48>
    2eb8:	0b390b3b 	bleq	e45bac <_bss_end+0xe34b2c>
    2ebc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2ec0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ec4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2ec8:	0e030b13 	vmoveq.32	d3[0], r0
    2ecc:	01110e1b 	tsteq	r1, fp, lsl lr
    2ed0:	17100612 			; <UNDEFINED> instruction: 0x17100612
    2ed4:	24020000 	strcs	r0, [r2], #-0
    2ed8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2edc:	000e030b 	andeq	r0, lr, fp, lsl #6
    2ee0:	00260300 	eoreq	r0, r6, r0, lsl #6
    2ee4:	00001349 	andeq	r1, r0, r9, asr #6
    2ee8:	0b002404 	bleq	bf00 <_ZN11CFilesystem10InitializeEv+0x30c>
    2eec:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2ef0:	05000008 	streq	r0, [r0, #-8]
    2ef4:	13490035 	movtne	r0, #36917	; 0x9035
    2ef8:	16060000 	strne	r0, [r6], -r0
    2efc:	3a0e0300 	bcc	383b04 <_bss_end+0x372a84>
    2f00:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f04:	0013490b 	andseq	r4, r3, fp, lsl #18
    2f08:	00340700 	eorseq	r0, r4, r0, lsl #14
    2f0c:	0b3a0e03 	bleq	e86720 <_bss_end+0xe756a0>
    2f10:	0b390b3b 	bleq	e45c04 <_bss_end+0xe34b84>
    2f14:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    2f18:	00001802 	andeq	r1, r0, r2, lsl #16
    2f1c:	03010408 	movweq	r0, #5128	; 0x1408
    2f20:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    2f24:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2f28:	3b0b3a13 	blcc	2d177c <_bss_end+0x2c06fc>
    2f2c:	010b390b 	tsteq	fp, fp, lsl #18
    2f30:	09000013 	stmdbeq	r0, {r0, r1, r4}
    2f34:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    2f38:	00000b1c 	andeq	r0, r0, ip, lsl fp
    2f3c:	4901010a 	stmdbmi	r1, {r1, r3, r8}
    2f40:	00130113 	andseq	r0, r3, r3, lsl r1
    2f44:	00210b00 	eoreq	r0, r1, r0, lsl #22
    2f48:	0b2f1349 	bleq	bc7c74 <_bss_end+0xbb6bf4>
    2f4c:	0f0c0000 	svceq	0x000c0000
    2f50:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2f54:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2f58:	0e030102 	adfeqs	f0, f3, f2
    2f5c:	0b3a0b0b 	bleq	e85b90 <_bss_end+0xe74b10>
    2f60:	0b390b3b 	bleq	e45c54 <_bss_end+0xe34bd4>
    2f64:	00001301 	andeq	r1, r0, r1, lsl #6
    2f68:	0301040e 	movweq	r0, #5134	; 0x140e
    2f6c:	3e196d0e 	cdpcc	13, 1, cr6, cr9, cr14, {0}
    2f70:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2f74:	3b0b3a13 	blcc	2d17c8 <_bss_end+0x2c0748>
    2f78:	320b390b 	andcc	r3, fp, #180224	; 0x2c000
    2f7c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2f80:	00280f00 	eoreq	r0, r8, r0, lsl #30
    2f84:	0b1c0803 	bleq	704f98 <_bss_end+0x6f3f18>
    2f88:	13100000 	tstne	r0, #0
    2f8c:	0b0e0301 	bleq	383b98 <_bss_end+0x372b18>
    2f90:	3b0b3a0b 	blcc	2d17c4 <_bss_end+0x2c0744>
    2f94:	010b390b 	tsteq	fp, fp, lsl #18
    2f98:	11000013 	tstne	r0, r3, lsl r0
    2f9c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2fa0:	0b3b0b3a 	bleq	ec5c90 <_bss_end+0xeb4c10>
    2fa4:	13490b39 	movtne	r0, #39737	; 0x9b39
    2fa8:	00000b38 	andeq	r0, r0, r8, lsr fp
    2fac:	03000d12 	movweq	r0, #3346	; 0xd12
    2fb0:	3b0b3a0e 	blcc	2d17f0 <_bss_end+0x2c0770>
    2fb4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2fb8:	32193f13 	andscc	r3, r9, #19, 30	; 0x4c
    2fbc:	1c193c0b 	ldcne	12, cr3, [r9], {11}
    2fc0:	00196c0b 	andseq	r6, r9, fp, lsl #24
    2fc4:	000d1300 	andeq	r1, sp, r0, lsl #6
    2fc8:	0b3a0e03 	bleq	e867dc <_bss_end+0xe7575c>
    2fcc:	0b390b3b 	bleq	e45cc0 <_bss_end+0xe34c40>
    2fd0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2fd4:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    2fd8:	0000196c 	andeq	r1, r0, ip, ror #18
    2fdc:	3f012e14 	svccc	0x00012e14
    2fe0:	3a0e0319 	bcc	383c4c <_bss_end+0x372bcc>
    2fe4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2fe8:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    2fec:	3c0b3213 	sfmcc	f3, 4, [fp], {19}
    2ff0:	64196319 	ldrvs	r6, [r9], #-793	; 0xfffffce7
    2ff4:	00130113 	andseq	r0, r3, r3, lsl r1
    2ff8:	00051500 	andeq	r1, r5, r0, lsl #10
    2ffc:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    3000:	05160000 	ldreq	r0, [r6, #-0]
    3004:	00134900 	andseq	r4, r3, r0, lsl #18
    3008:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    300c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3010:	0b3b0b3a 	bleq	ec5d00 <_bss_end+0xeb4c80>
    3014:	0e6e0b39 	vmoveq.8	d14[5], r0
    3018:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    301c:	13011364 	movwne	r1, #4964	; 0x1364
    3020:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    3024:	03193f01 	tsteq	r9, #1, 30
    3028:	3b0b3a0e 	blcc	2d1868 <_bss_end+0x2c07e8>
    302c:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3030:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    3034:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    3038:	00130113 	andseq	r0, r3, r3, lsl r1
    303c:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    3040:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3044:	0b3b0b3a 	bleq	ec5d34 <_bss_end+0xeb4cb4>
    3048:	0e6e0b39 	vmoveq.8	d14[5], r0
    304c:	1364193c 	cmnne	r4, #60, 18	; 0xf0000
    3050:	00001301 	andeq	r1, r0, r1, lsl #6
    3054:	03000d1a 	movweq	r0, #3354	; 0xd1a
    3058:	3b0b3a0e 	blcc	2d1898 <_bss_end+0x2c0818>
    305c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3060:	000b3813 	andeq	r3, fp, r3, lsl r8
    3064:	00101b00 	andseq	r1, r0, r0, lsl #22
    3068:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    306c:	341c0000 	ldrcc	r0, [ip], #-0
    3070:	3a0e0300 	bcc	383c78 <_bss_end+0x372bf8>
    3074:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3078:	3f13490b 	svccc	0x0013490b
    307c:	00193c19 	andseq	r3, r9, r9, lsl ip
    3080:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    3084:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3088:	0b3b0b3a 	bleq	ec5d78 <_bss_end+0xeb4cf8>
    308c:	0e6e0b39 	vmoveq.8	d14[5], r0
    3090:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3094:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    3098:	00130119 	andseq	r0, r3, r9, lsl r1
    309c:	00341e00 	eorseq	r1, r4, r0, lsl #28
    30a0:	0b3a0803 	bleq	e850b4 <_bss_end+0xe74034>
    30a4:	0b390b3b 	bleq	e45d98 <_bss_end+0xe34d18>
    30a8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    30ac:	341f0000 	ldrcc	r0, [pc], #-0	; 30b4 <CPSR_IRQ_INHIBIT+0x3034>
    30b0:	3a0e0300 	bcc	383cb8 <_bss_end+0x372c38>
    30b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    30b8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    30bc:	20000018 	andcs	r0, r0, r8, lsl r0
    30c0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    30c4:	0b3a0e03 	bleq	e868d8 <_bss_end+0xe75858>
    30c8:	0b390b3b 	bleq	e45dbc <_bss_end+0xe34d3c>
    30cc:	01110e6e 	tsteq	r1, lr, ror #28
    30d0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    30d4:	00194296 	mulseq	r9, r6, r2
    30d8:	11010000 	mrsne	r0, (UNDEF: 1)
    30dc:	130e2501 	movwne	r2, #58625	; 0xe501
    30e0:	1b0e030b 	blne	383d14 <_bss_end+0x372c94>
    30e4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    30e8:	00171006 	andseq	r1, r7, r6
    30ec:	00240200 	eoreq	r0, r4, r0, lsl #4
    30f0:	0b3e0b0b 	bleq	f85d24 <_bss_end+0xf74ca4>
    30f4:	00000e03 	andeq	r0, r0, r3, lsl #28
    30f8:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    30fc:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    3100:	0b0b0024 	bleq	2c3198 <_bss_end+0x2b2118>
    3104:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    3108:	16050000 	strne	r0, [r5], -r0
    310c:	3a0e0300 	bcc	383d14 <_bss_end+0x372c94>
    3110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3114:	0013490b 	andseq	r4, r3, fp, lsl #18
    3118:	01040600 	tsteq	r4, r0, lsl #12
    311c:	196d0e03 	stmdbne	sp!, {r0, r1, r9, sl, fp}^
    3120:	0b0b0b3e 	bleq	2c5e20 <_bss_end+0x2b4da0>
    3124:	0b3a1349 	bleq	e87e50 <_bss_end+0xe76dd0>
    3128:	0b390b3b 	bleq	e45e1c <_bss_end+0xe34d9c>
    312c:	00001301 	andeq	r1, r0, r1, lsl #6
    3130:	03002807 	movweq	r2, #2055	; 0x807
    3134:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3138:	00340800 	eorseq	r0, r4, r0, lsl #16
    313c:	0b3a0e03 	bleq	e86950 <_bss_end+0xe758d0>
    3140:	0b390b3b 	bleq	e45e34 <_bss_end+0xe34db4>
    3144:	196c1349 	stmdbne	ip!, {r0, r3, r6, r8, r9, ip}^
    3148:	00001802 	andeq	r1, r0, r2, lsl #16
    314c:	0b000f09 	bleq	6d78 <CPSR_IRQ_INHIBIT+0x6cf8>
    3150:	0013490b 	andseq	r4, r3, fp, lsl #18
    3154:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
    3158:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    315c:	0b3b0b3a 	bleq	ec5e4c <_bss_end+0xeb4dcc>
    3160:	0e6e0b39 	vmoveq.8	d14[5], r0
    3164:	01111349 	tsteq	r1, r9, asr #6
    3168:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    316c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3170:	0b000013 	bleq	31c4 <CPSR_IRQ_INHIBIT+0x3144>
    3174:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    3178:	0b3b0b3a 	bleq	ec5e68 <_bss_end+0xeb4de8>
    317c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3180:	00001802 	andeq	r1, r0, r2, lsl #16
    3184:	0300340c 	movweq	r3, #1036	; 0x40c
    3188:	3b0b3a0e 	blcc	2d19c8 <_bss_end+0x2c0948>
    318c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3190:	00180213 	andseq	r0, r8, r3, lsl r2
    3194:	000f0d00 	andeq	r0, pc, r0, lsl #26
    3198:	00000b0b 	andeq	r0, r0, fp, lsl #22
    319c:	3f012e0e 	svccc	0x00012e0e
    31a0:	3a0e0319 	bcc	383e0c <_bss_end+0x372d8c>
    31a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31a8:	110e6e0b 	tstne	lr, fp, lsl #28
    31ac:	40061201 	andmi	r1, r6, r1, lsl #4
    31b0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    31b4:	00001301 	andeq	r1, r0, r1, lsl #6
    31b8:	3f012e0f 	svccc	0x00012e0f
    31bc:	3a0e0319 	bcc	383e28 <_bss_end+0x372da8>
    31c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31c4:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    31c8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    31cc:	97184006 	ldrls	r4, [r8, -r6]
    31d0:	00001942 	andeq	r1, r0, r2, asr #18
    31d4:	03003410 	movweq	r3, #1040	; 0x410
    31d8:	3b0b3a08 	blcc	2d1a00 <_bss_end+0x2c0980>
    31dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    31e0:	00180213 	andseq	r0, r8, r3, lsl r2
    31e4:	11010000 	mrsne	r0, (UNDEF: 1)
    31e8:	130e2501 	movwne	r2, #58625	; 0xe501
    31ec:	1b0e030b 	blne	383e20 <_bss_end+0x372da0>
    31f0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    31f4:	00171006 	andseq	r1, r7, r6
    31f8:	01390200 	teqeq	r9, r0, lsl #4
    31fc:	00001301 	andeq	r1, r0, r1, lsl #6
    3200:	03003403 	movweq	r3, #1027	; 0x403
    3204:	3b0b3a0e 	blcc	2d1a44 <_bss_end+0x2c09c4>
    3208:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    320c:	1c193c13 	ldcne	12, cr3, [r9], {19}
    3210:	0400000a 	streq	r0, [r0], #-10
    3214:	0b3a003a 	bleq	e83304 <_bss_end+0xe72284>
    3218:	0b390b3b 	bleq	e45f0c <_bss_end+0xe34e8c>
    321c:	00001318 	andeq	r1, r0, r8, lsl r3
    3220:	49010105 	stmdbmi	r1, {r0, r2, r8}
    3224:	00130113 	andseq	r0, r3, r3, lsl r1
    3228:	00210600 	eoreq	r0, r1, r0, lsl #12
    322c:	0b2f1349 	bleq	bc7f58 <_bss_end+0xbb6ed8>
    3230:	26070000 	strcs	r0, [r7], -r0
    3234:	00134900 	andseq	r4, r3, r0, lsl #18
    3238:	00240800 	eoreq	r0, r4, r0, lsl #16
    323c:	0b3e0b0b 	bleq	f85e70 <_bss_end+0xf74df0>
    3240:	00000e03 	andeq	r0, r0, r3, lsl #28
    3244:	47003409 	strmi	r3, [r0, -r9, lsl #8]
    3248:	0a000013 	beq	329c <CPSR_IRQ_INHIBIT+0x321c>
    324c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    3250:	0b3a0e03 	bleq	e86a64 <_bss_end+0xe759e4>
    3254:	0b390b3b 	bleq	e45f48 <_bss_end+0xe34ec8>
    3258:	01110e6e 	tsteq	r1, lr, ror #28
    325c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3260:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3264:	0b000013 	bleq	32b8 <CPSR_IRQ_INHIBIT+0x3238>
    3268:	08030005 	stmdaeq	r3, {r0, r2}
    326c:	0b3b0b3a 	bleq	ec5f5c <_bss_end+0xeb4edc>
    3270:	13490b39 	movtne	r0, #39737	; 0x9b39
    3274:	00001802 	andeq	r1, r0, r2, lsl #16
    3278:	0300340c 	movweq	r3, #1036	; 0x40c
    327c:	3b0b3a0e 	blcc	2d1abc <_bss_end+0x2c0a3c>
    3280:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3284:	00180213 	andseq	r0, r8, r3, lsl r2
    3288:	010b0d00 	tsteq	fp, r0, lsl #26
    328c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3290:	340e0000 	strcc	r0, [lr], #-0
    3294:	3a080300 	bcc	203e9c <_bss_end+0x1f2e1c>
    3298:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    329c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    32a0:	0f000018 	svceq	0x00000018
    32a4:	0b0b000f 	bleq	2c32e8 <_bss_end+0x2b2268>
    32a8:	00001349 	andeq	r1, r0, r9, asr #6
    32ac:	00002610 	andeq	r2, r0, r0, lsl r6
    32b0:	000f1100 	andeq	r1, pc, r0, lsl #2
    32b4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    32b8:	0b002412 	bleq	c308 <_ZN5IFile5IOCtlE16NIOCtl_OperationPv+0x10>
    32bc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    32c0:	13000008 	movwne	r0, #8
    32c4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    32c8:	0b3b0b3a 	bleq	ec5fb8 <_bss_end+0xeb4f38>
    32cc:	13490b39 	movtne	r0, #39737	; 0x9b39
    32d0:	00001802 	andeq	r1, r0, r2, lsl #16
    32d4:	3f012e14 	svccc	0x00012e14
    32d8:	3a0e0319 	bcc	383f44 <_bss_end+0x372ec4>
    32dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32e0:	490e6e0b 	stmdbmi	lr, {r0, r1, r3, r9, sl, fp, sp, lr}
    32e4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    32e8:	97184006 	ldrls	r4, [r8, -r6]
    32ec:	13011942 	movwne	r1, #6466	; 0x1942
    32f0:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    32f4:	03193f01 	tsteq	r9, #1, 30
    32f8:	3b0b3a0e 	blcc	2d1b38 <_bss_end+0x2c0ab8>
    32fc:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3300:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    3304:	96184006 	ldrls	r4, [r8], -r6
    3308:	00001942 	andeq	r1, r0, r2, asr #18
    330c:	01110100 	tsteq	r1, r0, lsl #2
    3310:	0b130e25 	bleq	4c6bac <_bss_end+0x4b5b2c>
    3314:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    3318:	01111755 	tsteq	r1, r5, asr r7
    331c:	00001710 	andeq	r1, r0, r0, lsl r7
    3320:	03013902 	movweq	r3, #6402	; 0x1902
    3324:	3b0b3a08 	blcc	2d1b4c <_bss_end+0x2c0acc>
    3328:	0013010b 	andseq	r0, r3, fp, lsl #2
    332c:	00390300 	eorseq	r0, r9, r0, lsl #6
    3330:	0b3a0e03 	bleq	e86b44 <_bss_end+0xe75ac4>
    3334:	0b39053b 	bleq	e44828 <_bss_end+0xe337a8>
    3338:	00190189 	andseq	r0, r9, r9, lsl #3
    333c:	003a0400 	eorseq	r0, sl, r0, lsl #8
    3340:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3344:	13180b39 	tstne	r8, #58368	; 0xe400
    3348:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    334c:	3a0e0301 	bcc	383f58 <_bss_end+0x372ed8>
    3350:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3354:	0013010b 	andseq	r0, r3, fp, lsl #2
    3358:	01020600 	tsteq	r2, r0, lsl #12
    335c:	0b0b0e03 	bleq	2c6b70 <_bss_end+0x2b5af0>
    3360:	0b3b0b3a 	bleq	ec6050 <_bss_end+0xeb4fd0>
    3364:	13010b39 	movwne	r0, #6969	; 0x1b39
    3368:	0d070000 	stceq	0, cr0, [r7, #-0]
    336c:	3a0e0300 	bcc	383f74 <_bss_end+0x372ef4>
    3370:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3374:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    3378:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    337c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    3380:	0b3a0e03 	bleq	e86b94 <_bss_end+0xe75b14>
    3384:	0b390b3b 	bleq	e46078 <_bss_end+0xe34ff8>
    3388:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    338c:	1963193c 	stmdbne	r3!, {r2, r3, r4, r5, r8, fp, ip}^
    3390:	13011364 	movwne	r1, #4964	; 0x1364
    3394:	05090000 	streq	r0, [r9, #-0]
    3398:	34134900 	ldrcc	r4, [r3], #-2304	; 0xfffff700
    339c:	0a000019 	beq	3408 <CPSR_IRQ_INHIBIT+0x3388>
    33a0:	13490005 	movtne	r0, #36869	; 0x9005
    33a4:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    33a8:	03193f01 	tsteq	r9, #1, 30
    33ac:	3b0b3a0e 	blcc	2d1bec <_bss_end+0x2c0b6c>
    33b0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    33b4:	64193c0e 	ldrvs	r3, [r9], #-3086	; 0xfffff3f2
    33b8:	00130113 	andseq	r0, r3, r3, lsl r1
    33bc:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    33c0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    33c4:	0b3b0b3a 	bleq	ec60b4 <_bss_end+0xeb5034>
    33c8:	0e6e0b39 	vmoveq.8	d14[5], r0
    33cc:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    33d0:	13011364 	movwne	r1, #4964	; 0x1364
    33d4:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    33d8:	03193f01 	tsteq	r9, #1, 30
    33dc:	3b0b3a0e 	blcc	2d1c1c <_bss_end+0x2c0b9c>
    33e0:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    33e4:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    33e8:	64193c0b 	ldrvs	r3, [r9], #-3083	; 0xfffff3f5
    33ec:	00130113 	andseq	r0, r3, r3, lsl r1
    33f0:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
    33f4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    33f8:	0b3b0b3a 	bleq	ec60e8 <_bss_end+0xeb5068>
    33fc:	0e6e0b39 	vmoveq.8	d14[5], r0
    3400:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    3404:	13011364 	movwne	r1, #4964	; 0x1364
    3408:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    340c:	03193f01 	tsteq	r9, #1, 30
    3410:	3b0b3a0e 	blcc	2d1c50 <_bss_end+0x2c0bd0>
    3414:	6e0b390b 	vmlavs.f16	s6, s22, s22	; <UNPREDICTABLE>
    3418:	3213490e 	andscc	r4, r3, #229376	; 0x38000
    341c:	63193c0b 	tstvs	r9, #2816	; 0xb00
    3420:	01136419 	tsteq	r3, r9, lsl r4
    3424:	10000013 	andne	r0, r0, r3, lsl r0
    3428:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    342c:	0b3a0e03 	bleq	e86c40 <_bss_end+0xe75bc0>
    3430:	0b390b3b 	bleq	e46124 <_bss_end+0xe350a4>
    3434:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    3438:	193c0b32 	ldmdbne	ip!, {r1, r4, r5, r8, r9, fp}
    343c:	00001364 	andeq	r1, r0, r4, ror #6
    3440:	49002611 	stmdbmi	r0, {r0, r4, r9, sl, sp}
    3444:	12000013 	andne	r0, r0, #19
    3448:	0b3a0008 	bleq	e83470 <_bss_end+0xe723f0>
    344c:	0b390b3b 	bleq	e46140 <_bss_end+0xe350c0>
    3450:	00001318 	andeq	r1, r0, r8, lsl r3
    3454:	3f012e13 	svccc	0x00012e13
    3458:	3a0e0319 	bcc	3840c4 <_bss_end+0x373044>
    345c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3460:	870e6e0b 	strhi	r6, [lr, -fp, lsl #28]
    3464:	193c1901 	ldmdbne	ip!, {r0, r8, fp, ip}
    3468:	00001301 	andeq	r1, r0, r1, lsl #6
    346c:	03001614 	movweq	r1, #1556	; 0x614
    3470:	3b0b3a0e 	blcc	2d1cb0 <_bss_end+0x2c0c30>
    3474:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3478:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    347c:	0e030002 	cdpeq	0, 0, cr0, cr3, cr2, {0}
    3480:	0000193c 	andeq	r1, r0, ip, lsr r9
    3484:	03003916 	movweq	r3, #2326	; 0x916
    3488:	3b0b3a0e 	blcc	2d1cc8 <_bss_end+0x2c0c48>
    348c:	000b3905 	andeq	r3, fp, r5, lsl #18
    3490:	01391700 	teqeq	r9, r0, lsl #14
    3494:	0b3a0e03 	bleq	e86ca8 <_bss_end+0xe75c28>
    3498:	0b39053b 	bleq	e4498c <_bss_end+0xe3390c>
    349c:	00001301 	andeq	r1, r0, r1, lsl #6
    34a0:	0b002418 	bleq	c508 <_ZN10CGPIO_File4ReadEPcj+0x24>
    34a4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    34a8:	19000008 	stmdbne	r0, {r3}
    34ac:	0b0b0024 	bleq	2c3544 <_bss_end+0x2b24c4>
    34b0:	0e030b3e 	vmoveq.16	d3[0], r0
    34b4:	3b1a0000 	blcc	6834bc <_bss_end+0x67243c>
    34b8:	000e0300 	andeq	r0, lr, r0, lsl #6
    34bc:	000f1b00 	andeq	r1, pc, r0, lsl #22
    34c0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    34c4:	0b000f1c 	bleq	713c <CPSR_IRQ_INHIBIT+0x70bc>
    34c8:	0013490b 	andseq	r4, r3, fp, lsl #18
    34cc:	00101d00 	andseq	r1, r0, r0, lsl #26
    34d0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    34d4:	421e0000 	andsmi	r0, lr, #0
    34d8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    34dc:	1f000013 	svcne	0x00000013
    34e0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    34e4:	0b3a0e03 	bleq	e86cf8 <_bss_end+0xe75c78>
    34e8:	0b390b3b 	bleq	e461dc <_bss_end+0xe3515c>
    34ec:	13490e6e 	movtne	r0, #40558	; 0x9e6e
    34f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    34f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    34f8:	00130119 	andseq	r0, r3, r9, lsl r1
    34fc:	00052000 	andeq	r2, r5, r0
    3500:	0b3a0803 	bleq	e85514 <_bss_end+0xe74494>
    3504:	0b390b3b 	bleq	e461f8 <_bss_end+0xe35178>
    3508:	17021349 	strne	r1, [r2, -r9, asr #6]
    350c:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
    3510:	82892100 	addhi	r2, r9, #0, 2
    3514:	01110101 	tsteq	r1, r1, lsl #2
    3518:	31194295 			; <UNDEFINED> instruction: 0x31194295
    351c:	22000013 	andcs	r0, r0, #19
    3520:	0001828a 	andeq	r8, r1, sl, lsl #5
    3524:	42911802 	addsmi	r1, r1, #131072	; 0x20000
    3528:	23000018 	movwcs	r0, #24
    352c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    3530:	0e6e193c 			; <UNDEFINED> instruction: 0x0e6e193c
    3534:	0b3a0e03 	bleq	e86d48 <_bss_end+0xe75cc8>
    3538:	0b390b3b 	bleq	e4622c <_bss_end+0xe351ac>
    353c:	01000000 	mrseq	r0, (UNDEF: 0)
    3540:	06100011 			; <UNDEFINED> instruction: 0x06100011
    3544:	01120111 	tsteq	r2, r1, lsl r1
    3548:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    354c:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    3550:	01000000 	mrseq	r0, (UNDEF: 0)
    3554:	06100011 			; <UNDEFINED> instruction: 0x06100011
    3558:	01120111 	tsteq	r2, r1, lsl r1
    355c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    3560:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    3564:	01000000 	mrseq	r0, (UNDEF: 0)
    3568:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    356c:	0e030b13 	vmoveq.32	d3[0], r0
    3570:	17100e1b 			; <UNDEFINED> instruction: 0x17100e1b
    3574:	24020000 	strcs	r0, [r2], #-0
    3578:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    357c:	0008030b 	andeq	r0, r8, fp, lsl #6
    3580:	00240300 	eoreq	r0, r4, r0, lsl #6
    3584:	0b3e0b0b 	bleq	f861b8 <_bss_end+0xf75138>
    3588:	00000e03 	andeq	r0, r0, r3, lsl #28
    358c:	03010404 	movweq	r0, #5124	; 0x1404
    3590:	0b0b3e0e 	bleq	2d2dd0 <_bss_end+0x2c1d50>
    3594:	3a13490b 	bcc	4d59c8 <_bss_end+0x4c4948>
    3598:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    359c:	0013010b 	andseq	r0, r3, fp, lsl #2
    35a0:	00280500 	eoreq	r0, r8, r0, lsl #10
    35a4:	0b1c0e03 	bleq	706db8 <_bss_end+0x6f5d38>
    35a8:	13060000 	movwne	r0, #24576	; 0x6000
    35ac:	0b0e0301 	bleq	3841b8 <_bss_end+0x373138>
    35b0:	3b0b3a0b 	blcc	2d1de4 <_bss_end+0x2c0d64>
    35b4:	010b3905 	tsteq	fp, r5, lsl #18
    35b8:	07000013 	smladeq	r0, r3, r0, r0
    35bc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    35c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    35c4:	13490b39 	movtne	r0, #39737	; 0x9b39
    35c8:	00000b38 	andeq	r0, r0, r8, lsr fp
    35cc:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
    35d0:	09000013 	stmdbeq	r0, {r0, r1, r4}
    35d4:	13490101 	movtne	r0, #37121	; 0x9101
    35d8:	00001301 	andeq	r1, r0, r1, lsl #6
    35dc:	4900210a 	stmdbmi	r0, {r1, r3, r8, sp}
    35e0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    35e4:	00340b00 	eorseq	r0, r4, r0, lsl #22
    35e8:	0b3a0e03 	bleq	e86dfc <_bss_end+0xe75d7c>
    35ec:	0b39053b 	bleq	e44ae0 <_bss_end+0xe33a60>
    35f0:	0a1c1349 	beq	70831c <_bss_end+0x6f729c>
    35f4:	150c0000 	strne	r0, [ip, #-0]
    35f8:	00192700 	andseq	r2, r9, r0, lsl #14
    35fc:	000f0d00 	andeq	r0, pc, r0, lsl #26
    3600:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    3604:	040e0000 	streq	r0, [lr], #-0
    3608:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
    360c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    3610:	3b0b3a13 	blcc	2d1e64 <_bss_end+0x2c0de4>
    3614:	010b3905 	tsteq	fp, r5, lsl #18
    3618:	0f000013 	svceq	0x00000013
    361c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    3620:	0b3b0b3a 	bleq	ec6310 <_bss_end+0xeb5290>
    3624:	13490b39 	movtne	r0, #39737	; 0x9b39
    3628:	21100000 	tstcs	r0, r0
    362c:	11000000 	mrsne	r0, (UNDEF: 0)
    3630:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3634:	0b3b0b3a 	bleq	ec6324 <_bss_end+0xeb52a4>
    3638:	13490b39 	movtne	r0, #39737	; 0x9b39
    363c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    3640:	34120000 	ldrcc	r0, [r2], #-0
    3644:	3a134700 	bcc	4d524c <_bss_end+0x4c41cc>
    3648:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    364c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3650:	00000018 	andeq	r0, r0, r8, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	000080ac 	andeq	r8, r0, ip, lsr #1
  14:	000000d8 	ldrdeq	r0, [r0], -r8
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	012a0002 			; <UNDEFINED> instruction: 0x012a0002
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00008184 	andeq	r8, r0, r4, lsl #3
  34:	0000088c 	andeq	r0, r0, ip, lsl #17
	...
  40:	0000002c 	andeq	r0, r0, ip, lsr #32
  44:	0a430002 	beq	10c0054 <_bss_end+0x10aefd4>
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	00008a10 	andeq	r8, r0, r0, lsl sl
  54:	000006c8 	andeq	r0, r0, r8, asr #13
  58:	000090d8 	ldrdeq	r9, [r0], -r8
  5c:	00000034 	andeq	r0, r0, r4, lsr r0
  60:	0000910c 	andeq	r9, r0, ip, lsl #2
  64:	00000048 	andeq	r0, r0, r8, asr #32
	...
  70:	00000034 	andeq	r0, r0, r4, lsr r0
  74:	14b90002 	ldrtne	r0, [r9], #2
  78:	00040000 	andeq	r0, r4, r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	00009154 	andeq	r9, r0, r4, asr r1
  84:	00000648 	andeq	r0, r0, r8, asr #12
  88:	0000979c 	muleq	r0, ip, r7
  8c:	00000038 	andeq	r0, r0, r8, lsr r0
  90:	000097d4 	ldrdeq	r9, [r0], -r4
  94:	00000088 	andeq	r0, r0, r8, lsl #1
  98:	0000985c 	andeq	r9, r0, ip, asr r8
  9c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  a8:	0000003c 	andeq	r0, r0, ip, lsr r0
  ac:	1b710002 	blne	1c400bc <_bss_end+0x1c2f03c>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	00009888 	andeq	r9, r0, r8, lsl #17
  bc:	0000127c 	andeq	r1, r0, ip, ror r2
  c0:	0000ab04 	andeq	sl, r0, r4, lsl #22
  c4:	00000030 	andeq	r0, r0, r0, lsr r0
  c8:	0000ab34 	andeq	sl, r0, r4, lsr fp
  cc:	00000070 	andeq	r0, r0, r0, ror r0
  d0:	0000aba4 	andeq	sl, r0, r4, lsr #23
  d4:	00000070 	andeq	r0, r0, r0, ror r0
  d8:	0000ac14 	andeq	sl, r0, r4, lsl ip
  dc:	0000006c 	andeq	r0, r0, ip, rrx
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	2c380002 	ldccs	0, cr0, [r8], #-8
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	0000ac80 	andeq	sl, r0, r0, lsl #25
  fc:	00000264 	andeq	r0, r0, r4, ror #4
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	31730002 	cmncc	r3, r2
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	0000aee4 	andeq	sl, r0, r4, ror #29
 11c:	000005c4 	andeq	r0, r0, r4, asr #11
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	38790002 	ldmdacc	r9!, {r1}^
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	0000b4a8 	andeq	fp, r0, r8, lsr #9
 13c:	00000290 	muleq	r0, r0, r2
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	3e240002 	cdpcc	0, 2, cr0, cr4, cr2, {0}
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	0000b738 	andeq	fp, r0, r8, lsr r7
 15c:	00000280 	andeq	r0, r0, r0, lsl #5
	...
 168:	0000002c 	andeq	r0, r0, ip, lsr #32
 16c:	42100002 	andsmi	r0, r0, #2
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	0000b9b8 			; <UNDEFINED> instruction: 0x0000b9b8
 17c:	0000085c 	andeq	r0, r0, ip, asr r8
 180:	0000c214 	andeq	ip, r0, r4, lsl r2
 184:	0000003c 	andeq	r0, r0, ip, lsr r0
 188:	0000c250 	andeq	ip, r0, r0, asr r2
 18c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 198:	000001c4 	andeq	r0, r0, r4, asr #3
 19c:	4ac20002 	bmi	ff0801ac <_bss_end+0xff06f12c>
 1a0:	00040000 	andeq	r0, r4, r0
 1a4:	00000000 	andeq	r0, r0, r0
 1a8:	0000c27c 	andeq	ip, r0, ip, ror r2
 1ac:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b0:	0000c2a8 	andeq	ip, r0, r8, lsr #5
 1b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b8:	0000c2d4 	ldrdeq	ip, [r0], -r4
 1bc:	00000024 	andeq	r0, r0, r4, lsr #32
 1c0:	0000c2f8 	strdeq	ip, [r0], -r8
 1c4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1c8:	0000c324 	andeq	ip, r0, r4, lsr #6
 1cc:	00000030 	andeq	r0, r0, r0, lsr r0
 1d0:	0000ab04 	andeq	sl, r0, r4, lsl #22
 1d4:	00000030 	andeq	r0, r0, r0, lsr r0
 1d8:	0000c354 	andeq	ip, r0, r4, asr r3
 1dc:	00000034 	andeq	r0, r0, r4, lsr r0
 1e0:	0000c388 	andeq	ip, r0, r8, lsl #7
 1e4:	00000034 	andeq	r0, r0, r4, lsr r0
 1e8:	0000c3bc 			; <UNDEFINED> instruction: 0x0000c3bc
 1ec:	00000034 	andeq	r0, r0, r4, lsr r0
 1f0:	0000c3f0 	strdeq	ip, [r0], -r0
 1f4:	0000007c 	andeq	r0, r0, ip, ror r0
 1f8:	0000c46c 	andeq	ip, r0, ip, ror #8
 1fc:	00000044 	andeq	r0, r0, r4, asr #32
 200:	0000c4b0 			; <UNDEFINED> instruction: 0x0000c4b0
 204:	00000034 	andeq	r0, r0, r4, lsr r0
 208:	0000c4e4 	andeq	ip, r0, r4, ror #9
 20c:	00000080 	andeq	r0, r0, r0, lsl #1
 210:	0000c564 	andeq	ip, r0, r4, ror #10
 214:	0000007c 	andeq	r0, r0, ip, ror r0
 218:	0000c5e0 	andeq	ip, r0, r0, ror #11
 21c:	0000009c 	muleq	r0, ip, r0
 220:	0000c67c 	andeq	ip, r0, ip, ror r6
 224:	0000002c 	andeq	r0, r0, ip, lsr #32
 228:	0000c6a8 	andeq	ip, r0, r8, lsr #13
 22c:	00000020 	andeq	r0, r0, r0, lsr #32
 230:	0000c6c8 	andeq	ip, r0, r8, asr #13
 234:	00000158 	andeq	r0, r0, r8, asr r1
 238:	0000c820 	andeq	ip, r0, r0, lsr #16
 23c:	0000004c 	andeq	r0, r0, ip, asr #32
 240:	0000c86c 	andeq	ip, r0, ip, ror #16
 244:	00000044 	andeq	r0, r0, r4, asr #32
 248:	0000c8b0 			; <UNDEFINED> instruction: 0x0000c8b0
 24c:	00000034 	andeq	r0, r0, r4, lsr r0
 250:	0000c8e4 	andeq	ip, r0, r4, ror #17
 254:	0000002c 	andeq	r0, r0, ip, lsr #32
 258:	0000c910 	andeq	ip, r0, r0, lsl r9
 25c:	00000068 	andeq	r0, r0, r8, rrx
 260:	0000c978 	andeq	ip, r0, r8, ror r9
 264:	00000048 	andeq	r0, r0, r8, asr #32
 268:	0000c9c0 	andeq	ip, r0, r0, asr #19
 26c:	00000044 	andeq	r0, r0, r4, asr #32
 270:	0000ca04 	andeq	ip, r0, r4, lsl #20
 274:	00000020 	andeq	r0, r0, r0, lsr #32
 278:	0000ca24 	andeq	ip, r0, r4, lsr #20
 27c:	00000068 	andeq	r0, r0, r8, rrx
 280:	0000ca8c 	andeq	ip, r0, ip, lsl #21
 284:	00000048 	andeq	r0, r0, r8, asr #32
 288:	0000cad4 	ldrdeq	ip, [r0], -r4
 28c:	00000044 	andeq	r0, r0, r4, asr #32
 290:	0000cb18 	andeq	ip, r0, r8, lsl fp
 294:	00000034 	andeq	r0, r0, r4, lsr r0
 298:	0000cb4c 	andeq	ip, r0, ip, asr #22
 29c:	00000058 	andeq	r0, r0, r8, asr r0
 2a0:	0000cba4 	andeq	ip, r0, r4, lsr #23
 2a4:	00000070 	andeq	r0, r0, r0, ror r0
 2a8:	0000cc14 	andeq	ip, r0, r4, lsl ip
 2ac:	00000058 	andeq	r0, r0, r8, asr r0
 2b0:	0000cc6c 	andeq	ip, r0, ip, ror #24
 2b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2b8:	0000cc98 	muleq	r0, r8, ip
 2bc:	00000020 	andeq	r0, r0, r0, lsr #32
 2c0:	0000ccb8 			; <UNDEFINED> instruction: 0x0000ccb8
 2c4:	0000006c 	andeq	r0, r0, ip, rrx
 2c8:	0000cd24 	andeq	ip, r0, r4, lsr #26
 2cc:	00000048 	andeq	r0, r0, r8, asr #32
 2d0:	0000cd6c 	andeq	ip, r0, ip, ror #26
 2d4:	00000044 	andeq	r0, r0, r4, asr #32
 2d8:	0000cdb0 			; <UNDEFINED> instruction: 0x0000cdb0
 2dc:	00000034 	andeq	r0, r0, r4, lsr r0
 2e0:	0000cde4 	andeq	ip, r0, r4, ror #27
 2e4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2e8:	0000ce10 	andeq	ip, r0, r0, lsl lr
 2ec:	00000070 	andeq	r0, r0, r0, ror r0
 2f0:	0000ce80 	andeq	ip, r0, r0, lsl #29
 2f4:	00000058 	andeq	r0, r0, r8, asr r0
 2f8:	0000ced8 	ldrdeq	ip, [r0], -r8
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	0000cf04 	andeq	ip, r0, r4, lsl #30
 304:	00000020 	andeq	r0, r0, r0, lsr #32
 308:	0000cf24 	andeq	ip, r0, r4, lsr #30
 30c:	0000006c 	andeq	r0, r0, ip, rrx
 310:	0000cf90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
 314:	0000003c 	andeq	r0, r0, ip, lsr r0
 318:	0000cfcc 	andeq	ip, r0, ip, asr #31
 31c:	00000044 	andeq	r0, r0, r4, asr #32
 320:	0000d010 	andeq	sp, r0, r0, lsl r0
 324:	00000034 	andeq	r0, r0, r4, lsr r0
 328:	0000d044 	andeq	sp, r0, r4, asr #32
 32c:	000000e8 	andeq	r0, r0, r8, ror #1
 330:	0000d12c 	andeq	sp, r0, ip, lsr #2
 334:	0000002c 	andeq	r0, r0, ip, lsr #32
 338:	0000d158 	andeq	sp, r0, r8, asr r1
 33c:	00000058 	andeq	r0, r0, r8, asr r0
 340:	0000d1b0 			; <UNDEFINED> instruction: 0x0000d1b0
 344:	0000002c 	andeq	r0, r0, ip, lsr #32
 348:	0000d1dc 	ldrdeq	sp, [r0], -ip
 34c:	00000020 	andeq	r0, r0, r0, lsr #32
 350:	0000d1fc 	strdeq	sp, [r0], -ip
 354:	00000084 	andeq	r0, r0, r4, lsl #1
	...
 360:	0000001c 	andeq	r0, r0, ip, lsl r0
 364:	73880002 	orrvc	r0, r8, #2
 368:	00040000 	andeq	r0, r4, r0
 36c:	00000000 	andeq	r0, r0, r0
 370:	0000d280 	andeq	sp, r0, r0, lsl #5
 374:	000002e4 	andeq	r0, r0, r4, ror #5
	...
 380:	0000001c 	andeq	r0, r0, ip, lsl r0
 384:	7eab0002 	cdpvc	0, 10, cr0, cr11, cr2, {0}
 388:	00040000 	andeq	r0, r4, r0
 38c:	00000000 	andeq	r0, r0, r0
 390:	0000d564 	andeq	sp, r0, r4, ror #10
 394:	00000058 	andeq	r0, r0, r8, asr r0
	...
 3a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a4:	8e470002 	cdphi	0, 4, cr0, cr7, cr2, {0}
 3a8:	00040000 	andeq	r0, r4, r0
 3ac:	00000000 	andeq	r0, r0, r0
 3b0:	0000d5bc 			; <UNDEFINED> instruction: 0x0000d5bc
 3b4:	0000036c 	andeq	r0, r0, ip, ror #6
	...
 3c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c4:	93420002 	movtls	r0, #8194	; 0x2002
 3c8:	00040000 	andeq	r0, r4, r0
 3cc:	00000000 	andeq	r0, r0, r0
 3d0:	0000d928 	andeq	sp, r0, r8, lsr #18
 3d4:	000002a4 	andeq	r0, r0, r4, lsr #5
	...
 3e0:	0000002c 	andeq	r0, r0, ip, lsr #32
 3e4:	977a0002 	ldrbls	r0, [sl, -r2]!
 3e8:	00040000 	andeq	r0, r4, r0
 3ec:	00000000 	andeq	r0, r0, r0
 3f0:	0000dbcc 	andeq	sp, r0, ip, asr #23
 3f4:	00000bd4 	ldrdeq	r0, [r0], -r4
 3f8:	0000e7a0 	andeq	lr, r0, r0, lsr #15
 3fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 400:	0000e7cc 	andeq	lr, r0, ip, asr #15
 404:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 410:	0000001c 	andeq	r0, r0, ip, lsl r0
 414:	a88e0002 	stmge	lr, {r1}
 418:	00040000 	andeq	r0, r4, r0
 41c:	00000000 	andeq	r0, r0, r0
 420:	0000e7f8 	strdeq	lr, [r0], -r8
 424:	0000005c 	andeq	r0, r0, ip, asr r0
	...
 430:	00000024 	andeq	r0, r0, r4, lsr #32
 434:	a8b40002 	ldmge	r4!, {r1}
 438:	00040000 	andeq	r0, r4, r0
 43c:	00000000 	andeq	r0, r0, r0
 440:	00008000 	andeq	r8, r0, r0
 444:	000000ac 	andeq	r0, r0, ip, lsr #1
 448:	0000e854 	andeq	lr, r0, r4, asr r8
 44c:	00000070 	andeq	r0, r0, r0, ror r0
	...
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	a8d60002 	ldmge	r6, {r1}^
 460:	00040000 	andeq	r0, r4, r0
 464:	00000000 	andeq	r0, r0, r0
 468:	0000e8c4 	andeq	lr, r0, r4, asr #17
 46c:	00000118 	andeq	r0, r0, r8, lsl r1
	...
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	aa250002 	bge	94048c <_bss_end+0x92f40c>
 480:	00040000 	andeq	r0, r4, r0
 484:	00000000 	andeq	r0, r0, r0
 488:	0000e9dc 	ldrdeq	lr, [r0], -ip
 48c:	000004fc 	strdeq	r0, [r0], -ip
	...
 498:	0000001c 	andeq	r0, r0, ip, lsl r0
 49c:	aeee0002 	cdpge	0, 14, cr0, cr14, cr2, {0}
 4a0:	00040000 	andeq	r0, r4, r0
 4a4:	00000000 	andeq	r0, r0, r0
 4a8:	0000eed8 	ldrdeq	lr, [r0], -r8
 4ac:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	b1ab0002 			; <UNDEFINED> instruction: 0xb1ab0002
 4c0:	00040000 	andeq	r0, r4, r0
 4c4:	00000000 	andeq	r0, r0, r0
 4c8:	0000f064 	andeq	pc, r0, r4, rrx
 4cc:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
	...
 4d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4dc:	b4dd0002 	ldrblt	r0, [sp], #2
 4e0:	00040000 	andeq	r0, r4, r0
 4e4:	00000000 	andeq	r0, r0, r0
 4e8:	0000f51c 	andeq	pc, r0, ip, lsl r5	; <UNPREDICTABLE>
 4ec:	00000004 	andeq	r0, r0, r4
	...
 4f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4fc:	b87a0002 	ldmdalt	sl!, {r1}^
 500:	00040000 	andeq	r0, r4, r0
 504:	00000000 	andeq	r0, r0, r0
 508:	0000f520 	andeq	pc, r0, r0, lsr #10
 50c:	0000020c 	andeq	r0, r0, ip, lsl #4
	...
 518:	0000001c 	andeq	r0, r0, ip, lsl r0
 51c:	b8a00002 	stmialt	r0!, {r1}
 520:	00040000 	andeq	r0, r4, r0
 524:	00000000 	andeq	r0, r0, r0
 528:	0000f72c 	andeq	pc, r0, ip, lsr #14
 52c:	00000004 	andeq	r0, r0, r4
	...
 538:	00000014 	andeq	r0, r0, r4, lsl r0
 53c:	b8c60002 	stmialt	r6, {r1}^
 540:	00040000 	andeq	r0, r4, r0
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000000a5 	andeq	r0, r0, r5, lsr #1
       4:	006c0003 	rsbeq	r0, ip, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2f010000 	svccs	0x00010000
      1c:	2f746e6d 	svccs	0x00746e6d
      20:	73552f63 	cmpvc	r5, #396	; 0x18c
      24:	2f737265 	svccs	0x00737265
      28:	6162754b 	cmnvs	r2, fp, asr #10
      2c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
      30:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
      34:	5a2f7374 	bpl	bdce0c <_bss_end+0xbcbd8c>
      38:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; fffffeac <_bss_end+0xfffeee2c>
      3c:	2f657461 	svccs	0x00657461
      40:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
      44:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
      48:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
      4c:	2f433249 	svccs	0x00433249
      50:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
      54:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
      58:	00006372 	andeq	r6, r0, r2, ror r3
      5c:	2e787863 	cdpcs	8, 7, cr7, cr8, cr3, {3}
      60:	00707063 	rsbseq	r7, r0, r3, rrx
      64:	3c000001 	stccc	0, cr0, [r0], {1}
      68:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
      6c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
      70:	0000003e 	andeq	r0, r0, lr, lsr r0
      74:	05050000 	streq	r0, [r5, #-0]
      78:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
      7c:	03000080 	movweq	r0, #128	; 0x80
      80:	1105010a 	tstne	r5, sl, lsl #2
      84:	4a100583 	bmi	401698 <_bss_end+0x3f0618>
      88:	85830505 	strhi	r0, [r3, #1285]	; 0x505
      8c:	05831305 	streq	r1, [r3, #773]	; 0x305
      90:	83856705 	orrhi	r6, r5, #1310720	; 0x140000
      94:	4c860105 	stfmis	f0, [r6], {5}
      98:	4c854c85 	stcmi	12, cr4, [r5], {133}	; 0x85
      9c:	00050585 	andeq	r0, r5, r5, lsl #11
      a0:	4b010402 	blmi	410b0 <_bss_end+0x30030>
      a4:	01000202 	tsteq	r0, r2, lsl #4
      a8:	0003cd01 	andeq	ip, r3, r1, lsl #26
      ac:	2d000300 	stccs	3, cr0, [r0, #-0]
      b0:	02000001 	andeq	r0, r0, #1
      b4:	0d0efb01 	vstreq	d15, [lr, #-4]
      b8:	01010100 	mrseq	r0, (UNDEF: 17)
      bc:	00000001 	andeq	r0, r0, r1
      c0:	01000001 	tsteq	r0, r1
      c4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
      c8:	552f632f 	strpl	r6, [pc, #-815]!	; fffffda1 <_bss_end+0xfffeed21>
      cc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
      d0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
      d4:	6f442f61 	svcvs	0x00442f61
      d8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
      dc:	2f73746e 	svccs	0x0073746e
      e0:	6f72655a 	svcvs	0x0072655a
      e4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
      e8:	6178652f 	cmnvs	r8, pc, lsr #10
      ec:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
      f0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
      f4:	4332492d 	teqmi	r2, #737280	; 0xb4000
      f8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
      fc:	2f6c656e 	svccs	0x006c656e
     100:	2f637273 	svccs	0x00637273
     104:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     108:	00737265 	rsbseq	r7, r3, r5, ror #4
     10c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
     110:	552f632f 	strpl	r6, [pc, #-815]!	; fffffde9 <_bss_end+0xfffeed69>
     114:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     118:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
     11c:	6f442f61 	svcvs	0x00442f61
     120:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     124:	2f73746e 	svccs	0x0073746e
     128:	6f72655a 	svcvs	0x0072655a
     12c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
     130:	6178652f 	cmnvs	r8, pc, lsr #10
     134:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     138:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
     13c:	4332492d 	teqmi	r2, #737280	; 0xb4000
     140:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     144:	2f6c656e 	svccs	0x006c656e
     148:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     14c:	2f656475 	svccs	0x00656475
     150:	72616f62 	rsbvc	r6, r1, #392	; 0x188
     154:	70722f64 	rsbsvc	r2, r2, r4, ror #30
     158:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
     15c:	2f006c61 	svccs	0x00006c61
     160:	2f746e6d 	svccs	0x00746e6d
     164:	73552f63 	cmpvc	r5, #396	; 0x18c
     168:	2f737265 	svccs	0x00737265
     16c:	6162754b 	cmnvs	r2, fp, asr #10
     170:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     174:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     178:	5a2f7374 	bpl	bdcf50 <_bss_end+0xbcbed0>
     17c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; fffffff0 <_bss_end+0xfffeef70>
     180:	2f657461 	svccs	0x00657461
     184:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     188:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     18c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     190:	2f433249 	svccs	0x00433249
     194:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     198:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
     19c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1a0:	642f6564 	strtvs	r6, [pc], #-1380	; 1a8 <CPSR_IRQ_INHIBIT+0x128>
     1a4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     1a8:	00007372 	andeq	r7, r0, r2, ror r3
     1ac:	6f697067 	svcvs	0x00697067
     1b0:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
     1b4:	00000100 	andeq	r0, r0, r0, lsl #2
     1b8:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
     1bc:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     1c0:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
     1c4:	00020068 	andeq	r0, r2, r8, rrx
     1c8:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     1cc:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     1d0:	69000003 	stmdbvs	r0, {r0, r1}
     1d4:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
     1d8:	00682e66 	rsbeq	r2, r8, r6, ror #28
     1dc:	00000002 	andeq	r0, r0, r2
     1e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     1e4:	00818402 	addeq	r8, r1, r2, lsl #8
     1e8:	09051900 	stmdbeq	r5, {r8, fp, ip}
     1ec:	2e38059f 	mrccs	5, 1, r0, cr8, cr15, {4}
     1f0:	054c0b05 	strbeq	r0, [ip, #-2821]	; 0xfffff4fb
     1f4:	0b054a0a 	bleq	152a24 <_bss_end+0x1419a4>
     1f8:	4a0a0567 	bmi	28179c <_bss_end+0x27071c>
     1fc:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     200:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
     204:	0f056710 	svceq	0x00056710
     208:	8209054c 	andhi	r0, r9, #76, 10	; 0x13000000
     20c:	0b031405 	bleq	c5228 <_bss_end+0xb41a8>
     210:	081a054a 	ldmdaeq	sl, {r1, r3, r6, r8, sl}
     214:	660d0520 	strvs	r0, [sp], -r0, lsr #10
     218:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
     21c:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
     220:	1005d705 	andne	sp, r5, r5, lsl #14
     224:	4c0b0567 	cfstr32mi	mvfx0, [fp], {103}	; 0x67
     228:	01040200 	mrseq	r0, R12_usr
     22c:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     230:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     234:	04020009 	streq	r0, [r2], #-9
     238:	052e0604 	streq	r0, [lr, #-1540]!	; 0xfffff9fc
     23c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     240:	0d054b04 	vstreq	d4, [r5, #-16]
     244:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     248:	000c054a 	andeq	r0, ip, sl, asr #10
     24c:	4c040402 	cfstrsmi	mvf0, [r4], {2}
     250:	852f0105 	strhi	r0, [pc, #-261]!	; 153 <CPSR_IRQ_INHIBIT+0xd3>
     254:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
     258:	0b056710 	bleq	159ea0 <_bss_end+0x148e20>
     25c:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     260:	00660601 	rsbeq	r0, r6, r1, lsl #12
     264:	4a020402 	bmi	81274 <_bss_end+0x701f4>
     268:	02000905 	andeq	r0, r0, #81920	; 0x14000
     26c:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
     270:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
     274:	054b0404 	strbeq	r0, [fp, #-1028]	; 0xfffffbfc
     278:	0402000d 	streq	r0, [r2], #-13
     27c:	0c054a04 			; <UNDEFINED> instruction: 0x0c054a04
     280:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     284:	2f01054c 	svccs	0x0001054c
     288:	d7050585 	strle	r0, [r5, -r5, lsl #11]
     28c:	05671005 	strbeq	r1, [r7, #-5]!
     290:	02004c0b 	andeq	r4, r0, #2816	; 0xb00
     294:	66060104 	strvs	r0, [r6], -r4, lsl #2
     298:	02040200 	andeq	r0, r4, #0, 4
     29c:	0009054a 	andeq	r0, r9, sl, asr #10
     2a0:	06040402 	streq	r0, [r4], -r2, lsl #8
     2a4:	0013052e 	andseq	r0, r3, lr, lsr #10
     2a8:	4b040402 	blmi	1012b8 <_bss_end+0xf0238>
     2ac:	02000d05 	andeq	r0, r0, #320	; 0x140
     2b0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
     2b4:	0402000c 	streq	r0, [r2], #-12
     2b8:	01054c04 	tsteq	r5, r4, lsl #24
     2bc:	1d05852f 	cfstr32ne	mvfx8, [r5, #-188]	; 0xffffff44
     2c0:	ba0905bc 	blt	2419b8 <_bss_end+0x230938>
     2c4:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     2c8:	17054d12 	smladne	r5, r2, sp, r4
     2cc:	4a20054c 	bmi	801804 <_bss_end+0x7f0784>
     2d0:	059f0f05 	ldreq	r0, [pc, #3845]	; 11dd <CPSR_IRQ_INHIBIT+0x115d>
     2d4:	0805660b 	stmdaeq	r5, {r0, r1, r3, r9, sl, sp, lr}
     2d8:	6711054a 	ldrvs	r0, [r1, -sl, asr #10]
     2dc:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
     2e0:	0e056805 	cdpeq	8, 0, cr6, cr5, cr5, {0}
     2e4:	6610054a 	ldrvs	r0, [r0], -sl, asr #10
     2e8:	78030905 	stmdavc	r3, {r0, r2, r8, fp}
     2ec:	03010566 	movweq	r0, #5478	; 0x1566
     2f0:	054d2e09 	strbeq	r2, [sp, #-3593]	; 0xfffff1f7
     2f4:	0905a01d 	stmdbeq	r5, {r0, r2, r3, r4, sp, pc}
     2f8:	4a0505ba 	bmi	1419e8 <_bss_end+0x130968>
     2fc:	054b2005 	strbeq	r2, [fp, #-5]
     300:	32054c29 	andcc	r4, r5, #10496	; 0x2900
     304:	8234054a 	eorshi	r0, r4, #310378496	; 0x12800000
     308:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
     30c:	04020001 	streq	r0, [r2], #-1
     310:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
     314:	3505d80b 	strcc	sp, [r5, #-2059]	; 0xfffff7f5
     318:	00240566 	eoreq	r0, r4, r6, ror #10
     31c:	4a020402 	bmi	8132c <_bss_end+0x702ac>
     320:	02000905 	andeq	r0, r0, #81920	; 0x14000
     324:	05f20204 	ldrbeq	r0, [r2, #516]!	; 0x204
     328:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     32c:	54054a03 	strpl	r4, [r5], #-2563	; 0xfffff5fd
     330:	06040200 	streq	r0, [r4], -r0, lsl #4
     334:	00380566 	eorseq	r0, r8, r6, ror #10
     338:	f2060402 	vshl.s8	d0, d2, d6
     33c:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     340:	004a0704 	subeq	r0, sl, r4, lsl #14
     344:	06080402 	streq	r0, [r8], -r2, lsl #8
     348:	0005054a 	andeq	r0, r5, sl, asr #10
     34c:	060a0402 	streq	r0, [sl], -r2, lsl #8
     350:	4d15052e 	cfldr32mi	mvfx0, [r5, #-184]	; 0xffffff48
     354:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
     358:	15054a0e 	strne	r4, [r5, #-2574]	; 0xfffff5f2
     35c:	2e100566 	cfmsc32cs	mvfx0, mvfx0, mvfx6
     360:	05480905 	strbeq	r0, [r8, #-2309]	; 0xfffff6fb
     364:	054d3101 	strbeq	r3, [sp, #-257]	; 0xfffffeff
     368:	0905a01c 	stmdbeq	r5, {r2, r3, r4, sp, pc}
     36c:	4a0505ba 	bmi	141a5c <_bss_end+0x1309dc>
     370:	054b1005 	strbeq	r1, [fp, #-5]
     374:	16054c0d 	strne	r4, [r5], -sp, lsl #24
     378:	8218054a 	andshi	r0, r8, #310378496	; 0x12800000
     37c:	054a2005 	strbeq	r2, [sl, #-5]
     380:	01052e22 	tsteq	r5, r2, lsr #28
     384:	01040200 	mrseq	r0, R12_usr
     388:	0e056983 	vmlaeq.f16	s12, s11, s6	; <UNPREDICTABLE>
     38c:	05675b08 	strbeq	r5, [r7, #-2824]!	; 0xfffff4f8
     390:	31056805 	tstcc	r5, r5, lsl #16
     394:	01040200 	mrseq	r0, R12_usr
     398:	00330566 	eorseq	r0, r3, r6, ror #10
     39c:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
     3a0:	02003f05 	andeq	r3, r0, #5, 30
     3a4:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     3a8:	0402000e 	streq	r0, [r2], #-14
     3ac:	10052e01 	andne	r2, r5, r1, lsl #28
     3b0:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
     3b4:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     3b8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     3bc:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     3c0:	4105ba01 	tstmi	r5, r1, lsl #20
     3c4:	01040200 	mrseq	r0, R12_usr
     3c8:	000f054a 	andeq	r0, pc, sl, asr #10
     3cc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     3d0:	054b1005 	strbeq	r1, [fp, #-5]
     3d4:	2a054c05 	bcs	1533f0 <_bss_end+0x142370>
     3d8:	9e320567 	cdpls	5, 3, cr0, cr2, cr7, {3}
     3dc:	20082a05 	andcs	r2, r8, r5, lsl #20
     3e0:	05d80505 	ldrbeq	r0, [r8, #1285]	; 0x505
     3e4:	3305672b 	movwcc	r6, #22315	; 0x572b
     3e8:	082b05ba 	stmdaeq	fp!, {r1, r3, r4, r5, r7, r8, sl}
     3ec:	f40c0520 	vst3.8	{d0,d2,d4}, [ip :128], r0
     3f0:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     3f4:	59080e05 	stmdbpl	r8, {r0, r2, r9, sl, fp}
     3f8:	68050567 	stmdavs	r5, {r0, r1, r2, r5, r6, r8, sl}
     3fc:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     400:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     404:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     408:	41059e01 	tstmi	r5, r1, lsl #28
     40c:	01040200 	mrseq	r0, R12_usr
     410:	000e054a 	andeq	r0, lr, sl, asr #10
     414:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     418:	054b1005 	strbeq	r1, [fp, #-5]
     41c:	35054c05 	strcc	r4, [r5, #-3077]	; 0xfffff3fb
     420:	01040200 	mrseq	r0, R12_usr
     424:	00370566 	eorseq	r0, r7, r6, ror #10
     428:	ba010402 	blt	41438 <_bss_end+0x303b8>
     42c:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
     430:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     434:	0402000f 	streq	r0, [r2], #-15
     438:	10052e01 	andne	r2, r5, r1, lsl #28
     43c:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
     440:	05672a05 	strbeq	r2, [r7, #-2565]!	; 0xfffff5fb
     444:	2a059e34 	bcs	167d1c <_bss_end+0x156c9c>
     448:	05052008 	streq	r2, [r5, #-8]
     44c:	672b05f4 			; <UNDEFINED> instruction: 0x672b05f4
     450:	05ba3505 	ldreq	r3, [sl, #1285]!	; 0x505
     454:	0520082b 	streq	r0, [r0, #-2091]!	; 0xfffff7d5
     458:	0522080c 	streq	r0, [r2, #-2060]!	; 0xfffff7f4
     45c:	9e662f01 	cdpls	15, 6, cr2, cr6, cr1, {0}
     460:	01040200 	mrseq	r0, R12_usr
     464:	23056606 	movwcs	r6, #22022	; 0x5606
     468:	7eef0306 	cdpvc	3, 14, cr0, cr15, cr6, {0}
     46c:	03010582 	movweq	r0, #5506	; 0x1582
     470:	ba660191 	blt	1980abc <_bss_end+0x196fa3c>
     474:	000a024a 	andeq	r0, sl, sl, asr #4
     478:	03410101 	movteq	r0, #4353	; 0x1101
     47c:	00030000 	andeq	r0, r3, r0
     480:	00000135 	andeq	r0, r0, r5, lsr r1
     484:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     488:	0101000d 	tsteq	r1, sp
     48c:	00000101 	andeq	r0, r0, r1, lsl #2
     490:	00000100 	andeq	r0, r0, r0, lsl #2
     494:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
     498:	2f632f74 	svccs	0x00632f74
     49c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     4a0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     4a4:	442f6162 	strtmi	r6, [pc], #-354	; 4ac <CPSR_IRQ_INHIBIT+0x42c>
     4a8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     4ac:	73746e65 	cmnvc	r4, #1616	; 0x650
     4b0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     4b4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     4b8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     4bc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     4c0:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     4c4:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     4c8:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     4cc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     4d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     4d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     4d8:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     4dc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     4e0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     4e4:	2f632f74 	svccs	0x00632f74
     4e8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     4ec:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     4f0:	442f6162 	strtmi	r6, [pc], #-354	; 4f8 <CPSR_IRQ_INHIBIT+0x478>
     4f4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     4f8:	73746e65 	cmnvc	r4, #1616	; 0x650
     4fc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     500:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     504:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     508:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     50c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     510:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     514:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     518:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     51c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     520:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     524:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     528:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     52c:	2f632f74 	svccs	0x00632f74
     530:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     534:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     538:	442f6162 	strtmi	r6, [pc], #-354	; 540 <CPSR_IRQ_INHIBIT+0x4c0>
     53c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     540:	73746e65 	cmnvc	r4, #1616	; 0x650
     544:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     548:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     54c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     550:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     554:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     558:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     55c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     560:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     564:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     568:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     56c:	616f622f 	cmnvs	pc, pc, lsr #4
     570:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
     574:	2f306970 	svccs	0x00306970
     578:	006c6168 	rsbeq	r6, ip, r8, ror #2
     57c:	63326900 	teqvs	r2, #0, 18
     580:	0100682e 	tsteq	r0, lr, lsr #16
     584:	32690000 	rsbcc	r0, r9, #0
     588:	70632e63 	rsbvc	r2, r3, r3, ror #28
     58c:	00020070 	andeq	r0, r2, r0, ror r0
     590:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     594:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     598:	00030068 	andeq	r0, r3, r8, rrx
     59c:	72657000 	rsbvc	r7, r5, #0
     5a0:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
     5a4:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
     5a8:	0300682e 	movweq	r6, #2094	; 0x82e
     5ac:	70670000 	rsbvc	r0, r7, r0
     5b0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     5b4:	00000100 	andeq	r0, r0, r0, lsl #2
     5b8:	000e0500 	andeq	r0, lr, r0, lsl #10
     5bc:	90d80205 	sbcsls	r0, r8, r5, lsl #4
     5c0:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
     5c4:	bc160501 	cfldr32lt	mvfx0, [r6], {1}
     5c8:	02670905 	rsbeq	r0, r7, #81920	; 0x14000
     5cc:	01010008 	tsteq	r1, r8
     5d0:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
     5d4:	00910c02 	addseq	r0, r1, r2, lsl #24
     5d8:	01170300 	tsteq	r7, r0, lsl #6
     5dc:	001c0282 	andseq	r0, ip, r2, lsl #5
     5e0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
     5e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     5e8:	008a1002 	addeq	r1, sl, r2
     5ec:	71051800 	tstvc	r5, r0, lsl #16
     5f0:	080105d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl}
     5f4:	0c0585e7 	cfstr32eq	mvfx8, [r5], {231}	; 0xe7
     5f8:	4a16059f 	bmi	581c7c <_bss_end+0x570bfc>
     5fc:	052e3005 	streq	r3, [lr, #-5]!
     600:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     604:	0e058334 	mcreq	3, 0, r8, cr5, cr4, {1}
     608:	4a100585 	bmi	401c24 <_bss_end+0x3f0ba4>
     60c:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
     610:	0105ba05 	tsteq	r5, r5, lsl #20
     614:	1b056930 	blne	15aadc <_bss_end+0x149a5c>
     618:	d6090583 	strle	r0, [r9], -r3, lsl #11
     61c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     620:	1b054b10 	blne	153268 <_bss_end+0x1421e8>
     624:	d609054c 	strle	r0, [r9], -ip, asr #10
     628:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     62c:	10054c17 	andne	r4, r5, r7, lsl ip
     630:	4f1c05bb 	svcmi	0x001c05bb
     634:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
     638:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     63c:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
     640:	2005831e 	andcs	r8, r5, lr, lsl r3
     644:	4c1c0582 	cfldr32mi	mvfx0, [ip], {130}	; 0x82
     648:	bc1305bb 	cfldr32lt	mvfx0, [r3], {187}	; 0xbb
     64c:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
     650:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     654:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
     658:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     65c:	2805f324 	stmdacs	r5, {r2, r5, r8, r9, ip, sp, lr, pc}
     660:	2e260582 	cfsh64cs	mvdx0, mvdx6, #-62
     664:	052f2205 	streq	r2, [pc, #-517]!	; 467 <CPSR_IRQ_INHIBIT+0x3e7>
     668:	13058224 	movwne	r8, #21028	; 0x5224
     66c:	001c054c 	andseq	r0, ip, ip, asr #10
     670:	4a030402 	bmi	c1680 <_bss_end+0xb0600>
     674:	02003005 	andeq	r3, r0, #5
     678:	05830204 	streq	r0, [r3, #516]	; 0x204
     67c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     680:	30058202 	andcc	r8, r5, r2, lsl #4
     684:	02040200 	andeq	r0, r4, #0, 4
     688:	00260582 	eoreq	r0, r6, r2, lsl #11
     68c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     690:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     694:	052d0204 	streq	r0, [sp, #-516]!	; 0xfffffdfc
     698:	1f05851d 	svcne	0x0005851d
     69c:	4b1e0582 	blmi	781cac <_bss_end+0x770c2c>
     6a0:	05822005 	streq	r2, [r2, #5]
     6a4:	01054c0f 	tsteq	r5, pc, lsl #24
     6a8:	2405a14b 	strcs	sl, [r5], #-331	; 0xfffffeb5
     6ac:	822805f3 	eorhi	r0, r8, #1019215872	; 0x3cc00000
     6b0:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
     6b4:	24052f22 	strcs	r2, [r5], #-3874	; 0xfffff0de
     6b8:	4c1d0582 	cfldr32mi	mvfx0, [sp], {130}	; 0x82
     6bc:	05821f05 	streq	r1, [r2, #3845]	; 0xf05
     6c0:	20054b1e 	andcs	r4, r5, lr, lsl fp
     6c4:	4c0f0582 	cfstr32mi	mvfx0, [pc], {130}	; 0x82
     6c8:	054c1305 	strbeq	r1, [ip, #-773]	; 0xfffffcfb
     6cc:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     6d0:	30054a03 	andcc	r4, r5, r3, lsl #20
     6d4:	02040200 	andeq	r0, r4, #0, 4
     6d8:	00180583 	andseq	r0, r8, r3, lsl #11
     6dc:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
     6e0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     6e4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     6e8:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     6ec:	05056602 	streq	r6, [r5, #-1538]	; 0xfffff9fe
     6f0:	02040200 	andeq	r0, r4, #0, 4
     6f4:	84010549 	strhi	r0, [r1], #-1353	; 0xfffffab7
     6f8:	bb1605a1 	bllt	581d84 <_bss_end+0x570d04>
     6fc:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     700:	1f054b10 	svcne	0x00054b10
     704:	671a0568 	ldrvs	r0, [sl, -r8, ror #10]
     708:	05671d05 	strbeq	r1, [r7, #-3333]!	; 0xfffff2fb
     70c:	0105bc0c 	tsteq	r5, ip, lsl #24
     710:	1605694b 	strne	r6, [r5], -fp, asr #18
     714:	4a0905d7 	bmi	241e78 <_bss_end+0x230df8>
     718:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     71c:	09054d1e 	stmdbeq	r5, {r1, r2, r3, r4, r8, sl, fp, lr}
     720:	66050568 	strvs	r0, [r5], -r8, ror #10
     724:	02002005 	andeq	r2, r0, #5
     728:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     72c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     730:	34054a01 	strcc	r4, [r5], #-2561	; 0xfffff5ff
     734:	4a24054d 	bmi	901c70 <_bss_end+0x8f0bf0>
     738:	05823405 	streq	r3, [r2, #1029]	; 0x405
     73c:	22052e26 	andcs	r2, r5, #608	; 0x260
     740:	8232052f 	eorshi	r0, r2, #197132288	; 0xbc00000
     744:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     748:	2e053417 	cfmvdlrcs	mvd5, r3
     74c:	03040200 	movweq	r0, #16896	; 0x4200
     750:	001e054a 	andseq	r0, lr, sl, asr #10
     754:	4a030402 	bmi	c1764 <_bss_end+0xb06e4>
     758:	02002005 	andeq	r2, r0, #5
     75c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     760:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     764:	3d05bc02 	stccc	12, cr11, [r5, #-8]
     768:	02040200 	andeq	r0, r4, #0, 4
     76c:	0024052e 	eoreq	r0, r4, lr, lsr #10
     770:	66020402 	strvs	r0, [r2], -r2, lsl #8
     774:	02003d05 	andeq	r3, r0, #320	; 0x140
     778:	05820204 	streq	r0, [r2, #516]	; 0x204
     77c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     780:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
     784:	02040200 	andeq	r0, r4, #0, 4
     788:	8a1d052c 	bhi	741c40 <_bss_end+0x730bc0>
     78c:	05821f05 	streq	r1, [r2, #3845]	; 0xf05
     790:	20054b1e 	andcs	r4, r5, lr, lsl fp
     794:	4c0f0582 	cfstr32mi	mvfx0, [pc], {130}	; 0x82
     798:	67030905 	strvs	r0, [r3, -r5, lsl #18]
     79c:	01054f66 	tsteq	r5, r6, ror #30
     7a0:	822e1503 	eorhi	r1, lr, #12582912	; 0xc00000
     7a4:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
     7a8:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
     7ac:	fe030620 	cdp2	6, 0, cr0, cr3, cr0, {1}
     7b0:	0105827e 	tsteq	r5, lr, ror r2
     7b4:	9e018203 	cdpls	2, 0, cr8, cr1, cr3, {0}
     7b8:	0a024aba 	beq	932a8 <_bss_end+0x82228>
     7bc:	dd010100 	stfles	f0, [r1, #-0]
     7c0:	03000003 	movweq	r0, #3
     7c4:	0000c300 	andeq	ip, r0, r0, lsl #6
     7c8:	fb010200 	blx	40fd2 <_bss_end+0x2ff52>
     7cc:	01000d0e 	tsteq	r0, lr, lsl #26
     7d0:	00010101 	andeq	r0, r1, r1, lsl #2
     7d4:	00010000 	andeq	r0, r1, r0
     7d8:	6d2f0100 	stfvss	f0, [pc, #-0]	; 7e0 <CPSR_IRQ_INHIBIT+0x760>
     7dc:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     7e0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     7e4:	4b2f7372 	blmi	bdd5b4 <_bss_end+0xbcc534>
     7e8:	2f616275 	svccs	0x00616275
     7ec:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     7f0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     7f4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     7f8:	614d6f72 	hvcvs	55026	; 0xd6f2
     7fc:	652f6574 	strvs	r6, [pc, #-1396]!	; 290 <CPSR_IRQ_INHIBIT+0x210>
     800:	706d6178 	rsbvc	r6, sp, r8, ror r1
     804:	2f73656c 	svccs	0x0073656c
     808:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     80c:	6b2f4332 	blvs	bd14dc <_bss_end+0xbc045c>
     810:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     814:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     818:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     81c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     820:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 65c <CPSR_IRQ_INHIBIT+0x5dc>
     824:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     828:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     82c:	4b2f7372 	blmi	bdd5fc <_bss_end+0xbcc57c>
     830:	2f616275 	svccs	0x00616275
     834:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     838:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     83c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     840:	614d6f72 	hvcvs	55026	; 0xd6f2
     844:	652f6574 	strvs	r6, [pc, #-1396]!	; 2d8 <CPSR_IRQ_INHIBIT+0x258>
     848:	706d6178 	rsbvc	r6, sp, r8, ror r1
     84c:	2f73656c 	svccs	0x0073656c
     850:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     854:	6b2f4332 	blvs	bd1524 <_bss_end+0xbc04a4>
     858:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     85c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     860:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     864:	72642f65 	rsbvc	r2, r4, #404	; 0x194
     868:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     86c:	6d000073 	stcvs	0, cr0, [r0, #-460]	; 0xfffffe34
     870:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     874:	632e726f 			; <UNDEFINED> instruction: 0x632e726f
     878:	01007070 	tsteq	r0, r0, ror r0
     87c:	6f6d0000 	svcvs	0x006d0000
     880:	6f74696e 	svcvs	0x0074696e
     884:	00682e72 	rsbeq	r2, r8, r2, ror lr
     888:	00000002 	andeq	r0, r0, r2
     88c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     890:	00915402 	addseq	r5, r1, r2, lsl #8
     894:	0e051600 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx0
     898:	322605d7 	eorcc	r0, r6, #901775360	; 0x35c00000
     89c:	22020105 	andcs	r0, r2, #1073741825	; 0x40000001
     8a0:	9e090314 	mcrls	3, 0, r0, cr9, cr4, {0}
     8a4:	05831105 	streq	r1, [r3, #261]	; 0x105
     8a8:	22054c17 	andcs	r4, r5, #5888	; 0x1700
     8ac:	01040200 	mrseq	r0, R12_usr
     8b0:	0020054a 	eoreq	r0, r0, sl, asr #10
     8b4:	4a010402 	bmi	418c4 <_bss_end+0x30844>
     8b8:	05681b05 	strbeq	r1, [r8, #-2821]!	; 0xfffff4fb
     8bc:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     8c0:	24054a03 	strcs	r4, [r5], #-2563	; 0xfffff5fd
     8c4:	03040200 	movweq	r0, #16896	; 0x4200
     8c8:	000d054a 	andeq	r0, sp, sl, asr #10
     8cc:	68020402 	stmdavs	r2, {r1, sl}
     8d0:	02001c05 	andeq	r1, r0, #1280	; 0x500
     8d4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     8d8:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     8dc:	25054a02 	strcs	r4, [r5, #-2562]	; 0xfffff5fe
     8e0:	02040200 	andeq	r0, r4, #0, 4
     8e4:	0028054a 	eoreq	r0, r8, sl, asr #10
     8e8:	4a020402 	bmi	818f8 <_bss_end+0x70878>
     8ec:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     8f0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     8f4:	04020009 	streq	r0, [r2], #-9
     8f8:	05054802 	streq	r4, [r5, #-2050]	; 0xfffff7fe
     8fc:	02040200 	andeq	r0, r4, #0, 4
     900:	89010580 	stmdbhi	r1, {r7, r8, sl}
     904:	05661203 	strbeq	r1, [r6, #-515]!	; 0xfffffdfd
     908:	22058317 	andcs	r8, r5, #1543503872	; 0x5c000000
     90c:	01040200 	mrseq	r0, R12_usr
     910:	0020054a 	eoreq	r0, r0, sl, asr #10
     914:	4a010402 	bmi	41924 <_bss_end+0x308a4>
     918:	05681b05 	strbeq	r1, [r8, #-2821]!	; 0xfffff4fb
     91c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     920:	24054a03 	strcs	r4, [r5], #-2563	; 0xfffff5fd
     924:	03040200 	movweq	r0, #16896	; 0x4200
     928:	0032054a 	eorseq	r0, r2, sl, asr #10
     92c:	68020402 	stmdavs	r2, {r1, sl}
     930:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
     934:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     938:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
     93c:	4a054a02 	bmi	15314c <_bss_end+0x1420cc>
     940:	02040200 	andeq	r0, r4, #0, 4
     944:	004d054a 	subeq	r0, sp, sl, asr #10
     948:	4a020402 	bmi	81958 <_bss_end+0x708d8>
     94c:	02000d05 	andeq	r0, r0, #320	; 0x140
     950:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     954:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
     958:	22054a02 	andcs	r4, r5, #8192	; 0x2000
     95c:	02040200 	andeq	r0, r4, #0, 4
     960:	0020054a 	eoreq	r0, r0, sl, asr #10
     964:	4a020402 	bmi	81974 <_bss_end+0x708f4>
     968:	02002b05 	andeq	r2, r0, #5120	; 0x1400
     96c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     970:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     974:	4d054a02 	vstrmi	s8, [r5, #-8]
     978:	02040200 	andeq	r0, r4, #0, 4
     97c:	0030052e 	eorseq	r0, r0, lr, lsr #10
     980:	4a020402 	bmi	81990 <_bss_end+0x70910>
     984:	02000905 	andeq	r0, r0, #81920	; 0x14000
     988:	052c0204 	streq	r0, [ip, #-516]!	; 0xfffffdfc
     98c:	04020005 	streq	r0, [r2], #-5
     990:	17058002 	strne	r8, [r5, -r2]
     994:	0022058a 	eoreq	r0, r2, sl, lsl #11
     998:	4a030402 	bmi	c19a8 <_bss_end+0xb0928>
     99c:	02002005 	andeq	r2, r0, #5
     9a0:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
     9a4:	04020009 	streq	r0, [r2], #-9
     9a8:	15056802 	strne	r6, [r5, #-2050]	; 0xfffff7fe
     9ac:	02040200 	andeq	r0, r4, #0, 4
     9b0:	001e054a 	andseq	r0, lr, sl, asr #10
     9b4:	4a020402 	bmi	819c4 <_bss_end+0x70944>
     9b8:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     9bc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     9c0:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     9c4:	2e054a02 	vmlacs.f32	s8, s10, s4
     9c8:	02040200 	andeq	r0, r4, #0, 4
     9cc:	0031052e 	eorseq	r0, r1, lr, lsr #10
     9d0:	4a020402 	bmi	819e0 <_bss_end+0x70960>
     9d4:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
     9d8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     9dc:	04020005 	streq	r0, [r2], #-5
     9e0:	01054802 	tsteq	r5, r2, lsl #16
     9e4:	05058a86 	streq	r8, [r5, #-2694]	; 0xfffff57a
     9e8:	680905bb 	stmdavs	r9, {r0, r1, r3, r4, r5, r7, r8, sl}
     9ec:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     9f0:	1f054a21 	svcne	0x00054a21
     9f4:	2e35054a 	cdpcs	5, 3, cr0, cr5, cr10, {2}
     9f8:	054a2a05 	strbeq	r2, [sl, #-2565]	; 0xfffff5fb
     9fc:	38052e36 	stmdacc	r5, {r1, r2, r4, r5, r9, sl, fp, sp}
     a00:	4b14052e 	blmi	501ec0 <_bss_end+0x4f0e40>
     a04:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     a08:	05678614 	strbeq	r8, [r7, #-1556]!	; 0xfffff9ec
     a0c:	12054a09 	andne	r4, r5, #36864	; 0x9000
     a10:	4c0d0569 	cfstr32mi	mvfx0, [sp], {105}	; 0x69
     a14:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
     a18:	059f1705 	ldreq	r1, [pc, #1797]	; 1125 <CPSR_IRQ_INHIBIT+0x10a5>
     a1c:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     a20:	25054a03 	strcs	r4, [r5, #-2563]	; 0xfffff5fd
     a24:	03040200 	movweq	r0, #16896	; 0x4200
     a28:	00170582 	andseq	r0, r7, r2, lsl #11
     a2c:	4c020402 	cfstrsmi	mvf0, [r2], {2}
     a30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     a34:	05d40204 	ldrbeq	r0, [r4, #516]	; 0x204
     a38:	0d058716 	stceq	7, cr8, [r5, #-88]	; 0xffffffa8
     a3c:	2f01054c 	svccs	0x0001054c
     a40:	9f130569 	svcls	0x00130569
     a44:	05680d05 	strbeq	r0, [r8, #-3333]!	; 0xfffff2fb
     a48:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
     a4c:	0905a333 	stmdbeq	r5, {r0, r1, r4, r5, r8, r9, sp, pc}
     a50:	830e054a 	movwhi	r0, #58698	; 0xe54a
     a54:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
     a58:	01054c0d 	tsteq	r5, sp, lsl #24
     a5c:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
     a60:	681205bb 	ldmdavs	r2, {r0, r1, r3, r4, r5, r7, r8, sl}
     a64:	69160586 	ldmdbvs	r6, {r1, r2, r7, r8, sl}
     a68:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
     a6c:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
     a70:	1205d709 	andne	sp, r5, #2359296	; 0x240000
     a74:	6827054c 	stmdavs	r7!, {r2, r3, r6, r8, sl}
     a78:	05ba2d05 	ldreq	r2, [sl, #3333]!	; 0xd05
     a7c:	11054a10 	tstne	r5, r0, lsl sl
     a80:	4a2d052e 	bmi	b41f40 <_bss_end+0xb30ec0>
     a84:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
     a88:	0a052f0f 	beq	14c6cc <_bss_end+0x13b64c>
     a8c:	610505a0 	smlatbvs	r5, r0, r5, r0
     a90:	68100536 	ldmdavs	r0, {r1, r2, r4, r5, r8, sl}
     a94:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
     a98:	13054a22 	movwne	r4, #23074	; 0x5a22
     a9c:	2f0a052e 	svccs	0x000a052e
     aa0:	05690c05 	strbeq	r0, [r9, #-3077]!	; 0xfffff3fb
     aa4:	0f052e0d 	svceq	0x00052e0d
     aa8:	4b06054a 	blmi	181fd8 <_bss_end+0x170f58>
     aac:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
     ab0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
     ab4:	17054a03 	strne	r4, [r5, -r3, lsl #20]
     ab8:	03040200 	movweq	r0, #16896	; 0x4200
     abc:	001b059e 	mulseq	fp, lr, r5
     ac0:	68020402 	stmdavs	r2, {r1, sl}
     ac4:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
     ac8:	05820204 	streq	r0, [r2, #516]	; 0x204
     acc:	0402000e 	streq	r0, [r2], #-14
     ad0:	20054a02 	andcs	r4, r5, r2, lsl #20
     ad4:	02040200 	andeq	r0, r4, #0, 4
     ad8:	0021054b 	eoreq	r0, r1, fp, asr #10
     adc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     ae0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ae4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
     ae8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     aec:	21058202 	tstcs	r5, r2, lsl #4
     af0:	02040200 	andeq	r0, r4, #0, 4
     af4:	0017054a 	andseq	r0, r7, sl, asr #10
     af8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     afc:	02001005 	andeq	r1, r0, #5
     b00:	052f0204 	streq	r0, [pc, #-516]!	; 904 <CPSR_IRQ_INHIBIT+0x884>
     b04:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     b08:	13052e02 	movwne	r2, #24066	; 0x5e02
     b0c:	02040200 	andeq	r0, r4, #0, 4
     b10:	0005054a 	andeq	r0, r5, sl, asr #10
     b14:	46020402 	strmi	r0, [r2], -r2, lsl #8
     b18:	82880105 	addhi	r0, r8, #1073741825	; 0x40000001
     b1c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
     b20:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
     b24:	e1030627 	tst	r3, r7, lsr #12
     b28:	0105827e 	tsteq	r5, lr, ror r2
     b2c:	9e019f03 	cdpls	15, 0, cr9, cr1, cr3, {0}
     b30:	0a024a9e 	beq	935b0 <_bss_end+0x82530>
     b34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b38:	02050001 	andeq	r0, r5, #1
     b3c:	0000979c 	muleq	r0, ip, r7
     b40:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
     b44:	05678310 	strbeq	r8, [r7, #-784]!	; 0xfffffcf0
     b48:	08026701 	stmdaeq	r2, {r0, r8, r9, sl, sp, lr}
     b4c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b50:	02050001 	andeq	r0, r5, #1
     b54:	000097d4 	ldrdeq	r9, [r0], -r4
     b58:	05012103 	streq	r2, [r1, #-259]	; 0xfffffefd
     b5c:	17058312 	smladne	r5, r2, r3, r8
     b60:	4a05054a 	bmi	142090 <_bss_end+0x131010>
     b64:	674c1405 	strbvs	r1, [ip, -r5, lsl #8]
     b68:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     b6c:	17056912 	smladne	r5, r2, r9, r6
     b70:	4a05054a 	bmi	1420a0 <_bss_end+0x131020>
     b74:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
     b78:	1f054b16 	svcne	0x00054b16
     b7c:	2e14054a 	cfmac32cs	mvfx0, mvfx4, mvfx10
     b80:	024c0105 	subeq	r0, ip, #1073741825	; 0x40000001
     b84:	01010006 	tsteq	r1, r6
     b88:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     b8c:	00985c02 	addseq	r5, r8, r2, lsl #24
     b90:	00c00300 	sbceq	r0, r0, r0, lsl #6
     b94:	83130501 	tsthi	r3, #4194304	; 0x400000
     b98:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
     b9c:	01010008 	tsteq	r1, r8
     ba0:	000007f4 	strdeq	r0, [r0], -r4
     ba4:	020c0003 	andeq	r0, ip, #3
     ba8:	01020000 	mrseq	r0, (UNDEF: 2)
     bac:	000d0efb 	strdeq	r0, [sp], -fp
     bb0:	01010101 	tsteq	r1, r1, lsl #2
     bb4:	01000000 	mrseq	r0, (UNDEF: 0)
     bb8:	2f010000 	svccs	0x00010000
     bbc:	2f746e6d 	svccs	0x00746e6d
     bc0:	73552f63 	cmpvc	r5, #396	; 0x18c
     bc4:	2f737265 	svccs	0x00737265
     bc8:	6162754b 	cmnvs	r2, fp, asr #10
     bcc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     bd0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     bd4:	5a2f7374 	bpl	bdd9ac <_bss_end+0xbcc92c>
     bd8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; a4c <CPSR_IRQ_INHIBIT+0x9cc>
     bdc:	2f657461 	svccs	0x00657461
     be0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     be4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     be8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     bec:	2f433249 	svccs	0x00433249
     bf0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     bf4:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
     bf8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     bfc:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; a74 <CPSR_IRQ_INHIBIT+0x9f4>
     c00:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
     c04:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; a28 <CPSR_IRQ_INHIBIT+0x9a8>
     c08:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     c0c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     c10:	4b2f7372 	blmi	bdd9e0 <_bss_end+0xbcc960>
     c14:	2f616275 	svccs	0x00616275
     c18:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c1c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c20:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     c24:	614d6f72 	hvcvs	55026	; 0xd6f2
     c28:	652f6574 	strvs	r6, [pc, #-1396]!	; 6bc <CPSR_IRQ_INHIBIT+0x63c>
     c2c:	706d6178 	rsbvc	r6, sp, r8, ror r1
     c30:	2f73656c 	svccs	0x0073656c
     c34:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     c38:	6b2f4332 	blvs	bd1908 <_bss_end+0xbc0888>
     c3c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     c40:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
     c44:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
     c48:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c4c:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; a88 <CPSR_IRQ_INHIBIT+0xa08>
     c50:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     c54:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     c58:	4b2f7372 	blmi	bdda28 <_bss_end+0xbcc9a8>
     c5c:	2f616275 	svccs	0x00616275
     c60:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c64:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c68:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     c6c:	614d6f72 	hvcvs	55026	; 0xd6f2
     c70:	652f6574 	strvs	r6, [pc, #-1396]!	; 704 <CPSR_IRQ_INHIBIT+0x684>
     c74:	706d6178 	rsbvc	r6, sp, r8, ror r1
     c78:	2f73656c 	svccs	0x0073656c
     c7c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     c80:	6b2f4332 	blvs	bd1950 <_bss_end+0xbc08d0>
     c84:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     c88:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     c8c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     c90:	72642f65 	rsbvc	r2, r4, #404	; 0x194
     c94:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c98:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; ad4 <CPSR_IRQ_INHIBIT+0xa54>
     c9c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
     ca0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
     ca4:	4b2f7372 	blmi	bdda74 <_bss_end+0xbcc9f4>
     ca8:	2f616275 	svccs	0x00616275
     cac:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     cb0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     cb4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
     cb8:	614d6f72 	hvcvs	55026	; 0xd6f2
     cbc:	652f6574 	strvs	r6, [pc, #-1396]!	; 750 <CPSR_IRQ_INHIBIT+0x6d0>
     cc0:	706d6178 	rsbvc	r6, sp, r8, ror r1
     cc4:	2f73656c 	svccs	0x0073656c
     cc8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
     ccc:	6b2f4332 	blvs	bd199c <_bss_end+0xbc091c>
     cd0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     cd4:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
     cd8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     cdc:	6f622f65 	svcvs	0x00622f65
     ce0:	2f647261 	svccs	0x00647261
     ce4:	30697072 	rsbcc	r7, r9, r2, ror r0
     ce8:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
     cec:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     cf0:	2f632f74 	svccs	0x00632f74
     cf4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     cf8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     cfc:	442f6162 	strtmi	r6, [pc], #-354	; d04 <CPSR_IRQ_INHIBIT+0xc84>
     d00:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     d04:	73746e65 	cmnvc	r4, #1616	; 0x650
     d08:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     d0c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     d10:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     d14:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     d18:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     d1c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     d20:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     d24:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     d28:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     d2c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     d30:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     d34:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     d38:	6972622f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, r9, sp, lr}^
     d3c:	73656764 	cmnvc	r5, #100, 14	; 0x1900000
     d40:	656b0000 	strbvs	r0, [fp, #-0]!
     d44:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     d48:	6165685f 	cmnvs	r5, pc, asr r8
     d4c:	00682e70 	rsbeq	r2, r8, r0, ror lr
     d50:	6f000001 	svcvs	0x00000001
     d54:	5f64656c 	svcpl	0x0064656c
     d58:	31647373 	smccc	18227	; 0x4733
     d5c:	2e363033 	mrccs	0, 1, r3, cr6, cr3, {1}
     d60:	00707063 	rsbseq	r7, r0, r3, rrx
     d64:	69000002 	stmdbvs	r0, {r1}
     d68:	682e6332 	stmdavs	lr!, {r1, r4, r5, r8, r9, sp, lr}
     d6c:	00000300 	andeq	r0, r0, r0, lsl #6
     d70:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
     d74:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     d78:	00000400 	andeq	r0, r0, r0, lsl #8
     d7c:	69726570 	ldmdbvs	r2!, {r4, r5, r6, r8, sl, sp, lr}^
     d80:	72656870 	rsbvc	r6, r5, #112, 16	; 0x700000
     d84:	2e736c61 	cdpcs	12, 7, cr6, cr3, cr1, {3}
     d88:	00040068 	andeq	r0, r4, r8, rrx
     d8c:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
     d90:	73735f64 	cmnvc	r3, #100, 30	; 0x190
     d94:	30333164 	eorscc	r3, r3, r4, ror #2
     d98:	00682e36 	rsbeq	r2, r8, r6, lsr lr
     d9c:	64000003 	strvs	r0, [r0], #-3
     da0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     da4:	705f7961 	subsvc	r7, pc, r1, ror #18
     da8:	6f746f72 	svcvs	0x00746f72
     dac:	2e6c6f63 	cdpcs	15, 6, cr6, cr12, cr3, {3}
     db0:	00050068 	andeq	r0, r5, r8, rrx
     db4:	01050000 	mrseq	r0, (UNDEF: 5)
     db8:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
     dbc:	030000ab 	movweq	r0, #171	; 0xab
     dc0:	1405013d 	strne	r0, [r5], #-317	; 0xfffffec3
     dc4:	6701059f 			; <UNDEFINED> instruction: 0x6701059f
     dc8:	01000802 	tsteq	r0, r2, lsl #16
     dcc:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
     dd0:	02050001 	andeq	r0, r5, #1
     dd4:	00009888 	andeq	r9, r0, r8, lsl #17
     dd8:	9f48051a 	svcls	0x0048051a
     ddc:	cb080105 	blgt	2011f8 <_bss_end+0x1f0178>
     de0:	bb0a05a1 	bllt	28246c <_bss_end+0x2713ec>
     de4:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
     de8:	05056609 	streq	r6, [r5, #-1545]	; 0xfffff9f7
     dec:	4b10054a 	blmi	40231c <_bss_end+0x3f129c>
     df0:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
     df4:	05056914 	streq	r6, [r5, #-2324]	; 0xfffff6ec
     df8:	4b1f054a 	blmi	7c2328 <_bss_end+0x7b12a8>
     dfc:	059e1505 	ldreq	r1, [lr, #1285]	; 0x505
     e00:	0c052e10 	stceq	14, cr2, [r5], {16}
     e04:	670d0568 	strvs	r0, [sp, -r8, ror #10]
     e08:	056b1b05 	strbeq	r1, [fp, #-2821]!	; 0xfffff4fb
     e0c:	22054a24 	andcs	r4, r5, #36, 20	; 0x24000
     e10:	2e2c054a 	cfsh64cs	mvdx0, mvdx12, #42
     e14:	059e2f05 	ldreq	r2, [lr, #3845]	; 0xf05
     e18:	1405820d 	strne	r8, [r5], #-525	; 0xfffffdf3
     e1c:	4a40054e 	bmi	100235c <_bss_end+0xff12dc>
     e20:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     e24:	05d7d71d 	ldrbeq	sp, [r7, #1821]	; 0x71d
     e28:	1d05d710 	stcne	7, cr13, [r5, #-64]	; 0xffffffc0
     e2c:	bc0905d7 	cfstr32lt	mvfx0, [r9], {215}	; 0xd7
     e30:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     e34:	40058714 	andmi	r8, r5, r4, lsl r7
     e38:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
     e3c:	05d71705 	ldrbeq	r1, [r7, #1797]	; 0x705
     e40:	09056619 	stmdbeq	r5, {r0, r3, r4, r9, sl, sp, lr}
     e44:	4a1d0584 	bmi	74245c <_bss_end+0x7313dc>
     e48:	05871405 	streq	r1, [r7, #1029]	; 0x405
     e4c:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     e50:	d71d0584 	ldrle	r0, [sp, -r4, lsl #11]
     e54:	05d71005 	ldrbeq	r1, [r7, #5]
     e58:	4905d743 	stmdbmi	r5, {r0, r1, r6, r8, r9, sl, ip, lr, pc}
     e5c:	9f1d054a 	svcls	0x001d054a
     e60:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     e64:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     e68:	4a400587 	bmi	100248c <_bss_end+0xff140c>
     e6c:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     e70:	0905d710 	stmdbeq	r5, {r4, r8, r9, sl, ip, lr, pc}
     e74:	4a1d05bc 	bmi	74256c <_bss_end+0x7314ec>
     e78:	05881405 	streq	r1, [r8, #1029]	; 0x405
     e7c:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     e80:	d71d0584 	ldrle	r0, [sp, -r4, lsl #11]
     e84:	05d71005 	ldrbeq	r1, [r7, #5]
     e88:	4c05d746 	stcmi	7, cr13, [r5], {70}	; 0x46
     e8c:	9f1d054a 	svcls	0x001d054a
     e90:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     e94:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     e98:	4a400587 	bmi	10024bc <_bss_end+0xff143c>
     e9c:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     ea0:	0905d71d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, sl, ip, lr, pc}
     ea4:	4a1d05bc 	bmi	74259c <_bss_end+0x73151c>
     ea8:	05871405 	streq	r1, [r7, #1029]	; 0x405
     eac:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     eb0:	d7100584 	ldrle	r0, [r0, -r4, lsl #11]
     eb4:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     eb8:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     ebc:	4a400587 	bmi	10024e0 <_bss_end+0xff1460>
     ec0:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     ec4:	0905d71d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, sl, ip, lr, pc}
     ec8:	4a1d05bc 	bmi	7425c0 <_bss_end+0x731540>
     ecc:	05871405 	streq	r1, [r7, #1029]	; 0x405
     ed0:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     ed4:	d7100584 	ldrle	r0, [r0, -r4, lsl #11]
     ed8:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     edc:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     ee0:	4a400587 	bmi	1002504 <_bss_end+0xff1484>
     ee4:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     ee8:	0905d71d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, sl, ip, lr, pc}
     eec:	4a1d05bc 	bmi	7425e4 <_bss_end+0x731564>
     ef0:	05871405 	streq	r1, [r7, #1029]	; 0x405
     ef4:	1c054a40 			; <UNDEFINED> instruction: 0x1c054a40
     ef8:	d7100584 	ldrle	r0, [r0, -r4, lsl #11]
     efc:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
     f00:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
     f04:	4a400587 	bmi	1002528 <_bss_end+0xff14a8>
     f08:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
     f0c:	1005d71d 	andne	sp, r5, sp, lsl r7
     f10:	d71d05d7 			; <UNDEFINED> instruction: 0xd71d05d7
     f14:	05d7d7d7 	ldrbeq	sp, [r7, #2007]	; 0x7d7
     f18:	1d05bc09 	stcne	12, cr11, [r5, #-36]	; 0xffffffdc
     f1c:	850a054a 	strhi	r0, [sl, #-1354]	; 0xfffffab6
     f20:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     f24:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
     f28:	3c05d710 	stccc	7, cr13, [r5], {16}
     f2c:	8418054a 	ldrhi	r0, [r8], #-1354	; 0xfffffab6
     f30:	05bb2605 	ldreq	r2, [fp, #1541]!	; 0x605
     f34:	0505ba2f 	streq	fp, [r5, #-2607]	; 0xfffff5d1
     f38:	4a190568 	bmi	6424e0 <_bss_end+0x631460>
     f3c:	69830105 	stmibvs	r3, {r0, r2, r8}
     f40:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
     f44:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
     f48:	4f14054a 	svcmi	0x0014054a
     f4c:	054a4005 	strbeq	r4, [sl, #-5]
     f50:	1d05841c 	cfstrsne	mvf8, [r5, #-112]	; 0xffffff90
     f54:	bc0905d7 	cfstr32lt	mvfx0, [r9], {215}	; 0xd7
     f58:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
     f5c:	0f058505 	svceq	0x00058505
     f60:	4c0c054a 	cfstr32mi	mvfx0, [ip], {74}	; 0x4a
     f64:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     f68:	0402000c 	streq	r0, [r2], #-12
     f6c:	0d054a01 	vstreq	s8, [r5, #-4]
     f70:	03090568 	movweq	r0, #38248	; 0x9568
     f74:	01058270 	tsteq	r5, r0, ror r2
     f78:	4d2e1103 	stfmis	f1, [lr, #-12]!
     f7c:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
     f80:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
     f84:	0905bb0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp, pc}
     f88:	4a05054a 	bmi	1424b8 <_bss_end+0x131438>
     f8c:	004d1305 	subeq	r1, sp, r5, lsl #6
     f90:	06010402 	streq	r0, [r1], -r2, lsl #8
     f94:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     f98:	02004a02 	andeq	r4, r0, #8192	; 0x2000
     f9c:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
     fa0:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
     fa4:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
     fa8:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     fac:	2a054a04 	bcs	1537c4 <_bss_end+0x142744>
     fb0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     fb4:	000f054a 	andeq	r0, pc, sl, asr #10
     fb8:	9e040402 	cdpls	4, 0, cr0, cr4, cr2, {0}
     fbc:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     fc0:	054c0404 	strbeq	r0, [ip, #-1028]	; 0xfffffbfc
     fc4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
     fc8:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
     fcc:	02040200 	andeq	r0, r4, #0, 4
     fd0:	00110583 	andseq	r0, r1, r3, lsl #11
     fd4:	4a020402 	bmi	81fe4 <_bss_end+0x70f64>
     fd8:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     fdc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     fe0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     fe4:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
     fe8:	02040200 	andeq	r0, r4, #0, 4
     fec:	85090549 	strhi	r0, [r9, #-1353]	; 0xfffffab7
     ff0:	05667703 	strbeq	r7, [r6, #-1795]!	; 0xfffff8fd
     ff4:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
     ff8:	d70a054d 	strle	r0, [sl, -sp, asr #10]
     ffc:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1000:	054d4a05 	strbeq	r4, [sp, #-2565]	; 0xfffff5fb
    1004:	18056709 	stmdane	r5, {r0, r3, r8, r9, sl, sp, lr}
    1008:	4a1f054a 	bmi	7c2538 <_bss_end+0x7b14b8>
    100c:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    1010:	2d05ba33 	vstrcs	s22, [r5, #-204]	; 0xffffff34
    1014:	4a27054a 	bmi	9c2544 <_bss_end+0x9b14c4>
    1018:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    101c:	27054a1f 	smladcs	r5, pc, sl, r4	; <UNPREDICTABLE>
    1020:	d809054a 	stmdale	r9, {r1, r3, r6, r8, sl}
    1024:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    1028:	27054a1f 	smladcs	r5, pc, sl, r4	; <UNPREDICTABLE>
    102c:	ba34054a 	blt	d0255c <_bss_end+0xcf14dc>
    1030:	054a2e05 	strbeq	r2, [sl, #-3589]	; 0xfffff1fb
    1034:	09054a27 	stmdbeq	r5, {r0, r1, r2, r5, r9, fp, lr}
    1038:	4a1f059e 	bmi	7c26b8 <_bss_end+0x7b1638>
    103c:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    1040:	0105d109 	tsteq	r5, r9, lsl #2
    1044:	0a056934 	beq	15b51c <_bss_end+0x14a49c>
    1048:	4a090583 	bmi	24265c <_bss_end+0x2315dc>
    104c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1050:	40055114 	andmi	r5, r5, r4, lsl r1
    1054:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
    1058:	05d71d05 	ldrbeq	r1, [r7, #3333]	; 0xd05
    105c:	05d7d710 	ldrbeq	sp, [r7, #1808]	; 0x710
    1060:	1005d71d 	andne	sp, r5, sp, lsl r7
    1064:	1705d7d7 			; <UNDEFINED> instruction: 0x1705d7d7
    1068:	4a19054a 	bmi	642598 <_bss_end+0x631518>
    106c:	05840905 	streq	r0, [r4, #2309]	; 0x905
    1070:	13054a1d 	movwne	r4, #23069	; 0x5a1d
    1074:	4c180586 	cfldr32mi	mvfx0, [r8], {134}	; 0x86
    1078:	054a2205 	strbeq	r2, [sl, #-517]	; 0xfffffdfb
    107c:	0f054a2a 	svceq	0x00054a2a
    1080:	4e0e059e 	mcrmi	5, 0, r0, cr14, cr14, {4}
    1084:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    1088:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    108c:	40058414 	andmi	r8, r5, r4, lsl r4
    1090:	841c054a 	ldrhi	r0, [ip], #-1354	; 0xfffffab6
    1094:	05bb1205 	ldreq	r1, [fp, #517]!	; 0x205
    1098:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    109c:	13054a03 	movwne	r4, #23043	; 0x5a03
    10a0:	02040200 	andeq	r0, r4, #0, 4
    10a4:	001d0567 	andseq	r0, sp, r7, ror #10
    10a8:	4a020402 	bmi	820b8 <_bss_end+0x71038>
    10ac:	02002005 	andeq	r2, r0, #5
    10b0:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    10b4:	04020009 	streq	r0, [r2], #-9
    10b8:	02008102 	andeq	r8, r0, #-2147483648	; 0x80000000
    10bc:	05850204 	streq	r0, [r5, #516]	; 0x204
    10c0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    10c4:	23054a02 	movwcs	r4, #23042	; 0x5a02
    10c8:	02040200 	andeq	r0, r4, #0, 4
    10cc:	05827803 	streq	r7, [r2, #2051]	; 0x803
    10d0:	04020005 	streq	r0, [r2], #-5
    10d4:	09056602 	stmdbeq	r5, {r1, r9, sl, sp, lr}
    10d8:	052e6603 	streq	r6, [lr, #-1539]!	; 0xfffff9fd
    10dc:	2e240301 	cdpcs	3, 2, cr0, cr4, cr1, {0}
    10e0:	bb05054d 	bllt	14261c <_bss_end+0x13159c>
    10e4:	05691605 	strbeq	r1, [r9, #-1541]!	; 0xfffff9fb
    10e8:	11056805 	tstne	r5, r5, lsl #16
    10ec:	0d052608 	stceq	6, cr2, [r5, #-32]	; 0xffffffe0
    10f0:	2a05324b 	bcs	14da24 <_bss_end+0x13c9a4>
    10f4:	4c190569 	cfldr32mi	mvfx0, [r9], {105}	; 0x69
    10f8:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
    10fc:	0533d80d 	ldreq	sp, [r3, #-2061]!	; 0xfffff7f3
    1100:	28056935 	stmdacs	r5, {r0, r2, r4, r5, r8, fp, sp, lr}
    1104:	681b054c 	ldmdavs	fp, {r2, r3, r6, r8, sl}
    1108:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    110c:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    1110:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1114:	2005ba03 	andcs	fp, r5, r3, lsl #20
    1118:	02040200 	andeq	r0, r4, #0, 4
    111c:	001a0567 	andseq	r0, sl, r7, ror #10
    1120:	ba020402 	blt	82130 <_bss_end+0x710b0>
    1124:	02002805 	andeq	r2, r0, #327680	; 0x50000
    1128:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    112c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1130:	3105ba02 	tstcc	r5, r2, lsl #20
    1134:	02040200 	andeq	r0, r4, #0, 4
    1138:	001a052e 	andseq	r0, sl, lr, lsr #10
    113c:	4a020402 	bmi	8214c <_bss_end+0x710cc>
    1140:	02000d05 	andeq	r0, r0, #320	; 0x140
    1144:	8ab90204 	bhi	fee4195c <_bss_end+0xfee308dc>
    1148:	05692c05 	strbeq	r2, [r9, #-3077]!	; 0xfffff3fb
    114c:	16054c1c 			; <UNDEFINED> instruction: 0x16054c1c
    1150:	4a0d0568 	bmi	3426f8 <_bss_end+0x331678>
    1154:	054c1f05 	strbeq	r1, [ip, #-3845]	; 0xfffff0fb
    1158:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    115c:	3505ba01 	strcc	fp, [r5, #-2561]	; 0xfffff5ff
    1160:	01040200 	mrseq	r0, R12_usr
    1164:	003f052e 	eorseq	r0, pc, lr, lsr #10
    1168:	d6010402 	strle	r0, [r1], -r2, lsl #8
    116c:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1170:	05ba0104 	ldreq	r0, [sl, #260]!	; 0x104
    1174:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1178:	23052e01 	movwcs	r2, #24065	; 0x5e01
    117c:	0030054c 	eorseq	r0, r0, ip, asr #10
    1180:	ba030402 	blt	c2190 <_bss_end+0xb1110>
    1184:	02003905 	andeq	r3, r0, #81920	; 0x14000
    1188:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    118c:	04020043 	streq	r0, [r2], #-67	; 0xffffffbd
    1190:	3c05d603 	stccc	6, cr13, [r5], {3}
    1194:	03040200 	movweq	r0, #16896	; 0x4200
    1198:	003205ba 	ldrhteq	r0, [r2], -sl
    119c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    11a0:	02003905 	andeq	r3, r0, #81920	; 0x14000
    11a4:	054c0204 	strbeq	r0, [ip, #-516]	; 0xfffffdfc
    11a8:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    11ac:	4405ba02 	strmi	fp, [r5], #-2562	; 0xfffff5fe
    11b0:	02040200 	andeq	r0, r4, #0, 4
    11b4:	00460566 	subeq	r0, r6, r6, ror #10
    11b8:	ba020402 	blt	821c8 <_bss_end+0x71148>
    11bc:	02005205 	andeq	r5, r0, #1342177280	; 0x50000000
    11c0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    11c4:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    11c8:	2805ba02 	stmdacs	r5, {r1, r9, fp, ip, sp, pc}
    11cc:	02040200 	andeq	r0, r4, #0, 4
    11d0:	00220566 	eoreq	r0, r2, r6, ror #10
    11d4:	4c020402 	cfstrsmi	mvf0, [r2], {2}
    11d8:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    11dc:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    11e0:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    11e4:	46058202 	strmi	r8, [r5], -r2, lsl #4
    11e8:	02040200 	andeq	r0, r4, #0, 4
    11ec:	003f0582 	eorseq	r0, pc, r2, lsl #11
    11f0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    11f4:	02003905 	andeq	r3, r0, #81920	; 0x14000
    11f8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    11fc:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
    1200:	22052e02 	andcs	r2, r5, #2, 28
    1204:	02040200 	andeq	r0, r4, #0, 4
    1208:	0015052e 	andseq	r0, r5, lr, lsr #10
    120c:	b6020402 	strlt	r0, [r2], -r2, lsl #8
    1210:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    1214:	05800204 	streq	r0, [r0, #516]	; 0x204
    1218:	820c031f 	andhi	r0, ip, #2080374784	; 0x7c000000
    121c:	02002f05 	andeq	r2, r0, #5, 30
    1220:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1224:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    1228:	2305ba01 	movwcs	fp, #23041	; 0x5a01
    122c:	00330568 	eorseq	r0, r3, r8, ror #10
    1230:	4a030402 	bmi	c2240 <_bss_end+0xb11c0>
    1234:	02002c05 	andeq	r2, r0, #1280	; 0x500
    1238:	05ba0304 	ldreq	r0, [sl, #772]!	; 0x304
    123c:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    1240:	31056802 	tstcc	r5, r2, lsl #16
    1244:	02040200 	andeq	r0, r4, #0, 4
    1248:	002805ba 	strhteq	r0, [r8], -sl
    124c:	66020402 	strvs	r0, [r2], -r2, lsl #8
    1250:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    1254:	05680204 	strbeq	r0, [r8, #-516]!	; 0xfffffdfc
    1258:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    125c:	25052e02 	strcs	r2, [r5, #-3586]	; 0xfffff1fe
    1260:	02040200 	andeq	r0, r4, #0, 4
    1264:	002205ba 	strhteq	r0, [r2], -sl
    1268:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    126c:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    1270:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1274:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    1278:	3805d602 	stmdacc	r5, {r1, r9, sl, ip, lr, pc}
    127c:	02040200 	andeq	r0, r4, #0, 4
    1280:	0044052e 	subeq	r0, r4, lr, lsr #10
    1284:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1288:	02003d05 	andeq	r3, r0, #320	; 0x140
    128c:	05ba0204 	ldreq	r0, [sl, #516]!	; 0x204
    1290:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    1294:	53052e02 	movwpl	r2, #24066	; 0x5e02
    1298:	02040200 	andeq	r0, r4, #0, 4
    129c:	0056052e 	subseq	r0, r6, lr, lsr #10
    12a0:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    12a4:	02006505 	andeq	r6, r0, #20971520	; 0x1400000
    12a8:	05820204 	streq	r0, [r2, #516]	; 0x204
    12ac:	0402005e 	streq	r0, [r2], #-94	; 0xffffffa2
    12b0:	58052e02 	stmdapl	r5, {r1, r9, sl, fp, sp}
    12b4:	02040200 	andeq	r0, r4, #0, 4
    12b8:	006c054a 	rsbeq	r0, ip, sl, asr #10
    12bc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    12c0:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    12c4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    12c8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    12cc:	1105ee02 	tstne	r5, r2, lsl #28
    12d0:	02040200 	andeq	r0, r4, #0, 4
    12d4:	03090580 	movweq	r0, #38272	; 0x9580
    12d8:	11058241 	tstne	r5, r1, asr #4
    12dc:	034a1003 	movteq	r1, #40963	; 0xa003
    12e0:	0d054a0c 	vstreq	s8, [r5, #-48]	; 0xffffffd0
    12e4:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    12e8:	0d055011 	stceq	0, cr5, [r5, #-68]	; 0xffffffbc
    12ec:	054a1f03 	strbeq	r1, [sl, #-3843]	; 0xfffff0fd
    12f0:	9e4a3101 	dvflse	f3, f2, f1
    12f4:	01040200 	mrseq	r0, R12_usr
    12f8:	28056606 	stmdacs	r5, {r1, r2, r9, sl, sp, lr}
    12fc:	7da10306 	stcvc	3, cr0, [r1, #24]!
    1300:	03010582 	movweq	r0, #5506	; 0x1582
    1304:	ba6602df 	blt	1981e88 <_bss_end+0x1970e08>
    1308:	000a024a 	andeq	r0, sl, sl, asr #4
    130c:	03040101 	movweq	r0, #16641	; 0x4101
    1310:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
    1314:	00ab3402 	adceq	r3, fp, r2, lsl #8
    1318:	01200300 			; <UNDEFINED> instruction: 0x01200300
    131c:	05a01105 	streq	r1, [r0, #261]!	; 0x105
    1320:	19054a0d 	stmdbne	r5, {r0, r2, r3, r9, fp, lr}
    1324:	4c20054b 	cfstr32mi	mvfx0, [r0], #-300	; 0xfffffed4
    1328:	054a1505 	strbeq	r1, [sl, #-1285]	; 0xfffffafb
    132c:	20054a1e 	andcs	r4, r5, lr, lsl sl
    1330:	a0150566 	andsge	r0, r5, r6, ror #10
    1334:	022f0905 	eoreq	r0, pc, #81920	; 0x14000
    1338:	01010008 	tsteq	r1, r8
    133c:	1b050304 	blne	141f54 <_bss_end+0x130ed4>
    1340:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
    1344:	030000ab 	movweq	r0, #171	; 0xab
    1348:	11050120 	tstne	r5, r0, lsr #2
    134c:	4a0d05a0 	bmi	3429d4 <_bss_end+0x331954>
    1350:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
    1354:	15054c20 	strne	r4, [r5, #-3104]	; 0xfffff3e0
    1358:	4a1e054a 	bmi	782888 <_bss_end+0x771808>
    135c:	05662005 	strbeq	r2, [r6, #-5]!
    1360:	0905a015 	stmdbeq	r5, {r0, r2, r4, sp, pc}
    1364:	0008022f 	andeq	r0, r8, pc, lsr #4
    1368:	03040101 	movweq	r0, #16641	; 0x4101
    136c:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
    1370:	00ac1402 	adceq	r1, ip, r2, lsl #8
    1374:	01200300 			; <UNDEFINED> instruction: 0x01200300
    1378:	05a01105 	streq	r1, [r0, #261]!	; 0x105
    137c:	19054a0d 	stmdbne	r5, {r0, r2, r3, r9, fp, lr}
    1380:	4c15054b 	cfldr32mi	mvfx0, [r5], {75}	; 0x4b
    1384:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    1388:	20056622 	andcs	r6, r5, r2, lsr #12
    138c:	8415054a 	ldrhi	r0, [r5], #-1354	; 0xfffffab6
    1390:	022f0905 	eoreq	r0, pc, #81920	; 0x14000
    1394:	01010008 	tsteq	r1, r8
    1398:	0000020b 	andeq	r0, r0, fp, lsl #4
    139c:	01540003 	cmpeq	r4, r3
    13a0:	01020000 	mrseq	r0, (UNDEF: 2)
    13a4:	000d0efb 	strdeq	r0, [sp], -fp
    13a8:	01010101 	tsteq	r1, r1, lsl #2
    13ac:	01000000 	mrseq	r0, (UNDEF: 0)
    13b0:	2f010000 	svccs	0x00010000
    13b4:	2f746e6d 	svccs	0x00746e6d
    13b8:	73552f63 	cmpvc	r5, #396	; 0x18c
    13bc:	2f737265 	svccs	0x00737265
    13c0:	6162754b 	cmnvs	r2, fp, asr #10
    13c4:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    13c8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    13cc:	5a2f7374 	bpl	bde1a4 <_bss_end+0xbcd124>
    13d0:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1244 <CPSR_IRQ_INHIBIT+0x11c4>
    13d4:	2f657461 	svccs	0x00657461
    13d8:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    13dc:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    13e0:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    13e4:	2f433249 	svccs	0x00433249
    13e8:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    13ec:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    13f0:	642f6372 	strtvs	r6, [pc], #-882	; 13f8 <CPSR_IRQ_INHIBIT+0x1378>
    13f4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    13f8:	2f007372 	svccs	0x00007372
    13fc:	2f746e6d 	svccs	0x00746e6d
    1400:	73552f63 	cmpvc	r5, #396	; 0x18c
    1404:	2f737265 	svccs	0x00737265
    1408:	6162754b 	cmnvs	r2, fp, asr #10
    140c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1410:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1414:	5a2f7374 	bpl	bde1ec <_bss_end+0xbcd16c>
    1418:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 128c <CPSR_IRQ_INHIBIT+0x120c>
    141c:	2f657461 	svccs	0x00657461
    1420:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1424:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1428:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    142c:	2f433249 	svccs	0x00433249
    1430:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1434:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1438:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    143c:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    1440:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    1444:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    1448:	61682f30 	cmnvs	r8, r0, lsr pc
    144c:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 12a4 <CPSR_IRQ_INHIBIT+0x1224>
    1450:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1454:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1458:	4b2f7372 	blmi	bde228 <_bss_end+0xbcd1a8>
    145c:	2f616275 	svccs	0x00616275
    1460:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1464:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1468:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    146c:	614d6f72 	hvcvs	55026	; 0xd6f2
    1470:	652f6574 	strvs	r6, [pc, #-1396]!	; f04 <CPSR_IRQ_INHIBIT+0xe84>
    1474:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1478:	2f73656c 	svccs	0x0073656c
    147c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1480:	6b2f4332 	blvs	bd2150 <_bss_end+0xbc10d0>
    1484:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1488:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    148c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1490:	72642f65 	rsbvc	r2, r4, #404	; 0x194
    1494:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1498:	73000073 	movwvc	r0, #115	; 0x73
    149c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    14a0:	6964746e 	stmdbvs	r4!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    14a4:	616c7073 	smcvs	50947	; 0xc703
    14a8:	70632e79 	rsbvc	r2, r3, r9, ror lr
    14ac:	00010070 	andeq	r0, r1, r0, ror r0
    14b0:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    14b4:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    14b8:	00020068 	andeq	r0, r2, r8, rrx
    14bc:	72657000 	rsbvc	r7, r5, #0
    14c0:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    14c4:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    14c8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    14cc:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    14d0:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    14d4:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    14d8:	2e726574 	mrccs	5, 3, r6, cr2, cr4, {3}
    14dc:	00030068 	andeq	r0, r3, r8, rrx
    14e0:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
    14e4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    14e8:	70736964 	rsbsvc	r6, r3, r4, ror #18
    14ec:	2e79616c 	rpwcsez	f6, f1, #4.0
    14f0:	00030068 	andeq	r0, r3, r8, rrx
    14f4:	01050000 	mrseq	r0, (UNDEF: 5)
    14f8:	80020500 	andhi	r0, r2, r0, lsl #10
    14fc:	030000ac 	movweq	r0, #172	; 0xac
    1500:	050100fb 	streq	r0, [r1, #-251]	; 0xffffff05
    1504:	0105840f 	tsteq	r5, pc, lsl #8
    1508:	0905a1bd 	stmdbeq	r5, {r0, r2, r3, r4, r5, r7, r8, sp, pc}
    150c:	4a050583 	bmi	142b20 <_bss_end+0x131aa0>
    1510:	054b1005 	strbeq	r1, [fp, #-5]
    1514:	09054c1e 	stmdbeq	r5, {r1, r2, r3, r4, sl, fp, lr}
    1518:	4a050566 	bmi	142ab8 <_bss_end+0x131a38>
    151c:	054b1005 	strbeq	r1, [fp, #-5]
    1520:	0c054c0d 	stceq	12, cr4, [r5], {13}
    1524:	2f010568 	svccs	0x00010568
    1528:	830a0585 	movwhi	r0, #42373	; 0xa585
    152c:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1530:	1a054a05 	bne	153d4c <_bss_end+0x142ccc>
    1534:	4c0d054d 	cfstr32mi	mvfx0, [sp], {77}	; 0x4d
    1538:	057e0905 	ldrbeq	r0, [lr, #-2309]!	; 0xfffff6fb
    153c:	05693301 	strbeq	r3, [r9, #-769]!	; 0xfffffcff
    1540:	0105830c 	tsteq	r5, ip, lsl #6
    1544:	0a05854b 	beq	162a78 <_bss_end+0x1519f8>
    1548:	4a0905bb 	bmi	242c3c <_bss_end+0x231bbc>
    154c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1550:	05054d0d 	streq	r4, [r5, #-3341]	; 0xfffff2f3
    1554:	0019054d 	andseq	r0, r9, sp, asr #10
    1558:	66010402 	strvs	r0, [r1], -r2, lsl #8
    155c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    1560:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1564:	48054e44 	stmdami	r5, {r2, r6, r9, sl, fp, lr}
    1568:	2e4c052e 	cdpcs	5, 4, cr0, cr12, cr14, {1}
    156c:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    1570:	ba770309 	blt	1dc219c <_bss_end+0x1db111c>
    1574:	32010550 	andcc	r0, r1, #80, 10	; 0x14000000
    1578:	830a0585 	movwhi	r0, #42373	; 0xa585
    157c:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1580:	10054a05 	andne	r4, r5, r5, lsl #20
    1584:	4c0c054b 	cfstr32mi	mvfx0, [ip], {75}	; 0x4b
    1588:	824b0105 	subhi	r0, fp, #1073741825	; 0x40000001
    158c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    1590:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    1594:	cf030612 	svcgt	0x00030612
    1598:	0105827e 	tsteq	r5, lr, ror r2
    159c:	4a01b103 	bmi	6d9b0 <_bss_end+0x5c930>
    15a0:	0a024a9e 	beq	94020 <_bss_end+0x82fa0>
    15a4:	8c010100 	stfhis	f0, [r1], {-0}
    15a8:	03000002 	movweq	r0, #2
    15ac:	00014900 	andeq	r4, r1, r0, lsl #18
    15b0:	fb010200 	blx	41dba <_bss_end+0x30d3a>
    15b4:	01000d0e 	tsteq	r0, lr, lsl #26
    15b8:	00010101 	andeq	r0, r1, r1, lsl #2
    15bc:	00010000 	andeq	r0, r1, r0
    15c0:	6d2f0100 	stfvss	f0, [pc, #-0]	; 15c8 <CPSR_IRQ_INHIBIT+0x1548>
    15c4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    15c8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    15cc:	4b2f7372 	blmi	bde39c <_bss_end+0xbcd31c>
    15d0:	2f616275 	svccs	0x00616275
    15d4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    15d8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    15dc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    15e0:	614d6f72 	hvcvs	55026	; 0xd6f2
    15e4:	652f6574 	strvs	r6, [pc, #-1396]!	; 1078 <CPSR_IRQ_INHIBIT+0xff8>
    15e8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    15ec:	2f73656c 	svccs	0x0073656c
    15f0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    15f4:	6b2f4332 	blvs	bd22c4 <_bss_end+0xbc1244>
    15f8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    15fc:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1600:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
    1604:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1608:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1444 <CPSR_IRQ_INHIBIT+0x13c4>
    160c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1610:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1614:	4b2f7372 	blmi	bde3e4 <_bss_end+0xbcd364>
    1618:	2f616275 	svccs	0x00616275
    161c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1620:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1624:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1628:	614d6f72 	hvcvs	55026	; 0xd6f2
    162c:	652f6574 	strvs	r6, [pc, #-1396]!	; 10c0 <CPSR_IRQ_INHIBIT+0x1040>
    1630:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1634:	2f73656c 	svccs	0x0073656c
    1638:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    163c:	6b2f4332 	blvs	bd230c <_bss_end+0xbc128c>
    1640:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1644:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    1648:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    164c:	6f622f65 	svcvs	0x00622f65
    1650:	2f647261 	svccs	0x00647261
    1654:	30697072 	rsbcc	r7, r9, r2, ror r0
    1658:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    165c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1660:	2f632f74 	svccs	0x00632f74
    1664:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1668:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    166c:	442f6162 	strtmi	r6, [pc], #-354	; 1674 <CPSR_IRQ_INHIBIT+0x15f4>
    1670:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1674:	73746e65 	cmnvc	r4, #1616	; 0x650
    1678:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    167c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1680:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1684:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1688:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    168c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1690:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1694:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1698:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    169c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    16a0:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    16a4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    16a8:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    16ac:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    16b0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    16b4:	2e726574 	mrccs	5, 3, r6, cr2, cr4, {3}
    16b8:	00707063 	rsbseq	r7, r0, r3, rrx
    16bc:	69000001 	stmdbvs	r0, {r0}
    16c0:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
    16c4:	00682e66 	rsbeq	r2, r8, r6, ror #28
    16c8:	70000002 	andvc	r0, r0, r2
    16cc:	70697265 	rsbvc	r7, r9, r5, ror #4
    16d0:	61726568 	cmnvs	r2, r8, ror #10
    16d4:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    16d8:	00000200 	andeq	r0, r0, r0, lsl #4
    16dc:	6f697067 	svcvs	0x00697067
    16e0:	0300682e 	movweq	r6, #2094	; 0x82e
    16e4:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    16e8:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    16ec:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    16f0:	2e726574 	mrccs	5, 3, r6, cr2, cr4, {3}
    16f4:	00030068 	andeq	r0, r3, r8, rrx
    16f8:	01050000 	mrseq	r0, (UNDEF: 5)
    16fc:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    1700:	180000ae 	stmdane	r0, {r1, r2, r3, r5, r7}
    1704:	05d91605 	ldrbeq	r1, [r9, #1541]	; 0x605
    1708:	a1230801 			; <UNDEFINED> instruction: 0xa1230801
    170c:	05830905 	streq	r0, [r3, #2309]	; 0x905
    1710:	10054a05 	andne	r4, r5, r5, lsl #20
    1714:	4e1b054b 	cfmac32mi	mvfx0, mvfx11, mvfx11
    1718:	05d60905 	ldrbeq	r0, [r6, #2309]	; 0x905
    171c:	10054a05 	andne	r4, r5, r5, lsl #20
    1720:	4c1b054b 	cfldr32mi	mvfx0, [fp], {75}	; 0x4b
    1724:	05d60905 	ldrbeq	r0, [r6, #2309]	; 0x905
    1728:	17054a05 	strne	r4, [r5, -r5, lsl #20]
    172c:	bb10054c 	bllt	402c64 <_bss_end+0x3f1be4>
    1730:	054d1b05 	strbeq	r1, [sp, #-2821]	; 0xfffff4fb
    1734:	0505d609 	streq	sp, [r5, #-1545]	; 0xfffff9f7
    1738:	4c17054a 	cfldr32mi	mvfx0, [r7], {74}	; 0x4a
    173c:	bb1005bb 	bllt	402e30 <_bss_end+0x3f1db0>
    1740:	bb4e1c05 	bllt	138875c <_bss_end+0x13776dc>
    1744:	bc0d05bb 	cfstr32lt	mvfx0, [sp], {187}	; 0xbb
    1748:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
    174c:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    1750:	0905830a 	stmdbeq	r5, {r1, r3, r8, r9, pc}
    1754:	4a05054a 	bmi	142c84 <_bss_end+0x131c04>
    1758:	bb4e1c05 	bllt	1388774 <_bss_end+0x13776f4>
    175c:	bd1305bb 	cfldr32lt	mvfx0, [r3, #-748]	; 0xfffffd14
    1760:	0d05bbbb 	vstreq	d11, [r5, #-748]	; 0xfffffd14
    1764:	030905bc 	movweq	r0, #38332	; 0x95bc
    1768:	01058274 	tsteq	r5, r4, ror r2
    176c:	692e0d03 	stmdbvs	lr!, {r0, r1, r8, sl, fp}
    1770:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    1774:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
    1778:	0905bb0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp, pc}
    177c:	4a05054a 	bmi	142cac <_bss_end+0x131c2c>
    1780:	bd501505 	cfldr64lt	mvdx1, [r0, #-20]	; 0xffffffec
    1784:	bd0c05bc 	cfstr32lt	mvfx0, [ip, #-752]	; 0xfffffd10
    1788:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    178c:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    1790:	04020005 	streq	r0, [r2], #-5
    1794:	1505d602 	strne	sp, [r5, #-1538]	; 0xfffff9fe
    1798:	bd0c0586 	cfstr32lt	mvfx0, [ip, #-536]	; 0xfffffde8
    179c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    17a0:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    17a4:	04020005 	streq	r0, [r2], #-5
    17a8:	1505d602 	strne	sp, [r5, #-1538]	; 0xfffff9fe
    17ac:	03090586 	movweq	r0, #38278	; 0x9586
    17b0:	0105d668 	tsteq	r5, r8, ror #12
    17b4:	692e1903 	stmdbvs	lr!, {r0, r1, r8, fp, ip}
    17b8:	05bb0a05 	ldreq	r0, [fp, #2565]!	; 0xa05
    17bc:	05054a09 	streq	r4, [r5, #-2569]	; 0xfffff5f7
    17c0:	5015054a 	andspl	r0, r5, sl, asr #10
    17c4:	05bd0e05 	ldreq	r0, [sp, #3589]!	; 0xe05
    17c8:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    17cc:	19054a01 	stmdbne	r5, {r0, r9, fp, lr}
    17d0:	4a270568 	bmi	9c2d78 <_bss_end+0x9b1cf8>
    17d4:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    17d8:	19054a32 	stmdbne	r5, {r1, r4, r5, r9, fp, lr}
    17dc:	1005d72e 	andne	sp, r5, lr, lsr #14
    17e0:	001705bc 			; <UNDEFINED> instruction: 0x001705bc
    17e4:	4a030402 	bmi	c27f4 <_bss_end+0xb1774>
    17e8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    17ec:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    17f0:	10058519 	andne	r8, r5, r9, lsl r5
    17f4:	001705bc 			; <UNDEFINED> instruction: 0x001705bc
    17f8:	4a030402 	bmi	c2808 <_bss_end+0xb1788>
    17fc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    1800:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    1804:	04020005 	streq	r0, [r2], #-5
    1808:	82760302 	rsbshi	r0, r6, #134217728	; 0x8000000
    180c:	0f031505 	svceq	0x00031505
    1810:	03090582 	movweq	r0, #38274	; 0x9582
    1814:	0105d669 	tsteq	r5, r9, ror #12
    1818:	662e1803 	strtvs	r1, [lr], -r3, lsl #16
    181c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    1820:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    1824:	85030628 	strhi	r0, [r3, #-1576]	; 0xfffff9d8
    1828:	0105827f 	tsteq	r5, pc, ror r2
    182c:	9e00fb03 	vmlals.f64	d15, d0, d3
    1830:	0a024a9e 	beq	942b0 <_bss_end+0x83230>
    1834:	cf010100 	svcgt	0x00010100
    1838:	03000001 	movweq	r0, #1
    183c:	00012f00 	andeq	r2, r1, r0, lsl #30
    1840:	fb010200 	blx	4204a <_bss_end+0x30fca>
    1844:	01000d0e 	tsteq	r0, lr, lsl #26
    1848:	00010101 	andeq	r0, r1, r1, lsl #2
    184c:	00010000 	andeq	r0, r1, r0
    1850:	6d2f0100 	stfvss	f0, [pc, #-0]	; 1858 <CPSR_IRQ_INHIBIT+0x17d8>
    1854:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1858:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    185c:	4b2f7372 	blmi	bde62c <_bss_end+0xbcd5ac>
    1860:	2f616275 	svccs	0x00616275
    1864:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1868:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    186c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1870:	614d6f72 	hvcvs	55026	; 0xd6f2
    1874:	652f6574 	strvs	r6, [pc, #-1396]!	; 1308 <CPSR_IRQ_INHIBIT+0x1288>
    1878:	706d6178 	rsbvc	r6, sp, r8, ror r1
    187c:	2f73656c 	svccs	0x0073656c
    1880:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1884:	6b2f4332 	blvs	bd2554 <_bss_end+0xbc14d4>
    1888:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    188c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1890:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
    1894:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1898:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 16d4 <CPSR_IRQ_INHIBIT+0x1654>
    189c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    18a0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    18a4:	4b2f7372 	blmi	bde674 <_bss_end+0xbcd5f4>
    18a8:	2f616275 	svccs	0x00616275
    18ac:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    18b0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    18b4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    18b8:	614d6f72 	hvcvs	55026	; 0xd6f2
    18bc:	652f6574 	strvs	r6, [pc, #-1396]!	; 1350 <CPSR_IRQ_INHIBIT+0x12d0>
    18c0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    18c4:	2f73656c 	svccs	0x0073656c
    18c8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    18cc:	6b2f4332 	blvs	bd259c <_bss_end+0xbc151c>
    18d0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    18d4:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    18d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    18dc:	6f622f65 	svcvs	0x00622f65
    18e0:	2f647261 	svccs	0x00647261
    18e4:	30697072 	rsbcc	r7, r9, r2, ror r0
    18e8:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    18ec:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    18f0:	2f632f74 	svccs	0x00632f74
    18f4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    18f8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    18fc:	442f6162 	strtmi	r6, [pc], #-354	; 1904 <CPSR_IRQ_INHIBIT+0x1884>
    1900:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1904:	73746e65 	cmnvc	r4, #1616	; 0x650
    1908:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    190c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1910:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1914:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1918:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    191c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1920:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1924:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1928:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    192c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1930:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1934:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1938:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    193c:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    1940:	00707063 	rsbseq	r7, r0, r3, rrx
    1944:	69000001 	stmdbvs	r0, {r0}
    1948:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
    194c:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1950:	70000002 	andvc	r0, r0, r2
    1954:	70697265 	rsbvc	r7, r9, r5, ror #4
    1958:	61726568 	cmnvs	r2, r8, ror #10
    195c:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    1960:	00000200 	andeq	r0, r0, r0, lsl #4
    1964:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1968:	00682e72 	rsbeq	r2, r8, r2, ror lr
    196c:	00000003 	andeq	r0, r0, r3
    1970:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1974:	00b4a802 	adcseq	sl, r4, r2, lsl #16
    1978:	01190300 	tsteq	r9, r0, lsl #6
    197c:	059f0f05 	ldreq	r0, [pc, #3845]	; 2889 <CPSR_IRQ_INHIBIT+0x2809>
    1980:	01052f14 	tsteq	r5, r4, lsl pc
    1984:	0c05a1a1 	stfeqd	f2, [r5], {161}	; 0xa1
    1988:	4a18059f 	bmi	60300c <_bss_end+0x5f1f8c>
    198c:	052e3605 	streq	r3, [lr, #-1541]!	; 0xfffff9fb
    1990:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
    1994:	2005d71e 	andcs	sp, r5, lr, lsl r7
    1998:	4d150582 	cfldr32mi	mvfx0, [r5, #-520]	; 0xfffffdf8
    199c:	05671b05 	strbeq	r1, [r7, #-2821]!	; 0xfffff4fb
    19a0:	15056717 	strne	r6, [r5, #-1815]	; 0xfffff8e9
    19a4:	66130567 	ldrvs	r0, [r3], -r7, ror #10
    19a8:	05d84605 	ldrbeq	r4, [r8, #1541]	; 0x605
    19ac:	25052e21 	strcs	r2, [r5, #-3617]	; 0xfffff1df
    19b0:	2e230582 	cfsh64cs	mvdx0, mvdx3, #-62
    19b4:	82250530 	eorhi	r0, r5, #48, 10	; 0xc000000
    19b8:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
    19bc:	05696701 	strbeq	r6, [r9, #-1793]!	; 0xfffff8ff
    19c0:	1b05836f 	blne	162784 <_bss_end+0x151704>
    19c4:	83170584 	tsthi	r7, #132, 10	; 0x21000000
    19c8:	69830105 	stmibvs	r3, {r0, r2, r8}
    19cc:	05832305 	streq	r2, [r3, #773]	; 0x305
    19d0:	09058225 	stmdbeq	r5, {r0, r2, r5, r9, pc}
    19d4:	4a05054c 	bmi	142f0c <_bss_end+0x131e8c>
    19d8:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    19dc:	01054a12 	tsteq	r5, r2, lsl sl
    19e0:	2b05692f 	blcs	15bea4 <_bss_end+0x14ae24>
    19e4:	82100583 	andshi	r0, r0, #549453824	; 0x20c00000
    19e8:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    19ec:	9e668301 	cdpls	3, 6, cr8, cr6, cr1, {0}
    19f0:	01040200 	mrseq	r0, R12_usr
    19f4:	1e056606 	cfmadd32ne	mvax0, mvfx6, mvfx5, mvfx6
    19f8:	7fba0306 	svcvc	0x00ba0306
    19fc:	03010582 	movweq	r0, #5506	; 0x1582
    1a00:	ba6600c6 	blt	1981d20 <_bss_end+0x1970ca0>
    1a04:	000a024a 	andeq	r0, sl, sl, asr #4
    1a08:	01ea0101 	mvneq	r0, r1, lsl #2
    1a0c:	00030000 	andeq	r0, r3, r0
    1a10:	0000012d 	andeq	r0, r0, sp, lsr #2
    1a14:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1a18:	0101000d 	tsteq	r1, sp
    1a1c:	00000101 	andeq	r0, r0, r1, lsl #2
    1a20:	00000100 	andeq	r0, r0, r0, lsl #2
    1a24:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    1a28:	2f632f74 	svccs	0x00632f74
    1a2c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1a30:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1a34:	442f6162 	strtmi	r6, [pc], #-354	; 1a3c <CPSR_IRQ_INHIBIT+0x19bc>
    1a38:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1a3c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1a40:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1a44:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1a48:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1a4c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1a50:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1a54:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1a58:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1a5c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1a60:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1a64:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1a68:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1a6c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1a70:	2f632f74 	svccs	0x00632f74
    1a74:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1a78:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1a7c:	442f6162 	strtmi	r6, [pc], #-354	; 1a84 <CPSR_IRQ_INHIBIT+0x1a04>
    1a80:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1a84:	73746e65 	cmnvc	r4, #1616	; 0x650
    1a88:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1a8c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1a90:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1a94:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1a98:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1a9c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1aa0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1aa4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1aa8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1aac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1ab0:	616f622f 	cmnvs	pc, pc, lsr #4
    1ab4:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    1ab8:	2f306970 	svccs	0x00306970
    1abc:	006c6168 	rsbeq	r6, ip, r8, ror #2
    1ac0:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1ac4:	552f632f 	strpl	r6, [pc, #-815]!	; 179d <CPSR_IRQ_INHIBIT+0x171d>
    1ac8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1acc:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1ad0:	6f442f61 	svcvs	0x00442f61
    1ad4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1ad8:	2f73746e 	svccs	0x0073746e
    1adc:	6f72655a 	svcvs	0x0072655a
    1ae0:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1ae4:	6178652f 	cmnvs	r8, pc, lsr #10
    1ae8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1aec:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1af0:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1af4:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1af8:	2f6c656e 	svccs	0x006c656e
    1afc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1b00:	2f656475 	svccs	0x00656475
    1b04:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1b08:	00737265 	rsbseq	r7, r3, r5, ror #4
    1b0c:	6e727400 	cdpvs	4, 7, cr7, cr2, cr0, {0}
    1b10:	70632e67 	rsbvc	r2, r3, r7, ror #28
    1b14:	00010070 	andeq	r0, r1, r0, ror r0
    1b18:	72657000 	rsbvc	r7, r5, #0
    1b1c:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    1b20:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    1b24:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1b28:	72740000 	rsbsvc	r0, r4, #0
    1b2c:	682e676e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    1b30:	00000300 	andeq	r0, r0, r0, lsl #6
    1b34:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    1b38:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1b3c:	00000200 	andeq	r0, r0, r0, lsl #4
    1b40:	00010500 	andeq	r0, r1, r0, lsl #10
    1b44:	b7380205 	ldrlt	r0, [r8, -r5, lsl #4]!
    1b48:	05190000 	ldreq	r0, [r9, #-0]
    1b4c:	0105a00c 	tsteq	r5, ip
    1b50:	0905a1bd 	stmdbeq	r5, {r0, r2, r3, r4, r5, r7, r8, sp, pc}
    1b54:	4a0505bd 	bmi	143250 <_bss_end+0x1321d0>
    1b58:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    1b5c:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1b60:	05056710 	streq	r6, [r5, #-1808]	; 0xfffff8f0
    1b64:	4a0c054c 	bmi	30309c <_bss_end+0x2f201c>
    1b68:	05680505 	strbeq	r0, [r8, #-1285]!	; 0xfffffafb
    1b6c:	3e054a3c 			; <UNDEFINED> instruction: 0x3e054a3c
    1b70:	4b05052e 	blmi	143030 <_bss_end+0x131fb0>
    1b74:	054a3e05 	strbeq	r3, [sl, #-3589]	; 0xfffff1fb
    1b78:	05052e40 	streq	r2, [r5, #-3648]	; 0xfffff1c0
    1b7c:	4a3e052e 	bmi	f8303c <_bss_end+0xf71fbc>
    1b80:	052e4005 	streq	r4, [lr, #-5]!
    1b84:	3f054c05 	svccc	0x00054c05
    1b88:	2e05054a 	cfsh32cs	mvfx0, mvfx5, #42
    1b8c:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
    1b90:	45054d0e 	strmi	r4, [r5, #-3342]	; 0xfffff2f2
    1b94:	4a47054a 	bmi	11c30c4 <_bss_end+0x11b2044>
    1b98:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    1b9c:	0c05ba05 			; <UNDEFINED> instruction: 0x0c05ba05
    1ba0:	2f010531 	svccs	0x00010531
    1ba4:	830a0585 	movwhi	r0, #42373	; 0xa585
    1ba8:	4d4a0505 	cfstr64mi	mvdx0, [sl, #-20]	; 0xffffffec
    1bac:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1bb0:	05056809 	streq	r6, [r5, #-2057]	; 0xfffff7f7
    1bb4:	4b09054a 	blmi	2430e4 <_bss_end+0x232064>
    1bb8:	054a4305 	strbeq	r4, [sl, #-773]	; 0xfffffcfb
    1bbc:	01056109 	tsteq	r5, r9, lsl #2
    1bc0:	0d056934 	vstreq.16	s12, [r5, #-104]	; 0xffffff98	; <UNPREDICTABLE>
    1bc4:	4a180583 	bmi	6031d8 <_bss_end+0x5f2158>
    1bc8:	85830105 	strhi	r0, [r3, #261]	; 0x105
    1bcc:	05830905 	streq	r0, [r3, #2309]	; 0x905
    1bd0:	10054a05 	andne	r4, r5, r5, lsl #20
    1bd4:	500c054b 	andpl	r0, ip, fp, asr #10
    1bd8:	054a4105 	strbeq	r4, [sl, #-261]	; 0xfffffefb
    1bdc:	9e824b01 	vdivls.f64	d4, d2, d1
    1be0:	01040200 	mrseq	r0, R12_usr
    1be4:	1b056606 	blne	15b404 <_bss_end+0x14a384>
    1be8:	82450306 	subhi	r0, r5, #402653184	; 0x18000000
    1bec:	3b030105 	blcc	c2008 <_bss_end+0xb0f88>
    1bf0:	024aba66 	subeq	fp, sl, #417792	; 0x66000
    1bf4:	0101000a 	tsteq	r1, sl
    1bf8:	000004ca 	andeq	r0, r0, sl, asr #9
    1bfc:	01d30003 	bicseq	r0, r3, r3
    1c00:	01020000 	mrseq	r0, (UNDEF: 2)
    1c04:	000d0efb 	strdeq	r0, [sp], -fp
    1c08:	01010101 	tsteq	r1, r1, lsl #2
    1c0c:	01000000 	mrseq	r0, (UNDEF: 0)
    1c10:	2f010000 	svccs	0x00010000
    1c14:	2f746e6d 	svccs	0x00746e6d
    1c18:	73552f63 	cmpvc	r5, #396	; 0x18c
    1c1c:	2f737265 	svccs	0x00737265
    1c20:	6162754b 	cmnvs	r2, fp, asr #10
    1c24:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1c28:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1c2c:	5a2f7374 	bpl	bdea04 <_bss_end+0xbcd984>
    1c30:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 1aa4 <CPSR_IRQ_INHIBIT+0x1a24>
    1c34:	2f657461 	svccs	0x00657461
    1c38:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1c3c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    1c40:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1c44:	2f433249 	svccs	0x00433249
    1c48:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1c4c:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1c50:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1c54:	662f6564 	strtvs	r6, [pc], -r4, ror #10
    1c58:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1a94 <CPSR_IRQ_INHIBIT+0x1a14>
    1c5c:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1c60:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1c64:	4b2f7372 	blmi	bdea34 <_bss_end+0xbcd9b4>
    1c68:	2f616275 	svccs	0x00616275
    1c6c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1c70:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1c74:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1c78:	614d6f72 	hvcvs	55026	; 0xd6f2
    1c7c:	652f6574 	strvs	r6, [pc, #-1396]!	; 1710 <CPSR_IRQ_INHIBIT+0x1690>
    1c80:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1c84:	2f73656c 	svccs	0x0073656c
    1c88:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1c8c:	6b2f4332 	blvs	bd295c <_bss_end+0xbc18dc>
    1c90:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1c94:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1c98:	73662f63 	cmnvc	r6, #396	; 0x18c
    1c9c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    1ca0:	2f632f74 	svccs	0x00632f74
    1ca4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1ca8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1cac:	442f6162 	strtmi	r6, [pc], #-354	; 1cb4 <CPSR_IRQ_INHIBIT+0x1c34>
    1cb0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1cb4:	73746e65 	cmnvc	r4, #1616	; 0x650
    1cb8:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1cbc:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    1cc0:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1cc4:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1cc8:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1ccc:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    1cd0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1cd4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1cd8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1cdc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1ce0:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    1ce4:	0079726f 	rsbseq	r7, r9, pc, ror #4
    1ce8:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1cec:	552f632f 	strpl	r6, [pc, #-815]!	; 19c5 <CPSR_IRQ_INHIBIT+0x1945>
    1cf0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1cf4:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1cf8:	6f442f61 	svcvs	0x00442f61
    1cfc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1d00:	2f73746e 	svccs	0x0073746e
    1d04:	6f72655a 	svcvs	0x0072655a
    1d08:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1d0c:	6178652f 	cmnvs	r8, pc, lsr #10
    1d10:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1d14:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1d18:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1d1c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1d20:	2f6c656e 	svccs	0x006c656e
    1d24:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d28:	2f656475 	svccs	0x00656475
    1d2c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1d30:	00737265 	rsbseq	r7, r3, r5, ror #4
    1d34:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1d38:	552f632f 	strpl	r6, [pc, #-815]!	; 1a11 <CPSR_IRQ_INHIBIT+0x1991>
    1d3c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1d40:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1d44:	6f442f61 	svcvs	0x00442f61
    1d48:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1d4c:	2f73746e 	svccs	0x0073746e
    1d50:	6f72655a 	svcvs	0x0072655a
    1d54:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1d58:	6178652f 	cmnvs	r8, pc, lsr #10
    1d5c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1d60:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1d64:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1d68:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1d6c:	2f6c656e 	svccs	0x006c656e
    1d70:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d74:	2f656475 	svccs	0x00656475
    1d78:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    1d7c:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    1d80:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    1d84:	00006c61 	andeq	r6, r0, r1, ror #24
    1d88:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    1d8c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1d90:	682e6d65 	stmdavs	lr!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
    1d94:	00000100 	andeq	r0, r0, r0, lsl #2
    1d98:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    1d9c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1da0:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    1da4:	02007070 	andeq	r7, r0, #112	; 0x70
    1da8:	656b0000 	strbvs	r0, [fp, #-0]!
    1dac:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1db0:	6165685f 	cmnvs	r5, pc, asr r8
    1db4:	00682e70 	rsbeq	r2, r8, r0, ror lr
    1db8:	6d000003 	stcvs	0, cr0, [r0, #-12]
    1dbc:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    1dc0:	682e726f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    1dc4:	00000400 	andeq	r0, r0, r0, lsl #8
    1dc8:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    1dcc:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1dd0:	00000500 	andeq	r0, r0, r0, lsl #10
    1dd4:	000c0500 	andeq	r0, ip, r0, lsl #10
    1dd8:	c2140205 	andsgt	r0, r4, #1342177280	; 0x50000000
    1ddc:	cf030000 	svcgt	0x00030000
    1de0:	02820100 	addeq	r0, r2, #0, 2
    1de4:	01010016 	tsteq	r1, r6, lsl r0
    1de8:	01050204 	tsteq	r5, r4, lsl #4
    1dec:	b8020500 	stmdalt	r2, {r8, sl}
    1df0:	030000b9 	movweq	r0, #185	; 0xb9
    1df4:	1a050109 	bne	142220 <_bss_end+0x1311a0>
    1df8:	08120582 	ldmdaeq	r2, {r1, r7, r8, sl}
    1dfc:	671005cc 	ldrvs	r0, [r0, -ip, asr #11]
    1e00:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    1e04:	17054a14 	smladne	r5, r4, sl, r4
    1e08:	6716054b 	ldrvs	r0, [r6, -fp, asr #10]
    1e0c:	05671305 	strbeq	r1, [r7, #-773]!	; 0xfffffcfb
    1e10:	16056818 			; <UNDEFINED> instruction: 0x16056818
    1e14:	4b18052e 	blmi	6032d4 <_bss_end+0x5f2254>
    1e18:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    1e1c:	1b054a14 	blne	154674 <_bss_end+0x1435f4>
    1e20:	671a054b 	ldrvs	r0, [sl, -fp, asr #10]
    1e24:	05671705 	strbeq	r1, [r7, #-1797]!	; 0xfffff8fb
    1e28:	18054a0c 	stmdane	r5, {r2, r3, r9, fp, lr}
    1e2c:	2e160584 	cdpcs	5, 1, cr0, cr6, cr4, {4}
    1e30:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    1e34:	14056716 	strne	r6, [r5], #-1814	; 0xfffff8ea
    1e38:	4b1b054a 	blmi	6c3368 <_bss_end+0x6b22e8>
    1e3c:	05671a05 	strbeq	r1, [r7, #-2565]!	; 0xfffff5fb
    1e40:	0c056717 	stceq	7, cr6, [r5], {23}
    1e44:	8418054a 	ldrhi	r0, [r8], #-1354	; 0xfffffab6
    1e48:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    1e4c:	14054b18 	strne	r4, [r5], #-2840	; 0xfffff4e8
    1e50:	671b0567 	ldrvs	r0, [fp, -r7, ror #10]
    1e54:	05671a05 	strbeq	r1, [r7, #-2565]!	; 0xfffff5fb
    1e58:	0c056717 	stceq	7, cr6, [r5], {23}
    1e5c:	8301054a 	movwhi	r0, #5450	; 0x154a
    1e60:	9f1405d9 	svcls	0x001405d9
    1e64:	05681205 	strbeq	r1, [r8, #-517]!	; 0xfffffdfb
    1e68:	1405681c 	strne	r6, [r5], #-2076	; 0xfffff7e4
    1e6c:	9e3b052e 	cdpls	5, 3, cr0, cr11, cr14, {1}
    1e70:	05820905 	streq	r0, [r2, #2309]	; 0x905
    1e74:	0f054b14 	svceq	0x00054b14
    1e78:	6105054c 	tstvs	r5, ip, asr #10
    1e7c:	05360c05 	ldreq	r0, [r6, #-3077]!	; 0xfffff3fb
    1e80:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    1e84:	0c058311 	stceq	3, cr8, [r5], {17}
    1e88:	0011056d 	andseq	r0, r1, sp, ror #10
    1e8c:	4a010402 	bmi	42e9c <_bss_end+0x31e1c>
    1e90:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    1e94:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1e98:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1e9c:	1b054a01 	blne	1546a8 <_bss_end+0x143628>
    1ea0:	f40f054c 	vst3.16	{d0,d2,d4}, [pc], ip
    1ea4:	05681505 	strbeq	r1, [r8, #-1285]!	; 0xfffffafb
    1ea8:	32058229 	andcc	r8, r5, #-1879048190	; 0x90000002
    1eac:	68180582 	ldmdavs	r8, {r1, r7, r8, sl}
    1eb0:	054a2805 	strbeq	r2, [sl, #-2053]	; 0xfffff7fb
    1eb4:	19054c17 	stmdbne	r5, {r0, r1, r2, r4, sl, fp, lr}
    1eb8:	4c14054a 	cfldr32mi	mvfx0, [r4], {74}	; 0x4a
    1ebc:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1ec0:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1ec4:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    1ec8:	34052e01 	strcc	r2, [r5], #-3585	; 0xfffff1ff
    1ecc:	02040200 	andeq	r0, r4, #0, 4
    1ed0:	0035054a 	eorseq	r0, r5, sl, asr #10
    1ed4:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1ed8:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    1edc:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    1ee0:	1c054c1b 	stcne	12, cr4, [r5], {27}
    1ee4:	6611052e 	ldrvs	r0, [r1], -lr, lsr #10
    1ee8:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    1eec:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1ef0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1ef4:	25052e01 	strcs	r2, [r5, #-3585]	; 0xfffff1ff
    1ef8:	01040200 	mrseq	r0, R12_usr
    1efc:	00240566 	eoreq	r0, r4, r6, ror #10
    1f00:	4d030402 	cfstrsmi	mvf0, [r3, #-8]
    1f04:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    1f08:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    1f0c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    1f10:	0d056603 	stceq	6, cr6, [r5, #-12]
    1f14:	03040200 	movweq	r0, #16896	; 0x4200
    1f18:	8a180599 	bhi	603584 <_bss_end+0x5f2504>
    1f1c:	05a01605 	streq	r1, [r0, #1541]!	; 0x605
    1f20:	18052e13 	stmdane	r5, {r0, r1, r4, r9, sl, fp, sp}
    1f24:	4a0d0567 	bmi	3434c8 <_bss_end+0x332448>
    1f28:	054c1705 	strbeq	r1, [ip, #-1797]	; 0xfffff8fb
    1f2c:	2f056919 	svccs	0x00056919
    1f30:	9e3a0582 	cfadd32ls	mvfx0, mvfx10, mvfx2
    1f34:	05682705 	strbeq	r2, [r8, #-1797]!	; 0xfffff8fb
    1f38:	1605a00d 	strne	sl, [r5], -sp
    1f3c:	4b1d0568 	blmi	7434e4 <_bss_end+0x732464>
    1f40:	05822905 	streq	r2, [r2, #2309]	; 0x905
    1f44:	3a059e34 	bcc	16981c <_bss_end+0x15879c>
    1f48:	67220587 	strvs	r0, [r2, -r7, lsl #11]!
    1f4c:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    1f50:	23058321 	movwcs	r8, #21281	; 0x5321
    1f54:	67250567 	strvs	r0, [r5, -r7, ror #10]!
    1f58:	05672605 	strbeq	r2, [r7, #-1541]!	; 0xfffff9fb
    1f5c:	1f056727 	svcne	0x00056727
    1f60:	4b20054a 	blmi	803490 <_bss_end+0x7f2410>
    1f64:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    1f68:	05674c1d 	strbeq	r4, [r7, #-3101]!	; 0xfffff3e3
    1f6c:	3b058233 	blcc	162840 <_bss_end+0x1517c0>
    1f70:	0309059e 	movweq	r0, #38302	; 0x959e
    1f74:	13056656 	movwne	r6, #22102	; 0x5656
    1f78:	052e3103 	streq	r3, [lr, #-259]!	; 0xfffffefd
    1f7c:	1c054a09 			; <UNDEFINED> instruction: 0x1c054a09
    1f80:	02040200 	andeq	r0, r4, #0, 4
    1f84:	001a054d 	andseq	r0, sl, sp, asr #10
    1f88:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1f8c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    1f90:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    1f94:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    1f98:	21058202 	tstcs	r5, r2, lsl #4
    1f9c:	02040200 	andeq	r0, r4, #0, 4
    1fa0:	0005054a 	andeq	r0, r5, sl, asr #10
    1fa4:	03020402 	movweq	r0, #9218	; 0x2402
    1fa8:	054a7fbf 	strbeq	r7, [sl, #-4031]	; 0xfffff041
    1fac:	00c40311 	sbceq	r0, r4, r1, lsl r3
    1fb0:	030d0582 	movweq	r0, #54658	; 0xd582
    1fb4:	01058278 	tsteq	r5, r8, ror r2
    1fb8:	082e0903 	stmdaeq	lr!, {r0, r1, r8, fp}
    1fbc:	bd1105cb 	cfldr32lt	mvfx0, [r1, #-812]	; 0xfffffcd4
    1fc0:	05822505 	streq	r2, [r2, #1285]	; 0x505
    1fc4:	0b05822d 	bleq	162880 <_bss_end+0x151800>
    1fc8:	4c14056a 	cfldr32mi	mvfx0, [r4], {106}	; 0x6a
    1fcc:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    1fd0:	15054c13 	strne	r4, [r5, #-3091]	; 0xfffff3ed
    1fd4:	4c10054a 	cfldr32mi	mvfx0, [r0], {74}	; 0x4a
    1fd8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    1fdc:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1fe0:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    1fe4:	30052e01 	andcc	r2, r5, r1, lsl #28
    1fe8:	02040200 	andeq	r0, r4, #0, 4
    1fec:	0031054a 	eorseq	r0, r1, sl, asr #10
    1ff0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1ff4:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    1ff8:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    1ffc:	18054c17 	stmdane	r5, {r0, r1, r2, r4, sl, fp, lr}
    2000:	660d052e 	strvs	r0, [sp], -lr, lsr #10
    2004:	02002a05 	andeq	r2, r0, #20480	; 0x5000
    2008:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    200c:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    2010:	21052e01 	tstcs	r5, r1, lsl #28
    2014:	01040200 	mrseq	r0, R12_usr
    2018:	00200566 	eoreq	r0, r0, r6, ror #10
    201c:	4d030402 	cfstrsmi	mvf0, [r3, #-8]
    2020:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    2024:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    2028:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    202c:	09056603 	stmdbeq	r5, {r0, r1, r9, sl, sp, lr}
    2030:	03040200 	movweq	r0, #16896	; 0x4200
    2034:	8a140599 	bhi	5036a0 <_bss_end+0x4f2620>
    2038:	05a01205 	streq	r1, [r0, #517]!	; 0x205
    203c:	14052e0f 	strne	r2, [r5], #-3599	; 0xfffff1f1
    2040:	4a090567 	bmi	2435e4 <_bss_end+0x232564>
    2044:	054c1305 	strbeq	r1, [ip, #-773]	; 0xfffffcfb
    2048:	09056923 	stmdbeq	r5, {r0, r1, r5, r8, fp, sp, lr}
    204c:	6712059f 			; <UNDEFINED> instruction: 0x6712059f
    2050:	054c1605 	strbeq	r1, [ip, #-1541]	; 0xfffff9fb
    2054:	29054a09 	stmdbcs	r5, {r0, r3, r9, fp, lr}
    2058:	4a35054c 	bmi	d43590 <_bss_end+0xd32510>
    205c:	05f22905 	ldrbeq	r2, [r2, #2309]!	; 0x905
    2060:	52058235 	andpl	r8, r5, #1342177283	; 0x50000003
    2064:	664605f2 			; <UNDEFINED> instruction: 0x664605f2
    2068:	05825205 	streq	r5, [r2, #517]	; 0x205
    206c:	1205301c 	andne	r3, r5, #28
    2070:	4a0e054a 	bmi	3835a0 <_bss_end+0x372520>
    2074:	66030505 	strvs	r0, [r3], -r5, lsl #10
    2078:	030d054a 	movweq	r0, #54602	; 0xd54a
    207c:	11052e1b 	tstne	r5, fp, lsl lr
    2080:	82270531 	eorhi	r0, r7, #205520896	; 0xc400000
    2084:	05822f05 	streq	r2, [r2, #3845]	; 0xf05
    2088:	0105690c 	tsteq	r5, ip, lsl #18
    208c:	01040200 	mrseq	r0, R12_usr
    2090:	009ef22f 	addseq	pc, lr, pc, lsr #4
    2094:	06010402 	streq	r0, [r1], -r2, lsl #8
    2098:	060d0566 	streq	r0, [sp], -r6, ror #10
    209c:	827ed003 	rsbshi	sp, lr, #3
    20a0:	b0030105 	andlt	r0, r3, r5, lsl #2
    20a4:	4a9e4a01 	bmi	fe7948b0 <_bss_end+0xfe783830>
    20a8:	01000a02 	tsteq	r0, r2, lsl #20
    20ac:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    20b0:	02050008 	andeq	r0, r5, #8
    20b4:	0000c250 	andeq	ip, r0, r0, asr r2
    20b8:	05011d03 	streq	r1, [r1, #-3331]	; 0xfffff2fd
    20bc:	0505842a 	streq	r8, [r5, #-1066]	; 0xfffffbd6
    20c0:	00060283 	andeq	r0, r6, r3, lsl #5
    20c4:	0a5d0101 	beq	17424d0 <_bss_end+0x1731450>
    20c8:	00030000 	andeq	r0, r3, r0
    20cc:	00000322 	andeq	r0, r0, r2, lsr #6
    20d0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    20d4:	0101000d 	tsteq	r1, sp
    20d8:	00000101 	andeq	r0, r0, r1, lsl #2
    20dc:	00000100 	andeq	r0, r0, r0, lsl #2
    20e0:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    20e4:	2f632f74 	svccs	0x00632f74
    20e8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    20ec:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    20f0:	442f6162 	strtmi	r6, [pc], #-354	; 20f8 <CPSR_IRQ_INHIBIT+0x2078>
    20f4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    20f8:	73746e65 	cmnvc	r4, #1616	; 0x650
    20fc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2100:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2104:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2108:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    210c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2110:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2114:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2118:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    211c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2120:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2124:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    2128:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    212c:	552f632f 	strpl	r6, [pc, #-815]!	; 1e05 <CPSR_IRQ_INHIBIT+0x1d85>
    2130:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    2134:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    2138:	6f442f61 	svcvs	0x00442f61
    213c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    2140:	2f73746e 	svccs	0x0073746e
    2144:	6f72655a 	svcvs	0x0072655a
    2148:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    214c:	6178652f 	cmnvs	r8, pc, lsr #10
    2150:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2154:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2158:	4332492d 	teqmi	r2, #737280	; 0xb4000
    215c:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2160:	2f6c656e 	svccs	0x006c656e
    2164:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2168:	2f656475 	svccs	0x00656475
    216c:	6f6d656d 	svcvs	0x006d656d
    2170:	2f007972 	svccs	0x00007972
    2174:	2f746e6d 	svccs	0x00746e6d
    2178:	73552f63 	cmpvc	r5, #396	; 0x18c
    217c:	2f737265 	svccs	0x00737265
    2180:	6162754b 	cmnvs	r2, fp, asr #10
    2184:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2188:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    218c:	5a2f7374 	bpl	bdef64 <_bss_end+0xbcdee4>
    2190:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 2004 <CPSR_IRQ_INHIBIT+0x1f84>
    2194:	2f657461 	svccs	0x00657461
    2198:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    219c:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    21a0:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    21a4:	2f433249 	svccs	0x00433249
    21a8:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    21ac:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    21b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    21b4:	662f6564 	strtvs	r6, [pc], -r4, ror #10
    21b8:	72642f73 	rsbvc	r2, r4, #460	; 0x1cc
    21bc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    21c0:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 1ffc <CPSR_IRQ_INHIBIT+0x1f7c>
    21c4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    21c8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    21cc:	4b2f7372 	blmi	bdef9c <_bss_end+0xbcdf1c>
    21d0:	2f616275 	svccs	0x00616275
    21d4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    21d8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    21dc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    21e0:	614d6f72 	hvcvs	55026	; 0xd6f2
    21e4:	652f6574 	strvs	r6, [pc, #-1396]!	; 1c78 <CPSR_IRQ_INHIBIT+0x1bf8>
    21e8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    21ec:	2f73656c 	svccs	0x0073656c
    21f0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    21f4:	6b2f4332 	blvs	bd2ec4 <_bss_end+0xbc1e44>
    21f8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    21fc:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2200:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2204:	6f622f65 	svcvs	0x00622f65
    2208:	2f647261 	svccs	0x00647261
    220c:	30697072 	rsbcc	r7, r9, r2, ror r0
    2210:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    2214:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2218:	2f632f74 	svccs	0x00632f74
    221c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2220:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2224:	442f6162 	strtmi	r6, [pc], #-354	; 222c <CPSR_IRQ_INHIBIT+0x21ac>
    2228:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    222c:	73746e65 	cmnvc	r4, #1616	; 0x650
    2230:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2234:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2238:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    223c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2240:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2244:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2248:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    224c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2250:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2254:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2258:	6f72702f 	svcvs	0x0072702f
    225c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2260:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2264:	2f632f74 	svccs	0x00632f74
    2268:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    226c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2270:	442f6162 	strtmi	r6, [pc], #-354	; 2278 <CPSR_IRQ_INHIBIT+0x21f8>
    2274:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2278:	73746e65 	cmnvc	r4, #1616	; 0x650
    227c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2280:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2284:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2288:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    228c:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2290:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2294:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2298:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    229c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    22a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    22a4:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    22a8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    22ac:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    22b0:	2f632f74 	svccs	0x00632f74
    22b4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    22b8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    22bc:	442f6162 	strtmi	r6, [pc], #-354	; 22c4 <CPSR_IRQ_INHIBIT+0x2244>
    22c0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    22c4:	73746e65 	cmnvc	r4, #1616	; 0x650
    22c8:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    22cc:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    22d0:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    22d4:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    22d8:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    22dc:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    22e0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    22e4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    22e8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    22ec:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    22f0:	6c696600 	stclvs	6, cr6, [r9], #-0
    22f4:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    22f8:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    22fc:	00010068 	andeq	r0, r1, r8, rrx
    2300:	72656b00 	rsbvc	r6, r5, #0, 22
    2304:	5f6c656e 	svcpl	0x006c656e
    2308:	70616568 	rsbvc	r6, r1, r8, ror #10
    230c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2310:	70670000 	rsbvc	r0, r7, r0
    2314:	665f6f69 	ldrbvs	r6, [pc], -r9, ror #30
    2318:	00682e73 	rsbeq	r2, r8, r3, ror lr
    231c:	6d000003 	stcvs	0, cr0, [r0, #-12]
    2320:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    2324:	665f726f 	ldrbvs	r7, [pc], -pc, ror #4
    2328:	00682e73 	rsbeq	r2, r8, r3, ror lr
    232c:	73000003 	movwvc	r0, #3
    2330:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2334:	6964746e 	stmdbvs	r4!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2338:	616c7073 	smcvs	50947	; 0xc703
    233c:	73665f79 	cmnvc	r6, #484	; 0x1e4
    2340:	0300682e 	movweq	r6, #2094	; 0x82e
    2344:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    2348:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    234c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2350:	5f726574 	svcpl	0x00726574
    2354:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    2358:	00000300 	andeq	r0, r0, r0, lsl #6
    235c:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    2360:	2e73665f 	mrccs	6, 3, r6, cr3, cr15, {2}
    2364:	00030068 	andeq	r0, r3, r8, rrx
    2368:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    236c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    2370:	00040068 	andeq	r0, r4, r8, rrx
    2374:	69777300 	ldmdbvs	r7!, {r8, r9, ip, sp, lr}^
    2378:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    237c:	65700000 	ldrbvs	r0, [r0, #-0]!
    2380:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2384:	6c617265 	sfmvs	f7, 2, [r1], #-404	; 0xfffffe6c
    2388:	00682e73 	rsbeq	r2, r8, r3, ror lr
    238c:	67000004 	strvs	r0, [r0, -r4]
    2390:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    2394:	00060068 	andeq	r0, r6, r8, rrx
    2398:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    239c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    23a0:	0600682e 	streq	r6, [r0], -lr, lsr #16
    23a4:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    23a8:	72746669 	rsbsvc	r6, r4, #110100480	; 0x6900000
    23ac:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    23b0:	2e726574 	mrccs	5, 3, r6, cr2, cr4, {3}
    23b4:	00060068 	andeq	r0, r6, r8, rrx
    23b8:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
    23bc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    23c0:	70736964 	rsbsvc	r6, r3, r4, ror #18
    23c4:	2e79616c 	rpwcsez	f6, f1, #4.0
    23c8:	00060068 	andeq	r0, r6, r8, rrx
    23cc:	6e727400 	cdpvs	4, 7, cr7, cr2, cr0, {0}
    23d0:	00682e67 	rsbeq	r2, r8, r7, ror #28
    23d4:	66000006 	strvs	r0, [r0], -r6
    23d8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    23dc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    23e0:	72645f6d 	rsbvc	r5, r4, #436	; 0x1b4
    23e4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    23e8:	70632e73 	rsbvc	r2, r3, r3, ror lr
    23ec:	00070070 	andeq	r0, r7, r0, ror r0
    23f0:	16050000 	strne	r0, [r5], -r0
    23f4:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    23f8:	030000c2 	movweq	r0, #194	; 0xc2
    23fc:	1005012a 	andne	r0, r5, sl, lsr #2
    2400:	2f0505bc 	svccs	0x000505bc
    2404:	01000802 	tsteq	r0, r2, lsl #16
    2408:	00160501 	andseq	r0, r6, r1, lsl #10
    240c:	c2a80205 	adcgt	r0, r8, #1342177280	; 0x50000000
    2410:	30030000 	andcc	r0, r3, r0
    2414:	bc100501 	cfldr32lt	mvfx0, [r0], {1}
    2418:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    241c:	01010008 	tsteq	r1, r8
    2420:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2424:	00c2d402 	sbceq	sp, r2, r2, lsl #8
    2428:	01350300 	teqeq	r5, r0, lsl #6
    242c:	05841005 	streq	r1, [r4, #5]
    2430:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2434:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2438:	02050012 	andeq	r0, r5, #18
    243c:	0000c2f8 	strdeq	ip, [r0], -r8
    2440:	05013a03 	streq	r3, [r1, #-2563]	; 0xfffff5fd
    2444:	0505bc10 	streq	fp, [r5, #-3088]	; 0xfffff3f0
    2448:	0008022f 	andeq	r0, r8, pc, lsr #4
    244c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2450:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2454:	00c32402 	sbceq	r2, r3, r2, lsl #8
    2458:	01290300 			; <UNDEFINED> instruction: 0x01290300
    245c:	05831c05 	streq	r1, [r3, #3077]	; 0xc05
    2460:	08028301 	stmdaeq	r2, {r0, r8, r9, pc}
    2464:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2468:	00010502 	andeq	r0, r1, r2, lsl #10
    246c:	ab040205 	blge	102c88 <_bss_end+0xf1c08>
    2470:	3d030000 	stccc	0, cr0, [r3, #-0]
    2474:	9f140501 	svcls	0x00140501
    2478:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    247c:	01010008 	tsteq	r1, r8
    2480:	05000705 	streq	r0, [r0, #-1797]	; 0xfffff8fb
    2484:	00c35402 	sbceq	r5, r3, r2, lsl #8
    2488:	01230300 			; <UNDEFINED> instruction: 0x01230300
    248c:	00120282 	andseq	r0, r2, r2, lsl #5
    2490:	0d050101 	stfeqs	f0, [r5, #-4]
    2494:	88020500 	stmdahi	r2, {r8, sl}
    2498:	030000c3 	movweq	r0, #195	; 0xc3
    249c:	02820126 	addeq	r0, r2, #-2147483639	; 0x80000009
    24a0:	01010012 	tsteq	r1, r2, lsl r0
    24a4:	05000d05 	streq	r0, [r0, #-3333]	; 0xfffff2fb
    24a8:	00c3bc02 	sbceq	fp, r3, r2, lsl #24
    24ac:	01260300 			; <UNDEFINED> instruction: 0x01260300
    24b0:	00120282 	andseq	r0, r2, r2, lsl #5
    24b4:	03040101 	movweq	r0, #16641	; 0x4101
    24b8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    24bc:	00c3f002 	sbceq	pc, r3, r2
    24c0:	01140300 	tsteq	r4, r0, lsl #6
    24c4:	5b081305 	blpl	2070e0 <_bss_end+0x1f6060>
    24c8:	cb080505 	blgt	2038e4 <_bss_end+0x1f2864>
    24cc:	01000a02 	tsteq	r0, r2, lsl #20
    24d0:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    24d4:	02050005 	andeq	r0, r5, #5
    24d8:	0000c46c 	andeq	ip, r0, ip, ror #8
    24dc:	83011c03 	movwhi	r1, #7171	; 0x1c03
    24e0:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
    24e4:	02694805 	rsbeq	r4, r9, #327680	; 0x50000
    24e8:	0101000a 	tsteq	r1, sl
    24ec:	05050304 	streq	r0, [r5, #-772]	; 0xfffffcfc
    24f0:	b0020500 	andlt	r0, r2, r0, lsl #10
    24f4:	030000c4 	movweq	r0, #196	; 0xc4
    24f8:	0286011c 	addeq	r0, r6, #28, 2
    24fc:	01010012 	tsteq	r1, r2, lsl r0
    2500:	16050304 	strne	r0, [r5], -r4, lsl #6
    2504:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    2508:	030000c4 	movweq	r0, #196	; 0xc4
    250c:	09050122 	stmdbeq	r5, {r1, r5, r8}
    2510:	001505bc 			; <UNDEFINED> instruction: 0x001505bc
    2514:	66010402 	strvs	r0, [r1], -r2, lsl #8
    2518:	05692905 	strbeq	r2, [r9, #-2309]!	; 0xfffff6fb
    251c:	31054a28 	tstcc	r5, r8, lsr #20
    2520:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
    2524:	004a0601 	subeq	r0, sl, r1, lsl #12
    2528:	4a020402 	bmi	83538 <_bss_end+0x724b8>
    252c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    2530:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
    2534:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    2538:	054b0404 	strbeq	r0, [fp, #-1028]	; 0xfffffbfc
    253c:	05054d10 	streq	r4, [r5, #-3344]	; 0xfffff2f0
    2540:	0008022f 	andeq	r0, r8, pc, lsr #4
    2544:	03040101 	movweq	r0, #16641	; 0x4101
    2548:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    254c:	00c56402 	sbceq	r6, r5, r2, lsl #8
    2550:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
    2554:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
    2558:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    255c:	1e056601 	cfmadd32ne	mvax0, mvfx6, mvfx5, mvfx1
    2560:	4a1d0569 	bmi	743b0c <_bss_end+0x732a8c>
    2564:	052e2f05 	streq	r2, [lr, #-3845]!	; 0xfffff0fb
    2568:	14054a1d 	strne	r4, [r5], #-2589	; 0xfffff5e3
    256c:	4d1005d7 	cfldr32mi	mvfx0, [r0, #-860]	; 0xfffffca4
    2570:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2574:	01010008 	tsteq	r1, r8
    2578:	12050304 	andne	r0, r5, #4, 6	; 0x10000000
    257c:	e0020500 	and	r0, r2, r0, lsl #10
    2580:	030000c5 	movweq	r0, #197	; 0xc5
    2584:	0e05013a 	mcreq	1, 0, r0, cr5, cr10, {1}
    2588:	4a0d0584 	bmi	343ba0 <_bss_end+0x332b20>
    258c:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    2590:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    2594:	17054a01 	strne	r4, [r5, -r1, lsl #20]
    2598:	01040200 	mrseq	r0, R12_usr
    259c:	0014054a 	andseq	r0, r4, sl, asr #10
    25a0:	4a010402 	bmi	435b0 <_bss_end+0x32530>
    25a4:	4d18054b 	cfldr32mi	mvfx0, [r8, #-300]	; 0xfffffed4
    25a8:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    25ac:	1105d718 	tstne	r5, r8, lsl r7
    25b0:	4a0f0566 	bmi	3c3b50 <_bss_end+0x3b2ad0>
    25b4:	054c1005 	strbeq	r1, [ip, #-5]
    25b8:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    25bc:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    25c0:	00120503 	andseq	r0, r2, r3, lsl #10
    25c4:	c67c0205 	ldrbtgt	r0, [ip], -r5, lsl #4
    25c8:	c6030000 	strgt	r0, [r3], -r0
    25cc:	10050100 	andne	r0, r5, r0, lsl #2
    25d0:	2f0505bd 	svccs	0x000505bd
    25d4:	01000802 	tsteq	r0, r2, lsl #16
    25d8:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    25dc:	02050012 	andeq	r0, r5, #18
    25e0:	0000c6a8 	andeq	ip, r0, r8, lsr #13
    25e4:	0100d103 	tsteq	r0, r3, lsl #2
    25e8:	02850505 	addeq	r0, r5, #20971520	; 0x1400000
    25ec:	01010008 	tsteq	r1, r8
    25f0:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
    25f4:	c8020500 	stmdagt	r2, {r8, sl}
    25f8:	030000c6 	movweq	r0, #198	; 0xc6
    25fc:	050100d6 	streq	r0, [r1, #-214]	; 0xffffff2a
    2600:	3005bc09 	andcc	fp, r5, r9, lsl #24
    2604:	01040200 	mrseq	r0, R12_usr
    2608:	67140566 	ldrvs	r0, [r4, -r6, ror #10]
    260c:	054e1b05 	strbeq	r1, [lr, #-2821]	; 0xfffff4fb
    2610:	1c056709 	stcne	7, cr6, [r5], {9}
    2614:	01040200 	mrseq	r0, R12_usr
    2618:	00190566 	andseq	r0, r9, r6, ror #10
    261c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2620:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    2624:	23054c09 	movwcs	r4, #23561	; 0x5c09
    2628:	ba110568 	blt	443bd0 <_bss_end+0x432b50>
    262c:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    2630:	24054b18 	strcs	r4, [r5], #-2840	; 0xfffff4e8
    2634:	be23054c 	cfsh64lt	mvdx0, mvdx3, #44
    2638:	05ba1105 	ldreq	r1, [sl, #261]!	; 0x105
    263c:	18054a0d 	stmdane	r5, {r0, r2, r3, r9, fp, lr}
    2640:	4c24054b 	cfstr32mi	mvfx0, [r4], #-300	; 0xfffffed4
    2644:	05a26805 	streq	r6, [r2, #2053]!	; 0x805
    2648:	14240210 	strtne	r0, [r4], #-528	; 0xfffffdf0
    264c:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2650:	01010008 	tsteq	r1, r8
    2654:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
    2658:	20020500 	andcs	r0, r2, r0, lsl #10
    265c:	030000c8 	movweq	r0, #200	; 0xc8
    2660:	1705010e 	strne	r0, [r5, -lr, lsl #2]
    2664:	0805059f 	stmdaeq	r5, {r0, r1, r2, r3, r4, r7, r8, sl}
    2668:	000a0222 	andeq	r0, sl, r2, lsr #4
    266c:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    2670:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2674:	00c86c02 	sbceq	r6, r8, r2, lsl #24
    2678:	01130300 	tsteq	r3, r0, lsl #6
    267c:	670e0583 	strvs	r0, [lr, -r3, lsl #11]
    2680:	68490505 	stmdavs	r9, {r0, r2, r8, sl}^
    2684:	01000a02 	tsteq	r0, r2, lsl #20
    2688:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    268c:	02050005 	andeq	r0, r5, #5
    2690:	0000c8b0 			; <UNDEFINED> instruction: 0x0000c8b0
    2694:	85011303 	strhi	r1, [r1, #-771]	; 0xfffffcfd
    2698:	01001202 	tsteq	r0, r2, lsl #4
    269c:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    26a0:	02050016 	andeq	r0, r5, #22
    26a4:	0000c8e4 	andeq	ip, r0, r4, ror #17
    26a8:	05011803 	streq	r1, [r1, #-2051]	; 0xfffff7fd
    26ac:	0505bc10 	streq	fp, [r5, #-3088]	; 0xfffff3f0
    26b0:	0008022f 	andeq	r0, r8, pc, lsr #4
    26b4:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    26b8:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    26bc:	00c91002 	sbceq	r1, r9, r2
    26c0:	011d0300 	tsteq	sp, r0, lsl #6
    26c4:	05bc0905 	ldreq	r0, [ip, #2309]!	; 0x905
    26c8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    26cc:	11056601 	tstne	r5, r1, lsl #12
    26d0:	4a0d0568 	bmi	343c78 <_bss_end+0x332bf8>
    26d4:	054c1d05 	strbeq	r1, [ip, #-3333]	; 0xfffff2fb
    26d8:	10056718 	andne	r6, r5, r8, lsl r7
    26dc:	2f05054e 	svccs	0x0005054e
    26e0:	01000802 	tsteq	r0, r2, lsl #16
    26e4:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    26e8:	02050012 	andeq	r0, r5, #18
    26ec:	0000c978 	andeq	ip, r0, r8, ror r9
    26f0:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    26f4:	0905840d 	stmdbeq	r5, {r0, r2, r3, sl, pc}
    26f8:	4b14054a 	blmi	503c28 <_bss_end+0x4f2ba8>
    26fc:	05501205 	ldrbeq	r1, [r0, #-517]	; 0xfffffdfb
    2700:	05056810 	streq	r6, [r5, #-2064]	; 0xfffff7f0
    2704:	0008022f 	andeq	r0, r8, pc, lsr #4
    2708:	04040101 	streq	r0, [r4], #-257	; 0xfffffeff
    270c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2710:	00c9c002 	sbceq	ip, r9, r2
    2714:	01390300 	teqeq	r9, r0, lsl #6
    2718:	05bc0d05 	ldreq	r0, [ip, #3333]!	; 0xd05
    271c:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2720:	4d10054c 	cfldr32mi	mvfx0, [r0, #-304]	; 0xfffffed0
    2724:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2728:	01010008 	tsteq	r1, r8
    272c:	12050404 	andne	r0, r5, #4, 8	; 0x4000000
    2730:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
    2734:	030000ca 	movweq	r0, #202	; 0xca
    2738:	050100c7 	streq	r0, [r1, #-199]	; 0xffffff39
    273c:	08028405 	stmdaeq	r2, {r0, r2, sl, pc}
    2740:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2744:	00140504 	andseq	r0, r4, r4, lsl #10
    2748:	ca240205 	bgt	902f64 <_bss_end+0x8f1ee4>
    274c:	cb030000 	blgt	c2754 <_bss_end+0xb16d4>
    2750:	1b050100 	blne	142b58 <_bss_end+0x131ad8>
    2754:	670905bc 			; <UNDEFINED> instruction: 0x670905bc
    2758:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    275c:	10054c35 	andne	r4, r5, r5, lsr ip
    2760:	2f0505f4 	svccs	0x000505f4
    2764:	01000602 	tsteq	r0, r2, lsl #12
    2768:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    276c:	02050005 	andeq	r0, r5, #5
    2770:	0000ca8c 	andeq	ip, r0, ip, lsl #21
    2774:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    2778:	05058313 	streq	r8, [r5, #-787]	; 0xfffffced
    277c:	0a022308 	beq	8b3a4 <_bss_end+0x7a324>
    2780:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2784:	00050505 	andeq	r0, r5, r5, lsl #10
    2788:	cad40205 	bgt	ff502fa4 <_bss_end+0xff4f1f24>
    278c:	15030000 	strne	r0, [r3, #-0]
    2790:	0e058301 	cdpeq	3, 0, cr8, cr5, cr1, {0}
    2794:	49050567 	stmdbmi	r5, {r0, r1, r2, r5, r6, r8, sl}
    2798:	000a0268 	andeq	r0, sl, r8, ror #4
    279c:	05040101 	streq	r0, [r4, #-257]	; 0xfffffeff
    27a0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    27a4:	00cb1802 	sbceq	r1, fp, r2, lsl #16
    27a8:	01150300 	tsteq	r5, r0, lsl #6
    27ac:	00120285 	andseq	r0, r2, r5, lsl #5
    27b0:	05040101 	streq	r0, [r4, #-257]	; 0xfffffeff
    27b4:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    27b8:	00cb4c02 	sbceq	r4, fp, r2, lsl #24
    27bc:	011a0300 	tsteq	sl, r0, lsl #6
    27c0:	05bd0905 	ldreq	r0, [sp, #2309]!	; 0x905
    27c4:	1705682e 	strne	r6, [r5, -lr, lsr #16]
    27c8:	4b140582 	blmi	503dd8 <_bss_end+0x4f2d58>
    27cc:	054d1005 	strbeq	r1, [sp, #-5]
    27d0:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    27d4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    27d8:	00160505 	andseq	r0, r6, r5, lsl #10
    27dc:	cba40205 	blgt	fe902ff8 <_bss_end+0xfe8f1f78>
    27e0:	26030000 	strcs	r0, [r3], -r0
    27e4:	bd170501 	cfldr32lt	mvfx0, [r7, #-4]
    27e8:	02002005 	andeq	r2, r0, #5
    27ec:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    27f0:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    27f4:	23058302 	movwcs	r8, #21250	; 0x5302
    27f8:	02040200 	andeq	r0, r4, #0, 4
    27fc:	00090566 	andeq	r0, r9, r6, ror #10
    2800:	81020402 	tsthi	r2, r2, lsl #8
    2804:	05851005 	streq	r1, [r5, #5]
    2808:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    280c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2810:	00120505 	andseq	r0, r2, r5, lsl #10
    2814:	cc140205 	lfmgt	f0, 4, [r4], {5}
    2818:	2f030000 	svccs	0x00030000
    281c:	840e0501 	strhi	r0, [lr], #-1281	; 0xfffffaff
    2820:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    2824:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2828:	4c1f054b 	cfldr32mi	mvfx0, [pc], {75}	; 0x4b
    282c:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    2830:	05056810 	streq	r6, [r5, #-2064]	; 0xfffff7f0
    2834:	0008022f 	andeq	r0, r8, pc, lsr #4
    2838:	05040101 	streq	r0, [r4, #-257]	; 0xfffffeff
    283c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2840:	00cc6c02 	sbceq	r6, ip, r2, lsl #24
    2844:	013a0300 	teqeq	sl, r0, lsl #6
    2848:	05bc1005 	ldreq	r1, [ip, #5]!
    284c:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2850:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2854:	00120505 	andseq	r0, r2, r5, lsl #10
    2858:	cc980205 	lfmgt	f0, 4, [r8], {5}
    285c:	c3030000 	movwgt	r0, #12288	; 0x3000
    2860:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    2864:	00080285 	andeq	r0, r8, r5, lsl #5
    2868:	05040101 	streq	r0, [r4, #-257]	; 0xfffffeff
    286c:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
    2870:	00ccb802 	sbceq	fp, ip, r2, lsl #16
    2874:	00c80300 	sbceq	r0, r8, r0, lsl #6
    2878:	be230501 	cfsh64lt	mvdx0, mvdx3, #1
    287c:	05660d05 	strbeq	r0, [r6, #-3333]!	; 0xfffff2fb
    2880:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2884:	4c3e054b 	cfldr32mi	mvfx0, [lr], #-300	; 0xfffffed4
    2888:	05d81005 	ldrbeq	r1, [r8, #5]
    288c:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2890:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2894:	00050506 	andeq	r0, r5, r6, lsl #10
    2898:	cd240205 	sfmgt	f0, 4, [r4, #-20]!	; 0xffffffec
    289c:	0f030000 	svceq	0x00030000
    28a0:	83130501 	tsthi	r3, #4194304	; 0x400000
    28a4:	23080505 	movwcs	r0, #34053	; 0x8505
    28a8:	01000a02 	tsteq	r0, r2, lsl #20
    28ac:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    28b0:	02050005 	andeq	r0, r5, #5
    28b4:	0000cd6c 	andeq	ip, r0, ip, ror #26
    28b8:	83011503 	movwhi	r1, #5379	; 0x1503
    28bc:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    28c0:	02684905 	rsbeq	r4, r8, #81920	; 0x14000
    28c4:	0101000a 	tsteq	r1, sl
    28c8:	05050604 	streq	r0, [r5, #-1540]	; 0xfffff9fc
    28cc:	b0020500 	andlt	r0, r2, r0, lsl #10
    28d0:	030000cd 	movweq	r0, #205	; 0xcd
    28d4:	02850115 	addeq	r0, r5, #1073741829	; 0x40000005
    28d8:	01010012 	tsteq	r1, r2, lsl r0
    28dc:	16050604 	strne	r0, [r5], -r4, lsl #12
    28e0:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    28e4:	030000cd 	movweq	r0, #205	; 0xcd
    28e8:	1005011a 	andne	r0, r5, sl, lsl r1
    28ec:	2f0505be 	svccs	0x000505be
    28f0:	01000802 	tsteq	r0, r2, lsl #16
    28f4:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    28f8:	02050016 	andeq	r0, r5, #22
    28fc:	0000ce10 	andeq	ip, r0, r0, lsl lr
    2900:	05012103 	streq	r2, [r1, #-259]	; 0xfffffefd
    2904:	2005be17 	andcs	fp, r5, r7, lsl lr
    2908:	03040200 	movweq	r0, #16896	; 0x4200
    290c:	0043054a 	subeq	r0, r3, sl, asr #10
    2910:	83020402 	movwhi	r0, #9218	; 0x2402
    2914:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    2918:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    291c:	04020009 	streq	r0, [r2], #-9
    2920:	10058102 	andne	r8, r5, r2, lsl #2
    2924:	2f050585 	svccs	0x00050585
    2928:	01000802 	tsteq	r0, r2, lsl #16
    292c:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    2930:	02050012 	andeq	r0, r5, #18
    2934:	0000ce80 	andeq	ip, r0, r0, lsl #29
    2938:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    293c:	0d05840e 	cfstrseq	mvf8, [r5, #-56]	; 0xffffffc8
    2940:	4a09054a 	bmi	243e70 <_bss_end+0x232df0>
    2944:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    2948:	11054c1e 	tstne	r5, lr, lsl ip
    294c:	6810054b 	ldmdavs	r0, {r0, r1, r3, r6, r8, sl}
    2950:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2954:	01010008 	tsteq	r1, r8
    2958:	12050604 	andne	r0, r5, #4, 12	; 0x400000
    295c:	d8020500 	stmdale	r2, {r8, sl}
    2960:	030000ce 	movweq	r0, #206	; 0xce
    2964:	10050136 	andne	r0, r5, r6, lsr r1
    2968:	2f0505bc 	svccs	0x000505bc
    296c:	01000802 	tsteq	r0, r2, lsl #16
    2970:	05060401 	streq	r0, [r6, #-1025]	; 0xfffffbff
    2974:	02050012 	andeq	r0, r5, #18
    2978:	0000cf04 	andeq	ip, r0, r4, lsl #30
    297c:	05013f03 	streq	r3, [r1, #-3843]	; 0xfffff0fd
    2980:	08028505 	stmdaeq	r2, {r0, r2, r8, sl, pc}
    2984:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2988:	00140506 	andseq	r0, r4, r6, lsl #10
    298c:	cf240205 	svcgt	0x00240205
    2990:	c4030000 	strgt	r0, [r3], #-0
    2994:	22050100 	andcs	r0, r5, #0, 2
    2998:	660d05be 			; <UNDEFINED> instruction: 0x660d05be
    299c:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    29a0:	3c054b14 			; <UNDEFINED> instruction: 0x3c054b14
    29a4:	d810054c 	ldmdale	r0, {r2, r3, r6, r8, sl}
    29a8:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    29ac:	01010008 	tsteq	r1, r8
    29b0:	05050704 	streq	r0, [r5, #-1796]	; 0xfffff8fc
    29b4:	90020500 	andls	r0, r2, r0, lsl #10
    29b8:	030000cf 	movweq	r0, #207	; 0xcf
    29bc:	bc83010f 	stflts	f0, [r3], {15}
    29c0:	01000a02 	tsteq	r0, r2, lsl #20
    29c4:	05070401 	streq	r0, [r7, #-1025]	; 0xfffffbff
    29c8:	02050005 	andeq	r0, r5, #5
    29cc:	0000cfcc 	andeq	ip, r0, ip, asr #31
    29d0:	83011403 	movwhi	r1, #5123	; 0x1403
    29d4:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    29d8:	02684905 	rsbeq	r4, r8, #81920	; 0x14000
    29dc:	0101000a 	tsteq	r1, sl
    29e0:	05050704 	streq	r0, [r5, #-1796]	; 0xfffff8fc
    29e4:	10020500 	andne	r0, r2, r0, lsl #10
    29e8:	030000d0 	movweq	r0, #208	; 0xd0
    29ec:	02850114 	addeq	r0, r5, #20, 2
    29f0:	01010012 	tsteq	r1, r2, lsl r0
    29f4:	16050704 	strne	r0, [r5], -r4, lsl #14
    29f8:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    29fc:	030000d0 	movweq	r0, #208	; 0xd0
    2a00:	18050119 	stmdane	r5, {r0, r3, r4, r8}
    2a04:	671305bc 			; <UNDEFINED> instruction: 0x671305bc
    2a08:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    2a0c:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    2a10:	1b054a03 	blne	155224 <_bss_end+0x1441a4>
    2a14:	03040200 	movweq	r0, #16896	; 0x4200
    2a18:	0012052e 	andseq	r0, r2, lr, lsr #10
    2a1c:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    2a20:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    2a24:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2a28:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2a2c:	15056602 	strne	r6, [r5, #-1538]	; 0xfffff9fe
    2a30:	02040200 	andeq	r0, r4, #0, 4
    2a34:	00090566 	andeq	r0, r9, r6, ror #10
    2a38:	2d020402 	cfstrscs	mvf0, [r2, #-8]
    2a3c:	05851405 	streq	r1, [r5, #1029]	; 0x405
    2a40:	21054a09 	tstcs	r5, r9, lsl #20
    2a44:	4a16056a 	bmi	583ff4 <_bss_end+0x572f74>
    2a48:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    2a4c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    2a50:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    2a54:	49052e03 	stmdbmi	r5, {r0, r1, r9, sl, fp, sp}
    2a58:	02040200 	andeq	r0, r4, #0, 4
    2a5c:	00180567 	andseq	r0, r8, r7, ror #10
    2a60:	66020402 	strvs	r0, [r2], -r2, lsl #8
    2a64:	02001905 	andeq	r1, r0, #81920	; 0x14000
    2a68:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2a6c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2a70:	1b054a02 	blne	155280 <_bss_end+0x144200>
    2a74:	02040200 	andeq	r0, r4, #0, 4
    2a78:	000d052e 	andeq	r0, sp, lr, lsr #10
    2a7c:	2d020402 	cfstrscs	mvf0, [r2, #-8]
    2a80:	05861005 	streq	r1, [r6, #5]
    2a84:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2a88:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    2a8c:	00160507 	andseq	r0, r6, r7, lsl #10
    2a90:	d12c0205 			; <UNDEFINED> instruction: 0xd12c0205
    2a94:	2b030000 	blcs	c2a9c <_bss_end+0xb1a1c>
    2a98:	be100501 	cfmul32lt	mvfx0, mvfx0, mvfx1
    2a9c:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    2aa0:	01010008 	tsteq	r1, r8
    2aa4:	12050704 	andne	r0, r5, #4, 14	; 0x100000
    2aa8:	58020500 	stmdapl	r2, {r8, sl}
    2aac:	030000d1 	movweq	r0, #209	; 0xd1
    2ab0:	0e050132 	mcreq	1, 0, r0, cr5, cr2, {1}
    2ab4:	4a0d0584 	bmi	3440cc <_bss_end+0x33304c>
    2ab8:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    2abc:	054c4b14 	strbeq	r4, [ip, #-2836]	; 0xfffff4ec
    2ac0:	10054b11 	andne	r4, r5, r1, lsl fp
    2ac4:	2f050568 	svccs	0x00050568
    2ac8:	01000802 	tsteq	r0, r2, lsl #16
    2acc:	05070401 	streq	r0, [r7, #-1025]	; 0xfffffbff
    2ad0:	02050012 	andeq	r0, r5, #18
    2ad4:	0000d1b0 			; <UNDEFINED> instruction: 0x0000d1b0
    2ad8:	05013d03 	streq	r3, [r1, #-3331]	; 0xfffff2fd
    2adc:	0505bc10 	streq	fp, [r5, #-3088]	; 0xfffff3f0
    2ae0:	0008022f 	andeq	r0, r8, pc, lsr #4
    2ae4:	07040101 	streq	r0, [r4, -r1, lsl #2]
    2ae8:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
    2aec:	00d1dc02 	sbcseq	sp, r1, r2, lsl #24
    2af0:	00c60300 	sbceq	r0, r6, r0, lsl #6
    2af4:	85050501 	strhi	r0, [r5, #-1281]	; 0xfffffaff
    2af8:	01000802 	tsteq	r0, r2, lsl #16
    2afc:	05070401 	streq	r0, [r7, #-1025]	; 0xfffffbff
    2b00:	02050014 	andeq	r0, r5, #20
    2b04:	0000d1fc 	strdeq	sp, [r0], -ip
    2b08:	0100cb03 	tsteq	r0, r3, lsl #22
    2b0c:	05be1805 	ldreq	r1, [lr, #2053]!	; 0x805
    2b10:	0520080d 	streq	r0, [r0, #-2061]!	; 0xfffff7f3
    2b14:	14054a09 	strne	r4, [r5], #-2569	; 0xfffff5f7
    2b18:	4c28054b 	cfstr32mi	mvfx0, [r8], #-300	; 0xfffffed4
    2b1c:	05d81005 	ldrbeq	r1, [r8, #5]
    2b20:	08022f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp}
    2b24:	29010100 	stmdbcs	r1, {r8}
    2b28:	03000003 	movweq	r0, #3
    2b2c:	00026200 	andeq	r6, r2, r0, lsl #4
    2b30:	fb010200 	blx	4333a <_bss_end+0x322ba>
    2b34:	01000d0e 	tsteq	r0, lr, lsl #26
    2b38:	00010101 	andeq	r0, r1, r1, lsl #2
    2b3c:	00010000 	andeq	r0, r1, r0
    2b40:	6d2f0100 	stfvss	f0, [pc, #-0]	; 2b48 <CPSR_IRQ_INHIBIT+0x2ac8>
    2b44:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2b48:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2b4c:	4b2f7372 	blmi	bdf91c <_bss_end+0xbce89c>
    2b50:	2f616275 	svccs	0x00616275
    2b54:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2b58:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2b5c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2b60:	614d6f72 	hvcvs	55026	; 0xd6f2
    2b64:	652f6574 	strvs	r6, [pc, #-1396]!	; 25f8 <CPSR_IRQ_INHIBIT+0x2578>
    2b68:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2b6c:	2f73656c 	svccs	0x0073656c
    2b70:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2b74:	6b2f4332 	blvs	bd3844 <_bss_end+0xbc27c4>
    2b78:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2b7c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    2b80:	6d2f0063 	stcvs	0, cr0, [pc, #-396]!	; 29fc <CPSR_IRQ_INHIBIT+0x297c>
    2b84:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2b88:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2b8c:	4b2f7372 	blmi	bdf95c <_bss_end+0xbce8dc>
    2b90:	2f616275 	svccs	0x00616275
    2b94:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2b98:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2b9c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2ba0:	614d6f72 	hvcvs	55026	; 0xd6f2
    2ba4:	652f6574 	strvs	r6, [pc, #-1396]!	; 2638 <CPSR_IRQ_INHIBIT+0x25b8>
    2ba8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2bac:	2f73656c 	svccs	0x0073656c
    2bb0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2bb4:	6b2f4332 	blvs	bd3884 <_bss_end+0xbc2804>
    2bb8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2bbc:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2bc0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2bc4:	6f622f65 	svcvs	0x00622f65
    2bc8:	2f647261 	svccs	0x00647261
    2bcc:	30697072 	rsbcc	r7, r9, r2, ror r0
    2bd0:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    2bd4:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2bd8:	2f632f74 	svccs	0x00632f74
    2bdc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2be0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2be4:	442f6162 	strtmi	r6, [pc], #-354	; 2bec <CPSR_IRQ_INHIBIT+0x2b6c>
    2be8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2bec:	73746e65 	cmnvc	r4, #1616	; 0x650
    2bf0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2bf4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2bf8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2bfc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2c00:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2c04:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2c08:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2c0c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2c10:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2c14:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2c18:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2c1c:	2f632f74 	svccs	0x00632f74
    2c20:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2c24:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2c28:	442f6162 	strtmi	r6, [pc], #-354	; 2c30 <CPSR_IRQ_INHIBIT+0x2bb0>
    2c2c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2c30:	73746e65 	cmnvc	r4, #1616	; 0x650
    2c34:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2c38:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2c3c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2c40:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2c44:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2c48:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2c4c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2c50:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2c54:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2c58:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2c5c:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    2c60:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    2c64:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2c68:	2f632f74 	svccs	0x00632f74
    2c6c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2c70:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2c74:	442f6162 	strtmi	r6, [pc], #-354	; 2c7c <CPSR_IRQ_INHIBIT+0x2bfc>
    2c78:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2c7c:	73746e65 	cmnvc	r4, #1616	; 0x650
    2c80:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2c84:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2c88:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2c8c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2c90:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2c94:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2c98:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2c9c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2ca0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2ca4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2ca8:	6f72702f 	svcvs	0x0072702f
    2cac:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2cb0:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2cb4:	2f632f74 	svccs	0x00632f74
    2cb8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2cbc:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2cc0:	442f6162 	strtmi	r6, [pc], #-354	; 2cc8 <CPSR_IRQ_INHIBIT+0x2c48>
    2cc4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2cc8:	73746e65 	cmnvc	r4, #1616	; 0x650
    2ccc:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2cd0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    2cd4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2cd8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    2cdc:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    2ce0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    2ce4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    2ce8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2cec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2cf0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2cf4:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    2cf8:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    2cfc:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2d00:	635f7470 	cmpvs	pc, #112, 8	; 0x70000000
    2d04:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    2d08:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    2d0c:	70632e72 	rsbvc	r2, r3, r2, ror lr
    2d10:	00010070 	andeq	r0, r1, r0, ror r0
    2d14:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    2d18:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    2d1c:	00020068 	andeq	r0, r2, r8, rrx
    2d20:	72657000 	rsbvc	r7, r5, #0
    2d24:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    2d28:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    2d2c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2d30:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    2d34:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2d38:	5f747075 	svcpl	0x00747075
    2d3c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    2d40:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    2d44:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    2d48:	00000300 	andeq	r0, r0, r0, lsl #6
    2d4c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2d50:	00682e72 	rsbeq	r2, r8, r2, ror lr
    2d54:	70000004 	andvc	r0, r0, r4
    2d58:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2d5c:	682e7373 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
    2d60:	00000500 	andeq	r0, r0, r0, lsl #10
    2d64:	2e697773 	mcrcs	7, 3, r7, cr9, cr3, {3}
    2d68:	00050068 	andeq	r0, r5, r8, rrx
    2d6c:	6c696600 	stclvs	6, cr6, [r9], #-0
    2d70:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2d74:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    2d78:	00060068 	andeq	r0, r6, r8, rrx
    2d7c:	6f727000 	svcvs	0x00727000
    2d80:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2d84:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    2d88:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    2d8c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    2d90:	05000000 	streq	r0, [r0, #-0]
    2d94:	02050001 	andeq	r0, r5, #1
    2d98:	0000d280 	andeq	sp, r0, r0, lsl #5
    2d9c:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    2da0:	1305684c 	movwne	r6, #22604	; 0x584c
    2da4:	3005052e 	andcc	r0, r5, lr, lsr #10
    2da8:	05d96105 	ldrbeq	r6, [r9, #261]	; 0x105
    2dac:	0d052e2b 	stceq	14, cr2, [r5, #-172]	; 0xffffff54
    2db0:	67052508 	strvs	r2, [r5, -r8, lsl #10]
    2db4:	2e2e0530 	mcrcs	5, 1, r0, cr14, cr0, {1}
    2db8:	25080d05 	strcs	r0, [r8, #-3333]	; 0xfffff2fb
    2dbc:	2f010531 	svccs	0x00010531
    2dc0:	4f2405a1 	svcmi	0x002405a1
    2dc4:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
    2dc8:	01054b1c 	tsteq	r5, ip, lsl fp
    2dcc:	6a30694b 	bvs	c1d300 <_bss_end+0xc0c280>
    2dd0:	059f1305 	ldreq	r1, [pc, #773]	; 30dd <CPSR_IRQ_INHIBIT+0x305d>
    2dd4:	01052e38 	tsteq	r5, r8, lsr lr
    2dd8:	0c05a14d 	stfeqd	f2, [r5], {77}	; 0x4d
    2ddc:	4a1c059f 	bmi	704460 <_bss_end+0x6f33e0>
    2de0:	052e3a05 	streq	r3, [lr, #-2565]!	; 0xfffff5fb
    2de4:	05854b01 	streq	r4, [r5, #2817]	; 0xb01
    2de8:	40059f43 	andmi	r9, r5, r3, asr #30
    2dec:	4a39052e 	bmi	e442ac <_bss_end+0xe3322c>
    2df0:	05824005 	streq	r4, [r2, #5]
    2df4:	01052e3b 	tsteq	r5, fp, lsr lr
    2df8:	4405692f 	strmi	r6, [r5], #-2351	; 0xfffff6d1
    2dfc:	2e41059f 	mcrcs	5, 2, r0, cr1, cr15, {4}
    2e00:	054a3a05 	strbeq	r3, [sl, #-2565]	; 0xfffff5fb
    2e04:	3c058241 	sfmcc	f0, 1, [r5], {65}	; 0x41
    2e08:	2f01052e 	svccs	0x0001052e
    2e0c:	9f180569 	svcls	0x00180569
    2e10:	054d1505 	strbeq	r1, [sp, #-1285]	; 0xfffffafb
    2e14:	73054a08 	movwvc	r4, #23048	; 0x5a08
    2e18:	83080549 	movwhi	r0, #34121	; 0x8549
    2e1c:	052d7505 	streq	r7, [sp, #-1285]!	; 0xfffffafb
    2e20:	05693001 	strbeq	r3, [r9, #-1]!
    2e24:	15059f18 	strne	r9, [r5, #-3864]	; 0xfffff0e8
    2e28:	4a08054d 	bmi	204364 <_bss_end+0x1f32e4>
    2e2c:	05497505 	strbeq	r7, [r9, #-1285]	; 0xfffffafb
    2e30:	77058308 	strvc	r8, [r5, -r8, lsl #6]
    2e34:	3001052d 	andcc	r0, r1, sp, lsr #10
    2e38:	02009e66 	andeq	r9, r0, #1632	; 0x660
    2e3c:	66060104 	strvs	r0, [r6], -r4, lsl #2
    2e40:	03064305 	movweq	r4, #25349	; 0x6305
    2e44:	05827fa9 	streq	r7, [r2, #4009]	; 0xfa9
    2e48:	00d70301 	sbcseq	r0, r7, r1, lsl #6
    2e4c:	024aba66 	subeq	fp, sl, #417792	; 0x66000
    2e50:	0101000a 	tsteq	r1, sl
    2e54:	000002fc 	strdeq	r0, [r0], -ip
    2e58:	02c60003 	sbceq	r0, r6, #3
    2e5c:	01020000 	mrseq	r0, (UNDEF: 2)
    2e60:	000d0efb 	strdeq	r0, [sp], -fp
    2e64:	01010101 	tsteq	r1, r1, lsl #2
    2e68:	01000000 	mrseq	r0, (UNDEF: 0)
    2e6c:	2f010000 	svccs	0x00010000
    2e70:	2f746e6d 	svccs	0x00746e6d
    2e74:	73552f63 	cmpvc	r5, #396	; 0x18c
    2e78:	2f737265 	svccs	0x00737265
    2e7c:	6162754b 	cmnvs	r2, fp, asr #10
    2e80:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2e84:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    2e88:	5a2f7374 	bpl	bdfc60 <_bss_end+0xbcebe0>
    2e8c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 2d00 <CPSR_IRQ_INHIBIT+0x2c80>
    2e90:	2f657461 	svccs	0x00657461
    2e94:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    2e98:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    2e9c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2ea0:	2f433249 	svccs	0x00433249
    2ea4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2ea8:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    2eac:	2f006372 	svccs	0x00006372
    2eb0:	2f746e6d 	svccs	0x00746e6d
    2eb4:	73552f63 	cmpvc	r5, #396	; 0x18c
    2eb8:	2f737265 	svccs	0x00737265
    2ebc:	6162754b 	cmnvs	r2, fp, asr #10
    2ec0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    2ec4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    2ec8:	5a2f7374 	bpl	bdfca0 <_bss_end+0xbcec20>
    2ecc:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 2d40 <CPSR_IRQ_INHIBIT+0x2cc0>
    2ed0:	2f657461 	svccs	0x00657461
    2ed4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    2ed8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    2edc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    2ee0:	2f433249 	svccs	0x00433249
    2ee4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2ee8:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2eec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2ef0:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    2ef4:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    2ef8:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    2efc:	61682f30 	cmnvs	r8, r0, lsr pc
    2f00:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 2d58 <CPSR_IRQ_INHIBIT+0x2cd8>
    2f04:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2f08:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2f0c:	4b2f7372 	blmi	bdfcdc <_bss_end+0xbcec5c>
    2f10:	2f616275 	svccs	0x00616275
    2f14:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2f18:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2f1c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2f20:	614d6f72 	hvcvs	55026	; 0xd6f2
    2f24:	652f6574 	strvs	r6, [pc, #-1396]!	; 29b8 <CPSR_IRQ_INHIBIT+0x2938>
    2f28:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2f2c:	2f73656c 	svccs	0x0073656c
    2f30:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2f34:	6b2f4332 	blvs	bd3c04 <_bss_end+0xbc2b84>
    2f38:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2f3c:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2f40:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2f44:	72642f65 	rsbvc	r2, r4, #404	; 0x194
    2f48:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2f4c:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 2d88 <CPSR_IRQ_INHIBIT+0x2d08>
    2f50:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2f54:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2f58:	4b2f7372 	blmi	bdfd28 <_bss_end+0xbceca8>
    2f5c:	2f616275 	svccs	0x00616275
    2f60:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2f64:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2f68:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2f6c:	614d6f72 	hvcvs	55026	; 0xd6f2
    2f70:	652f6574 	strvs	r6, [pc, #-1396]!	; 2a04 <CPSR_IRQ_INHIBIT+0x2984>
    2f74:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2f78:	2f73656c 	svccs	0x0073656c
    2f7c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2f80:	6b2f4332 	blvs	bd3c50 <_bss_end+0xbc2bd0>
    2f84:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2f88:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2f8c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2f90:	6d2f0065 	stcvs	0, cr0, [pc, #-404]!	; 2e04 <CPSR_IRQ_INHIBIT+0x2d84>
    2f94:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    2f98:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    2f9c:	4b2f7372 	blmi	bdfd6c <_bss_end+0xbcecec>
    2fa0:	2f616275 	svccs	0x00616275
    2fa4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    2fa8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2fac:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    2fb0:	614d6f72 	hvcvs	55026	; 0xd6f2
    2fb4:	652f6574 	strvs	r6, [pc, #-1396]!	; 2a48 <CPSR_IRQ_INHIBIT+0x29c8>
    2fb8:	706d6178 	rsbvc	r6, sp, r8, ror r1
    2fbc:	2f73656c 	svccs	0x0073656c
    2fc0:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    2fc4:	6b2f4332 	blvs	bd3c94 <_bss_end+0xbc2c14>
    2fc8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2fcc:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    2fd0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2fd4:	656d2f65 	strbvs	r2, [sp, #-3941]!	; 0xfffff09b
    2fd8:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2fdc:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    2fe0:	2f632f74 	svccs	0x00632f74
    2fe4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    2fe8:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    2fec:	442f6162 	strtmi	r6, [pc], #-354	; 2ff4 <CPSR_IRQ_INHIBIT+0x2f74>
    2ff0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    2ff4:	73746e65 	cmnvc	r4, #1616	; 0x650
    2ff8:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    2ffc:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3000:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3004:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3008:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    300c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3010:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3014:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3018:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    301c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3020:	6f72702f 	svcvs	0x0072702f
    3024:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3028:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    302c:	2f632f74 	svccs	0x00632f74
    3030:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3034:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3038:	442f6162 	strtmi	r6, [pc], #-354	; 3040 <CPSR_IRQ_INHIBIT+0x2fc0>
    303c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3040:	73746e65 	cmnvc	r4, #1616	; 0x650
    3044:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3048:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    304c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3050:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3054:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3058:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    305c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3060:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3064:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3068:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    306c:	0073662f 	rsbseq	r6, r3, pc, lsr #12
    3070:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    3074:	70632e6e 	rsbvc	r2, r3, lr, ror #28
    3078:	00010070 	andeq	r0, r1, r0, ror r0
    307c:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    3080:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    3084:	00020068 	andeq	r0, r2, r8, rrx
    3088:	72657000 	rsbvc	r7, r5, #0
    308c:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    3090:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    3094:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3098:	6f6d0000 	svcvs	0x006d0000
    309c:	6f74696e 	svcvs	0x0074696e
    30a0:	00682e72 	rsbeq	r2, r8, r2, ror lr
    30a4:	69000003 	stmdbvs	r0, {r0, r1}
    30a8:	682e6332 	stmdavs	lr!, {r1, r4, r5, r8, r9, sp, lr}
    30ac:	00000300 	andeq	r0, r0, r0, lsl #6
    30b0:	64656c6f 	strbtvs	r6, [r5], #-3183	; 0xfffff391
    30b4:	6473735f 	ldrbtvs	r7, [r3], #-863	; 0xfffffca1
    30b8:	36303331 			; <UNDEFINED> instruction: 0x36303331
    30bc:	0300682e 	movweq	r6, #2094	; 0x82e
    30c0:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    30c4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    30c8:	5f747075 	svcpl	0x00747075
    30cc:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    30d0:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    30d4:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    30d8:	00000400 	andeq	r0, r0, r0, lsl #8
    30dc:	6d6d656d 	cfstr64vs	mvdx6, [sp, #-436]!	; 0xfffffe4c
    30e0:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    30e4:	00000500 	andeq	r0, r0, r0, lsl #10
    30e8:	636f7270 	cmnvs	pc, #112, 4
    30ec:	2e737365 	cdpcs	3, 7, cr7, cr3, cr5, {3}
    30f0:	00060068 	andeq	r0, r6, r8, rrx
    30f4:	69777300 	ldmdbvs	r7!, {r8, r9, ip, sp, lr}^
    30f8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    30fc:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    3100:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    3104:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    3108:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    310c:	72700000 	rsbsvc	r0, r0, #0
    3110:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3114:	616d5f73 	smcvs	54771	; 0xd5f3
    3118:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    311c:	00682e72 	rsbeq	r2, r8, r2, ror lr
    3120:	00000006 	andeq	r0, r0, r6
    3124:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3128:	00d56402 	sbcseq	r6, r5, r2, lsl #8
    312c:	01160300 	tsteq	r6, r0, lsl #6
    3130:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
    3134:	0a034b01 	beq	d5d40 <_bss_end+0xc4cc0>
    3138:	03130566 	tsteq	r3, #427819008	; 0x19800000
    313c:	17054a0b 	strne	r4, [r5, -fp, lsl #20]
    3140:	054a0e03 	strbeq	r0, [sl, #-3587]	; 0xfffff1fd
    3144:	05058524 	streq	r8, [r5, #-1316]	; 0xfffffadc
    3148:	01040200 	mrseq	r0, R12_usr
    314c:	02660c03 	rsbeq	r0, r6, #768	; 0x300
    3150:	01010008 	tsteq	r1, r8
    3154:	0000028c 	andeq	r0, r0, ip, lsl #5
    3158:	01500003 	cmpeq	r0, r3
    315c:	01020000 	mrseq	r0, (UNDEF: 2)
    3160:	000d0efb 	strdeq	r0, [sp], -fp
    3164:	01010101 	tsteq	r1, r1, lsl #2
    3168:	01000000 	mrseq	r0, (UNDEF: 0)
    316c:	2f010000 	svccs	0x00010000
    3170:	2f746e6d 	svccs	0x00746e6d
    3174:	73552f63 	cmpvc	r5, #396	; 0x18c
    3178:	2f737265 	svccs	0x00737265
    317c:	6162754b 	cmnvs	r2, fp, asr #10
    3180:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3184:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3188:	5a2f7374 	bpl	bdff60 <_bss_end+0xbceee0>
    318c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3000 <CPSR_IRQ_INHIBIT+0x2f80>
    3190:	2f657461 	svccs	0x00657461
    3194:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3198:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    319c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    31a0:	2f433249 	svccs	0x00433249
    31a4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    31a8:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    31ac:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 2fec <CPSR_IRQ_INHIBIT+0x2f6c>
    31b0:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    31b4:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 2fd8 <CPSR_IRQ_INHIBIT+0x2f58>
    31b8:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    31bc:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    31c0:	4b2f7372 	blmi	bdff90 <_bss_end+0xbcef10>
    31c4:	2f616275 	svccs	0x00616275
    31c8:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    31cc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    31d0:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    31d4:	614d6f72 	hvcvs	55026	; 0xd6f2
    31d8:	652f6574 	strvs	r6, [pc, #-1396]!	; 2c6c <CPSR_IRQ_INHIBIT+0x2bec>
    31dc:	706d6178 	rsbvc	r6, sp, r8, ror r1
    31e0:	2f73656c 	svccs	0x0073656c
    31e4:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    31e8:	6b2f4332 	blvs	bd3eb8 <_bss_end+0xbc2e38>
    31ec:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    31f0:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    31f4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    31f8:	6f622f65 	svcvs	0x00622f65
    31fc:	2f647261 	svccs	0x00647261
    3200:	30697072 	rsbcc	r7, r9, r2, ror r0
    3204:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    3208:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    320c:	2f632f74 	svccs	0x00632f74
    3210:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3214:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3218:	442f6162 	strtmi	r6, [pc], #-354	; 3220 <CPSR_IRQ_INHIBIT+0x31a0>
    321c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3220:	73746e65 	cmnvc	r4, #1616	; 0x650
    3224:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3228:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    322c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3230:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3234:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3238:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    323c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3240:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3244:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3248:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    324c:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    3250:	0079726f 	rsbseq	r7, r9, pc, ror #4
    3254:	72656b00 	rsbvc	r6, r5, #0, 22
    3258:	5f6c656e 	svcpl	0x006c656e
    325c:	70616568 	rsbvc	r6, r1, r8, ror #10
    3260:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    3264:	00000100 	andeq	r0, r0, r0, lsl #2
    3268:	64746e69 	ldrbtvs	r6, [r4], #-3689	; 0xfffff197
    326c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    3270:	00000200 	andeq	r0, r0, r0, lsl #4
    3274:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3278:	685f6c65 	ldmdavs	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    327c:	2e706165 	rpwcssz	f6, f0, f5
    3280:	00030068 	andeq	r0, r3, r8, rrx
    3284:	72657000 	rsbvc	r7, r5, #0
    3288:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
    328c:	736c6172 	cmnvc	ip, #-2147483620	; 0x8000001c
    3290:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3294:	656d0000 	strbvs	r0, [sp, #-0]!
    3298:	70616d6d 	rsbvc	r6, r1, sp, ror #26
    329c:	0300682e 	movweq	r6, #2094	; 0x82e
    32a0:	61700000 	cmnvs	r0, r0
    32a4:	2e736567 	cdpcs	5, 7, cr6, cr3, cr7, {3}
    32a8:	00030068 	andeq	r0, r3, r8, rrx
    32ac:	01050000 	mrseq	r0, (UNDEF: 5)
    32b0:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    32b4:	170000d5 			; <UNDEFINED> instruction: 0x170000d5
    32b8:	05861d05 	streq	r1, [r6, #3333]	; 0xd05
    32bc:	0105660c 	tsteq	r5, ip, lsl #12
    32c0:	6d05854b 	cfstr32vs	mvfx8, [r5, #-300]	; 0xfffffed4
    32c4:	666f0583 	strbtvs	r0, [pc], -r3, lsl #11
    32c8:	672f1105 	strvs	r1, [pc, -r5, lsl #2]!
    32cc:	68140567 	ldmdavs	r4, {r0, r1, r2, r5, r6, r8, sl}
    32d0:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
    32d4:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
    32d8:	1d059f20 	stcne	15, cr9, [r5, #-128]	; 0xffffff80
    32dc:	0029056a 	eoreq	r0, r9, sl, ror #10
    32e0:	66010402 	strvs	r0, [r1], -r2, lsl #8
    32e4:	02001d05 	andeq	r1, r0, #320	; 0x140
    32e8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    32ec:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    32f0:	31054a02 	tstcc	r5, r2, lsl #20
    32f4:	02040200 	andeq	r0, r4, #0, 4
    32f8:	680f054a 	stmdavs	pc, {r1, r3, r6, r8, sl}	; <UNPREDICTABLE>
    32fc:	33640505 	cmncc	r4, #20971520	; 0x1400000
    3300:	506a1005 	rsbpl	r1, sl, r5
    3304:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    3308:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    330c:	58056601 	stmdapl	r5, {r0, r9, sl, sp, lr}
    3310:	01040200 	mrseq	r0, R12_usr
    3314:	001d054a 	andseq	r0, sp, sl, asr #10
    3318:	4a010402 	bmi	44328 <_bss_end+0x332a8>
    331c:	054c1805 	strbeq	r1, [ip, #-2053]	; 0xfffff7fb
    3320:	4b056830 	blmi	15d3e8 <_bss_end+0x14c368>
    3324:	4920056d 	stmdbmi	r0!, {r0, r2, r3, r5, r6, r8, sl}
    3328:	05691905 	strbeq	r1, [r9, #-2309]!	; 0xfffff6fb
    332c:	25054a1e 	strcs	r4, [r5, #-2590]	; 0xfffff5e2
    3330:	2e10054a 	cfmac32cs	mvfx0, mvfx0, mvfx10
    3334:	6719054c 	ldrvs	r0, [r9, -ip, asr #10]
    3338:	054a1005 	strbeq	r1, [sl, #-5]
    333c:	11054b13 	tstne	r5, r3, lsl fp
    3340:	14056867 	strne	r6, [r5], #-2151	; 0xfffff799
    3344:	692c0567 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, sl}
    3348:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
    334c:	059f2005 	ldreq	r2, [pc, #5]	; 3359 <CPSR_IRQ_INHIBIT+0x32d9>
    3350:	10056914 	andne	r6, r5, r4, lsl r9
    3354:	4a050569 	bmi	144900 <_bss_end+0x133880>
    3358:	02001f05 	andeq	r1, r0, #5, 30
    335c:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3360:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    3364:	15054a01 	strne	r4, [r5, #-2561]	; 0xfffff5ff
    3368:	01040200 	mrseq	r0, R12_usr
    336c:	1f054c2e 	svcne	0x00054c2e
    3370:	4a25054a 	bmi	9448a0 <_bss_end+0x933820>
    3374:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    3378:	2405831e 	strcs	r8, [r5], #-798	; 0xfffffce2
    337c:	2e15054a 	cfmac32cs	mvfx0, mvfx5, mvfx10
    3380:	054b1005 	strbeq	r1, [fp, #-5]
    3384:	10054a1b 	andne	r4, r5, fp, lsl sl
    3388:	4a05054e 	bmi	1448c8 <_bss_end+0x133848>
    338c:	02001f05 	andeq	r1, r0, #5, 30
    3390:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3394:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    3398:	15054a01 	strne	r4, [r5, #-2561]	; 0xfffff5ff
    339c:	01040200 	mrseq	r0, R12_usr
    33a0:	4c10052e 	cfldr32mi	mvfx0, [r0], {46}	; 0x2e
    33a4:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    33a8:	1b052e25 	blne	14ec44 <_bss_end+0x13dbc4>
    33ac:	2e10054a 	cfmac32cs	mvfx0, mvfx0, mvfx10
    33b0:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    33b4:	24054b10 	strcs	r4, [r5], #-2832	; 0xfffff4f0
    33b8:	4a1b054a 	bmi	6c48e8 <_bss_end+0x6b3868>
    33bc:	052f1005 	streq	r1, [pc, #-5]!	; 33bf <CPSR_IRQ_INHIBIT+0x333f>
    33c0:	1b054a24 	blne	155c58 <_bss_end+0x144bd8>
    33c4:	3001054a 	andcc	r0, r1, sl, asr #10
    33c8:	02009e82 	andeq	r9, r0, #2080	; 0x820
    33cc:	66060104 	strvs	r0, [r6], -r4, lsl #2
    33d0:	03061605 	movweq	r1, #26117	; 0x6605
    33d4:	05827fa5 	streq	r7, [r2, #4005]	; 0xfa5
    33d8:	00db0301 	sbcseq	r0, fp, r1, lsl #6
    33dc:	024a9e4a 	subeq	r9, sl, #1184	; 0x4a0
    33e0:	0101000a 	tsteq	r1, sl
    33e4:	00000201 	andeq	r0, r0, r1, lsl #4
    33e8:	01390003 	teqeq	r9, r3
    33ec:	01020000 	mrseq	r0, (UNDEF: 2)
    33f0:	000d0efb 	strdeq	r0, [sp], -fp
    33f4:	01010101 	tsteq	r1, r1, lsl #2
    33f8:	01000000 	mrseq	r0, (UNDEF: 0)
    33fc:	2f010000 	svccs	0x00010000
    3400:	2f746e6d 	svccs	0x00746e6d
    3404:	73552f63 	cmpvc	r5, #396	; 0x18c
    3408:	2f737265 	svccs	0x00737265
    340c:	6162754b 	cmnvs	r2, fp, asr #10
    3410:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3414:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3418:	5a2f7374 	bpl	be01f0 <_bss_end+0xbcf170>
    341c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3290 <CPSR_IRQ_INHIBIT+0x3210>
    3420:	2f657461 	svccs	0x00657461
    3424:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3428:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    342c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3430:	2f433249 	svccs	0x00433249
    3434:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3438:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    343c:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 327c <CPSR_IRQ_INHIBIT+0x31fc>
    3440:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    3444:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 3268 <CPSR_IRQ_INHIBIT+0x31e8>
    3448:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    344c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3450:	4b2f7372 	blmi	be0220 <_bss_end+0xbcf1a0>
    3454:	2f616275 	svccs	0x00616275
    3458:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    345c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3460:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3464:	614d6f72 	hvcvs	55026	; 0xd6f2
    3468:	652f6574 	strvs	r6, [pc, #-1396]!	; 2efc <CPSR_IRQ_INHIBIT+0x2e7c>
    346c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3470:	2f73656c 	svccs	0x0073656c
    3474:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3478:	6b2f4332 	blvs	bd4148 <_bss_end+0xbc30c8>
    347c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3480:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    3484:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3488:	6f622f65 	svcvs	0x00622f65
    348c:	2f647261 	svccs	0x00647261
    3490:	30697072 	rsbcc	r7, r9, r2, ror r0
    3494:	6c61682f 	stclvs	8, cr6, [r1], #-188	; 0xffffff44
    3498:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    349c:	2f632f74 	svccs	0x00632f74
    34a0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    34a4:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    34a8:	442f6162 	strtmi	r6, [pc], #-354	; 34b0 <CPSR_IRQ_INHIBIT+0x3430>
    34ac:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    34b0:	73746e65 	cmnvc	r4, #1616	; 0x650
    34b4:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    34b8:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    34bc:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    34c0:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    34c4:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    34c8:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    34cc:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    34d0:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    34d4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    34d8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    34dc:	6d656d2f 	stclvs	13, cr6, [r5, #-188]!	; 0xffffff44
    34e0:	0079726f 	rsbseq	r7, r9, pc, ror #4
    34e4:	67617000 	strbvs	r7, [r1, -r0]!
    34e8:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    34ec:	01007070 	tsteq	r0, r0, ror r0
    34f0:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    34f4:	66656474 			; <UNDEFINED> instruction: 0x66656474
    34f8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    34fc:	65700000 	ldrbvs	r0, [r0, #-0]!
    3500:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3504:	6c617265 	sfmvs	f7, 2, [r1], #-404	; 0xfffffe6c
    3508:	00682e73 	rsbeq	r2, r8, r3, ror lr
    350c:	6d000002 	stcvs	0, cr0, [r0, #-8]
    3510:	616d6d65 	cmnvs	sp, r5, ror #26
    3514:	00682e70 	rsbeq	r2, r8, r0, ror lr
    3518:	70000003 	andvc	r0, r0, r3
    351c:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    3520:	0300682e 	movweq	r6, #2094	; 0x82e
    3524:	05000000 	streq	r0, [r0, #-0]
    3528:	02050001 	andeq	r0, r5, #1
    352c:	0000d928 	andeq	sp, r0, r8, lsr #18
    3530:	850e0516 	strhi	r0, [lr, #-1302]	; 0xfffffaea
    3534:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    3538:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    353c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    3540:	19052e03 	stmdbne	r5, {r0, r1, r9, sl, fp, sp}
    3544:	02040200 	andeq	r0, r4, #0, 4
    3548:	00050567 	andeq	r0, r5, r7, ror #10
    354c:	9d020402 	cfstrsls	mvf0, [r2, #-8]
    3550:	bd860105 	stflts	f0, [r6, #20]
    3554:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
    3558:	2405671f 	strcs	r6, [r5], #-1823	; 0xfffff8e1
    355c:	6636054a 	ldrtvs	r0, [r6], -sl, asr #10
    3560:	054a2905 	strbeq	r2, [sl, #-2309]	; 0xfffff6fb
    3564:	01054a24 	tsteq	r5, r4, lsr #20
    3568:	2d1f05bd 	cfldr32cs	mvfx0, [pc, #-756]	; 327c <CPSR_IRQ_INHIBIT+0x31fc>
    356c:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    3570:	2b056638 	blcs	15ce58 <_bss_end+0x14bdd8>
    3574:	4a24054a 	bmi	904aa4 <_bss_end+0x8f3a24>
    3578:	85f30105 	ldrbhi	r0, [r3, #261]!	; 0x105
    357c:	05890c05 	streq	r0, [r9, #3077]	; 0xc05
    3580:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    3584:	1b054a01 	blne	155d90 <_bss_end+0x144d10>
    3588:	82090585 	andhi	r0, r9, #557842432	; 0x21400000
    358c:	054d1405 	strbeq	r1, [sp, #-1029]	; 0xfffffbfb
    3590:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    3594:	24054a01 	strcs	r4, [r5], #-2561	; 0xfffff5ff
    3598:	9e320568 	cdpls	5, 3, cr0, cr2, cr8, {3}
    359c:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    35a0:	24054d31 	strcs	r4, [r5], #-3377	; 0xfffff2cf
    35a4:	6719054a 	ldrvs	r0, [r9, -sl, asr #10]
    35a8:	05832b05 	streq	r2, [r3, #2821]	; 0xb05
    35ac:	0d054a3d 	vstreq	s8, [r5, #-244]	; 0xffffff0c
    35b0:	02040200 	andeq	r0, r4, #0, 4
    35b4:	054a7903 	strbeq	r7, [sl, #-2307]	; 0xfffff6fd
    35b8:	04020005 	streq	r0, [r2], #-5
    35bc:	827a0302 	rsbshi	r0, sl, #134217728	; 0x8000000
    35c0:	13030c05 	movwne	r0, #15365	; 0x3c05
    35c4:	2f010582 	svccs	0x00010582
    35c8:	a1090585 	smlabbge	r9, r5, r5, r0
    35cc:	66bb0105 	ldrtvs	r0, [fp], r5, lsl #2
    35d0:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    35d4:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    35d8:	4a03060f 	bmi	c4e1c <_bss_end+0xb3d9c>
    35dc:	03010582 	movweq	r0, #5506	; 0x1582
    35e0:	4a9e4a36 	bmi	fe795ec0 <_bss_end+0xfe784e40>
    35e4:	01000a02 	tsteq	r0, r2, lsl #20
    35e8:	0006da01 	andeq	sp, r6, r1, lsl #20
    35ec:	7c000300 	stcvc	3, cr0, [r0], {-0}
    35f0:	02000002 	andeq	r0, r0, #2
    35f4:	0d0efb01 	vstreq	d15, [lr, #-4]
    35f8:	01010100 	mrseq	r0, (UNDEF: 17)
    35fc:	00000001 	andeq	r0, r0, r1
    3600:	01000001 	tsteq	r0, r1
    3604:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3608:	552f632f 	strpl	r6, [pc, #-815]!	; 32e1 <CPSR_IRQ_INHIBIT+0x3261>
    360c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3610:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3614:	6f442f61 	svcvs	0x00442f61
    3618:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    361c:	2f73746e 	svccs	0x0073746e
    3620:	6f72655a 	svcvs	0x0072655a
    3624:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3628:	6178652f 	cmnvs	r8, pc, lsr #10
    362c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3630:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3634:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3638:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    363c:	2f6c656e 	svccs	0x006c656e
    3640:	2f637273 	svccs	0x00637273
    3644:	636f7270 	cmnvs	pc, #112, 4
    3648:	00737365 	rsbseq	r7, r3, r5, ror #6
    364c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3650:	552f632f 	strpl	r6, [pc, #-815]!	; 3329 <CPSR_IRQ_INHIBIT+0x32a9>
    3654:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3658:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    365c:	6f442f61 	svcvs	0x00442f61
    3660:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3664:	2f73746e 	svccs	0x0073746e
    3668:	6f72655a 	svcvs	0x0072655a
    366c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3670:	6178652f 	cmnvs	r8, pc, lsr #10
    3674:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3678:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    367c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3680:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3684:	2f6c656e 	svccs	0x006c656e
    3688:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    368c:	2f656475 	svccs	0x00656475
    3690:	6f6d656d 	svcvs	0x006d656d
    3694:	2f007972 	svccs	0x00007972
    3698:	2f746e6d 	svccs	0x00746e6d
    369c:	73552f63 	cmpvc	r5, #396	; 0x18c
    36a0:	2f737265 	svccs	0x00737265
    36a4:	6162754b 	cmnvs	r2, fp, asr #10
    36a8:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    36ac:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    36b0:	5a2f7374 	bpl	be0488 <_bss_end+0xbcf408>
    36b4:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3528 <CPSR_IRQ_INHIBIT+0x34a8>
    36b8:	2f657461 	svccs	0x00657461
    36bc:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    36c0:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    36c4:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    36c8:	2f433249 	svccs	0x00433249
    36cc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    36d0:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    36d4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    36d8:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    36dc:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
    36e0:	6970722f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r9, ip, sp, lr}^
    36e4:	61682f30 	cmnvs	r8, r0, lsr pc
    36e8:	6d2f006c 	stcvs	0, cr0, [pc, #-432]!	; 3540 <CPSR_IRQ_INHIBIT+0x34c0>
    36ec:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    36f0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    36f4:	4b2f7372 	blmi	be04c4 <_bss_end+0xbcf444>
    36f8:	2f616275 	svccs	0x00616275
    36fc:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3700:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3704:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3708:	614d6f72 	hvcvs	55026	; 0xd6f2
    370c:	652f6574 	strvs	r6, [pc, #-1396]!	; 31a0 <CPSR_IRQ_INHIBIT+0x3120>
    3710:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3714:	2f73656c 	svccs	0x0073656c
    3718:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    371c:	6b2f4332 	blvs	bd43ec <_bss_end+0xbc336c>
    3720:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3724:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    3728:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    372c:	72702f65 	rsbsvc	r2, r0, #404	; 0x194
    3730:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3734:	6d2f0073 	stcvs	0, cr0, [pc, #-460]!	; 3570 <CPSR_IRQ_INHIBIT+0x34f0>
    3738:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    373c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3740:	4b2f7372 	blmi	be0510 <_bss_end+0xbcf490>
    3744:	2f616275 	svccs	0x00616275
    3748:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    374c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3750:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3754:	614d6f72 	hvcvs	55026	; 0xd6f2
    3758:	652f6574 	strvs	r6, [pc, #-1396]!	; 31ec <CPSR_IRQ_INHIBIT+0x316c>
    375c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3760:	2f73656c 	svccs	0x0073656c
    3764:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3768:	6b2f4332 	blvs	bd4438 <_bss_end+0xbc33b8>
    376c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3770:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    3774:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3778:	73662f65 	cmnvc	r6, #404	; 0x194
    377c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3780:	2f632f74 	svccs	0x00632f74
    3784:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3788:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    378c:	442f6162 	strtmi	r6, [pc], #-354	; 3794 <CPSR_IRQ_INHIBIT+0x3714>
    3790:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3794:	73746e65 	cmnvc	r4, #1616	; 0x650
    3798:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    379c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    37a0:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    37a4:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    37a8:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    37ac:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    37b0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    37b4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    37b8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    37bc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    37c0:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    37c4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    37c8:	72700000 	rsbsvc	r0, r0, #0
    37cc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    37d0:	616d5f73 	smcvs	54771	; 0xd5f3
    37d4:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    37d8:	70632e72 	rsbvc	r2, r3, r2, ror lr
    37dc:	00010070 	andeq	r0, r1, r0, ror r0
    37e0:	72656b00 	rsbvc	r6, r5, #0, 22
    37e4:	5f6c656e 	svcpl	0x006c656e
    37e8:	70616568 	rsbvc	r6, r1, r8, ror #10
    37ec:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    37f0:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    37f4:	66656474 			; <UNDEFINED> instruction: 0x66656474
    37f8:	0300682e 	movweq	r6, #2094	; 0x82e
    37fc:	72700000 	rsbsvc	r0, r0, #0
    3800:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3804:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3808:	66000004 	strvs	r0, [r0], -r4
    380c:	73656c69 	cmnvc	r5, #26880	; 0x6900
    3810:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    3814:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    3818:	73000005 	movwvc	r0, #5
    381c:	682e6977 	stmdavs	lr!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}
    3820:	00000400 	andeq	r0, r0, r0, lsl #8
    3824:	636f7270 	cmnvs	pc, #112, 4
    3828:	5f737365 	svcpl	0x00737365
    382c:	616e616d 	cmnvs	lr, sp, ror #2
    3830:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    3834:	00040068 	andeq	r0, r4, r8, rrx
    3838:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
    383c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    3840:	0600682e 	streq	r6, [r0], -lr, lsr #16
    3844:	65700000 	ldrbvs	r0, [r0, #-0]!
    3848:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    384c:	6c617265 	sfmvs	f7, 2, [r1], #-404	; 0xfffffe6c
    3850:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3854:	6d000003 	stcvs	0, cr0, [r0, #-12]
    3858:	616d6d65 	cmnvs	sp, r5, ror #26
    385c:	00682e70 	rsbeq	r2, r8, r0, ror lr
    3860:	70000002 	andvc	r0, r0, r2
    3864:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    3868:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    386c:	05000000 	streq	r0, [r0, #-0]
    3870:	02050001 	andeq	r0, r5, #1
    3874:	0000dbcc 	andeq	sp, r0, ip, asr #23
    3878:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    387c:	0105851d 	tsteq	r5, sp, lsl r5
    3880:	05a12308 	streq	r2, [r1, #776]!	; 0x308
    3884:	1f05830c 	svcne	0x0005830c
    3888:	0021054a 	eoreq	r0, r1, sl, asr #10
    388c:	4a010402 	bmi	4489c <_bss_end+0x3381c>
    3890:	02001f05 	andeq	r1, r0, #5, 30
    3894:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3898:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    389c:	1f052e01 	svcne	0x00052e01
    38a0:	02040200 	andeq	r0, r4, #0, 4
    38a4:	0001052e 	andeq	r0, r1, lr, lsr #10
    38a8:	2f050402 	svccs	0x00050402
    38ac:	83480585 	movthi	r0, #34181	; 0x8585
    38b0:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    38b4:	054b4a14 	strbeq	r4, [fp, #-2580]	; 0xfffff5ec
    38b8:	1e056705 	cdpne	7, 0, cr6, cr5, cr5, {0}
    38bc:	4c34054a 	cfldr32mi	mvfx0, [r4], #-296	; 0xfffffed8
    38c0:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    38c4:	13054c0b 	movwne	r4, #23563	; 0x5c0b
    38c8:	4a110568 	bmi	444e70 <_bss_end+0x433df0>
    38cc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    38d0:	0f054a13 	svceq	0x00054a13
    38d4:	4b21054a 	blmi	844e04 <_bss_end+0x833d84>
    38d8:	4a190568 	bmi	644e80 <_bss_end+0x633e00>
    38dc:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    38e0:	1c056813 	stcne	8, cr6, [r5], {19}
    38e4:	03040200 	movweq	r0, #16896	; 0x4200
    38e8:	001f054a 	andseq	r0, pc, sl, asr #10
    38ec:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    38f0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    38f4:	05d50204 	ldrbeq	r0, [r5, #516]	; 0x204
    38f8:	1805851a 	stmdane	r5, {r1, r3, r4, r8, sl, pc}
    38fc:	4b01054a 	blmi	44e2c <_bss_end+0x33dac>
    3900:	9f480585 	svcls	0x00480585
    3904:	05681605 	strbeq	r1, [r8, #-1541]!	; 0xfffff9fb
    3908:	054b4a14 	strbeq	r4, [fp, #-2580]	; 0xfffff5ec
    390c:	1e056705 	cdpne	7, 0, cr6, cr5, cr5, {0}
    3910:	4b18054a 	blmi	604e40 <_bss_end+0x5f3dc0>
    3914:	05680905 	strbeq	r0, [r8, #-2309]!	; 0xfffff6fb
    3918:	1c054a05 			; <UNDEFINED> instruction: 0x1c054a05
    391c:	6934054c 	ldmdbvs	r4!, {r2, r3, r6, r8, sl}
    3920:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    3924:	13054c0b 	movwne	r4, #23563	; 0x5c0b
    3928:	4a110568 	bmi	444ed0 <_bss_end+0x433e50>
    392c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    3930:	0f054a13 	svceq	0x00054a13
    3934:	4b21054a 	blmi	844e64 <_bss_end+0x833de4>
    3938:	4a190568 	bmi	644ee0 <_bss_end+0x633e60>
    393c:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    3940:	0567681a 	strbeq	r6, [r7, #-2074]!	; 0xfffff7e6
    3944:	5305674f 	movwpl	r6, #22351	; 0x574f
    3948:	2e1a0566 	cfmsc32cs	mvfx0, mvfx10, mvfx6
    394c:	054c1305 	strbeq	r1, [ip, #-773]	; 0xfffffcfb
    3950:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    3954:	1f054a03 	svcne	0x00054a03
    3958:	02040200 	andeq	r0, r4, #0, 4
    395c:	00050567 	andeq	r0, r5, r7, ror #10
    3960:	d5020402 	strle	r0, [r2, #-1026]	; 0xfffffbfe
    3964:	05851105 	streq	r1, [r5, #261]	; 0x105
    3968:	4b058244 	blmi	164280 <_bss_end+0x153200>
    396c:	831105ba 	tsthi	r1, #780140544	; 0x2e800000
    3970:	05823605 	streq	r3, [r2, #1541]	; 0x605
    3974:	6305825d 	movwvs	r8, #21085	; 0x525d
    3978:	681205ba 	ldmdavs	r2, {r1, r3, r4, r5, r7, r8, sl}
    397c:	084b0105 	stmdaeq	fp, {r0, r2, r8}^
    3980:	8409055b 	strhi	r0, [r9], #-1371	; 0xfffffaa5
    3984:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    3988:	1d054d09 	stcne	13, cr4, [r5, #-36]	; 0xffffffdc
    398c:	2e23054a 	cfsh64cs	mvdx0, mvdx3, #42
    3990:	052e3005 	streq	r3, [lr, #-5]!
    3994:	21054d0d 	tstcs	r5, sp, lsl #26
    3998:	2e27054a 	cfsh64cs	mvdx0, mvdx7, #42
    399c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    39a0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    39a4:	50054a01 	andpl	r4, r5, r1, lsl #20
    39a8:	01040200 	mrseq	r0, R12_usr
    39ac:	0056054a 	subseq	r0, r6, sl, asr #10
    39b0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    39b4:	02003905 	andeq	r3, r0, #81920	; 0x14000
    39b8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    39bc:	33055120 	movwcc	r5, #20768	; 0x5120
    39c0:	0035054a 	eorseq	r0, r5, sl, asr #10
    39c4:	4a010402 	bmi	449d4 <_bss_end+0x33954>
    39c8:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    39cc:	004a0104 	subeq	r0, sl, r4, lsl #2
    39d0:	06020402 	streq	r0, [r2], -r2, lsl #8
    39d4:	0019054a 	andseq	r0, r9, sl, asr #10
    39d8:	06040402 	streq	r0, [r4], -r2, lsl #8
    39dc:	0005054a 	andeq	r0, r5, sl, asr #10
    39e0:	2f040402 	svccs	0x00040402
    39e4:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    39e8:	18056a12 	stmdane	r5, {r1, r4, r9, fp, sp, lr}
    39ec:	2e64054a 	cdpcs	5, 6, cr0, cr4, cr10, {2}
    39f0:	02004005 	andeq	r4, r0, #5
    39f4:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    39f8:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    39fc:	37054a01 	strcc	r4, [r5, -r1, lsl #20]
    3a00:	01040200 	mrseq	r0, R12_usr
    3a04:	0012052e 	andseq	r0, r2, lr, lsr #10
    3a08:	4b020402 	blmi	84a18 <_bss_end+0x73998>
    3a0c:	02001805 	andeq	r1, r0, #327680	; 0x50000
    3a10:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    3a14:	04020064 	streq	r0, [r2], #-100	; 0xffffff9c
    3a18:	09052d02 	stmdbeq	r5, {r1, r8, sl, fp, sp}
    3a1c:	6812054d 	ldmdavs	r2, {r0, r2, r3, r6, r8, sl}
    3a20:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
    3a24:	05053112 	streq	r3, [r5, #-274]	; 0xfffffeee
    3a28:	05667703 	strbeq	r7, [r6, #-1795]!	; 0xfffff8fd
    3a2c:	2e0d0311 	mcrcs	3, 0, r0, cr13, cr1, {0}
    3a30:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    3a34:	47056933 	smladxmi	r5, r3, r9, r6
    3a38:	2e09054a 	cfsh32cs	mvfx0, mvfx9, #42
    3a3c:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    3a40:	31052e4d 	tstcc	r5, sp, asr #28
    3a44:	2f09052e 	svccs	0x0009052e
    3a48:	05310e05 	ldreq	r0, [r1, #-3589]!	; 0xfffff1fb
    3a4c:	8260030d 	rsbhi	r0, r0, #872415232	; 0x34000000
    3a50:	21030105 	tstcs	r3, r5, lsl #2
    3a54:	09054d2e 	stmdbeq	r5, {r1, r2, r3, r5, r8, sl, fp, lr}
    3a58:	4a1d05a1 	bmi	7450e4 <_bss_end+0x734064>
    3a5c:	052e2305 	streq	r2, [lr, #-773]!	; 0xfffffcfb
    3a60:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    3a64:	4a1d054b 	bmi	744f98 <_bss_end+0x733f18>
    3a68:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    3a6c:	19054d05 	stmdbne	r5, {r0, r2, r8, sl, fp, lr}
    3a70:	2e2d054a 	cfsh64cs	mvdx0, mvdx13, #42
    3a74:	054c1a05 	strbeq	r1, [ip, #-2565]	; 0xfffff5fb
    3a78:	13054a2e 	movwne	r4, #23086	; 0x5a2e
    3a7c:	2f21052e 	svccs	0x0021052e
    3a80:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    3a84:	18052e0a 	stmdane	r5, {r1, r3, r9, sl, fp, sp}
    3a88:	672f0585 	strvs	r0, [pc, -r5, lsl #11]!
    3a8c:	054a4305 	strbeq	r4, [sl, #-773]	; 0xfffffcfb
    3a90:	19052e05 	stmdbne	r5, {r0, r2, r9, sl, fp, sp}
    3a94:	2e49054a 	cdpcs	5, 4, cr0, cr9, cr10, {2}
    3a98:	052e2d05 	streq	r2, [lr, #-3333]!	; 0xfffff2fb
    3a9c:	19052f05 	stmdbne	r5, {r0, r2, r8, r9, sl, fp, sp}
    3aa0:	2e25054a 	cfsh64cs	mvdx0, mvdx5, #42
    3aa4:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    3aa8:	1d056725 	stcne	7, cr6, [r5, #-148]	; 0xffffff6c
    3aac:	6901054a 	stmdbvs	r1, {r1, r3, r6, r8, sl}
    3ab0:	052d1f05 	streq	r1, [sp, #-3845]!	; 0xfffff0fb
    3ab4:	01054a17 	tsteq	r5, r7, lsl sl
    3ab8:	30056967 	andcc	r6, r5, r7, ror #18
    3abc:	670505a1 	strvs	r0, [r5, -r1, lsr #11]
    3ac0:	05671005 	strbeq	r1, [r7, #-5]!
    3ac4:	1c054d13 	stcne	13, cr4, [r5], {19}
    3ac8:	01040200 	mrseq	r0, R12_usr
    3acc:	6924054a 	stmdbvs	r4!, {r1, r3, r6, r8, sl}
    3ad0:	05ba0905 	ldreq	r0, [sl, #2309]!	; 0x905
    3ad4:	14054c26 	strne	r4, [r5], #-3110	; 0xfffff3da
    3ad8:	000505d7 	ldrdeq	r0, [r5], -r7
    3adc:	03020402 	movweq	r0, #9218	; 0x2402
    3ae0:	0c054a7a 			; <UNDEFINED> instruction: 0x0c054a7a
    3ae4:	05820b03 	streq	r0, [r2, #2819]	; 0xb03
    3ae8:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    3aec:	05059f30 	streq	r9, [r5, #-3888]	; 0xfffff0d0
    3af0:	00120567 	andseq	r0, r2, r7, ror #10
    3af4:	66010402 	strvs	r0, [r1], -r2, lsl #8
    3af8:	05671005 	strbeq	r1, [r7, #-5]!
    3afc:	05054c26 	streq	r4, [r5, #-3110]	; 0xfffff3da
    3b00:	4b1005ba 	blmi	4051f0 <_bss_end+0x3f4170>
    3b04:	054c2305 	strbeq	r2, [ip, #-773]	; 0xfffffcfb
    3b08:	0105d70c 	tsteq	r5, ip, lsl #14
    3b0c:	0a056a2f 	beq	15e3d0 <_bss_end+0x14d350>
    3b10:	4a0505d8 	bmi	145278 <_bss_end+0x1341f8>
    3b14:	6919054d 	ldmdbvs	r9, {r0, r2, r3, r6, r8, sl}
    3b18:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3b1c:	17052e33 	smladxne	r5, r3, lr, r2
    3b20:	4b0d052e 	blmi	344fe0 <_bss_end+0x333f60>
    3b24:	7a030905 	bvc	c5f40 <_bss_end+0xb4ec0>
    3b28:	3601052e 	strcc	r0, [r1], -lr, lsr #10
    3b2c:	d80a056a 	stmdale	sl, {r1, r3, r5, r6, r8, sl}
    3b30:	4d4a0505 	cfstr64mi	mvdx0, [sl, #-20]	; 0xffffffec
    3b34:	23081705 	movwcs	r1, #34565	; 0x8705
    3b38:	05682805 	strbeq	r2, [r8, #-2053]!	; 0xfffff7fb
    3b3c:	2c05bb0d 			; <UNDEFINED> instruction: 0x2c05bb0d
    3b40:	82170569 	andshi	r0, r7, #440401920	; 0x1a400000
    3b44:	054d1805 	strbeq	r1, [sp, #-2053]	; 0xfffff7fb
    3b48:	1a054a0d 	bne	156384 <_bss_end+0x145304>
    3b4c:	8219054c 	andshi	r0, r9, #76, 10	; 0x13000000
    3b50:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    3b54:	18052e11 	stmdane	r5, {r0, r4, r9, sl, fp, sp}
    3b58:	01040200 	mrseq	r0, R12_usr
    3b5c:	000d054a 	andeq	r0, sp, sl, asr #10
    3b60:	a0010402 	andge	r0, r1, r2, lsl #8
    3b64:	05311705 	ldreq	r1, [r1, #-1797]!	; 0xfffff8fb
    3b68:	3305680d 	movwcc	r6, #22541	; 0x580d
    3b6c:	01040200 	mrseq	r0, R12_usr
    3b70:	00470566 	subeq	r0, r7, r6, ror #10
    3b74:	4a010402 	bmi	44b84 <_bss_end+0x33b04>
    3b78:	02005c05 	andeq	r5, r0, #1280	; 0x500
    3b7c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3b80:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3b84:	19059e01 	stmdbne	r5, {r0, r9, sl, fp, ip, pc}
    3b88:	4a2d054d 	bmi	b450c4 <_bss_end+0xb34044>
    3b8c:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3b90:	2d059e19 	stccs	14, cr9, [r5, #-100]	; 0xffffff9c
    3b94:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3b98:	059e6905 	ldreq	r6, [lr, #2309]	; 0x905
    3b9c:	17056649 	strne	r6, [r5, -r9, asr #12]
    3ba0:	4b0d0582 	blmi	3451b0 <_bss_end+0x334130>
    3ba4:	05311705 	ldreq	r1, [r1, #-1797]!	; 0xfffff8fb
    3ba8:	3305680d 	movwcc	r6, #22541	; 0x580d
    3bac:	01040200 	mrseq	r0, R12_usr
    3bb0:	00470566 	subeq	r0, r7, r6, ror #10
    3bb4:	4a010402 	bmi	44bc4 <_bss_end+0x33b44>
    3bb8:	02005c05 	andeq	r5, r0, #1280	; 0x500
    3bbc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3bc0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3bc4:	19059e01 	stmdbne	r5, {r0, r9, sl, fp, ip, pc}
    3bc8:	4a2d054d 	bmi	b45104 <_bss_end+0xb34084>
    3bcc:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3bd0:	2d059e19 	stccs	14, cr9, [r5, #-100]	; 0xffffff9c
    3bd4:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3bd8:	059e7005 	ldreq	r7, [lr, #5]
    3bdc:	1705664a 	strne	r6, [r5, -sl, asr #12]
    3be0:	4b0d0582 	blmi	3451f0 <_bss_end+0x334170>
    3be4:	00330531 	eorseq	r0, r3, r1, lsr r5
    3be8:	66010402 	strvs	r0, [r1], -r2, lsl #8
    3bec:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    3bf0:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    3bf4:	0402005c 	streq	r0, [r2], #-92	; 0xffffffa4
    3bf8:	2f052e01 	svccs	0x00052e01
    3bfc:	01040200 	mrseq	r0, R12_usr
    3c00:	4d19059e 	cfldr32mi	mvfx0, [r9, #-632]	; 0xfffffd88
    3c04:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    3c08:	19052e42 	stmdbne	r5, {r1, r6, r9, sl, fp, sp}
    3c0c:	4a2d059e 	bmi	b4528c <_bss_end+0xb3420c>
    3c10:	052e4205 	streq	r4, [lr, #-517]!	; 0xfffffdfb
    3c14:	4a059e4b 	bmi	16b548 <_bss_end+0x15a4c8>
    3c18:	82170566 	andshi	r0, r7, #427819008	; 0x19800000
    3c1c:	054b1f05 	strbeq	r1, [fp, #-3845]	; 0xfffff0fb
    3c20:	0531680d 	ldreq	r6, [r1, #-2061]!	; 0xfffff7f3
    3c24:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    3c28:	47056601 	strmi	r6, [r5, -r1, lsl #12]
    3c2c:	01040200 	mrseq	r0, R12_usr
    3c30:	005c054a 	subseq	r0, ip, sl, asr #10
    3c34:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3c38:	02002f05 	andeq	r2, r0, #5, 30
    3c3c:	059e0104 	ldreq	r0, [lr, #260]	; 0x104
    3c40:	2d054d19 	stccs	13, cr4, [r5, #-100]	; 0xffffff9c
    3c44:	2e42054a 	cdpcs	5, 4, cr0, cr2, cr10, {2}
    3c48:	059e1905 	ldreq	r1, [lr, #2309]	; 0x905
    3c4c:	42054a2d 	andmi	r4, r5, #184320	; 0x2d000
    3c50:	9f66052e 	svcls	0x0066052e
    3c54:	05654a05 	strbeq	r4, [r5, #-2565]!	; 0xfffff5fb
    3c58:	0d059e17 	stceq	14, cr9, [r5, #-92]	; 0xffffffa4
    3c5c:	0309054c 	movweq	r0, #38220	; 0x954c
    3c60:	11052e4a 	tstne	r5, sl, asr #28
    3c64:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    3c68:	4a0a030d 	bmi	2848a4 <_bss_end+0x273824>
    3c6c:	03501105 	cmpeq	r0, #1073741825	; 0x40000001
    3c70:	03514a09 	cmpeq	r1, #36864	; 0x9000
    3c74:	01054a09 	tsteq	r5, r9, lsl #20
    3c78:	009e6635 	addseq	r6, lr, r5, lsr r6
    3c7c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3c80:	06120566 	ldreq	r0, [r2], -r6, ror #10
    3c84:	827dfd03 	rsbshi	pc, sp, #3, 26	; 0xc0
    3c88:	83030105 	movwhi	r0, #12549	; 0x3105
    3c8c:	4a9e4a02 	bmi	fe79649c <_bss_end+0xfe78541c>
    3c90:	01000a02 	tsteq	r0, r2, lsl #20
    3c94:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3c98:	02050008 	andeq	r0, r5, #8
    3c9c:	0000e7a0 	andeq	lr, r0, r0, lsr #15
    3ca0:	05011d03 	streq	r1, [r1, #-3331]	; 0xfffff2fd
    3ca4:	0505842a 	streq	r8, [r5, #-1066]	; 0xfffffbd6
    3ca8:	00060283 	andeq	r0, r6, r3, lsl #5
    3cac:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3cb0:	05000805 	streq	r0, [r0, #-2053]	; 0xfffff7fb
    3cb4:	00e7cc02 	rsceq	ip, r7, r2, lsl #24
    3cb8:	011d0300 	tsteq	sp, r0, lsl #6
    3cbc:	05842a05 	streq	r2, [r4, #2565]	; 0xa05
    3cc0:	06028305 	streq	r8, [r2], -r5, lsl #6
    3cc4:	90010100 	andls	r0, r1, r0, lsl #2
    3cc8:	03000000 	movweq	r0, #0
    3ccc:	00006700 	andeq	r6, r0, r0, lsl #14
    3cd0:	fb010200 	blx	444da <_bss_end+0x3345a>
    3cd4:	01000d0e 	tsteq	r0, lr, lsl #26
    3cd8:	00010101 	andeq	r0, r1, r1, lsl #2
    3cdc:	00010000 	andeq	r0, r1, r0
    3ce0:	6d2f0100 	stfvss	f0, [pc, #-0]	; 3ce8 <CPSR_IRQ_INHIBIT+0x3c68>
    3ce4:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3ce8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3cec:	4b2f7372 	blmi	be0abc <_bss_end+0xbcfa3c>
    3cf0:	2f616275 	svccs	0x00616275
    3cf4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3cf8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3cfc:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3d00:	614d6f72 	hvcvs	55026	; 0xd6f2
    3d04:	652f6574 	strvs	r6, [pc, #-1396]!	; 3798 <CPSR_IRQ_INHIBIT+0x3718>
    3d08:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3d0c:	2f73656c 	svccs	0x0073656c
    3d10:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3d14:	6b2f4332 	blvs	bd49e4 <_bss_end+0xbc3964>
    3d18:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3d1c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3d20:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
    3d24:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3d28:	73000073 	movwvc	r0, #115	; 0x73
    3d2c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    3d30:	00732e68 	rsbseq	r2, r3, r8, ror #28
    3d34:	00000001 	andeq	r0, r0, r1
    3d38:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    3d3c:	160000e7 	strne	r0, [r0], -r7, ror #1
    3d40:	2f2f362f 	svccs	0x002f362f
    3d44:	2f302f2f 	svccs	0x00302f2f
    3d48:	2f352f2f 	svccs	0x00352f2f
    3d4c:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
    3d50:	2f2f2f2f 	svccs	0x002f2f2f
    3d54:	02022f2f 	andeq	r2, r2, #47, 30	; 0xbc
    3d58:	c3010100 	movwgt	r0, #4352	; 0x1100
    3d5c:	03000000 	movweq	r0, #0
    3d60:	00005e00 	andeq	r5, r0, r0, lsl #28
    3d64:	fb010200 	blx	4456e <_bss_end+0x334ee>
    3d68:	01000d0e 	tsteq	r0, lr, lsl #26
    3d6c:	00010101 	andeq	r0, r1, r1, lsl #2
    3d70:	00010000 	andeq	r0, r1, r0
    3d74:	6d2f0100 	stfvss	f0, [pc, #-0]	; 3d7c <CPSR_IRQ_INHIBIT+0x3cfc>
    3d78:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    3d7c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    3d80:	4b2f7372 	blmi	be0b50 <_bss_end+0xbcfad0>
    3d84:	2f616275 	svccs	0x00616275
    3d88:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    3d8c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    3d90:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    3d94:	614d6f72 	hvcvs	55026	; 0xd6f2
    3d98:	652f6574 	strvs	r6, [pc, #-1396]!	; 382c <CPSR_IRQ_INHIBIT+0x37ac>
    3d9c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3da0:	2f73656c 	svccs	0x0073656c
    3da4:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3da8:	6b2f4332 	blvs	bd4a78 <_bss_end+0xbc39f8>
    3dac:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3db0:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    3db4:	73000063 	movwvc	r0, #99	; 0x63
    3db8:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3dbc:	0100732e 	tsteq	r0, lr, lsr #6
    3dc0:	00000000 	andeq	r0, r0, r0
    3dc4:	80000205 	andhi	r0, r0, r5, lsl #4
    3dc8:	0d030000 	stceq	0, cr0, [r3, #-0]
    3dcc:	2f2f2f01 	svccs	0x002f2f01
    3dd0:	2f2f2f2f 	svccs	0x002f2f2f
    3dd4:	20081f03 	andcs	r1, r8, r3, lsl #30
    3dd8:	2f2f322f 	svccs	0x002f322f
    3ddc:	2f31312f 	svccs	0x0031312f
    3de0:	2f2f312f 	svccs	0x002f312f
    3de4:	312f2f31 			; <UNDEFINED> instruction: 0x312f2f31
    3de8:	2f312f2f 	svccs	0x00312f2f
    3dec:	2f2f302f 	svccs	0x002f302f
    3df0:	0202302f 	andeq	r3, r2, #47	; 0x2f
    3df4:	00010100 	andeq	r0, r1, r0, lsl #2
    3df8:	e8540205 	ldmda	r4, {r0, r2, r9}^
    3dfc:	e5030000 	str	r0, [r3, #-0]
    3e00:	322f0100 	eorcc	r0, pc, #0, 2
    3e04:	2f2f2f2f 	svccs	0x002f2f2f
    3e08:	2f323231 	svccs	0x00323231
    3e0c:	2f2f2f2f 	svccs	0x002f2f2f
    3e10:	2f2f332f 	svccs	0x002f332f
    3e14:	302f302f 	eorcc	r3, pc, pc, lsr #32
    3e18:	332f3030 			; <UNDEFINED> instruction: 0x332f3030
    3e1c:	00020233 	andeq	r0, r2, r3, lsr r2
    3e20:	00e30101 	rsceq	r0, r3, r1, lsl #2
    3e24:	00030000 	andeq	r0, r3, r0
    3e28:	00000062 	andeq	r0, r0, r2, rrx
    3e2c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    3e30:	0101000d 	tsteq	r1, sp
    3e34:	00000101 	andeq	r0, r0, r1, lsl #2
    3e38:	00000100 	andeq	r0, r0, r0, lsl #2
    3e3c:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    3e40:	2f632f74 	svccs	0x00632f74
    3e44:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3e48:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3e4c:	442f6162 	strtmi	r6, [pc], #-354	; 3e54 <CPSR_IRQ_INHIBIT+0x3dd4>
    3e50:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3e54:	73746e65 	cmnvc	r4, #1616	; 0x650
    3e58:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    3e5c:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    3e60:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3e64:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3e68:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    3e6c:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    3e70:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    3e74:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3e78:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3e7c:	74730000 	ldrbtvc	r0, [r3], #-0
    3e80:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    3e84:	70632e70 	rsbvc	r2, r3, r0, ror lr
    3e88:	00010070 	andeq	r0, r1, r0, ror r0
    3e8c:	01050000 	mrseq	r0, (UNDEF: 5)
    3e90:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    3e94:	030000e8 	movweq	r0, #232	; 0xe8
    3e98:	0c050114 	stfeqs	f0, [r5], {20}
    3e9c:	0022056a 	eoreq	r0, r2, sl, ror #10
    3ea0:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3ea4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    3ea8:	05bb0204 	ldreq	r0, [fp, #516]!	; 0x204
    3eac:	04020005 	streq	r0, [r2], #-5
    3eb0:	0c056502 	cfstr32eq	mvfx6, [r5], {2}
    3eb4:	2f010585 	svccs	0x00010585
    3eb8:	6b1005bd 	blvs	4055b4 <_bss_end+0x3f4534>
    3ebc:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    3ec0:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    3ec4:	0402000a 	streq	r0, [r2], #-10
    3ec8:	11058302 	tstne	r5, r2, lsl #6
    3ecc:	02040200 	andeq	r0, r4, #0, 4
    3ed0:	0005054a 	andeq	r0, r5, sl, asr #10
    3ed4:	2d020402 	cfstrscs	mvf0, [r2, #-8]
    3ed8:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    3edc:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
    3ee0:	27056a10 	smladcs	r5, r0, sl, r6
    3ee4:	03040200 	movweq	r0, #16896	; 0x4200
    3ee8:	000a054a 	andeq	r0, sl, sl, asr #10
    3eec:	83020402 	movwhi	r0, #9218	; 0x2402
    3ef0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    3ef4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    3ef8:	04020005 	streq	r0, [r2], #-5
    3efc:	0c052d02 	stceq	13, cr2, [r5], {2}
    3f00:	2f010585 	svccs	0x00010585
    3f04:	01000a02 	tsteq	r0, r2, lsl #20
    3f08:	0002de01 	andeq	sp, r2, r1, lsl #28
    3f0c:	8d000300 	stchi	3, cr0, [r0, #-0]
    3f10:	02000001 	andeq	r0, r0, #1
    3f14:	0d0efb01 	vstreq	d15, [lr, #-4]
    3f18:	01010100 	mrseq	r0, (UNDEF: 17)
    3f1c:	00000001 	andeq	r0, r0, r1
    3f20:	01000001 	tsteq	r0, r1
    3f24:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3f28:	552f632f 	strpl	r6, [pc, #-815]!	; 3c01 <CPSR_IRQ_INHIBIT+0x3b81>
    3f2c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3f30:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3f34:	6f442f61 	svcvs	0x00442f61
    3f38:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3f3c:	2f73746e 	svccs	0x0073746e
    3f40:	6f72655a 	svcvs	0x0072655a
    3f44:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3f48:	6178652f 	cmnvs	r8, pc, lsr #10
    3f4c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3f50:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3f54:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3f58:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3f5c:	2f6c656e 	svccs	0x006c656e
    3f60:	00637273 	rsbeq	r7, r3, r3, ror r2
    3f64:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3f68:	552f632f 	strpl	r6, [pc, #-815]!	; 3c41 <CPSR_IRQ_INHIBIT+0x3bc1>
    3f6c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3f70:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3f74:	6f442f61 	svcvs	0x00442f61
    3f78:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3f7c:	2f73746e 	svccs	0x0073746e
    3f80:	6f72655a 	svcvs	0x0072655a
    3f84:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3f88:	6178652f 	cmnvs	r8, pc, lsr #10
    3f8c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3f90:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3f94:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3f98:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3f9c:	2f6c656e 	svccs	0x006c656e
    3fa0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3fa4:	2f656475 	svccs	0x00656475
    3fa8:	2f007366 	svccs	0x00007366
    3fac:	2f746e6d 	svccs	0x00746e6d
    3fb0:	73552f63 	cmpvc	r5, #396	; 0x18c
    3fb4:	2f737265 	svccs	0x00737265
    3fb8:	6162754b 	cmnvs	r2, fp, asr #10
    3fbc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    3fc0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    3fc4:	5a2f7374 	bpl	be0d9c <_bss_end+0xbcfd1c>
    3fc8:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3e3c <CPSR_IRQ_INHIBIT+0x3dbc>
    3fcc:	2f657461 	svccs	0x00657461
    3fd0:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    3fd4:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    3fd8:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3fdc:	2f433249 	svccs	0x00433249
    3fe0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3fe4:	692f6c65 	stmdbvs	pc!, {r0, r2, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    3fe8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3fec:	2e2f6564 	cfsh64cs	mvdx6, mvdx15, #52
    3ff0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3ff4:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3ff8:	2f6c656e 	svccs	0x006c656e
    3ffc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4000:	2f656475 	svccs	0x00656475
    4004:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    4008:	00737265 	rsbseq	r7, r3, r5, ror #4
    400c:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    4010:	552f632f 	strpl	r6, [pc, #-815]!	; 3ce9 <CPSR_IRQ_INHIBIT+0x3c69>
    4014:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    4018:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    401c:	6f442f61 	svcvs	0x00442f61
    4020:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    4024:	2f73746e 	svccs	0x0073746e
    4028:	6f72655a 	svcvs	0x0072655a
    402c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    4030:	6178652f 	cmnvs	r8, pc, lsr #10
    4034:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4038:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    403c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    4040:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4044:	2f6c656e 	svccs	0x006c656e
    4048:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    404c:	2f656475 	svccs	0x00656475
    4050:	72616f62 	rsbvc	r6, r1, #392	; 0x188
    4054:	70722f64 	rsbsvc	r2, r2, r4, ror #30
    4058:	682f3069 	stmdavs	pc!, {r0, r3, r5, r6, ip, sp}	; <UNPREDICTABLE>
    405c:	00006c61 	andeq	r6, r0, r1, ror #24
    4060:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    4064:	6f72705f 	svcvs	0x0072705f
    4068:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    406c:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    4070:	01007070 	tsteq	r0, r0, ror r0
    4074:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
    4078:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    407c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    4080:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4084:	6f6d0000 	svcvs	0x006d0000
    4088:	6f74696e 	svcvs	0x0074696e
    408c:	00682e72 	rsbeq	r2, r8, r2, ror lr
    4090:	69000003 	stmdbvs	r0, {r0, r1}
    4094:	6564746e 	strbvs	r7, [r4, #-1134]!	; 0xfffffb92
    4098:	00682e66 	rsbeq	r2, r8, r6, ror #28
    409c:	00000004 	andeq	r0, r0, r4
    40a0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    40a4:	00e9dc02 	rsceq	sp, r9, r2, lsl #24
    40a8:	01090300 	mrseq	r0, (UNDEF: 57)
    40ac:	05691605 	strbeq	r1, [r9, #-1541]!	; 0xfffff9fb
    40b0:	11058410 	tstne	r5, r0, lsl r4
    40b4:	8233052f 	eorshi	r0, r3, #197132288	; 0xbc00000
    40b8:	05823805 	streq	r3, [r2, #2053]	; 0x805
    40bc:	0e05670f 	cdpeq	7, 0, cr6, cr5, cr15, {0}
    40c0:	84100532 	ldrhi	r0, [r0], #-1330	; 0xffffface
    40c4:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    40c8:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    40cc:	04020009 	streq	r0, [r2], #-9
    40d0:	0e05d602 	cfmadd32eq	mvax0, mvfx13, mvfx5, mvfx2
    40d4:	84100585 	ldrhi	r0, [r0], #-1413	; 0xfffffa7b
    40d8:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    40dc:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    40e0:	04020009 	streq	r0, [r2], #-9
    40e4:	0105d602 	tsteq	r5, r2, lsl #12
    40e8:	11054408 	tstne	r5, r8, lsl #8
    40ec:	4c160569 	cfldr32mi	mvfx0, [r6], {105}	; 0x69
    40f0:	05831905 	streq	r1, [r3, #2309]	; 0x905
    40f4:	11058410 	tstne	r5, r0, lsl r4
    40f8:	8237052f 	eorshi	r0, r7, #197132288	; 0xbc00000
    40fc:	05823c05 	streq	r3, [r2, #3077]	; 0xc05
    4100:	39056711 	stmdbcc	r5, {r0, r4, r8, r9, sl, sp, lr}
    4104:	82410582 	subhi	r0, r1, #545259520	; 0x20800000
    4108:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
    410c:	0e05350d 	cfsh32eq	mvfx3, mvfx5, #13
    4110:	830d05a0 	movwhi	r0, #54688	; 0xd5a0
    4114:	05a02005 	streq	r2, [r0, #5]!
    4118:	1005820e 	andne	r8, r5, lr, lsl #4
    411c:	001705a0 	andseq	r0, r7, r0, lsr #11
    4120:	4a030402 	bmi	c5130 <_bss_end+0xb40b0>
    4124:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4128:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    412c:	08090301 	stmdaeq	r9, {r0, r8, r9}
    4130:	69160558 	ldmdbvs	r6, {r3, r4, r6, r8, sl}
    4134:	05841005 	streq	r1, [r4, #5]
    4138:	33052f11 	movwcc	r2, #24337	; 0x5f11
    413c:	82380582 	eorshi	r0, r8, #545259520	; 0x20800000
    4140:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
    4144:	1005320e 	andne	r3, r5, lr, lsl #4
    4148:	00170584 	andseq	r0, r7, r4, lsl #11
    414c:	4a030402 	bmi	c515c <_bss_end+0xb40dc>
    4150:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4154:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    4158:	1005850e 	andne	r8, r5, lr, lsl #10
    415c:	00170584 	andseq	r0, r7, r4, lsl #11
    4160:	4a030402 	bmi	c5170 <_bss_end+0xb40f0>
    4164:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4168:	05d60204 	ldrbeq	r0, [r6, #516]	; 0x204
    416c:	05440801 	strbeq	r0, [r4, #-2049]	; 0xfffff7ff
    4170:	10056916 	andne	r6, r5, r6, lsl r9
    4174:	2f110584 	svccs	0x00110584
    4178:	05823305 	streq	r3, [r2, #773]	; 0x305
    417c:	0f058238 	svceq	0x00058238
    4180:	320e0567 	andcc	r0, lr, #432013312	; 0x19c00000
    4184:	05841005 	streq	r1, [r4, #5]
    4188:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    418c:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    4190:	02040200 	andeq	r0, r4, #0, 4
    4194:	850e05d6 	strhi	r0, [lr, #-1494]	; 0xfffffa2a
    4198:	05841005 	streq	r1, [r4, #5]
    419c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    41a0:	09054a03 	stmdbeq	r5, {r0, r1, r9, fp, lr}
    41a4:	02040200 	andeq	r0, r4, #0, 4
    41a8:	080105d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl}
    41ac:	69160544 	ldmdbvs	r6, {r2, r6, r8, sl}
    41b0:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
    41b4:	11058410 	tstne	r5, r0, lsl r4
    41b8:	8233052f 	eorshi	r0, r3, #197132288	; 0xbc00000
    41bc:	05823805 	streq	r3, [r2, #2053]	; 0x805
    41c0:	0a05670f 	beq	15de04 <_bss_end+0x14cd84>
    41c4:	4e160530 	cfmvr64hmi	r0, mvdx6
    41c8:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    41cc:	056a4c18 	strbeq	r4, [sl, #-3096]!	; 0xfffff3e8
    41d0:	0e052e0d 	cdpeq	14, 0, cr2, cr5, cr13, {0}
    41d4:	a0100569 	andsge	r0, r0, r9, ror #10
    41d8:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    41dc:	054a0304 	strbeq	r0, [sl, #-772]	; 0xfffffcfc
    41e0:	04020009 	streq	r0, [r2], #-9
    41e4:	1202d602 	andne	sp, r2, #2097152	; 0x200000
    41e8:	cb010100 	blgt	445f0 <_bss_end+0x33570>
    41ec:	03000001 	movweq	r0, #1
    41f0:	00016d00 	andeq	r6, r1, r0, lsl #26
    41f4:	fb010200 	blx	449fe <_bss_end+0x3397e>
    41f8:	01000d0e 	tsteq	r0, lr, lsl #26
    41fc:	00010101 	andeq	r0, r1, r1, lsl #2
    4200:	00010000 	andeq	r0, r1, r0
    4204:	6d2f0100 	stfvss	f0, [pc, #-0]	; 420c <CPSR_IRQ_INHIBIT+0x418c>
    4208:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    420c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    4210:	4b2f7372 	blmi	be0fe0 <_bss_end+0xbcff60>
    4214:	2f616275 	svccs	0x00616275
    4218:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    421c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    4220:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    4224:	614d6f72 	hvcvs	55026	; 0xd6f2
    4228:	652f6574 	strvs	r6, [pc, #-1396]!	; 3cbc <CPSR_IRQ_INHIBIT+0x3c3c>
    422c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    4230:	2f73656c 	svccs	0x0073656c
    4234:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    4238:	732f4332 			; <UNDEFINED> instruction: 0x732f4332
    423c:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
    4240:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    4244:	6d2f0063 	stcvs	0, cr0, [pc, #-396]!	; 40c0 <CPSR_IRQ_INHIBIT+0x4040>
    4248:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    424c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    4250:	4b2f7372 	blmi	be1020 <_bss_end+0xbcffa0>
    4254:	2f616275 	svccs	0x00616275
    4258:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    425c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    4260:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    4264:	614d6f72 	hvcvs	55026	; 0xd6f2
    4268:	652f6574 	strvs	r6, [pc, #-1396]!	; 3cfc <CPSR_IRQ_INHIBIT+0x3c7c>
    426c:	706d6178 	rsbvc	r6, sp, r8, ror r1
    4270:	2f73656c 	svccs	0x0073656c
    4274:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    4278:	6b2f4332 	blvs	bd4f48 <_bss_end+0xbc3ec8>
    427c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    4280:	6e692f6c 	cdpvs	15, 6, cr2, cr9, cr12, {3}
    4284:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4288:	73662f65 	cmnvc	r6, #404	; 0x194
    428c:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    4290:	2f632f74 	svccs	0x00632f74
    4294:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    4298:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    429c:	442f6162 	strtmi	r6, [pc], #-354	; 42a4 <CPSR_IRQ_INHIBIT+0x4224>
    42a0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    42a4:	73746e65 	cmnvc	r4, #1616	; 0x650
    42a8:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    42ac:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    42b0:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    42b4:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    42b8:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    42bc:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    42c0:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    42c4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    42c8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    42cc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    42d0:	6f72702f 	svcvs	0x0072702f
    42d4:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    42d8:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    42dc:	2f632f74 	svccs	0x00632f74
    42e0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    42e4:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    42e8:	442f6162 	strtmi	r6, [pc], #-354	; 42f0 <CPSR_IRQ_INHIBIT+0x4270>
    42ec:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    42f0:	73746e65 	cmnvc	r4, #1616	; 0x650
    42f4:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    42f8:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    42fc:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    4300:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    4304:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    4308:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    430c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    4310:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    4314:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4318:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    431c:	616f622f 	cmnvs	pc, pc, lsr #4
    4320:	722f6472 	eorvc	r6, pc, #1912602624	; 0x72000000
    4324:	2f306970 	svccs	0x00306970
    4328:	006c6168 	rsbeq	r6, ip, r8, ror #2
    432c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    4330:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    4334:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    4338:	00000100 	andeq	r0, r0, r0, lsl #2
    433c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    4340:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    4344:	682e6d65 	stmdavs	lr!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
    4348:	00000200 	andeq	r0, r0, r0, lsl #4
    434c:	2e697773 	mcrcs	7, 3, r7, cr9, cr3, {3}
    4350:	00030068 	andeq	r0, r3, r8, rrx
    4354:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    4358:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    435c:	00040068 	andeq	r0, r4, r8, rrx
    4360:	01050000 	mrseq	r0, (UNDEF: 5)
    4364:	d8020500 	stmdale	r2, {r8, sl}
    4368:	150000ee 	strne	r0, [r0, #-238]	; 0xffffff12
    436c:	2f690505 	svccs	0x00690505
    4370:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    4374:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    4378:	4b4ba105 	blmi	12ec794 <_bss_end+0x12db714>
    437c:	4c0c052f 	cfstr32mi	mvfx0, [ip], {47}	; 0x2f
    4380:	852f0105 	strhi	r0, [pc, #-261]!	; 4283 <CPSR_IRQ_INHIBIT+0x4203>
    4384:	4bbd0505 	blmi	fef457a0 <_bss_end+0xfef34720>
    4388:	052f4b4b 	streq	r4, [pc, #-2891]!	; 3845 <CPSR_IRQ_INHIBIT+0x37c5>
    438c:	01054c0c 	tsteq	r5, ip, lsl #24
    4390:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
    4394:	4b4b4bbd 	blmi	12d7290 <_bss_end+0x12c6210>
    4398:	4c0c052f 	cfstr32mi	mvfx0, [ip], {47}	; 0x2f
    439c:	852f0105 	strhi	r0, [pc, #-261]!	; 429f <CPSR_IRQ_INHIBIT+0x421f>
    43a0:	4b830505 	blmi	fe0c57bc <_bss_end+0xfe0b473c>
    43a4:	852f0105 	strhi	r0, [pc, #-261]!	; 42a7 <CPSR_IRQ_INHIBIT+0x4227>
    43a8:	4bbd0505 	blmi	fef457c4 <_bss_end+0xfef34744>
    43ac:	052f4b4b 	streq	r4, [pc, #-2891]!	; 3869 <CPSR_IRQ_INHIBIT+0x37e9>
    43b0:	01054c0c 	tsteq	r5, ip, lsl #24
    43b4:	0008022f 	andeq	r0, r8, pc, lsr #4
    43b8:	02870101 	addeq	r0, r7, #1073741824	; 0x40000000
    43bc:	00030000 	andeq	r0, r3, r0
    43c0:	00000064 	andeq	r0, r0, r4, rrx
    43c4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    43c8:	0101000d 	tsteq	r1, sp
    43cc:	00000101 	andeq	r0, r0, r1, lsl #2
    43d0:	00000100 	andeq	r0, r0, r0, lsl #2
    43d4:	6e6d2f01 	cdpvs	15, 6, cr2, cr13, cr1, {0}
    43d8:	2f632f74 	svccs	0x00632f74
    43dc:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    43e0:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    43e4:	442f6162 	strtmi	r6, [pc], #-354	; 43ec <CPSR_IRQ_INHIBIT+0x436c>
    43e8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    43ec:	73746e65 	cmnvc	r4, #1616	; 0x650
    43f0:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    43f4:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    43f8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    43fc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    4400:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    4404:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    4408:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    440c:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    4410:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    4414:	74730000 	ldrbtvc	r0, [r3], #-0
    4418:	72747364 	rsbsvc	r7, r4, #100, 6	; 0x90000001
    441c:	2e676e69 	cdpcs	14, 6, cr6, cr7, cr9, {3}
    4420:	00707063 	rsbseq	r7, r0, r3, rrx
    4424:	00000001 	andeq	r0, r0, r1
    4428:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    442c:	00f06402 	rscseq	r6, r0, r2, lsl #8
    4430:	09051a00 	stmdbeq	r5, {r9, fp, ip}
    4434:	4c1205bb 	cfldr32mi	mvfx0, [r2], {187}	; 0xbb
    4438:	05682705 	strbeq	r2, [r8, #-1797]!	; 0xfffff8fb
    443c:	1105ba10 	tstne	r5, r0, lsl sl
    4440:	4a2d052e 	bmi	b45900 <_bss_end+0xb34880>
    4444:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
    4448:	0a052f0f 	beq	15008c <_bss_end+0x13f00c>
    444c:	6205059f 	andvs	r0, r5, #666894336	; 0x27c00000
    4450:	68100535 	ldmdavs	r0, {r0, r2, r4, r5, r8, sl}
    4454:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
    4458:	13054a22 	movwne	r4, #23074	; 0x5a22
    445c:	2f0a052e 	svccs	0x000a052e
    4460:	05690c05 	strbeq	r0, [r9, #-3077]!	; 0xfffff3fb
    4464:	0f052e0d 	svceq	0x00052e0d
    4468:	4b06054a 	blmi	185998 <_bss_end+0x174918>
    446c:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
    4470:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    4474:	17054a03 	strne	r4, [r5, -r3, lsl #20]
    4478:	03040200 	movweq	r0, #16896	; 0x4200
    447c:	001b059e 	mulseq	fp, lr, r5
    4480:	68020402 	stmdavs	r2, {r1, sl}
    4484:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    4488:	05820204 	streq	r0, [r2, #516]	; 0x204
    448c:	0402000e 	streq	r0, [r2], #-14
    4490:	20054a02 	andcs	r4, r5, r2, lsl #20
    4494:	02040200 	andeq	r0, r4, #0, 4
    4498:	0021054b 	eoreq	r0, r1, fp, asr #10
    449c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    44a0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    44a4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    44a8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    44ac:	21058202 	tstcs	r5, r2, lsl #4
    44b0:	02040200 	andeq	r0, r4, #0, 4
    44b4:	0017054a 	andseq	r0, r7, sl, asr #10
    44b8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    44bc:	02001005 	andeq	r1, r0, #5
    44c0:	052f0204 	streq	r0, [pc, #-516]!	; 42c4 <CPSR_IRQ_INHIBIT+0x4244>
    44c4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    44c8:	13052e02 	movwne	r2, #24066	; 0x5e02
    44cc:	02040200 	andeq	r0, r4, #0, 4
    44d0:	0005054a 	andeq	r0, r5, sl, asr #10
    44d4:	46020402 	strmi	r0, [r2], -r2, lsl #8
    44d8:	85880105 	strhi	r0, [r8, #261]	; 0x105
    44dc:	05830905 	streq	r0, [r3, #2309]	; 0x905
    44e0:	13054c0c 	movwne	r4, #23564	; 0x5c0c
    44e4:	4c10054a 	cfldr32mi	mvfx0, [r0], {74}	; 0x4a
    44e8:	05bb0d05 	ldreq	r0, [fp, #3333]!	; 0xd05
    44ec:	1d054a09 	vstrne	s8, [r5, #-36]	; 0xffffffdc
    44f0:	01040200 	mrseq	r0, R12_usr
    44f4:	001a054a 	andseq	r0, sl, sl, asr #10
    44f8:	4a010402 	bmi	45508 <_bss_end+0x34488>
    44fc:	054d1305 	strbeq	r1, [sp, #-773]	; 0xfffffcfb
    4500:	10054a1a 	andne	r4, r5, sl, lsl sl
    4504:	680e052e 	stmdavs	lr, {r1, r2, r3, r5, r8, sl}
    4508:	78030505 	stmdavc	r3, {r0, r2, r8, sl}
    450c:	030c0566 	movweq	r0, #50534	; 0xc566
    4510:	01052e0b 	tsteq	r5, fp, lsl #28
    4514:	0c05852f 	cfstr32eq	mvfx8, [r5], {47}	; 0x2f
    4518:	001905bd 			; <UNDEFINED> instruction: 0x001905bd
    451c:	4a040402 	bmi	10552c <_bss_end+0xf44ac>
    4520:	02002005 	andeq	r2, r0, #5
    4524:	05820204 	streq	r0, [r2, #516]	; 0x204
    4528:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    452c:	19052e02 	stmdbne	r5, {r1, r9, sl, fp, sp}
    4530:	02040200 	andeq	r0, r4, #0, 4
    4534:	00170566 	andseq	r0, r7, r6, ror #10
    4538:	4b030402 	blmi	c5548 <_bss_end+0xb44c8>
    453c:	02001805 	andeq	r1, r0, #327680	; 0x50000
    4540:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    4544:	0402000e 	streq	r0, [r2], #-14
    4548:	0f054a03 	svceq	0x00054a03
    454c:	03040200 	movweq	r0, #16896	; 0x4200
    4550:	0018052e 	andseq	r0, r8, lr, lsr #10
    4554:	4a030402 	bmi	c5564 <_bss_end+0xb44e4>
    4558:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    455c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    4560:	04020005 	streq	r0, [r2], #-5
    4564:	0e052d03 	cdpeq	13, 0, cr2, cr5, cr3, {0}
    4568:	02040200 	andeq	r0, r4, #0, 4
    456c:	04020084 	streq	r0, [r2], #-132	; 0xffffff7c
    4570:	0f058301 	svceq	0x00058301
    4574:	01040200 	mrseq	r0, R12_usr
    4578:	0011052e 	andseq	r0, r1, lr, lsr #10
    457c:	4a010402 	bmi	4558c <_bss_end+0x3450c>
    4580:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4584:	05490104 	strbeq	r0, [r9, #-260]	; 0xfffffefc
    4588:	0105850c 	tsteq	r5, ip, lsl #10
    458c:	0f05852f 	svceq	0x0005852f
    4590:	661205bc 			; <UNDEFINED> instruction: 0x661205bc
    4594:	05bc2005 	ldreq	r2, [ip, #5]!
    4598:	2005660c 	andcs	r6, r5, ip, lsl #12
    459c:	660c054b 	strvs	r0, [ip], -fp, asr #10
    45a0:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    45a4:	19058314 	stmdbne	r5, {r2, r4, r8, r9, pc}
    45a8:	6709052e 	strvs	r0, [r9, -lr, lsr #10]
    45ac:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    45b0:	01054d0c 	tsteq	r5, ip, lsl #26
    45b4:	0905852f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, sl, pc}
    45b8:	4c0e0583 	cfstr32mi	mvfx0, [lr], {131}	; 0x83
    45bc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    45c0:	0a056611 	beq	15de0c <_bss_end+0x14cd8c>
    45c4:	6505054b 	strvs	r0, [r5, #-1355]	; 0xfffffab5
    45c8:	05310c05 	ldreq	r0, [r1, #-3077]!	; 0xfffff3fb
    45cc:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    45d0:	0e059f0b 	cdpeq	15, 0, cr9, cr5, cr11, {0}
    45d4:	0017054c 	andseq	r0, r7, ip, asr #10
    45d8:	4a030402 	bmi	c55e8 <_bss_end+0xb4568>
    45dc:	02000d05 	andeq	r0, r0, #320	; 0x140
    45e0:	05830204 	streq	r0, [r3, #516]	; 0x204
    45e4:	0402000e 	streq	r0, [r2], #-14
    45e8:	10052e02 	andne	r2, r5, r2, lsl #28
    45ec:	02040200 	andeq	r0, r4, #0, 4
    45f0:	0005054a 	andeq	r0, r5, sl, asr #10
    45f4:	49020402 	stmdbmi	r2, {r1, sl}
    45f8:	85840105 	strhi	r0, [r4, #261]	; 0x105
    45fc:	05bb1105 	ldreq	r1, [fp, #261]!	; 0x105
    4600:	0e054b0b 	vmlaeq.f64	d4, d5, d11
    4604:	0017054c 	andseq	r0, r7, ip, asr #10
    4608:	4a030402 	bmi	c5618 <_bss_end+0xb4598>
    460c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    4610:	05830204 	streq	r0, [r3, #516]	; 0x204
    4614:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    4618:	10052e02 	andne	r2, r5, r2, lsl #28
    461c:	02040200 	andeq	r0, r4, #0, 4
    4620:	0011054a 	andseq	r0, r1, sl, asr #10
    4624:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    4628:	02001d05 	andeq	r1, r0, #320	; 0x140
    462c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    4630:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4634:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
    4638:	02040200 	andeq	r0, r4, #0, 4
    463c:	8401052d 	strhi	r0, [r1], #-1325	; 0xfffffad3
    4640:	01000802 	tsteq	r0, r2, lsl #16
    4644:	0001fe01 	andeq	pc, r1, r1, lsl #28
    4648:	e1000300 	mrs	r0, LR_irq
    464c:	02000001 	andeq	r0, r0, #1
    4650:	0d0efb01 	vstreq	d15, [lr, #-4]
    4654:	01010100 	mrseq	r0, (UNDEF: 17)
    4658:	00000001 	andeq	r0, r0, r1
    465c:	01000001 	tsteq	r0, r1
    4660:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4664:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4668:	2f2e2e2f 	svccs	0x002e2e2f
    466c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4670:	72732f2e 	rsbsvc	r2, r3, #46, 30	; 0xb8
    4674:	696c2f63 	stmdbvs	ip!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    4678:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    467c:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    4680:	6c2f3376 	stcvs	3, cr3, [pc], #-472	; 44b0 <CPSR_IRQ_INHIBIT+0x4430>
    4684:	75736269 	ldrbvc	r6, [r3, #-617]!	; 0xfffffd97
    4688:	2b2b6370 	blcs	add450 <_bss_end+0xacc3d0>
    468c:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
    4690:	2f646c69 	svccs	0x00646c69
    4694:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4698:	2b636474 	blcs	18dd870 <_bss_end+0x18cc7f0>
    469c:	72612d2b 	rsbvc	r2, r1, #2752	; 0xac0
    46a0:	6f6e2d6d 	svcvs	0x006e2d6d
    46a4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    46a8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    46ac:	45694467 	strbmi	r4, [r9, #-1127]!	; 0xfffffb99
    46b0:	6c2f4337 	stcvs	3, cr4, [pc], #-220	; 45dc <CPSR_IRQ_INHIBIT+0x455c>
    46b4:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    46b8:	2b2b6364 	blcs	add450 <_bss_end+0xacc3d0>
    46bc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    46c0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    46c4:	61652d65 	cmnvs	r5, r5, ror #26
    46c8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    46cc:	75622f37 	strbvc	r2, [r2, #-3895]!	; 0xfffff0c9
    46d0:	2f646c69 	svccs	0x00646c69
    46d4:	2f6d7261 	svccs	0x006d7261
    46d8:	65743576 	ldrbvs	r3, [r4, #-1398]!	; 0xfffffa8a
    46dc:	7261682f 	rsbvc	r6, r1, #3080192	; 0x2f0000
    46e0:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    46e4:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    46e8:	2f2b2b63 	svccs	0x002b2b63
    46ec:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    46f0:	2f656475 	svccs	0x00656475
    46f4:	73746962 	cmnvc	r4, #1605632	; 0x188000
    46f8:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
    46fc:	2f646c69 	svccs	0x00646c69
    4700:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4704:	2b636474 	blcs	18dd8dc <_bss_end+0x18cc85c>
    4708:	72612d2b 	rsbvc	r2, r1, #2752	; 0xac0
    470c:	6f6e2d6d 	svcvs	0x006e2d6d
    4710:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4714:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4718:	45694467 	strbmi	r4, [r9, #-1127]!	; 0xfffffb99
    471c:	6c2f4337 	stcvs	3, cr4, [pc], #-220	; 4648 <CPSR_IRQ_INHIBIT+0x45c8>
    4720:	74736269 	ldrbtvc	r6, [r3], #-617	; 0xfffffd97
    4724:	2b2b6364 	blcs	add4bc <_bss_end+0xacc43c>
    4728:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    472c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4730:	61652d65 	cmnvs	r5, r5, ror #26
    4734:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    4738:	75622f37 	strbvc	r2, [r2, #-3895]!	; 0xfffff0c9
    473c:	2f646c69 	svccs	0x00646c69
    4740:	2f6d7261 	svccs	0x006d7261
    4744:	65743576 	ldrbvs	r3, [r4, #-1398]!	; 0xfffffa8a
    4748:	7261682f 	rsbvc	r6, r1, #3080192	; 0x2f0000
    474c:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    4750:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4754:	2f2b2b63 	svccs	0x002b2b63
    4758:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    475c:	2f656475 	svccs	0x00656475
    4760:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4764:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    4768:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    476c:	69622f69 	stmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp}^
    4770:	2f007374 	svccs	0x00007374
    4774:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4778:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    477c:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4780:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    4784:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4788:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    478c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4790:	44672d69 	strbtmi	r2, [r7], #-3433	; 0xfffff297
    4794:	43374569 	teqmi	r7, #440401920	; 0x1a400000
    4798:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    479c:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    47a0:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    47a4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    47a8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    47ac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    47b0:	2f37312d 	svccs	0x0037312d
    47b4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    47b8:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    47bc:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    47c0:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    47c4:	2f647261 	svccs	0x00647261
    47c8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    47cc:	2b636474 	blcs	18dd9a4 <_bss_end+0x18cc924>
    47d0:	6e692f2b 	cdpvs	15, 6, cr2, cr9, cr11, {1}
    47d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    47d8:	6e000065 	cdpvs	0, 0, cr0, cr0, cr5, {3}
    47dc:	6f5f7765 	svcvs	0x005f7765
    47e0:	632e7670 			; <UNDEFINED> instruction: 0x632e7670
    47e4:	00010063 	andeq	r0, r1, r3, rrx
    47e8:	63786500 	cmnvs	r8, #0, 10
    47ec:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    47f0:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    47f4:	682e7274 	stmdavs	lr!, {r2, r4, r5, r6, r9, ip, sp, lr}
    47f8:	00000200 	andeq	r0, r0, r0, lsl #4
    47fc:	632b2b63 			; <UNDEFINED> instruction: 0x632b2b63
    4800:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    4804:	00682e67 	rsbeq	r2, r8, r7, ror #28
    4808:	74000003 	strvc	r0, [r0], #-3
    480c:	5f657079 	svcpl	0x00657079
    4810:	69617274 	stmdbvs	r1!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    4814:	04007374 	streq	r7, [r0], #-884	; 0xfffffc8c
    4818:	623c0000 	eorsvs	r0, ip, #0
    481c:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    4820:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    4824:	00000000 	andeq	r0, r0, r0
    4828:	0077656e 	rsbseq	r6, r7, lr, ror #10
    482c:	00000001 	andeq	r0, r0, r1
    4830:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4834:	00f51c02 	rscseq	r1, r5, r2, lsl #24
    4838:	011e0300 	tsteq	lr, r0, lsl #6
    483c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    4840:	2e010618 	mcrcs	6, 0, r0, cr1, cr8, {0}
    4844:	79010100 	stmdbvc	r1, {r8}
    4848:	03000000 	movweq	r0, #0
    484c:	00004600 	andeq	r4, r0, r0, lsl #12
    4850:	fb010200 	blx	4505a <_bss_end+0x33fda>
    4854:	01000d0e 	tsteq	r0, lr, lsl #26
    4858:	00010101 	andeq	r0, r1, r1, lsl #2
    485c:	00010000 	andeq	r0, r1, r0
    4860:	2e2e0100 	sufcse	f0, f6, f0
    4864:	2f2e2e2f 	svccs	0x002e2e2f
    4868:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    486c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4870:	2f2e2e2f 	svccs	0x002e2e2f
    4874:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    4878:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
    487c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    4880:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    4884:	6c00006d 	stcvs	0, cr0, [r0], {109}	; 0x6d
    4888:	66316269 	ldrtvs	r6, [r1], -r9, ror #4
    488c:	73636e75 	cmnvc	r3, #1872	; 0x750
    4890:	0100532e 	tsteq	r0, lr, lsr #6
    4894:	00000000 	andeq	r0, r0, r0
    4898:	f5200205 			; <UNDEFINED> instruction: 0xf5200205
    489c:	cf030000 	svcgt	0x00030000
    48a0:	2f300108 	svccs	0x00300108
    48a4:	2f2f2f2f 	svccs	0x002f2f2f
    48a8:	01d00230 	bicseq	r0, r0, r0, lsr r2
    48ac:	2f312f14 	svccs	0x00312f14
    48b0:	2f4c302f 	svccs	0x004c302f
    48b4:	661f0332 			; <UNDEFINED> instruction: 0x661f0332
    48b8:	2f2f2f2f 	svccs	0x002f2f2f
    48bc:	022f2f2f 	eoreq	r2, pc, #47, 30	; 0xbc
    48c0:	01010002 	tsteq	r1, r2
    48c4:	0000005c 	andeq	r0, r0, ip, asr r0
    48c8:	00460003 	subeq	r0, r6, r3
    48cc:	01020000 	mrseq	r0, (UNDEF: 2)
    48d0:	000d0efb 	strdeq	r0, [sp], -fp
    48d4:	01010101 	tsteq	r1, r1, lsl #2
    48d8:	01000000 	mrseq	r0, (UNDEF: 0)
    48dc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    48e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    48e4:	2f2e2e2f 	svccs	0x002e2e2f
    48e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    48ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    48f0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    48f4:	2f636367 	svccs	0x00636367
    48f8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    48fc:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    4900:	00006d72 	andeq	r6, r0, r2, ror sp
    4904:	3162696c 	cmncc	r2, ip, ror #18
    4908:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    490c:	00532e73 	subseq	r2, r3, r3, ror lr
    4910:	00000001 	andeq	r0, r0, r1
    4914:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    4918:	030000f7 	movweq	r0, #247	; 0xf7
    491c:	02010bb9 	andeq	r0, r1, #189440	; 0x2e400
    4920:	01010002 	tsteq	r1, r2
    4924:	000000a4 	andeq	r0, r0, r4, lsr #1
    4928:	009e0003 	addseq	r0, lr, r3
    492c:	01020000 	mrseq	r0, (UNDEF: 2)
    4930:	000d0efb 	strdeq	r0, [sp], -fp
    4934:	01010101 	tsteq	r1, r1, lsl #2
    4938:	01000000 	mrseq	r0, (UNDEF: 0)
    493c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4940:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4944:	2f2e2e2f 	svccs	0x002e2e2f
    4948:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    494c:	2f2e2f2e 	svccs	0x002e2f2e
    4950:	00636367 	rsbeq	r6, r3, r7, ror #6
    4954:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4958:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    495c:	2f2e2e2f 	svccs	0x002e2e2f
    4960:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4964:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4968:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    496c:	2f2e2e2f 	svccs	0x002e2e2f
    4970:	2f636367 	svccs	0x00636367
    4974:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    4978:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    497c:	2e006d72 	mcrcs	13, 0, r6, cr0, cr2, {3}
    4980:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4984:	2f2e2e2f 	svccs	0x002e2e2f
    4988:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    498c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4990:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4994:	00636367 	rsbeq	r6, r3, r7, ror #6
    4998:	6d726100 	ldfvse	f6, [r2, #-0]
    499c:	6173692d 	cmnvs	r3, sp, lsr #18
    49a0:	0100682e 	tsteq	r0, lr, lsr #16
    49a4:	72610000 	rsbvc	r0, r1, #0
    49a8:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    49ac:	67000002 	strvs	r0, [r0, -r2]
    49b0:	632d6c62 			; <UNDEFINED> instruction: 0x632d6c62
    49b4:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
    49b8:	0300682e 	movweq	r6, #2094	; 0x82e
    49bc:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    49c0:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    49c4:	00632e32 	rsbeq	r2, r3, r2, lsr lr
    49c8:	00000003 	andeq	r0, r0, r3

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
       4:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
       8:	5f647261 	svcpl	0x00647261
       c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
      10:	00657361 	rsbeq	r7, r5, r1, ror #6
      14:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
      18:	75675f61 	strbvc	r5, [r7, #-3937]!	; 0xfffff09f
      1c:	5f647261 	svcpl	0x00647261
      20:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
      24:	6d2f0074 	stcvs	0, cr0, [pc, #-464]!	; fffffe5c <_bss_end+0xfffeeddc>
      28:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
      2c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
      30:	4b2f7372 	blmi	bdce00 <_bss_end+0xbcbd80>
      34:	2f616275 	svccs	0x00616275
      38:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
      3c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
      40:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
      44:	614d6f72 	hvcvs	55026	; 0xd6f2
      48:	652f6574 	strvs	r6, [pc, #-1396]!	; fffffadc <_bss_end+0xfffeea5c>
      4c:	706d6178 	rsbvc	r6, sp, r8, ror r1
      50:	2f73656c 	svccs	0x0073656c
      54:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
      58:	622f4332 	eorvs	r4, pc, #-939524096	; 0xc8000000
      5c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
      60:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
      64:	2b2b4320 	blcs	ad0cec <_bss_end+0xabfc6c>
      68:	31203431 			; <UNDEFINED> instruction: 0x31203431
      6c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
      70:	30322031 	eorscc	r2, r2, r1, lsr r0
      74:	36303132 			; <UNDEFINED> instruction: 0x36303132
      78:	28203132 	stmdacs	r0!, {r1, r4, r5, r8, ip, sp}
      7c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
      80:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
      84:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      88:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
      8c:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
      90:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
      94:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
      98:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
      9c:	20706676 	rsbscs	r6, r0, r6, ror r6
      a0:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
      a4:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
      a8:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      ac:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
      b0:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      b4:	763d7570 			; <UNDEFINED> instruction: 0x763d7570
      b8:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
      bc:	6e75746d 	cdpvs	4, 7, cr7, cr5, cr13, {3}
      c0:	72613d65 	rsbvc	r3, r1, #6464	; 0x1940
      c4:	3731316d 	ldrcc	r3, [r1, -sp, ror #2]!
      c8:	667a6a36 			; <UNDEFINED> instruction: 0x667a6a36
      cc:	2d20732d 	stccs	3, cr7, [r0, #-180]!	; 0xffffff4c
      d0:	6d72616d 	ldfvse	f6, [r2, #-436]!	; 0xfffffe4c
      d4:	616d2d20 	cmnvs	sp, r0, lsr #26
      d8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
      dc:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
      e0:	2b6b7a36 	blcs	1ade9c0 <_bss_end+0x1acd940>
      e4:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
      e8:	672d2067 	strvs	r2, [sp, -r7, rrx]!
      ec:	304f2d20 	subcc	r2, pc, r0, lsr #26
      f0:	304f2d20 	subcc	r2, pc, r0, lsr #26
      f4:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
      f8:	78652d6f 	stmdavc	r5!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
      fc:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     100:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     104:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     108:	74722d6f 	ldrbtvc	r2, [r2], #-3439	; 0xfffff291
     10c:	2f006974 	svccs	0x00006974
     110:	2f746e6d 	svccs	0x00746e6d
     114:	73552f63 	cmpvc	r5, #396	; 0x18c
     118:	2f737265 	svccs	0x00737265
     11c:	6162754b 	cmnvs	r2, fp, asr #10
     120:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     124:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     128:	5a2f7374 	bpl	bdcf00 <_bss_end+0xbcbe80>
     12c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; ffffffa0 <_bss_end+0xfffeef20>
     130:	2f657461 	svccs	0x00657461
     134:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     138:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     13c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     140:	2f433249 	svccs	0x00433249
     144:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     148:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
     14c:	632f6372 			; <UNDEFINED> instruction: 0x632f6372
     150:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
     154:	5f007070 	svcpl	0x00007070
     158:	6f73645f 	svcvs	0x0073645f
     15c:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
     160:	00656c64 	rsbeq	r6, r5, r4, ror #24
     164:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     168:	74615f61 	strbtvc	r5, [r1], #-3937	; 0xfffff09f
     16c:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     170:	635f5f00 	cmpvs	pc, #0, 30
     174:	675f6178 			; <UNDEFINED> instruction: 0x675f6178
     178:	64726175 	ldrbtvs	r6, [r2], #-373	; 0xfffffe8b
     17c:	7163615f 	cmnvc	r3, pc, asr r1
     180:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
     184:	635f5f00 	cmpvs	pc, #0, 30
     188:	62617878 	rsbvs	r7, r1, #120, 16	; 0x780000
     18c:	00317669 	eorseq	r7, r1, r9, ror #12
     190:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     194:	75705f61 	ldrbvc	r5, [r0, #-3937]!	; 0xfffff09f
     198:	765f6572 			; <UNDEFINED> instruction: 0x765f6572
     19c:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0xfffffd97
     1a0:	5f006c61 	svcpl	0x00006c61
     1a4:	6165615f 	cmnvs	r5, pc, asr r1
     1a8:	755f6962 	ldrbvc	r6, [pc, #-2402]	; fffff84e <_bss_end+0xfffee7ce>
     1ac:	6e69776e 	cdpvs	7, 6, cr7, cr9, cr14, {3}
     1b0:	70635f64 	rsbvc	r5, r3, r4, ror #30
     1b4:	72705f70 	rsbsvc	r5, r0, #112, 30	; 0x1c0
     1b8:	5f5f0031 	svcpl	0x005f0031
     1bc:	72617567 	rsbvc	r7, r1, #432013312	; 0x19c00000
     1c0:	6f6c0064 	svcvs	0x006c0064
     1c4:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
     1c8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     1cc:	00746e69 	rsbseq	r6, r4, r9, ror #28
     1d0:	314e5a5f 	cmpcc	lr, pc, asr sl
     1d4:	50474333 	subpl	r4, r7, r3, lsr r3
     1d8:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     1dc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     1e0:	31317265 	teqcc	r1, r5, ror #4
     1e4:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     1e8:	5f657672 	svcpl	0x00657672
     1ec:	456e6950 	strbmi	r6, [lr, #-2384]!	; 0xfffff6b0
     1f0:	0062626a 	rsbeq	r6, r2, sl, ror #4
     1f4:	5f746c41 	svcpl	0x00746c41
     1f8:	6c410030 	mcrrvs	0, 3, r0, r1, cr0
     1fc:	00315f74 	eorseq	r5, r1, r4, ror pc
     200:	5f746c41 	svcpl	0x00746c41
     204:	6c410032 	mcrrvs	0, 3, r0, r1, cr2
     208:	00335f74 	eorseq	r5, r3, r4, ror pc
     20c:	5f746c41 	svcpl	0x00746c41
     210:	6c410034 	mcrrvs	0, 3, r0, r1, cr4
     214:	00355f74 	eorseq	r5, r5, r4, ror pc
     218:	6f697067 	svcvs	0x00697067
     21c:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     220:	64615f65 	strbtvs	r5, [r1], #-3941	; 0xfffff09b
     224:	5f007264 	svcpl	0x00007264
     228:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     22c:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     230:	61485f4f 	cmpvs	r8, pc, asr #30
     234:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     238:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
     23c:	5f5f006a 	svcpl	0x005f006a
     240:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     244:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
     248:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     24c:	7a696c61 	bvc	1a5b3d8 <_bss_end+0x1a4a358>
     250:	6f697461 	svcvs	0x00697461
     254:	6e615f6e 	cdpvs	15, 6, cr5, cr1, cr14, {3}
     258:	65645f64 	strbvs	r5, [r4, #-3940]!	; 0xfffff09c
     25c:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
     260:	6f697463 	svcvs	0x00697463
     264:	00305f6e 	eorseq	r5, r0, lr, ror #30
     268:	314e5a5f 	cmpcc	lr, pc, asr sl
     26c:	50474333 	subpl	r4, r7, r3, lsr r3
     270:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     274:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     278:	47397265 	ldrmi	r7, [r9, -r5, ror #4]!
     27c:	495f7465 	ldmdbmi	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     280:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
     284:	53006a45 	movwpl	r6, #2629	; 0xa45
     288:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     28c:	5f4f4950 	svcpl	0x004f4950
     290:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
     294:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     298:	50504700 	subspl	r4, r0, r0, lsl #14
     29c:	4c434455 	cfstrdmi	mvd4, [r3], {85}	; 0x55
     2a0:	4700304b 	strmi	r3, [r0, -fp, asr #32]
     2a4:	44555050 	ldrbmi	r5, [r5], #-80	; 0xffffffb0
     2a8:	314b4c43 	cmpcc	fp, r3, asr #24
     2ac:	50504700 	subspl	r4, r0, r0, lsl #14
     2b0:	54004455 	strpl	r4, [r0], #-1109	; 0xfffffbab
     2b4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     2b8:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     2bc:	506d0065 	rsbpl	r0, sp, r5, rrx
     2c0:	525f6e69 	subspl	r6, pc, #1680	; 0x690
     2c4:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
     2c8:	69746176 	ldmdbvs	r4!, {r1, r2, r4, r5, r6, r8, sp, lr}^
     2cc:	5f736e6f 	svcpl	0x00736e6f
     2d0:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     2d4:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
     2d8:	706e495f 	rsbvc	r4, lr, pc, asr r9
     2dc:	47007475 	smlsdxmi	r0, r5, r4, r7
     2e0:	4e454c50 	mcrmi	12, 2, r4, cr5, cr0, {2}
     2e4:	50470030 	subpl	r0, r7, r0, lsr r0
     2e8:	314e454c 	cmpcc	lr, ip, asr #10
     2ec:	53504700 	cmppl	r0, #0, 14
     2f0:	00305445 	eorseq	r5, r0, r5, asr #8
     2f4:	45535047 	ldrbmi	r5, [r3, #-71]	; 0xffffffb9
     2f8:	5f003154 	svcpl	0x00003154
     2fc:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     300:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     304:	61485f4f 	cmpvs	r8, pc, asr #30
     308:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     30c:	72463872 	subvc	r3, r6, #7471104	; 0x720000
     310:	505f6565 	subspl	r6, pc, r5, ror #10
     314:	6a456e69 	bvs	115bcc0 <_bss_end+0x114ac40>
     318:	47006262 	strmi	r6, [r0, -r2, ror #4]
     31c:	56454c50 			; <UNDEFINED> instruction: 0x56454c50
     320:	50470030 	subpl	r0, r7, r0, lsr r0
     324:	3156454c 	cmpcc	r6, ip, asr #10
     328:	69687400 	stmdbvs	r8!, {sl, ip, sp, lr}^
     32c:	53420073 	movtpl	r0, #8307	; 0x2073
     330:	425f3043 	subsmi	r3, pc, #67	; 0x43
     334:	00657361 	rsbeq	r7, r5, r1, ror #6
     338:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
     33c:	61697469 	cmnvs	r9, r9, ror #8
     340:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
     344:	4900705f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r6, ip, sp, lr}
     348:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     34c:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     350:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     354:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 18c <CPSR_IRQ_INHIBIT+0x10c>
     358:	5f72656c 	svcpl	0x0072656c
     35c:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     360:	4e525400 	cdpmi	4, 5, cr5, cr2, cr0, {0}
     364:	61425f47 	cmpvs	r2, r7, asr #30
     368:	6d006573 	cfstr32vs	mvfx6, [r0, #-460]	; 0xfffffe34
     36c:	0065646f 	rsbeq	r6, r5, pc, ror #8
     370:	5f585541 	svcpl	0x00585541
     374:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     378:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     37c:	304c4553 	subcc	r4, ip, r3, asr r5
     380:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     384:	314c4553 	cmpcc	ip, r3, asr r5
     388:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     38c:	324c4553 	subcc	r4, ip, #348127232	; 0x14c00000
     390:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     394:	334c4553 	movtcc	r4, #50515	; 0xc553
     398:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     39c:	344c4553 	strbcc	r4, [ip], #-1363	; 0xfffffaad
     3a0:	46504700 	ldrbmi	r4, [r0], -r0, lsl #14
     3a4:	354c4553 	strbcc	r4, [ip, #-1363]	; 0xfffffaad
     3a8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     3ac:	4333314b 	teqmi	r3, #-1073741806	; 0xc0000012
     3b0:	4f495047 	svcmi	0x00495047
     3b4:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     3b8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     3bc:	65473931 	strbvs	r3, [r7, #-2353]	; 0xfffff6cf
     3c0:	50475f74 	subpl	r5, r7, r4, ror pc
     3c4:	4c455346 	mcrrmi	3, 4, r5, r5, cr6
     3c8:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     3cc:	6f697461 	svcvs	0x00697461
     3d0:	526a456e 	rsbpl	r4, sl, #461373440	; 0x1b800000
     3d4:	5f30536a 	svcpl	0x0030536a
     3d8:	6f687300 	svcvs	0x00687300
     3dc:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
     3e0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     3e4:	2064656e 	rsbcs	r6, r4, lr, ror #10
     3e8:	00746e69 	rsbseq	r6, r4, r9, ror #28
     3ec:	31435342 	cmpcc	r3, r2, asr #6
     3f0:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     3f4:	50470065 	subpl	r0, r7, r5, rrx
     3f8:	525f4f49 	subspl	r4, pc, #292	; 0x124
     3fc:	6d006765 	stcvs	7, cr6, [r0, #-404]	; 0xfffffe6c
     400:	4f495047 	svcmi	0x00495047
     404:	43504700 	cmpmi	r0, #0, 14
     408:	0030524c 	eorseq	r5, r0, ip, asr #4
     40c:	4c435047 	mcrrmi	0, 4, r5, r3, cr7
     410:	5f003152 	svcpl	0x00003152
     414:	33314e5a 	teqcc	r1, #1440	; 0x5a0
     418:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     41c:	61485f4f 	cmpvs	r8, pc, asr #30
     420:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     424:	53303172 	teqpl	r0, #-2147483620	; 0x8000001c
     428:	4f5f7465 	svcmi	0x005f7465
     42c:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
     430:	626a4574 	rsbvs	r4, sl, #116, 10	; 0x1d000000
     434:	69727700 	ldmdbvs	r2!, {r8, r9, sl, ip, sp, lr}^
     438:	47006574 	smlsdxmi	r0, r4, r5, r6
     43c:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     440:	45534650 	ldrbmi	r4, [r3, #-1616]	; 0xfffff9b0
     444:	6f4c5f4c 	svcvs	0x004c5f4c
     448:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     44c:	47006e6f 	strmi	r6, [r0, -pc, ror #28]
     450:	5f4f4950 	svcpl	0x004f4950
     454:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     458:	43534200 	cmpmi	r3, #0, 4
     45c:	61425f32 	cmpvs	r2, r2, lsr pc
     460:	47006573 	smlsdxmi	r0, r3, r5, r6
     464:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     468:	56454c50 			; <UNDEFINED> instruction: 0x56454c50
     46c:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     470:	6f697461 	svcvs	0x00697461
     474:	5047006e 	subpl	r0, r7, lr, rrx
     478:	304e4552 	subcc	r4, lr, r2, asr r5
     47c:	52504700 	subspl	r4, r0, #0, 14
     480:	00314e45 	eorseq	r4, r1, r5, asr #28
     484:	61666544 	cmnvs	r6, r4, asr #10
     488:	5f746c75 	svcpl	0x00746c75
     48c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     490:	61525f6b 	cmpvs	r2, fp, ror #30
     494:	5f006574 	svcpl	0x00006574
     498:	424f4c47 	submi	r4, pc, #18176	; 0x4700
     49c:	5f5f4c41 	svcpl	0x005f4c41
     4a0:	5f627573 	svcpl	0x00627573
     4a4:	47735f49 	ldrbmi	r5, [r3, -r9, asr #30]!
     4a8:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
     4ac:	4b4e5a5f 	blmi	1396e30 <_bss_end+0x1385db0>
     4b0:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     4b4:	5f4f4950 	svcpl	0x004f4950
     4b8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     4bc:	3172656c 	cmncc	r2, ip, ror #10
     4c0:	74654738 	strbtvc	r4, [r5], #-1848	; 0xfffff8c8
     4c4:	4350475f 	cmpmi	r0, #24903680	; 0x17c0000
     4c8:	4c5f524c 	lfmmi	f5, 2, [pc], {76}	; 0x4c
     4cc:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     4d0:	456e6f69 	strbmi	r6, [lr, #-3945]!	; 0xfffff097
     4d4:	536a526a 	cmnpl	sl, #-1610612730	; 0xa0000006
     4d8:	47005f30 	smladxmi	r0, r0, pc, r5	; <UNPREDICTABLE>
     4dc:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     4e0:	524c4350 	subpl	r4, ip, #80, 6	; 0x40000001
     4e4:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     4e8:	6f697461 	svcvs	0x00697461
     4ec:	506d006e 	rsbpl	r0, sp, lr, rrx
     4f0:	525f6e69 	subspl	r6, pc, #1680	; 0x690
     4f4:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
     4f8:	69746176 	ldmdbvs	r4!, {r1, r2, r4, r5, r6, r8, sp, lr}^
     4fc:	5f736e6f 	svcpl	0x00736e6f
     500:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
     504:	50470065 	subpl	r0, r7, r5, rrx
     508:	4e455241 	cdpmi	2, 4, cr5, cr5, cr1, {2}
     50c:	50470030 	subpl	r0, r7, r0, lsr r0
     510:	4e455241 	cdpmi	2, 4, cr5, cr5, cr1, {2}
     514:	65530031 	ldrbvs	r0, [r3, #-49]	; 0xffffffcf
     518:	754f5f74 	strbvc	r5, [pc, #-3956]	; fffff5ac <_bss_end+0xfffee52c>
     51c:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
     520:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     524:	47433331 	smlaldxmi	r3, r3, r1, r3	; <UNPREDICTABLE>
     528:	5f4f4950 	svcpl	0x004f4950
     52c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     530:	3172656c 	cmncc	r2, ip, ror #10
     534:	74655337 	strbtvc	r5, [r5], #-823	; 0xfffffcc9
     538:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     53c:	75465f4f 	strbvc	r5, [r6, #-3919]	; 0xfffff0b1
     540:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     544:	6a456e6f 	bvs	115bf08 <_bss_end+0x114ae88>
     548:	474e3431 	smlaldxmi	r3, lr, r1, r4
     54c:	5f4f4950 	svcpl	0x004f4950
     550:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
     554:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     558:	48504700 	ldmdami	r0, {r8, r9, sl, lr}^
     55c:	00304e45 	eorseq	r4, r0, r5, asr #28
     560:	45485047 	strbmi	r5, [r8, #-71]	; 0xffffffb9
     564:	7500314e 	strvc	r3, [r0, #-334]	; 0xfffffeb2
     568:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     56c:	2064656e 	rsbcs	r6, r4, lr, ror #10
     570:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     574:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
     578:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     57c:	75465f4f 	strbvc	r5, [r6, #-3919]	; 0xfffff0b1
     580:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     584:	47006e6f 	strmi	r6, [r0, -pc, ror #28]
     588:	5f4f4950 	svcpl	0x004f4950
     58c:	5f6e6950 	svcpl	0x006e6950
     590:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     594:	68730074 	ldmdavs	r3!, {r2, r4, r5, r6}^
     598:	2074726f 	rsbscs	r7, r4, pc, ror #4
     59c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     5a0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     5a4:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
     5a8:	6e616200 	cdpvs	2, 6, cr6, cr1, cr0, {0}
     5ac:	64695f6b 	strbtvs	r5, [r9], #-3947	; 0xfffff095
     5b0:	5a5f0078 	bpl	17c0798 <_bss_end+0x17af718>
     5b4:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
     5b8:	4f495047 	svcmi	0x00495047
     5bc:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     5c0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     5c4:	6a453443 	bvs	114d6d8 <_bss_end+0x113c658>
     5c8:	72655000 	rsbvc	r5, r5, #0
     5cc:	65687069 	strbvs	r7, [r8, #-105]!	; 0xffffff97
     5d0:	5f6c6172 	svcpl	0x006c6172
     5d4:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
     5d8:	74696200 	strbtvc	r6, [r9], #-512	; 0xfffffe00
     5dc:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     5e0:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     5e4:	5f323374 	svcpl	0x00323374
     5e8:	65520074 	ldrbvs	r0, [r2, #-116]	; 0xffffff8c
     5ec:	76726573 			; <UNDEFINED> instruction: 0x76726573
     5f0:	69505f65 	ldmdbvs	r0, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     5f4:	7566006e 	strbvc	r0, [r6, #-110]!	; 0xffffff92
     5f8:	5f00636e 	svcpl	0x0000636e
     5fc:	314b4e5a 	cmpcc	fp, sl, asr lr
     600:	50474333 	subpl	r4, r7, r3, lsr r3
     604:	485f4f49 	ldmdami	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     608:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     60c:	38317265 	ldmdacc	r1!, {r0, r2, r5, r6, r9, ip, sp, lr}
     610:	5f746547 	svcpl	0x00746547
     614:	454c5047 	strbmi	r5, [ip, #-71]	; 0xffffffb9
     618:	6f4c5f56 	svcvs	0x004c5f56
     61c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     620:	6a456e6f 	bvs	115bfe4 <_bss_end+0x114af64>
     624:	30536a52 	subscc	r6, r3, r2, asr sl
     628:	6547005f 	strbvs	r0, [r7, #-95]	; 0xffffffa1
     62c:	50475f74 	subpl	r5, r7, r4, ror pc
     630:	5f544553 	svcpl	0x00544553
     634:	61636f4c 	cmnvs	r3, ip, asr #30
     638:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     63c:	45504700 	ldrbmi	r4, [r0, #-1792]	; 0xfffff900
     640:	00305344 	eorseq	r5, r0, r4, asr #6
     644:	44455047 	strbmi	r5, [r5], #-71	; 0xffffffb9
     648:	47003153 	smlsdmi	r0, r3, r1, r3
     64c:	4e454650 	mcrmi	6, 2, r4, cr5, cr0, {2}
     650:	50470030 	subpl	r0, r7, r0, lsr r0
     654:	314e4546 	cmpcc	lr, r6, asr #10
     658:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     65c:	2f632f74 	svccs	0x00632f74
     660:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     664:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     668:	442f6162 	strtmi	r6, [pc], #-354	; 670 <CPSR_IRQ_INHIBIT+0x5f0>
     66c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     670:	73746e65 	cmnvc	r4, #1616	; 0x650
     674:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     678:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     67c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     680:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     684:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     688:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     68c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     690:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     694:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     698:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     69c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     6a0:	6970672f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}^
     6a4:	70632e6f 	rsbvc	r2, r3, pc, ror #28
     6a8:	5a5f0070 	bpl	17c0870 <_bss_end+0x17af7f0>
     6ac:	33314b4e 	teqcc	r1, #79872	; 0x13800
     6b0:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
     6b4:	61485f4f 	cmpvs	r8, pc, asr #30
     6b8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     6bc:	47383172 			; <UNDEFINED> instruction: 0x47383172
     6c0:	475f7465 	ldrbmi	r7, [pc, -r5, ror #8]
     6c4:	54455350 	strbpl	r5, [r5], #-848	; 0xfffffcb0
     6c8:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     6cc:	6f697461 	svcvs	0x00697461
     6d0:	526a456e 	rsbpl	r4, sl, #461373440	; 0x1b800000
     6d4:	5f30536a 	svcpl	0x0030536a
     6d8:	41504700 	cmpmi	r0, r0, lsl #14
     6dc:	304e4546 	subcc	r4, lr, r6, asr #10
     6e0:	41504700 	cmpmi	r0, r0, lsl #14
     6e4:	314e4546 	cmpcc	lr, r6, asr #10
     6e8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     6ec:	4333314b 	teqmi	r3, #-1073741806	; 0xc0000012
     6f0:	4f495047 	svcmi	0x00495047
     6f4:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     6f8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     6fc:	65473731 	strbvs	r3, [r7, #-1841]	; 0xfffff8cf
     700:	50475f74 	subpl	r5, r7, r4, ror pc
     704:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
     708:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     70c:	456e6f69 	strbmi	r6, [lr, #-3945]!	; 0xfffff097
     710:	6572006a 	ldrbvs	r0, [r2, #-106]!	; 0xffffff96
     714:	43006461 	movwmi	r6, #1121	; 0x461
     718:	4f495047 	svcmi	0x00495047
     71c:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     720:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     724:	736e5500 	cmnvc	lr, #0, 10
     728:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
     72c:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
     730:	705f5f00 	subsvc	r5, pc, r0, lsl #30
     734:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     738:	00797469 	rsbseq	r7, r9, r9, ror #8
     73c:	4f5f7349 	svcmi	0x005f7349
     740:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
     744:	61440064 	cmpvs	r4, r4, rrx
     748:	445f6174 	ldrbmi	r6, [pc], #-372	; 750 <CPSR_IRQ_INHIBIT+0x6d0>
     74c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     750:	32494300 	subcc	r4, r9, #0, 6
     754:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     758:	61736e61 	cmnvs	r3, r1, ror #28
     75c:	6f697463 	svcvs	0x00697463
     760:	4f6d006e 	svcmi	0x006d006e
     764:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
     768:	5a5f0064 	bpl	17c0900 <_bss_end+0x17af880>
     76c:	4943344e 	stmdbmi	r3, {r1, r2, r3, r6, sl, ip, sp}^
     770:	32434332 	subcc	r4, r3, #-939524096	; 0xc8000000
     774:	6a6a6d45 	bvs	1a9bc90 <_bss_end+0x1a8ac10>
     778:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     77c:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     780:	65523343 	ldrbvs	r3, [r2, #-835]	; 0xfffffcbd
     784:	334e4567 	movtcc	r4, #58727	; 0xe567
     788:	376c6168 	strbcc	r6, [ip, -r8, ror #2]!
     78c:	5f435342 	svcpl	0x00435342
     790:	45676552 	strbmi	r6, [r7, #-1362]!	; 0xfffffaae
     794:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     798:	5f363174 	svcpl	0x00363174
     79c:	53420074 	movtpl	r0, #8308	; 0x2074
     7a0:	65525f43 	ldrbvs	r5, [r2, #-3907]	; 0xfffff0bd
     7a4:	5a5f0067 	bpl	17c0948 <_bss_end+0x17af8c8>
     7a8:	4943344e 	stmdbmi	r3, {r1, r2, r3, r6, sl, ip, sp}^
     7ac:	30314332 	eorscc	r4, r1, r2, lsr r3
     7b0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     7b4:	6165525f 	cmnvs	r5, pc, asr r2
     7b8:	76457964 	strbvc	r7, [r5], -r4, ror #18
     7bc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     7c0:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     7c4:	45344343 	ldrmi	r4, [r4, #-835]!	; 0xfffffcbd
     7c8:	006a6a6d 	rsbeq	r6, sl, sp, ror #20
     7cc:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
     7d0:	00657669 	rsbeq	r7, r5, r9, ror #12
     7d4:	5f6e496d 	svcpl	0x006e496d
     7d8:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
     7dc:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     7e0:	4b4c4300 	blmi	13113e8 <_bss_end+0x1300368>
     7e4:	5a5f0054 	bpl	17c093c <_bss_end+0x17af8bc>
     7e8:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
     7ec:	5f433249 	svcpl	0x00433249
     7f0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     7f4:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     7f8:	436e6f69 	cmnmi	lr, #420	; 0x1a4
     7fc:	00764534 	rsbseq	r4, r6, r4, lsr r5
     800:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     804:	69445f6b 	stmdbvs	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     808:	5a5f0076 	bpl	17c09e8 <_bss_end+0x17af968>
     80c:	4943344e 	stmdbmi	r3, {r1, r2, r3, r6, sl, ip, sp}^
     810:	35314332 	ldrcc	r4, [r1, #-818]!	; 0xfffffcce
     814:	5f646e45 	svcpl	0x00646e45
     818:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     81c:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     820:	456e6f69 	strbmi	r6, [lr, #-3945]!	; 0xfffff097
     824:	43363152 	teqmi	r6, #-2147483628	; 0x80000014
     828:	5f433249 	svcpl	0x00433249
     82c:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     830:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     834:	626e6f69 	rsbvs	r6, lr, #420	; 0x1a4
     838:	646e4500 	strbtvs	r4, [lr], #-1280	; 0xfffffb00
     83c:	6172545f 	cmnvs	r2, pc, asr r4
     840:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     844:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     848:	61727400 	cmnvs	r2, r0, lsl #8
     84c:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     850:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     854:	6e697000 	cdpvs	0, 6, cr7, cr9, cr0, {0}
     858:	6c63735f 	stclvs	3, cr7, [r3], #-380	; 0xfffffe84
     85c:	75426d00 	strbvc	r6, [r2, #-3328]	; 0xfffff300
     860:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     864:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
     868:	49465f61 	stmdbmi	r6, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     86c:	5f004f46 	svcpl	0x00004f46
     870:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
     874:	43324943 	teqmi	r2, #1097728	; 0x10c000
     878:	6172545f 	cmnvs	r2, pc, asr r4
     87c:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     880:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     884:	65533131 	ldrbvs	r3, [r3, #-305]	; 0xfffffecf
     888:	64415f74 	strbvs	r5, [r1], #-3956	; 0xfffff08c
     88c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
     890:	00744573 	rsbseq	r4, r4, r3, ror r5
     894:	5f6e6970 	svcpl	0x006e6970
     898:	00616473 	rsbeq	r6, r1, r3, ror r4
     89c:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     8a0:	43324943 	teqmi	r2, #1097728	; 0x10c000
     8a4:	6f6c4335 	svcvs	0x006c4335
     8a8:	76456573 			; <UNDEFINED> instruction: 0x76456573
     8ac:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     8b0:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     8b4:	65533443 	ldrbvs	r3, [r3, #-1091]	; 0xfffffbbd
     8b8:	7445646e 	strbvc	r6, [r5], #-1134	; 0xfffffb92
     8bc:	6a634b50 	bvs	18d3604 <_bss_end+0x18c2584>
     8c0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     8c4:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     8c8:	42373143 	eorsmi	r3, r7, #-1073741808	; 0xc0000010
     8cc:	6e696765 	cdpvs	7, 6, cr6, cr9, cr5, {3}
     8d0:	6172545f 	cmnvs	r2, pc, asr r4
     8d4:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     8d8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     8dc:	63007445 	movwvs	r7, #1093	; 0x445
     8e0:	696d6d6f 	stmdbvs	sp!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
     8e4:	536d0074 	cmnpl	sp, #116	; 0x74
     8e8:	505f4c43 	subspl	r4, pc, r3, asr #24
     8ec:	6d006e69 	stcvs	14, cr6, [r0, #-420]	; 0xfffffe5c
     8f0:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     8f4:	00737365 	rsbseq	r7, r3, r5, ror #6
     8f8:	4b4e5a5f 	blmi	139727c <_bss_end+0x13861fc>
     8fc:	32494334 	subcc	r4, r9, #52, 6	; 0xd0000000
     900:	73493943 	movtvc	r3, #39235	; 0x9943
     904:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
     908:	4564656e 	strbmi	r6, [r4, #-1390]!	; 0xfffffa92
     90c:	65420076 	strbvs	r0, [r2, #-118]	; 0xffffff8a
     910:	5f6e6967 	svcpl	0x006e6967
     914:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
     918:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
     91c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     920:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     924:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     928:	49433631 	stmdbmi	r3, {r0, r4, r5, r9, sl, ip, sp}^
     92c:	545f4332 	ldrbpl	r4, [pc], #-818	; 934 <CPSR_IRQ_INHIBIT+0x8b4>
     930:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     934:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     938:	32436e6f 	subcc	r6, r3, #1776	; 0x6f0
     93c:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
     940:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     944:	44006874 	strmi	r6, [r0], #-2164	; 0xfffff78c
     948:	5f617461 	svcpl	0x00617461
     94c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     950:	53006874 	movwpl	r6, #2164	; 0x874
     954:	415f7465 	cmpmi	pc, r5, ror #8
     958:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
     95c:	57007373 	smlsdxpl	r0, r3, r3, r7
     960:	5f746961 	svcpl	0x00746961
     964:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     968:	475f0079 			; <UNDEFINED> instruction: 0x475f0079
     96c:	41424f4c 	cmpmi	r2, ip, asr #30
     970:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
     974:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
     978:	3249735f 	subcc	r7, r9, #2080374785	; 0x7c000001
     97c:	75003143 	strvc	r3, [r0, #-323]	; 0xfffffebd
     980:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     984:	4900745f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     988:	545f4332 	ldrbpl	r4, [pc], #-818	; 990 <CPSR_IRQ_INHIBIT+0x910>
     98c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     990:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     994:	4d5f6e6f 	ldclmi	14, cr6, [pc, #-444]	; 7e0 <CPSR_IRQ_INHIBIT+0x760>
     998:	535f7861 	cmppl	pc, #6356992	; 0x610000
     99c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     9a0:	4353426d 	cmpmi	r3, #-805306362	; 0xd0000006
     9a4:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     9a8:	6c430065 	mcrrvs	0, 6, r0, r3, cr5
     9ac:	0065736f 	rsbeq	r7, r5, pc, ror #6
     9b0:	4144536d 	cmpmi	r4, sp, ror #6
     9b4:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
     9b8:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
     9bc:	2f632f74 	svccs	0x00632f74
     9c0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     9c4:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
     9c8:	442f6162 	strtmi	r6, [pc], #-354	; 9d0 <CPSR_IRQ_INHIBIT+0x950>
     9cc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     9d0:	73746e65 	cmnvc	r4, #1616	; 0x650
     9d4:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
     9d8:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
     9dc:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     9e0:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
     9e4:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
     9e8:	32492d39 	subcc	r2, r9, #3648	; 0xe40
     9ec:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
     9f0:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     9f4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     9f8:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     9fc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     a00:	6332692f 	teqvs	r2, #770048	; 0xbc000
     a04:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
     a08:	61745300 	cmnvs	r4, r0, lsl #6
     a0c:	00737574 	rsbseq	r7, r3, r4, ror r5
     a10:	6172546d 	cmnvs	r2, sp, ror #8
     a14:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
     a18:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     a1c:	65704f00 	ldrbvs	r4, [r0, #-3840]!	; 0xfffff100
     a20:	5a5f006e 	bpl	17c0be0 <_bss_end+0x17afb60>
     a24:	4943344e 	stmdbmi	r3, {r1, r2, r3, r6, sl, ip, sp}^
     a28:	52374332 	eorspl	r4, r7, #-939524096	; 0xc8000000
     a2c:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     a30:	74456576 	strbvc	r6, [r5], #-1398	; 0xfffffa8a
     a34:	006a6350 	rsbeq	r6, sl, r0, asr r3
     a38:	344e5a5f 	strbcc	r5, [lr], #-2655	; 0xfffff5a1
     a3c:	43324943 	teqmi	r2, #1097728	; 0x10c000
     a40:	65704f34 	ldrbvs	r4, [r0, #-3892]!	; 0xfffff0cc
     a44:	0076456e 	rsbseq	r4, r6, lr, ror #10
     a48:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
     a4c:	5f6d0065 	svcpl	0x006d0065
     a50:	626d756e 	rsbvs	r7, sp, #461373440	; 0x1b800000
     a54:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     a58:	00657361 	rsbeq	r7, r5, r1, ror #6
     a5c:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     a60:	754e5f74 	strbvc	r5, [lr, #-3956]	; 0xfffff08c
     a64:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     a68:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     a6c:	5a5f0065 	bpl	17c0c08 <_bss_end+0x17afb88>
     a70:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     a74:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     a78:	3243726f 	subcc	r7, r3, #-268435450	; 0xf0000006
     a7c:	6a6a6a45 	bvs	1a9b398 <_bss_end+0x1a8a318>
     a80:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     a84:	6f4d4338 	svcvs	0x004d4338
     a88:	6f74696e 	svcvs	0x0074696e
     a8c:	41333172 	teqmi	r3, r2, ror r1
     a90:	73756a64 	cmnvc	r5, #100, 20	; 0x64000
     a94:	75435f74 	strbvc	r5, [r3, #-3956]	; 0xfffff08c
     a98:	726f7372 	rsbvc	r7, pc, #-939524095	; 0xc8000001
     a9c:	69007645 	stmdbvs	r0, {r0, r2, r6, r9, sl, ip, sp, lr}
     aa0:	00616f74 	rsbeq	r6, r1, r4, ror pc
     aa4:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     aa8:	75435f74 	strbvc	r5, [r3, #-3956]	; 0xfffff08c
     aac:	726f7372 	rsbvc	r7, pc, #-939524095	; 0xc8000001
     ab0:	6a644100 	bvs	1910eb8 <_bss_end+0x18ffe38>
     ab4:	5f747375 	svcpl	0x00747375
     ab8:	73727543 	cmnvc	r2, #281018368	; 0x10c00000
     abc:	2f00726f 	svccs	0x0000726f
     ac0:	2f746e6d 	svccs	0x00746e6d
     ac4:	73552f63 	cmpvc	r5, #396	; 0x18c
     ac8:	2f737265 	svccs	0x00737265
     acc:	6162754b 	cmnvs	r2, fp, asr #10
     ad0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     ad4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     ad8:	5a2f7374 	bpl	bdd8b0 <_bss_end+0xbcc830>
     adc:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 950 <CPSR_IRQ_INHIBIT+0x8d0>
     ae0:	2f657461 	svccs	0x00657461
     ae4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     ae8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     aec:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     af0:	2f433249 	svccs	0x00433249
     af4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     af8:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
     afc:	642f6372 	strtvs	r6, [pc], #-882	; b04 <CPSR_IRQ_INHIBIT+0xa84>
     b00:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     b04:	6d2f7372 	stcvs	3, cr7, [pc, #-456]!	; 944 <CPSR_IRQ_INHIBIT+0x8c4>
     b08:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     b0c:	632e726f 			; <UNDEFINED> instruction: 0x632e726f
     b10:	4e007070 	mcrmi	0, 0, r7, cr0, cr0, {3}
     b14:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
     b18:	425f7265 	subsmi	r7, pc, #1342177286	; 0x50000006
     b1c:	00657361 	rsbeq	r7, r5, r1, ror #6
     b20:	736f5054 	cmnvc	pc, #84	; 0x54
     b24:	6f697469 	svcvs	0x00697469
     b28:	5a5f006e 	bpl	17c0ce8 <_bss_end+0x17afc68>
     b2c:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     b30:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     b34:	3731726f 	ldrcc	r7, [r1, -pc, ror #4]!
     b38:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     b3c:	754e5f74 	strbvc	r5, [lr, #-3956]	; 0xfffff08c
     b40:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     b44:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
     b48:	00764565 	rsbseq	r4, r6, r5, ror #10
     b4c:	6f6d5f6d 	svcvs	0x006d5f6d
     b50:	6f74696e 	svcvs	0x0074696e
     b54:	475f0072 			; <UNDEFINED> instruction: 0x475f0072
     b58:	41424f4c 	cmpmi	r2, ip, asr #30
     b5c:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
     b60:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
     b64:	6f4d735f 	svcvs	0x004d735f
     b68:	6f74696e 	svcvs	0x0074696e
     b6c:	6f6d0072 	svcvs	0x006d0072
     b70:	6f74696e 	svcvs	0x0074696e
     b74:	61625f72 	smcvs	9714	; 0x25f2
     b78:	615f6573 	cmpvs	pc, r3, ror r5	; <UNPREDICTABLE>
     b7c:	00726464 	rsbseq	r6, r2, r4, ror #8
     b80:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     b84:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     b88:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     b8c:	656c4335 	strbvs	r4, [ip, #-821]!	; 0xfffffccb
     b90:	76457261 	strbvc	r7, [r5], -r1, ror #4
     b94:	6f4d4300 	svcvs	0x004d4300
     b98:	6f74696e 	svcvs	0x0074696e
     b9c:	706f0072 	rsbvc	r0, pc, r2, ror r0	; <UNPREDICTABLE>
     ba0:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     ba4:	3c3c726f 	lfmcc	f7, 4, [ip], #-444	; 0xfffffe44
     ba8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     bac:	6f4d4338 	svcvs	0x004d4338
     bb0:	6f74696e 	svcvs	0x0074696e
     bb4:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     bb8:	00634b50 	rsbeq	r4, r3, r0, asr fp
     bbc:	384e5a5f 	stmdacc	lr, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}^
     bc0:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
     bc4:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     bc8:	6f746934 	svcvs	0x00746934
     bcc:	506a4561 	rsbpl	r4, sl, r1, ror #10
     bd0:	6d006a63 	vstrvs	s12, [r0, #-396]	; 0xfffffe74
     bd4:	6965685f 	stmdbvs	r5!, {r0, r1, r2, r3, r4, r6, fp, sp, lr}^
     bd8:	00746867 	rsbseq	r6, r4, r7, ror #16
     bdc:	75635f6d 	strbvc	r5, [r3, #-3949]!	; 0xfffff093
     be0:	726f7372 	rsbvc	r7, pc, #-939524095	; 0xc8000001
     be4:	61684300 	cmnvs	r8, r0, lsl #6
     be8:	6e6f4372 	mcrvs	3, 3, r4, cr15, cr2, {3}
     bec:	72724176 	rsbsvc	r4, r2, #-2147483619	; 0x8000001d
     bf0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     bf4:	6f4d4338 	svcvs	0x004d4338
     bf8:	6f74696e 	svcvs	0x0074696e
     bfc:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     c00:	5a5f0062 	bpl	17c0d90 <_bss_end+0x17afd10>
     c04:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c08:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c0c:	736c726f 	cmnvc	ip, #-268435450	; 0xf0000006
     c10:	6d006345 	stcvs	3, cr6, [r0, #-276]	; 0xfffffeec
     c14:	6469775f 	strbtvs	r7, [r9], #-1887	; 0xfffff8a1
     c18:	5f006874 	svcpl	0x00006874
     c1c:	43384e5a 	teqmi	r8, #1440	; 0x5a0
     c20:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     c24:	36726f74 	uhsub16cc	r6, r2, r4
     c28:	6f726353 	svcvs	0x00726353
     c2c:	76456c6c 	strbvc	r6, [r5], -ip, ror #24
     c30:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     c34:	6f4d4338 	svcvs	0x004d4338
     c38:	6f74696e 	svcvs	0x0074696e
     c3c:	45736c72 	ldrbmi	r6, [r3, #-3186]!	; 0xfffff38e
     c40:	5a5f006a 	bpl	17c0df0 <_bss_end+0x17afd70>
     c44:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c48:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c4c:	3231726f 	eorscc	r7, r1, #-268435450	; 0xf0000006
     c50:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     c54:	75435f74 	strbvc	r5, [r3, #-3956]	; 0xfffff08c
     c58:	726f7372 	rsbvc	r7, pc, #-939524095	; 0xc8000001
     c5c:	5f007645 	svcpl	0x00007645
     c60:	43384e5a 	teqmi	r8, #1440	; 0x5a0
     c64:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     c68:	43726f74 	cmnmi	r2, #116, 30	; 0x1d0
     c6c:	6a6a4534 	bvs	1a92144 <_bss_end+0x1a810c4>
     c70:	4544006a 	strbmi	r0, [r4, #-106]	; 0xffffff96
     c74:	4c554146 	ldfmie	f4, [r5], {70}	; 0x46
     c78:	554e5f54 	strbpl	r5, [lr, #-3924]	; 0xfffff0ac
     c7c:	5245424d 	subpl	r4, r5, #-805306364	; 0xd0000004
     c80:	5341425f 	movtpl	r4, #4703	; 0x125f
     c84:	5a5f0045 	bpl	17c0da0 <_bss_end+0x17afd20>
     c88:	4d43384e 	stclmi	8, cr3, [r3, #-312]	; 0xfffffec8
     c8c:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     c90:	736c726f 	cmnvc	ip, #-268435450	; 0xf0000006
     c94:	5f534e45 	svcpl	0x00534e45
     c98:	4e4e3231 	mcrmi	2, 2, r3, cr14, cr1, {1}
     c9c:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     ca0:	61425f72 	hvcvs	9714	; 0x25f2
     ca4:	00456573 	subeq	r6, r5, r3, ror r5
     ca8:	7074756f 	rsbsvc	r7, r4, pc, ror #10
     cac:	69007475 	stmdbvs	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
     cb0:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
     cb4:	625f7300 	subsvs	r7, pc, #0, 6
     cb8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     cbc:	55420072 	strbpl	r0, [r2, #-114]	; 0xffffff8e
     cc0:	52454646 	subpl	r4, r5, #73400320	; 0x4600000
     cc4:	5a49535f 	bpl	1255a48 <_bss_end+0x12449c8>
     cc8:	486d0045 	stmdami	sp!, {r0, r2, r6}^
     ccc:	68676965 	stmdavs	r7!, {r0, r2, r5, r6, r8, fp, sp, lr}^
     cd0:	61440074 	hvcvs	16388	; 0x4004
     cd4:	535f6174 	cmppl	pc, #116, 2
     cd8:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     cdc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     ce0:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
     ce4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     ce8:	535f7961 	cmppl	pc, #1589248	; 0x184000
     cec:	33314453 	teqcc	r1, #1392508928	; 0x53000000
     cf0:	46343630 			; <UNDEFINED> instruction: 0x46343630
     cf4:	4570696c 	ldrbmi	r6, [r0, #-2412]!	; 0xfffff694
     cf8:	6c630076 	stclvs	0, cr0, [r3], #-472	; 0xfffffe28
     cfc:	43726165 	cmnmi	r2, #1073741849	; 0x40000019
     d00:	726f6c6f 	rsbvc	r6, pc, #28416	; 0x6f00
     d04:	65727000 	ldrbvs	r7, [r2, #-0]!
     d08:	5a5f0076 	bpl	17c0ee8 <_bss_end+0x17afe68>
     d0c:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
     d10:	6e72654b 	cdpvs	5, 7, cr6, cr2, cr11, {2}
     d14:	485f6c65 	ldmdami	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     d18:	5f706165 	svcpl	0x00706165
     d1c:	616e614d 	cmnvs	lr, sp, asr #2
     d20:	31726567 	cmncc	r2, r7, ror #10
     d24:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
     d28:	4e5f636f 	cdpmi	3, 5, cr6, cr15, cr15, {3}
     d2c:	5f747865 	svcpl	0x00747865
     d30:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
     d34:	2f007645 	svccs	0x00007645
     d38:	2f746e6d 	svccs	0x00746e6d
     d3c:	73552f63 	cmpvc	r5, #396	; 0x18c
     d40:	2f737265 	svccs	0x00737265
     d44:	6162754b 	cmnvs	r2, fp, asr #10
     d48:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     d4c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     d50:	5a2f7374 	bpl	bddb28 <_bss_end+0xbccaa8>
     d54:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; bc8 <CPSR_IRQ_INHIBIT+0xb48>
     d58:	2f657461 	svccs	0x00657461
     d5c:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
     d60:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
     d64:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
     d68:	2f433249 	svccs	0x00433249
     d6c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     d70:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
     d74:	642f6372 	strtvs	r6, [pc], #-882	; d7c <CPSR_IRQ_INHIBIT+0xcfc>
     d78:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     d7c:	6f2f7372 	svcvs	0x002f7372
     d80:	5f64656c 	svcpl	0x0064656c
     d84:	31647373 	smccc	18227	; 0x4733
     d88:	2e363033 	mrccs	0, 1, r3, cr6, cr3, {1}
     d8c:	00707063 	rsbseq	r7, r0, r3, rrx
     d90:	5f746553 	svcpl	0x00746553
     d94:	65776f4c 	ldrbvs	r6, [r7, #-3916]!	; 0xfffff0b4
     d98:	6f435f72 	svcvs	0x00435f72
     d9c:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
     da0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     da4:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
     da8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     dac:	535f7961 	cmppl	pc, #1589248	; 0x184000
     db0:	33314453 	teqcc	r1, #1392508928	; 0x53000000
     db4:	34323630 	ldrtcc	r3, [r2], #-1584	; 0xfffff9d0
     db8:	636f7250 	cmnvs	pc, #80, 4
     dbc:	5f737365 	svcpl	0x00737365
     dc0:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0xfffff7bb
     dc4:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
     dc8:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; c54 <CPSR_IRQ_INHIBIT+0xbd4>
     dcc:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
     dd0:	634b5045 	movtvs	r5, #45125	; 0xb045
     dd4:	4454006a 	ldrbmi	r0, [r4], #-106	; 0xffffff96
     dd8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     ddc:	435f7961 	cmpmi	pc, #1589248	; 0x184000
     de0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     de4:	6361505f 	cmnvs	r1, #95	; 0x5f
     de8:	0074656b 	rsbseq	r6, r4, fp, ror #10
     dec:	31445353 	cmpcc	r4, r3, asr r3
     df0:	5f363033 	svcpl	0x00363033
     df4:	00646d43 	rsbeq	r6, r4, r3, asr #26
     df8:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     dfc:	654b4300 	strbvs	r4, [fp, #-768]	; 0xfffffd00
     e00:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     e04:	6165485f 	cmnvs	r5, pc, asr r8
     e08:	614d5f70 	hvcvs	54768	; 0xd5f0
     e0c:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     e10:	44540072 	ldrbmi	r0, [r4], #-114	; 0xffffff8e
     e14:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     e18:	505f7961 	subspl	r7, pc, r1, ror #18
     e1c:	656b6361 	strbvs	r6, [fp, #-865]!	; 0xfffffc9f
     e20:	65485f74 	strbvs	r5, [r8, #-3956]	; 0xfffff08c
     e24:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
     e28:	726f4800 	rsbvc	r4, pc, #0, 16
     e2c:	6e6f7a69 	vnmulvs.f32	s15, s30, s19
     e30:	5f6c6174 	svcpl	0x006c6174
     e34:	6f726353 	svcvs	0x00726353
     e38:	565f6c6c 	ldrbpl	r6, [pc], -ip, ror #24
     e3c:	525f7472 	subspl	r7, pc, #1912602624	; 0x72000000
     e40:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     e44:	7a697300 	bvc	1a5da4c <_bss_end+0x1a4c9cc>
     e48:	576d0065 	strbpl	r0, [sp, -r5, rrx]!
     e4c:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     e50:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     e54:	5f79726f 	svcpl	0x0079726f
     e58:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     e5c:	646f4d5f 	strbtvs	r4, [pc], #-3423	; e64 <CPSR_IRQ_INHIBIT+0xde4>
     e60:	69660065 	stmdbvs	r6!, {r0, r2, r5, r6}^
     e64:	00747372 	rsbseq	r7, r4, r2, ror r3
     e68:	4b4e5a5f 	blmi	13977ec <_bss_end+0x138676c>
     e6c:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
     e70:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     e74:	535f7961 	cmppl	pc, #1589248	; 0x184000
     e78:	33314453 	teqcc	r1, #1392508928	; 0x53000000
     e7c:	49393630 	ldmdbmi	r9!, {r4, r5, r9, sl, ip, sp}
     e80:	704f5f73 	subvc	r5, pc, r3, ror pc	; <UNPREDICTABLE>
     e84:	64656e65 	strbtvs	r6, [r5], #-3685	; 0xfffff19b
     e88:	5f007645 	svcpl	0x00007645
     e8c:	506c645a 	rsbpl	r6, ip, sl, asr r4
     e90:	76006a76 			; <UNDEFINED> instruction: 0x76006a76
     e94:	70696c66 	rsbvc	r6, r9, r6, ror #24
     e98:	5f736900 	svcpl	0x00736900
     e9c:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
     ea0:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     ea4:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; d30 <CPSR_IRQ_INHIBIT+0xcb0>
     ea8:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
     eac:	65440073 	strbvs	r0, [r4, #-115]	; 0xffffff8d
     eb0:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
     eb4:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
     eb8:	7263535f 	rsbvc	r5, r3, #2080374785	; 0x7c000001
     ebc:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     ec0:	73694454 	cmnvc	r9, #84, 8	; 0x54000000
     ec4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     ec8:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
     ecc:	5f736c65 	svcpl	0x00736c65
     ed0:	525f6f54 	subspl	r6, pc, #84, 30	; 0x150
     ed4:	00746365 	rsbseq	r6, r4, r5, ror #6
     ed8:	6f6c6c41 	svcvs	0x006c6c41
     edc:	65530063 	ldrbvs	r0, [r3, #-99]	; 0xffffff9d
     ee0:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     ee4:	616c7073 	smcvs	50947	; 0xc703
     ee8:	6c435f79 	mcrrvs	15, 7, r5, r3, cr9
     eec:	5f6b636f 	svcpl	0x006b636f
     ef0:	5f766944 	svcpl	0x00766944
     ef4:	69746152 	ldmdbvs	r4!, {r1, r4, r6, r8, sp, lr}^
     ef8:	6553006f 	ldrbvs	r0, [r3, #-111]	; 0xffffff91
     efc:	72505f74 	subsvc	r5, r0, #116, 30	; 0x1d0
     f00:	61686365 	cmnvs	r8, r5, ror #6
     f04:	5f656772 	svcpl	0x00656772
     f08:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     f0c:	5300646f 	movwpl	r6, #1135	; 0x46f
     f10:	565f7465 	ldrbpl	r7, [pc], -r5, ror #8
     f14:	5f4d4f43 	svcpl	0x004d4f43
     f18:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
     f1c:	5f007463 	svcpl	0x00007463
     f20:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
     f24:	73694443 	cmnvc	r9, #1124073472	; 0x43000000
     f28:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     f2c:	4453535f 	ldrbmi	r5, [r3], #-863	; 0xfffffca1
     f30:	36303331 			; <UNDEFINED> instruction: 0x36303331
     f34:	65704f34 	ldrbvs	r4, [r0, #-3892]!	; 0xfffff0cc
     f38:	6969456e 	stmdbvs	r9!, {r1, r2, r3, r5, r6, r8, sl, lr}^
     f3c:	696c4600 	stmdbvs	ip!, {r9, sl, lr}^
     f40:	72460070 	subvc	r0, r6, #112	; 0x70
     f44:	43006565 	movwmi	r6, #1381	; 0x565
     f48:	616d6d6f 	cmnvs	sp, pc, ror #26
     f4c:	535f646e 	cmppl	pc, #1845493760	; 0x6e000000
     f50:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     f54:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     f58:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
     f5c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     f60:	535f7961 	cmppl	pc, #1589248	; 0x184000
     f64:	33314453 	teqcc	r1, #1392508928	; 0x53000000
     f68:	32433630 	subcc	r3, r3, #48, 12	; 0x3000000
     f6c:	43345245 	teqmi	r4, #1342177284	; 0x50000004
     f70:	00433249 	subeq	r3, r3, r9, asr #4
     f74:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
     f78:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
     f7c:	3c203c3c 	stccc	12, cr3, [r0], #-240	; 0xffffff10
     f80:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     f84:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     f88:	61686320 	cmnvs	r8, r0, lsr #6
     f8c:	6c003e72 	stcvs	14, cr3, [r0], {114}	; 0x72
     f90:	6150776f 	cmpvs	r0, pc, ror #14
     f94:	6f007472 	svcvs	0x00007472
     f98:	61726570 	cmnvs	r2, r0, ror r5
     f9c:	20726f74 	rsbscs	r6, r2, r4, ror pc
     fa0:	656c6564 	strbvs	r6, [ip, #-1380]!	; 0xfffffa9c
     fa4:	44006574 	strmi	r6, [r0], #-1396	; 0xfffffa8c
     fa8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     fac:	4f5f7961 	svcmi	0x005f7961
     fb0:	6553006e 	ldrbvs	r0, [r3, #-110]	; 0xffffff92
     fb4:	6f435f74 	svcvs	0x00435f74
     fb8:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
     fbc:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     fc0:	65530072 	ldrbvs	r0, [r3, #-114]	; 0xffffff8e
     fc4:	69505f74 	ldmdbvs	r0, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     fc8:	006c6578 	rsbeq	r6, ip, r8, ror r5
     fcc:	314e5a5f 	cmpcc	lr, pc, asr sl
     fd0:	32494336 	subcc	r4, r9, #-671088640	; 0xd8000000
     fd4:	72545f43 	subsvc	r5, r4, #268	; 0x10c
     fd8:	61736e61 	cmnvs	r3, r1, ror #28
     fdc:	6f697463 	svcvs	0x00697463
     fe0:	49736c6e 	ldmdbmi	r3!, {r1, r2, r3, r5, r6, sl, fp, sp, lr}^
     fe4:	52454568 	subpl	r4, r5, #104, 10	; 0x1a000000
     fe8:	4b525f53 	blmi	1498d3c <_bss_end+0x1487cbc>
     fec:	5f005f54 	svcpl	0x00005f54
     ff0:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
     ff4:	43324943 	teqmi	r2, #1097728	; 0x10c000
     ff8:	6172545f 	cmnvs	r2, pc, asr r4
     ffc:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
    1000:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1004:	6949736c 	stmdbvs	r9, {r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1008:	53524545 	cmppl	r2, #289406976	; 0x11400000
    100c:	544b525f 	strbpl	r5, [fp], #-607	; 0xfffffda1
    1010:	6164005f 	qdsubvs	r0, pc, r4	; <UNPREDICTABLE>
    1014:	43006174 	movwmi	r6, #372	; 0x174
    1018:	70736944 	rsbsvc	r6, r3, r4, asr #18
    101c:	5f79616c 	svcpl	0x0079616c
    1020:	31445353 	cmpcc	r4, r3, asr r3
    1024:	00363033 	eorseq	r3, r6, r3, lsr r0
    1028:	70736944 	rsbsvc	r6, r3, r4, asr #18
    102c:	5f79616c 	svcpl	0x0079616c
    1030:	5f6c6c41 	svcpl	0x006c6c41
    1034:	6d006e4f 	stcvs	14, cr6, [r0, #-316]	; 0xfffffec4
    1038:	00433249 	subeq	r3, r3, r9, asr #4
    103c:	77617244 	strbvc	r7, [r1, -r4, asr #4]!
    1040:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    1044:	415f6c65 	cmpmi	pc, r5, ror #24
    1048:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    104c:	5f6f545f 	svcpl	0x006f545f
    1050:	74636552 	strbtvc	r6, [r3], #-1362	; 0xfffffaae
    1054:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1058:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
    105c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1060:	535f7961 	cmppl	pc, #1589248	; 0x184000
    1064:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1068:	43353630 	teqmi	r5, #48, 12	; 0x3000000
    106c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1070:	53006245 	movwpl	r6, #581	; 0x245
    1074:	565f7465 	ldrbpl	r7, [pc], -r5, ror #8
    1078:	535f7472 	cmppl	pc, #1912602624	; 0x72000000
    107c:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; ef8 <CPSR_IRQ_INHIBIT+0xe78>
    1080:	72415f6c 	subvc	r5, r1, #108, 30	; 0x1b0
    1084:	53006165 	movwpl	r6, #357	; 0x165
    1088:	505f7465 	subspl	r7, pc, r5, ror #8
    108c:	5f656761 	svcpl	0x00656761
    1090:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1094:	69445400 	stmdbvs	r4, {sl, ip, lr}^
    1098:	616c7073 	smcvs	50947	; 0xc703
    109c:	69505f79 	ldmdbvs	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    10a0:	5f6c6578 	svcpl	0x006c6578
    10a4:	63657053 	cmnvs	r5, #83	; 0x53
    10a8:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    10ac:	7070555f 	rsbsvc	r5, r0, pc, asr r5
    10b0:	435f7265 	cmpmi	pc, #1342177286	; 0x50000006
    10b4:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	; 0xfffffe44
    10b8:	7250006e 	subsvc	r0, r0, #110	; 0x6e
    10bc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    10c0:	78455f73 	stmdavc	r5, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    10c4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    10c8:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    10cc:	616d6d6f 	cmnvs	sp, pc, ror #26
    10d0:	5f00646e 	svcpl	0x0000646e
    10d4:	30324e5a 	eorscc	r4, r2, sl, asr lr
    10d8:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    10dc:	5f6c656e 	svcpl	0x006c656e
    10e0:	70616548 	rsbvc	r6, r1, r8, asr #10
    10e4:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    10e8:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    10ec:	65724634 	ldrbvs	r4, [r2, #-1588]!	; 0xfffff9cc
    10f0:	76504565 	ldrbvc	r4, [r0], -r5, ror #10
    10f4:	6d6f4300 	stclvs	3, cr4, [pc, #-0]	; 10fc <CPSR_IRQ_INHIBIT+0x107c>
    10f8:	6163535f 	cmnvs	r3, pc, asr r3
    10fc:	69445f6e 	stmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1100:	65445f72 	strbvs	r5, [r4, #-3954]	; 0xfffff08e
    1104:	706f0063 	rsbvc	r0, pc, r3, rrx
    1108:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    110c:	3c3c726f 	lfmcc	f7, 4, [ip], #-444	; 0xfffffe44
    1110:	6e693c20 	cdpvs	12, 6, cr3, cr9, cr0, {1}
    1114:	53003e74 	movwpl	r3, #3700	; 0xe74
    1118:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; f8c <CPSR_IRQ_INHIBIT+0xf0c>
    111c:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    1120:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    1124:	7461525f 	strbtvc	r5, [r1], #-607	; 0xfffffda1
    1128:	63006f69 	movwvs	r6, #3945	; 0xf69
    112c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1130:	74696857 	strbtvc	r6, [r9], #-2135	; 0xfffff7a9
    1134:	65530065 	ldrbvs	r0, [r3, #-101]	; 0xffffff9b
    1138:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xfffff08c
    113c:	5f747261 	svcpl	0x00747261
    1140:	656e694c 	strbvs	r6, [lr, #-2380]!	; 0xfffff6b4
    1144:	61724400 	cmnvs	r2, r0, lsl #8
    1148:	69505f77 	ldmdbvs	r0, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    114c:	5f6c6578 	svcpl	0x006c6578
    1150:	61727241 	cmnvs	r2, r1, asr #4
    1154:	616d0079 	smcvs	53257	; 0xd009
    1158:	78644978 	stmdavc	r4!, {r3, r4, r5, r6, r8, fp, lr}^
    115c:	73694400 	cmnvc	r9, #0, 8
    1160:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1164:	6c6c415f 	stfvse	f4, [ip], #-380	; 0xfffffe84
    1168:	5f6e4f5f 	svcpl	0x006e4f5f
    116c:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1170:	5400656d 	strpl	r6, [r0], #-1389	; 0xfffffa93
    1174:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1178:	5f79616c 	svcpl	0x0079616c
    117c:	77617244 	strbvc	r7, [r1, -r4, asr #4]!
    1180:	7869505f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, lr}^
    1184:	415f6c65 	cmpmi	pc, r5, ror #24
    1188:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    118c:	6361505f 	cmnvs	r1, #95	; 0x5f
    1190:	0074656b 	rsbseq	r6, r4, fp, ror #10
    1194:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    1198:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    119c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    11a0:	6165485f 	cmnvs	r5, pc, asr r8
    11a4:	614d5f70 	hvcvs	54768	; 0xd5f0
    11a8:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    11ac:	6c413572 	cfstr64vs	mvdx3, [r1], {114}	; 0x72
    11b0:	45636f6c 	strbmi	r6, [r3, #-3948]!	; 0xfffff094
    11b4:	6843006a 	stmdavs	r3, {r1, r3, r5, r6}^
    11b8:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    11bc:	6d75505f 	ldclvs	0, cr5, [r5, #-380]!	; 0xfffffe84
    11c0:	6f4e0070 	svcvs	0x004e0070
    11c4:	6c616d72 	stclvs	13, cr6, [r1], #-456	; 0xfffffe38
    11c8:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    11cc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    11d0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    11d4:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
    11d8:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    11dc:	535f7961 	cmppl	pc, #1589248	; 0x184000
    11e0:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    11e4:	34433630 	strbcc	r3, [r3], #-1584	; 0xfffff9d0
    11e8:	43345245 	teqmi	r4, #1342177284	; 0x50000004
    11ec:	00433249 	subeq	r3, r3, r9, asr #4
    11f0:	69726f48 	ldmdbvs	r2!, {r3, r6, r8, r9, sl, fp, sp, lr}^
    11f4:	746e6f7a 	strbtvc	r6, [lr], #-3962	; 0xfffff086
    11f8:	535f6c61 	cmppl	pc, #24832	; 0x6100
    11fc:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; 1078 <CPSR_IRQ_INHIBIT+0xff8>
    1200:	69525f6c 	ldmdbvs	r2, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1204:	00746867 	rsbseq	r6, r4, r7, ror #16
    1208:	4f4c475f 	svcmi	0x004c475f
    120c:	5f4c4142 	svcpl	0x004c4142
    1210:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    1214:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    1218:	70736944 	rsbsvc	r6, r3, r4, asr #18
    121c:	5f79616c 	svcpl	0x0079616c
    1220:	31445353 	cmpcc	r4, r3, asr r3
    1224:	00363033 	eorseq	r3, r6, r3, lsr r0
    1228:	5f746553 	svcpl	0x00746553
    122c:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1230:	5f79616c 	svcpl	0x0079616c
    1234:	7366664f 	cmnvc	r6, #82837504	; 0x4f00000
    1238:	53007465 	movwpl	r7, #1125	; 0x465
    123c:	5f646e65 	svcpl	0x00646e65
    1240:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    1244:	00646e61 	rsbeq	r6, r4, r1, ror #28
    1248:	314e5a5f 	cmpcc	lr, pc, asr sl
    124c:	69444336 	stmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    1250:	616c7073 	smcvs	50947	; 0xc703
    1254:	53535f79 	cmppl	r3, #484	; 0x1e4
    1258:	30333144 	eorscc	r3, r3, r4, asr #2
    125c:	65533936 	ldrbvs	r3, [r3, #-2358]	; 0xfffff6ca
    1260:	69505f74 	ldmdbvs	r0, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1264:	456c6578 	strbmi	r6, [ip, #-1400]!	; 0xfffffa88
    1268:	00626a6a 	rsbeq	r6, r2, sl, ror #20
    126c:	65766e49 	ldrbvs	r6, [r6, #-3657]!	; 0xfffff1b7
    1270:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
    1274:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    1278:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    127c:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
    1280:	36303331 			; <UNDEFINED> instruction: 0x36303331
    1284:	616c535f 	cmnvs	ip, pc, asr r3
    1288:	415f6576 	cmpmi	pc, r6, ror r5	; <UNPREDICTABLE>
    128c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1290:	6c007373 	stcvs	3, cr7, [r0], {115}	; 0x73
    1294:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1298:	6f430068 	svcvs	0x00430068
    129c:	63535f6d 	cmpvs	r3, #436	; 0x1b4
    12a0:	445f6e61 	ldrbmi	r6, [pc], #-3681	; 12a8 <CPSR_IRQ_INHIBIT+0x1228>
    12a4:	495f7269 	ldmdbmi	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    12a8:	5f00636e 	svcpl	0x0000636e
    12ac:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    12b0:	43324943 	teqmi	r2, #1097728	; 0x10c000
    12b4:	6172545f 	cmnvs	r2, pc, asr r4
    12b8:	6361736e 	cmnvs	r1, #-1207959551	; 0xb8000001
    12bc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    12c0:	3149736c 	cmpcc	r9, ip, ror #6
    12c4:	44535331 	ldrbmi	r5, [r3], #-817	; 0xfffffccf
    12c8:	36303331 			; <UNDEFINED> instruction: 0x36303331
    12cc:	646d435f 	strbtvs	r4, [sp], #-863	; 0xfffffca1
    12d0:	53524545 	cmppl	r2, #289406976	; 0x11400000
    12d4:	544b525f 	strbpl	r5, [fp], #-607	; 0xfffffda1
    12d8:	6553005f 	ldrbvs	r0, [r3, #-95]	; 0xffffffa1
    12dc:	65535f74 	ldrbvs	r5, [r3, #-3956]	; 0xfffff08c
    12e0:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    12e4:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    12e8:	0070616d 	rsbseq	r6, r0, sp, ror #2
    12ec:	61656c63 	cmnvs	r5, r3, ror #24
    12f0:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    12f4:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    12f8:	6f435f61 	svcvs	0x00435f61
    12fc:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    1300:	4e006575 	cfrshl64mi	mvdx0, mvdx5, r6
    1304:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1308:	5f79616c 	svcpl	0x0079616c
    130c:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    1310:	00646e61 	rsbeq	r6, r4, r1, ror #28
    1314:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1318:	5f79616c 	svcpl	0x0079616c
    131c:	0066664f 	rsbeq	r6, r6, pc, asr #12
    1320:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    1324:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    1328:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    132c:	6165485f 	cmnvs	r5, pc, asr r8
    1330:	614d5f70 	hvcvs	54768	; 0xd5f0
    1334:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    1338:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    133c:	466d0076 			; <UNDEFINED> instruction: 0x466d0076
    1340:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    1344:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1348:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
    134c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1350:	535f7961 	cmppl	pc, #1589248	; 0x184000
    1354:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1358:	32313630 	eorscc	r3, r1, #48, 12	; 0x3000000
    135c:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
    1360:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 11ec <CPSR_IRQ_INHIBIT+0x116c>
    1364:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    1368:	53313145 	teqpl	r1, #1073741841	; 0x40000011
    136c:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    1370:	435f3630 	cmpmi	pc, #48, 12	; 0x3000000
    1374:	0068646d 	rsbeq	r6, r8, sp, ror #8
    1378:	53746b50 	cmnpl	r4, #80, 22	; 0x14000
    137c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1380:	6f6c6c41 	svcvs	0x006c6c41
    1384:	654e5f63 	strbvs	r5, [lr, #-3939]	; 0xfffff09d
    1388:	505f7478 	subspl	r7, pc, r8, ror r4	; <UNPREDICTABLE>
    138c:	00656761 	rsbeq	r6, r5, r1, ror #14
    1390:	69726f48 	ldmdbvs	r2!, {r3, r6, r8, r9, sl, fp, sp, lr}^
    1394:	746e6f7a 	strbtvc	r6, [lr], #-3962	; 0xfffff086
    1398:	535f6c61 	cmppl	pc, #24832	; 0x6100
    139c:	6c6f7263 	sfmvs	f7, 2, [pc], #-396	; 1218 <CPSR_IRQ_INHIBIT+0x1198>
    13a0:	654c5f6c 	strbvs	r5, [ip, #-3948]	; 0xfffff094
    13a4:	53007466 	movwpl	r7, #1126	; 0x466
    13a8:	435f7465 	cmpmi	pc, #1694498816	; 0x65000000
    13ac:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    13b0:	00747361 	rsbseq	r7, r4, r1, ror #6
    13b4:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
    13b8:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    13bc:	6e72654b 	cdpvs	5, 7, cr6, cr2, cr11, {2}
    13c0:	485f6c65 	ldmdami	pc, {r0, r2, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    13c4:	5f706165 	svcpl	0x00706165
    13c8:	6e756843 	cdpvs	8, 7, cr6, cr5, cr3, {2}
    13cc:	65485f6b 	strbvs	r5, [r8, #-3947]	; 0xfffff095
    13d0:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
    13d4:	74634100 	strbtvc	r4, [r3], #-256	; 0xffffff00
    13d8:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    13dc:	63535f65 	cmpvs	r3, #404	; 0x194
    13e0:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    13e4:	726f4800 	rsbvc	r4, pc, #0, 16
    13e8:	6e6f7a69 	vnmulvs.f32	s15, s30, s19
    13ec:	5f6c6174 	svcpl	0x006c6174
    13f0:	6f726353 	svcvs	0x00726353
    13f4:	565f6c6c 	ldrbpl	r6, [pc], -ip, ror #24
    13f8:	4c5f7472 	cfldrdmi	mvd7, [pc], {114}	; 0x72
    13fc:	00746665 	rsbseq	r6, r4, r5, ror #12
    1400:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    1404:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
    1408:	3c203c3c 	stccc	12, cr3, [r0], #-240	; 0xffffff10
    140c:	31445353 	cmpcc	r4, r3, asr r3
    1410:	5f363033 	svcpl	0x00363033
    1414:	3e646d43 	cdpcc	13, 6, cr6, cr4, cr3, {2}
    1418:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    141c:	44433631 	strbmi	r3, [r3], #-1585	; 0xfffff9cf
    1420:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1424:	535f7961 	cmppl	pc, #1589248	; 0x184000
    1428:	33314453 	teqcc	r1, #1392508928	; 0x53000000
    142c:	43353630 	teqmi	r5, #48, 12	; 0x3000000
    1430:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    1434:	5f007645 	svcpl	0x00007645
    1438:	314b4e5a 	cmpcc	fp, sl, asr lr
    143c:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1440:	5f746669 	svcpl	0x00746669
    1444:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1448:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    144c:	5f734939 	svcpl	0x00734939
    1450:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1454:	76456465 	strbvc	r6, [r5], -r5, ror #8
    1458:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    145c:	2f632f74 	svccs	0x00632f74
    1460:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1464:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    1468:	442f6162 	strtmi	r6, [pc], #-354	; 1470 <CPSR_IRQ_INHIBIT+0x13f0>
    146c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1470:	73746e65 	cmnvc	r4, #1616	; 0x650
    1474:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    1478:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    147c:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    1480:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    1484:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    1488:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    148c:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    1490:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1494:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1498:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    149c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    14a0:	6765732f 	strbvs	r7, [r5, -pc, lsr #6]!
    14a4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    14a8:	70736964 	rsbsvc	r6, r3, r4, ror #18
    14ac:	2e79616c 	rpwcsez	f6, f1, #4.0
    14b0:	00707063 	rsbseq	r7, r0, r3, rrx
    14b4:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    14b8:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    14bc:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    14c0:	00726574 	rsbseq	r6, r2, r4, ror r5
    14c4:	4b4e5a5f 	blmi	1397e48 <_bss_end+0x1386dc8>
    14c8:	53433631 	movtpl	r3, #13873	; 0x3631
    14cc:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    14d0:	445f746e 	ldrbmi	r7, [pc], #-1134	; 14d8 <CPSR_IRQ_INHIBIT+0x1458>
    14d4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    14d8:	52347961 	eorspl	r7, r4, #1589248	; 0x184000
    14dc:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    14e0:	5a5f0076 	bpl	17c16c0 <_bss_end+0x17b0640>
    14e4:	36314b4e 	ldrtcc	r4, [r1], -lr, asr #22
    14e8:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    14ec:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    14f0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    14f4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    14f8:	5f734939 	svcpl	0x00734939
    14fc:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1500:	76456465 	strbvc	r6, [r5], -r5, ror #8
    1504:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1508:	53433631 	movtpl	r3, #13873	; 0x3631
    150c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    1510:	445f746e 	ldrbmi	r7, [pc], #-1134	; 1518 <CPSR_IRQ_INHIBIT+0x1498>
    1514:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    1518:	43357961 	teqmi	r5, #1589248	; 0x184000
    151c:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    1520:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
    1524:	61746144 	cmnvs	r4, r4, asr #2
    1528:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
    152c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1530:	53433531 	movtpl	r3, #13617	; 0x3531
    1534:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1538:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    153c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1540:	68533872 	ldmdavs	r3, {r1, r4, r5, r6, fp, ip, sp}^
    1544:	5f746669 	svcpl	0x00746669
    1548:	62456e49 	subvs	r6, r5, #1168	; 0x490
    154c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1550:	53433531 	movtpl	r3, #13617	; 0x3531
    1554:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1558:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    155c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1560:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    1564:	006a6a6a 	rsbeq	r6, sl, sl, ror #20
    1568:	314e5a5f 	cmpcc	lr, pc, asr sl
    156c:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1570:	5f746669 	svcpl	0x00746669
    1574:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1578:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    157c:	6f6c4335 	svcvs	0x006c4335
    1580:	76456573 			; <UNDEFINED> instruction: 0x76456573
    1584:	6c436d00 	mcrrvs	13, 0, r6, r3, cr0
    1588:	5f6b636f 	svcpl	0x006b636f
    158c:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1590:	314e5a5f 	cmpcc	lr, pc, asr sl
    1594:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    1598:	5f746669 	svcpl	0x00746669
    159c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    15a0:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    15a4:	69685338 	stmdbvs	r8!, {r3, r4, r5, r8, r9, ip, lr}^
    15a8:	495f7466 	ldmdbmi	pc, {r1, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    15ac:	0068456e 	rsbeq	r4, r8, lr, ror #10
    15b0:	314e5a5f 	cmpcc	lr, pc, asr sl
    15b4:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    15b8:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    15bc:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    15c0:	616c7073 	smcvs	50947	; 0xc703
    15c4:	45344379 	ldrmi	r4, [r4, #-889]!	; 0xfffffc87
    15c8:	4f6d0076 	svcmi	0x006d0076
    15cc:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
    15d0:	53430074 	movtpl	r0, #12404	; 0x3074
    15d4:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    15d8:	445f746e 	ldrbmi	r7, [pc], #-1134	; 15e0 <CPSR_IRQ_INHIBIT+0x1560>
    15dc:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    15e0:	5f007961 	svcpl	0x00007961
    15e4:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    15e8:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    15ec:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    15f0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    15f4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    15f8:	76453243 	strbvc	r3, [r5], -r3, asr #4
    15fc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1600:	53433531 	movtpl	r3, #13617	; 0x3531
    1604:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1608:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    160c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1610:	704f3472 	subvc	r3, pc, r2, ror r4	; <UNPREDICTABLE>
    1614:	76456e65 	strbvc	r6, [r5], -r5, ror #28
    1618:	68436d00 	stmdavs	r3, {r8, sl, fp, sp, lr}^
    161c:	63617261 	cmnvs	r1, #268435462	; 0x10000006
    1620:	5f726574 	svcpl	0x00726574
    1624:	0070614d 	rsbseq	r6, r0, sp, asr #2
    1628:	4f4c475f 	svcmi	0x004c475f
    162c:	5f4c4142 	svcpl	0x004c4142
    1630:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    1634:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    1638:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    163c:	5f746e65 	svcpl	0x00746e65
    1640:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1644:	0079616c 	rsbseq	r6, r9, ip, ror #2
    1648:	314e5a5f 	cmpcc	lr, pc, asr sl
    164c:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    1650:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    1654:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1658:	616c7073 	smcvs	50947	; 0xc703
    165c:	72573579 	subsvc	r3, r7, #507510784	; 0x1e400000
    1660:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    1664:	5a5f0063 	bpl	17c17f8 <_bss_end+0x17b0778>
    1668:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    166c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    1670:	5f746e65 	svcpl	0x00746e65
    1674:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1678:	3179616c 	cmncc	r9, ip, ror #2
    167c:	68436d34 	stmdavs	r3, {r2, r4, r5, r8, sl, fp, sp, lr}^
    1680:	63617261 	cmnvs	r1, #268435462	; 0x10000006
    1684:	5f726574 	svcpl	0x00726574
    1688:	4570614d 	ldrbmi	r6, [r0, #-333]!	; 0xfffffeb3
    168c:	614c6d00 	cmpvs	ip, r0, lsl #26
    1690:	5f686374 	svcpl	0x00686374
    1694:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1698:	66696853 			; <UNDEFINED> instruction: 0x66696853
    169c:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
    16a0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    16a4:	53433631 	movtpl	r3, #13873	; 0x3631
    16a8:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    16ac:	445f746e 	ldrbmi	r7, [pc], #-1134	; 16b4 <CPSR_IRQ_INHIBIT+0x1634>
    16b0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    16b4:	4f347961 	svcmi	0x00347961
    16b8:	456e6570 	strbmi	r6, [lr, #-1392]!	; 0xfffffa90
    16bc:	5a5f0076 	bpl	17c189c <_bss_end+0x17b081c>
    16c0:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    16c4:	66696853 			; <UNDEFINED> instruction: 0x66696853
    16c8:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    16cc:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    16d0:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    16d4:	6a6a6a45 	bvs	1a9bff0 <_bss_end+0x1a8af70>
    16d8:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    16dc:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    16e0:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    16e4:	5f495f62 	svcpl	0x00495f62
    16e8:	69685373 	stmdbvs	r8!, {r0, r1, r4, r5, r6, r8, r9, ip, lr}^
    16ec:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    16f0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    16f4:	00726574 	rsbseq	r6, r2, r4, ror r5
    16f8:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    16fc:	6f6c6300 	svcvs	0x006c6300
    1700:	69506b63 	ldmdbvs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1704:	616c006e 	cmnvs	ip, lr, rrx
    1708:	50686374 	rsbpl	r6, r8, r4, ror r3
    170c:	2f006e69 	svccs	0x00006e69
    1710:	2f746e6d 	svccs	0x00746e6d
    1714:	73552f63 	cmpvc	r5, #396	; 0x18c
    1718:	2f737265 	svccs	0x00737265
    171c:	6162754b 	cmnvs	r2, fp, asr #10
    1720:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1724:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1728:	5a2f7374 	bpl	bde500 <_bss_end+0xbcd480>
    172c:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 15a0 <CPSR_IRQ_INHIBIT+0x1520>
    1730:	2f657461 	svccs	0x00657461
    1734:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    1738:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    173c:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    1740:	2f433249 	svccs	0x00433249
    1744:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1748:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    174c:	642f6372 	strtvs	r6, [pc], #-882	; 1754 <CPSR_IRQ_INHIBIT+0x16d4>
    1750:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1754:	732f7372 			; <UNDEFINED> instruction: 0x732f7372
    1758:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    175c:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1760:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1764:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    1768:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
    176c:	6e695061 	cdpvs	0, 6, cr5, cr9, cr1, {3}
    1770:	69546d00 	ldmdbvs	r4, {r8, sl, fp, sp, lr}^
    1774:	5f72656d 	svcpl	0x0072656d
    1778:	73676552 	cmnvc	r7, #343932928	; 0x14800000
    177c:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    1780:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    1784:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    1788:	5f495f62 	svcpl	0x00495f62
    178c:	6d695473 	cfstrdvs	mvd5, [r9, #-460]!	; 0xfffffe34
    1790:	5f007265 	svcpl	0x00007265
    1794:	43364e5a 	teqmi	r6, #1440	; 0x5a0
    1798:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    179c:	49303272 	ldmdbmi	r0!, {r1, r4, r5, r6, r9, ip, sp}
    17a0:	69545f73 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    17a4:	5f72656d 	svcpl	0x0072656d
    17a8:	5f515249 	svcpl	0x00515249
    17ac:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    17b0:	45676e69 	strbmi	r6, [r7, #-3689]!	; 0xfffff197
    17b4:	61680076 	smcvs	32774	; 0x8006
    17b8:	695f746c 	ldmdbvs	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    17bc:	65645f6e 	strbvs	r5, [r4, #-3950]!	; 0xfffff092
    17c0:	5f677562 	svcpl	0x00677562
    17c4:	61657262 	cmnvs	r5, r2, ror #4
    17c8:	5a5f006b 	bpl	17c197c <_bss_end+0x17b08fc>
    17cc:	5443364e 	strbpl	r3, [r3], #-1614	; 0xfffff9b2
    17d0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    17d4:	6d453243 	sfmvs	f3, 2, [r5, #-268]	; 0xfffffef4
    17d8:	6c655200 	sfmvs	f5, 2, [r5], #-0
    17dc:	0064616f 	rsbeq	r6, r4, pc, ror #2
    17e0:	5f515249 	svcpl	0x00515249
    17e4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    17e8:	6b636162 	blvs	18d9d78 <_bss_end+0x18c8cf8>
    17ec:	51524900 	cmppl	r2, r0, lsl #18
    17f0:	73614d5f 	cmnvc	r1, #6080	; 0x17c0
    17f4:	0064656b 	rsbeq	r6, r4, fp, ror #10
    17f8:	616c6564 	cmnvs	ip, r4, ror #10
    17fc:	6e750079 	mrcvs	0, 3, r0, cr5, cr9, {3}
    1800:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
    1804:	7500305f 	strvc	r3, [r0, #-95]	; 0xffffffa1
    1808:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
    180c:	00325f64 	eorseq	r5, r2, r4, ror #30
    1810:	73756e75 	cmnvc	r5, #1872	; 0x750
    1814:	335f6465 	cmpcc	pc, #1694498816	; 0x65000000
    1818:	756e7500 	strbvc	r7, [lr, #-1280]!	; 0xfffffb00
    181c:	5f646573 	svcpl	0x00646573
    1820:	6f630034 	svcvs	0x00630034
    1824:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    1828:	32335f72 	eorscc	r5, r3, #456	; 0x1c8
    182c:	72500062 	subsvc	r0, r0, #98	; 0x62
    1830:	61637365 	cmnvs	r3, r5, ror #6
    1834:	5f72656c 	svcpl	0x0072656c
    1838:	00363532 	eorseq	r3, r6, r2, lsr r5
    183c:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    1840:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    1844:	45367265 	ldrmi	r7, [r6, #-613]!	; 0xfffffd9b
    1848:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    184c:	46504565 	ldrbmi	r4, [r0], -r5, ror #10
    1850:	6a457676 	bvs	115f230 <_bss_end+0x114e1b0>
    1854:	544e3631 	strbpl	r3, [lr], #-1585	; 0xfffff9cf
    1858:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    185c:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0xffffffa1
    1860:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    1864:	66007265 	strvs	r7, [r0], -r5, ror #4
    1868:	5f656572 	svcpl	0x00656572
    186c:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
    1870:	5f676e69 	svcpl	0x00676e69
    1874:	73657270 	cmnvc	r5, #112, 4
    1878:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    187c:	72660072 	rsbvc	r0, r6, #114	; 0x72
    1880:	725f6565 	subsvc	r6, pc, #423624704	; 0x19400000
    1884:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1888:	655f676e 	ldrbvs	r6, [pc, #-1902]	; 1122 <CPSR_IRQ_INHIBIT+0x10a2>
    188c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1890:	52490065 	subpl	r0, r9, #101	; 0x65
    1894:	6c435f51 	mcrrvs	15, 5, r5, r3, cr1
    1898:	00726165 	rsbseq	r6, r2, r5, ror #2
    189c:	73657250 	cmnvc	r5, #80, 4
    18a0:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    18a4:	36315f72 	shsub16cc	r5, r1, r2
    18a8:	6c615600 	stclvs	6, cr5, [r1], #-0
    18ac:	69006575 	stmdbvs	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    18b0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    18b4:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    18b8:	616e655f 	cmnvs	lr, pc, asr r5
    18bc:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    18c0:	756e7500 	strbvc	r7, [lr, #-1280]!	; 0xfffffb00
    18c4:	5f646573 	svcpl	0x00646573
    18c8:	72500031 	subsvc	r0, r0, #49	; 0x31
    18cc:	69445f65 	stmdbvs	r4, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    18d0:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
    18d4:	69540072 	ldmdbvs	r4, {r1, r4, r5, r6}^
    18d8:	5f72656d 	svcpl	0x0072656d
    18dc:	00676552 	rsbeq	r6, r7, r2, asr r5
    18e0:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    18e4:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    18e8:	44377265 	ldrtmi	r7, [r7], #-613	; 0xfffffd9b
    18ec:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    18f0:	7645656c 	strbvc	r6, [r5], -ip, ror #10
    18f4:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    18f8:	725f7265 	subsvc	r7, pc, #1342177286	; 0x50000006
    18fc:	625f6765 	subsvs	r6, pc, #26476544	; 0x1940000
    1900:	00657361 	rsbeq	r7, r5, r1, ror #6
    1904:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1908:	6e655f72 	mcrvs	15, 3, r5, cr5, cr2, {3}
    190c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1910:	6d2f0064 	stcvs	0, cr0, [pc, #-400]!	; 1788 <CPSR_IRQ_INHIBIT+0x1708>
    1914:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1918:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    191c:	4b2f7372 	blmi	bde6ec <_bss_end+0xbcd66c>
    1920:	2f616275 	svccs	0x00616275
    1924:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1928:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    192c:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1930:	614d6f72 	hvcvs	55026	; 0xd6f2
    1934:	652f6574 	strvs	r6, [pc, #-1396]!	; 13c8 <CPSR_IRQ_INHIBIT+0x1348>
    1938:	706d6178 	rsbvc	r6, sp, r8, ror r1
    193c:	2f73656c 	svccs	0x0073656c
    1940:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1944:	6b2f4332 	blvs	bd2614 <_bss_end+0xbc1594>
    1948:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    194c:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1950:	72642f63 	rsbvc	r2, r4, #396	; 0x18c
    1954:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1958:	69742f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    195c:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    1960:	00707063 	rsbseq	r7, r0, r3, rrx
    1964:	6d695454 	cfstrdvs	mvd5, [r9, #-336]!	; 0xfffffeb0
    1968:	435f7265 	cmpmi	pc, #1342177286	; 0x50000006
    196c:	465f6c74 			; <UNDEFINED> instruction: 0x465f6c74
    1970:	7367616c 	cmnvc	r7, #108, 2
    1974:	616f4c00 	cmnvs	pc, r0, lsl #24
    1978:	436d0064 	cmnmi	sp, #100	; 0x64
    197c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1980:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1984:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    1988:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    198c:	52347265 	eorspl	r7, r4, #1342177286	; 0x50000006
    1990:	45736765 	ldrbmi	r6, [r3, #-1893]!	; 0xfffff89b
    1994:	6168334e 	cmnvs	r8, lr, asr #6
    1998:	6954396c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, fp, ip, sp}^
    199c:	5f72656d 	svcpl	0x0072656d
    19a0:	45676552 	strbmi	r6, [r7, #-1362]!	; 0xfffffaae
    19a4:	69544300 	ldmdbvs	r4, {r8, r9, lr}^
    19a8:	0072656d 	rsbseq	r6, r2, sp, ror #10
    19ac:	364e5a5f 			; <UNDEFINED> instruction: 0x364e5a5f
    19b0:	6d695443 	cfstrdvs	mvd5, [r9, #-268]!	; 0xfffffef4
    19b4:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    19b8:	46006d45 	strmi	r6, [r0], -r5, asr #26
    19bc:	5f656572 	svcpl	0x00656572
    19c0:	6e6e7552 	mcrvs	5, 3, r7, cr14, cr2, {2}
    19c4:	00676e69 	rsbeq	r6, r7, r9, ror #28
    19c8:	73657250 	cmnvc	r5, #80, 4
    19cc:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    19d0:	00315f72 	eorseq	r5, r1, r2, ror pc
    19d4:	545f7349 	ldrbpl	r7, [pc], #-841	; 19dc <CPSR_IRQ_INHIBIT+0x195c>
    19d8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    19dc:	5152495f 	cmppl	r2, pc, asr r9
    19e0:	6e65505f 	mcrvs	0, 3, r5, cr5, cr15, {2}
    19e4:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    19e8:	69545400 	ldmdbvs	r4, {sl, ip, lr}^
    19ec:	5f72656d 	svcpl	0x0072656d
    19f0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    19f4:	6b636162 	blvs	18d9f84 <_bss_end+0x18c8f04>
    19f8:	51524900 	cmppl	r2, r0, lsl #18
    19fc:	7761525f 			; <UNDEFINED> instruction: 0x7761525f
    1a00:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1a04:	69544336 	ldmdbvs	r4, {r1, r2, r4, r5, r8, r9, lr}^
    1a08:	3172656d 	cmncc	r2, sp, ror #10
    1a0c:	51524932 	cmppl	r2, r2, lsr r9
    1a10:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    1a14:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1a18:	0076456b 	rsbseq	r4, r6, fp, ror #10
    1a1c:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    1a20:	6b636162 	blvs	18d9fb0 <_bss_end+0x18c8f30>
    1a24:	72546d00 	subsvc	r6, r4, #0, 26
    1a28:	525f676e 	subspl	r6, pc, #28835840	; 0x1b80000
    1a2c:	00736765 	rsbseq	r6, r3, r5, ror #14
    1a30:	6c637865 	stclvs	8, cr7, [r3], #-404	; 0xfffffe6c
    1a34:	76697375 			; <UNDEFINED> instruction: 0x76697375
    1a38:	5a5f0065 	bpl	17c1bd4 <_bss_end+0x17b0b54>
    1a3c:	5443354e 	strbpl	r3, [r3], #-1358	; 0xfffffab2
    1a40:	31474e52 	cmpcc	r7, r2, asr lr
    1a44:	74654737 	strbtvc	r4, [r5], #-1847	; 0xfffff8c9
    1a48:	6e61525f 	mcrvs	2, 3, r5, cr1, cr15, {2}
    1a4c:	5f6d6f64 	svcpl	0x006d6f64
    1a50:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1a54:	76457265 	strbvc	r7, [r5], -r5, ror #4
    1a58:	4e525400 	cdpmi	4, 5, cr5, cr2, cr0, {0}
    1a5c:	61575f47 	cmpvs	r7, r7, asr #30
    1a60:	70756d72 	rsbsvc	r6, r5, r2, ror sp
    1a64:	756f435f 	strbvc	r4, [pc, #-863]!	; 170d <CPSR_IRQ_INHIBIT+0x168d>
    1a68:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1a6c:	4d5f746e 	cfldrdmi	mvd7, [pc, #-440]	; 18bc <CPSR_IRQ_INHIBIT+0x183c>
    1a70:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1a74:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    1a78:	552f632f 	strpl	r6, [pc, #-815]!	; 1751 <CPSR_IRQ_INHIBIT+0x16d1>
    1a7c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1a80:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    1a84:	6f442f61 	svcvs	0x00442f61
    1a88:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1a8c:	2f73746e 	svccs	0x0073746e
    1a90:	6f72655a 	svcvs	0x0072655a
    1a94:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    1a98:	6178652f 	cmnvs	r8, pc, lsr #10
    1a9c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1aa0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    1aa4:	4332492d 	teqmi	r2, #737280	; 0xb4000
    1aa8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    1aac:	2f6c656e 	svccs	0x006c656e
    1ab0:	2f637273 	svccs	0x00637273
    1ab4:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1ab8:	2f737265 	svccs	0x00737265
    1abc:	676e7274 			; <UNDEFINED> instruction: 0x676e7274
    1ac0:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    1ac4:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    1ac8:	5a5f0061 	bpl	17c1c54 <_bss_end+0x17b0bd4>
    1acc:	5443354e 	strbpl	r3, [r3], #-1358	; 0xfffffab2
    1ad0:	34474e52 	strbcc	r4, [r7], #-3666	; 0xfffff1ae
    1ad4:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1ad8:	5f006245 	svcpl	0x00006245
    1adc:	354b4e5a 	strbcc	r4, [fp, #-3674]	; 0xfffff1a6
    1ae0:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    1ae4:	73493947 	movtvc	r3, #39239	; 0x9947
    1ae8:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    1aec:	4564656e 	strbmi	r6, [r4, #-1390]!	; 0xfffffa92
    1af0:	72740076 	rsbsvc	r0, r4, #118	; 0x76
    1af4:	725f676e 	subsvc	r6, pc, #28835840	; 0x1b80000
    1af8:	625f6765 	subsvs	r6, pc, #26476544	; 0x1940000
    1afc:	00657361 	rsbeq	r7, r5, r1, ror #6
    1b00:	5f746547 	svcpl	0x00746547
    1b04:	646e6152 	strbtvs	r6, [lr], #-338	; 0xfffffeae
    1b08:	4e5f6d6f 	cdpmi	13, 5, cr6, cr15, cr15, {3}
    1b0c:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1b10:	5a5f0072 	bpl	17c1ce0 <_bss_end+0x17b0c60>
    1b14:	5443354e 	strbpl	r3, [r3], #-1358	; 0xfffffab2
    1b18:	43474e52 	movtmi	r4, #32338	; 0x7e52
    1b1c:	006a4534 	rsbeq	r4, sl, r4, lsr r5
    1b20:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    1b24:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    1b28:	6c433547 	cfstr64vs	mvdx3, [r3], {71}	; 0x47
    1b2c:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    1b30:	5a5f0076 	bpl	17c1d10 <_bss_end+0x17b0c90>
    1b34:	5443354e 	strbpl	r3, [r3], #-1358	; 0xfffffab2
    1b38:	43474e52 	movtmi	r4, #32338	; 0x7e52
    1b3c:	006a4532 	rsbeq	r4, sl, r2, lsr r5
    1b40:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    1b44:	475f0047 	ldrbmi	r0, [pc, -r7, asr #32]
    1b48:	41424f4c 	cmpmi	r2, ip, asr #30
    1b4c:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
    1b50:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    1b54:	5254735f 	subspl	r7, r4, #2080374785	; 0x7c000001
    1b58:	5400474e 	strpl	r4, [r0], #-1870	; 0xfffff8b2
    1b5c:	5f474e52 	svcpl	0x00474e52
    1b60:	00676552 	rsbeq	r6, r7, r2, asr r5
    1b64:	5f534667 	svcpl	0x00534667
    1b68:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1b6c:	5f737265 	svcpl	0x00737265
    1b70:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1b74:	6f4e0074 	svcvs	0x004e0074
    1b78:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1b7c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1b80:	72446d65 	subvc	r6, r4, #6464	; 0x1940
    1b84:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1b88:	69726400 	ldmdbvs	r2!, {sl, sp, lr}^
    1b8c:	5f726576 	svcpl	0x00726576
    1b90:	00786469 	rsbseq	r6, r8, r9, ror #8
    1b94:	6f6f526d 	svcvs	0x006f526d
    1b98:	65445f74 	strbvs	r5, [r4, #-3956]	; 0xfffff08c
    1b9c:	5a5f0076 	bpl	17c1d7c <_bss_end+0x17b0cfc>
    1ba0:	4331314e 	teqmi	r1, #-2147483629	; 0x80000013
    1ba4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1ba8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1bac:	32436d65 	subcc	r6, r3, #6464	; 0x1940
    1bb0:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
    1bb4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1bb8:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
    1bbc:	6e490074 	mcrvs	0, 2, r0, cr9, cr4, {3}
    1bc0:	61697469 	cmnvs	r9, r9, ror #8
    1bc4:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    1bc8:	53466700 	movtpl	r6, #26368	; 0x6700
    1bcc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1bd0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1bd4:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    1bd8:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    1bdc:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    1be0:	5f495f62 	svcpl	0x00495f62
    1be4:	6c694673 	stclvs	6, cr4, [r9], #-460	; 0xfffffe34
    1be8:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1bec:	006d6574 	rsbeq	r6, sp, r4, ror r5
    1bf0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    1bf4:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    1bf8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1bfc:	6165485f 	cmnvs	r5, pc, asr r8
    1c00:	614d5f70 	hvcvs	54768	; 0xd5f0
    1c04:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    1c08:	6c413572 	cfstr64vs	mvdx3, [r1], {114}	; 0x72
    1c0c:	49636f6c 	stmdbmi	r3!, {r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c10:	4331314e 	teqmi	r1, #-2147483629	; 0x80000013
    1c14:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1c18:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1c1c:	33316d65 	teqcc	r1, #6464	; 0x1940
    1c20:	5f534654 	svcpl	0x00534654
    1c24:	65657254 	strbvs	r7, [r5, #-596]!	; 0xfffffdac
    1c28:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 1c30 <CPSR_IRQ_INHIBIT+0x1bb0>
    1c2c:	45454565 	strbmi	r4, [r5, #-1381]	; 0xfffffa9b
    1c30:	765f5450 			; <UNDEFINED> instruction: 0x765f5450
    1c34:	44736900 	ldrbtmi	r6, [r3], #-2304	; 0xfffff700
    1c38:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
    1c3c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c40:	78614d00 	stmdavc	r1!, {r8, sl, fp, lr}^
    1c44:	72445346 	subvc	r5, r4, #402653185	; 0x18000001
    1c48:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1c4c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1c50:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1c54:	6d006874 	stcvs	8, cr6, [r0, #-464]	; 0xfffffe30
    1c58:	72745070 	rsbsvc	r5, r4, #112	; 0x70
    1c5c:	72617000 	rsbvc	r7, r1, #0
    1c60:	00746e65 	rsbseq	r6, r4, r5, ror #28
    1c64:	5f534654 	svcpl	0x00534654
    1c68:	65657254 	strbvs	r7, [r5, #-596]!	; 0xfffffdac
    1c6c:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 1c74 <CPSR_IRQ_INHIBIT+0x1bf4>
    1c70:	614d0065 	cmpvs	sp, r5, rrx
    1c74:	6c694678 	stclvs	6, cr4, [r9], #-480	; 0xfffffe20
    1c78:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
    1c7c:	6e654c65 	cdpvs	12, 6, cr4, cr5, cr5, {3}
    1c80:	00687467 	rsbeq	r7, r8, r7, ror #8
    1c84:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1c88:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1c8c:	006d6574 	rsbeq	r6, sp, r4, ror r5
    1c90:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
    1c94:	6e657264 	cdpvs	2, 6, cr7, cr5, cr4, {3}
    1c98:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    1c9c:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1ca0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1ca4:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1ca8:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1cac:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1cb0:	5433316d 	ldrtpl	r3, [r3], #-365	; 0xfffffe93
    1cb4:	545f5346 	ldrbpl	r5, [pc], #-838	; 1cbc <CPSR_IRQ_INHIBIT+0x1c3c>
    1cb8:	5f656572 	svcpl	0x00656572
    1cbc:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    1cc0:	76453443 	strbvc	r3, [r5], -r3, asr #8
    1cc4:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    1cc8:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1ccc:	53465400 	movtpl	r5, #25600	; 0x6400
    1cd0:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1cd4:	00726576 	rsbseq	r6, r2, r6, ror r5
    1cd8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1cdc:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1ce0:	5f006574 	svcpl	0x00006574
    1ce4:	31314e5a 	teqcc	r1, sl, asr lr
    1ce8:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1cec:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1cf0:	346d6574 	strbtcc	r6, [sp], #-1396	; 0xfffffa8c
    1cf4:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1cf8:	634b5045 	movtvs	r5, #45125	; 0xb045
    1cfc:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    1d00:	5f656c69 	svcpl	0x00656c69
    1d04:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    1d08:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 1d10 <CPSR_IRQ_INHIBIT+0x1c90>
    1d0c:	69460065 	stmdbvs	r6, {r0, r2, r5, r6}^
    1d10:	435f646e 	cmpmi	pc, #1845493760	; 0x6e000000
    1d14:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    1d18:	6f526d00 	svcvs	0x00526d00
    1d1c:	4d5f746f 	cfldrdmi	mvd7, [pc, #-444]	; 1b68 <CPSR_IRQ_INHIBIT+0x1ae8>
    1d20:	6400746e 	strvs	r7, [r0], #-1134	; 0xfffffb92
    1d24:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1d28:	526d0072 	rsbpl	r0, sp, #114	; 0x72
    1d2c:	5f746f6f 	svcpl	0x00746f6f
    1d30:	00737953 	rsbseq	r7, r3, r3, asr r9
    1d34:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1d38:	6c6e4f5f 	stclvs	15, cr4, [lr], #-380	; 0xfffffe84
    1d3c:	6d2f0079 	stcvs	0, cr0, [pc, #-484]!	; 1b60 <CPSR_IRQ_INHIBIT+0x1ae0>
    1d40:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    1d44:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    1d48:	4b2f7372 	blmi	bdeb18 <_bss_end+0xbcda98>
    1d4c:	2f616275 	svccs	0x00616275
    1d50:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1d54:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1d58:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    1d5c:	614d6f72 	hvcvs	55026	; 0xd6f2
    1d60:	652f6574 	strvs	r6, [pc, #-1396]!	; 17f4 <CPSR_IRQ_INHIBIT+0x1774>
    1d64:	706d6178 	rsbvc	r6, sp, r8, ror r1
    1d68:	2f73656c 	svccs	0x0073656c
    1d6c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    1d70:	6b2f4332 	blvs	bd2a40 <_bss_end+0xbc19c0>
    1d74:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1d78:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    1d7c:	73662f63 	cmnvc	r6, #396	; 0x18c
    1d80:	6c69662f 	stclvs	6, cr6, [r9], #-188	; 0xffffff44
    1d84:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1d88:	2e6d6574 	mcrcs	5, 3, r6, cr13, cr4, {3}
    1d8c:	00707063 	rsbseq	r7, r0, r3, rrx
    1d90:	5078614d 	rsbspl	r6, r8, sp, asr #2
    1d94:	4c687461 	cfstrdmi	mvd7, [r8], #-388	; 0xfffffe7c
    1d98:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1d9c:	526d0068 	rsbpl	r0, sp, #104	; 0x68
    1da0:	00746f6f 	rsbseq	r6, r4, pc, ror #30
    1da4:	6c696863 	stclvs	8, cr6, [r9], #-396	; 0xfffffe74
    1da8:	6c410064 	mcrrvs	0, 6, r0, r1, cr4
    1dac:	3c636f6c 	stclcc	15, cr6, [r3], #-432	; 0xfffffe50
    1db0:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    1db4:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    1db8:	3a6d6574 	bcc	1b5b390 <_bss_end+0x1b4a310>
    1dbc:	5346543a 	movtpl	r5, #25658	; 0x643a
    1dc0:	6572545f 	ldrbvs	r5, [r2, #-1119]!	; 0xfffffba1
    1dc4:	6f4e5f65 	svcvs	0x004e5f65
    1dc8:	003e6564 	eorseq	r6, lr, r4, ror #10
    1dcc:	314e5a5f 	cmpcc	lr, pc, asr sl
    1dd0:	69464331 	stmdbvs	r6, {r0, r4, r5, r8, r9, lr}^
    1dd4:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1dd8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1ddc:	46543331 			; <UNDEFINED> instruction: 0x46543331
    1de0:	72545f53 	subsvc	r5, r4, #332	; 0x14c
    1de4:	4e5f6565 	cdpmi	5, 5, cr6, cr15, cr5, {3}
    1de8:	3165646f 	cmncc	r5, pc, ror #8
    1dec:	6e694630 	mcrvs	6, 3, r4, cr9, cr0, {1}
    1df0:	68435f64 	stmdavs	r3, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1df4:	45646c69 	strbmi	r6, [r4, #-3177]!	; 0xfffff397
    1df8:	00634b50 	rsbeq	r4, r3, r0, asr fp
    1dfc:	314e5a5f 	cmpcc	lr, pc, asr sl
    1e00:	69464331 	stmdbvs	r6, {r0, r4, r5, r8, r9, lr}^
    1e04:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1e08:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1e0c:	76453443 	strbvc	r3, [r5], -r3, asr #8
    1e10:	74617000 	strbtvc	r7, [r1], #-0
    1e14:	5a5f0068 	bpl	17c1fbc <_bss_end+0x17b0f3c>
    1e18:	4331314e 	teqmi	r1, #-2147483629	; 0x80000013
    1e1c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1e20:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1e24:	33316d65 	teqcc	r1, #6464	; 0x1940
    1e28:	5f534654 	svcpl	0x00534654
    1e2c:	65657254 	strbvs	r7, [r5, #-596]!	; 0xfffffdac
    1e30:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 1e38 <CPSR_IRQ_INHIBIT+0x1db8>
    1e34:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    1e38:	72570076 	subsvc	r0, r7, #118	; 0x76
    1e3c:	5f657469 	svcpl	0x00657469
    1e40:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1e44:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1e48:	46433131 			; <UNDEFINED> instruction: 0x46433131
    1e4c:	73656c69 	cmnvc	r5, #26880	; 0x6900
    1e50:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1e54:	4930316d 	ldmdbmi	r0!, {r0, r2, r3, r5, r6, r8, ip, sp}
    1e58:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1e5c:	7a696c61 	bvc	1a5cfe8 <_bss_end+0x1a4bf68>
    1e60:	00764565 	rsbseq	r4, r6, r5, ror #10
    1e64:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    1e68:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    1e6c:	5f746669 	svcpl	0x00746669
    1e70:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1e74:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1e78:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    1e7c:	45344365 	ldrmi	r4, [r4, #-869]!	; 0xfffffc9b
    1e80:	5f534b52 	svcpl	0x00534b52
    1e84:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1e88:	4d433331 	stclmi	3, cr3, [r3, #-196]	; 0xffffff3c
    1e8c:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    1e90:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    1e94:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    1e98:	00764532 	rsbseq	r4, r6, r2, lsr r5
    1e9c:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    1ea0:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    1ea4:	45304465 	ldrmi	r4, [r0, #-1125]!	; 0xfffffb9b
    1ea8:	5a5f0076 	bpl	17c2088 <_bss_end+0x17b1008>
    1eac:	4649354e 	strbmi	r3, [r9], -lr, asr #10
    1eb0:	43656c69 	cmnmi	r5, #26880	; 0x6900
    1eb4:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1eb8:	4e6e6970 			; <UNDEFINED> instruction: 0x4e6e6970
    1ebc:	5a5f006f 	bpl	17c2080 <_bss_end+0x17b1000>
    1ec0:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    1ec4:	474e5254 	smlsldmi	r5, lr, r4, r2
    1ec8:	5f53465f 	svcpl	0x0053465f
    1ecc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1ed0:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    1ed4:	5f007645 	svcpl	0x00007645
    1ed8:	30314e5a 	eorscc	r4, r1, sl, asr lr
    1edc:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    1ee0:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1ee4:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    1ee8:	534b5245 	movtpl	r5, #45637	; 0xb245
    1eec:	5a5f005f 	bpl	17c2070 <_bss_end+0x17b0ff0>
    1ef0:	4331314e 	teqmi	r1, #-2147483629	; 0x80000013
    1ef4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1ef8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1efc:	37316d65 	ldrcc	r6, [r1, -r5, ror #26]!
    1f00:	5f534667 	svcpl	0x00534667
    1f04:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1f08:	5f737265 	svcpl	0x00737265
    1f0c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1f10:	5f004574 	svcpl	0x00004574
    1f14:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    1f18:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    1f1c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    1f20:	5f53465f 	svcpl	0x0053465f
    1f24:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1f28:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    1f2c:	5f007645 	svcpl	0x00007645
    1f30:	35324e5a 	ldrcc	r4, [r2, #-3674]!	; 0xfffff1a6
    1f34:	69685343 	stmdbvs	r8!, {r0, r1, r6, r8, r9, ip, lr}^
    1f38:	525f7466 	subspl	r7, pc, #1711276032	; 0x66000000
    1f3c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1f40:	5f726574 	svcpl	0x00726574
    1f44:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f4c <CPSR_IRQ_INHIBIT+0x1ecc>
    1f48:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f4c:	4f313172 	svcmi	0x00313172
    1f50:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
    1f54:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1f58:	76457265 	strbvc	r7, [r5], -r5, ror #4
    1f5c:	4d437e00 	stclmi	14, cr7, [r3, #-0]
    1f60:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    1f64:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    1f68:	72445f53 	subvc	r5, r4, #332	; 0x14c
    1f6c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1f70:	47736600 	ldrbmi	r6, [r3, -r0, lsl #12]!
    1f74:	5f4f4950 	svcpl	0x004f4950
    1f78:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f80 <CPSR_IRQ_INHIBIT+0x1f00>
    1f7c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f80:	73660072 	cmnvc	r6, #114	; 0x72
    1f84:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1f88:	5f726f74 	svcpl	0x00726f74
    1f8c:	445f5346 	ldrbmi	r5, [pc], #-838	; 1f94 <CPSR_IRQ_INHIBIT+0x1f14>
    1f90:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1f94:	5a5f0072 	bpl	17c2164 <_bss_end+0x17b10e4>
    1f98:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    1f9c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    1fa0:	5f746e65 	svcpl	0x00746e65
    1fa4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1fa8:	5f79616c 	svcpl	0x0079616c
    1fac:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    1fb0:	69725735 	ldmdbvs	r2!, {r0, r2, r4, r5, r8, r9, sl, ip, lr}^
    1fb4:	50456574 	subpl	r6, r5, r4, ror r5
    1fb8:	006a634b 	rsbeq	r6, sl, fp, asr #6
    1fbc:	314e5a5f 	cmpcc	lr, pc, asr sl
    1fc0:	69464938 	stmdbvs	r6, {r3, r4, r5, r8, fp, lr}^
    1fc4:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1fc8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1fcc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1fd0:	44726576 	ldrbtmi	r6, [r2], #-1398	; 0xfffffa8a
    1fd4:	00764534 	rsbseq	r4, r6, r4, lsr r5
    1fd8:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    1fdc:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    1fe0:	45344465 	ldrmi	r4, [r4, #-1125]!	; 0xfffffb9b
    1fe4:	65530076 	ldrbvs	r0, [r3, #-118]	; 0xffffff8a
    1fe8:	61505f74 	cmpvs	r0, r4, ror pc
    1fec:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
    1ff0:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
    1ff4:	5f6c6274 	svcpl	0x006c6274
    1ff8:	5f727470 	svcpl	0x00727470
    1ffc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2000:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2004:	53433032 	movtpl	r3, #12338	; 0x3032
    2008:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    200c:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2010:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2014:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2018:	3243656c 	subcc	r6, r3, #108, 10	; 0x1b000000
    201c:	5f007645 	svcpl	0x00007645
    2020:	31324e5a 	teqcc	r2, sl, asr lr
    2024:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2028:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    202c:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2030:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2034:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2038:	45304465 	ldrmi	r4, [r0, #-1125]!	; 0xfffffb9b
    203c:	5a5f0076 	bpl	17c221c <_bss_end+0x17b119c>
    2040:	4338314e 	teqmi	r8, #-2147483629	; 0x80000013
    2044:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    2048:	5f726f74 	svcpl	0x00726f74
    204c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2054 <CPSR_IRQ_INHIBIT+0x1fd4>
    2050:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2054:	4f313172 	svcmi	0x00313172
    2058:	65525f6e 	ldrbvs	r5, [r2, #-3950]	; 0xfffff092
    205c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2060:	76457265 	strbvc	r7, [r5], -r5, ror #4
    2064:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2068:	53433132 	movtpl	r3, #12594	; 0x3132
    206c:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2070:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2078 <CPSR_IRQ_INHIBIT+0x1ff8>
    2074:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2078:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    207c:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2080:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2084:	314e5a5f 	cmpcc	lr, pc, asr sl
    2088:	50474330 	subpl	r4, r7, r0, lsr r3
    208c:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2090:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2094:	00764530 	rsbseq	r4, r6, r0, lsr r5
    2098:	314e5a5f 	cmpcc	lr, pc, asr sl
    209c:	6f4d4333 	svcvs	0x004d4333
    20a0:	6f74696e 	svcvs	0x0074696e
    20a4:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20a8:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    20ac:	5f006945 	svcpl	0x00006945
    20b0:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    20b4:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    20b8:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    20bc:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    20c0:	45304465 	ldrmi	r4, [r0, #-1125]!	; 0xfffffb9b
    20c4:	5a5f0076 	bpl	17c22a4 <_bss_end+0x17b1224>
    20c8:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    20cc:	474e5254 	smlsldmi	r5, lr, r4, r2
    20d0:	5f53465f 	svcpl	0x0053465f
    20d4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    20d8:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    20dc:	534b5245 	movtpl	r5, #45637	; 0xb245
    20e0:	5a5f005f 	bpl	17c2264 <_bss_end+0x17b11e4>
    20e4:	4338314e 	teqmi	r8, #-2147483629	; 0x80000013
    20e8:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    20ec:	5f726f74 	svcpl	0x00726f74
    20f0:	445f5346 	ldrbmi	r5, [pc], #-838	; 20f8 <CPSR_IRQ_INHIBIT+0x2078>
    20f4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    20f8:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    20fc:	005f534f 	subseq	r5, pc, pc, asr #6
    2100:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2104:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    2108:	5f746669 	svcpl	0x00746669
    210c:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2110:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2114:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2118:	6c433565 	cfstr64vs	mvdx3, [r3], {101}	; 0x65
    211c:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    2120:	494e0076 	stmdbmi	lr, {r1, r2, r4, r5, r6}^
    2124:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2128:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    212c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2130:	5f006e6f 	svcpl	0x00006e6f
    2134:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2138:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    213c:	69465f47 	stmdbvs	r6, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    2140:	5735656c 	ldrpl	r6, [r5, -ip, ror #10]!
    2144:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    2148:	634b5045 	movtvs	r5, #45125	; 0xb045
    214c:	5a5f006a 	bpl	17c22fc <_bss_end+0x17b127c>
    2150:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2154:	4f495047 	svcmi	0x00495047
    2158:	5f53465f 	svcpl	0x0053465f
    215c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2160:	34447265 	strbcc	r7, [r4], #-613	; 0xfffffd9b
    2164:	5f007645 	svcpl	0x00007645
    2168:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    216c:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2170:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2174:	5f6d6574 	svcpl	0x006d6574
    2178:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    217c:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2180:	534b5245 	movtpl	r5, #45637	; 0xb245
    2184:	5a5f005f 	bpl	17c2308 <_bss_end+0x17b1288>
    2188:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    218c:	4f495047 	svcmi	0x00495047
    2190:	5f53465f 	svcpl	0x0053465f
    2194:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2198:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    219c:	534b5245 	movtpl	r5, #45637	; 0xb245
    21a0:	5a5f005f 	bpl	17c2324 <_bss_end+0x17b12a4>
    21a4:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    21a8:	474e5254 	smlsldmi	r5, lr, r4, r2
    21ac:	5f53465f 	svcpl	0x0053465f
    21b0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    21b4:	31317265 	teqcc	r1, r5, ror #4
    21b8:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    21bc:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    21c0:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    21c4:	5a5f0076 	bpl	17c23a4 <_bss_end+0x17b1324>
    21c8:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    21cc:	474e5254 	smlsldmi	r5, lr, r4, r2
    21d0:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    21d4:	45344465 	ldrmi	r4, [r4, #-1125]!	; 0xfffffb9b
    21d8:	5a5f0076 	bpl	17c23b8 <_bss_end+0x17b1338>
    21dc:	4338314e 	teqmi	r8, #-2147483629	; 0x80000013
    21e0:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    21e4:	5f726f74 	svcpl	0x00726f74
    21e8:	445f5346 	ldrbmi	r5, [pc], #-838	; 21f0 <CPSR_IRQ_INHIBIT+0x2170>
    21ec:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21f0:	704f3972 	subvc	r3, pc, r2, ror r9	; <UNPREDICTABLE>
    21f4:	465f6e65 	ldrbmi	r6, [pc], -r5, ror #28
    21f8:	45656c69 	strbmi	r6, [r5, #-3177]!	; 0xfffff397
    21fc:	31634b50 	cmncc	r3, r0, asr fp
    2200:	69464e35 	stmdbvs	r6, {r0, r2, r4, r5, r9, sl, fp, lr}^
    2204:	4f5f656c 	svcmi	0x005f656c
    2208:	5f6e6570 	svcpl	0x006e6570
    220c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2210:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    2214:	7261505f 	rsbvc	r5, r1, #95	; 0x5f
    2218:	00736d61 	rsbseq	r6, r3, r1, ror #26
    221c:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2220:	68534330 	ldmdavs	r3, {r4, r5, r8, r9, lr}^
    2224:	5f746669 	svcpl	0x00746669
    2228:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    222c:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2230:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2234:	65523465 	ldrbvs	r3, [r2, #-1125]	; 0xfffffb9b
    2238:	50456461 	subpl	r6, r5, r1, ror #8
    223c:	6d006a63 	vstrvs	s12, [r0, #-396]	; 0xfffffe74
    2240:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    2244:	5a5f0065 	bpl	17c23e0 <_bss_end+0x17b1360>
    2248:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    224c:	474e5254 	smlsldmi	r5, lr, r4, r2
    2250:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2254:	6c433565 	cfstr64vs	mvdx3, [r3], {101}	; 0x65
    2258:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    225c:	5a5f0076 	bpl	17c243c <_bss_end+0x17b13bc>
    2260:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2264:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2268:	5f746e65 	svcpl	0x00746e65
    226c:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2270:	5f79616c 	svcpl	0x0079616c
    2274:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2278:	6f6c4335 	svcvs	0x006c4335
    227c:	76456573 			; <UNDEFINED> instruction: 0x76456573
    2280:	53736600 	cmnpl	r3, #0, 12
    2284:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
    2288:	445f746e 	ldrbmi	r7, [pc], #-1134	; 2290 <CPSR_IRQ_INHIBIT+0x2210>
    228c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    2290:	465f7961 	ldrbmi	r7, [pc], -r1, ror #18
    2294:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2298:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    229c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    22a0:	53433532 	movtpl	r3, #13618	; 0x3532
    22a4:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    22a8:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    22ac:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    22b0:	53465f72 	movtpl	r5, #28530	; 0x6f72
    22b4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    22b8:	44726576 	ldrbtmi	r6, [r2], #-1398	; 0xfffffa8a
    22bc:	00764534 	rsbseq	r4, r6, r4, lsr r5
    22c0:	314e5a5f 	cmpcc	lr, pc, asr sl
    22c4:	50474330 	subpl	r4, r7, r0, lsr r3
    22c8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    22cc:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    22d0:	00764534 	rsbseq	r4, r6, r4, lsr r5
    22d4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    22d8:	552f632f 	strpl	r6, [pc, #-815]!	; 1fb1 <CPSR_IRQ_INHIBIT+0x1f31>
    22dc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    22e0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    22e4:	6f442f61 	svcvs	0x00442f61
    22e8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    22ec:	2f73746e 	svccs	0x0073746e
    22f0:	6f72655a 	svcvs	0x0072655a
    22f4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    22f8:	6178652f 	cmnvs	r8, pc, lsr #10
    22fc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2300:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    2304:	4332492d 	teqmi	r2, #737280	; 0xb4000
    2308:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    230c:	2f6c656e 	svccs	0x006c656e
    2310:	2f637273 	svccs	0x00637273
    2314:	662f7366 	strtvs	r7, [pc], -r6, ror #6
    2318:	73656c69 	cmnvc	r5, #26880	; 0x6900
    231c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2320:	72645f6d 	rsbvc	r5, r4, #436	; 0x1b4
    2324:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2328:	70632e73 	rsbvc	r2, r3, r3, ror lr
    232c:	704f0070 	subvc	r0, pc, r0, ror r0	; <UNPREDICTABLE>
    2330:	465f6e65 	ldrbmi	r6, [pc], -r5, ror #28
    2334:	00656c69 	rsbeq	r6, r5, r9, ror #24
    2338:	314e5a5f 	cmpcc	lr, pc, asr sl
    233c:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    2340:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2344:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2348:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    234c:	65704f39 	ldrbvs	r4, [r0, #-3897]!	; 0xfffff0c7
    2350:	69465f6e 	stmdbvs	r6, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2354:	5045656c 	subpl	r6, r5, ip, ror #10
    2358:	3531634b 	ldrcc	r6, [r1, #-843]!	; 0xfffffcb5
    235c:	6c69464e 	stclvs	6, cr4, [r9], #-312	; 0xfffffec8
    2360:	704f5f65 	subvc	r5, pc, r5, ror #30
    2364:	4d5f6e65 	ldclmi	14, cr6, [pc, #-404]	; 21d8 <CPSR_IRQ_INHIBIT+0x2158>
    2368:	0065646f 	rsbeq	r6, r5, pc, ror #8
    236c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2370:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    2374:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2378:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    237c:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2380:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2384:	65534331 	ldrbvs	r4, [r3, #-817]	; 0xfffffccf
    2388:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    238c:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2390:	616c7073 	smcvs	50947	; 0xc703
    2394:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2398:	3243656c 	subcc	r6, r3, #108, 10	; 0x1b000000
    239c:	5f007645 	svcpl	0x00007645
    23a0:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    23a4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    23a8:	61655234 	cmnvs	r5, r4, lsr r2
    23ac:	63504564 	cmpvs	r0, #100, 10	; 0x19000000
    23b0:	5a5f006a 	bpl	17c2560 <_bss_end+0x17b14e0>
    23b4:	4336324e 	teqmi	r6, #-536870908	; 0xe0000004
    23b8:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    23bc:	5f746e65 	svcpl	0x00746e65
    23c0:	70736944 	rsbsvc	r6, r3, r4, asr #18
    23c4:	5f79616c 	svcpl	0x0079616c
    23c8:	445f5346 	ldrbmi	r5, [pc], #-838	; 23d0 <CPSR_IRQ_INHIBIT+0x2350>
    23cc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    23d0:	45344472 	ldrmi	r4, [r4, #-1138]!	; 0xfffffb8e
    23d4:	5a5f0076 	bpl	17c25b4 <_bss_end+0x17b1534>
    23d8:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    23dc:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    23e0:	5f726f74 	svcpl	0x00726f74
    23e4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    23e8:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    23ec:	005f534b 	subseq	r5, pc, fp, asr #6
    23f0:	314e5a5f 	cmpcc	lr, pc, asr sl
    23f4:	50474335 	subpl	r4, r7, r5, lsr r3
    23f8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    23fc:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2400:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2404:	6e4f3131 	mcrvs	1, 2, r3, cr15, cr1, {1}
    2408:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    240c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2410:	00764572 	rsbseq	r4, r6, r2, ror r5
    2414:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2418:	5a5f006c 	bpl	17c25d0 <_bss_end+0x17b1550>
    241c:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    2420:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    2424:	5f726f74 	svcpl	0x00726f74
    2428:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    242c:	69453243 	stmdbvs	r5, {r0, r1, r6, r9, ip, sp}^
    2430:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2434:	47433531 	smlaldxmi	r3, r3, r1, r5	; <UNPREDICTABLE>
    2438:	5f4f4950 	svcpl	0x004f4950
    243c:	445f5346 	ldrbmi	r5, [pc], #-838	; 2444 <CPSR_IRQ_INHIBIT+0x23c4>
    2440:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2444:	704f3972 	subvc	r3, pc, r2, ror r9	; <UNPREDICTABLE>
    2448:	465f6e65 	ldrbmi	r6, [pc], -r5, ror #28
    244c:	45656c69 	strbmi	r6, [r5, #-3177]!	; 0xfffff397
    2450:	31634b50 	cmncc	r3, r0, asr fp
    2454:	69464e35 	stmdbvs	r6, {r0, r2, r4, r5, r9, sl, fp, lr}^
    2458:	4f5f656c 	svcmi	0x005f656c
    245c:	5f6e6570 	svcpl	0x006e6570
    2460:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2464:	53736600 	cmnpl	r3, #0, 12
    2468:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    246c:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2470:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2474:	53465f72 	movtpl	r5, #28530	; 0x6f72
    2478:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    247c:	00726576 	rsbseq	r6, r2, r6, ror r5
    2480:	314e5a5f 	cmpcc	lr, pc, asr sl
    2484:	6f4d4333 	svcvs	0x004d4333
    2488:	6f74696e 	svcvs	0x0074696e
    248c:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2490:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2494:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    2498:	4e363145 	rsfmism	f3, f6, f5
    249c:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    24a0:	704f5f6c 	subvc	r5, pc, ip, ror #30
    24a4:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    24a8:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    24ac:	436d0076 	cmnmi	sp, #118	; 0x76
    24b0:	6e6e6168 	powvsez	f6, f6, #0.0
    24b4:	5f006c65 	svcpl	0x00006c65
    24b8:	6a776e5a 	bvs	1ddde28 <_bss_end+0x1dccda8>
    24bc:	5f6e4f00 	svcpl	0x006e4f00
    24c0:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    24c4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    24c8:	54437e00 	strbpl	r7, [r3], #-3584	; 0xfffff200
    24cc:	5f474e52 	svcpl	0x00474e52
    24d0:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    24d4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    24d8:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    24dc:	5735656c 	ldrpl	r6, [r5, -ip, ror #10]!
    24e0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    24e4:	634b5045 	movtvs	r5, #45125	; 0xb045
    24e8:	5a5f006a 	bpl	17c2698 <_bss_end+0x17b1618>
    24ec:	4335324e 	teqmi	r5, #-536870908	; 0xe0000004
    24f0:	66696853 			; <UNDEFINED> instruction: 0x66696853
    24f4:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    24f8:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    24fc:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2500:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2504:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2508:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    250c:	005f534b 	subseq	r5, pc, fp, asr #6
    2510:	314e5a5f 	cmpcc	lr, pc, asr sl
    2514:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    2518:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    251c:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    2520:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2524:	3631456c 	ldrtcc	r4, [r1], -ip, ror #10
    2528:	434f494e 	movtmi	r4, #63822	; 0xf94e
    252c:	4f5f6c74 	svcmi	0x005f6c74
    2530:	61726570 	cmnvs	r2, r0, ror r5
    2534:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2538:	63007650 	movwvs	r7, #1616	; 0x650
    253c:	74706c74 	ldrbtvc	r6, [r0], #-3188	; 0xfffff38c
    2540:	5a5f0072 	bpl	17c2710 <_bss_end+0x17b1690>
    2544:	4335314e 	teqmi	r5, #-2147483629	; 0x80000013
    2548:	4f495047 	svcmi	0x00495047
    254c:	5f53465f 	svcpl	0x0053465f
    2550:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2554:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2558:	5f534f45 	svcpl	0x00534f45
    255c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2560:	53433032 	movtpl	r3, #12338	; 0x3032
    2564:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2568:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    256c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2570:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2574:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2578:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    257c:	4e363145 	rsfmism	f3, f6, f5
    2580:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2584:	704f5f6c 	subvc	r5, pc, ip, ror #30
    2588:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    258c:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    2590:	5a5f0076 	bpl	17c2770 <_bss_end+0x17b16f0>
    2594:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2598:	66696853 			; <UNDEFINED> instruction: 0x66696853
    259c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    25a0:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    25a4:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    25a8:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    25ac:	00764534 	rsbseq	r4, r6, r4, lsr r5
    25b0:	314e5a5f 	cmpcc	lr, pc, asr sl
    25b4:	69464938 	stmdbvs	r6, {r3, r4, r5, r8, fp, lr}^
    25b8:	7973656c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    25bc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    25c0:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    25c4:	39726576 	ldmdbcc	r2!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    25c8:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    25cc:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    25d0:	4b504565 	blmi	1413b6c <_bss_end+0x1402aec>
    25d4:	4e353163 	rsfmisz	f3, f5, f3
    25d8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    25dc:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    25e0:	6f4d5f6e 	svcvs	0x004d5f6e
    25e4:	5f006564 	svcpl	0x00006564
    25e8:	31314e5a 	teqcc	r1, sl, asr lr
    25ec:	6c694643 	stclvs	6, cr4, [r9], #-268	; 0xfffffef4
    25f0:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    25f4:	316d6574 	smccc	54868	; 0xd654
    25f8:	53466731 	movtpl	r6, #26417	; 0x6731
    25fc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2600:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    2604:	437e0045 	cmnmi	lr, #69	; 0x45
    2608:	474e5254 	smlsldmi	r5, lr, r4, r2
    260c:	5f53465f 	svcpl	0x0053465f
    2610:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2614:	67007265 	strvs	r7, [r0, -r5, ror #4]
    2618:	6e6f6970 			; <UNDEFINED> instruction: 0x6e6f6970
    261c:	5f006d75 	svcpl	0x00006d75
    2620:	49354e5a 	ldmdbmi	r5!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2624:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2628:	434f4935 	movtmi	r4, #63797	; 0xf935
    262c:	31456c74 	hvccc	22212	; 0x56c4
    2630:	4f494e36 	svcmi	0x00494e36
    2634:	5f6c7443 	svcpl	0x006c7443
    2638:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    263c:	6f697461 	svcvs	0x00697461
    2640:	0076506e 	rsbseq	r5, r6, lr, rrx
    2644:	314e5a5f 	cmpcc	lr, pc, asr sl
    2648:	50474335 	subpl	r4, r7, r5, lsr r3
    264c:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2650:	72445f53 	subvc	r5, r4, #332	; 0x14c
    2654:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2658:	76453443 	strbvc	r3, [r5], -r3, asr #8
    265c:	47437e00 	strbmi	r7, [r3, -r0, lsl #28]
    2660:	5f4f4950 	svcpl	0x004f4950
    2664:	445f5346 	ldrbmi	r5, [pc], #-838	; 266c <CPSR_IRQ_INHIBIT+0x25ec>
    2668:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    266c:	5a5f0072 	bpl	17c283c <_bss_end+0x17b17bc>
    2670:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2674:	474e5254 	smlsldmi	r5, lr, r4, r2
    2678:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    267c:	65523465 	ldrbvs	r3, [r2, #-1125]	; 0xfffffb9b
    2680:	50456461 	subpl	r6, r5, r1, ror #8
    2684:	5f006a63 	svcpl	0x00006a63
    2688:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    268c:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2690:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2694:	5f6d6574 	svcpl	0x006d6574
    2698:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    269c:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    26a0:	6d007645 	stcvs	6, cr7, [r0, #-276]	; 0xfffffeec
    26a4:	4e6e6950 			; <UNDEFINED> instruction: 0x4e6e6950
    26a8:	5a5f006f 	bpl	17c286c <_bss_end+0x17b17ec>
    26ac:	4336324e 	teqmi	r6, #-536870908	; 0xe0000004
    26b0:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    26b4:	5f746e65 	svcpl	0x00746e65
    26b8:	70736944 	rsbsvc	r6, r3, r4, asr #18
    26bc:	5f79616c 	svcpl	0x0079616c
    26c0:	445f5346 	ldrbmi	r5, [pc], #-838	; 26c8 <CPSR_IRQ_INHIBIT+0x2648>
    26c4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    26c8:	45344372 	ldrmi	r4, [r4, #-882]!	; 0xfffffc8e
    26cc:	005f534f 	subseq	r5, pc, pc, asr #6
    26d0:	314e5a5f 	cmpcc	lr, pc, asr sl
    26d4:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    26d8:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    26dc:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    26e0:	00764530 	rsbseq	r4, r6, r0, lsr r5
    26e4:	5047437e 	subpl	r4, r7, lr, ror r3
    26e8:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    26ec:	00656c69 	rsbeq	r6, r5, r9, ror #24
    26f0:	314e5a5f 	cmpcc	lr, pc, asr sl
    26f4:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    26f8:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    26fc:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2700:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2704:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2708:	68534335 	ldmdavs	r3, {r0, r2, r4, r5, r8, r9, lr}^
    270c:	5f746669 	svcpl	0x00746669
    2710:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2714:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2718:	5f53465f 	svcpl	0x0053465f
    271c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2720:	4f397265 	svcmi	0x00397265
    2724:	5f6e6570 	svcpl	0x006e6570
    2728:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    272c:	634b5045 	movtvs	r5, #45125	; 0xb045
    2730:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    2734:	5f656c69 	svcpl	0x00656c69
    2738:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    273c:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 2744 <CPSR_IRQ_INHIBIT+0x26c4>
    2740:	5a5f0065 	bpl	17c28dc <_bss_end+0x17b185c>
    2744:	4649354e 	strbmi	r3, [r9], -lr, asr #10
    2748:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    274c:	736f6c43 	cmnvc	pc, #17152	; 0x4300
    2750:	00764565 	rsbseq	r4, r6, r5, ror #10
    2754:	314e5a5f 	cmpcc	lr, pc, asr sl
    2758:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    275c:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    2760:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2764:	4b524534 	blmi	1493c3c <_bss_end+0x1482bbc>
    2768:	5f005f53 	svcpl	0x00005f53
    276c:	35314e5a 	ldrcc	r4, [r1, #-3674]!	; 0xfffff1a6
    2770:	4e525443 	cdpmi	4, 5, cr5, cr2, cr3, {2}
    2774:	53465f47 	movtpl	r5, #28487	; 0x6f47
    2778:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    277c:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2780:	534f4534 	movtpl	r4, #62772	; 0xf534
    2784:	497e005f 	ldmdbmi	lr!, {r0, r1, r2, r3, r4, r6}^
    2788:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    278c:	65706f00 	ldrbvs	r6, [r0, #-3840]!	; 0xfffff100
    2790:	6f746172 	svcvs	0x00746172
    2794:	656e2072 	strbvs	r2, [lr, #-114]!	; 0xffffff8e
    2798:	5a5f0077 	bpl	17c297c <_bss_end+0x17b18fc>
    279c:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    27a0:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    27a4:	5f726f74 	svcpl	0x00726f74
    27a8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    27ac:	76453444 	strbvc	r3, [r5], -r4, asr #8
    27b0:	53437e00 	movtpl	r7, #15872	; 0x3e00
    27b4:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    27b8:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    27bc:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    27c0:	53465f72 	movtpl	r5, #28530	; 0x6f72
    27c4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    27c8:	00726576 	rsbseq	r6, r2, r6, ror r5
    27cc:	314e5a5f 	cmpcc	lr, pc, asr sl
    27d0:	52544335 	subspl	r4, r4, #-738197504	; 0xd4000000
    27d4:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    27d8:	72445f53 	subvc	r5, r4, #332	; 0x14c
    27dc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    27e0:	76453444 	strbvc	r3, [r5], -r4, asr #8
    27e4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    27e8:	4d433831 	stclmi	8, cr3, [r3, #-196]	; 0xffffff3c
    27ec:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    27f0:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    27f4:	72445f53 	subvc	r5, r4, #332	; 0x14c
    27f8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    27fc:	76453444 	strbvc	r3, [r5], -r4, asr #8
    2800:	61686300 	cmnvs	r8, r0, lsl #6
    2804:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    2808:	70765f00 	rsbsvc	r5, r6, r0, lsl #30
    280c:	492e7274 	stmdbmi	lr!, {r2, r4, r5, r6, r9, ip, sp, lr}
    2810:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2814:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    2818:	445f6d65 	ldrbmi	r6, [pc], #-3429	; 2820 <CPSR_IRQ_INHIBIT+0x27a0>
    281c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2820:	5a5f0072 	bpl	17c29f0 <_bss_end+0x17b1970>
    2824:	4335324e 	teqmi	r5, #-536870908	; 0xe0000004
    2828:	66696853 			; <UNDEFINED> instruction: 0x66696853
    282c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    2830:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2834:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2838:	72445f53 	subvc	r5, r4, #332	; 0x14c
    283c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2840:	4f453443 	svcmi	0x00453443
    2844:	5f005f53 	svcpl	0x00005f53
    2848:	30314e5a 	eorscc	r4, r1, sl, asr lr
    284c:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    2850:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2854:	4935656c 	ldmdbmi	r5!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2858:	6c74434f 	ldclvs	3, cr4, [r4], #-316	; 0xfffffec4
    285c:	4e363145 	rsfmism	f3, f6, f5
    2860:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    2864:	704f5f6c 	subvc	r5, pc, ip, ror #30
    2868:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    286c:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    2870:	5a5f0076 	bpl	17c2a50 <_bss_end+0x17b19d0>
    2874:	4649354e 	strbmi	r3, [r9], -lr, asr #10
    2878:	43656c69 	cmnmi	r5, #26880	; 0x6900
    287c:	4b524534 	blmi	1493d54 <_bss_end+0x1482cd4>
    2880:	5f005f53 	svcpl	0x00005f53
    2884:	36324e5a 			; <UNDEFINED> instruction: 0x36324e5a
    2888:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    288c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2890:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2894:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2898:	5f53465f 	svcpl	0x0053465f
    289c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    28a0:	4f397265 	svcmi	0x00397265
    28a4:	5f6e6570 	svcpl	0x006e6570
    28a8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    28ac:	634b5045 	movtvs	r5, #45125	; 0xb045
    28b0:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    28b4:	5f656c69 	svcpl	0x00656c69
    28b8:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    28bc:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 28c4 <CPSR_IRQ_INHIBIT+0x2844>
    28c0:	5a5f0065 	bpl	17c2a5c <_bss_end+0x17b19dc>
    28c4:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    28c8:	66696853 			; <UNDEFINED> instruction: 0x66696853
    28cc:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    28d0:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    28d4:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    28d8:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    28dc:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    28e0:	4b504565 	blmi	1413e7c <_bss_end+0x1402dfc>
    28e4:	5f006a63 	svcpl	0x00006a63
    28e8:	36324e5a 			; <UNDEFINED> instruction: 0x36324e5a
    28ec:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    28f0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    28f4:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    28f8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    28fc:	5f53465f 	svcpl	0x0053465f
    2900:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2904:	31317265 	teqcc	r1, r5, ror #4
    2908:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    290c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2910:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    2914:	5a5f0076 	bpl	17c2af4 <_bss_end+0x17b1a74>
    2918:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    291c:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2920:	5f746e65 	svcpl	0x00746e65
    2924:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2928:	5f79616c 	svcpl	0x0079616c
    292c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2930:	52453443 	subpl	r3, r5, #1124073472	; 0x43000000
    2934:	005f534b 	subseq	r5, pc, fp, asr #6
    2938:	6853437e 	ldmdavs	r3, {r1, r2, r3, r4, r5, r6, r8, r9, lr}^
    293c:	5f746669 	svcpl	0x00746669
    2940:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2944:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2948:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    294c:	5a5f0065 	bpl	17c2ae8 <_bss_end+0x17b1a68>
    2950:	4330324e 	teqmi	r0, #-536870908	; 0xe0000004
    2954:	66696853 			; <UNDEFINED> instruction: 0x66696853
    2958:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    295c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2960:	465f7265 	ldrbmi	r7, [pc], -r5, ror #4
    2964:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2968:	00764532 	rsbseq	r4, r6, r2, lsr r5
    296c:	314e5a5f 	cmpcc	lr, pc, asr sl
    2970:	50474330 	subpl	r4, r7, r0, lsr r3
    2974:	465f4f49 	ldrbmi	r4, [pc], -r9, asr #30
    2978:	43656c69 	cmnmi	r5, #26880	; 0x6900
    297c:	62694534 	rsbvs	r4, r9, #52, 10	; 0xd000000
    2980:	5a5f0062 	bpl	17c2b10 <_bss_end+0x17b1a90>
    2984:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2988:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    298c:	5f746e65 	svcpl	0x00746e65
    2990:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2994:	5f79616c 	svcpl	0x0079616c
    2998:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    299c:	76453444 	strbvc	r3, [r5], -r4, asr #8
    29a0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    29a4:	53433532 	movtpl	r3, #13618	; 0x3532
    29a8:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    29ac:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    29b0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    29b4:	53465f72 	movtpl	r5, #28530	; 0x6f72
    29b8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    29bc:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    29c0:	00764534 	rsbseq	r4, r6, r4, lsr r5
    29c4:	66756277 			; <UNDEFINED> instruction: 0x66756277
    29c8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    29cc:	4d433331 	stclmi	3, cr3, [r3, #-196]	; 0xffffff3c
    29d0:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    29d4:	465f726f 	ldrbmi	r7, [pc], -pc, ror #4
    29d8:	35656c69 	strbcc	r6, [r5, #-3177]!	; 0xfffff397
    29dc:	736f6c43 	cmnvc	pc, #17152	; 0x4300
    29e0:	00764565 	rsbseq	r4, r6, r5, ror #10
    29e4:	7470765f 	ldrbtvc	r7, [r0], #-1631	; 0xfffff9a1
    29e8:	46492e72 			; <UNDEFINED> instruction: 0x46492e72
    29ec:	00656c69 	rsbeq	r6, r5, r9, ror #24
    29f0:	314e5a5f 	cmpcc	lr, pc, asr sl
    29f4:	52544330 	subspl	r4, r4, #48, 6	; 0xc0000000
    29f8:	465f474e 	ldrbmi	r4, [pc], -lr, asr #14
    29fc:	43656c69 	cmnmi	r5, #26880	; 0x6900
    2a00:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2a04:	6165526d 	cmnvs	r5, sp, ror #4
    2a08:	5a5f0064 	bpl	17c2ba0 <_bss_end+0x17b1b20>
    2a0c:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2a10:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2a14:	5f746e65 	svcpl	0x00746e65
    2a18:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2a1c:	5f79616c 	svcpl	0x0079616c
    2a20:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2a24:	434f4935 	movtmi	r4, #63797	; 0xf935
    2a28:	31456c74 	hvccc	22212	; 0x56c4
    2a2c:	4f494e36 	svcmi	0x00494e36
    2a30:	5f6c7443 	svcpl	0x006c7443
    2a34:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
    2a38:	6f697461 	svcvs	0x00697461
    2a3c:	0076506e 	rsbseq	r5, r6, lr, rrx
    2a40:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2a44:	65534336 	ldrbvs	r4, [r3, #-822]	; 0xfffffcca
    2a48:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2a4c:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a50:	616c7073 	smcvs	50947	; 0xc703
    2a54:	53465f79 	movtpl	r5, #28537	; 0x6f79
    2a58:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2a5c:	43726576 	cmnmi	r2, #494927872	; 0x1d800000
    2a60:	00764534 	rsbseq	r4, r6, r4, lsr r5
    2a64:	354e5a5f 	strbcc	r5, [lr, #-2655]	; 0xfffff5a1
    2a68:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2a6c:	45324365 	ldrmi	r4, [r2, #-869]!	; 0xfffffc9b
    2a70:	5a5f0076 	bpl	17c2c50 <_bss_end+0x17b1bd0>
    2a74:	4649354e 	strbmi	r3, [r9], -lr, asr #10
    2a78:	44656c69 	strbtmi	r6, [r5], #-3177	; 0xfffff397
    2a7c:	00764532 	rsbseq	r4, r6, r2, lsr r5
    2a80:	756f6377 	strbvc	r6, [pc, #-887]!	; 2711 <CPSR_IRQ_INHIBIT+0x2691>
    2a84:	5f00746e 	svcpl	0x0000746e
    2a88:	31324e5a 	teqcc	r2, sl, asr lr
    2a8c:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2a90:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2a94:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2a98:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2a9c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2aa0:	65523465 	ldrbvs	r3, [r2, #-1125]	; 0xfffffb9b
    2aa4:	50456461 	subpl	r6, r5, r1, ror #8
    2aa8:	5f006a63 	svcpl	0x00006a63
    2aac:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    2ab0:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2ab4:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2ab8:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2abc:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2ac0:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2ac4:	6a634b50 	bvs	18d580c <_bss_end+0x18c478c>
    2ac8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2acc:	47433031 	smlaldxmi	r3, r3, r1, r0	; <UNPREDICTABLE>
    2ad0:	5f4f4950 	svcpl	0x004f4950
    2ad4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2ad8:	69453243 	stmdbvs	r5, {r0, r1, r6, r9, ip, sp}^
    2adc:	5f006262 	svcpl	0x00006262
    2ae0:	36324e5a 			; <UNDEFINED> instruction: 0x36324e5a
    2ae4:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2ae8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2aec:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2af0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2af4:	5f53465f 	svcpl	0x0053465f
    2af8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2afc:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2b00:	534b5245 	movtpl	r5, #45637	; 0xb245
    2b04:	5a5f005f 	bpl	17c2c88 <_bss_end+0x17b1c08>
    2b08:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2b0c:	4f495047 	svcmi	0x00495047
    2b10:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2b14:	72573565 	subsvc	r3, r7, #423624704	; 0x19400000
    2b18:	45657469 	strbmi	r7, [r5, #-1129]!	; 0xfffffb97
    2b1c:	6a634b50 	bvs	18d5864 <_bss_end+0x18c47e4>
    2b20:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2b24:	53433032 	movtpl	r3, #12338	; 0x3032
    2b28:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2b2c:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2b30:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2b34:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2b38:	3443656c 	strbcc	r6, [r3], #-1388	; 0xfffffa94
    2b3c:	5f007645 	svcpl	0x00007645
    2b40:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    2b44:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2b48:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2b4c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2b50:	65523465 	ldrbvs	r3, [r2, #-1125]	; 0xfffffb9b
    2b54:	50456461 	subpl	r6, r5, r1, ror #8
    2b58:	7e006a63 	vmlsvc.f32	s12, s0, s7
    2b5c:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2b60:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2b64:	5f6d6574 	svcpl	0x006d6574
    2b68:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2b6c:	5f007265 	svcpl	0x00007265
    2b70:	30314e5a 	eorscc	r4, r1, sl, asr lr
    2b74:	49504743 	ldmdbmi	r0, {r0, r1, r6, r8, r9, sl, lr}^
    2b78:	69465f4f 	stmdbvs	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2b7c:	5234656c 	eorspl	r6, r4, #108, 10	; 0x1b000000
    2b80:	45646165 	strbmi	r6, [r4, #-357]!	; 0xfffffe9b
    2b84:	006a6350 	rsbeq	r6, sl, r0, asr r3
    2b88:	6553437e 	ldrbvs	r4, [r3, #-894]	; 0xfffffc82
    2b8c:	6e656d67 	cdpvs	13, 6, cr6, cr5, cr7, {3}
    2b90:	69445f74 	stmdbvs	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2b94:	616c7073 	smcvs	50947	; 0xc703
    2b98:	69465f79 	stmdbvs	r6, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2b9c:	5f00656c 	svcpl	0x0000656c
    2ba0:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2ba4:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2ba8:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2bac:	5f53465f 	svcpl	0x0053465f
    2bb0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2bb4:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2bb8:	534b5245 	movtpl	r5, #45637	; 0xb245
    2bbc:	5a5f005f 	bpl	17c2d40 <_bss_end+0x17b1cc0>
    2bc0:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2bc4:	4f495047 	svcmi	0x00495047
    2bc8:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2bcc:	6c433565 	cfstr64vs	mvdx3, [r3], {101}	; 0x65
    2bd0:	4565736f 	strbmi	r7, [r5, #-879]!	; 0xfffffc91
    2bd4:	5a5f0076 	bpl	17c2db4 <_bss_end+0x17b1d34>
    2bd8:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2bdc:	6d676553 	cfstr64vs	mvdx6, [r7, #-332]!	; 0xfffffeb4
    2be0:	5f746e65 	svcpl	0x00746e65
    2be4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    2be8:	5f79616c 	svcpl	0x0079616c
    2bec:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2bf0:	76453244 	strbvc	r3, [r5], -r4, asr #4
    2bf4:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    2bf8:	68635f6e 	stmdavs	r3!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2bfc:	5f006772 	svcpl	0x00006772
    2c00:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2c04:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2c08:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2c0c:	5f6d6574 	svcpl	0x006d6574
    2c10:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2c14:	34437265 	strbcc	r7, [r3], #-613	; 0xfffffd9b
    2c18:	5f534f45 	svcpl	0x00534f45
    2c1c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2c20:	53433032 	movtpl	r3, #12338	; 0x3032
    2c24:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    2c28:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2c2c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2c30:	69465f72 	stmdbvs	r6, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2c34:	3044656c 	subcc	r6, r4, ip, ror #10
    2c38:	5f007645 	svcpl	0x00007645
    2c3c:	38314e5a 	ldmdacc	r1!, {r1, r3, r4, r6, r9, sl, fp, lr}
    2c40:	6c694649 	stclvs	6, cr4, [r9], #-292	; 0xfffffedc
    2c44:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2c48:	5f6d6574 	svcpl	0x006d6574
    2c4c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2c50:	31317265 	teqcc	r1, r5, ror #4
    2c54:	525f6e4f 	subspl	r6, pc, #1264	; 0x4f0
    2c58:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2c5c:	45726574 	ldrbmi	r6, [r2, #-1396]!	; 0xfffffa8c
    2c60:	5a5f0076 	bpl	17c2e40 <_bss_end+0x17b1dc0>
    2c64:	4330314e 	teqmi	r0, #-2147483629	; 0x80000013
    2c68:	4f495047 	svcmi	0x00495047
    2c6c:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2c70:	45324465 	ldrmi	r4, [r2, #-1125]!	; 0xfffffb9b
    2c74:	73660076 	cmnvc	r6, #118	; 0x76
    2c78:	474e5254 	smlsldmi	r5, lr, r4, r2
    2c7c:	5f53465f 	svcpl	0x0053465f
    2c80:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2c84:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    2c88:	67655343 	strbvs	r5, [r5, -r3, asr #6]!
    2c8c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2c90:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2c94:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2c98:	5f53465f 	svcpl	0x0053465f
    2c9c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2ca0:	7e007265 	cdpvc	2, 0, cr7, cr0, cr5, {3}
    2ca4:	6e6f4d43 	cdpvs	13, 6, cr4, cr15, cr3, {2}
    2ca8:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2cac:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2cb0:	5a5f0065 	bpl	17c2e4c <_bss_end+0x17b1dcc>
    2cb4:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    2cb8:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2cbc:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2cc0:	6f435f74 	svcvs	0x00435f74
    2cc4:	6f72746e 	svcvs	0x0072746e
    2cc8:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2ccc:	6e453031 	mcrvs	0, 2, r3, cr5, cr1, {1}
    2cd0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2cd4:	5152495f 	cmppl	r2, pc, asr r9
    2cd8:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    2cdc:	30316c61 	eorscc	r6, r1, r1, ror #24
    2ce0:	5f515249 	svcpl	0x00515249
    2ce4:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    2ce8:	00456563 	subeq	r6, r5, r3, ror #10
    2cec:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    2cf0:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    2cf4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2cf8:	5f747075 	svcpl	0x00747075
    2cfc:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    2d00:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    2d04:	37317265 	ldrcc	r7, [r1, -r5, ror #4]!
    2d08:	61736944 	cmnvs	r3, r4, asr #18
    2d0c:	5f656c62 	svcpl	0x00656c62
    2d10:	69736142 	ldmdbvs	r3!, {r1, r6, r8, sp, lr}^
    2d14:	52495f63 	subpl	r5, r9, #396	; 0x18c
    2d18:	334e4551 	movtcc	r4, #58705	; 0xe551
    2d1c:	316c6168 	cmncc	ip, r8, ror #2
    2d20:	51524936 	cmppl	r2, r6, lsr r9
    2d24:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    2d28:	535f6369 	cmppl	pc, #-1543503871	; 0xa4000001
    2d2c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    2d30:	5f004565 	svcpl	0x00004565
    2d34:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    2d38:	6f725043 	svcvs	0x00725043
    2d3c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2d40:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    2d44:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    2d48:	72433931 	subvc	r3, r3, #802816	; 0xc4000
    2d4c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2d50:	69614d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
    2d54:	72505f6e 	subsvc	r5, r0, #440	; 0x1b8
    2d58:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2d5c:	00764573 	rsbseq	r4, r6, r3, ror r5
    2d60:	4f4c475f 	svcmi	0x004c475f
    2d64:	5f4c4142 	svcpl	0x004c4142
    2d68:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    2d6c:	735f495f 	cmpvc	pc, #1556480	; 0x17c000
    2d70:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2d74:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2d78:	6c744374 	ldclvs	3, cr4, [r4], #-464	; 0xfffffe30
    2d7c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2d80:	49433132 	stmdbmi	r3, {r1, r4, r5, r8, ip, sp}^
    2d84:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2d88:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2d8c:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    2d90:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2bc8 <CPSR_IRQ_INHIBIT+0x2b48>
    2d94:	3472656c 	ldrbtcc	r6, [r2], #-1388	; 0xfffffa94
    2d98:	73676552 	cmnvc	r7, #343932928	; 0x14800000
    2d9c:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    2da0:	34326c61 	ldrtcc	r6, [r2], #-3169	; 0xfffff39f
    2da4:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2da8:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2dac:	6f435f74 	svcvs	0x00435f74
    2db0:	6f72746e 	svcvs	0x0072746e
    2db4:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2db8:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2dbc:	6e550045 	cdpvs	0, 5, cr0, cr5, cr5, {2}
    2dc0:	5f70616d 	svcpl	0x0070616d
    2dc4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2dc8:	7275435f 	rsbsvc	r4, r5, #2080374785	; 0x7c000001
    2dcc:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2dd0:	55504700 	ldrbpl	r4, [r0, #-1792]	; 0xfffff900
    2dd4:	61485f31 	cmpvs	r8, r1, lsr pc
    2dd8:	4d00746c 	cfstrsmi	mvf7, [r0, #-432]	; 0xfffffe50
    2ddc:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
    2de0:	6d00786f 	stcvs	8, cr7, [r0, #-444]	; 0xfffffe44
    2de4:	636f7250 	cmnvs	pc, #80, 4
    2de8:	5f737365 	svcpl	0x00737365
    2dec:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2df0:	6165485f 	cmnvs	r5, pc, asr r8
    2df4:	5a5f0064 	bpl	17c2f8c <_bss_end+0x17b1f0c>
    2df8:	36314b4e 	ldrtcc	r4, [r1], -lr, asr #22
    2dfc:	6f725043 	svcvs	0x00725043
    2e00:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2e04:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    2e08:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    2e0c:	65473931 	strbvs	r3, [r7, #-2353]	; 0xfffff6cf
    2e10:	75435f74 	strbvc	r5, [r3, #-3956]	; 0xfffff08c
    2e14:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    2e18:	72505f74 	subsvc	r5, r0, #116, 30	; 0x1d0
    2e1c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2e20:	00764573 	rsbseq	r4, r6, r3, ror r5
    2e24:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2e28:	465f656c 	ldrbmi	r6, [pc], -ip, ror #10
    2e2c:	73656c69 	cmnvc	r5, #26880	; 0x6900
    2e30:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2e34:	57535f6d 	ldrbpl	r5, [r3, -sp, ror #30]
    2e38:	6e450049 	cdpvs	0, 4, cr0, cr5, cr9, {2}
    2e3c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2e40:	5152495f 	cmppl	r2, pc, asr r9
    2e44:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2e48:	49433132 	stmdbmi	r3, {r1, r4, r5, r8, ip, sp}^
    2e4c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2e50:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2e54:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    2e58:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2c90 <CPSR_IRQ_INHIBIT+0x2c10>
    2e5c:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
    2e60:	006d4532 	rsbeq	r4, sp, r2, lsr r5
    2e64:	314e5a5f 	cmpcc	lr, pc, asr sl
    2e68:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    2e6c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2e70:	614d5f73 	hvcvs	54771	; 0xd5f3
    2e74:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    2e78:	43343172 	teqmi	r4, #-2147483620	; 0x8000001c
    2e7c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    2e80:	72505f65 	subsvc	r5, r0, #404	; 0x194
    2e84:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2e88:	006d4573 	rsbeq	r4, sp, r3, ror r5
    2e8c:	4957534e 	ldmdbmi	r7, {r1, r2, r3, r6, r8, r9, ip, lr}^
    2e90:	6f72505f 	svcvs	0x0072505f
    2e94:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2e98:	7265535f 	rsbvc	r5, r5, #2080374785	; 0x7c000001
    2e9c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    2ea0:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
    2ea4:	5f657461 	svcpl	0x00657461
    2ea8:	636f7250 	cmnvs	pc, #80, 4
    2eac:	00737365 	rsbseq	r7, r3, r5, ror #6
    2eb0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    2eb4:	50430065 	subpl	r0, r3, r5, rrx
    2eb8:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2ebc:	4d5f7373 	ldclmi	3, cr7, [pc, #-460]	; 2cf8 <CPSR_IRQ_INHIBIT+0x2c78>
    2ec0:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    2ec4:	5f007265 	svcpl	0x00007265
    2ec8:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    2ecc:	6f725043 	svcvs	0x00725043
    2ed0:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2ed4:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    2ed8:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    2edc:	61483132 	cmpvs	r8, r2, lsr r1
    2ee0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2ee4:	6c69465f 	stclvs	6, cr4, [r9], #-380	; 0xfffffe84
    2ee8:	73797365 	cmnvc	r9, #-1811939327	; 0x94000001
    2eec:	5f6d6574 	svcpl	0x006d6574
    2ef0:	45495753 	strbmi	r5, [r9, #-1875]	; 0xfffff8ad
    2ef4:	534e3332 	movtpl	r3, #58162	; 0xe332
    2ef8:	465f4957 			; <UNDEFINED> instruction: 0x465f4957
    2efc:	73656c69 	cmnvc	r5, #26880	; 0x6900
    2f00:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2f04:	65535f6d 	ldrbvs	r5, [r3, #-3949]	; 0xfffff093
    2f08:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    2f0c:	6a6a6a65 	bvs	1a9d8a8 <_bss_end+0x1a8c828>
    2f10:	54313152 	ldrtpl	r3, [r1], #-338	; 0xfffffeae
    2f14:	5f495753 	svcpl	0x00495753
    2f18:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    2f1c:	6f00746c 	svcvs	0x0000746c
    2f20:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    2f24:	69665f64 	stmdbvs	r6!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2f28:	0073656c 	rsbseq	r6, r3, ip, ror #10
    2f2c:	55504354 	ldrbpl	r4, [r0, #-852]	; 0xfffffcac
    2f30:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    2f34:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    2f38:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
    2f3c:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    2f40:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    2f44:	685f7172 	ldmdavs	pc, {r1, r4, r5, r6, r8, ip, sp, lr}^	; <UNPREDICTABLE>
    2f48:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2f4c:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2f50:	455f5152 	ldrbmi	r5, [pc, #-338]	; 2e06 <CPSR_IRQ_INHIBIT+0x2d86>
    2f54:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2f58:	00315f65 	eorseq	r5, r1, r5, ror #30
    2f5c:	5f515249 	svcpl	0x00515249
    2f60:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    2f64:	325f656c 	subscc	r6, pc, #108, 10	; 0x1b000000
    2f68:	78614d00 	stmdavc	r1!, {r8, sl, fp, lr}^
    2f6c:	6f72505f 	svcvs	0x0072505f
    2f70:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2f74:	65704f5f 	ldrbvs	r4, [r0, #-3935]!	; 0xfffff0a1
    2f78:	5f64656e 	svcpl	0x0064656e
    2f7c:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2f80:	5a5f0073 	bpl	17c3154 <_bss_end+0x17b20d4>
    2f84:	4336314e 	teqmi	r6, #-2147483629	; 0x80000013
    2f88:	636f7250 	cmnvs	pc, #80, 4
    2f8c:	5f737365 	svcpl	0x00737365
    2f90:	616e614d 	cmnvs	lr, sp, asr #2
    2f94:	31726567 	cmncc	r2, r7, ror #10
    2f98:	6d6e5538 	cfstr64vs	mvdx5, [lr, #-224]!	; 0xffffff20
    2f9c:	465f7061 	ldrbmi	r7, [pc], -r1, rrx
    2fa0:	5f656c69 	svcpl	0x00656c69
    2fa4:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    2fa8:	45746e65 	ldrbmi	r6, [r4, #-3685]!	; 0xfffff19b
    2fac:	4155006a 	cmpmi	r5, sl, rrx
    2fb0:	49005452 	stmdbmi	r0, {r1, r4, r6, sl, ip, lr}
    2fb4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2fb8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2fbc:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    2fc0:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2df8 <CPSR_IRQ_INHIBIT+0x2d78>
    2fc4:	5f72656c 	svcpl	0x0072656c
    2fc8:	00676552 	rsbeq	r6, r7, r2, asr r5
    2fcc:	5f746547 	svcpl	0x00746547
    2fd0:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    2fd4:	5f746e65 	svcpl	0x00746e65
    2fd8:	636f7250 	cmnvs	pc, #80, 4
    2fdc:	00737365 	rsbseq	r7, r3, r5, ror #6
    2fe0:	5f70614d 	svcpl	0x0070614d
    2fe4:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    2fe8:	5f6f545f 	svcpl	0x006f545f
    2fec:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    2ff0:	00746e65 	rsbseq	r6, r4, r5, ror #28
    2ff4:	5f786469 	svcpl	0x00786469
    2ff8:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    2ffc:	6e614800 	cdpvs	8, 6, cr4, cr1, cr0, {0}
    3000:	5f656c64 	svcpl	0x00656c64
    3004:	636f7250 	cmnvs	pc, #80, 4
    3008:	5f737365 	svcpl	0x00737365
    300c:	00495753 	subeq	r5, r9, r3, asr r7
    3010:	656c6c49 	strbvs	r6, [ip, #-3145]!	; 0xfffff3b7
    3014:	5f6c6167 	svcpl	0x006c6167
    3018:	65636341 	strbvs	r6, [r3, #-833]!	; 0xfffffcbf
    301c:	315f7373 	cmpcc	pc, r3, ror r3	; <UNPREDICTABLE>
    3020:	6c6c4900 			; <UNDEFINED> instruction: 0x6c6c4900
    3024:	6c616765 	stclvs	7, cr6, [r1], #-404	; 0xfffffe6c
    3028:	6363415f 	cmnvs	r3, #-1073741801	; 0xc0000017
    302c:	5f737365 	svcpl	0x00737365
    3030:	52490032 	subpl	r0, r9, #50	; 0x32
    3034:	61425f51 	cmpvs	r2, r1, asr pc
    3038:	5f636973 	svcpl	0x00636973
    303c:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    3040:	5f006563 	svcpl	0x00006563
    3044:	5f495753 	svcpl	0x00495753
    3048:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    304c:	5200746c 	andpl	r7, r0, #108, 8	; 0x6c000000
    3050:	616e6e75 	smcvs	59109	; 0xe6e5
    3054:	00656c62 	rsbeq	r6, r5, r2, ror #24
    3058:	7361544e 	cmnvc	r1, #1308622848	; 0x4e000000
    305c:	74535f6b 	ldrbvc	r5, [r3], #-3947	; 0xfffff095
    3060:	00657461 	rsbeq	r7, r5, r1, ror #8
    3064:	746e496d 	strbtvc	r4, [lr], #-2413	; 0xfffff693
    3068:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    306c:	525f7470 	subspl	r7, pc, #112, 8	; 0x70000000
    3070:	00736765 	rsbseq	r6, r3, r5, ror #14
    3074:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    3078:	6f635f64 	svcvs	0x00635f64
    307c:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    3080:	63730072 	cmnvs	r3, #114	; 0x72
    3084:	5f646568 	svcpl	0x00646568
    3088:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    308c:	705f6369 	subsvc	r6, pc, r9, ror #6
    3090:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    3094:	00797469 	rsbseq	r7, r9, r9, ror #8
    3098:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    309c:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    30a0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    30a4:	5f747075 	svcpl	0x00747075
    30a8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    30ac:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    30b0:	31317265 	teqcc	r1, r5, ror #4
    30b4:	61736944 	cmnvs	r3, r4, asr #18
    30b8:	5f656c62 	svcpl	0x00656c62
    30bc:	45515249 	ldrbmi	r5, [r1, #-585]	; 0xfffffdb7
    30c0:	6168334e 	cmnvs	r8, lr, asr #6
    30c4:	4930316c 	ldmdbmi	r0!, {r2, r3, r5, r6, r8, ip, sp}
    30c8:	535f5152 	cmppl	pc, #-2147483628	; 0x80000014
    30cc:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    30d0:	66004565 	strvs	r4, [r0], -r5, ror #10
    30d4:	5f747361 	svcpl	0x00747361
    30d8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    30dc:	70757272 	rsbsvc	r7, r5, r2, ror r2
    30e0:	61685f74 	smcvs	34292	; 0x85f4
    30e4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    30e8:	52490072 	subpl	r0, r9, #114	; 0x72
    30ec:	61425f51 	cmpvs	r2, r1, asr pc
    30f0:	5f636973 	svcpl	0x00636973
    30f4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    30f8:	00676e69 	rsbeq	r6, r7, r9, ror #28
    30fc:	61736944 	cmnvs	r3, r4, asr #18
    3100:	5f656c62 	svcpl	0x00656c62
    3104:	00515249 	subseq	r5, r1, r9, asr #4
    3108:	314e5a5f 	cmpcc	lr, pc, asr sl
    310c:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    3110:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3114:	614d5f73 	hvcvs	54771	; 0xd5f3
    3118:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    311c:	4d393172 	ldfmis	f3, [r9, #-456]!	; 0xfffffe38
    3120:	465f7061 	ldrbmi	r7, [pc], -r1, rrx
    3124:	5f656c69 	svcpl	0x00656c69
    3128:	435f6f54 	cmpmi	pc, #84, 30	; 0x150
    312c:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    3130:	5045746e 	subpl	r7, r5, lr, ror #8
    3134:	69464935 	stmdbvs	r6, {r0, r2, r4, r5, r8, fp, lr}^
    3138:	7300656c 	movwvc	r6, #1388	; 0x56c
    313c:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    3140:	695f6563 	ldmdbvs	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    3144:	746e6564 	strbtvc	r6, [lr], #-1380	; 0xfffffa9c
    3148:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
    314c:	4c6d0072 	stclmi	0, cr0, [sp], #-456	; 0xfffffe38
    3150:	5f747361 	svcpl	0x00747361
    3154:	00444950 	subeq	r4, r4, r0, asr r9
    3158:	746e4943 	strbtvc	r4, [lr], #-2371	; 0xfffff6bd
    315c:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    3160:	435f7470 	cmpmi	pc, #112, 8	; 0x70000000
    3164:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    3168:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    316c:	52490072 	subpl	r0, r9, #114	; 0x72
    3170:	61425f51 	cmpvs	r2, r1, asr pc
    3174:	5f636973 	svcpl	0x00636973
    3178:	61736944 	cmnvs	r3, r4, asr #18
    317c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    3180:	626d6f5a 	rsbvs	r6, sp, #360	; 0x168
    3184:	45006569 	strmi	r6, [r0, #-1385]	; 0xfffffa97
    3188:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    318c:	61425f65 	cmpvs	r2, r5, ror #30
    3190:	5f636973 	svcpl	0x00636973
    3194:	00515249 	subseq	r5, r1, r9, asr #4
    3198:	314e5a5f 	cmpcc	lr, pc, asr sl
    319c:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    31a0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    31a4:	614d5f73 	hvcvs	54771	; 0xd5f3
    31a8:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    31ac:	63533872 	cmpvs	r3, #7471104	; 0x720000
    31b0:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    31b4:	7645656c 	strbvc	r6, [r5], -ip, ror #10
    31b8:	6f6f4400 	svcvs	0x006f4400
    31bc:	6c656272 	sfmvs	f6, 2, [r5], #-456	; 0xfffffe38
    31c0:	00305f6c 	eorseq	r5, r0, ip, ror #30
    31c4:	726f6f44 	rsbvc	r6, pc, #68, 30	; 0x110
    31c8:	6c6c6562 	cfstr64vs	mvdx6, [ip], #-392	; 0xfffffe78
    31cc:	2f00315f 	svccs	0x0000315f
    31d0:	2f746e6d 	svccs	0x00746e6d
    31d4:	73552f63 	cmpvc	r5, #396	; 0x18c
    31d8:	2f737265 	svccs	0x00737265
    31dc:	6162754b 	cmnvs	r2, fp, asr #10
    31e0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    31e4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    31e8:	5a2f7374 	bpl	bdffc0 <_bss_end+0xbcef40>
    31ec:	4d6f7265 	sfmmi	f7, 2, [pc, #-404]!	; 3060 <CPSR_IRQ_INHIBIT+0x2fe0>
    31f0:	2f657461 	svccs	0x00657461
    31f4:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    31f8:	73656c70 	cmnvc	r5, #112, 24	; 0x7000
    31fc:	2d39312f 	ldfcss	f3, [r9, #-188]!	; 0xffffff44
    3200:	2f433249 	svccs	0x00433249
    3204:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3208:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    320c:	692f6372 	stmdbvs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
    3210:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3214:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    3218:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    321c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 3054 <CPSR_IRQ_INHIBIT+0x2fd4>
    3220:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
    3224:	00707063 	rsbseq	r7, r0, r3, rrx
    3228:	69636166 	stmdbvs	r3!, {r1, r2, r5, r6, r8, sp, lr}^
    322c:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    3230:	55504700 	ldrbpl	r4, [r0, #-1792]	; 0xfffff900
    3234:	61485f30 	cmpvs	r8, r0, lsr pc
    3238:	4e00746c 	cdpmi	4, 0, cr7, cr0, cr12, {3}
    323c:	5f495753 	svcpl	0x00495753
    3240:	69636146 	stmdbvs	r3!, {r1, r2, r6, r8, sp, lr}^
    3244:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    3248:	75436d00 	strbvc	r6, [r3, #-3328]	; 0xfffff300
    324c:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    3250:	61545f74 	cmpvs	r4, r4, ror pc
    3254:	4e5f6b73 	vmovmi.s8	r6, d15[3]
    3258:	0065646f 	rsbeq	r6, r5, pc, ror #8
    325c:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    3260:	6e494331 	mcrvs	3, 2, r4, cr9, cr1, {1}
    3264:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    3268:	5f747075 	svcpl	0x00747075
    326c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    3270:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    3274:	36317265 	ldrtcc	r7, [r1], -r5, ror #4
    3278:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    327c:	425f656c 	subsmi	r6, pc, #108, 10	; 0x1b000000
    3280:	63697361 	cmnvs	r9, #-2080374783	; 0x84000001
    3284:	5152495f 	cmppl	r2, pc, asr r9
    3288:	68334e45 	ldmdavs	r3!, {r0, r2, r6, r9, sl, fp, lr}
    328c:	36316c61 	ldrtcc	r6, [r1], -r1, ror #24
    3290:	5f515249 	svcpl	0x00515249
    3294:	69736142 	ldmdbvs	r3!, {r1, r6, r8, sp, lr}^
    3298:	6f535f63 	svcvs	0x00535f63
    329c:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    32a0:	5a5f0045 	bpl	17c33bc <_bss_end+0x17b233c>
    32a4:	4331324e 	teqmi	r1, #-536870908	; 0xe0000004
    32a8:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    32ac:	70757272 	rsbsvc	r7, r5, r2, ror r2
    32b0:	6f435f74 	svcvs	0x00435f74
    32b4:	6f72746e 	svcvs	0x0072746e
    32b8:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    32bc:	6d453443 	cfstrdvs	mvd3, [r5, #-268]	; 0xfffffef4
    32c0:	75706300 	ldrbvc	r6, [r0, #-768]!	; 0xfffffd00
    32c4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    32c8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    32cc:	43324900 	teqmi	r2, #0, 18
    32d0:	4950535f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    32d4:	414c535f 	cmpmi	ip, pc, asr r3
    32d8:	495f4556 	ldmdbmi	pc, {r1, r2, r4, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    32dc:	0054494e 	subseq	r4, r4, lr, asr #18
    32e0:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    32e4:	616e7265 	cmnvs	lr, r5, ror #4
    32e8:	6f735f6c 	svcvs	0x00735f6c
    32ec:	61777466 	cmnvs	r7, r6, ror #8
    32f0:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    32f4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    32f8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    32fc:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    3300:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    3304:	73617400 	cmnvc	r1, #0, 8
    3308:	4946006b 	stmdbmi	r6, {r0, r1, r3, r5, r6}^
    330c:	6f435f51 	svcvs	0x00435f51
    3310:	6f72746e 	svcvs	0x0072746e
    3314:	5454006c 	ldrbpl	r0, [r4], #-108	; 0xffffff94
    3318:	5f6b7361 	svcpl	0x006b7361
    331c:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
    3320:	53007463 	movwpl	r7, #1123	; 0x463
    3324:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    3328:	00656c75 	rsbeq	r6, r5, r5, ror ip
    332c:	314e5a5f 	cmpcc	lr, pc, asr sl
    3330:	72504336 	subsvc	r4, r0, #-671088640	; 0xd8000000
    3334:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3338:	614d5f73 	hvcvs	54771	; 0xd5f3
    333c:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3340:	77533972 			; <UNDEFINED> instruction: 0x77533972
    3344:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    3348:	456f545f 	strbmi	r5, [pc, #-1119]!	; 2ef1 <CPSR_IRQ_INHIBIT+0x2e71>
    334c:	43383150 	teqmi	r8, #80, 2
    3350:	636f7250 	cmnvs	pc, #80, 4
    3354:	5f737365 	svcpl	0x00737365
    3358:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    335c:	646f4e5f 	strbtvs	r4, [pc], #-3679	; 3364 <CPSR_IRQ_INHIBIT+0x32e4>
    3360:	52490065 	subpl	r0, r9, #101	; 0x65
    3364:	61425f51 	cmpvs	r2, r1, asr pc
    3368:	5f636973 	svcpl	0x00636973
    336c:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    3370:	5f00656c 	svcpl	0x0000656c
    3374:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    3378:	6f725043 	svcvs	0x00725043
    337c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3380:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3384:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3388:	61483831 	cmpvs	r8, r1, lsr r8
    338c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3390:	6f72505f 	svcvs	0x0072505f
    3394:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3398:	4957535f 	ldmdbmi	r7, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    339c:	4e303245 	cdpmi	2, 3, cr3, cr0, cr5, {2}
    33a0:	5f495753 	svcpl	0x00495753
    33a4:	636f7250 	cmnvs	pc, #80, 4
    33a8:	5f737365 	svcpl	0x00737365
    33ac:	76726553 			; <UNDEFINED> instruction: 0x76726553
    33b0:	6a656369 	bvs	195c15c <_bss_end+0x194b0dc>
    33b4:	31526a6a 	cmpcc	r2, sl, ror #20
    33b8:	57535431 	smmlarpl	r3, r1, r4, r5
    33bc:	65525f49 	ldrbvs	r5, [r2, #-3913]	; 0xfffff0b7
    33c0:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
    33c4:	65724300 	ldrbvs	r4, [r2, #-768]!	; 0xfffffd00
    33c8:	5f657461 	svcpl	0x00657461
    33cc:	6e69614d 	powvsem	f6, f1, #5.0
    33d0:	6f72505f 	svcvs	0x0072505f
    33d4:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    33d8:	69775300 	ldmdbvs	r7!, {r8, r9, ip, lr}^
    33dc:	5f686374 	svcpl	0x00686374
    33e0:	4e006f54 	mcrmi	15, 0, r6, cr0, cr4, {2}
    33e4:	5f495753 	svcpl	0x00495753
    33e8:	656c6946 	strbvs	r6, [ip, #-2374]!	; 0xfffff6ba
    33ec:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    33f0:	535f6d65 	cmppl	pc, #6464	; 0x1940
    33f4:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    33f8:	49006563 	stmdbmi	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
    33fc:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    3400:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    3404:	315f676e 	cmpcc	pc, lr, ror #14
    3408:	51524900 	cmppl	r2, r0, lsl #18
    340c:	756f535f 	strbvc	r5, [pc, #-863]!	; 30b5 <CPSR_IRQ_INHIBIT+0x3035>
    3410:	00656372 	rsbeq	r6, r5, r2, ror r3
    3414:	61766e49 	cmnvs	r6, r9, asr #28
    3418:	5f64696c 	svcpl	0x0064696c
    341c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    3420:	4900656c 	stmdbmi	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    3424:	505f5152 	subspl	r5, pc, r2, asr r1	; <UNPREDICTABLE>
    3428:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    342c:	325f676e 	subscc	r6, pc, #28835840	; 0x1b80000
    3430:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    3434:	00305f4f 	eorseq	r5, r0, pc, asr #30
    3438:	4f495047 	svcmi	0x00495047
    343c:	4700315f 	smlsdmi	r0, pc, r1, r3	; <UNPREDICTABLE>
    3440:	5f4f4950 	svcpl	0x004f4950
    3444:	50470032 	subpl	r0, r7, r2, lsr r0
    3448:	335f4f49 	cmpcc	pc, #292	; 0x124
    344c:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    3450:	4449505f 	strbmi	r5, [r9], #-95	; 0xffffffa1
    3454:	73694400 	cmnvc	r9, #0, 8
    3458:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    345c:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    3460:	495f6369 	ldmdbmi	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    3464:	5f005152 	svcpl	0x00005152
    3468:	36314e5a 			; <UNDEFINED> instruction: 0x36314e5a
    346c:	6f725043 	svcvs	0x00725043
    3470:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3474:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3478:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    347c:	76453443 	strbvc	r3, [r5], -r3, asr #8
    3480:	756f7300 	strbvc	r7, [pc, #-768]!	; 3188 <CPSR_IRQ_INHIBIT+0x3108>
    3484:	5f656372 	svcpl	0x00656372
    3488:	00786469 	rsbseq	r6, r8, r9, ror #8
    348c:	5f515249 	svcpl	0x00515249
    3490:	61736944 	cmnvs	r3, r4, asr #18
    3494:	5f656c62 	svcpl	0x00656c62
    3498:	52490031 	subpl	r0, r9, #49	; 0x31
    349c:	69445f51 	stmdbvs	r4, {r0, r4, r6, r8, r9, sl, fp, ip, lr}^
    34a0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    34a4:	00325f65 	eorseq	r5, r2, r5, ror #30
    34a8:	5f415750 	svcpl	0x00415750
    34ac:	57500030 	smmlarpl	r0, r0, r0, r0
    34b0:	00315f41 	eorseq	r5, r1, r1, asr #30
    34b4:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    34b8:	552f632f 	strpl	r6, [pc, #-815]!	; 3191 <CPSR_IRQ_INHIBIT+0x3111>
    34bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    34c0:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    34c4:	6f442f61 	svcvs	0x00442f61
    34c8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    34cc:	2f73746e 	svccs	0x0073746e
    34d0:	6f72655a 	svcvs	0x0072655a
    34d4:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    34d8:	6178652f 	cmnvs	r8, pc, lsr #10
    34dc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    34e0:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    34e4:	4332492d 	teqmi	r2, #737280	; 0xb4000
    34e8:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    34ec:	2f6c656e 	svccs	0x006c656e
    34f0:	2f637273 	svccs	0x00637273
    34f4:	6e69616d 	powvsez	f6, f1, #5.0
    34f8:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
    34fc:	67615000 	strbvs	r5, [r1, -r0]!
    3500:	756f4365 	strbvc	r4, [pc, #-869]!	; 31a3 <CPSR_IRQ_INHIBIT+0x3123>
    3504:	5000746e 	andpl	r7, r0, lr, ror #8
    3508:	6e696761 	cdpvs	7, 6, cr6, cr9, cr1, {3}
    350c:	6d654d67 	stclvs	13, cr4, [r5, #-412]!	; 0xfffffe64
    3510:	5379726f 	cmnpl	r9, #-268435450	; 0xf0000006
    3514:	00657a69 	rsbeq	r7, r5, r9, ror #20
    3518:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    351c:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    3520:	656b5f00 	strbvs	r5, [fp, #-3840]!	; 0xfffff100
    3524:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3528:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    352c:	6f4c006e 	svcvs	0x004c006e
    3530:	6d654d77 	stclvs	13, cr4, [r5, #-476]!	; 0xfffffe24
    3534:	0079726f 	rsbseq	r7, r9, pc, ror #4
    3538:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    353c:	6f6d654d 	svcvs	0x006d654d
    3540:	68007972 	stmdavs	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    3544:	00327264 	eorseq	r7, r2, r4, ror #4
    3548:	6f6c6c41 	svcvs	0x006c6c41
    354c:	61505f63 	cmpvs	r0, r3, ror #30
    3550:	46006567 	strmi	r6, [r0], -r7, ror #10
    3554:	5f656572 	svcpl	0x00656572
    3558:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    355c:	72614d00 	rsbvc	r4, r1, #0, 26
    3560:	506d006b 	rsbpl	r0, sp, fp, rrx
    3564:	5f656761 	svcpl	0x00656761
    3568:	6d746942 			; <UNDEFINED> instruction: 0x6d746942
    356c:	5f007061 	svcpl	0x00007061
    3570:	424f4c47 	submi	r4, pc, #18176	; 0x4700
    3574:	5f5f4c41 	svcpl	0x005f4c41
    3578:	5f627573 	svcpl	0x00627573
    357c:	4b735f49 	blmi	1cdb2a8 <_bss_end+0x1cca228>
    3580:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3584:	6d654d6c 	stclvs	13, cr4, [r5, #-432]!	; 0xfffffe50
    3588:	75686300 	strbvc	r6, [r8, #-768]!	; 0xfffffd00
    358c:	5f006b6e 	svcpl	0x00006b6e
    3590:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    3594:	67615043 	strbvs	r5, [r1, -r3, asr #32]!
    3598:	614d5f65 	cmpvs	sp, r5, ror #30
    359c:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    35a0:	41303172 	teqmi	r0, r2, ror r1
    35a4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    35a8:	6761505f 			; <UNDEFINED> instruction: 0x6761505f
    35ac:	00764565 	rsbseq	r4, r6, r5, ror #10
    35b0:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    35b4:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    35b8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    35bc:	6165485f 	cmnvs	r5, pc, asr r8
    35c0:	614d5f70 	hvcvs	54768	; 0xd5f0
    35c4:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    35c8:	45324372 	ldrmi	r4, [r2, #-882]!	; 0xfffffc8e
    35cc:	5a5f0076 	bpl	17c37ac <_bss_end+0x17b272c>
    35d0:	4333314e 	teqmi	r3, #-2147483629	; 0x80000013
    35d4:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    35d8:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    35dc:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    35e0:	72614d34 	rsbvc	r4, r1, #52, 26	; 0xd00
    35e4:	626a456b 	rsbvs	r4, sl, #448790528	; 0x1ac00000
    35e8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    35ec:	50433331 	subpl	r3, r3, r1, lsr r3
    35f0:	5f656761 	svcpl	0x00656761
    35f4:	616e614d 	cmnvs	lr, sp, asr #2
    35f8:	43726567 	cmnmi	r2, #432013312	; 0x19c00000
    35fc:	00764534 	rsbseq	r4, r6, r4, lsr r5
    3600:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3604:	552f632f 	strpl	r6, [pc, #-815]!	; 32dd <CPSR_IRQ_INHIBIT+0x325d>
    3608:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    360c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3610:	6f442f61 	svcvs	0x00442f61
    3614:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3618:	2f73746e 	svccs	0x0073746e
    361c:	6f72655a 	svcvs	0x0072655a
    3620:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3624:	6178652f 	cmnvs	r8, pc, lsr #10
    3628:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    362c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3630:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3634:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3638:	2f6c656e 	svccs	0x006c656e
    363c:	2f637273 	svccs	0x00637273
    3640:	6f6d656d 	svcvs	0x006d656d
    3644:	6b2f7972 	blvs	be1c14 <_bss_end+0xbd0b94>
    3648:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    364c:	65685f6c 	strbvs	r5, [r8, #-3948]!	; 0xfffff094
    3650:	632e7061 			; <UNDEFINED> instruction: 0x632e7061
    3654:	5f007070 	svcpl	0x00007070
    3658:	33314e5a 	teqcc	r1, #1440	; 0x5a0
    365c:	67615043 	strbvs	r5, [r1, -r3, asr #32]!
    3660:	614d5f65 	cmpvs	sp, r5, ror #30
    3664:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    3668:	72463972 	subvc	r3, r6, #1867776	; 0x1c8000
    366c:	505f6565 	subspl	r6, pc, r5, ror #10
    3670:	45656761 	strbmi	r6, [r5, #-1889]!	; 0xfffff89f
    3674:	5043006a 	subpl	r0, r3, sl, rrx
    3678:	5f656761 	svcpl	0x00656761
    367c:	616e614d 	cmnvs	lr, sp, asr #2
    3680:	00726567 	rsbseq	r6, r2, r7, ror #10
    3684:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3688:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    368c:	4c475f00 	mcrrmi	15, 0, r5, r7, cr0
    3690:	4c41424f 	sfmmi	f4, 2, [r1], {79}	; 0x4f
    3694:	75735f5f 	ldrbvc	r5, [r3, #-3935]!	; 0xfffff0a1
    3698:	5f495f62 	svcpl	0x00495f62
    369c:	67615073 			; <UNDEFINED> instruction: 0x67615073
    36a0:	614d5f65 	cmpvs	sp, r5, ror #30
    36a4:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    36a8:	6d2f0072 	stcvs	0, cr0, [pc, #-456]!	; 34e8 <CPSR_IRQ_INHIBIT+0x3468>
    36ac:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    36b0:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    36b4:	4b2f7372 	blmi	be0484 <_bss_end+0xbcf404>
    36b8:	2f616275 	svccs	0x00616275
    36bc:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    36c0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    36c4:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    36c8:	614d6f72 	hvcvs	55026	; 0xd6f2
    36cc:	652f6574 	strvs	r6, [pc, #-1396]!	; 3160 <CPSR_IRQ_INHIBIT+0x30e0>
    36d0:	706d6178 	rsbvc	r6, sp, r8, ror r1
    36d4:	2f73656c 	svccs	0x0073656c
    36d8:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    36dc:	6b2f4332 	blvs	bd43ac <_bss_end+0xbc332c>
    36e0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    36e4:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    36e8:	656d2f63 	strbvs	r2, [sp, #-3939]!	; 0xfffff09d
    36ec:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    36f0:	6761702f 	strbvs	r7, [r1, -pc, lsr #32]!
    36f4:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    36f8:	75007070 	strvc	r7, [r0, #-112]	; 0xffffff90
    36fc:	00646573 	rsbeq	r6, r4, r3, ror r5
    3700:	314e5a5f 	cmpcc	lr, pc, asr sl
    3704:	61504333 	cmpvs	r0, r3, lsr r3
    3708:	4d5f6567 	cfldr64mi	mvdx6, [pc, #-412]	; 3574 <CPSR_IRQ_INHIBIT+0x34f4>
    370c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    3710:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    3714:	66007645 	strvs	r7, [r0], -r5, asr #12
    3718:	70636e75 	rsbvc	r6, r3, r5, ror lr
    371c:	69007274 	stmdbvs	r0, {r2, r4, r5, r6, r9, ip, sp, lr}
    3720:	69665f73 	stmdbvs	r6!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3724:	5f747372 	svcpl	0x00747372
    3728:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    372c:	6c6c4100 	stfvse	f4, [ip], #-0
    3730:	543c636f 	ldrtpl	r6, [ip], #-879	; 0xfffffc91
    3734:	6b736154 	blvs	1cdbc8c <_bss_end+0x1ccac0c>
    3738:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    373c:	3e746375 	mrccc	3, 3, r6, cr4, cr5, {3}
    3740:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3744:	50433631 	subpl	r3, r3, r1, lsr r6
    3748:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    374c:	4d5f7373 	ldclmi	3, cr7, [pc, #-460]	; 3588 <CPSR_IRQ_INHIBIT+0x3508>
    3750:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    3754:	32437265 	subcc	r7, r3, #1342177286	; 0x50000006
    3758:	5f007645 	svcpl	0x00007645
    375c:	30324e5a 	eorscc	r4, r2, sl, asr lr
    3760:	72654b43 	rsbvc	r4, r5, #68608	; 0x10c00
    3764:	5f6c656e 	svcpl	0x006c656e
    3768:	70616548 	rsbvc	r6, r1, r8, asr #10
    376c:	6e614d5f 	mcrvs	13, 3, r4, cr1, cr15, {2}
    3770:	72656761 	rsbvc	r6, r5, #25427968	; 0x1840000
    3774:	6c6c4135 	stfvse	f4, [ip], #-212	; 0xffffff2c
    3778:	3149636f 	cmpcc	r9, pc, ror #6
    377c:	72504338 	subsvc	r4, r0, #56, 6	; 0xe0000000
    3780:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3784:	694c5f73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3788:	4e5f7473 	mrcmi	4, 2, r7, cr15, cr3, {3}
    378c:	4565646f 	strbmi	r6, [r5, #-1135]!	; 0xfffffb91
    3790:	5f545045 	svcpl	0x00545045
    3794:	475f0076 			; <UNDEFINED> instruction: 0x475f0076
    3798:	41424f4c 	cmpmi	r2, ip, asr #30
    379c:	735f5f4c 	cmpvc	pc, #76, 30	; 0x130
    37a0:	495f6275 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    37a4:	7250735f 	subsvc	r7, r0, #2080374785	; 0x7c000001
    37a8:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    37ac:	72674d73 	rsbvc	r4, r7, #7360	; 0x1cc0
    37b0:	72617400 	rsbvc	r7, r1, #0, 8
    37b4:	00746567 	rsbseq	r6, r4, r7, ror #10
    37b8:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    37bc:	552f632f 	strpl	r6, [pc, #-815]!	; 3495 <CPSR_IRQ_INHIBIT+0x3415>
    37c0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    37c4:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    37c8:	6f442f61 	svcvs	0x00442f61
    37cc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    37d0:	2f73746e 	svccs	0x0073746e
    37d4:	6f72655a 	svcvs	0x0072655a
    37d8:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    37dc:	6178652f 	cmnvs	r8, pc, lsr #10
    37e0:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    37e4:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    37e8:	4332492d 	teqmi	r2, #737280	; 0xb4000
    37ec:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    37f0:	2f6c656e 	svccs	0x006c656e
    37f4:	2f637273 	svccs	0x00637273
    37f8:	636f7270 	cmnvs	pc, #112, 4
    37fc:	2f737365 	svccs	0x00737365
    3800:	636f7270 	cmnvs	pc, #112, 4
    3804:	5f737365 	svcpl	0x00737365
    3808:	616e616d 	cmnvs	lr, sp, ror #2
    380c:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    3810:	00707063 	rsbseq	r7, r0, r3, rrx
    3814:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    3818:	00746e65 	rsbseq	r6, r4, r5, ror #28
    381c:	6f6c6c41 	svcvs	0x006c6c41
    3820:	50433c63 	subpl	r3, r3, r3, ror #24
    3824:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3828:	4c5f7373 	mrrcmi	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
    382c:	5f747369 	svcpl	0x00747369
    3830:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
    3834:	6966003e 	stmdbvs	r6!, {r1, r2, r3, r4, r5}^
    3838:	7000656c 	andvc	r6, r0, ip, ror #10
    383c:	6e636f72 	mcrvs	15, 3, r6, cr3, cr2, {3}
    3840:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3844:	324e5a5f 	subcc	r5, lr, #389120	; 0x5f000
    3848:	654b4330 	strbvs	r4, [fp, #-816]	; 0xfffffcd0
    384c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3850:	6165485f 	cmnvs	r5, pc, asr r8
    3854:	614d5f70 	hvcvs	54768	; 0xd5f0
    3858:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    385c:	6c413572 	cfstr64vs	mvdx3, [r1], {114}	; 0x72
    3860:	49636f6c 	stmdbmi	r3!, {r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    3864:	54543231 	ldrbpl	r3, [r4], #-561	; 0xfffffdcf
    3868:	5f6b7361 	svcpl	0x006b7361
    386c:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
    3870:	45457463 	strbmi	r7, [r5, #-1123]	; 0xfffffb9d
    3874:	765f5450 			; <UNDEFINED> instruction: 0x765f5450
    3878:	63767300 	cmnvs	r6, #0, 6
    387c:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    3880:	6e6d2f00 	cdpvs	15, 6, cr2, cr13, cr0, {0}
    3884:	2f632f74 	svccs	0x00632f74
    3888:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    388c:	754b2f73 	strbvc	r2, [fp, #-3955]	; 0xfffff08d
    3890:	442f6162 	strtmi	r6, [pc], #-354	; 3898 <CPSR_IRQ_INHIBIT+0x3818>
    3894:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    3898:	73746e65 	cmnvc	r4, #1616	; 0x650
    389c:	72655a2f 	rsbvc	r5, r5, #192512	; 0x2f000
    38a0:	74614d6f 	strbtvc	r4, [r1], #-3439	; 0xfffff291
    38a4:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    38a8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    38ac:	312f7365 			; <UNDEFINED> instruction: 0x312f7365
    38b0:	32492d39 	subcc	r2, r9, #3648	; 0xe40
    38b4:	656b2f43 	strbvs	r2, [fp, #-3907]!	; 0xfffff0bd
    38b8:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    38bc:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    38c0:	6f72702f 	svcvs	0x0072702f
    38c4:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    38c8:	6977732f 	ldmdbvs	r7!, {r0, r1, r2, r3, r5, r8, r9, ip, sp, lr}^
    38cc:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
    38d0:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
    38d4:	53412055 	movtpl	r2, #4181	; 0x1055
    38d8:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
    38dc:	6d2f0038 	stcvs	0, cr0, [pc, #-224]!	; 3804 <CPSR_IRQ_INHIBIT+0x3784>
    38e0:	632f746e 			; <UNDEFINED> instruction: 0x632f746e
    38e4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
    38e8:	4b2f7372 	blmi	be06b8 <_bss_end+0xbcf638>
    38ec:	2f616275 	svccs	0x00616275
    38f0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    38f4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    38f8:	655a2f73 	ldrbvs	r2, [sl, #-3955]	; 0xfffff08d
    38fc:	614d6f72 	hvcvs	55026	; 0xd6f2
    3900:	652f6574 	strvs	r6, [pc, #-1396]!	; 3394 <CPSR_IRQ_INHIBIT+0x3314>
    3904:	706d6178 	rsbvc	r6, sp, r8, ror r1
    3908:	2f73656c 	svccs	0x0073656c
    390c:	492d3931 	pushmi	{r0, r4, r5, r8, fp, ip, sp}
    3910:	6b2f4332 	blvs	bd45e0 <_bss_end+0xbc3560>
    3914:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    3918:	72732f6c 	rsbsvc	r2, r3, #108, 30	; 0x1b0
    391c:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    3920:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    3924:	74630073 	strbtvc	r0, [r3], #-115	; 0xffffff8d
    3928:	705f726f 	subsvc	r7, pc, pc, ror #4
    392c:	5f007274 	svcpl	0x00007274
    3930:	5f737362 	svcpl	0x00737362
    3934:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    3938:	5f5f0074 	svcpl	0x005f0074
    393c:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
    3940:	444e455f 	strbmi	r4, [lr], #-1375	; 0xfffffaa1
    3944:	5f005f5f 	svcpl	0x00005f5f
    3948:	4f54435f 	svcmi	0x0054435f
    394c:	494c5f52 	stmdbmi	ip, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
    3950:	5f5f5453 	svcpl	0x005f5453
    3954:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 395c <CPSR_IRQ_INHIBIT+0x38dc>
    3958:	5f524f54 	svcpl	0x00524f54
    395c:	5f444e45 	svcpl	0x00444e45
    3960:	635f005f 	cmpvs	pc, #95	; 0x5f
    3964:	735f7070 	cmpvc	pc, #112	; 0x70
    3968:	64747568 	ldrbtvs	r7, [r4], #-1384	; 0xfffffa98
    396c:	006e776f 	rsbeq	r7, lr, pc, ror #14
    3970:	7373625f 	cmnvc	r3, #-268435451	; 0xf0000005
    3974:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    3978:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 3980 <CPSR_IRQ_INHIBIT+0x3900>
    397c:	5f524f54 	svcpl	0x00524f54
    3980:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    3984:	64005f5f 	strvs	r5, [r0], #-3935	; 0xfffff0a1
    3988:	5f726f74 	svcpl	0x00726f74
    398c:	00727470 	rsbseq	r7, r2, r0, ror r4
    3990:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3994:	552f632f 	strpl	r6, [pc, #-815]!	; 366d <CPSR_IRQ_INHIBIT+0x35ed>
    3998:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    399c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    39a0:	6f442f61 	svcvs	0x00442f61
    39a4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    39a8:	2f73746e 	svccs	0x0073746e
    39ac:	6f72655a 	svcvs	0x0072655a
    39b0:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    39b4:	6178652f 	cmnvs	r8, pc, lsr #10
    39b8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    39bc:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    39c0:	4332492d 	teqmi	r2, #737280	; 0xb4000
    39c4:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    39c8:	2f6c656e 	svccs	0x006c656e
    39cc:	2f637273 	svccs	0x00637273
    39d0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    39d4:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
    39d8:	00707063 	rsbseq	r7, r0, r3, rrx
    39dc:	735f635f 	cmpvc	pc, #2080374785	; 0x7c000001
    39e0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    39e4:	5f007075 	svcpl	0x00007075
    39e8:	5f707063 	svcpl	0x00707063
    39ec:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    39f0:	00707574 	rsbseq	r7, r0, r4, ror r5
    39f4:	74706e66 	ldrbtvc	r6, [r0], #-3686	; 0xfffff19a
    39f8:	6e720072 	mrcvs	0, 3, r0, cr2, cr2, {3}
    39fc:	6e006664 	cfmadd32vs	mvax3, mvfx6, mvfx0, mvfx4
    3a00:	75626d75 	strbvc	r6, [r2, #-3445]!	; 0xfffff28b
    3a04:	5a5f0066 	bpl	17c3ba4 <_bss_end+0x17b2b24>
    3a08:	6f725039 	svcvs	0x00725039
    3a0c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3a10:	0076335f 	rsbseq	r3, r6, pc, asr r3
    3a14:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3a18:	552f632f 	strpl	r6, [pc, #-815]!	; 36f1 <CPSR_IRQ_INHIBIT+0x3671>
    3a1c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3a20:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3a24:	6f442f61 	svcvs	0x00442f61
    3a28:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3a2c:	2f73746e 	svccs	0x0073746e
    3a30:	6f72655a 	svcvs	0x0072655a
    3a34:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3a38:	6178652f 	cmnvs	r8, pc, lsr #10
    3a3c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3a40:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3a44:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3a48:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3a4c:	2f6c656e 	svccs	0x006c656e
    3a50:	2f637273 	svccs	0x00637273
    3a54:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    3a58:	6f72705f 	svcvs	0x0072705f
    3a5c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3a60:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
    3a64:	5f007070 	svcpl	0x00007070
    3a68:	7250395a 	subsvc	r3, r0, #1474560	; 0x168000
    3a6c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3a70:	76345f73 	shsub16vc	r5, r4, r3
    3a74:	395a5f00 	ldmdbcc	sl, {r8, r9, sl, fp, ip, lr}^
    3a78:	636f7250 	cmnvs	pc, #80, 4
    3a7c:	5f737365 	svcpl	0x00737365
    3a80:	50007631 	andpl	r7, r0, r1, lsr r6
    3a84:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3a88:	315f7373 	cmpcc	pc, r3, ror r3	; <UNPREDICTABLE>
    3a8c:	6f725000 	svcvs	0x00725000
    3a90:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3a94:	5000325f 	andpl	r3, r0, pc, asr r2
    3a98:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    3a9c:	335f7373 	cmpcc	pc, #-872415231	; 0xcc000001
    3aa0:	6f725000 	svcvs	0x00725000
    3aa4:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3aa8:	5f00355f 	svcpl	0x0000355f
    3aac:	7250395a 	subsvc	r3, r0, #1474560	; 0x168000
    3ab0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3ab4:	76355f73 	shsub16vc	r5, r5, r3
    3ab8:	62647200 	rsbvs	r7, r4, #0, 4
    3abc:	6d006675 	stcvs	6, cr6, [r0, #-468]	; 0xfffffe2c
    3ac0:	61737365 	cmnvs	r3, r5, ror #6
    3ac4:	5f006567 	svcpl	0x00006567
    3ac8:	7250395a 	subsvc	r3, r0, #1474560	; 0x168000
    3acc:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    3ad0:	76325f73 	shsub16vc	r5, r2, r3
    3ad4:	6f725000 	svcvs	0x00725000
    3ad8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    3adc:	6f00345f 	svcvs	0x0000345f
    3ae0:	006e6570 	rsbeq	r6, lr, r0, ror r5
    3ae4:	67365a5f 			; <UNDEFINED> instruction: 0x67365a5f
    3ae8:	69707465 	ldmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    3aec:	66007664 	strvs	r7, [r0], -r4, ror #12
    3af0:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
    3af4:	00656d61 	rsbeq	r6, r5, r1, ror #26
    3af8:	69355a5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, fp, ip, lr}
    3afc:	6c74636f 	ldclvs	3, cr6, [r4], #-444	; 0xfffffe44
    3b00:	4e36316a 	rsfmisz	f3, f6, #2.0
    3b04:	74434f49 	strbvc	r4, [r3], #-3913	; 0xfffff0b7
    3b08:	704f5f6c 	subvc	r5, pc, ip, ror #30
    3b0c:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    3b10:	506e6f69 	rsbpl	r6, lr, r9, ror #30
    3b14:	5a5f0076 	bpl	17c3cf4 <_bss_end+0x17b2c74>
    3b18:	65706f34 	ldrbvs	r6, [r0, #-3892]!	; 0xfffff0cc
    3b1c:	634b506e 	movtvs	r5, #45166	; 0xb06e
    3b20:	464e3531 			; <UNDEFINED> instruction: 0x464e3531
    3b24:	5f656c69 	svcpl	0x00656c69
    3b28:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
    3b2c:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 3b34 <CPSR_IRQ_INHIBIT+0x3ab4>
    3b30:	5a5f0065 	bpl	17c3ccc <_bss_end+0x17b2c4c>
    3b34:	69727735 	ldmdbvs	r2!, {r0, r2, r4, r5, r8, r9, sl, ip, sp, lr}^
    3b38:	506a6574 	rsbpl	r6, sl, r4, ror r5
    3b3c:	006a634b 	rsbeq	r6, sl, fp, asr #6
    3b40:	61726170 	cmnvs	r2, r0, ror r1
    3b44:	5a5f006d 	bpl	17c3d00 <_bss_end+0x17b2c80>
    3b48:	6f6c6335 	svcvs	0x006c6335
    3b4c:	006a6573 	rsbeq	r6, sl, r3, ror r5
    3b50:	74636f69 	strbtvc	r6, [r3], #-3945	; 0xfffff097
    3b54:	6572006c 	ldrbvs	r0, [r2, #-108]!	; 0xffffff94
    3b58:	646f6374 	strbtvs	r6, [pc], #-884	; 3b60 <CPSR_IRQ_INHIBIT+0x3ae0>
    3b5c:	5a5f0065 	bpl	17c3cf8 <_bss_end+0x17b2c78>
    3b60:	61657234 	cmnvs	r5, r4, lsr r2
    3b64:	63506a64 	cmpvs	r0, #100, 20	; 0x64000
    3b68:	6472006a 	ldrbtvs	r0, [r2], #-106	; 0xffffff96
    3b6c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    3b70:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3b74:	552f632f 	strpl	r6, [pc, #-815]!	; 384d <CPSR_IRQ_INHIBIT+0x37cd>
    3b78:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3b7c:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3b80:	6f442f61 	svcvs	0x00442f61
    3b84:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3b88:	2f73746e 	svccs	0x0073746e
    3b8c:	6f72655a 	svcvs	0x0072655a
    3b90:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3b94:	6178652f 	cmnvs	r8, pc, lsr #10
    3b98:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3b9c:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3ba0:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3ba4:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    3ba8:	2f62696c 	svccs	0x0062696c
    3bac:	2f637273 	svccs	0x00637273
    3bb0:	66647473 			; <UNDEFINED> instruction: 0x66647473
    3bb4:	2e656c69 	cdpcs	12, 6, cr6, cr5, cr9, {3}
    3bb8:	00707063 	rsbseq	r7, r0, r3, rrx
    3bbc:	70746567 	rsbsvc	r6, r4, r7, ror #10
    3bc0:	6f006469 	svcvs	0x00006469
    3bc4:	61726570 	cmnvs	r2, r0, ror r5
    3bc8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3bcc:	6e727700 	cdpvs	7, 7, cr7, cr2, cr0, {0}
    3bd0:	63006d75 	movwvs	r6, #3445	; 0xd75
    3bd4:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    3bd8:	365a5f00 	ldrbcc	r5, [sl], -r0, lsl #30
    3bdc:	6c727473 	cfldrdvs	mvd7, [r2], #-460	; 0xfffffe34
    3be0:	4b506e65 	blmi	141f57c <_bss_end+0x140e4fc>
    3be4:	7a620063 	bvc	1883d78 <_bss_end+0x1872cf8>
    3be8:	006f7265 	rsbeq	r7, pc, r5, ror #4
    3bec:	746e6d2f 	strbtvc	r6, [lr], #-3375	; 0xfffff2d1
    3bf0:	552f632f 	strpl	r6, [pc, #-815]!	; 38c9 <CPSR_IRQ_INHIBIT+0x3849>
    3bf4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3bf8:	62754b2f 	rsbsvs	r4, r5, #48128	; 0xbc00
    3bfc:	6f442f61 	svcvs	0x00442f61
    3c00:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    3c04:	2f73746e 	svccs	0x0073746e
    3c08:	6f72655a 	svcvs	0x0072655a
    3c0c:	6574614d 	ldrbvs	r6, [r4, #-333]!	; 0xfffffeb3
    3c10:	6178652f 	cmnvs	r8, pc, lsr #10
    3c14:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3c18:	39312f73 	ldmdbcc	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}
    3c1c:	4332492d 	teqmi	r2, #737280	; 0xb4000
    3c20:	6474732f 	ldrbtvs	r7, [r4], #-815	; 0xfffffcd1
    3c24:	2f62696c 	svccs	0x0062696c
    3c28:	2f637273 	svccs	0x00637273
    3c2c:	73647473 	cmnvc	r4, #1929379840	; 0x73000000
    3c30:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    3c34:	70632e67 	rsbvc	r2, r3, r7, ror #28
    3c38:	5a5f0070 	bpl	17c3e00 <_bss_end+0x17b2d80>
    3c3c:	657a6235 	ldrbvs	r6, [sl, #-565]!	; 0xfffffdcb
    3c40:	76506f72 	usub16vc	r6, r0, r2
    3c44:	5a5f0069 	bpl	17c3df0 <_bss_end+0x17b2d70>
    3c48:	6f746134 	svcvs	0x00746134
    3c4c:	634b5069 	movtvs	r5, #45161	; 0xb069
    3c50:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    3c54:	00747364 	rsbseq	r7, r4, r4, ror #6
    3c58:	6d365a5f 	vldmdbvs	r6!, {s10-s104}
    3c5c:	70636d65 	rsbvc	r6, r3, r5, ror #26
    3c60:	764b5079 			; <UNDEFINED> instruction: 0x764b5079
    3c64:	00697650 	rsbeq	r7, r9, r0, asr r6
    3c68:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
    3c6c:	73007970 	movwvc	r7, #2416	; 0x970
    3c70:	656c7274 	strbvs	r7, [ip, #-628]!	; 0xfffffd8c
    3c74:	5a5f006e 	bpl	17c3e34 <_bss_end+0x17b2db4>
    3c78:	72747337 	rsbsvc	r7, r4, #-603979776	; 0xdc000000
    3c7c:	706d636e 	rsbvc	r6, sp, lr, ror #6
    3c80:	53634b50 	cmnpl	r3, #80, 22	; 0x14000
    3c84:	00695f30 	rsbeq	r5, r9, r0, lsr pc
    3c88:	696f7461 	stmdbvs	pc!, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    3c8c:	375a5f00 	ldrbcc	r5, [sl, -r0, lsl #30]
    3c90:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
    3c94:	50797063 	rsbspl	r7, r9, r3, rrx
    3c98:	634b5063 	movtvs	r5, #45155	; 0xb063
    3c9c:	74730069 	ldrbtvc	r0, [r3], #-105	; 0xffffff97
    3ca0:	6d636e72 	stclvs	14, cr6, [r3, #-456]!	; 0xfffffe38
    3ca4:	74730070 	ldrbtvc	r0, [r3], #-112	; 0xffffff90
    3ca8:	70636e72 	rsbvc	r6, r3, r2, ror lr
    3cac:	656d0079 	strbvs	r0, [sp, #-121]!	; 0xffffff87
    3cb0:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    3cb4:	73656400 	cmnvc	r5, #0, 8
    3cb8:	656d0074 	strbvs	r0, [sp, #-116]!	; 0xffffff8c
    3cbc:	6372736d 	cmnvs	r2, #-1275068415	; 0xb4000001
    3cc0:	345a5f00 	ldrbcc	r5, [sl], #-3840	; 0xfffff100
    3cc4:	616f7469 	cmnvs	pc, r9, ror #8
    3cc8:	6a63506a 	bvs	18d7e78 <_bss_end+0x18c6df8>
    3ccc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3cd0:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    3cd4:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    3cd8:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    3cdc:	5f6e6f69 	svcpl	0x006e6f69
    3ce0:	31727470 	cmncc	r2, r0, ror r4
    3ce4:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    3ce8:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    3cec:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    3cf0:	34437274 	strbcc	r7, [r3], #-628	; 0xfffffd8c
    3cf4:	534b5245 	movtpl	r5, #45637	; 0xb245
    3cf8:	5f005f30 	svcpl	0x00005f30
    3cfc:	65725f4d 	ldrbvs	r5, [r2, #-3917]!	; 0xfffff0b3
    3d00:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    3d04:	63770065 	cmnvs	r7, #101	; 0x65
    3d08:	5f726168 	svcpl	0x00726168
    3d0c:	5f5f0074 	svcpl	0x005f0074
    3d10:	31787863 	cmncc	r8, r3, ror #16
    3d14:	69730031 	ldmdbvs	r3!, {r0, r4, r5}^
    3d18:	745f657a 	ldrbvc	r6, [pc], #-1402	; 3d20 <CPSR_IRQ_INHIBIT+0x3ca0>
    3d1c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3d20:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    3d24:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    3d28:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    3d2c:	5f6e6f69 	svcpl	0x006e6f69
    3d30:	31727470 	cmncc	r2, r0, ror r4
    3d34:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    3d38:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    3d3c:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    3d40:	34437274 	strbcc	r7, [r3], #-628	; 0xfffffd8c
    3d44:	5f007645 	svcpl	0x00007645
    3d48:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    3d4c:	5f5f3531 	svcpl	0x005f3531
    3d50:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3d54:	6f697470 	svcvs	0x00697470
    3d58:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    3d5c:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    3d60:	70656378 	rsbvc	r6, r5, r8, ror r3
    3d64:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3d68:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    3d6c:	4d5f3031 	ldclmi	0, cr3, [pc, #-196]	; 3cb0 <CPSR_IRQ_INHIBIT+0x3c30>
    3d70:	6c65725f 	sfmvs	f7, 2, [r5], #-380	; 0xfffffe84
    3d74:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    3d78:	5f007645 	svcpl	0x00007645
    3d7c:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    3d80:	5f5f3531 	svcpl	0x005f3531
    3d84:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3d88:	6f697470 	svcvs	0x00697470
    3d8c:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    3d90:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    3d94:	70656378 	rsbvc	r6, r5, r8, ror r3
    3d98:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3d9c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    3da0:	52455361 	subpl	r5, r5, #-2080374783	; 0x84000001
    3da4:	5f30534b 	svcpl	0x0030534b
    3da8:	735f5f00 	cmpvc	pc, #0, 30
    3dac:	70706177 	rsbsvc	r6, r0, r7, ror r1
    3db0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    3db4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    3db8:	65645f68 	strbvs	r5, [r4, #-3944]!	; 0xfffff098
    3dbc:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
    3dc0:	5a5f0073 	bpl	17c3f94 <_bss_end+0x17b2f14>
    3dc4:	37317453 			; <UNDEFINED> instruction: 0x37317453
    3dc8:	68746572 	ldmdavs	r4!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    3dcc:	5f776f72 	svcpl	0x00776f72
    3dd0:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3dd4:	6f697470 	svcvs	0x00697470
    3dd8:	74534e6e 	ldrbvc	r4, [r3], #-3694	; 0xfffff192
    3ddc:	5f5f3531 	svcpl	0x005f3531
    3de0:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3de4:	6f697470 	svcvs	0x00697470
    3de8:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    3dec:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    3df0:	70656378 	rsbvc	r6, r5, r8, ror r3
    3df4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3df8:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    3dfc:	5a5f0045 	bpl	17c3f18 <_bss_end+0x17b2e98>
    3e00:	3174534e 	cmncc	r4, lr, asr #6
    3e04:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 2ed7 <CPSR_IRQ_INHIBIT+0x2e57>
    3e08:	70656378 	rsbvc	r6, r5, r8, ror r3
    3e0c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3e10:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    3e14:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    3e18:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    3e1c:	5f6e6f69 	svcpl	0x006e6f69
    3e20:	43727470 	cmnmi	r2, #112, 8	; 0x70000000
    3e24:	76504534 			; <UNDEFINED> instruction: 0x76504534
    3e28:	74657200 	strbtvc	r7, [r5], #-512	; 0xfffffe00
    3e2c:	776f7268 	strbvc	r7, [pc, -r8, ror #4]!
    3e30:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    3e34:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    3e38:	2f006e6f 	svccs	0x00006e6f
    3e3c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    3e40:	696c2f64 	stmdbvs	ip!, {r2, r5, r6, r8, r9, sl, fp, sp}^
    3e44:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    3e48:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    3e4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3e50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3e54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3e58:	44672d69 	strbtmi	r2, [r7], #-3433	; 0xfffff297
    3e5c:	43374569 	teqmi	r7, #440401920	; 0x1a400000
    3e60:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3e64:	63647473 	cmnvs	r4, #1929379840	; 0x73000000
    3e68:	612d2b2b 			; <UNDEFINED> instruction: 0x612d2b2b
    3e6c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3e70:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3e74:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3e78:	2f37312d 	svccs	0x0037312d
    3e7c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    3e80:	72612f64 	rsbvc	r2, r1, #100, 30	; 0x190
    3e84:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    3e88:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    3e8c:	2f647261 	svccs	0x00647261
    3e90:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3e94:	2b636474 	blcs	18dd06c <_bss_end+0x18cbfec>
    3e98:	696c2f2b 	stmdbvs	ip!, {r0, r1, r3, r5, r8, r9, sl, fp, sp}^
    3e9c:	70757362 	rsbsvc	r7, r5, r2, ror #6
    3ea0:	002b2b63 	eoreq	r2, fp, r3, ror #22
    3ea4:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    3ea8:	5f353174 	svcpl	0x00353174
    3eac:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    3eb0:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    3eb4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    3eb8:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    3ebc:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3ec0:	6f697470 	svcvs	0x00697470
    3ec4:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    3ec8:	77733472 			; <UNDEFINED> instruction: 0x77733472
    3ecc:	52457061 	subpl	r7, r5, #97	; 0x61
    3ed0:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
    3ed4:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    3ed8:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
    3edc:	4d5f003d 	ldclmi	0, cr0, [pc, #-244]	; 3df0 <CPSR_IRQ_INHIBIT+0x3d70>
    3ee0:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    3ee4:	00666572 	rsbeq	r6, r6, r2, ror r5
    3ee8:	616e5a5f 	cmnvs	lr, pc, asr sl
    3eec:	4e47006a 	cdpmi	0, 4, cr0, cr7, cr10, {3}
    3ef0:	2b432055 	blcs	10cc04c <_bss_end+0x10bafcc>
    3ef4:	2034312b 	eorscs	r3, r4, fp, lsr #2
    3ef8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    3efc:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
    3f00:	30313230 	eorscc	r3, r1, r0, lsr r2
    3f04:	20313236 	eorscs	r3, r1, r6, lsr r2
    3f08:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
    3f0c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    3f10:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
    3f14:	616f6c66 	cmnvs	pc, r6, ror #24
    3f18:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    3f1c:	61683d69 	cmnvs	r8, r9, ror #26
    3f20:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
    3f24:	6d72616d 	ldfvse	f6, [r2, #-436]!	; 0xfffffe4c
    3f28:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
    3f2c:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    3f30:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
    3f34:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
    3f38:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
    3f3c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3f40:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
    3f44:	65743576 	ldrbvs	r3, [r4, #-1398]!	; 0xfffffa8a
    3f48:	2070662b 	rsbscs	r6, r0, fp, lsr #12
    3f4c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    3f50:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    3f54:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 3dc4 <CPSR_IRQ_INHIBIT+0x3d44>
    3f58:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    3f5c:	74696369 	strbtvc	r6, [r9], #-873	; 0xfffffc97
    3f60:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    3f64:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    3f68:	2d207365 	stccs	3, cr7, [r0, #-404]!	; 0xfffffe6c
    3f6c:	6e617266 	cdpvs	2, 6, cr7, cr1, cr6, {3}
    3f70:	2d6d6f64 	stclcs	15, cr6, [sp, #-400]!	; 0xfffffe70
    3f74:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
    3f78:	77656e3d 			; <UNDEFINED> instruction: 0x77656e3d
    3f7c:	76706f5f 	uhsaxvc	r6, r0, pc	; <UNPREDICTABLE>
    3f80:	206f6c2e 	rsbcs	r6, pc, lr, lsr #24
    3f84:	7566662d 	strbvc	r6, [r6, #-1581]!	; 0xfffff9d3
    3f88:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    3f8c:	732d6e6f 			; <UNDEFINED> instruction: 0x732d6e6f
    3f90:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    3f94:	20736e6f 	rsbscs	r6, r3, pc, ror #28
    3f98:	6164662d 	cmnvs	r4, sp, lsr #12
    3f9c:	732d6174 			; <UNDEFINED> instruction: 0x732d6174
    3fa0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    3fa4:	00736e6f 	rsbseq	r6, r3, pc, ror #28
    3fa8:	6378657e 	cmnvs	r8, #528482304	; 0x1f800000
    3fac:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    3fb0:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    3fb4:	64007274 	strvs	r7, [r0], #-628	; 0xfffffd8c
    3fb8:	746c6365 	strbtvc	r6, [ip], #-869	; 0xfffffc9b
    3fbc:	28657079 	stmdacs	r5!, {r0, r3, r4, r5, r6, ip, sp, lr}^
    3fc0:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
    3fc4:	29727470 	ldmdbcs	r2!, {r4, r5, r6, sl, ip, sp, lr}^
    3fc8:	6c756e00 	ldclvs	14, cr6, [r5], #-0
    3fcc:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
    3fd0:	5f00745f 	svcpl	0x0000745f
    3fd4:	534b4e5a 	movtpl	r4, #48730	; 0xbe5a
    3fd8:	5f353174 	svcpl	0x00353174
    3fdc:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    3fe0:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    3fe4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    3fe8:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    3fec:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3ff0:	6f697470 	svcvs	0x00697470
    3ff4:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    3ff8:	62766372 	rsbsvs	r6, r6, #-939524095	; 0xc8000001
    3ffc:	5f007645 	svcpl	0x00007645
    4000:	6177735f 	cmnvs	r7, pc, asr r3
    4004:	62617070 	rsbvs	r7, r1, #112	; 0x70
    4008:	645f656c 	ldrbvs	r6, [pc], #-1388	; 4010 <CPSR_IRQ_INHIBIT+0x3f90>
    400c:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    4010:	5f00736c 	svcpl	0x0000736c
    4014:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    4018:	5f5f3531 	svcpl	0x005f3531
    401c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    4020:	6f697470 	svcvs	0x00697470
    4024:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4028:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    402c:	70656378 	rsbvc	r6, r5, r8, ror r3
    4030:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4034:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4038:	5f4d5f39 	svcpl	0x004d5f39
    403c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
    4040:	76456665 	strbvc	r6, [r5], -r5, ror #12
    4044:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    4048:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    404c:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4050:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4054:	5f6e6f69 	svcpl	0x006e6f69
    4058:	31727470 	cmncc	r2, r0, ror r4
    405c:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    4060:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    4064:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    4068:	34447274 	strbcc	r7, [r4], #-628	; 0xfffffd8c
    406c:	5f007645 	svcpl	0x00007645
    4070:	74534e5a 	ldrbvc	r4, [r3], #-3674	; 0xfffff1a6
    4074:	5f5f3531 	svcpl	0x005f3531
    4078:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    407c:	6f697470 	svcvs	0x00697470
    4080:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    4084:	65333172 	ldrvs	r3, [r3, #-370]!	; 0xfffffe8e
    4088:	70656378 	rsbvc	r6, r5, r8, ror r3
    408c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4090:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4094:	4f453443 	svcmi	0x00453443
    4098:	005f3053 	subseq	r3, pc, r3, asr r0	; <UNPREDICTABLE>
    409c:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    40a0:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
    40a4:	6f6f6220 	svcvs	0x006f6220
    40a8:	5f5f006c 	svcpl	0x005f006c
    40ac:	5f756e67 	svcpl	0x00756e67
    40b0:	00787863 	rsbseq	r7, r8, r3, ror #16
    40b4:	4b4e5a5f 	blmi	139aa38 <_bss_end+0x13899b8>
    40b8:	35317453 	ldrcc	r7, [r1, #-1107]!	; 0xfffffbad
    40bc:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    40c0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    40c4:	5f6e6f69 	svcpl	0x006e6f69
    40c8:	31727470 	cmncc	r2, r0, ror r4
    40cc:	63786533 	cmnvs	r8, #213909504	; 0xcc00000
    40d0:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    40d4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    40d8:	5f367274 	svcpl	0x00367274
    40dc:	65675f4d 	strbvs	r5, [r7, #-3917]!	; 0xfffff0b3
    40e0:	00764574 	rsbseq	r4, r6, r4, ror r5
    40e4:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    40e8:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
    40ec:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
    40f0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
    40f4:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
    40f8:	6300746e 	movwvs	r7, #1134	; 0x46e
    40fc:	31726168 	cmncc	r2, r8, ror #2
    4100:	00745f36 	rsbseq	r5, r4, r6, lsr pc
    4104:	78655f5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4108:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    410c:	5f6e6f69 	svcpl	0x006e6f69
    4110:	00727470 	rsbseq	r7, r2, r0, ror r4
    4114:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4118:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    411c:	2f2e2e2f 	svccs	0x002e2e2f
    4120:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4124:	72732f2e 	rsbsvc	r2, r3, #46, 30	; 0xb8
    4128:	696c2f63 	stmdbvs	ip!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    412c:	64747362 	ldrbtvs	r7, [r4], #-866	; 0xfffffc9e
    4130:	2d2b2b63 	fstmdbxcs	fp!, {d2-d50}	;@ Deprecated
    4134:	6c2f3376 	stcvs	3, cr3, [pc], #-472	; 3f64 <CPSR_IRQ_INHIBIT+0x3ee4>
    4138:	75736269 	ldrbvc	r6, [r3, #-617]!	; 0xfffffd97
    413c:	2b2b6370 	blcs	adcf04 <_bss_end+0xacbe84>
    4140:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    4144:	76706f5f 	uhsaxvc	r6, r0, pc	; <UNPREDICTABLE>
    4148:	0063632e 	rsbeq	r6, r3, lr, lsr #6
    414c:	70617773 	rsbvc	r7, r1, r3, ror r7
    4150:	61686300 	cmnvs	r8, r0, lsl #6
    4154:	5f323372 	svcpl	0x00323372
    4158:	5a5f0074 	bpl	17c4330 <_bss_end+0x17b32b0>
    415c:	3174534e 	cmncc	r4, lr, asr #6
    4160:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 3233 <CPSR_IRQ_INHIBIT+0x31b3>
    4164:	70656378 	rsbvc	r6, r5, r8, ror r3
    4168:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    416c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4170:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    4174:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4178:	5f6e6f69 	svcpl	0x006e6f69
    417c:	43727470 	cmnmi	r2, #112, 8	; 0x70000000
    4180:	6e444534 	mcrvs	5, 2, r4, cr4, cr4, {1}
    4184:	5f4d5f00 	svcpl	0x004d5f00
    4188:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    418c:	6f697470 	svcvs	0x00697470
    4190:	626f5f6e 	rsbvs	r5, pc, #440	; 0x1b8
    4194:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    4198:	635f5f00 	cmpvs	pc, #0, 30
    419c:	655f6178 	ldrbvs	r6, [pc, #-376]	; 402c <CPSR_IRQ_INHIBIT+0x3fac>
    41a0:	70656378 	rsbvc	r6, r5, r8, ror r3
    41a4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    41a8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    41ac:	79740065 	ldmdbvc	r4!, {r0, r2, r5, r6}^
    41b0:	695f6570 	ldmdbvs	pc, {r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    41b4:	006f666e 	rsbeq	r6, pc, lr, ror #12
    41b8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
    41bc:	756f6420 	strbvc	r6, [pc, #-1056]!	; 3da4 <CPSR_IRQ_INHIBIT+0x3d24>
    41c0:	00656c62 	rsbeq	r6, r5, r2, ror #24
    41c4:	534e5a5f 	movtpl	r5, #59999	; 0xea5f
    41c8:	5f353174 	svcpl	0x00353174
    41cc:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    41d0:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    41d4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    41d8:	33317274 	teqcc	r1, #116, 4	; 0x40000007
    41dc:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    41e0:	6f697470 	svcvs	0x00697470
    41e4:	74705f6e 	ldrbtvc	r5, [r0], #-3950	; 0xfffff092
    41e8:	45536172 	ldrbmi	r6, [r3, #-370]	; 0xfffffe8e
    41ec:	5f30534f 	svcpl	0x0030534f
    41f0:	65706f00 	ldrbvs	r6, [r0, #-3840]!	; 0xfffff100
    41f4:	6f746172 	svcvs	0x00746172
    41f8:	656e2072 	strbvs	r2, [lr, #-114]!	; 0xffffff8e
    41fc:	5d5b2077 	ldclpl	0, cr2, [fp, #-476]	; 0xfffffe24
    4200:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    4204:	3174534b 	cmncc	r4, fp, asr #6
    4208:	655f5f35 	ldrbvs	r5, [pc, #-3893]	; 32db <CPSR_IRQ_INHIBIT+0x325b>
    420c:	70656378 	rsbvc	r6, r5, r8, ror r3
    4210:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4214:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    4218:	78653331 	stmdavc	r5!, {r0, r4, r5, r8, r9, ip, sp}^
    421c:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    4220:	5f6e6f69 	svcpl	0x006e6f69
    4224:	32727470 	rsbscc	r7, r2, #112, 8	; 0x70000000
    4228:	635f5f30 	cmpvs	pc, #48, 30	; 0xc0
    422c:	655f6178 	ldrbvs	r6, [pc, #-376]	; 40bc <CPSR_IRQ_INHIBIT+0x403c>
    4230:	70656378 	rsbvc	r6, r5, r8, ror r3
    4234:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4238:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    423c:	00764565 	rsbseq	r4, r6, r5, ror #10
    4240:	675f4d5f 			; <UNDEFINED> instruction: 0x675f4d5f
    4244:	2e007465 	cdpcs	4, 0, cr7, cr0, cr5, {3}
    4248:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    424c:	2f2e2e2f 	svccs	0x002e2e2f
    4250:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4254:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4258:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    425c:	2f636367 	svccs	0x00636367
    4260:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    4264:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    4268:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; 40a8 <CPSR_IRQ_INHIBIT+0x4028>
    426c:	66316269 	ldrtvs	r6, [r1], -r9, ror #4
    4270:	73636e75 	cmnvc	r3, #1872	; 0x750
    4274:	2f00532e 	svccs	0x0000532e
    4278:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    427c:	63672f64 	cmnvs	r7, #100, 30	; 0x190
    4280:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    4284:	6f6e2d6d 	svcvs	0x006e2d6d
    4288:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    428c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4290:	67665968 	strbvs	r5, [r6, -r8, ror #18]!
    4294:	672f344b 	strvs	r3, [pc, -fp, asr #8]!
    4298:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    429c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    42a0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    42a4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    42a8:	2e30312d 	rsfcssp	f3, f0, #5.0
    42ac:	30322d33 	eorscc	r2, r2, r3, lsr sp
    42b0:	302e3132 	eorcc	r3, lr, r2, lsr r1
    42b4:	75622f37 	strbvc	r2, [r2, #-3895]!	; 0xfffff0c9
    42b8:	2f646c69 	svccs	0x00646c69
    42bc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    42c0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    42c4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    42c8:	72612f69 	rsbvc	r2, r1, #420	; 0x1a4
    42cc:	35762f6d 	ldrbcc	r2, [r6, #-3949]!	; 0xfffff093
    42d0:	682f6574 	stmdavs	pc!, {r2, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    42d4:	2f647261 	svccs	0x00647261
    42d8:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    42dc:	47006363 	strmi	r6, [r0, -r3, ror #6]
    42e0:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
    42e4:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
    42e8:	69003733 	stmdbvs	r0, {r0, r1, r4, r5, r8, r9, sl, ip, sp}
    42ec:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    42f0:	705f7469 	subsvc	r7, pc, r9, ror #8
    42f4:	72646572 	rsbvc	r6, r4, #478150656	; 0x1c800000
    42f8:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    42fc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4300:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    4304:	625f7066 	subsvs	r7, pc, #102	; 0x66
    4308:	00657361 	rsbeq	r7, r5, r1, ror #6
    430c:	706d6f63 	rsbvc	r6, sp, r3, ror #30
    4310:	2078656c 	rsbscs	r6, r8, ip, ror #10
    4314:	616f6c66 	cmnvs	pc, r6, ror #24
    4318:	73690074 	cmnvc	r9, #116	; 0x74
    431c:	6f6e5f61 	svcvs	0x006e5f61
    4320:	00746962 	rsbseq	r6, r4, r2, ror #18
    4324:	5f617369 	svcpl	0x00617369
    4328:	5f746962 	svcpl	0x00746962
    432c:	5f65766d 	svcpl	0x0065766d
    4330:	616f6c66 	cmnvs	pc, r6, ror #24
    4334:	73690074 	cmnvc	r9, #116	; 0x74
    4338:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    433c:	70665f74 	rsbvc	r5, r6, r4, ror pc
    4340:	69003631 	stmdbvs	r0, {r0, r4, r5, r9, sl, ip, sp}
    4344:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4348:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    434c:	69006365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, sp, lr}
    4350:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4354:	615f7469 	cmpvs	pc, r9, ror #8
    4358:	00766964 	rsbseq	r6, r6, r4, ror #18
    435c:	5f617369 	svcpl	0x00617369
    4360:	5f746962 	svcpl	0x00746962
    4364:	72697571 	rsbvc	r7, r9, #473956352	; 0x1c400000
    4368:	6f6e5f6b 	svcvs	0x006e5f6b
    436c:	6c6f765f 	stclvs	6, cr7, [pc], #-380	; 41f8 <CPSR_IRQ_INHIBIT+0x4178>
    4370:	6c697461 	cfstrdvs	mvd7, [r9], #-388	; 0xfffffe7c
    4374:	65635f65 	strbvs	r5, [r3, #-3941]!	; 0xfffff09b
    4378:	61736900 	cmnvs	r3, r0, lsl #18
    437c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4380:	00706d5f 	rsbseq	r6, r0, pc, asr sp
    4384:	5f617369 	svcpl	0x00617369
    4388:	5f746962 	svcpl	0x00746962
    438c:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4390:	69007435 	stmdbvs	r0, {r0, r2, r4, r5, sl, ip, sp, lr}
    4394:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4398:	615f7469 	cmpvs	pc, r9, ror #8
    439c:	35766d72 	ldrbcc	r6, [r6, #-3442]!	; 0xfffff28e
    43a0:	69006574 	stmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    43a4:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    43a8:	6e5f7469 	cdpvs	4, 5, cr7, cr15, cr9, {3}
    43ac:	006e6f65 	rsbeq	r6, lr, r5, ror #30
    43b0:	5f617369 	svcpl	0x00617369
    43b4:	5f746962 	svcpl	0x00746962
    43b8:	36316662 	ldrtcc	r6, [r1], -r2, ror #12
    43bc:	53504600 	cmppl	r0, #0, 12
    43c0:	455f5243 	ldrbmi	r5, [pc, #-579]	; 4185 <CPSR_IRQ_INHIBIT+0x4105>
    43c4:	004d554e 	subeq	r5, sp, lr, asr #10
    43c8:	43535046 	cmpmi	r3, #70	; 0x46
    43cc:	7a6e5f52 	bvc	1b9c11c <_bss_end+0x1b8b09c>
    43d0:	63717663 	cmnvs	r1, #103809024	; 0x6300000
    43d4:	554e455f 	strbpl	r4, [lr, #-1375]	; 0xfffffaa1
    43d8:	5056004d 	subspl	r0, r6, sp, asr #32
    43dc:	4e455f52 	mcrmi	15, 2, r5, cr5, cr2, {2}
    43e0:	66004d55 			; <UNDEFINED> instruction: 0x66004d55
    43e4:	5f746962 	svcpl	0x00746962
    43e8:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    43ec:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    43f0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    43f4:	455f3050 	ldrbmi	r3, [pc, #-80]	; 43ac <CPSR_IRQ_INHIBIT+0x432c>
    43f8:	004d554e 	subeq	r5, sp, lr, asr #10
    43fc:	5f617369 	svcpl	0x00617369
    4400:	5f746962 	svcpl	0x00746962
    4404:	70797263 	rsbsvc	r7, r9, r3, ror #4
    4408:	47006f74 	smlsdxmi	r0, r4, pc, r6	; <UNPREDICTABLE>
    440c:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
    4410:	31203731 			; <UNDEFINED> instruction: 0x31203731
    4414:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    4418:	30322031 	eorscc	r2, r2, r1, lsr r0
    441c:	36303132 			; <UNDEFINED> instruction: 0x36303132
    4420:	28203132 	stmdacs	r0!, {r1, r4, r5, r8, ip, sp}
    4424:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    4428:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    442c:	616d2d20 	cmnvs	sp, r0, lsr #26
    4430:	2d206d72 	stccs	13, cr6, [r0, #-456]!	; 0xfffffe38
    4434:	6f6c666d 	svcvs	0x006c666d
    4438:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
    443c:	683d6962 	ldmdavs	sp!, {r1, r5, r6, r8, fp, sp, lr}
    4440:	20647261 	rsbcs	r7, r4, r1, ror #4
    4444:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
    4448:	613d6863 	teqvs	sp, r3, ror #16
    444c:	35766d72 	ldrbcc	r6, [r6, #-3442]!	; 0xfffff28e
    4450:	662b6574 			; <UNDEFINED> instruction: 0x662b6574
    4454:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
    4458:	20672d20 	rsbcs	r2, r7, r0, lsr #26
    445c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
    4460:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    4464:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    4468:	2d20324f 	sfmcs	f3, 4, [r0, #-316]!	; 0xfffffec4
    446c:	69756266 	ldmdbvs	r5!, {r1, r2, r5, r6, r9, sp, lr}^
    4470:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    4474:	696c2d67 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r8, sl, fp, sp}^
    4478:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    447c:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
    4480:	74732d6f 	ldrbtvc	r2, [r3], #-3439	; 0xfffff291
    4484:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
    4488:	746f7270 	strbtvc	r7, [pc], #-624	; 4490 <CPSR_IRQ_INHIBIT+0x4410>
    448c:	6f746365 	svcvs	0x00746365
    4490:	662d2072 			; <UNDEFINED> instruction: 0x662d2072
    4494:	692d6f6e 	pushvs	{r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    4498:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    449c:	662d2065 	strtvs	r2, [sp], -r5, rrx
    44a0:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
    44a4:	696c6962 	stmdbvs	ip!, {r1, r5, r6, r8, fp, sp, lr}^
    44a8:	683d7974 	ldmdavs	sp!, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    44ac:	65646469 	strbvs	r6, [r4, #-1129]!	; 0xfffffb97
    44b0:	7369006e 	cmnvc	r9, #110	; 0x6e
    44b4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    44b8:	64745f74 	ldrbtvs	r5, [r4], #-3956	; 0xfffff08c
    44bc:	63007669 	movwvs	r7, #1641	; 0x669
    44c0:	00736e6f 	rsbseq	r6, r3, pc, ror #28
    44c4:	5f617369 	svcpl	0x00617369
    44c8:	5f746962 	svcpl	0x00746962
    44cc:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    44d0:	46007478 			; <UNDEFINED> instruction: 0x46007478
    44d4:	54584350 	ldrbpl	r4, [r8], #-848	; 0xfffffcb0
    44d8:	4e455f53 	mcrmi	15, 2, r5, cr5, cr3, {2}
    44dc:	69004d55 	stmdbvs	r0, {r0, r2, r4, r6, r8, sl, fp, lr}
    44e0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    44e4:	615f7469 	cmpvs	pc, r9, ror #8
    44e8:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
    44ec:	61736900 	cmnvs	r3, r0, lsl #18
    44f0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    44f4:	65766d5f 	ldrbvs	r6, [r6, #-3423]!	; 0xfffff2a1
    44f8:	61736900 	cmnvs	r3, r0, lsl #18
    44fc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4500:	6d77695f 			; <UNDEFINED> instruction: 0x6d77695f
    4504:	3274786d 	rsbscc	r7, r4, #7143424	; 0x6d0000
    4508:	61736900 	cmnvs	r3, r0, lsl #18
    450c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4510:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    4514:	00307063 	eorseq	r7, r0, r3, rrx
    4518:	5f617369 	svcpl	0x00617369
    451c:	5f746962 	svcpl	0x00746962
    4520:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    4524:	69003170 	stmdbvs	r0, {r4, r5, r6, r8, ip, sp}
    4528:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    452c:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    4530:	70636564 	rsbvc	r6, r3, r4, ror #10
    4534:	73690032 	cmnvc	r9, #50	; 0x32
    4538:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    453c:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    4540:	33706365 	cmncc	r0, #-1811939327	; 0x94000001
    4544:	61736900 	cmnvs	r3, r0, lsl #18
    4548:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    454c:	6564635f 	strbvs	r6, [r4, #-863]!	; 0xfffffca1
    4550:	00347063 	eorseq	r7, r4, r3, rrx
    4554:	5f617369 	svcpl	0x00617369
    4558:	5f746962 	svcpl	0x00746962
    455c:	645f7066 	ldrbvs	r7, [pc], #-102	; 4564 <CPSR_IRQ_INHIBIT+0x44e4>
    4560:	69006c62 	stmdbvs	r0, {r1, r5, r6, sl, fp, sp, lr}
    4564:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4568:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    456c:	70636564 	rsbvc	r6, r3, r4, ror #10
    4570:	73690036 	cmnvc	r9, #54	; 0x36
    4574:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4578:	64635f74 	strbtvs	r5, [r3], #-3956	; 0xfffff08c
    457c:	37706365 	ldrbcc	r6, [r0, -r5, ror #6]!
    4580:	61736900 	cmnvs	r3, r0, lsl #18
    4584:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4588:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    458c:	006b3676 	rsbeq	r3, fp, r6, ror r6
    4590:	5f617369 	svcpl	0x00617369
    4594:	5f746962 	svcpl	0x00746962
    4598:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    459c:	6d315f38 	ldcvs	15, cr5, [r1, #-224]!	; 0xffffff20
    45a0:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    45a4:	6e61006e 	cdpvs	0, 6, cr0, cr1, cr14, {3}
    45a8:	69006574 	stmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    45ac:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    45b0:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    45b4:	0065736d 	rsbeq	r7, r5, sp, ror #6
    45b8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    45bc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    45c0:	2f2e2e2f 	svccs	0x002e2e2f
    45c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    45c8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    45cc:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    45d0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    45d4:	32636367 	rsbcc	r6, r3, #-1677721599	; 0x9c000001
    45d8:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    45dc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    45e0:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    45e4:	00357670 	eorseq	r7, r5, r0, ror r6
    45e8:	5f617369 	svcpl	0x00617369
    45ec:	5f746962 	svcpl	0x00746962
    45f0:	61637378 	smcvs	14136	; 0x3738
    45f4:	6900656c 	stmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    45f8:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    45fc:	715f7469 	cmpvc	pc, r9, ror #8
    4600:	6b726975 	blvs	1c9ebdc <_bss_end+0x1c8db5c>
    4604:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
    4608:	72646c5f 	rsbvc	r6, r4, #24320	; 0x5f00
    460c:	73690064 	cmnvc	r9, #100	; 0x64
    4610:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4614:	38695f74 	stmdacc	r9!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4618:	69006d6d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    461c:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4620:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
    4624:	33645f70 	cmncc	r4, #112, 30	; 0x1c0
    4628:	73690032 	cmnvc	r9, #50	; 0x32
    462c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4630:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    4634:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    4638:	7369006d 	cmnvc	r9, #109	; 0x6d
    463c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4640:	706c5f74 	rsbvc	r5, ip, r4, ror pc
    4644:	61006561 	tstvs	r0, r1, ror #10
    4648:	695f6c6c 	ldmdbvs	pc, {r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    464c:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    4650:	665f6465 	ldrbvs	r6, [pc], -r5, ror #8
    4654:	73746962 	cmnvc	r4, #1605632	; 0x188000
    4658:	61736900 	cmnvs	r3, r0, lsl #18
    465c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4660:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4664:	315f3876 	cmpcc	pc, r6, ror r8	; <UNPREDICTABLE>
    4668:	61736900 	cmnvs	r3, r0, lsl #18
    466c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4670:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4674:	325f3876 	subscc	r3, pc, #7733248	; 0x760000
    4678:	61736900 	cmnvs	r3, r0, lsl #18
    467c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4680:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4684:	335f3876 	cmpcc	pc, #7733248	; 0x760000
    4688:	61736900 	cmnvs	r3, r0, lsl #18
    468c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4690:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4694:	345f3876 	ldrbcc	r3, [pc], #-2166	; 469c <CPSR_IRQ_INHIBIT+0x461c>
    4698:	61736900 	cmnvs	r3, r0, lsl #18
    469c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    46a0:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    46a4:	355f3876 	ldrbcc	r3, [pc, #-2166]	; 3e36 <CPSR_IRQ_INHIBIT+0x3db6>
    46a8:	61736900 	cmnvs	r3, r0, lsl #18
    46ac:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    46b0:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    46b4:	365f3876 			; <UNDEFINED> instruction: 0x365f3876
    46b8:	61736900 	cmnvs	r3, r0, lsl #18
    46bc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    46c0:	0062735f 	rsbeq	r7, r2, pc, asr r3
    46c4:	5f617369 	svcpl	0x00617369
    46c8:	5f6d756e 	svcpl	0x006d756e
    46cc:	73746962 	cmnvc	r4, #1605632	; 0x188000
    46d0:	61736900 	cmnvs	r3, r0, lsl #18
    46d4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    46d8:	616d735f 	cmnvs	sp, pc, asr r3
    46dc:	756d6c6c 	strbvc	r6, [sp, #-3180]!	; 0xfffff394
    46e0:	7566006c 	strbvc	r0, [r6, #-108]!	; 0xffffff94
    46e4:	705f636e 	subsvc	r6, pc, lr, ror #6
    46e8:	63007274 	movwvs	r7, #628	; 0x274
    46ec:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    46f0:	64207865 	strtvs	r7, [r0], #-2149	; 0xfffff79b
    46f4:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
    46f8:	424e0065 	submi	r0, lr, #101	; 0x65
    46fc:	5f50465f 	svcpl	0x0050465f
    4700:	52535953 	subspl	r5, r3, #1359872	; 0x14c000
    4704:	00534745 	subseq	r4, r3, r5, asr #14
    4708:	5f617369 	svcpl	0x00617369
    470c:	5f746962 	svcpl	0x00746962
    4710:	63656463 	cmnvs	r5, #1660944384	; 0x63000000
    4714:	69003570 	stmdbvs	r0, {r4, r5, r6, r8, sl, ip, sp}
    4718:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    471c:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    4720:	32767066 	rsbscc	r7, r6, #102	; 0x66
    4724:	61736900 	cmnvs	r3, r0, lsl #18
    4728:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    472c:	7066765f 	rsbvc	r7, r6, pc, asr r6
    4730:	69003376 	stmdbvs	r0, {r1, r2, r4, r5, r6, r8, r9, ip, sp}
    4734:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4738:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    473c:	34767066 	ldrbtcc	r7, [r6], #-102	; 0xffffff9a
    4740:	43504600 	cmpmi	r0, #0, 12
    4744:	534e5458 	movtpl	r5, #58456	; 0xe458
    4748:	554e455f 	strbpl	r4, [lr, #-1375]	; 0xfffffaa1
    474c:	7369004d 	cmnvc	r9, #77	; 0x4d
    4750:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4754:	68745f74 	ldmdavs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4758:	00626d75 	rsbeq	r6, r2, r5, ror sp
    475c:	5f617369 	svcpl	0x00617369
    4760:	5f746962 	svcpl	0x00746962
    4764:	36317066 	ldrtcc	r7, [r1], -r6, rrx
    4768:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
    476c:	61736900 	cmnvs	r3, r0, lsl #18
    4770:	6165665f 	cmnvs	r5, pc, asr r6
    4774:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
    4778:	61736900 	cmnvs	r3, r0, lsl #18
    477c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4780:	746f6e5f 	strbtvc	r6, [pc], #-3679	; 4788 <CPSR_IRQ_INHIBIT+0x4708>
    4784:	7369006d 	cmnvc	r9, #109	; 0x6d
    4788:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    478c:	75715f74 	ldrbvc	r5, [r1, #-3956]!	; 0xfffff08c
    4790:	5f6b7269 	svcpl	0x006b7269
    4794:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4798:	007a6b36 	rsbseq	r6, sl, r6, lsr fp
    479c:	5f617369 	svcpl	0x00617369
    47a0:	5f746962 	svcpl	0x00746962
    47a4:	33637263 	cmncc	r3, #805306374	; 0x30000006
    47a8:	73690032 	cmnvc	r9, #50	; 0x32
    47ac:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    47b0:	75715f74 	ldrbvc	r5, [r1, #-3956]!	; 0xfffff08c
    47b4:	5f6b7269 	svcpl	0x006b7269
    47b8:	615f6f6e 	cmpvs	pc, lr, ror #30
    47bc:	70636d73 	rsbvc	r6, r3, r3, ror sp
    47c0:	73690075 	cmnvc	r9, #117	; 0x75
    47c4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    47c8:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    47cc:	0034766d 	eorseq	r7, r4, sp, ror #12
    47d0:	5f617369 	svcpl	0x00617369
    47d4:	5f746962 	svcpl	0x00746962
    47d8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    47dc:	69003262 	stmdbvs	r0, {r1, r5, r6, r9, ip, sp}
    47e0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    47e4:	625f7469 	subsvs	r7, pc, #1761607680	; 0x69000000
    47e8:	69003865 	stmdbvs	r0, {r0, r2, r5, r6, fp, ip, sp}
    47ec:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    47f0:	615f7469 	cmpvs	pc, r9, ror #8
    47f4:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
    47f8:	61736900 	cmnvs	r3, r0, lsl #18
    47fc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4800:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4804:	76003876 			; <UNDEFINED> instruction: 0x76003876
    4808:	735f7066 	cmpvc	pc, #102	; 0x66
    480c:	65727379 	ldrbvs	r7, [r2, #-889]!	; 0xfffffc87
    4810:	655f7367 	ldrbvs	r7, [pc, #-871]	; 44b1 <CPSR_IRQ_INHIBIT+0x4431>
    4814:	646f636e 	strbtvs	r6, [pc], #-878	; 481c <CPSR_IRQ_INHIBIT+0x479c>
    4818:	00676e69 	rsbeq	r6, r7, r9, ror #28
    481c:	5f617369 	svcpl	0x00617369
    4820:	5f746962 	svcpl	0x00746962
    4824:	36317066 	ldrtcc	r7, [r1], -r6, rrx
    4828:	006c6d66 	rsbeq	r6, ip, r6, ror #26
    482c:	5f617369 	svcpl	0x00617369
    4830:	5f746962 	svcpl	0x00746962
    4834:	70746f64 	rsbsvc	r6, r4, r4, ror #30
    4838:	00646f72 	rsbeq	r6, r4, r2, ror pc

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_bss_end+0x10bfca4>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	2e30313a 	mrccs	1, 1, r3, cr0, cr10, {1}
   c:	30322d33 	eorscc	r2, r2, r3, lsr sp
  10:	302e3132 	eorcc	r3, lr, r2, lsr r1
  14:	29342d37 	ldmdbcs	r4!, {r0, r1, r2, r4, r5, r8, sl, fp, sp}
  18:	2e303120 	rsfcssp	f3, f0, f0
  1c:	20312e33 	eorscs	r2, r1, r3, lsr lr
  20:	31323032 	teqcc	r2, r2, lsr r0
  24:	31323630 	teqcc	r2, r0, lsr r6
  28:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  2c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  10:	4b5a3605 	blmi	168d82c <_bss_end+0x167c7ac>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <_bss_end+0x313a4>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	1a011803 	bne	46038 <_bss_end+0x34fb8>
  28:	1e011c01 	cdpne	12, 0, cr1, cr1, cr1, {0}
  2c:	44012206 	strmi	r2, [r1], #-518	; 0xfffffdfa
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	000080ac 	andeq	r8, r0, ip, lsr #1
      1c:	00000038 	andeq	r0, r0, r8, lsr r0
      20:	8b040e42 	blhi	103930 <_bss_end+0xf28b0>
      24:	0b0d4201 	bleq	350830 <_bss_end+0x33f7b0>
      28:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
      2c:	00000ecb 	andeq	r0, r0, fp, asr #29
      30:	0000001c 	andeq	r0, r0, ip, lsl r0
      34:	00000000 	andeq	r0, r0, r0
      38:	000080e4 	andeq	r8, r0, r4, ror #1
      3c:	0000002c 	andeq	r0, r0, ip, lsr #32
      40:	8b040e42 	blhi	103950 <_bss_end+0xf28d0>
      44:	0b0d4201 	bleq	350850 <_bss_end+0x33f7d0>
      48:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
      4c:	00000ecb 	andeq	r0, r0, fp, asr #29
      50:	0000001c 	andeq	r0, r0, ip, lsl r0
      54:	00000000 	andeq	r0, r0, r0
      58:	00008110 	andeq	r8, r0, r0, lsl r1
      5c:	00000020 	andeq	r0, r0, r0, lsr #32
      60:	8b040e42 	blhi	103970 <_bss_end+0xf28f0>
      64:	0b0d4201 	bleq	350870 <_bss_end+0x33f7f0>
      68:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
      6c:	00000ecb 	andeq	r0, r0, fp, asr #29
      70:	0000001c 	andeq	r0, r0, ip, lsl r0
      74:	00000000 	andeq	r0, r0, r0
      78:	00008130 	andeq	r8, r0, r0, lsr r1
      7c:	00000018 	andeq	r0, r0, r8, lsl r0
      80:	8b040e42 	blhi	103990 <_bss_end+0xf2910>
      84:	0b0d4201 	bleq	350890 <_bss_end+0x33f810>
      88:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      8c:	00000ecb 	andeq	r0, r0, fp, asr #29
      90:	0000001c 	andeq	r0, r0, ip, lsl r0
      94:	00000000 	andeq	r0, r0, r0
      98:	00008148 	andeq	r8, r0, r8, asr #2
      9c:	00000018 	andeq	r0, r0, r8, lsl r0
      a0:	8b040e42 	blhi	1039b0 <_bss_end+0xf2930>
      a4:	0b0d4201 	bleq	3508b0 <_bss_end+0x33f830>
      a8:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      ac:	00000ecb 	andeq	r0, r0, fp, asr #29
      b0:	0000001c 	andeq	r0, r0, ip, lsl r0
      b4:	00000000 	andeq	r0, r0, r0
      b8:	00008160 	andeq	r8, r0, r0, ror #2
      bc:	00000018 	andeq	r0, r0, r8, lsl r0
      c0:	8b040e42 	blhi	1039d0 <_bss_end+0xf2950>
      c4:	0b0d4201 	bleq	3508d0 <_bss_end+0x33f850>
      c8:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      cc:	00000ecb 	andeq	r0, r0, fp, asr #29
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
      d4:	00000000 	andeq	r0, r0, r0
      d8:	00008178 	andeq	r8, r0, r8, ror r1
      dc:	0000000c 	andeq	r0, r0, ip
      e0:	8b040e42 	blhi	1039f0 <_bss_end+0xf2970>
      e4:	0b0d4201 	bleq	3508f0 <_bss_end+0x33f870>
      e8:	0000000c 	andeq	r0, r0, ip
      ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      f0:	7c020001 	stcvc	0, cr0, [r2], {1}
      f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      f8:	0000001c 	andeq	r0, r0, ip, lsl r0
      fc:	000000e8 	andeq	r0, r0, r8, ror #1
     100:	00008184 	andeq	r8, r0, r4, lsl #3
     104:	00000058 	andeq	r0, r0, r8, asr r0
     108:	8b080e42 	blhi	203a18 <_bss_end+0x1f2998>
     10c:	42018e02 	andmi	r8, r1, #2, 28
     110:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     114:	00080d0c 	andeq	r0, r8, ip, lsl #26
     118:	0000001c 	andeq	r0, r0, ip, lsl r0
     11c:	000000e8 	andeq	r0, r0, r8, ror #1
     120:	000081dc 	ldrdeq	r8, [r0], -ip
     124:	00000098 	muleq	r0, r8, r0
     128:	8b040e42 	blhi	103a38 <_bss_end+0xf29b8>
     12c:	0b0d4201 	bleq	350938 <_bss_end+0x33f8b8>
     130:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
     134:	000ecb42 	andeq	ip, lr, r2, asr #22
     138:	0000001c 	andeq	r0, r0, ip, lsl r0
     13c:	000000e8 	andeq	r0, r0, r8, ror #1
     140:	00008274 	andeq	r8, r0, r4, ror r2
     144:	00000074 	andeq	r0, r0, r4, ror r0
     148:	8b040e42 	blhi	103a58 <_bss_end+0xf29d8>
     14c:	0b0d4201 	bleq	350958 <_bss_end+0x33f8d8>
     150:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     154:	00000ecb 	andeq	r0, r0, fp, asr #29
     158:	0000001c 	andeq	r0, r0, ip, lsl r0
     15c:	000000e8 	andeq	r0, r0, r8, ror #1
     160:	000082e8 	andeq	r8, r0, r8, ror #5
     164:	00000074 	andeq	r0, r0, r4, ror r0
     168:	8b040e42 	blhi	103a78 <_bss_end+0xf29f8>
     16c:	0b0d4201 	bleq	350978 <_bss_end+0x33f8f8>
     170:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     174:	00000ecb 	andeq	r0, r0, fp, asr #29
     178:	0000001c 	andeq	r0, r0, ip, lsl r0
     17c:	000000e8 	andeq	r0, r0, r8, ror #1
     180:	0000835c 	andeq	r8, r0, ip, asr r3
     184:	00000074 	andeq	r0, r0, r4, ror r0
     188:	8b040e42 	blhi	103a98 <_bss_end+0xf2a18>
     18c:	0b0d4201 	bleq	350998 <_bss_end+0x33f918>
     190:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     194:	00000ecb 	andeq	r0, r0, fp, asr #29
     198:	0000001c 	andeq	r0, r0, ip, lsl r0
     19c:	000000e8 	andeq	r0, r0, r8, ror #1
     1a0:	000083d0 	ldrdeq	r8, [r0], -r0
     1a4:	000000c8 	andeq	r0, r0, r8, asr #1
     1a8:	8b080e42 	blhi	203ab8 <_bss_end+0x1f2a38>
     1ac:	42018e02 	andmi	r8, r1, #2, 28
     1b0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1b4:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
     1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1bc:	000000e8 	andeq	r0, r0, r8, ror #1
     1c0:	00008498 	muleq	r0, r8, r4
     1c4:	00000074 	andeq	r0, r0, r4, ror r0
     1c8:	8b080e42 	blhi	203ad8 <_bss_end+0x1f2a58>
     1cc:	42018e02 	andmi	r8, r1, #2, 28
     1d0:	74040b0c 	strvc	r0, [r4], #-2828	; 0xfffff4f4
     1d4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1dc:	000000e8 	andeq	r0, r0, r8, ror #1
     1e0:	0000850c 	andeq	r8, r0, ip, lsl #10
     1e4:	000000d8 	ldrdeq	r0, [r0], -r8
     1e8:	8b080e42 	blhi	203af8 <_bss_end+0x1f2a78>
     1ec:	42018e02 	andmi	r8, r1, #2, 28
     1f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1f4:	080d0c66 	stmdaeq	sp, {r1, r2, r5, r6, sl, fp}
     1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     1fc:	000000e8 	andeq	r0, r0, r8, ror #1
     200:	000085e4 	andeq	r8, r0, r4, ror #11
     204:	00000084 	andeq	r0, r0, r4, lsl #1
     208:	8b080e42 	blhi	203b18 <_bss_end+0x1f2a98>
     20c:	42018e02 	andmi	r8, r1, #2, 28
     210:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     214:	00080d0c 	andeq	r0, r8, ip, lsl #26
     218:	00000024 	andeq	r0, r0, r4, lsr #32
     21c:	000000e8 	andeq	r0, r0, r8, ror #1
     220:	00008668 	andeq	r8, r0, r8, ror #12
     224:	00000198 	muleq	r0, r8, r1
     228:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     22c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     230:	8b038704 	blhi	e1e48 <_bss_end+0xd0dc8>
     234:	42018e02 	andmi	r8, r1, #2, 28
     238:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     23c:	180d0cc6 	stmdane	sp, {r1, r2, r6, r7, sl, fp}
     240:	00000024 	andeq	r0, r0, r4, lsr #32
     244:	000000e8 	andeq	r0, r0, r8, ror #1
     248:	00008800 	andeq	r8, r0, r0, lsl #16
     24c:	000001a0 	andeq	r0, r0, r0, lsr #3
     250:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     254:	86058506 	strhi	r8, [r5], -r6, lsl #10
     258:	8b038704 	blhi	e1e70 <_bss_end+0xd0df0>
     25c:	42018e02 	andmi	r8, r1, #2, 28
     260:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     264:	180d0cca 	stmdane	sp, {r1, r3, r6, r7, sl, fp}
     268:	0000001c 	andeq	r0, r0, ip, lsl r0
     26c:	000000e8 	andeq	r0, r0, r8, ror #1
     270:	000089a0 	andeq	r8, r0, r0, lsr #19
     274:	00000054 	andeq	r0, r0, r4, asr r0
     278:	8b080e42 	blhi	203b88 <_bss_end+0x1f2b08>
     27c:	42018e02 	andmi	r8, r1, #2, 28
     280:	5e040b0c 	vmlapl.f64	d0, d4, d12
     284:	00080d0c 	andeq	r0, r8, ip, lsl #26
     288:	00000018 	andeq	r0, r0, r8, lsl r0
     28c:	000000e8 	andeq	r0, r0, r8, ror #1
     290:	000089f4 	strdeq	r8, [r0], -r4
     294:	0000001c 	andeq	r0, r0, ip, lsl r0
     298:	8b080e42 	blhi	203ba8 <_bss_end+0x1f2b28>
     29c:	42018e02 	andmi	r8, r1, #2, 28
     2a0:	00040b0c 	andeq	r0, r4, ip, lsl #22
     2a4:	0000000c 	andeq	r0, r0, ip
     2a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2ac:	7c020001 	stcvc	0, cr0, [r2], {1}
     2b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2bc:	000090d8 	ldrdeq	r9, [r0], -r8
     2c0:	00000034 	andeq	r0, r0, r4, lsr r0
     2c4:	8b040e42 	blhi	103bd4 <_bss_end+0xf2b54>
     2c8:	0b0d4201 	bleq	350ad4 <_bss_end+0x33fa54>
     2cc:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     2d0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2d8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2dc:	0000910c 	andeq	r9, r0, ip, lsl #2
     2e0:	00000048 	andeq	r0, r0, r8, asr #32
     2e4:	8b040e42 	blhi	103bf4 <_bss_end+0xf2b74>
     2e8:	0b0d4201 	bleq	350af4 <_bss_end+0x33fa74>
     2ec:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     2f0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2f8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2fc:	00008a10 	andeq	r8, r0, r0, lsl sl
     300:	0000006c 	andeq	r0, r0, ip, rrx
     304:	8b080e42 	blhi	203c14 <_bss_end+0x1f2b94>
     308:	42018e02 	andmi	r8, r1, #2, 28
     30c:	70040b0c 	andvc	r0, r4, ip, lsl #22
     310:	00080d0c 	andeq	r0, r8, ip, lsl #26
     314:	0000001c 	andeq	r0, r0, ip, lsl r0
     318:	000002a4 	andeq	r0, r0, r4, lsr #5
     31c:	00008a7c 	andeq	r8, r0, ip, ror sl
     320:	00000038 	andeq	r0, r0, r8, lsr r0
     324:	8b040e42 	blhi	103c34 <_bss_end+0xf2bb4>
     328:	0b0d4201 	bleq	350b34 <_bss_end+0x33fab4>
     32c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     330:	00000ecb 	andeq	r0, r0, fp, asr #29
     334:	0000001c 	andeq	r0, r0, ip, lsl r0
     338:	000002a4 	andeq	r0, r0, r4, lsr #5
     33c:	00008ab4 			; <UNDEFINED> instruction: 0x00008ab4
     340:	00000054 	andeq	r0, r0, r4, asr r0
     344:	8b080e42 	blhi	203c54 <_bss_end+0x1f2bd4>
     348:	42018e02 	andmi	r8, r1, #2, 28
     34c:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
     350:	00080d0c 	andeq	r0, r8, ip, lsl #26
     354:	0000001c 	andeq	r0, r0, ip, lsl r0
     358:	000002a4 	andeq	r0, r0, r4, lsr #5
     35c:	00008b08 	andeq	r8, r0, r8, lsl #22
     360:	000000e0 	andeq	r0, r0, r0, ror #1
     364:	8b080e42 	blhi	203c74 <_bss_end+0x1f2bf4>
     368:	42018e02 	andmi	r8, r1, #2, 28
     36c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     370:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
     374:	0000001c 	andeq	r0, r0, ip, lsl r0
     378:	000002a4 	andeq	r0, r0, r4, lsr #5
     37c:	00008be8 	andeq	r8, r0, r8, ror #23
     380:	000000a4 	andeq	r0, r0, r4, lsr #1
     384:	8b080e42 	blhi	203c94 <_bss_end+0x1f2c14>
     388:	42018e02 	andmi	r8, r1, #2, 28
     38c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     390:	080d0c4a 	stmdaeq	sp, {r1, r3, r6, sl, fp}
     394:	0000001c 	andeq	r0, r0, ip, lsl r0
     398:	000002a4 	andeq	r0, r0, r4, lsr #5
     39c:	00008c8c 	andeq	r8, r0, ip, lsl #25
     3a0:	00000028 	andeq	r0, r0, r8, lsr #32
     3a4:	8b040e42 	blhi	103cb4 <_bss_end+0xf2c34>
     3a8:	0b0d4201 	bleq	350bb4 <_bss_end+0x33fb34>
     3ac:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     3b0:	00000ecb 	andeq	r0, r0, fp, asr #29
     3b4:	00000020 	andeq	r0, r0, r0, lsr #32
     3b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     3bc:	00008cb4 			; <UNDEFINED> instruction: 0x00008cb4
     3c0:	000000ec 	andeq	r0, r0, ip, ror #1
     3c4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     3c8:	8e028b03 	vmlahi.f64	d8, d2, d3
     3cc:	0b0c4201 	bleq	310bd8 <_bss_end+0x2ffb58>
     3d0:	0c6c0204 	sfmeq	f0, 2, [ip], #-16
     3d4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3dc:	000002a4 	andeq	r0, r0, r4, lsr #5
     3e0:	00008da0 	andeq	r8, r0, r0, lsr #27
     3e4:	000000ec 	andeq	r0, r0, ip, ror #1
     3e8:	8b080e42 	blhi	203cf8 <_bss_end+0x1f2c78>
     3ec:	42018e02 	andmi	r8, r1, #2, 28
     3f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     3f4:	080d0c6c 	stmdaeq	sp, {r2, r3, r5, r6, sl, fp}
     3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3fc:	000002a4 	andeq	r0, r0, r4, lsr #5
     400:	00008e8c 	andeq	r8, r0, ip, lsl #29
     404:	00000078 	andeq	r0, r0, r8, ror r0
     408:	8b080e42 	blhi	203d18 <_bss_end+0x1f2c98>
     40c:	42018e02 	andmi	r8, r1, #2, 28
     410:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     414:	00080d0c 	andeq	r0, r8, ip, lsl #26
     418:	00000020 	andeq	r0, r0, r0, lsr #32
     41c:	000002a4 	andeq	r0, r0, r4, lsr #5
     420:	00008f04 	andeq	r8, r0, r4, lsl #30
     424:	0000015c 	andeq	r0, r0, ip, asr r1
     428:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     42c:	8e028b03 	vmlahi.f64	d8, d2, d3
     430:	0b0c4201 	bleq	310c3c <_bss_end+0x2ffbbc>
     434:	0ca40204 	sfmeq	f0, 4, [r4], #16
     438:	00000c0d 	andeq	r0, r0, sp, lsl #24
     43c:	0000001c 	andeq	r0, r0, ip, lsl r0
     440:	000002a4 	andeq	r0, r0, r4, lsr #5
     444:	00009060 	andeq	r9, r0, r0, rrx
     448:	0000005c 	andeq	r0, r0, ip, asr r0
     44c:	8b080e42 	blhi	203d5c <_bss_end+0x1f2cdc>
     450:	42018e02 	andmi	r8, r1, #2, 28
     454:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     458:	00080d0c 	andeq	r0, r8, ip, lsl #26
     45c:	00000018 	andeq	r0, r0, r8, lsl r0
     460:	000002a4 	andeq	r0, r0, r4, lsr #5
     464:	000090bc 	strheq	r9, [r0], -ip
     468:	0000001c 	andeq	r0, r0, ip, lsl r0
     46c:	8b080e42 	blhi	203d7c <_bss_end+0x1f2cfc>
     470:	42018e02 	andmi	r8, r1, #2, 28
     474:	00040b0c 	andeq	r0, r4, ip, lsl #22
     478:	0000000c 	andeq	r0, r0, ip
     47c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     480:	7c020001 	stcvc	0, cr0, [r2], {1}
     484:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     488:	0000001c 	andeq	r0, r0, ip, lsl r0
     48c:	00000478 	andeq	r0, r0, r8, ror r4
     490:	00009154 	andeq	r9, r0, r4, asr r1
     494:	00000078 	andeq	r0, r0, r8, ror r0
     498:	8b040e42 	blhi	103da8 <_bss_end+0xf2d28>
     49c:	0b0d4201 	bleq	350ca8 <_bss_end+0x33fc28>
     4a0:	420d0d74 	andmi	r0, sp, #116, 26	; 0x1d00
     4a4:	00000ecb 	andeq	r0, r0, fp, asr #29
     4a8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4ac:	00000478 	andeq	r0, r0, r8, ror r4
     4b0:	0000979c 	muleq	r0, ip, r7
     4b4:	00000038 	andeq	r0, r0, r8, lsr r0
     4b8:	8b040e42 	blhi	103dc8 <_bss_end+0xf2d48>
     4bc:	0b0d4201 	bleq	350cc8 <_bss_end+0x33fc48>
     4c0:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     4c4:	00000ecb 	andeq	r0, r0, fp, asr #29
     4c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4cc:	00000478 	andeq	r0, r0, r8, ror r4
     4d0:	000091cc 	andeq	r9, r0, ip, asr #3
     4d4:	000000a8 	andeq	r0, r0, r8, lsr #1
     4d8:	8b080e42 	blhi	203de8 <_bss_end+0x1f2d68>
     4dc:	42018e02 	andmi	r8, r1, #2, 28
     4e0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     4e4:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
     4e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     4ec:	00000478 	andeq	r0, r0, r8, ror r4
     4f0:	000097d4 	ldrdeq	r9, [r0], -r4
     4f4:	00000088 	andeq	r0, r0, r8, lsl #1
     4f8:	8b080e42 	blhi	203e08 <_bss_end+0x1f2d88>
     4fc:	42018e02 	andmi	r8, r1, #2, 28
     500:	7e040b0c 	vmlavc.f64	d0, d4, d12
     504:	00080d0c 	andeq	r0, r8, ip, lsl #26
     508:	0000001c 	andeq	r0, r0, ip, lsl r0
     50c:	00000478 	andeq	r0, r0, r8, ror r4
     510:	00009274 	andeq	r9, r0, r4, ror r2
     514:	00000130 	andeq	r0, r0, r0, lsr r1
     518:	8b040e42 	blhi	103e28 <_bss_end+0xf2da8>
     51c:	0b0d4201 	bleq	350d28 <_bss_end+0x33fca8>
     520:	0d0d9002 	stceq	0, cr9, [sp, #-8]
     524:	000ecb42 	andeq	ip, lr, r2, asr #22
     528:	0000001c 	andeq	r0, r0, ip, lsl r0
     52c:	00000478 	andeq	r0, r0, r8, ror r4
     530:	0000985c 	andeq	r9, r0, ip, asr r8
     534:	0000002c 	andeq	r0, r0, ip, lsr #32
     538:	8b040e42 	blhi	103e48 <_bss_end+0xf2dc8>
     53c:	0b0d4201 	bleq	350d48 <_bss_end+0x33fcc8>
     540:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     544:	00000ecb 	andeq	r0, r0, fp, asr #29
     548:	0000001c 	andeq	r0, r0, ip, lsl r0
     54c:	00000478 	andeq	r0, r0, r8, ror r4
     550:	000093a4 	andeq	r9, r0, r4, lsr #7
     554:	000000a8 	andeq	r0, r0, r8, lsr #1
     558:	8b080e42 	blhi	203e68 <_bss_end+0x1f2de8>
     55c:	42018e02 	andmi	r8, r1, #2, 28
     560:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     564:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
     568:	0000001c 	andeq	r0, r0, ip, lsl r0
     56c:	00000478 	andeq	r0, r0, r8, ror r4
     570:	0000944c 	andeq	r9, r0, ip, asr #8
     574:	00000078 	andeq	r0, r0, r8, ror r0
     578:	8b080e42 	blhi	203e88 <_bss_end+0x1f2e08>
     57c:	42018e02 	andmi	r8, r1, #2, 28
     580:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     584:	00080d0c 	andeq	r0, r8, ip, lsl #26
     588:	0000001c 	andeq	r0, r0, ip, lsl r0
     58c:	00000478 	andeq	r0, r0, r8, ror r4
     590:	000094c4 	andeq	r9, r0, r4, asr #9
     594:	00000034 	andeq	r0, r0, r4, lsr r0
     598:	8b040e42 	blhi	103ea8 <_bss_end+0xf2e28>
     59c:	0b0d4201 	bleq	350da8 <_bss_end+0x33fd28>
     5a0:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     5a4:	00000ecb 	andeq	r0, r0, fp, asr #29
     5a8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5ac:	00000478 	andeq	r0, r0, r8, ror r4
     5b0:	000094f8 	strdeq	r9, [r0], -r8
     5b4:	00000054 	andeq	r0, r0, r4, asr r0
     5b8:	8b080e42 	blhi	203ec8 <_bss_end+0x1f2e48>
     5bc:	42018e02 	andmi	r8, r1, #2, 28
     5c0:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     5c4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5cc:	00000478 	andeq	r0, r0, r8, ror r4
     5d0:	0000954c 	andeq	r9, r0, ip, asr #10
     5d4:	00000060 	andeq	r0, r0, r0, rrx
     5d8:	8b080e42 	blhi	203ee8 <_bss_end+0x1f2e68>
     5dc:	42018e02 	andmi	r8, r1, #2, 28
     5e0:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     5e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5ec:	00000478 	andeq	r0, r0, r8, ror r4
     5f0:	000095ac 	andeq	r9, r0, ip, lsr #11
     5f4:	0000017c 	andeq	r0, r0, ip, ror r1
     5f8:	8b080e42 	blhi	203f08 <_bss_end+0x1f2e88>
     5fc:	42018e02 	andmi	r8, r1, #2, 28
     600:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     604:	080d0cb6 	stmdaeq	sp, {r1, r2, r4, r5, r7, sl, fp}
     608:	0000001c 	andeq	r0, r0, ip, lsl r0
     60c:	00000478 	andeq	r0, r0, r8, ror r4
     610:	00009728 	andeq	r9, r0, r8, lsr #14
     614:	00000058 	andeq	r0, r0, r8, asr r0
     618:	8b080e42 	blhi	203f28 <_bss_end+0x1f2ea8>
     61c:	42018e02 	andmi	r8, r1, #2, 28
     620:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     624:	00080d0c 	andeq	r0, r8, ip, lsl #26
     628:	00000018 	andeq	r0, r0, r8, lsl r0
     62c:	00000478 	andeq	r0, r0, r8, ror r4
     630:	00009780 	andeq	r9, r0, r0, lsl #15
     634:	0000001c 	andeq	r0, r0, ip, lsl r0
     638:	8b080e42 	blhi	203f48 <_bss_end+0x1f2ec8>
     63c:	42018e02 	andmi	r8, r1, #2, 28
     640:	00040b0c 	andeq	r0, r4, ip, lsl #22
     644:	0000000c 	andeq	r0, r0, ip
     648:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     64c:	7c020001 	stcvc	0, cr0, [r2], {1}
     650:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     654:	0000001c 	andeq	r0, r0, ip, lsl r0
     658:	00000644 	andeq	r0, r0, r4, asr #12
     65c:	0000ab04 	andeq	sl, r0, r4, lsl #22
     660:	00000030 	andeq	r0, r0, r0, lsr r0
     664:	8b080e42 	blhi	203f74 <_bss_end+0x1f2ef4>
     668:	42018e02 	andmi	r8, r1, #2, 28
     66c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     670:	00080d0c 	andeq	r0, r8, ip, lsl #26
     674:	0000001c 	andeq	r0, r0, ip, lsl r0
     678:	00000644 	andeq	r0, r0, r4, asr #12
     67c:	00009888 	andeq	r9, r0, r8, lsl #17
     680:	00000064 	andeq	r0, r0, r4, rrx
     684:	8b040e42 	blhi	103f94 <_bss_end+0xf2f14>
     688:	0b0d4201 	bleq	350e94 <_bss_end+0x33fe14>
     68c:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
     690:	00000ecb 	andeq	r0, r0, fp, asr #29
     694:	00000020 	andeq	r0, r0, r0, lsr #32
     698:	00000644 	andeq	r0, r0, r4, asr #12
     69c:	000098ec 	andeq	r9, r0, ip, ror #17
     6a0:	00000734 	andeq	r0, r0, r4, lsr r7
     6a4:	8b080e42 	blhi	203fb4 <_bss_end+0x1f2f34>
     6a8:	42018e02 	andmi	r8, r1, #2, 28
     6ac:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     6b0:	0d0c0394 	stceq	3, cr0, [ip, #-592]	; 0xfffffdb0
     6b4:	00000008 	andeq	r0, r0, r8
     6b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6bc:	00000644 	andeq	r0, r0, r4, asr #12
     6c0:	0000a020 	andeq	sl, r0, r0, lsr #32
     6c4:	00000094 	muleq	r0, r4, r0
     6c8:	8b080e42 	blhi	203fd8 <_bss_end+0x1f2f58>
     6cc:	42018e02 	andmi	r8, r1, #2, 28
     6d0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     6d4:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
     6d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6dc:	00000644 	andeq	r0, r0, r4, asr #12
     6e0:	0000a0b4 	strheq	sl, [r0], -r4
     6e4:	000000d4 	ldrdeq	r0, [r0], -r4
     6e8:	8b080e42 	blhi	203ff8 <_bss_end+0x1f2f78>
     6ec:	42018e02 	andmi	r8, r1, #2, 28
     6f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     6f4:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     6f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     6fc:	00000644 	andeq	r0, r0, r4, asr #12
     700:	0000a188 	andeq	sl, r0, r8, lsl #3
     704:	00000028 	andeq	r0, r0, r8, lsr #32
     708:	8b040e42 	blhi	104018 <_bss_end+0xf2f98>
     70c:	0b0d4201 	bleq	350f18 <_bss_end+0x33fe98>
     710:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     714:	00000ecb 	andeq	r0, r0, fp, asr #29
     718:	0000001c 	andeq	r0, r0, ip, lsl r0
     71c:	00000644 	andeq	r0, r0, r4, asr #12
     720:	0000a1b0 			; <UNDEFINED> instruction: 0x0000a1b0
     724:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     728:	8b080e42 	blhi	204038 <_bss_end+0x1f2fb8>
     72c:	42018e02 	andmi	r8, r1, #2, 28
     730:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     734:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
     738:	0000001c 	andeq	r0, r0, ip, lsl r0
     73c:	00000644 	andeq	r0, r0, r4, asr #12
     740:	0000a280 	andeq	sl, r0, r0, lsl #5
     744:	00000148 	andeq	r0, r0, r8, asr #2
     748:	8b040e42 	blhi	104058 <_bss_end+0xf2fd8>
     74c:	0b0d4201 	bleq	350f58 <_bss_end+0x33fed8>
     750:	0d0d9c02 	stceq	12, cr9, [sp, #-8]
     754:	000ecb42 	andeq	ip, lr, r2, asr #22
     758:	00000020 	andeq	r0, r0, r0, lsr #32
     75c:	00000644 	andeq	r0, r0, r4, asr #12
     760:	0000a3c8 	andeq	sl, r0, r8, asr #7
     764:	00000218 	andeq	r0, r0, r8, lsl r2
     768:	8b080e42 	blhi	204078 <_bss_end+0x1f2ff8>
     76c:	42018e02 	andmi	r8, r1, #2, 28
     770:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     774:	0d0c0106 	stfeqs	f0, [ip, #-24]	; 0xffffffe8
     778:	00000008 	andeq	r0, r0, r8
     77c:	00000020 	andeq	r0, r0, r0, lsr #32
     780:	00000644 	andeq	r0, r0, r4, asr #12
     784:	0000a5e0 	andeq	sl, r0, r0, ror #11
     788:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
     78c:	8b080e42 	blhi	20409c <_bss_end+0x1f301c>
     790:	42018e02 	andmi	r8, r1, #2, 28
     794:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     798:	0d0c0254 	sfmeq	f0, 4, [ip, #-336]	; 0xfffffeb0
     79c:	00000008 	andeq	r0, r0, r8
     7a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7a4:	00000644 	andeq	r0, r0, r4, asr #12
     7a8:	0000ab34 	andeq	sl, r0, r4, lsr fp
     7ac:	00000070 	andeq	r0, r0, r0, ror r0
     7b0:	8b040e42 	blhi	1040c0 <_bss_end+0xf3040>
     7b4:	0b0d4201 	bleq	350fc0 <_bss_end+0x33ff40>
     7b8:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
     7bc:	00000ecb 	andeq	r0, r0, fp, asr #29
     7c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7c4:	00000644 	andeq	r0, r0, r4, asr #12
     7c8:	0000aba4 	andeq	sl, r0, r4, lsr #23
     7cc:	00000070 	andeq	r0, r0, r0, ror r0
     7d0:	8b040e42 	blhi	1040e0 <_bss_end+0xf3060>
     7d4:	0b0d4201 	bleq	350fe0 <_bss_end+0x33ff60>
     7d8:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
     7dc:	00000ecb 	andeq	r0, r0, fp, asr #29
     7e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7e4:	00000644 	andeq	r0, r0, r4, asr #12
     7e8:	0000ac14 	andeq	sl, r0, r4, lsl ip
     7ec:	0000006c 	andeq	r0, r0, ip, rrx
     7f0:	8b040e42 	blhi	104100 <_bss_end+0xf3080>
     7f4:	0b0d4201 	bleq	351000 <_bss_end+0x33ff80>
     7f8:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
     7fc:	00000ecb 	andeq	r0, r0, fp, asr #29
     800:	0000001c 	andeq	r0, r0, ip, lsl r0
     804:	00000644 	andeq	r0, r0, r4, asr #12
     808:	0000aa94 	muleq	r0, r4, sl
     80c:	00000054 	andeq	r0, r0, r4, asr r0
     810:	8b080e42 	blhi	204120 <_bss_end+0x1f30a0>
     814:	42018e02 	andmi	r8, r1, #2, 28
     818:	5e040b0c 	vmlapl.f64	d0, d4, d12
     81c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     820:	00000018 	andeq	r0, r0, r8, lsl r0
     824:	00000644 	andeq	r0, r0, r4, asr #12
     828:	0000aae8 	andeq	sl, r0, r8, ror #21
     82c:	0000001c 	andeq	r0, r0, ip, lsl r0
     830:	8b080e42 	blhi	204140 <_bss_end+0x1f30c0>
     834:	42018e02 	andmi	r8, r1, #2, 28
     838:	00040b0c 	andeq	r0, r4, ip, lsl #22
     83c:	0000000c 	andeq	r0, r0, ip
     840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     844:	7c020001 	stcvc	0, cr0, [r2], {1}
     848:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     84c:	0000001c 	andeq	r0, r0, ip, lsl r0
     850:	0000083c 	andeq	r0, r0, ip, lsr r8
     854:	0000ac80 	andeq	sl, r0, r0, lsl #25
     858:	0000003c 	andeq	r0, r0, ip, lsr r0
     85c:	8b040e42 	blhi	10416c <_bss_end+0xf30ec>
     860:	0b0d4201 	bleq	35106c <_bss_end+0x33ffec>
     864:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
     868:	00000ecb 	andeq	r0, r0, fp, asr #29
     86c:	0000001c 	andeq	r0, r0, ip, lsl r0
     870:	0000083c 	andeq	r0, r0, ip, lsr r8
     874:	0000acbc 			; <UNDEFINED> instruction: 0x0000acbc
     878:	0000006c 	andeq	r0, r0, ip, rrx
     87c:	8b080e42 	blhi	20418c <_bss_end+0x1f310c>
     880:	42018e02 	andmi	r8, r1, #2, 28
     884:	6e040b0c 	vmlavs.f64	d0, d4, d12
     888:	00080d0c 	andeq	r0, r8, ip, lsl #26
     88c:	0000001c 	andeq	r0, r0, ip, lsl r0
     890:	0000083c 	andeq	r0, r0, ip, lsr r8
     894:	0000ad28 	andeq	sl, r0, r8, lsr #26
     898:	00000050 	andeq	r0, r0, r0, asr r0
     89c:	8b080e42 	blhi	2041ac <_bss_end+0x1f312c>
     8a0:	42018e02 	andmi	r8, r1, #2, 28
     8a4:	60040b0c 	andvs	r0, r4, ip, lsl #22
     8a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
     8ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     8b0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8b4:	0000ad78 	andeq	sl, r0, r8, ror sp
     8b8:	00000028 	andeq	r0, r0, r8, lsr #32
     8bc:	8b040e42 	blhi	1041cc <_bss_end+0xf314c>
     8c0:	0b0d4201 	bleq	3510cc <_bss_end+0x34004c>
     8c4:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     8c8:	00000ecb 	andeq	r0, r0, fp, asr #29
     8cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8d0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8d4:	0000ada0 	andeq	sl, r0, r0, lsr #27
     8d8:	00000094 	muleq	r0, r4, r0
     8dc:	8b080e42 	blhi	2041ec <_bss_end+0x1f316c>
     8e0:	42018e02 	andmi	r8, r1, #2, 28
     8e4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     8e8:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
     8ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     8f0:	0000083c 	andeq	r0, r0, ip, lsr r8
     8f4:	0000ae34 	andeq	sl, r0, r4, lsr lr
     8f8:	00000048 	andeq	r0, r0, r8, asr #32
     8fc:	8b040e42 	blhi	10420c <_bss_end+0xf318c>
     900:	0b0d4201 	bleq	35110c <_bss_end+0x34008c>
     904:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     908:	00000ecb 	andeq	r0, r0, fp, asr #29
     90c:	0000001c 	andeq	r0, r0, ip, lsl r0
     910:	0000083c 	andeq	r0, r0, ip, lsr r8
     914:	0000ae7c 	andeq	sl, r0, ip, ror lr
     918:	0000004c 	andeq	r0, r0, ip, asr #32
     91c:	8b080e42 	blhi	20422c <_bss_end+0x1f31ac>
     920:	42018e02 	andmi	r8, r1, #2, 28
     924:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     928:	00080d0c 	andeq	r0, r8, ip, lsl #26
     92c:	00000018 	andeq	r0, r0, r8, lsl r0
     930:	0000083c 	andeq	r0, r0, ip, lsr r8
     934:	0000aec8 	andeq	sl, r0, r8, asr #29
     938:	0000001c 	andeq	r0, r0, ip, lsl r0
     93c:	8b080e42 	blhi	20424c <_bss_end+0x1f31cc>
     940:	42018e02 	andmi	r8, r1, #2, 28
     944:	00040b0c 	andeq	r0, r4, ip, lsl #22
     948:	0000000c 	andeq	r0, r0, ip
     94c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     950:	7c020001 	stcvc	0, cr0, [r2], {1}
     954:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     958:	0000001c 	andeq	r0, r0, ip, lsl r0
     95c:	00000948 	andeq	r0, r0, r8, asr #18
     960:	0000aee4 	andeq	sl, r0, r4, ror #29
     964:	00000054 	andeq	r0, r0, r4, asr r0
     968:	8b040e42 	blhi	104278 <_bss_end+0xf31f8>
     96c:	0b0d4201 	bleq	351178 <_bss_end+0x3400f8>
     970:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
     974:	00000ecb 	andeq	r0, r0, fp, asr #29
     978:	0000001c 	andeq	r0, r0, ip, lsl r0
     97c:	00000948 	andeq	r0, r0, r8, asr #18
     980:	0000af38 	andeq	sl, r0, r8, lsr pc
     984:	00000174 	andeq	r0, r0, r4, ror r1
     988:	8b080e42 	blhi	204298 <_bss_end+0x1f3218>
     98c:	42018e02 	andmi	r8, r1, #2, 28
     990:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     994:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
     998:	0000001c 	andeq	r0, r0, ip, lsl r0
     99c:	00000948 	andeq	r0, r0, r8, asr #18
     9a0:	0000b0ac 	andeq	fp, r0, ip, lsr #1
     9a4:	000000d8 	ldrdeq	r0, [r0], -r8
     9a8:	8b080e42 	blhi	2042b8 <_bss_end+0x1f3238>
     9ac:	42018e02 	andmi	r8, r1, #2, 28
     9b0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9b4:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	00000948 	andeq	r0, r0, r8, asr #18
     9c0:	0000b184 	andeq	fp, r0, r4, lsl #3
     9c4:	00000028 	andeq	r0, r0, r8, lsr #32
     9c8:	8b040e42 	blhi	1042d8 <_bss_end+0xf3258>
     9cc:	0b0d4201 	bleq	3511d8 <_bss_end+0x340158>
     9d0:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     9d4:	00000ecb 	andeq	r0, r0, fp, asr #29
     9d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9dc:	00000948 	andeq	r0, r0, r8, asr #18
     9e0:	0000b1ac 	andeq	fp, r0, ip, lsr #3
     9e4:	00000124 	andeq	r0, r0, r4, lsr #2
     9e8:	8b080e42 	blhi	2042f8 <_bss_end+0x1f3278>
     9ec:	42018e02 	andmi	r8, r1, #2, 28
     9f0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9f4:	080d0c8a 	stmdaeq	sp, {r1, r3, r7, sl, fp}
     9f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9fc:	00000948 	andeq	r0, r0, r8, asr #18
     a00:	0000b2d0 	ldrdeq	fp, [r0], -r0
     a04:	00000164 	andeq	r0, r0, r4, ror #2
     a08:	8b080e42 	blhi	204318 <_bss_end+0x1f3298>
     a0c:	42018e02 	andmi	r8, r1, #2, 28
     a10:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a14:	080d0caa 	stmdaeq	sp, {r1, r3, r5, r7, sl, fp}
     a18:	0000001c 	andeq	r0, r0, ip, lsl r0
     a1c:	00000948 	andeq	r0, r0, r8, asr #18
     a20:	0000b434 	andeq	fp, r0, r4, lsr r4
     a24:	00000058 	andeq	r0, r0, r8, asr r0
     a28:	8b080e42 	blhi	204338 <_bss_end+0x1f32b8>
     a2c:	42018e02 	andmi	r8, r1, #2, 28
     a30:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     a34:	00080d0c 	andeq	r0, r8, ip, lsl #26
     a38:	00000018 	andeq	r0, r0, r8, lsl r0
     a3c:	00000948 	andeq	r0, r0, r8, asr #18
     a40:	0000b48c 	andeq	fp, r0, ip, lsl #9
     a44:	0000001c 	andeq	r0, r0, ip, lsl r0
     a48:	8b080e42 	blhi	204358 <_bss_end+0x1f32d8>
     a4c:	42018e02 	andmi	r8, r1, #2, 28
     a50:	00040b0c 	andeq	r0, r4, ip, lsl #22
     a54:	0000000c 	andeq	r0, r0, ip
     a58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a5c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a60:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a64:	0000001c 	andeq	r0, r0, ip, lsl r0
     a68:	00000a54 	andeq	r0, r0, r4, asr sl
     a6c:	0000b4a8 	andeq	fp, r0, r8, lsr #9
     a70:	00000040 	andeq	r0, r0, r0, asr #32
     a74:	8b040e42 	blhi	104384 <_bss_end+0xf3304>
     a78:	0b0d4201 	bleq	351284 <_bss_end+0x340204>
     a7c:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     a80:	00000ecb 	andeq	r0, r0, fp, asr #29
     a84:	0000001c 	andeq	r0, r0, ip, lsl r0
     a88:	00000a54 	andeq	r0, r0, r4, asr sl
     a8c:	0000b4e8 	andeq	fp, r0, r8, ror #9
     a90:	00000038 	andeq	r0, r0, r8, lsr r0
     a94:	8b040e42 	blhi	1043a4 <_bss_end+0xf3324>
     a98:	0b0d4201 	bleq	3512a4 <_bss_end+0x340224>
     a9c:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     aa0:	00000ecb 	andeq	r0, r0, fp, asr #29
     aa4:	00000020 	andeq	r0, r0, r0, lsr #32
     aa8:	00000a54 	andeq	r0, r0, r4, asr sl
     aac:	0000b520 	andeq	fp, r0, r0, lsr #10
     ab0:	000000cc 	andeq	r0, r0, ip, asr #1
     ab4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     ab8:	8e028b03 	vmlahi.f64	d8, d2, d3
     abc:	0b0c4201 	bleq	3112c8 <_bss_end+0x300248>
     ac0:	0c600204 	sfmeq	f0, 2, [r0], #-16
     ac4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     ac8:	0000001c 	andeq	r0, r0, ip, lsl r0
     acc:	00000a54 	andeq	r0, r0, r4, asr sl
     ad0:	0000b5ec 	andeq	fp, r0, ip, ror #11
     ad4:	0000004c 	andeq	r0, r0, ip, asr #32
     ad8:	8b080e42 	blhi	2043e8 <_bss_end+0x1f3368>
     adc:	42018e02 	andmi	r8, r1, #2, 28
     ae0:	60040b0c 	andvs	r0, r4, ip, lsl #22
     ae4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ae8:	0000001c 	andeq	r0, r0, ip, lsl r0
     aec:	00000a54 	andeq	r0, r0, r4, asr sl
     af0:	0000b638 	andeq	fp, r0, r8, lsr r6
     af4:	00000050 	andeq	r0, r0, r0, asr r0
     af8:	8b080e42 	blhi	204408 <_bss_end+0x1f3388>
     afc:	42018e02 	andmi	r8, r1, #2, 28
     b00:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
     b04:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b08:	0000001c 	andeq	r0, r0, ip, lsl r0
     b0c:	00000a54 	andeq	r0, r0, r4, asr sl
     b10:	0000b688 	andeq	fp, r0, r8, lsl #13
     b14:	00000040 	andeq	r0, r0, r0, asr #32
     b18:	8b080e42 	blhi	204428 <_bss_end+0x1f33a8>
     b1c:	42018e02 	andmi	r8, r1, #2, 28
     b20:	5a040b0c 	bpl	103758 <_bss_end+0xf26d8>
     b24:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b28:	0000001c 	andeq	r0, r0, ip, lsl r0
     b2c:	00000a54 	andeq	r0, r0, r4, asr sl
     b30:	0000b6c8 	andeq	fp, r0, r8, asr #13
     b34:	00000054 	andeq	r0, r0, r4, asr r0
     b38:	8b080e42 	blhi	204448 <_bss_end+0x1f33c8>
     b3c:	42018e02 	andmi	r8, r1, #2, 28
     b40:	5e040b0c 	vmlapl.f64	d0, d4, d12
     b44:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b48:	00000018 	andeq	r0, r0, r8, lsl r0
     b4c:	00000a54 	andeq	r0, r0, r4, asr sl
     b50:	0000b71c 	andeq	fp, r0, ip, lsl r7
     b54:	0000001c 	andeq	r0, r0, ip, lsl r0
     b58:	8b080e42 	blhi	204468 <_bss_end+0x1f33e8>
     b5c:	42018e02 	andmi	r8, r1, #2, 28
     b60:	00040b0c 	andeq	r0, r4, ip, lsl #22
     b64:	0000000c 	andeq	r0, r0, ip
     b68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     b70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b74:	0000001c 	andeq	r0, r0, ip, lsl r0
     b78:	00000b64 	andeq	r0, r0, r4, ror #22
     b7c:	0000b738 	andeq	fp, r0, r8, lsr r7
     b80:	00000040 	andeq	r0, r0, r0, asr #32
     b84:	8b040e42 	blhi	104494 <_bss_end+0xf3414>
     b88:	0b0d4201 	bleq	351394 <_bss_end+0x340314>
     b8c:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     b90:	00000ecb 	andeq	r0, r0, fp, asr #29
     b94:	0000001c 	andeq	r0, r0, ip, lsl r0
     b98:	00000b64 	andeq	r0, r0, r4, ror #22
     b9c:	0000b778 	andeq	fp, r0, r8, ror r7
     ba0:	000000e8 	andeq	r0, r0, r8, ror #1
     ba4:	8b040e42 	blhi	1044b4 <_bss_end+0xf3434>
     ba8:	0b0d4201 	bleq	3513b4 <_bss_end+0x340334>
     bac:	0d0d6c02 	stceq	12, cr6, [sp, #-8]
     bb0:	000ecb42 	andeq	ip, lr, r2, asr #22
     bb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bb8:	00000b64 	andeq	r0, r0, r4, ror #22
     bbc:	0000b860 	andeq	fp, r0, r0, ror #16
     bc0:	00000068 	andeq	r0, r0, r8, rrx
     bc4:	8b040e42 	blhi	1044d4 <_bss_end+0xf3454>
     bc8:	0b0d4201 	bleq	3513d4 <_bss_end+0x340354>
     bcc:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
     bd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     bd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bd8:	00000b64 	andeq	r0, r0, r4, ror #22
     bdc:	0000b8c8 	andeq	fp, r0, r8, asr #17
     be0:	00000038 	andeq	r0, r0, r8, lsr r0
     be4:	8b040e42 	blhi	1044f4 <_bss_end+0xf3474>
     be8:	0b0d4201 	bleq	3513f4 <_bss_end+0x340374>
     bec:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     bf0:	00000ecb 	andeq	r0, r0, fp, asr #29
     bf4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bf8:	00000b64 	andeq	r0, r0, r4, ror #22
     bfc:	0000b900 	andeq	fp, r0, r0, lsl #18
     c00:	00000048 	andeq	r0, r0, r8, asr #32
     c04:	8b040e42 	blhi	104514 <_bss_end+0xf3494>
     c08:	0b0d4201 	bleq	351414 <_bss_end+0x340394>
     c0c:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     c10:	00000ecb 	andeq	r0, r0, fp, asr #29
     c14:	0000001c 	andeq	r0, r0, ip, lsl r0
     c18:	00000b64 	andeq	r0, r0, r4, ror #22
     c1c:	0000b948 	andeq	fp, r0, r8, asr #18
     c20:	00000054 	andeq	r0, r0, r4, asr r0
     c24:	8b080e42 	blhi	204534 <_bss_end+0x1f34b4>
     c28:	42018e02 	andmi	r8, r1, #2, 28
     c2c:	5e040b0c 	vmlapl.f64	d0, d4, d12
     c30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     c34:	00000018 	andeq	r0, r0, r8, lsl r0
     c38:	00000b64 	andeq	r0, r0, r4, ror #22
     c3c:	0000b99c 	muleq	r0, ip, r9
     c40:	0000001c 	andeq	r0, r0, ip, lsl r0
     c44:	8b080e42 	blhi	204554 <_bss_end+0x1f34d4>
     c48:	42018e02 	andmi	r8, r1, #2, 28
     c4c:	00040b0c 	andeq	r0, r4, ip, lsl #22
     c50:	0000000c 	andeq	r0, r0, ip
     c54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c58:	7c020001 	stcvc	0, cr0, [r2], {1}
     c5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000c50 	andeq	r0, r0, r0, asr ip
     c68:	0000c214 	andeq	ip, r0, r4, lsl r2
     c6c:	0000003c 	andeq	r0, r0, ip, lsr r0
     c70:	8b040e42 	blhi	104580 <_bss_end+0xf3500>
     c74:	0b0d4201 	bleq	351480 <_bss_end+0x340400>
     c78:	420d0d56 	andmi	r0, sp, #5504	; 0x1580
     c7c:	00000ecb 	andeq	r0, r0, fp, asr #29
     c80:	0000001c 	andeq	r0, r0, ip, lsl r0
     c84:	00000c50 	andeq	r0, r0, r0, asr ip
     c88:	0000b9b8 			; <UNDEFINED> instruction: 0x0000b9b8
     c8c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     c90:	8b080e42 	blhi	2045a0 <_bss_end+0x1f3520>
     c94:	42018e02 	andmi	r8, r1, #2, 28
     c98:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c9c:	080d0cd0 	stmdaeq	sp, {r4, r6, r7, sl, fp}
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000c50 	andeq	r0, r0, r0, asr ip
     ca8:	0000bb70 	andeq	fp, r0, r0, ror fp
     cac:	00000084 	andeq	r0, r0, r4, lsl #1
     cb0:	8b080e42 	blhi	2045c0 <_bss_end+0x1f3540>
     cb4:	42018e02 	andmi	r8, r1, #2, 28
     cb8:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     cbc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     cc0:	00000020 	andeq	r0, r0, r0, lsr #32
     cc4:	00000c50 	andeq	r0, r0, r0, asr ip
     cc8:	0000bbf4 	strdeq	fp, [r0], -r4
     ccc:	0000035c 	andeq	r0, r0, ip, asr r3
     cd0:	8b080e42 	blhi	2045e0 <_bss_end+0x1f3560>
     cd4:	42018e02 	andmi	r8, r1, #2, 28
     cd8:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     cdc:	0d0c018e 	stfeqs	f0, [ip, #-568]	; 0xfffffdc8
     ce0:	00000008 	andeq	r0, r0, r8
     ce4:	00000020 	andeq	r0, r0, r0, lsr #32
     ce8:	00000c50 	andeq	r0, r0, r0, asr ip
     cec:	0000bf50 	andeq	fp, r0, r0, asr pc
     cf0:	0000025c 	andeq	r0, r0, ip, asr r2
     cf4:	8b080e42 	blhi	204604 <_bss_end+0x1f3584>
     cf8:	42018e02 	andmi	r8, r1, #2, 28
     cfc:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     d00:	0d0c011e 	stfeqs	f0, [ip, #-120]	; 0xffffff88
     d04:	00000008 	andeq	r0, r0, r8
     d08:	0000001c 	andeq	r0, r0, ip, lsl r0
     d0c:	00000c50 	andeq	r0, r0, r0, asr ip
     d10:	0000c250 	andeq	ip, r0, r0, asr r2
     d14:	0000002c 	andeq	r0, r0, ip, lsr #32
     d18:	8b080e42 	blhi	204628 <_bss_end+0x1f35a8>
     d1c:	42018e02 	andmi	r8, r1, #2, 28
     d20:	50040b0c 	andpl	r0, r4, ip, lsl #22
     d24:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d28:	0000001c 	andeq	r0, r0, ip, lsl r0
     d2c:	00000c50 	andeq	r0, r0, r0, asr ip
     d30:	0000c1ac 	andeq	ip, r0, ip, lsr #3
     d34:	0000004c 	andeq	r0, r0, ip, asr #32
     d38:	8b080e42 	blhi	204648 <_bss_end+0x1f35c8>
     d3c:	42018e02 	andmi	r8, r1, #2, 28
     d40:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     d44:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d48:	00000018 	andeq	r0, r0, r8, lsl r0
     d4c:	00000c50 	andeq	r0, r0, r0, asr ip
     d50:	0000c1f8 	strdeq	ip, [r0], -r8
     d54:	0000001c 	andeq	r0, r0, ip, lsl r0
     d58:	8b080e42 	blhi	204668 <_bss_end+0x1f35e8>
     d5c:	42018e02 	andmi	r8, r1, #2, 28
     d60:	00040b0c 	andeq	r0, r4, ip, lsl #22
     d64:	0000000c 	andeq	r0, r0, ip
     d68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     d70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d74:	0000001c 	andeq	r0, r0, ip, lsl r0
     d78:	00000d64 	andeq	r0, r0, r4, ror #26
     d7c:	0000c27c 	andeq	ip, r0, ip, ror r2
     d80:	0000002c 	andeq	r0, r0, ip, lsr #32
     d84:	8b040e42 	blhi	104694 <_bss_end+0xf3614>
     d88:	0b0d4201 	bleq	351594 <_bss_end+0x340514>
     d8c:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     d90:	00000ecb 	andeq	r0, r0, fp, asr #29
     d94:	0000001c 	andeq	r0, r0, ip, lsl r0
     d98:	00000d64 	andeq	r0, r0, r4, ror #26
     d9c:	0000c2a8 	andeq	ip, r0, r8, lsr #5
     da0:	0000002c 	andeq	r0, r0, ip, lsr #32
     da4:	8b040e42 	blhi	1046b4 <_bss_end+0xf3634>
     da8:	0b0d4201 	bleq	3515b4 <_bss_end+0x340534>
     dac:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     db0:	00000ecb 	andeq	r0, r0, fp, asr #29
     db4:	0000001c 	andeq	r0, r0, ip, lsl r0
     db8:	00000d64 	andeq	r0, r0, r4, ror #26
     dbc:	0000c2d4 	ldrdeq	ip, [r0], -r4
     dc0:	00000024 	andeq	r0, r0, r4, lsr #32
     dc4:	8b040e42 	blhi	1046d4 <_bss_end+0xf3654>
     dc8:	0b0d4201 	bleq	3515d4 <_bss_end+0x340554>
     dcc:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     dd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     dd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     dd8:	00000d64 	andeq	r0, r0, r4, ror #26
     ddc:	0000c2f8 	strdeq	ip, [r0], -r8
     de0:	0000002c 	andeq	r0, r0, ip, lsr #32
     de4:	8b040e42 	blhi	1046f4 <_bss_end+0xf3674>
     de8:	0b0d4201 	bleq	3515f4 <_bss_end+0x340574>
     dec:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     df0:	00000ecb 	andeq	r0, r0, fp, asr #29
     df4:	0000001c 	andeq	r0, r0, ip, lsl r0
     df8:	00000d64 	andeq	r0, r0, r4, ror #26
     dfc:	0000c324 	andeq	ip, r0, r4, lsr #6
     e00:	00000030 	andeq	r0, r0, r0, lsr r0
     e04:	8b080e42 	blhi	204714 <_bss_end+0x1f3694>
     e08:	42018e02 	andmi	r8, r1, #2, 28
     e0c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     e10:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e14:	0000001c 	andeq	r0, r0, ip, lsl r0
     e18:	00000d64 	andeq	r0, r0, r4, ror #26
     e1c:	0000ab04 	andeq	sl, r0, r4, lsl #22
     e20:	00000030 	andeq	r0, r0, r0, lsr r0
     e24:	8b080e42 	blhi	204734 <_bss_end+0x1f36b4>
     e28:	42018e02 	andmi	r8, r1, #2, 28
     e2c:	50040b0c 	andpl	r0, r4, ip, lsl #22
     e30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e34:	0000001c 	andeq	r0, r0, ip, lsl r0
     e38:	00000d64 	andeq	r0, r0, r4, ror #26
     e3c:	0000c354 	andeq	ip, r0, r4, asr r3
     e40:	00000034 	andeq	r0, r0, r4, lsr r0
     e44:	8b040e42 	blhi	104754 <_bss_end+0xf36d4>
     e48:	0b0d4201 	bleq	351654 <_bss_end+0x3405d4>
     e4c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     e50:	00000ecb 	andeq	r0, r0, fp, asr #29
     e54:	0000001c 	andeq	r0, r0, ip, lsl r0
     e58:	00000d64 	andeq	r0, r0, r4, ror #26
     e5c:	0000c388 	andeq	ip, r0, r8, lsl #7
     e60:	00000034 	andeq	r0, r0, r4, lsr r0
     e64:	8b040e42 	blhi	104774 <_bss_end+0xf36f4>
     e68:	0b0d4201 	bleq	351674 <_bss_end+0x3405f4>
     e6c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     e70:	00000ecb 	andeq	r0, r0, fp, asr #29
     e74:	0000001c 	andeq	r0, r0, ip, lsl r0
     e78:	00000d64 	andeq	r0, r0, r4, ror #26
     e7c:	0000c3bc 			; <UNDEFINED> instruction: 0x0000c3bc
     e80:	00000034 	andeq	r0, r0, r4, lsr r0
     e84:	8b080e42 	blhi	204794 <_bss_end+0x1f3714>
     e88:	42018e02 	andmi	r8, r1, #2, 28
     e8c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     e90:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e94:	0000001c 	andeq	r0, r0, ip, lsl r0
     e98:	00000d64 	andeq	r0, r0, r4, ror #26
     e9c:	0000c3f0 	strdeq	ip, [r0], -r0
     ea0:	0000007c 	andeq	r0, r0, ip, ror r0
     ea4:	8b080e42 	blhi	2047b4 <_bss_end+0x1f3734>
     ea8:	42018e02 	andmi	r8, r1, #2, 28
     eac:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     eb0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     eb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     eb8:	00000d64 	andeq	r0, r0, r4, ror #26
     ebc:	0000c46c 	andeq	ip, r0, ip, ror #8
     ec0:	00000044 	andeq	r0, r0, r4, asr #32
     ec4:	8b080e42 	blhi	2047d4 <_bss_end+0x1f3754>
     ec8:	42018e02 	andmi	r8, r1, #2, 28
     ecc:	5a040b0c 	bpl	103b04 <_bss_end+0xf2a84>
     ed0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ed4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ed8:	00000d64 	andeq	r0, r0, r4, ror #26
     edc:	0000c4b0 			; <UNDEFINED> instruction: 0x0000c4b0
     ee0:	00000034 	andeq	r0, r0, r4, lsr r0
     ee4:	8b080e42 	blhi	2047f4 <_bss_end+0x1f3774>
     ee8:	42018e02 	andmi	r8, r1, #2, 28
     eec:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     ef0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ef4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ef8:	00000d64 	andeq	r0, r0, r4, ror #26
     efc:	0000c4e4 	andeq	ip, r0, r4, ror #9
     f00:	00000080 	andeq	r0, r0, r0, lsl #1
     f04:	8b080e42 	blhi	204814 <_bss_end+0x1f3794>
     f08:	42018e02 	andmi	r8, r1, #2, 28
     f0c:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
     f10:	00080d0c 	andeq	r0, r8, ip, lsl #26
     f14:	0000001c 	andeq	r0, r0, ip, lsl r0
     f18:	00000d64 	andeq	r0, r0, r4, ror #26
     f1c:	0000c564 	andeq	ip, r0, r4, ror #10
     f20:	0000007c 	andeq	r0, r0, ip, ror r0
     f24:	8b080e42 	blhi	204834 <_bss_end+0x1f37b4>
     f28:	42018e02 	andmi	r8, r1, #2, 28
     f2c:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     f30:	00080d0c 	andeq	r0, r8, ip, lsl #26
     f34:	0000001c 	andeq	r0, r0, ip, lsl r0
     f38:	00000d64 	andeq	r0, r0, r4, ror #26
     f3c:	0000c5e0 	andeq	ip, r0, r0, ror #11
     f40:	0000009c 	muleq	r0, ip, r0
     f44:	8b080e42 	blhi	204854 <_bss_end+0x1f37d4>
     f48:	42018e02 	andmi	r8, r1, #2, 28
     f4c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f50:	080d0c46 	stmdaeq	sp, {r1, r2, r6, sl, fp}
     f54:	0000001c 	andeq	r0, r0, ip, lsl r0
     f58:	00000d64 	andeq	r0, r0, r4, ror #26
     f5c:	0000c67c 	andeq	ip, r0, ip, ror r6
     f60:	0000002c 	andeq	r0, r0, ip, lsr #32
     f64:	8b040e42 	blhi	104874 <_bss_end+0xf37f4>
     f68:	0b0d4201 	bleq	351774 <_bss_end+0x3406f4>
     f6c:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     f70:	00000ecb 	andeq	r0, r0, fp, asr #29
     f74:	0000001c 	andeq	r0, r0, ip, lsl r0
     f78:	00000d64 	andeq	r0, r0, r4, ror #26
     f7c:	0000c6a8 	andeq	ip, r0, r8, lsr #13
     f80:	00000020 	andeq	r0, r0, r0, lsr #32
     f84:	8b040e42 	blhi	104894 <_bss_end+0xf3814>
     f88:	0b0d4201 	bleq	351794 <_bss_end+0x340714>
     f8c:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
     f90:	00000ecb 	andeq	r0, r0, fp, asr #29
     f94:	00000020 	andeq	r0, r0, r0, lsr #32
     f98:	00000d64 	andeq	r0, r0, r4, ror #26
     f9c:	0000c6c8 	andeq	ip, r0, r8, asr #13
     fa0:	00000158 	andeq	r0, r0, r8, asr r1
     fa4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     fa8:	8e028b03 	vmlahi.f64	d8, d2, d3
     fac:	0b0c4201 	bleq	3117b8 <_bss_end+0x300738>
     fb0:	0ca40204 	sfmeq	f0, 4, [r4], #16
     fb4:	00000c0d 	andeq	r0, r0, sp, lsl #24
     fb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fbc:	00000d64 	andeq	r0, r0, r4, ror #26
     fc0:	0000c820 	andeq	ip, r0, r0, lsr #16
     fc4:	0000004c 	andeq	r0, r0, ip, asr #32
     fc8:	8b080e42 	blhi	2048d8 <_bss_end+0x1f3858>
     fcc:	42018e02 	andmi	r8, r1, #2, 28
     fd0:	5e040b0c 	vmlapl.f64	d0, d4, d12
     fd4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     fd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fdc:	00000d64 	andeq	r0, r0, r4, ror #26
     fe0:	0000c86c 	andeq	ip, r0, ip, ror #16
     fe4:	00000044 	andeq	r0, r0, r4, asr #32
     fe8:	8b080e42 	blhi	2048f8 <_bss_end+0x1f3878>
     fec:	42018e02 	andmi	r8, r1, #2, 28
     ff0:	5a040b0c 	bpl	103c28 <_bss_end+0xf2ba8>
     ff4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ff8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ffc:	00000d64 	andeq	r0, r0, r4, ror #26
    1000:	0000c8b0 			; <UNDEFINED> instruction: 0x0000c8b0
    1004:	00000034 	andeq	r0, r0, r4, lsr r0
    1008:	8b080e42 	blhi	204918 <_bss_end+0x1f3898>
    100c:	42018e02 	andmi	r8, r1, #2, 28
    1010:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1014:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1018:	0000001c 	andeq	r0, r0, ip, lsl r0
    101c:	00000d64 	andeq	r0, r0, r4, ror #26
    1020:	0000c8e4 	andeq	ip, r0, r4, ror #17
    1024:	0000002c 	andeq	r0, r0, ip, lsr #32
    1028:	8b040e42 	blhi	104938 <_bss_end+0xf38b8>
    102c:	0b0d4201 	bleq	351838 <_bss_end+0x3407b8>
    1030:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1034:	00000ecb 	andeq	r0, r0, fp, asr #29
    1038:	0000001c 	andeq	r0, r0, ip, lsl r0
    103c:	00000d64 	andeq	r0, r0, r4, ror #26
    1040:	0000c910 	andeq	ip, r0, r0, lsl r9
    1044:	00000068 	andeq	r0, r0, r8, rrx
    1048:	8b080e42 	blhi	204958 <_bss_end+0x1f38d8>
    104c:	42018e02 	andmi	r8, r1, #2, 28
    1050:	6c040b0c 			; <UNDEFINED> instruction: 0x6c040b0c
    1054:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1058:	0000001c 	andeq	r0, r0, ip, lsl r0
    105c:	00000d64 	andeq	r0, r0, r4, ror #26
    1060:	0000c978 	andeq	ip, r0, r8, ror r9
    1064:	00000048 	andeq	r0, r0, r8, asr #32
    1068:	8b040e42 	blhi	104978 <_bss_end+0xf38f8>
    106c:	0b0d4201 	bleq	351878 <_bss_end+0x3407f8>
    1070:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    1074:	00000ecb 	andeq	r0, r0, fp, asr #29
    1078:	0000001c 	andeq	r0, r0, ip, lsl r0
    107c:	00000d64 	andeq	r0, r0, r4, ror #26
    1080:	0000c9c0 	andeq	ip, r0, r0, asr #19
    1084:	00000044 	andeq	r0, r0, r4, asr #32
    1088:	8b040e42 	blhi	104998 <_bss_end+0xf3918>
    108c:	0b0d4201 	bleq	351898 <_bss_end+0x340818>
    1090:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    1094:	00000ecb 	andeq	r0, r0, fp, asr #29
    1098:	0000001c 	andeq	r0, r0, ip, lsl r0
    109c:	00000d64 	andeq	r0, r0, r4, ror #26
    10a0:	0000ca04 	andeq	ip, r0, r4, lsl #20
    10a4:	00000020 	andeq	r0, r0, r0, lsr #32
    10a8:	8b040e42 	blhi	1049b8 <_bss_end+0xf3938>
    10ac:	0b0d4201 	bleq	3518b8 <_bss_end+0x340838>
    10b0:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    10b4:	00000ecb 	andeq	r0, r0, fp, asr #29
    10b8:	00000020 	andeq	r0, r0, r0, lsr #32
    10bc:	00000d64 	andeq	r0, r0, r4, ror #26
    10c0:	0000ca24 	andeq	ip, r0, r4, lsr #20
    10c4:	00000068 	andeq	r0, r0, r8, rrx
    10c8:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    10cc:	8e028b03 	vmlahi.f64	d8, d2, d3
    10d0:	0b0c4201 	bleq	3118dc <_bss_end+0x30085c>
    10d4:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    10e0:	00000d64 	andeq	r0, r0, r4, ror #26
    10e4:	0000ca8c 	andeq	ip, r0, ip, lsl #21
    10e8:	00000048 	andeq	r0, r0, r8, asr #32
    10ec:	8b080e42 	blhi	2049fc <_bss_end+0x1f397c>
    10f0:	42018e02 	andmi	r8, r1, #2, 28
    10f4:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    10f8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    10fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1100:	00000d64 	andeq	r0, r0, r4, ror #26
    1104:	0000cad4 	ldrdeq	ip, [r0], -r4
    1108:	00000044 	andeq	r0, r0, r4, asr #32
    110c:	8b080e42 	blhi	204a1c <_bss_end+0x1f399c>
    1110:	42018e02 	andmi	r8, r1, #2, 28
    1114:	5a040b0c 	bpl	103d4c <_bss_end+0xf2ccc>
    1118:	00080d0c 	andeq	r0, r8, ip, lsl #26
    111c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1120:	00000d64 	andeq	r0, r0, r4, ror #26
    1124:	0000cb18 	andeq	ip, r0, r8, lsl fp
    1128:	00000034 	andeq	r0, r0, r4, lsr r0
    112c:	8b080e42 	blhi	204a3c <_bss_end+0x1f39bc>
    1130:	42018e02 	andmi	r8, r1, #2, 28
    1134:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1138:	00080d0c 	andeq	r0, r8, ip, lsl #26
    113c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1140:	00000d64 	andeq	r0, r0, r4, ror #26
    1144:	0000cb4c 	andeq	ip, r0, ip, asr #22
    1148:	00000058 	andeq	r0, r0, r8, asr r0
    114c:	8b080e42 	blhi	204a5c <_bss_end+0x1f39dc>
    1150:	42018e02 	andmi	r8, r1, #2, 28
    1154:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1158:	00080d0c 	andeq	r0, r8, ip, lsl #26
    115c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1160:	00000d64 	andeq	r0, r0, r4, ror #26
    1164:	0000cba4 	andeq	ip, r0, r4, lsr #23
    1168:	00000070 	andeq	r0, r0, r0, ror r0
    116c:	8b080e42 	blhi	204a7c <_bss_end+0x1f39fc>
    1170:	42018e02 	andmi	r8, r1, #2, 28
    1174:	70040b0c 	andvc	r0, r4, ip, lsl #22
    1178:	00080d0c 	andeq	r0, r8, ip, lsl #26
    117c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1180:	00000d64 	andeq	r0, r0, r4, ror #26
    1184:	0000cc14 	andeq	ip, r0, r4, lsl ip
    1188:	00000058 	andeq	r0, r0, r8, asr r0
    118c:	8b080e42 	blhi	204a9c <_bss_end+0x1f3a1c>
    1190:	42018e02 	andmi	r8, r1, #2, 28
    1194:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    1198:	00080d0c 	andeq	r0, r8, ip, lsl #26
    119c:	0000001c 	andeq	r0, r0, ip, lsl r0
    11a0:	00000d64 	andeq	r0, r0, r4, ror #26
    11a4:	0000cc6c 	andeq	ip, r0, ip, ror #24
    11a8:	0000002c 	andeq	r0, r0, ip, lsr #32
    11ac:	8b040e42 	blhi	104abc <_bss_end+0xf3a3c>
    11b0:	0b0d4201 	bleq	3519bc <_bss_end+0x34093c>
    11b4:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    11b8:	00000ecb 	andeq	r0, r0, fp, asr #29
    11bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    11c0:	00000d64 	andeq	r0, r0, r4, ror #26
    11c4:	0000cc98 	muleq	r0, r8, ip
    11c8:	00000020 	andeq	r0, r0, r0, lsr #32
    11cc:	8b040e42 	blhi	104adc <_bss_end+0xf3a5c>
    11d0:	0b0d4201 	bleq	3519dc <_bss_end+0x34095c>
    11d4:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    11d8:	00000ecb 	andeq	r0, r0, fp, asr #29
    11dc:	00000020 	andeq	r0, r0, r0, lsr #32
    11e0:	00000d64 	andeq	r0, r0, r4, ror #26
    11e4:	0000ccb8 			; <UNDEFINED> instruction: 0x0000ccb8
    11e8:	0000006c 	andeq	r0, r0, ip, rrx
    11ec:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    11f0:	8e028b03 	vmlahi.f64	d8, d2, d3
    11f4:	0b0c4201 	bleq	311a00 <_bss_end+0x300980>
    11f8:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    11fc:	0000000c 	andeq	r0, r0, ip
    1200:	0000001c 	andeq	r0, r0, ip, lsl r0
    1204:	00000d64 	andeq	r0, r0, r4, ror #26
    1208:	0000cd24 	andeq	ip, r0, r4, lsr #26
    120c:	00000048 	andeq	r0, r0, r8, asr #32
    1210:	8b080e42 	blhi	204b20 <_bss_end+0x1f3aa0>
    1214:	42018e02 	andmi	r8, r1, #2, 28
    1218:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    121c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1220:	0000001c 	andeq	r0, r0, ip, lsl r0
    1224:	00000d64 	andeq	r0, r0, r4, ror #26
    1228:	0000cd6c 	andeq	ip, r0, ip, ror #26
    122c:	00000044 	andeq	r0, r0, r4, asr #32
    1230:	8b080e42 	blhi	204b40 <_bss_end+0x1f3ac0>
    1234:	42018e02 	andmi	r8, r1, #2, 28
    1238:	5a040b0c 	bpl	103e70 <_bss_end+0xf2df0>
    123c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1240:	0000001c 	andeq	r0, r0, ip, lsl r0
    1244:	00000d64 	andeq	r0, r0, r4, ror #26
    1248:	0000cdb0 			; <UNDEFINED> instruction: 0x0000cdb0
    124c:	00000034 	andeq	r0, r0, r4, lsr r0
    1250:	8b080e42 	blhi	204b60 <_bss_end+0x1f3ae0>
    1254:	42018e02 	andmi	r8, r1, #2, 28
    1258:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    125c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1260:	0000001c 	andeq	r0, r0, ip, lsl r0
    1264:	00000d64 	andeq	r0, r0, r4, ror #26
    1268:	0000cde4 	andeq	ip, r0, r4, ror #27
    126c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1270:	8b040e42 	blhi	104b80 <_bss_end+0xf3b00>
    1274:	0b0d4201 	bleq	351a80 <_bss_end+0x340a00>
    1278:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    127c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1280:	0000001c 	andeq	r0, r0, ip, lsl r0
    1284:	00000d64 	andeq	r0, r0, r4, ror #26
    1288:	0000ce10 	andeq	ip, r0, r0, lsl lr
    128c:	00000070 	andeq	r0, r0, r0, ror r0
    1290:	8b080e42 	blhi	204ba0 <_bss_end+0x1f3b20>
    1294:	42018e02 	andmi	r8, r1, #2, 28
    1298:	70040b0c 	andvc	r0, r4, ip, lsl #22
    129c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12a4:	00000d64 	andeq	r0, r0, r4, ror #26
    12a8:	0000ce80 	andeq	ip, r0, r0, lsl #29
    12ac:	00000058 	andeq	r0, r0, r8, asr r0
    12b0:	8b080e42 	blhi	204bc0 <_bss_end+0x1f3b40>
    12b4:	42018e02 	andmi	r8, r1, #2, 28
    12b8:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    12bc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12c4:	00000d64 	andeq	r0, r0, r4, ror #26
    12c8:	0000ced8 	ldrdeq	ip, [r0], -r8
    12cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    12d0:	8b040e42 	blhi	104be0 <_bss_end+0xf3b60>
    12d4:	0b0d4201 	bleq	351ae0 <_bss_end+0x340a60>
    12d8:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    12dc:	00000ecb 	andeq	r0, r0, fp, asr #29
    12e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12e4:	00000d64 	andeq	r0, r0, r4, ror #26
    12e8:	0000cf04 	andeq	ip, r0, r4, lsl #30
    12ec:	00000020 	andeq	r0, r0, r0, lsr #32
    12f0:	8b040e42 	blhi	104c00 <_bss_end+0xf3b80>
    12f4:	0b0d4201 	bleq	351b00 <_bss_end+0x340a80>
    12f8:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    12fc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1300:	00000020 	andeq	r0, r0, r0, lsr #32
    1304:	00000d64 	andeq	r0, r0, r4, ror #26
    1308:	0000cf24 	andeq	ip, r0, r4, lsr #30
    130c:	0000006c 	andeq	r0, r0, ip, rrx
    1310:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1314:	8e028b03 	vmlahi.f64	d8, d2, d3
    1318:	0b0c4201 	bleq	311b24 <_bss_end+0x300aa4>
    131c:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    1320:	0000000c 	andeq	r0, r0, ip
    1324:	0000001c 	andeq	r0, r0, ip, lsl r0
    1328:	00000d64 	andeq	r0, r0, r4, ror #26
    132c:	0000cf90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    1330:	0000003c 	andeq	r0, r0, ip, lsr r0
    1334:	8b080e42 	blhi	204c44 <_bss_end+0x1f3bc4>
    1338:	42018e02 	andmi	r8, r1, #2, 28
    133c:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1340:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1344:	0000001c 	andeq	r0, r0, ip, lsl r0
    1348:	00000d64 	andeq	r0, r0, r4, ror #26
    134c:	0000cfcc 	andeq	ip, r0, ip, asr #31
    1350:	00000044 	andeq	r0, r0, r4, asr #32
    1354:	8b080e42 	blhi	204c64 <_bss_end+0x1f3be4>
    1358:	42018e02 	andmi	r8, r1, #2, 28
    135c:	5a040b0c 	bpl	103f94 <_bss_end+0xf2f14>
    1360:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1364:	0000001c 	andeq	r0, r0, ip, lsl r0
    1368:	00000d64 	andeq	r0, r0, r4, ror #26
    136c:	0000d010 	andeq	sp, r0, r0, lsl r0
    1370:	00000034 	andeq	r0, r0, r4, lsr r0
    1374:	8b080e42 	blhi	204c84 <_bss_end+0x1f3c04>
    1378:	42018e02 	andmi	r8, r1, #2, 28
    137c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1380:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1384:	00000020 	andeq	r0, r0, r0, lsr #32
    1388:	00000d64 	andeq	r0, r0, r4, ror #26
    138c:	0000d044 	andeq	sp, r0, r4, asr #32
    1390:	000000e8 	andeq	r0, r0, r8, ror #1
    1394:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1398:	8e028b03 	vmlahi.f64	d8, d2, d3
    139c:	0b0c4201 	bleq	311ba8 <_bss_end+0x300b28>
    13a0:	0c6c0204 	sfmeq	f0, 2, [ip], #-16
    13a4:	00000c0d 	andeq	r0, r0, sp, lsl #24
    13a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ac:	00000d64 	andeq	r0, r0, r4, ror #26
    13b0:	0000d12c 	andeq	sp, r0, ip, lsr #2
    13b4:	0000002c 	andeq	r0, r0, ip, lsr #32
    13b8:	8b040e42 	blhi	104cc8 <_bss_end+0xf3c48>
    13bc:	0b0d4201 	bleq	351bc8 <_bss_end+0x340b48>
    13c0:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    13c4:	00000ecb 	andeq	r0, r0, fp, asr #29
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00000d64 	andeq	r0, r0, r4, ror #26
    13d0:	0000d158 	andeq	sp, r0, r8, asr r1
    13d4:	00000058 	andeq	r0, r0, r8, asr r0
    13d8:	8b080e42 	blhi	204ce8 <_bss_end+0x1f3c68>
    13dc:	42018e02 	andmi	r8, r1, #2, 28
    13e0:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    13e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    13e8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ec:	00000d64 	andeq	r0, r0, r4, ror #26
    13f0:	0000d1b0 			; <UNDEFINED> instruction: 0x0000d1b0
    13f4:	0000002c 	andeq	r0, r0, ip, lsr #32
    13f8:	8b040e42 	blhi	104d08 <_bss_end+0xf3c88>
    13fc:	0b0d4201 	bleq	351c08 <_bss_end+0x340b88>
    1400:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1404:	00000ecb 	andeq	r0, r0, fp, asr #29
    1408:	0000001c 	andeq	r0, r0, ip, lsl r0
    140c:	00000d64 	andeq	r0, r0, r4, ror #26
    1410:	0000d1dc 	ldrdeq	sp, [r0], -ip
    1414:	00000020 	andeq	r0, r0, r0, lsr #32
    1418:	8b040e42 	blhi	104d28 <_bss_end+0xf3ca8>
    141c:	0b0d4201 	bleq	351c28 <_bss_end+0x340ba8>
    1420:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    1424:	00000ecb 	andeq	r0, r0, fp, asr #29
    1428:	00000020 	andeq	r0, r0, r0, lsr #32
    142c:	00000d64 	andeq	r0, r0, r4, ror #26
    1430:	0000d1fc 	strdeq	sp, [r0], -ip
    1434:	00000084 	andeq	r0, r0, r4, lsl #1
    1438:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    143c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1440:	0b0c4201 	bleq	311c4c <_bss_end+0x300bcc>
    1444:	0d0c7a04 	vstreq	s14, [ip, #-16]
    1448:	0000000c 	andeq	r0, r0, ip
    144c:	0000000c 	andeq	r0, r0, ip
    1450:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1454:	7c020001 	stcvc	0, cr0, [r2], {1}
    1458:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    145c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1460:	0000144c 	andeq	r1, r0, ip, asr #8
    1464:	0000d280 	andeq	sp, r0, r0, lsl #5
    1468:	000000a0 	andeq	r0, r0, r0, lsr #1
    146c:	8b080e42 	blhi	204d7c <_bss_end+0x1f3cfc>
    1470:	42018e02 	andmi	r8, r1, #2, 28
    1474:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1478:	080d0c46 	stmdaeq	sp, {r1, r2, r6, sl, fp}
    147c:	00000018 	andeq	r0, r0, r8, lsl r0
    1480:	0000144c 	andeq	r1, r0, ip, asr #8
    1484:	0000d320 	andeq	sp, r0, r0, lsr #6
    1488:	00000030 	andeq	r0, r0, r0, lsr r0
    148c:	8b080e42 	blhi	204d9c <_bss_end+0x1f3d1c>
    1490:	42018e02 	andmi	r8, r1, #2, 28
    1494:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1498:	00000014 	andeq	r0, r0, r4, lsl r0
    149c:	0000144c 	andeq	r1, r0, ip, asr #8
    14a0:	0000d350 	andeq	sp, r0, r0, asr r3
    14a4:	00000010 	andeq	r0, r0, r0, lsl r0
    14a8:	040b0c42 	streq	r0, [fp], #-3138	; 0xfffff3be
    14ac:	000d0c44 	andeq	r0, sp, r4, asr #24
    14b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    14b4:	0000144c 	andeq	r1, r0, ip, asr #8
    14b8:	0000d360 	andeq	sp, r0, r0, ror #6
    14bc:	00000034 	andeq	r0, r0, r4, lsr r0
    14c0:	8b040e42 	blhi	104dd0 <_bss_end+0xf3d50>
    14c4:	0b0d4201 	bleq	351cd0 <_bss_end+0x340c50>
    14c8:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
    14cc:	00000ecb 	andeq	r0, r0, fp, asr #29
    14d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d4:	0000144c 	andeq	r1, r0, ip, asr #8
    14d8:	0000d394 	muleq	r0, r4, r3
    14dc:	00000038 	andeq	r0, r0, r8, lsr r0
    14e0:	8b040e42 	blhi	104df0 <_bss_end+0xf3d70>
    14e4:	0b0d4201 	bleq	351cf0 <_bss_end+0x340c70>
    14e8:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
    14ec:	00000ecb 	andeq	r0, r0, fp, asr #29
    14f0:	00000020 	andeq	r0, r0, r0, lsr #32
    14f4:	0000144c 	andeq	r1, r0, ip, asr #8
    14f8:	0000d3cc 	andeq	sp, r0, ip, asr #7
    14fc:	00000044 	andeq	r0, r0, r4, asr #32
    1500:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1504:	8e028b03 	vmlahi.f64	d8, d2, d3
    1508:	0b0c4201 	bleq	311d14 <_bss_end+0x300c94>
    150c:	0d0c5c04 	stceq	12, cr5, [ip, #-16]
    1510:	0000000c 	andeq	r0, r0, ip
    1514:	00000020 	andeq	r0, r0, r0, lsr #32
    1518:	0000144c 	andeq	r1, r0, ip, asr #8
    151c:	0000d410 	andeq	sp, r0, r0, lsl r4
    1520:	00000044 	andeq	r0, r0, r4, asr #32
    1524:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1528:	8e028b03 	vmlahi.f64	d8, d2, d3
    152c:	0b0c4201 	bleq	311d38 <_bss_end+0x300cb8>
    1530:	0d0c5c04 	stceq	12, cr5, [ip, #-16]
    1534:	0000000c 	andeq	r0, r0, ip
    1538:	00000020 	andeq	r0, r0, r0, lsr #32
    153c:	0000144c 	andeq	r1, r0, ip, asr #8
    1540:	0000d454 	andeq	sp, r0, r4, asr r4
    1544:	00000050 	andeq	r0, r0, r0, asr r0
    1548:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    154c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1550:	0b0c4201 	bleq	311d5c <_bss_end+0x300cdc>
    1554:	0d0c6204 	sfmeq	f6, 4, [ip, #-16]
    1558:	0000000c 	andeq	r0, r0, ip
    155c:	00000020 	andeq	r0, r0, r0, lsr #32
    1560:	0000144c 	andeq	r1, r0, ip, asr #8
    1564:	0000d4a4 	andeq	sp, r0, r4, lsr #9
    1568:	00000050 	andeq	r0, r0, r0, asr r0
    156c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1570:	8e028b03 	vmlahi.f64	d8, d2, d3
    1574:	0b0c4201 	bleq	311d80 <_bss_end+0x300d00>
    1578:	0d0c6204 	sfmeq	f6, 4, [ip, #-16]
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	0000001c 	andeq	r0, r0, ip, lsl r0
    1584:	0000144c 	andeq	r1, r0, ip, asr #8
    1588:	0000d4f4 	strdeq	sp, [r0], -r4
    158c:	00000054 	andeq	r0, r0, r4, asr r0
    1590:	8b080e42 	blhi	204ea0 <_bss_end+0x1f3e20>
    1594:	42018e02 	andmi	r8, r1, #2, 28
    1598:	5e040b0c 	vmlapl.f64	d0, d4, d12
    159c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    15a0:	00000018 	andeq	r0, r0, r8, lsl r0
    15a4:	0000144c 	andeq	r1, r0, ip, asr #8
    15a8:	0000d548 	andeq	sp, r0, r8, asr #10
    15ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    15b0:	8b080e42 	blhi	204ec0 <_bss_end+0x1f3e40>
    15b4:	42018e02 	andmi	r8, r1, #2, 28
    15b8:	00040b0c 	andeq	r0, r4, ip, lsl #22
    15bc:	0000000c 	andeq	r0, r0, ip
    15c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    15c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    15c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    15cc:	00000018 	andeq	r0, r0, r8, lsl r0
    15d0:	000015bc 			; <UNDEFINED> instruction: 0x000015bc
    15d4:	0000d564 	andeq	sp, r0, r4, ror #10
    15d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15dc:	8b080e42 	blhi	204eec <_bss_end+0x1f3e6c>
    15e0:	42018e02 	andmi	r8, r1, #2, 28
    15e4:	00040b0c 	andeq	r0, r4, ip, lsl #22
    15e8:	00000018 	andeq	r0, r0, r8, lsl r0
    15ec:	000015bc 			; <UNDEFINED> instruction: 0x000015bc
    15f0:	0000d580 	andeq	sp, r0, r0, lsl #11
    15f4:	0000003c 	andeq	r0, r0, ip, lsr r0
    15f8:	8b080e42 	blhi	204f08 <_bss_end+0x1f3e88>
    15fc:	42018e02 	andmi	r8, r1, #2, 28
    1600:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1604:	0000000c 	andeq	r0, r0, ip
    1608:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    160c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1610:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1614:	0000001c 	andeq	r0, r0, ip, lsl r0
    1618:	00001604 	andeq	r1, r0, r4, lsl #12
    161c:	0000d5bc 			; <UNDEFINED> instruction: 0x0000d5bc
    1620:	00000034 	andeq	r0, r0, r4, lsr r0
    1624:	8b080e42 	blhi	204f34 <_bss_end+0x1f3eb4>
    1628:	42018e02 	andmi	r8, r1, #2, 28
    162c:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1630:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1634:	0000001c 	andeq	r0, r0, ip, lsl r0
    1638:	00001604 	andeq	r1, r0, r4, lsl #12
    163c:	0000d5f0 	strdeq	sp, [r0], -r0
    1640:	00000068 	andeq	r0, r0, r8, rrx
    1644:	8b080e42 	blhi	204f54 <_bss_end+0x1f3ed4>
    1648:	42018e02 	andmi	r8, r1, #2, 28
    164c:	6a040b0c 	bvs	104284 <_bss_end+0xf3204>
    1650:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1654:	0000001c 	andeq	r0, r0, ip, lsl r0
    1658:	00001604 	andeq	r1, r0, r4, lsl #12
    165c:	0000d658 	andeq	sp, r0, r8, asr r6
    1660:	0000014c 	andeq	r0, r0, ip, asr #2
    1664:	8b040e42 	blhi	104f74 <_bss_end+0xf3ef4>
    1668:	0b0d4201 	bleq	351e74 <_bss_end+0x340df4>
    166c:	0d0d9e02 	stceq	14, cr9, [sp, #-8]
    1670:	000ecb42 	andeq	ip, lr, r2, asr #22
    1674:	0000001c 	andeq	r0, r0, ip, lsl r0
    1678:	00001604 	andeq	r1, r0, r4, lsl #12
    167c:	0000d7a4 	andeq	sp, r0, r4, lsr #15
    1680:	0000011c 	andeq	r0, r0, ip, lsl r1
    1684:	8b040e42 	blhi	104f94 <_bss_end+0xf3f14>
    1688:	0b0d4201 	bleq	351e94 <_bss_end+0x340e14>
    168c:	0d0d8602 	stceq	6, cr8, [sp, #-8]
    1690:	000ecb42 	andeq	ip, lr, r2, asr #22
    1694:	0000001c 	andeq	r0, r0, ip, lsl r0
    1698:	00001604 	andeq	r1, r0, r4, lsl #12
    169c:	0000d8c0 	andeq	sp, r0, r0, asr #17
    16a0:	0000004c 	andeq	r0, r0, ip, asr #32
    16a4:	8b080e42 	blhi	204fb4 <_bss_end+0x1f3f34>
    16a8:	42018e02 	andmi	r8, r1, #2, 28
    16ac:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    16b0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    16b4:	00000018 	andeq	r0, r0, r8, lsl r0
    16b8:	00001604 	andeq	r1, r0, r4, lsl #12
    16bc:	0000d90c 	andeq	sp, r0, ip, lsl #18
    16c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    16c4:	8b080e42 	blhi	204fd4 <_bss_end+0x1f3f54>
    16c8:	42018e02 	andmi	r8, r1, #2, 28
    16cc:	00040b0c 	andeq	r0, r4, ip, lsl #22
    16d0:	0000000c 	andeq	r0, r0, ip
    16d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16d8:	7c020001 	stcvc	0, cr0, [r2], {1}
    16dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    16e4:	000016d0 	ldrdeq	r1, [r0], -r0
    16e8:	0000d928 	andeq	sp, r0, r8, lsr #18
    16ec:	00000064 	andeq	r0, r0, r4, rrx
    16f0:	8b040e42 	blhi	105000 <_bss_end+0xf3f80>
    16f4:	0b0d4201 	bleq	351f00 <_bss_end+0x340e80>
    16f8:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    16fc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1700:	0000001c 	andeq	r0, r0, ip, lsl r0
    1704:	000016d0 	ldrdeq	r1, [r0], -r0
    1708:	0000d98c 	andeq	sp, r0, ip, lsl #19
    170c:	000000bc 	strheq	r0, [r0], -ip
    1710:	8b040e42 	blhi	105020 <_bss_end+0xf3fa0>
    1714:	0b0d4201 	bleq	351f20 <_bss_end+0x340ea0>
    1718:	0d0d5602 	stceq	6, cr5, [sp, #-8]
    171c:	000ecb42 	andeq	ip, lr, r2, asr #22
    1720:	0000001c 	andeq	r0, r0, ip, lsl r0
    1724:	000016d0 	ldrdeq	r1, [r0], -r0
    1728:	0000da48 	andeq	sp, r0, r8, asr #20
    172c:	000000e4 	andeq	r0, r0, r4, ror #1
    1730:	8b080e42 	blhi	205040 <_bss_end+0x1f3fc0>
    1734:	42018e02 	andmi	r8, r1, #2, 28
    1738:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    173c:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
    1740:	0000001c 	andeq	r0, r0, ip, lsl r0
    1744:	000016d0 	ldrdeq	r1, [r0], -r0
    1748:	0000db2c 	andeq	sp, r0, ip, lsr #22
    174c:	00000038 	andeq	r0, r0, r8, lsr r0
    1750:	8b080e42 	blhi	205060 <_bss_end+0x1f3fe0>
    1754:	42018e02 	andmi	r8, r1, #2, 28
    1758:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    175c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1760:	0000001c 	andeq	r0, r0, ip, lsl r0
    1764:	000016d0 	ldrdeq	r1, [r0], -r0
    1768:	0000db64 	andeq	sp, r0, r4, ror #22
    176c:	0000004c 	andeq	r0, r0, ip, asr #32
    1770:	8b080e42 	blhi	205080 <_bss_end+0x1f4000>
    1774:	42018e02 	andmi	r8, r1, #2, 28
    1778:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    177c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1780:	00000018 	andeq	r0, r0, r8, lsl r0
    1784:	000016d0 	ldrdeq	r1, [r0], -r0
    1788:	0000dbb0 			; <UNDEFINED> instruction: 0x0000dbb0
    178c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1790:	8b080e42 	blhi	2050a0 <_bss_end+0x1f4020>
    1794:	42018e02 	andmi	r8, r1, #2, 28
    1798:	00040b0c 	andeq	r0, r4, ip, lsl #22
    179c:	0000000c 	andeq	r0, r0, ip
    17a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17a4:	7c020001 	stcvc	0, cr0, [r2], {1}
    17a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    17b0:	0000179c 	muleq	r0, ip, r7
    17b4:	0000dbcc 	andeq	sp, r0, ip, asr #23
    17b8:	00000048 	andeq	r0, r0, r8, asr #32
    17bc:	8b040e42 	blhi	1050cc <_bss_end+0xf404c>
    17c0:	0b0d4201 	bleq	351fcc <_bss_end+0x340f4c>
    17c4:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    17c8:	00000ecb 	andeq	r0, r0, fp, asr #29
    17cc:	0000001c 	andeq	r0, r0, ip, lsl r0
    17d0:	0000179c 	muleq	r0, ip, r7
    17d4:	0000dc14 	andeq	sp, r0, r4, lsl ip
    17d8:	00000044 	andeq	r0, r0, r4, asr #32
    17dc:	8b040e42 	blhi	1050ec <_bss_end+0xf406c>
    17e0:	0b0d4201 	bleq	351fec <_bss_end+0x340f6c>
    17e4:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    17e8:	00000ecb 	andeq	r0, r0, fp, asr #29
    17ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    17f0:	0000179c 	muleq	r0, ip, r7
    17f4:	0000dc58 	andeq	sp, r0, r8, asr ip
    17f8:	00000114 	andeq	r0, r0, r4, lsl r1
    17fc:	8b080e42 	blhi	20510c <_bss_end+0x1f408c>
    1800:	42018e02 	andmi	r8, r1, #2, 28
    1804:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1808:	080d0c82 	stmdaeq	sp, {r1, r7, sl, fp}
    180c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1810:	0000179c 	muleq	r0, ip, r7
    1814:	0000dd6c 	andeq	sp, r0, ip, ror #26
    1818:	00000200 	andeq	r0, r0, r0, lsl #4
    181c:	8b080e42 	blhi	20512c <_bss_end+0x1f40ac>
    1820:	42018e02 	andmi	r8, r1, #2, 28
    1824:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1828:	080d0cea 	stmdaeq	sp, {r1, r3, r5, r6, r7, sl, fp}
    182c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1830:	0000179c 	muleq	r0, ip, r7
    1834:	0000df6c 	andeq	sp, r0, ip, ror #30
    1838:	00000168 	andeq	r0, r0, r8, ror #2
    183c:	8b080e42 	blhi	20514c <_bss_end+0x1f40cc>
    1840:	42018e02 	andmi	r8, r1, #2, 28
    1844:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1848:	080d0cae 	stmdaeq	sp, {r1, r2, r3, r5, r7, sl, fp}
    184c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1850:	0000179c 	muleq	r0, ip, r7
    1854:	0000e0d4 	ldrdeq	lr, [r0], -r4
    1858:	00000104 	andeq	r0, r0, r4, lsl #2
    185c:	8b080e42 	blhi	20516c <_bss_end+0x1f40ec>
    1860:	42018e02 	andmi	r8, r1, #2, 28
    1864:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1868:	080d0c7c 	stmdaeq	sp, {r2, r3, r4, r5, r6, sl, fp}
    186c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1870:	0000179c 	muleq	r0, ip, r7
    1874:	0000e1d8 	ldrdeq	lr, [r0], -r8
    1878:	000000ac 	andeq	r0, r0, ip, lsr #1
    187c:	8b080e42 	blhi	20518c <_bss_end+0x1f410c>
    1880:	42018e02 	andmi	r8, r1, #2, 28
    1884:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1888:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
    188c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1890:	0000179c 	muleq	r0, ip, r7
    1894:	0000e284 	andeq	lr, r0, r4, lsl #5
    1898:	00000094 	muleq	r0, r4, r0
    189c:	8b080e42 	blhi	2051ac <_bss_end+0x1f412c>
    18a0:	42018e02 	andmi	r8, r1, #2, 28
    18a4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    18a8:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
    18ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    18b0:	0000179c 	muleq	r0, ip, r7
    18b4:	0000e318 	andeq	lr, r0, r8, lsl r3
    18b8:	00000064 	andeq	r0, r0, r4, rrx
    18bc:	8b040e42 	blhi	1051cc <_bss_end+0xf414c>
    18c0:	0b0d4201 	bleq	3520cc <_bss_end+0x34104c>
    18c4:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    18c8:	00000ecb 	andeq	r0, r0, fp, asr #29
    18cc:	00000020 	andeq	r0, r0, r0, lsr #32
    18d0:	0000179c 	muleq	r0, ip, r7
    18d4:	0000e37c 	andeq	lr, r0, ip, ror r3
    18d8:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    18dc:	8b080e42 	blhi	2051ec <_bss_end+0x1f416c>
    18e0:	42018e02 	andmi	r8, r1, #2, 28
    18e4:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    18e8:	0d0c01d6 	stfeqs	f0, [ip, #-856]	; 0xfffffca8
    18ec:	00000008 	andeq	r0, r0, r8
    18f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    18f4:	0000179c 	muleq	r0, ip, r7
    18f8:	0000e7a0 	andeq	lr, r0, r0, lsr #15
    18fc:	0000002c 	andeq	r0, r0, ip, lsr #32
    1900:	8b080e42 	blhi	205210 <_bss_end+0x1f4190>
    1904:	42018e02 	andmi	r8, r1, #2, 28
    1908:	50040b0c 	andpl	r0, r4, ip, lsl #22
    190c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1910:	0000001c 	andeq	r0, r0, ip, lsl r0
    1914:	0000179c 	muleq	r0, ip, r7
    1918:	0000e7cc 	andeq	lr, r0, ip, asr #15
    191c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1920:	8b080e42 	blhi	205230 <_bss_end+0x1f41b0>
    1924:	42018e02 	andmi	r8, r1, #2, 28
    1928:	50040b0c 	andpl	r0, r4, ip, lsl #22
    192c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1930:	0000001c 	andeq	r0, r0, ip, lsl r0
    1934:	0000179c 	muleq	r0, ip, r7
    1938:	0000e738 	andeq	lr, r0, r8, lsr r7
    193c:	0000004c 	andeq	r0, r0, ip, asr #32
    1940:	8b080e42 	blhi	205250 <_bss_end+0x1f41d0>
    1944:	42018e02 	andmi	r8, r1, #2, 28
    1948:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    194c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1950:	00000018 	andeq	r0, r0, r8, lsl r0
    1954:	0000179c 	muleq	r0, ip, r7
    1958:	0000e784 	andeq	lr, r0, r4, lsl #15
    195c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1960:	8b080e42 	blhi	205270 <_bss_end+0x1f41f0>
    1964:	42018e02 	andmi	r8, r1, #2, 28
    1968:	00040b0c 	andeq	r0, r4, ip, lsl #22
    196c:	0000000c 	andeq	r0, r0, ip
    1970:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1974:	7c020001 	stcvc	0, cr0, [r2], {1}
    1978:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    197c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1980:	0000196c 	andeq	r1, r0, ip, ror #18
    1984:	0000e8c4 	andeq	lr, r0, r4, asr #17
    1988:	00000068 	andeq	r0, r0, r8, rrx
    198c:	8b040e42 	blhi	10529c <_bss_end+0xf421c>
    1990:	0b0d4201 	bleq	35219c <_bss_end+0x34111c>
    1994:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    1998:	00000ecb 	andeq	r0, r0, fp, asr #29
    199c:	0000001c 	andeq	r0, r0, ip, lsl r0
    19a0:	0000196c 	andeq	r1, r0, ip, ror #18
    19a4:	0000e92c 	andeq	lr, r0, ip, lsr #18
    19a8:	00000058 	andeq	r0, r0, r8, asr r0
    19ac:	8b080e42 	blhi	2052bc <_bss_end+0x1f423c>
    19b0:	42018e02 	andmi	r8, r1, #2, 28
    19b4:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    19b8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    19bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    19c0:	0000196c 	andeq	r1, r0, ip, ror #18
    19c4:	0000e984 	andeq	lr, r0, r4, lsl #19
    19c8:	00000058 	andeq	r0, r0, r8, asr r0
    19cc:	8b080e42 	blhi	2052dc <_bss_end+0x1f425c>
    19d0:	42018e02 	andmi	r8, r1, #2, 28
    19d4:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    19d8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    19dc:	0000000c 	andeq	r0, r0, ip
    19e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19e4:	7c020001 	stcvc	0, cr0, [r2], {1}
    19e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19ec:	00000018 	andeq	r0, r0, r8, lsl r0
    19f0:	000019dc 	ldrdeq	r1, [r0], -ip
    19f4:	0000e9dc 	ldrdeq	lr, [r0], -ip
    19f8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    19fc:	8b080e42 	blhi	20530c <_bss_end+0x1f428c>
    1a00:	42018e02 	andmi	r8, r1, #2, 28
    1a04:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a08:	00000018 	andeq	r0, r0, r8, lsl r0
    1a0c:	000019dc 	ldrdeq	r1, [r0], -ip
    1a10:	0000eacc 	andeq	lr, r0, ip, asr #21
    1a14:	00000140 	andeq	r0, r0, r0, asr #2
    1a18:	8b080e42 	blhi	205328 <_bss_end+0x1f42a8>
    1a1c:	42018e02 	andmi	r8, r1, #2, 28
    1a20:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a24:	00000018 	andeq	r0, r0, r8, lsl r0
    1a28:	000019dc 	ldrdeq	r1, [r0], -ip
    1a2c:	0000ec0c 	andeq	lr, r0, ip, lsl #24
    1a30:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a34:	8b080e42 	blhi	205344 <_bss_end+0x1f42c4>
    1a38:	42018e02 	andmi	r8, r1, #2, 28
    1a3c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a40:	00000018 	andeq	r0, r0, r8, lsl r0
    1a44:	000019dc 	ldrdeq	r1, [r0], -ip
    1a48:	0000ecfc 	strdeq	lr, [r0], -ip
    1a4c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a50:	8b080e42 	blhi	205360 <_bss_end+0x1f42e0>
    1a54:	42018e02 	andmi	r8, r1, #2, 28
    1a58:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a5c:	00000018 	andeq	r0, r0, r8, lsl r0
    1a60:	000019dc 	ldrdeq	r1, [r0], -ip
    1a64:	0000edec 	andeq	lr, r0, ip, ror #27
    1a68:	000000ec 	andeq	r0, r0, ip, ror #1
    1a6c:	8b080e42 	blhi	20537c <_bss_end+0x1f42fc>
    1a70:	42018e02 	andmi	r8, r1, #2, 28
    1a74:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1a78:	0000000c 	andeq	r0, r0, ip
    1a7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a80:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a88:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a8c:	00001a78 	andeq	r1, r0, r8, ror sl
    1a90:	0000eed8 	ldrdeq	lr, [r0], -r8
    1a94:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a98:	8b040e42 	blhi	1053a8 <_bss_end+0xf4328>
    1a9c:	0b0d4201 	bleq	3522a8 <_bss_end+0x341228>
    1aa0:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1aa4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1aa8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1aac:	00001a78 	andeq	r1, r0, r8, ror sl
    1ab0:	0000ef04 	andeq	lr, r0, r4, lsl #30
    1ab4:	00000044 	andeq	r0, r0, r4, asr #32
    1ab8:	8b040e42 	blhi	1053c8 <_bss_end+0xf4348>
    1abc:	0b0d4201 	bleq	3522c8 <_bss_end+0x341248>
    1ac0:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
    1ac4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1ac8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1acc:	00001a78 	andeq	r1, r0, r8, ror sl
    1ad0:	0000ef48 	andeq	lr, r0, r8, asr #30
    1ad4:	00000050 	andeq	r0, r0, r0, asr r0
    1ad8:	8b040e42 	blhi	1053e8 <_bss_end+0xf4368>
    1adc:	0b0d4201 	bleq	3522e8 <_bss_end+0x341268>
    1ae0:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1ae4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1ae8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1aec:	00001a78 	andeq	r1, r0, r8, ror sl
    1af0:	0000ef98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    1af4:	00000050 	andeq	r0, r0, r0, asr r0
    1af8:	8b040e42 	blhi	105408 <_bss_end+0xf4388>
    1afc:	0b0d4201 	bleq	352308 <_bss_end+0x341288>
    1b00:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1b04:	00000ecb 	andeq	r0, r0, fp, asr #29
    1b08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b0c:	00001a78 	andeq	r1, r0, r8, ror sl
    1b10:	0000efe8 	andeq	lr, r0, r8, ror #31
    1b14:	0000002c 	andeq	r0, r0, ip, lsr #32
    1b18:	8b040e42 	blhi	105428 <_bss_end+0xf43a8>
    1b1c:	0b0d4201 	bleq	352328 <_bss_end+0x3412a8>
    1b20:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
    1b24:	00000ecb 	andeq	r0, r0, fp, asr #29
    1b28:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b2c:	00001a78 	andeq	r1, r0, r8, ror sl
    1b30:	0000f014 	andeq	pc, r0, r4, lsl r0	; <UNPREDICTABLE>
    1b34:	00000050 	andeq	r0, r0, r0, asr r0
    1b38:	8b040e42 	blhi	105448 <_bss_end+0xf43c8>
    1b3c:	0b0d4201 	bleq	352348 <_bss_end+0x3412c8>
    1b40:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
    1b44:	00000ecb 	andeq	r0, r0, fp, asr #29
    1b48:	0000000c 	andeq	r0, r0, ip
    1b4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b50:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b54:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b58:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b5c:	00001b48 	andeq	r1, r0, r8, asr #22
    1b60:	0000f064 	andeq	pc, r0, r4, rrx
    1b64:	00000174 	andeq	r0, r0, r4, ror r1
    1b68:	8b080e42 	blhi	205478 <_bss_end+0x1f43f8>
    1b6c:	42018e02 	andmi	r8, r1, #2, 28
    1b70:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1b74:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
    1b78:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b7c:	00001b48 	andeq	r1, r0, r8, asr #22
    1b80:	0000f1d8 	ldrdeq	pc, [r0], -r8
    1b84:	0000009c 	muleq	r0, ip, r0
    1b88:	8b040e42 	blhi	105498 <_bss_end+0xf4418>
    1b8c:	0b0d4201 	bleq	352398 <_bss_end+0x341318>
    1b90:	0d0d4602 	stceq	6, cr4, [sp, #-8]
    1b94:	000ecb42 	andeq	ip, lr, r2, asr #22
    1b98:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b9c:	00001b48 	andeq	r1, r0, r8, asr #22
    1ba0:	0000f274 	andeq	pc, r0, r4, ror r2	; <UNPREDICTABLE>
    1ba4:	000000c0 	andeq	r0, r0, r0, asr #1
    1ba8:	8b040e42 	blhi	1054b8 <_bss_end+0xf4438>
    1bac:	0b0d4201 	bleq	3523b8 <_bss_end+0x341338>
    1bb0:	0d0d5802 	stceq	8, cr5, [sp, #-8]
    1bb4:	000ecb42 	andeq	ip, lr, r2, asr #22
    1bb8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bbc:	00001b48 	andeq	r1, r0, r8, asr #22
    1bc0:	0000f334 	andeq	pc, r0, r4, lsr r3	; <UNPREDICTABLE>
    1bc4:	000000ac 	andeq	r0, r0, ip, lsr #1
    1bc8:	8b040e42 	blhi	1054d8 <_bss_end+0xf4458>
    1bcc:	0b0d4201 	bleq	3523d8 <_bss_end+0x341358>
    1bd0:	0d0d4e02 	stceq	14, cr4, [sp, #-8]
    1bd4:	000ecb42 	andeq	ip, lr, r2, asr #22
    1bd8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bdc:	00001b48 	andeq	r1, r0, r8, asr #22
    1be0:	0000f3e0 	andeq	pc, r0, r0, ror #7
    1be4:	00000054 	andeq	r0, r0, r4, asr r0
    1be8:	8b040e42 	blhi	1054f8 <_bss_end+0xf4478>
    1bec:	0b0d4201 	bleq	3523f8 <_bss_end+0x341378>
    1bf0:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
    1bf4:	00000ecb 	andeq	r0, r0, fp, asr #29
    1bf8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bfc:	00001b48 	andeq	r1, r0, r8, asr #22
    1c00:	0000f434 	andeq	pc, r0, r4, lsr r4	; <UNPREDICTABLE>
    1c04:	00000068 	andeq	r0, r0, r8, rrx
    1c08:	8b040e42 	blhi	105518 <_bss_end+0xf4498>
    1c0c:	0b0d4201 	bleq	352418 <_bss_end+0x341398>
    1c10:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
    1c14:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c18:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c1c:	00001b48 	andeq	r1, r0, r8, asr #22
    1c20:	0000f49c 	muleq	r0, ip, r4
    1c24:	00000080 	andeq	r0, r0, r0, lsl #1
    1c28:	8b040e42 	blhi	105538 <_bss_end+0xf44b8>
    1c2c:	0b0d4201 	bleq	352438 <_bss_end+0x3413b8>
    1c30:	420d0d78 	andmi	r0, sp, #120, 26	; 0x1e00
    1c34:	00000ecb 	andeq	r0, r0, fp, asr #29
    1c38:	0000000c 	andeq	r0, r0, ip
    1c3c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c40:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c44:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c48:	0000000c 	andeq	r0, r0, ip
    1c4c:	00001c38 	andeq	r1, r0, r8, lsr ip
    1c50:	0000f51c 	andeq	pc, r0, ip, lsl r5	; <UNPREDICTABLE>
    1c54:	00000004 	andeq	r0, r0, r4
    1c58:	0000000c 	andeq	r0, r0, ip
    1c5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c60:	7c010001 	stcvc	0, cr0, [r1], {1}
    1c64:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c68:	0000000c 	andeq	r0, r0, ip
    1c6c:	00001c58 	andeq	r1, r0, r8, asr ip
    1c70:	0000f520 	andeq	pc, r0, r0, lsr #10
    1c74:	000001ec 	andeq	r0, r0, ip, ror #3

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	00008a10 	andeq	r8, r0, r0, lsl sl
   4:	000090d8 	ldrdeq	r9, [r0], -r8
   8:	000090d8 	ldrdeq	r9, [r0], -r8
   c:	0000910c 	andeq	r9, r0, ip, lsl #2
  10:	0000910c 	andeq	r9, r0, ip, lsl #2
  14:	00009154 	andeq	r9, r0, r4, asr r1
	...
  20:	00009154 	andeq	r9, r0, r4, asr r1
  24:	0000979c 	muleq	r0, ip, r7
  28:	0000979c 	muleq	r0, ip, r7
  2c:	000097d4 	ldrdeq	r9, [r0], -r4
  30:	000097d4 	ldrdeq	r9, [r0], -r4
  34:	0000985c 	andeq	r9, r0, ip, asr r8
  38:	0000985c 	andeq	r9, r0, ip, asr r8
  3c:	00009888 	andeq	r9, r0, r8, lsl #17
	...
  48:	0000a640 	andeq	sl, r0, r0, asr #12
  4c:	0000a67c 	andeq	sl, r0, ip, ror r6
  50:	0000aa68 	andeq	sl, r0, r8, ror #20
  54:	0000aa70 	andeq	sl, r0, r0, ror sl
	...
  60:	0000a67c 	andeq	sl, r0, ip, ror r6
  64:	0000a730 	andeq	sl, r0, r0, lsr r7
  68:	0000aa70 	andeq	sl, r0, r0, ror sl
  6c:	0000aa80 	andeq	sl, r0, r0, lsl #21
	...
  78:	0000a730 	andeq	sl, r0, r0, lsr r7
  7c:	0000aa60 	andeq	sl, r0, r0, ror #20
  80:	0000aa80 	andeq	sl, r0, r0, lsl #21
  84:	0000aa8c 	andeq	sl, r0, ip, lsl #21
	...
  90:	00009888 	andeq	r9, r0, r8, lsl #17
  94:	0000ab04 	andeq	sl, r0, r4, lsl #22
  98:	0000ab04 	andeq	sl, r0, r4, lsl #22
  9c:	0000ab34 	andeq	sl, r0, r4, lsr fp
  a0:	0000ab34 	andeq	sl, r0, r4, lsr fp
  a4:	0000aba4 	andeq	sl, r0, r4, lsr #23
  a8:	0000aba4 	andeq	sl, r0, r4, lsr #23
  ac:	0000ac14 	andeq	sl, r0, r4, lsl ip
  b0:	0000ac14 	andeq	sl, r0, r4, lsl ip
  b4:	0000ac80 	andeq	sl, r0, r0, lsl #25
	...
  c0:	0000b9b8 			; <UNDEFINED> instruction: 0x0000b9b8
  c4:	0000c214 	andeq	ip, r0, r4, lsl r2
  c8:	0000c214 	andeq	ip, r0, r4, lsl r2
  cc:	0000c250 	andeq	ip, r0, r0, asr r2
  d0:	0000c250 	andeq	ip, r0, r0, asr r2
  d4:	0000c27c 	andeq	ip, r0, ip, ror r2
	...
  e0:	0000c27c 	andeq	ip, r0, ip, ror r2
  e4:	0000c2a8 	andeq	ip, r0, r8, lsr #5
  e8:	0000c2a8 	andeq	ip, r0, r8, lsr #5
  ec:	0000c2d4 	ldrdeq	ip, [r0], -r4
  f0:	0000c2d4 	ldrdeq	ip, [r0], -r4
  f4:	0000c2f8 	strdeq	ip, [r0], -r8
  f8:	0000c2f8 	strdeq	ip, [r0], -r8
  fc:	0000c324 	andeq	ip, r0, r4, lsr #6
 100:	0000c324 	andeq	ip, r0, r4, lsr #6
 104:	0000c354 	andeq	ip, r0, r4, asr r3
 108:	0000ab04 	andeq	sl, r0, r4, lsl #22
 10c:	0000ab34 	andeq	sl, r0, r4, lsr fp
 110:	0000c354 	andeq	ip, r0, r4, asr r3
 114:	0000c388 	andeq	ip, r0, r8, lsl #7
 118:	0000c388 	andeq	ip, r0, r8, lsl #7
 11c:	0000c3bc 			; <UNDEFINED> instruction: 0x0000c3bc
 120:	0000c3bc 			; <UNDEFINED> instruction: 0x0000c3bc
 124:	0000c3f0 	strdeq	ip, [r0], -r0
 128:	0000c3f0 	strdeq	ip, [r0], -r0
 12c:	0000c46c 	andeq	ip, r0, ip, ror #8
 130:	0000c46c 	andeq	ip, r0, ip, ror #8
 134:	0000c4b0 			; <UNDEFINED> instruction: 0x0000c4b0
 138:	0000c4b0 			; <UNDEFINED> instruction: 0x0000c4b0
 13c:	0000c4e4 	andeq	ip, r0, r4, ror #9
 140:	0000c4e4 	andeq	ip, r0, r4, ror #9
 144:	0000c564 	andeq	ip, r0, r4, ror #10
 148:	0000c564 	andeq	ip, r0, r4, ror #10
 14c:	0000c5e0 	andeq	ip, r0, r0, ror #11
 150:	0000c5e0 	andeq	ip, r0, r0, ror #11
 154:	0000c67c 	andeq	ip, r0, ip, ror r6
 158:	0000c67c 	andeq	ip, r0, ip, ror r6
 15c:	0000c6a8 	andeq	ip, r0, r8, lsr #13
 160:	0000c6a8 	andeq	ip, r0, r8, lsr #13
 164:	0000c6c8 	andeq	ip, r0, r8, asr #13
 168:	0000c6c8 	andeq	ip, r0, r8, asr #13
 16c:	0000c820 	andeq	ip, r0, r0, lsr #16
 170:	0000c820 	andeq	ip, r0, r0, lsr #16
 174:	0000c86c 	andeq	ip, r0, ip, ror #16
 178:	0000c86c 	andeq	ip, r0, ip, ror #16
 17c:	0000c8b0 			; <UNDEFINED> instruction: 0x0000c8b0
 180:	0000c8b0 			; <UNDEFINED> instruction: 0x0000c8b0
 184:	0000c8e4 	andeq	ip, r0, r4, ror #17
 188:	0000c8e4 	andeq	ip, r0, r4, ror #17
 18c:	0000c910 	andeq	ip, r0, r0, lsl r9
 190:	0000c910 	andeq	ip, r0, r0, lsl r9
 194:	0000c978 	andeq	ip, r0, r8, ror r9
 198:	0000c978 	andeq	ip, r0, r8, ror r9
 19c:	0000c9c0 	andeq	ip, r0, r0, asr #19
 1a0:	0000c9c0 	andeq	ip, r0, r0, asr #19
 1a4:	0000ca04 	andeq	ip, r0, r4, lsl #20
 1a8:	0000ca04 	andeq	ip, r0, r4, lsl #20
 1ac:	0000ca24 	andeq	ip, r0, r4, lsr #20
 1b0:	0000ca24 	andeq	ip, r0, r4, lsr #20
 1b4:	0000ca8c 	andeq	ip, r0, ip, lsl #21
 1b8:	0000ca8c 	andeq	ip, r0, ip, lsl #21
 1bc:	0000cad4 	ldrdeq	ip, [r0], -r4
 1c0:	0000cad4 	ldrdeq	ip, [r0], -r4
 1c4:	0000cb18 	andeq	ip, r0, r8, lsl fp
 1c8:	0000cb18 	andeq	ip, r0, r8, lsl fp
 1cc:	0000cb4c 	andeq	ip, r0, ip, asr #22
 1d0:	0000cb4c 	andeq	ip, r0, ip, asr #22
 1d4:	0000cba4 	andeq	ip, r0, r4, lsr #23
 1d8:	0000cba4 	andeq	ip, r0, r4, lsr #23
 1dc:	0000cc14 	andeq	ip, r0, r4, lsl ip
 1e0:	0000cc14 	andeq	ip, r0, r4, lsl ip
 1e4:	0000cc6c 	andeq	ip, r0, ip, ror #24
 1e8:	0000cc6c 	andeq	ip, r0, ip, ror #24
 1ec:	0000cc98 	muleq	r0, r8, ip
 1f0:	0000cc98 	muleq	r0, r8, ip
 1f4:	0000ccb8 			; <UNDEFINED> instruction: 0x0000ccb8
 1f8:	0000ccb8 			; <UNDEFINED> instruction: 0x0000ccb8
 1fc:	0000cd24 	andeq	ip, r0, r4, lsr #26
 200:	0000cd24 	andeq	ip, r0, r4, lsr #26
 204:	0000cd6c 	andeq	ip, r0, ip, ror #26
 208:	0000cd6c 	andeq	ip, r0, ip, ror #26
 20c:	0000cdb0 			; <UNDEFINED> instruction: 0x0000cdb0
 210:	0000cdb0 			; <UNDEFINED> instruction: 0x0000cdb0
 214:	0000cde4 	andeq	ip, r0, r4, ror #27
 218:	0000cde4 	andeq	ip, r0, r4, ror #27
 21c:	0000ce10 	andeq	ip, r0, r0, lsl lr
 220:	0000ce10 	andeq	ip, r0, r0, lsl lr
 224:	0000ce80 	andeq	ip, r0, r0, lsl #29
 228:	0000ce80 	andeq	ip, r0, r0, lsl #29
 22c:	0000ced8 	ldrdeq	ip, [r0], -r8
 230:	0000ced8 	ldrdeq	ip, [r0], -r8
 234:	0000cf04 	andeq	ip, r0, r4, lsl #30
 238:	0000cf04 	andeq	ip, r0, r4, lsl #30
 23c:	0000cf24 	andeq	ip, r0, r4, lsr #30
 240:	0000cf24 	andeq	ip, r0, r4, lsr #30
 244:	0000cf90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
 248:	0000cf90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
 24c:	0000cfcc 	andeq	ip, r0, ip, asr #31
 250:	0000cfcc 	andeq	ip, r0, ip, asr #31
 254:	0000d010 	andeq	sp, r0, r0, lsl r0
 258:	0000d010 	andeq	sp, r0, r0, lsl r0
 25c:	0000d044 	andeq	sp, r0, r4, asr #32
 260:	0000d044 	andeq	sp, r0, r4, asr #32
 264:	0000d12c 	andeq	sp, r0, ip, lsr #2
 268:	0000d12c 	andeq	sp, r0, ip, lsr #2
 26c:	0000d158 	andeq	sp, r0, r8, asr r1
 270:	0000d158 	andeq	sp, r0, r8, asr r1
 274:	0000d1b0 			; <UNDEFINED> instruction: 0x0000d1b0
 278:	0000d1b0 			; <UNDEFINED> instruction: 0x0000d1b0
 27c:	0000d1dc 	ldrdeq	sp, [r0], -ip
 280:	0000d1dc 	ldrdeq	sp, [r0], -ip
 284:	0000d1fc 	strdeq	sp, [r0], -ip
 288:	0000d1fc 	strdeq	sp, [r0], -ip
 28c:	0000d280 	andeq	sp, r0, r0, lsl #5
	...
 298:	0000e3cc 	andeq	lr, r0, ip, asr #7
 29c:	0000e460 	andeq	lr, r0, r0, ror #8
 2a0:	0000e700 	andeq	lr, r0, r0, lsl #14
 2a4:	0000e710 	andeq	lr, r0, r0, lsl r7
	...
 2b0:	0000dbcc 	andeq	sp, r0, ip, asr #23
 2b4:	0000e7a0 	andeq	lr, r0, r0, lsr #15
 2b8:	0000e7a0 	andeq	lr, r0, r0, lsr #15
 2bc:	0000e7cc 	andeq	lr, r0, ip, asr #15
 2c0:	0000e7cc 	andeq	lr, r0, ip, asr #15
 2c4:	0000e7f8 	strdeq	lr, [r0], -r8
	...
 2d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2d4:	00000000 	andeq	r0, r0, r0
 2d8:	00008000 	andeq	r8, r0, r0
 2dc:	000080ac 	andeq	r8, r0, ip, lsr #1
 2e0:	0000e854 	andeq	lr, r0, r4, asr r8
 2e4:	0000e8c4 	andeq	lr, r0, r4, asr #17
	...
 2f0:	0000f51c 	andeq	pc, r0, ip, lsl r5	; <UNPREDICTABLE>
 2f4:	0000f520 	andeq	pc, r0, r0, lsr #10
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00000000 	andeq	r0, r0, r0
   4:	0000f51c 	andeq	pc, r0, ip, lsl r5	; <UNPREDICTABLE>
   8:	0000f51f 	andeq	pc, r0, pc, lsl r5	; <UNPREDICTABLE>
   c:	1f500001 	svcne	0x00500001
  10:	200000f5 	strdcs	r0, [r0], -r5
  14:	040000f5 	streq	r0, [r0], #-245	; 0xffffff0b
  18:	5001f300 	andpl	pc, r1, r0, lsl #6
  1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
  20:	00000000 	andeq	r0, r0, r0
	...
